uint64_t sub_10000536C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  return sub_100005384(v1, a1);
}

uint64_t sub_100005384@<X0>(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  a2[3] = *a1;
  a2[4] = &off_1005FA0E0;
  *a2 = a1;
  return swift_retain(a1);
}

void sub_1000053B0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[9];

  v6[0] = &unk_10052B828;
  sub_100005494(319, (unint64_t *)&qword_1006506A0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = &unk_10052B840;
    v6[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v6[4] = &unk_10052B858;
    v6[5] = (char *)&value witness table for Builtin.Int64 + 64;
    v6[6] = &unk_10052B858;
    v6[7] = &unk_10052B858;
    sub_100005494(319, &qword_1006506A8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
    if (v5 <= 0x3F)
    {
      v6[8] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 9, v6, a1 + 80);
    }
  }
}

void sub_100005494(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1000054E0()
{
  return swift_unknownObjectRetain();
}

void sub_100005508(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)();
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  char isEscapingClosureAtFileLocation;
  char *v25;
  void **aBlock;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  void *v29;
  uint64_t (*v30)();
  uint64_t v31;
  char v32[24];

  v3 = sub_10002A750((uint64_t *)&unk_100646680);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v25 - v7;
  v9 = (uint64_t)&v1[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectedPinnedList];
  swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectedPinnedList], v32, 0, 0);
  sub_10000735C(v9, (uint64_t)v8, (uint64_t *)&unk_100646680);
  v10 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10);
  sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100646680);
  if (v12 != 1)
  {
    v13 = (void *)objc_opt_self(UIView);
    if ((a1 & 1) != 0)
    {
      v14 = swift_allocObject(&unk_1005F90F8, 24, 7);
      *(_QWORD *)(v14 + 16) = v1;
      v30 = sub_100250944;
      v31 = v14;
      aBlock = _NSConcreteStackBlock;
      v27 = 1107296256;
      v28 = sub_100006378;
      v29 = &unk_1005F9110;
      v15 = _Block_copy(&aBlock);
      v16 = v31;
      v17 = v1;
      swift_release(v16);
      objc_msgSend(v13, "animateWithDuration:animations:", v15, 0.5);
      _Block_release(v15);
      v18 = 0;
      v19 = 0;
    }
    else
    {
      v25 = v6;
      v19 = swift_allocObject(&unk_1005F9080, 24, 7);
      *(_QWORD *)(v19 + 16) = v1;
      v20 = swift_allocObject(&unk_1005F90A8, 32, 7);
      v18 = sub_1002508BC;
      *(_QWORD *)(v20 + 16) = sub_1002508BC;
      *(_QWORD *)(v20 + 24) = v19;
      v30 = sub_1000381EC;
      v31 = v20;
      aBlock = _NSConcreteStackBlock;
      v27 = 1107296256;
      v28 = sub_10001B258;
      v29 = &unk_1005F90C0;
      v21 = _Block_copy(&aBlock);
      v22 = v31;
      v23 = v1;
      swift_retain(v20);
      objc_msgSend(v13, "performWithoutAnimation:", v21, swift_release(v22).n128_f64[0]);
      _Block_release(v21);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v20, "", 122, 121, 44, 1);
      swift_release(v20);
      if ((isEscapingClosureAtFileLocation & 1) != 0)
      {
        __break(1u);
        return;
      }
      v6 = v25;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v6, 1, 1, v10);
    swift_beginAccess(v9, &aBlock, 33, 0);
    sub_100041F2C((uint64_t)v6, v9, (uint64_t *)&unk_100646680);
    swift_endAccess(&aBlock);
    sub_1000381B8((uint64_t)v18, v19);
  }
}

uint64_t sub_100005804@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int EnumCaseMultiPayload;
  uint64_t *v30;
  _OWORD *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t *v55;
  char *v56;
  _OWORD v57[12];
  _OWORD v58[2];
  _BYTE v59[224];
  _BYTE v60[232];

  v3 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_100665590);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v53 - v11;
  v13 = sub_10002A750(&qword_1006561E0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v53 - v17;
  result = UIApp;
  if (UIApp)
  {
    if ((objc_msgSend(UIApp, "launchedToTest") & 1) != 0)
    {
      v21 = type metadata accessor for TTRIAccountsListsSelection(0);
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a1, 1, 1, v21);
    }
    else
    {
      v53 = v4;
      v54 = v6;
      v55 = a1;
      v56 = v16;
      v22 = v1[23];
      v23 = v1[9];
      ObjectType = swift_getObjectType(v1[8], v20);
      v25 = *(void (**)(uint64_t, uint64_t))(v23 + 16);
      swift_retain(v22);
      v25(ObjectType, v23);
      v26 = (uint64_t)v56;
      (*(void (**)(uint64_t, uint64_t))(v23 + 24))(ObjectType, v23);
      TTRAccountsListsViewModel.fallbackSelectionForEmptySelection(lastSelectedListInWindow:globalLastSelectedList:)(v12, v10);
      swift_release(v22);
      sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100665590);
      sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_100665590);
      sub_10000735C((uint64_t)v18, v26, &qword_1006561E0);
      v27 = type metadata accessor for TTRAccountsListsViewModel.FallbackSelection(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v26, 1, v27) == 1)
      {
        sub_1000073A0((uint64_t)v18, &qword_1006561E0);
        v28 = type metadata accessor for TTRIAccountsListsSelection(0);
        return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v55, 1, 1, v28);
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v26, v27);
        v30 = v55;
        if (EnumCaseMultiPayload)
        {
          if (EnumCaseMultiPayload == 1)
          {
            sub_1000073A0((uint64_t)v18, &qword_1006561E0);
            sub_1003485B0(v26, (uint64_t)v59);
            sub_1003485B0((uint64_t)v59, (uint64_t)v60);
            if (sub_100075D24((uint64_t)v60) == 1)
            {
              v31 = (_OWORD *)sub_100075D30((uint64_t)v60);
              v32 = v31[1];
              v57[0] = *v31;
              v57[1] = v32;
              v33 = v31[5];
              v35 = v31[2];
              v34 = v31[3];
              v57[4] = v31[4];
              v57[5] = v33;
              v57[2] = v35;
              v57[3] = v34;
              v36 = v31[9];
              v38 = v31[6];
              v37 = v31[7];
              v57[8] = v31[8];
              v57[9] = v36;
              v57[6] = v38;
              v57[7] = v37;
              v40 = v31[11];
              v39 = v31[12];
              v41 = v31[10];
              *(_OWORD *)((char *)v58 + 10) = *(_OWORD *)((char *)v31 + 202);
              v57[11] = v40;
              v58[0] = v39;
              v57[10] = v41;
              sub_10007636C((uint64_t)v57);
            }
            else
            {
              LOBYTE(v57[0]) = *(_BYTE *)sub_100075D30((uint64_t)v60);
              sub_1000763A4((uint64_t)v57);
            }
            sub_100075CE8((uint64_t)v57, (uint64_t)v30);
            v48 = type metadata accessor for TTRIAccountsListsSelection(0);
            v49 = v30;
            v50 = v48;
            v51 = 1;
          }
          else
          {
            sub_1000073A0((uint64_t)v18, &qword_1006561E0);
            v52 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v30, v26, v52);
            v48 = type metadata accessor for TTRIAccountsListsSelection(0);
            v49 = v30;
            v50 = v48;
            v51 = 2;
          }
        }
        else
        {
          v42 = v26;
          v43 = (uint64_t)v54;
          sub_10001F580(v42, (uint64_t)v54, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          v44 = sub_10002A750(&qword_100646A70);
          v45 = *(unsigned __int8 *)(v53 + 80);
          v46 = (v45 + 32) & ~v45;
          v47 = swift_allocObject(v44, v46 + *(_QWORD *)(v53 + 72), v45 | 7);
          *(_OWORD *)(v47 + 16) = xmmword_100520250;
          sub_10001F580(v43, v47 + v46, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          sub_1000073A0((uint64_t)v18, &qword_1006561E0);
          *v30 = v47;
          v48 = type metadata accessor for TTRIAccountsListsSelection(0);
          v49 = v30;
          v50 = v48;
          v51 = 0;
        }
        swift_storeEnumTagMultiPayload(v49, v50, v51);
        return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v30, 0, 1, v48);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100005CB4()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_10002A750(&qword_100663888);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = DeferredPromise.init()();
  qword_100663868 = result;
  return result;
}

unint64_t sub_100005CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_10002CB28(a1, a2, v5);
}

uint64_t type metadata accessor for TTRIHashtagAssociationController()
{
  return objc_opt_self(_TtC9Reminders32TTRIHashtagAssociationController);
}

uint64_t sub_100005D78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = OBJC_IVAR____TtC9Reminders15TTRIAppDelegate____lazy_storage___applicationVisibilityChangeHandler;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate____lazy_storage___applicationVisibilityChangeHandler);
  if (v2)
  {
    v3 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate____lazy_storage___applicationVisibilityChangeHandler);
  }
  else
  {
    v4 = v0;
    v5 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_store);
    type metadata accessor for RDIDispatchQueue(0);
    v6 = v5;
    v7 = static RDIDispatchQueue.storeQueue.getter();
    v8 = type metadata accessor for TTRApplicationVisibilityChangeHandler();
    v3 = swift_allocObject(v8, 72, 7);
    *(_QWORD *)(v3 + 24) = 0;
    swift_unknownObjectWeakInit(v3 + 16, 0);
    *(_BYTE *)(v3 + 32) = 0;
    *(_QWORD *)(v3 + 40) = v6;
    *(_QWORD *)(v3 + 48) = 0x4034000000000000;
    *(_QWORD *)(v3 + 56) = v7;
    *(_QWORD *)(v3 + 64) = 0;
    *(_QWORD *)(v3 + 24) = &off_1005F95C8;
    swift_unknownObjectWeakAssign(v9, v4);
    v10 = *(_QWORD *)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v3;
    swift_retain(v3);
    swift_release(v10);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

uint64_t type metadata accessor for TTRIRootPresenter()
{
  return objc_opt_self(_TtC9Reminders17TTRIRootPresenter);
}

uint64_t type metadata accessor for TTRIAccountsListsRouter()
{
  return objc_opt_self(_TtC9Reminders23TTRIAccountsListsRouter);
}

unint64_t sub_100005E90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006447D0;
  if (!qword_1006447D0)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_1006447D0);
  }
  return result;
}

uint64_t sub_100005ED8(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

uint64_t type metadata accessor for TTRITreeTableView()
{
  return objc_opt_self(_TtC9Reminders17TTRITreeTableView);
}

uint64_t sub_100005F30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  _BYTE v4[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v4, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v2);
  if (result)
  {

    return 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100005F80(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100665470)
  {
    v2 = type metadata accessor for Date(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100665470);
  }
}

void sub_100005FD4(id a1)
{
  NSBundle *v1;
  uint64_t v2;
  void *v3;

  v1 = +[NSBundle bundleForClass:](NSBundle, "bundleForClass:", objc_opt_class(TTRBundleLookupObject));
  v2 = objc_claimAutoreleasedReturnValue(v1);
  v3 = (void *)qword_100666100;
  qword_100666100 = v2;

}

void sub_1000060F8(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  void *Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(a1 + qword_100645EF8);
  v4 = sub_10002E57C();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void *sub_100006150(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *result;
  _BYTE v4[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v4, 0, 0);
  result = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (result)
  {

    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for TTRIAppDelegate()
{
  return objc_opt_self(_TtC9Reminders15TTRIAppDelegate);
}

uint64_t sub_1000061C0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t type metadata accessor for TTRIAccountsListsSectionHeaderView()
{
  return objc_opt_self(_TtC9Reminders34TTRIAccountsListsSectionHeaderView);
}

uint64_t sub_10000620C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = "\t";
  v4[2] = "\t";
  v4[3] = &unk_100527640;
  v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[5] = &unk_100527658;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v4[6] = *(_QWORD *)(result - 8) + 64;
    result = swift_initClassMetadata2(a1, 0, 7, v4, a1 + 96);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1000062B8(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = (char *)&value witness table for () + 64;
  v2[1] = (char *)&value witness table for () + 64;
  v2[2] = (char *)&value witness table for () + 64;
  v2[3] = (char *)&value witness table for () + 64;
  return swift_initClassMetadata2(a1, 0, 4, v2, a1 + 96);
}

uint64_t sub_100006300()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t sub_100006378(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

id sub_1000063E0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController____lazy_storage___actionMenuButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController____lazy_storage___actionMenuButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController____lazy_storage___actionMenuButton);
  }
  else
  {
    v4 = sub_10000CA74(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_100006440(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_10053A968;
  result = type metadata accessor for TTRAccountsListsViewModel.SmartList(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

uint64_t sub_10000650C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v6 = a4 + 16;
  swift_beginAccess(a4 + 16, v11, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v6);
  if (result)
  {
    v8 = (void *)result;
    sub_10001088C(a1, a2);
    v10 = v9;

    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_100006584()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006415E8;
  if (!qword_1006415E8)
  {
    v1 = objc_opt_self(UIViewController);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1006415E8);
  }
  return result;
}

void sub_1000065C0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100646840[0])
  {
    v2 = type metadata accessor for IndexPath(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, qword_100646840);
  }
}

uint64_t sub_100006614(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for IndexPath(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 4);
    return 0;
  }
  return result;
}

uint64_t sub_100006668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit(v5 + 16, 0);
  swift_unknownObjectWeakInit(v5 + 48, 0);
  v11 = type metadata accessor for TTRIActivityAlertRouterCapability();
  v12 = swift_allocObject(v11, 24, 7);
  *(_QWORD *)(v5 + 80) = v12;
  *(_QWORD *)(v5 + 88) = &_swiftEmptySetSingleton;
  *(_BYTE *)(v5 + 136) = 13;
  *(_QWORD *)(v12 + 16) = 0;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_QWORD *)(v5 + 128) = 0;
  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 40) = a2;
  *(_QWORD *)(v5 + 56) = a3;
  *(_QWORD *)(v5 + 64) = a4;
  *(_QWORD *)(v5 + 72) = a5;
  return v5;
}

uint64_t sub_100006708(uint64_t a1)
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 16));

  return swift_deallocObject(v1, a1, 7);
}

uint64_t type metadata accessor for TTRIMenuSystemNotifier()
{
  return objc_opt_self(_TtC9Reminders22TTRIMenuSystemNotifier);
}

void *sub_1000067EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *result;
  _BYTE v5[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v5, 0, 0);
  result = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {

    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

UIImage sub_100006894(uint64_t a1, void *a2)
{
  uint64_t v4;
  Swift::String v5;
  uint64_t v7;

  v4 = type metadata accessor for TTRIDateIconGenerator(0);
  swift_initStackObject(v4, &v7);
  v5._countAndFlagsBits = a1;
  v5._object = a2;
  return TTRIDateIconGenerator.generateTodaySmartListTemplateIcon(withText:)(v5);
}

uint64_t sub_1000068E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 128));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 136));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 264));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 288));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 296));
  return swift_deallocObject(v0, 304, 7);
}

uint64_t sub_10000699C()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  sub_100027F10(v0 + 3);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1000069D0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000069FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for REMRemindersListDataView.SortingDirection(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8 + 16) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v5 + 8));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_100006AC8(void (*a1)(_QWORD), void (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v3;

  a1(*(_QWORD *)(v3 + 16));
  a2(*(_QWORD *)(v3 + 32));
  return swift_deallocObject(v3, a3, 7);
}

uint64_t sub_100006B10(void (*a1)(_QWORD), uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectRelease(*(_QWORD *)(v2 + 16));
  a1(*(_QWORD *)(v2 + 32));
  return swift_deallocObject(v2, a2, 7);
}

uint64_t sub_100006B54(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 24) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_100006BCC(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 32));
  return swift_deallocObject(v2, 40, 7);
}

uint64_t sub_100006C08()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100006C34()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  sub_100180954(*(id *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 64));
  if (*(_QWORD *)(v0 + 72))
    swift_release(*(_QWORD *)(v0 + 80));
  if (*(_QWORD *)(v0 + 88))
    swift_release(*(_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100006C94()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100006CC8(uint64_t a1)
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 32));

  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_100006D08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1000070BC()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[11]);
  swift_release(v0[13]);
  return swift_deallocObject(v0, 112, 7);
}

uint64_t sub_100007100(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject(v1, 48, 7);
}

uint64_t sub_100007140()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10000716C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  result = type metadata accessor for IndexPath(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = &unk_100524BA8;
      v5[3] = &unk_100524BA8;
      swift_initStructMetadata(a1, 0, 4, v5, a1 + 32);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100007200(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_10052EB38;
  v4[1] = &unk_10052E948;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 3, v4, a1 + 24);
    return 0;
  }
  return result;
}

uint64_t sub_100007280()
{
  uint64_t result;

  type metadata accessor for TTRCounterBasedIdentifierGenerator(0);
  result = TTRCounterBasedIdentifierGenerator.__allocating_init()();
  qword_10064A358 = result;
  return result;
}

uint64_t type metadata accessor for TTRIApplication()
{
  return objc_opt_self(_TtC9Reminders15TTRIApplication);
}

uint64_t type metadata accessor for TTRIRootRouter()
{
  return objc_opt_self(_TtC9Reminders14TTRIRootRouter);
}

uint64_t sub_1000072F0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRelease(result);
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a3);
  }
  return result;
}

uint64_t sub_100007328(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

uint64_t sub_10000735C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10002A750(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000073A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_10002A750(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000073DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100640920);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100640920);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10000746C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064F020);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064F020);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1000074FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100655F30);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100655F30);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10000758C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100656CC8);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100656CC8);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_10000761C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6;
  id v7;
  void *v8;

  v6 = a3;
  v7 = a1;
  v8 = (void *)sub_10000B6A0(a4, (uint64_t)sub_10002BBC0, (uint64_t (*)(void *, char *, uint64_t))sub_10002F984);

  return v8;
}

void sub_1000076E0(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  id v15;

  v7 = v3;
  v8 = v3 + qword_100645F30;
  v9 = *(_QWORD *)(v3 + qword_100645F30);
  v10 = *(_QWORD *)(v3 + qword_100645F30 + 8);
  v11 = *(_QWORD *)(v3 + qword_100645F30 + 16);
  *(_QWORD *)v8 = 0;
  *(_QWORD *)(v8 + 8) = 0;
  *(_QWORD *)(v8 + 16) = 0;
  *(_BYTE *)(v8 + 24) = 0;
  sub_1000072F0(v9, v10, v11);
  objc_msgSend(*(id *)(v3 + qword_100645F00), "reloadData");
  v12 = *(void **)(v3 + qword_100645ED8);
  if (v12)
  {
    v13 = v12;
    sub_10002E278(a1);

  }
  v14 = *(void **)(v7 + qword_100645EE0);
  if (v14)
  {
    v15 = v14;
    sub_10002E010(a2, a3);

  }
}

void sub_1000077D0()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(UIMenuSystem), "mainSystem");
  objc_msgSend(v0, "setNeedsRebuild");

}

void sub_100007870(void *a1, uint64_t a2, uint64_t a3, const char **a4, SEL *a5)
{
  const char *v8;
  id v9;
  objc_super v10;

  v10.receiver = a1;
  v10.super_class = (Class)swift_getObjectType(a1, a2);
  v8 = *a4;
  v9 = v10.receiver;
  objc_msgSendSuper2(&v10, v8, a3);
  objc_msgSend(v9, *a5, v10.receiver, v10.super_class);

}

void sub_1000078DC(char a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  NSString v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  objc_super v22;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = type metadata accessor for TTRIAccountsListsSelection(0);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22.receiver = v2;
  v22.super_class = ObjectType;
  objc_msgSendSuper2(&v22, "viewDidAppear:", a1 & 1);
  v2[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_needsWorkaround51600172] = 0;
  v8 = &v2[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_pendingSearchTerm];
  if (!*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_pendingSearchTerm + 8])
    goto LABEL_9;
  v9 = OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchController;
  v10 = *(void **)&v2[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchController];
  if (v10)
  {
    v11 = objc_msgSend(v10, "searchBar");
    v12 = *((_QWORD *)v8 + 1);
    if (v12)
    {
      swift_bridgeObjectRetain(*((_QWORD *)v8 + 1));
      v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v12);
    }
    else
    {
      v13 = 0;
    }
    objc_msgSend(v11, "setText:", v13);

    v14 = *((_QWORD *)v8 + 1);
    *(_QWORD *)v8 = 0;
    *((_QWORD *)v8 + 1) = 0;
    swift_bridgeObjectRelease(v14);
    v15 = *(void **)&v2[v9];
    if (v15)
    {
      v16 = objc_msgSend(v15, "searchBar");
      v17 = objc_msgSend(v16, "text");

      if (v17)
      {

        v18 = sub_10002A750((uint64_t *)&unk_100640DF0);
        v19 = swift_allocBox(v18);
        sub_100061874(v20);
        *v7 = v19;
        swift_storeEnumTagMultiPayload(v7, v5, 3);
        sub_1000620B0((uint64_t)v7, 4, 0);
        sub_10001F544((uint64_t)v7, type metadata accessor for TTRIAccountsListsSelection);
      }
LABEL_9:
      v21 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_presenter] + 48);
      swift_retain(v21);
      TTRModuleState.viewDidAppear()();
      swift_release(v21);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100007B84(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(_QWORD, _QWORD, _QWORD);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(_QWORD);
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  id v64;
  char *v65;
  uint64_t v66;
  uint64_t (*v67)(_QWORD);
  id v68;
  id v69;
  char v70;
  __int128 *v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _OWORD *v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t *v92;
  uint64_t (*v93)(_QWORD);
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  char *v98;
  uint64_t v99;
  uint64_t (*v100)(_QWORD);
  uint64_t v101;
  unsigned int (*v102)(_QWORD, _QWORD, _QWORD);
  uint64_t *v103;
  id v104;
  id v105;
  char v106;
  uint64_t v107;
  void *Strong;
  id v109;
  id v110;
  void *v111;
  id v112;
  uint64_t v113;
  __int128 *v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _OWORD *v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  uint64_t v137;
  __int128 *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  __int128 *v142;
  uint64_t *v143;
  uint64_t *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  char *v148;
  id v149;
  uint64_t v150;
  id v151;
  uint64_t v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  _OWORD v165[2];
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  _OWORD v178[2];
  _QWORD v179[28];
  id v180[28];
  uint64_t v181[8];

  v149 = a1;
  v2 = type metadata accessor for TTRIAccountsListsSelection(0);
  v3 = __chkstk_darwin(v2);
  v143 = (uint64_t *)((char *)&v137 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  v144 = (uint64_t *)((char *)&v137 - v5);
  v6 = sub_10002A750((uint64_t *)&unk_100640E00);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v137 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v146 = (char *)&v137 - v11;
  v12 = __chkstk_darwin(v10);
  v148 = (char *)&v137 - v13;
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v137 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v137 - v18;
  __chkstk_darwin(v17);
  v21 = (char *)&v137 - v20;
  v150 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v152 = *(_QWORD *)(v150 - 8);
  v22 = __chkstk_darwin(v150);
  v23 = __chkstk_darwin(v22);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v137 - v25;
  v27 = __chkstk_darwin(v24);
  v29 = (char *)&v137 - v28;
  v30 = __chkstk_darwin(v27);
  v32 = (char *)&v137 - v31;
  result = __chkstk_darwin(v30);
  v145 = v1;
  v37 = v1 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_postModelUpdateAction;
  v151 = *(id *)(v1 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_postModelUpdateAction);
  v38 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_postModelUpdateAction + 8);
  *(_QWORD *)v37 = 0;
  *(_BYTE *)(v37 + 8) = 2;
  if (!v38)
  {
    v146 = v19;
    v148 = v21;
    v144 = (uint64_t *)((char *)&v137 - v34);
    sub_10000F614((uint64_t)v149, (uint64_t)&v166, &qword_100640E68);
    v49 = v166;
    if (!(_QWORD)v166)
    {
      v56 = (uint64_t)v148;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v152 + 56))(v148, 1, 1, v150);
      goto LABEL_16;
    }
    v149 = v151;
    v50 = v150;
    v143 = (uint64_t *)TTRTreeDiffResult.insertedElements.getter(v49, v150);
    v51 = dispatch thunk of _AnySequenceBox._makeIterator()();
    ((void (*)(void))dispatch thunk of _AnyIteratorBoxBase.next())();
    v52 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v152 + 48);
    if (v52(v16, 1, v50) == 1)
    {
LABEL_10:
      swift_release(v51);
      v53 = 1;
      v54 = (uint64_t)v146;
    }
    else
    {
      v93 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item;
      v94 = (uint64_t *)&unk_100640F68;
      v147 = v32;
      while (1)
      {
        v96 = sub_10001F580((uint64_t)v16, (uint64_t)v32, v93);
        TTRAccountsListsViewModel.Item.listOrCustomSmartList.getter(v179, v96);
        sub_10000F614((uint64_t)v179, (uint64_t)v180, v94);
        if (sub_100076D84((uint64_t *)v180) != 1)
        {
          v97 = v180[0];
          sub_100076D9C((uint64_t)v179, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100076E18);
          sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
          v98 = v16;
          v99 = v51;
          v100 = v93;
          v101 = v50;
          v102 = v52;
          v103 = v94;
          v104 = v149;
          v105 = v97;
          v106 = static NSObject.== infix(_:_:)(v105, v104);

          v94 = v103;
          v52 = v102;
          v50 = v101;
          v93 = v100;
          v51 = v99;
          v16 = v98;
          v32 = v147;
          if ((v106 & 1) != 0)
            break;
        }
        v95 = sub_10001F544((uint64_t)v32, v93);
        dispatch thunk of _AnyIteratorBoxBase.next()(v95);
        if (v52(v16, 1, v50) == 1)
          goto LABEL_10;
      }
      swift_release(v51);
      v54 = (uint64_t)v146;
      sub_10001F580((uint64_t)v32, (uint64_t)v146, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      v53 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v152 + 56))(v54, v53, 1, v50);
    swift_release(v143);
    v55 = v54;
    v56 = (uint64_t)v148;
    sub_10000F614(v55, (uint64_t)v148, (uint64_t *)&unk_100640E00);
    if (v52(v56, 1, v50) == 1)
    {

LABEL_16:
      v57 = v56;
      return sub_1000073A0(v57, (uint64_t *)&unk_100640E00);
    }
    v107 = (uint64_t)v144;
    sub_10001F580(v56, (uint64_t)v144, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v145 + 16);
    v109 = v149;
    v110 = v149;
    if (Strong)
    {
      v111 = Strong;
      v112 = objc_msgSend(Strong, "view");
      if (v112)
      {
        v110 = v112;
        v113 = type metadata accessor for TTRIAccountsListsTreeView(0);
        if (swift_dynamicCastClass(v110, v113))
        {
          v107 = (uint64_t)v144;
          sub_10032C7F8((uint64_t)v144, 3, 1, sub_10006B64C, (uint64_t (*)(uint64_t))sub_100073338, sub_1002AA398, sub_100073214, (void (*)(uint64_t, uint64_t *))sub_10019D874);
          swift_unknownObjectRelease(v111);

          goto LABEL_37;
        }

      }
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
      __break(1u);
      return result;
    }
LABEL_37:

    return sub_10001F544(v107, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  }
  if (v38 != 1)
    return result;
  v142 = (__int128 *)v36;
  v138 = (__int128 *)v35;
  sub_10000F614((uint64_t)v149, (uint64_t)v181, &qword_100640E68);
  v39 = v181[0];
  if (!v181[0])
  {
    v45 = (uint64_t)v148;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v152 + 56))(v148, 1, 1, v150);
    goto LABEL_14;
  }
  v140 = v2;
  v141 = v29;
  v149 = v151;
  v40 = v150;
  v139 = TTRTreeDiffResult.insertedElements.getter(v39, v150);
  v41 = dispatch thunk of _AnySequenceBox._makeIterator()();
  dispatch thunk of _AnyIteratorBoxBase.next()(v41);
  v42 = *(char **)(v152 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v42)(v9, 1, v40) == 1)
  {
LABEL_5:
    swift_release(v41);
    v43 = 1;
    v44 = (uint64_t)v146;
  }
  else
  {
    v58 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item;
    v59 = (uint64_t *)&unk_100640F68;
    v147 = v42;
    while (1)
    {
      v61 = sub_10001F580((uint64_t)v9, (uint64_t)v26, v58);
      TTRAccountsListsViewModel.Item.listOrCustomSmartList.getter(v179, v61);
      sub_10000F614((uint64_t)v179, (uint64_t)v180, v59);
      if (sub_100076D84((uint64_t *)v180) != 1)
      {
        v62 = v40;
        v63 = v59;
        v64 = v180[0];
        sub_100076D9C((uint64_t)v179, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100076E18);
        sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
        v65 = v9;
        v66 = v41;
        v67 = v58;
        v68 = v149;
        v69 = v64;
        v70 = static NSObject.== infix(_:_:)(v69, v68);

        v59 = v63;
        v40 = v62;
        v42 = v147;

        v58 = v67;
        v41 = v66;
        v9 = v65;
        if ((v70 & 1) != 0)
          break;
      }
      v60 = sub_10001F544((uint64_t)v26, v58);
      dispatch thunk of _AnyIteratorBoxBase.next()(v60);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v42)(v9, 1, v40) == 1)
        goto LABEL_5;
    }
    swift_release(v41);
    v44 = (uint64_t)v146;
    sub_10001F580((uint64_t)v26, (uint64_t)v146, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v43 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v152 + 56))(v44, v43, 1, v40);
  swift_release(v139);
  v45 = (uint64_t)v148;
  sub_10000F614(v44, (uint64_t)v148, (uint64_t *)&unk_100640E00);
  v46 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v42)(v45, 1, v40);
  v48 = v140;
  v47 = (uint64_t)v141;
  if (v46 != 1)
  {
    sub_10001F580(v45, (uint64_t)v141, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v71 = v142;
    sub_10002B1E8(v47, (uint64_t)v142, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v71, v40) == 4)
    {
      v72 = v71[11];
      v176 = v71[10];
      v177 = v72;
      v178[0] = v71[12];
      *(_OWORD *)((char *)v178 + 10) = *(__int128 *)((char *)v71 + 202);
      v73 = v71[7];
      v172 = v71[6];
      v173 = v73;
      v74 = v71[9];
      v174 = v71[8];
      v175 = v74;
      v75 = v71[3];
      v168 = v71[2];
      v169 = v75;
      v76 = v71[5];
      v170 = v71[4];
      v171 = v76;
      v77 = v71[1];
      v166 = *v71;
      v167 = v77;
      v78 = swift_unknownObjectWeakLoadStrong(v145 + 16);
      if (v78)
      {
        v79 = v78;
        if ((BYTE2(v175) & 1) == 0)
        {
          v80 = sub_10002A750(&qword_100646A70);
          v81 = *(unsigned __int8 *)(v152 + 80);
          v82 = (v81 + 32) & ~v81;
          v83 = swift_allocObject(v80, v82 + *(_QWORD *)(v152 + 72), v81 | 7);
          *(_OWORD *)(v83 + 16) = xmmword_100520250;
          v84 = (_OWORD *)(v83 + v82);
          v85 = v167;
          *v84 = v166;
          v84[1] = v85;
          v86 = v171;
          v84[4] = v170;
          v84[5] = v86;
          v87 = v169;
          v84[2] = v168;
          v84[3] = v87;
          v88 = v175;
          v84[8] = v174;
          v84[9] = v88;
          v89 = v173;
          v84[6] = v172;
          v84[7] = v89;
          *(_OWORD *)((char *)v84 + 202) = *(_OWORD *)((char *)v178 + 10);
          v90 = v178[0];
          v91 = v176;
          v84[11] = v177;
          v84[12] = v90;
          v84[10] = v91;
          swift_storeEnumTagMultiPayload(v83 + v82, v40, 4);
          v92 = v144;
LABEL_42:
          *v92 = v83;
          v133 = v92;
          v134 = v48;
          v135 = 0;
LABEL_47:
          swift_storeEnumTagMultiPayload(v133, v134, v135);
          sub_100076C08((uint64_t)&v166);
          sub_1000620B0((uint64_t)v92, 0, 0);
          sub_10001F544((uint64_t)v92, type metadata accessor for TTRIAccountsListsSelection);
          swift_unknownObjectRelease(v79);
          goto LABEL_48;
        }
        v163 = v176;
        v164 = v177;
        v165[0] = v178[0];
        *(_OWORD *)((char *)v165 + 10) = *(_OWORD *)((char *)v178 + 10);
        v159 = v172;
        v160 = v173;
        v161 = v174;
        v162 = v175;
        v155 = v168;
        v156 = v169;
        v157 = v170;
        v158 = v171;
        v153 = v166;
        v154 = v167;
        sub_10007636C((uint64_t)&v153);
        v92 = v144;
        goto LABEL_46;
      }
    }
    else
    {
      sub_10001F544((uint64_t)v71, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      v114 = v138;
      sub_10002B1E8(v47, (uint64_t)v138, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      if (swift_getEnumCaseMultiPayload(v114, v40) != 5)
      {
        sub_10001F544((uint64_t)v114, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v136 = v149;

LABEL_49:
        return sub_10001F544(v47, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      }
      v115 = v114[11];
      v176 = v114[10];
      v177 = v115;
      v178[0] = v114[12];
      *(_OWORD *)((char *)v178 + 10) = *(__int128 *)((char *)v114 + 202);
      v116 = v114[7];
      v172 = v114[6];
      v173 = v116;
      v117 = v114[9];
      v174 = v114[8];
      v175 = v117;
      v118 = v114[3];
      v168 = v114[2];
      v169 = v118;
      v119 = v114[5];
      v170 = v114[4];
      v171 = v119;
      v120 = v114[1];
      v166 = *v114;
      v167 = v120;
      v121 = swift_unknownObjectWeakLoadStrong(v145 + 16);
      if (v121)
      {
        v79 = v121;
        if ((BYTE2(v175) & 1) == 0)
        {
          v122 = sub_10002A750(&qword_100646A70);
          v123 = *(unsigned __int8 *)(v152 + 80);
          v124 = (v123 + 32) & ~v123;
          v83 = swift_allocObject(v122, v124 + *(_QWORD *)(v152 + 72), v123 | 7);
          *(_OWORD *)(v83 + 16) = xmmword_100520250;
          v125 = (_OWORD *)(v83 + v124);
          v126 = v167;
          *v125 = v166;
          v125[1] = v126;
          v127 = v171;
          v125[4] = v170;
          v125[5] = v127;
          v128 = v169;
          v125[2] = v168;
          v125[3] = v128;
          v129 = v175;
          v125[8] = v174;
          v125[9] = v129;
          v130 = v173;
          v125[6] = v172;
          v125[7] = v130;
          *(_OWORD *)((char *)v125 + 202) = *(_OWORD *)((char *)v178 + 10);
          v131 = v178[0];
          v132 = v176;
          v125[11] = v177;
          v125[12] = v131;
          v125[10] = v132;
          swift_storeEnumTagMultiPayload(v83 + v124, v40, 5);
          v92 = v143;
          goto LABEL_42;
        }
        v163 = v176;
        v164 = v177;
        v165[0] = v178[0];
        *(_OWORD *)((char *)v165 + 10) = *(_OWORD *)((char *)v178 + 10);
        v159 = v172;
        v160 = v173;
        v161 = v174;
        v162 = v175;
        v155 = v168;
        v156 = v169;
        v157 = v170;
        v158 = v171;
        v153 = v166;
        v154 = v167;
        sub_10007636C((uint64_t)&v153);
        v92 = v143;
LABEL_46:
        sub_100075CE8((uint64_t)&v153, (uint64_t)v92);
        v133 = v92;
        v134 = v48;
        v135 = 1;
        goto LABEL_47;
      }
    }
LABEL_48:
    v136 = v149;

    sub_100075FE8((uint64_t)&v166);
    goto LABEL_49;
  }

LABEL_14:
  v57 = v45;
  return sub_1000073A0(v57, (uint64_t *)&unk_100640E00);
}

uint64_t sub_100008788()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000087B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for TTRTemplatesListViewModel.Template(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = v0 + v4;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 32));
  sub_10002B328(*(void **)(v6 + 40), *(_QWORD *)(v6 + 48), *(_QWORD *)(v6 + 56), *(_QWORD *)(v6 + 64), *(_QWORD *)(v6 + 72), *(_QWORD *)(v6 + 80), *(_BYTE *)(v6 + 88));
  sub_10002B318(*(void **)(v6 + 96), *(id *)(v6 + 104), *(_BYTE *)(v6 + 112));
  v7 = v0 + v4 + *(int *)(v1 + 28);
  v8 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v9 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100008894()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

id sub_100008994(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t))
{
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;

  v8 = a3;
  v9 = a1;
  a5(a4);
  v11 = v10;

  if (v11)
  {
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v11);
  }
  else
  {
    v12 = 0;
  }
  return v12;
}

void sub_100008A14(_QWORD *a1, void (*a2)(uint64_t), uint64_t a3, char *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  void *v13;
  char *v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  char v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  _OWORD v28[2];
  uint64_t v29;

  v22 = a5;
  v23 = a6;
  sub_10000F614((uint64_t)a1, (uint64_t)&v24, &qword_100640E68);
  v12 = v24;
  if (v24)
  {
    v28[0] = v25;
    v28[1] = v26;
    v29 = v27;
    if (*(_QWORD *)(v24 + 16))
    {
      v13 = *(void **)&a4[qword_10065D8E0];
      if (v13)
      {
        sub_10002DF4C(a1);
        v14 = a4;
        v15 = v13;
        sub_1000FF730(0, 0, (uint64_t)a2, a3, (uint64_t)v15, (uint64_t (*)(uint64_t))sub_10031B294, (uint64_t)v21, v12, v14, (uint64_t)v28);

        sub_1000522B0(a1);
        return;
      }
      __break(1u);
      goto LABEL_13;
    }
    v20 = *(_QWORD *)(a5 + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel);
    *(_QWORD *)(a5 + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel) = a6;
    swift_retain(a6);
    swift_release(v20);
    if (a2)
    {
      v19 = 0;
      goto LABEL_10;
    }
  }
  else
  {
    v16 = *(_QWORD *)(a5 + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel);
    *(_QWORD *)(a5 + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel) = a6;
    swift_retain(a6);
    swift_release(v16);
    v17 = *(void **)&a4[qword_10065D8E0];
    if (!v17)
    {
LABEL_13:
      __break(1u);
      return;
    }
    v18 = v17;
    sub_10002EAF0();

    if (a2)
    {
      v19 = 1;
LABEL_10:
      a2(v19);
    }
  }
}

id sub_100008B94()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController____lazy_storage___editButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController____lazy_storage___editButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController____lazy_storage___editButton);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 2, v0, "didTapEdit:");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t type metadata accessor for TTRIAccountsListsViewPinnedListsCell()
{
  return objc_opt_self(_TtC9Reminders36TTRIAccountsListsViewPinnedListsCell);
}

void sub_100008D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    *(_BYTE *)(Strong + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_currentEditModeTransition) = 2;
    sub_10000D2DC();
    sub_10000C1E0(*(unsigned __int8 *)(a3 + 48));
    sub_10001A818();

  }
}

uint64_t sub_100008DB4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _BYTE v8[32];
  _BYTE v9[32];
  _QWORD v10[3];

  v10[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for TTRAccountsListsViewModel.Item(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    result = type metadata accessor for TTRAccountsListsViewModel.PinnedList(319);
    if (v5 <= 0x3F)
    {
      v6 = v4 + 64;
      swift_getTupleTypeLayout2(v9, v6, *(_QWORD *)(result - 8) + 64);
      v10[1] = v9;
      result = type metadata accessor for REMHashtagLabelSpecifier(319);
      if (v7 <= 0x3F)
      {
        swift_getTupleTypeLayout2(v8, v6, *(_QWORD *)(result - 8) + 64);
        v10[2] = v8;
        swift_initEnumMetadataMultiPayload(a1, 256, 3, v10);
        return 0;
      }
    }
  }
  return result;
}

void sub_100008E84(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v8;
  id v9;
  id v10;

  v8 = a3;
  v9 = a4;
  v10 = a1;
  sub_10000B8AC(v9, a5, (void (*)(void *, id, char *))sub_100023808);

}

id sub_100008F00(uint64_t *a1)
{
  uint64_t v1;
  objc_class *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  id v11;
  objc_super v13;
  _QWORD v14[5];
  _QWORD v15[3];
  uint64_t v16;
  _UNKNOWN **v17;

  v16 = *a1;
  v1 = v16;
  v17 = &off_100601168;
  v15[0] = a1;
  v2 = (objc_class *)type metadata accessor for TTRISearchResultContainerViewController();
  v3 = (char *)objc_allocWithZone(v2);
  v4 = sub_100028D48((uint64_t)v15, v16);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v7 + 16))(v6);
  v8 = *v6;
  v14[3] = v1;
  v14[4] = &off_100601168;
  v14[0] = v8;
  v9 = &v3[OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultViewController];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = &v3[OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultModuleInterface];
  *((_QWORD *)v10 + 4) = 0;
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  sub_100010634((uint64_t)v14, (uint64_t)&v3[OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultViewPresenter]);
  v13.receiver = v3;
  v13.super_class = v2;
  v11 = objc_msgSendSuper2(&v13, "initWithNibName:bundle:", 0, 0);
  sub_100027F10(v14);
  sub_100027F10(v15);
  return v11;
}

uint64_t sub_10000902C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_1006403C8);
  v1 = sub_100012DC4(v0, (uint64_t)qword_1006403C8);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1000090BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_1006511E8);
  v1 = sub_100012DC4(v0, (uint64_t)qword_1006511E8);
  if (qword_10063D620 != -1)
    swift_once(&qword_10063D620, sub_10002D508);
  v2 = sub_100012DC4(v0, (uint64_t)qword_1006737B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10000914C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100651DA0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100651DA0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1000091DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100663850);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100663850);
  if (qword_10063D638 != -1)
    swift_once(&qword_10063D638, sub_10002D51C);
  v2 = sub_100012DC4(v0, (uint64_t)qword_1006737F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10000926C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10002A750(&qword_100659318);
    v11 = (_QWORD *)swift_allocObject(v10, 48 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (unint64_t)(v11 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= v14 + 48 * v8)
      memmove(v11 + 4, a4 + 4, 48 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v14 >= v13 + 48 * v8 || v13 >= v14 + 48 * v8)
  {
    sub_10002A750(&qword_100659320);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void sub_100009410(char a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  int v7;
  _BYTE *v8;

  v3 = (char *)objc_msgSend(v1, "containerView");
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders36TTRIAccountsListsViewPinnedListsCell_dynamicDateGlyphCache];
  v5 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_dynamicDateGlyphCache];
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_dynamicDateGlyphCache] = v4;
  swift_retain(v4);

  v6 = objc_msgSend(v1, "containerView", swift_release(v5).n128_f64[0]);
  if (v6)
  {
    v7 = v6[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectedStateShowsPinnedListColor];
    v6[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectedStateShowsPinnedListColor] = a1 & 1;
    if (v7 != (a1 & 1))
    {
      v8 = v6;
      sub_100029710();
      v6 = v8;
    }

  }
  else
  {
    __break(1u);
  }
}

id sub_1000094DC(uint64_t a1)
{
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v7;

  v1 = objc_msgSend(objc_allocWithZone((Class)REMICloudIsOffDataView), "initWithStore:", a1);
  v7 = 0;
  v2 = objc_msgSend(v1, "fetchICloudIsOffCloudConfigurationPropertiesWithError:", &v7);
  v3 = v7;
  if (v2)
  {
    v4 = v7;
  }
  else
  {
    v5 = v7;
    _convertNSErrorToError(_:)(v3);

    swift_willThrow();
  }

  return v2;
}

void sub_1000095BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  id v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(id *)(Strong + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_store);

    objc_msgSend(v4, "requestDownloadGroceryModelAssetsFromTrial");
  }
}

void sub_100009630(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  char v4;
  objc_class *ObjectType;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  NSObject *oslog;
  objc_super v15;

  v3 = v2;
  v4 = a2;
  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  v7 = objc_msgSend(v3, "childViewControllers");
  v8 = sub_100006584();
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  LOBYTE(v7) = sub_10002D318(a1, v9);
  swift_bridgeObjectRelease(v9);
  if ((v7 & 1) != 0)
  {
    if (qword_10063D570 != -1)
      swift_once(&qword_10063D570, sub_100255BEC);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_100012DC4(v10, (uint64_t)qword_100651C88);
    oslog = Logger.logObject.getter(v11);
    v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v12, "Tried to push the same view controller onto main navigation controller twice.", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

  }
  else
  {
    v15.receiver = v3;
    v15.super_class = ObjectType;
    objc_msgSendSuper2(&v15, "pushViewController:animated:", a1, v4 & 1);
  }
}

unint64_t sub_1000097AC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  unint64_t result;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002A750(a2);
  v4 = static _DictionaryStorage.allocate(capacity:)(v3);
  v5 = (_QWORD *)v4;
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v5;
  }
  swift_retain(v4);
  v7 = (void **)(a1 + 48);
  while (1)
  {
    v8 = (uint64_t)*(v7 - 2);
    v9 = (uint64_t)*(v7 - 1);
    v10 = *v7;
    swift_bridgeObjectRetain(v9);
    v11 = v10;
    result = sub_100005CF4(v8, v9);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v14 = (uint64_t *)(v5[6] + 16 * result);
    *v14 = v8;
    v14[1] = v9;
    *(_QWORD *)(v5[7] + 8 * result) = v11;
    v15 = v5[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v5[2] = v17;
    v7 += 3;
    if (!--v6)
    {
      swift_release(v5);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_100009944(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void *);
  id v5;

  v4 = *(void (**)(void *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4(a2);
  swift_release(v3);

}

uint64_t sub_100009998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = OBJC_IVAR____TtC9Reminders15TTRIAppDelegate____lazy_storage___siriVocabularyUpdater;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate____lazy_storage___siriVocabularyUpdater);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate____lazy_storage___siriVocabularyUpdater);
  }
  else
  {
    v4 = v0;
    type metadata accessor for RDIDispatchQueue(0);
    v5 = static RDIDispatchQueue.backgroundQueue.getter();
    v6 = type metadata accessor for TTRSiriVocabularyUpdater();
    v3 = swift_allocObject(v6, 25, 7);
    *(_BYTE *)(v3 + 24) = 0;
    *(_QWORD *)(v3 + 16) = v5;
    v7 = *(_QWORD *)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v3;
    swift_retain(v3);
    swift_release(v7);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

uint64_t sub_100009A24(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

  v4 = (a1 + 37) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v4 + 8));
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((v4 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

void sub_100009A80(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;

  v2 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_preferredTintColor;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_preferredTintColor);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_preferredTintColor) = a1;
  v4 = a1;

  v5 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_disclosureImageView);
  if (v5)
  {
    v6 = *(void **)(v1 + v2);
    v12 = v5;
    if (v6)
    {
      v7 = v5;
      v8 = v6;
    }
    else
    {
      v9 = (void *)objc_opt_self(UIColor);
      v10 = v12;
      v8 = objc_msgSend(v9, "tertiaryLabelColor");
    }
    v11 = v6;
    objc_msgSend(v12, "setTintColor:", v8);

  }
  else
  {
    __break(1u);
  }
}

BOOL sub_100009B40()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  double v21;
  void (*v22)(_BYTE *, uint64_t);
  double v23;
  double v24;
  _BYTE v26[24];

  v1 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v1);
  v3 = &v26[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v10 = &v26[-v9 - 8];
  sub_10002EDC8();
  v11 = (void *)v0[8];
  if (v11)
  {
    swift_unknownObjectRetain(v0[8]);
    Date.init()(v12);
    swift_beginAccess(v0 + 3, v26, 32, 0);
    v13 = v0[6];
    v14 = v0[7];
    sub_10001413C(v0 + 3, v13);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
    swift_endAccess(v26);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      static Date.distantPast.getter();
      sub_10002FBF4((uint64_t)v3);
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(v8, v3, v4);
    }
    v21 = Date.timeIntervalSince(_:)(v8);
    v22 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
    v22(v8, v4);
    v22(v10, v4);
    objc_msgSend(v11, "iCloudIsOffTimeIntervalSinceLastPrompt");
    v24 = v23;
    swift_unknownObjectRelease(v11);
    return v21 < v24;
  }
  else
  {
    if (qword_10063D678 != -1)
      swift_once(&qword_10063D678, sub_10032BC84);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100012DC4(v15, (uint64_t)qword_100655E60);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "TTRICloudIsOffProvider: Failed to fetch REMICloudIsOffCloudConfiguration properties", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

    return 0;
  }
}

void sub_100009DC0(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD v10[5];
  uint64_t v11;

  v6 = objc_msgSend(a1, "_launchTestName");
  v7 = swift_allocObject(&unk_10060A730, 32, 7);
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  v10[4] = sub_10002D4F8;
  v11 = v7;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100006378;
  v10[3] = &unk_10060A748;
  v8 = _Block_copy(v10);
  v9 = v11;
  swift_retain(a3);
  swift_release(v9);
  objc_msgSend(a1, "finishedTest:waitForCommit:extraResults:withTeardownBlock:", v6, 1, 0, v8);
  _Block_release(v8);

}

id sub_100009EB0()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  LOBYTE(v1) = UIContentSizeCategory.isAccessibilityCategory.getter(v2);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_innerStackView);
  v4 = v1 & 1;
  if ((v1 & 1) != 0)
    v5 = 1;
  else
    v5 = 3;
  objc_msgSend(v3, "setAxis:", v4);
  return objc_msgSend(v3, "setAlignment:", v5);
}

void sub_100009F5C(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  objc_super v9;

  v9.receiver = v2;
  v9.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v9, "viewDidLayoutSubviews");
  if (*((_BYTE *)v2 + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_needsWorkaround51600172) == 1)
  {
    v3 = objc_msgSend(v2, "view");
    if (v3)
    {
      v4 = v3;
      v5 = type metadata accessor for TTRIAccountsListsTreeView(0);
      v6 = swift_dynamicCastClass(v4, v5);
      if (v6)
      {
        v7 = *(void **)(v6 + qword_10065D8D8);
        if (v7)
        {
          v8 = v7;

          objc_msgSend(v8, "_scrollToTopIfPossible:", 0);
          return;
        }
        __break(1u);
      }

    }
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
    __break(1u);
  }
}

void sub_10000A06C(uint64_t a1, int a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  double v11;
  uint64_t i;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  _QWORD v20[5];
  uint64_t v21;

  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v6)
      goto LABEL_3;
LABEL_23:
    swift_bridgeObjectRelease(a1);
    if ((a2 & 1) != 0)
      v11 = 0.4;
    else
      v11 = 1.0;
    if ((a3 & 1) == 0)
      return;
LABEL_27:
    v16 = (void *)objc_opt_self(UIView);
    v17 = swift_allocObject(&unk_1005ED100, 32, 7);
    *(_QWORD *)(v17 + 16) = a1;
    *(double *)(v17 + 24) = v11;
    v20[4] = sub_100076354;
    v21 = v17;
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 1107296256;
    v20[2] = sub_100006378;
    v20[3] = &unk_1005ED118;
    v18 = _Block_copy(v20);
    v19 = v21;
    swift_bridgeObjectRetain(a1);
    swift_release(v19);
    objc_msgSend(v16, "animateWithDuration:animations:", v18, 0.2);
    _Block_release(v18);
    return;
  }
  if (a1 < 0)
    v15 = a1;
  else
    v15 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v6 = _CocoaArrayWrapper.endIndex.getter(v15);
  if (!v6)
    goto LABEL_23;
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
    return;
  }
  v7 = 0;
  v8 = a1 & 0xC000000000000001;
  do
  {
    if (v8)
      v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
    else
      v9 = *(id *)(a1 + 8 * v7 + 32);
    v10 = v9;
    ++v7;
    objc_msgSend(v9, "setUserInteractionEnabled:", (a2 ^ 1) & 1);

  }
  while (v6 != v7);
  swift_bridgeObjectRelease(a1);
  if ((a2 & 1) != 0)
    v11 = 0.4;
  else
    v11 = 1.0;
  if ((a3 & 1) != 0)
    goto LABEL_27;
  swift_bridgeObjectRetain(a1);
  for (i = 0; i != v6; ++i)
  {
    if (v8)
      v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
    else
      v13 = *(id *)(a1 + 8 * i + 32);
    v14 = v13;
    objc_msgSend(v13, "setAlpha:", v11);

  }
  swift_bridgeObjectRelease(a1);
}

uint64_t sub_10000A2C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  _QWORD *v16;
  _QWORD aBlock[5];
  uint64_t v18;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[4] = sub_10002E8F4;
  v18 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100006378;
  aBlock[3] = &unk_1005F9450;
  v9 = _Block_copy(aBlock);
  v10 = swift_retain(v0);
  static DispatchQoS.unspecified.getter(v10);
  v16 = _swiftEmptyArrayStorage;
  v11 = sub_100005E90();
  v12 = sub_10002A750((uint64_t *)&unk_100640F40);
  v13 = sub_10002D190();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v12, v13, v1, v11);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release(v18);
}

id sub_10000A460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_class *ObjectType;
  char *v7;
  NSString v8;
  id v9;
  id v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  v7 = &v3[OBJC_IVAR____TtC9Reminders36TTRIAccountsListsViewPinnedListsCell_delegate];
  *((_QWORD *)v7 + 1) = 0;
  swift_unknownObjectWeakInit(v7, 0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIAccountsListsViewPinnedListsCell_dynamicDateGlyphCache] = 0;
  if (a3)
  {
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v8 = 0;
  }
  v12.receiver = v3;
  v12.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v12, "initWithStyle:reuseIdentifier:", a1, v8);

  v10 = v9;
  sub_100012858();

  return v10;
}

_QWORD *sub_10000A528(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = swift_allocObject(&unk_1005ED1F0, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, a1);
  v1[2] = sub_10002F98C;
  v1[3] = v3;
  v4 = swift_allocObject(&unk_1005ED1F0, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16, a1);
  v1[4] = sub_100024F90;
  v1[5] = v4;
  v5 = swift_allocObject(&unk_1005ED1F0, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, a1);
  v1[6] = sub_100024F90;
  v1[7] = v5;
  v6 = swift_allocObject(&unk_1005ED1F0, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, a1);
  v1[8] = sub_1000771B8;
  v1[9] = v6;
  return v1;
}

int main(int argc, const char **argv, const char **envp)
{
  int v3;
  char **v4;
  uint64_t v5;
  objc_class *ObjCClassFromMetadata;
  NSString *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  NSString *v12;
  uint64_t v13;
  uint64_t v14;

  v3 = static CommandLine.argc.getter(*(_QWORD *)&argc, argv, envp);
  v4 = (char **)static CommandLine.unsafeArgv.getter();
  v5 = type metadata accessor for TTRIApplication();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v5);
  v7 = NSStringFromClass(ObjCClassFromMetadata);
  if (!v7)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v9 = v8;
    v7 = (NSString *)String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
  }
  v10 = type metadata accessor for TTRIAppDelegate();
  v11 = (objc_class *)swift_getObjCClassFromMetadata(v10);
  v12 = NSStringFromClass(v11);
  if (!v12)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v14 = v13;
    v12 = (NSString *)String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v14);
  }
  UIApplicationMain(v3, v4, v7, v12);

  return 0;
}

_QWORD *sub_10000A6D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = swift_allocObject(&unk_1005FE960, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, a1);
  v1[2] = sub_10002F968;
  v1[3] = v3;
  v4 = swift_allocObject(&unk_1005FE960, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16, a1);
  v1[4] = sub_100024F84;
  v1[5] = v4;
  v5 = swift_allocObject(&unk_1005FE960, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, a1);
  v1[6] = sub_100023828;
  v1[7] = v5;
  v6 = swift_allocObject(&unk_1005FE960, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, a1);
  v1[8] = sub_10002F960;
  v1[9] = v6;
  return v1;
}

void sub_10000A7B0(uint64_t a1, char a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;

  v5 = sub_10002A750((uint64_t *)&unk_100646680);
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001F5C4(a1, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10001FCE8((uint64_t)v7);
    v12 = (char *)objc_msgSend(v2, "containerView");
    v13 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders36TTRIAccountsListsViewPinnedListsCell_dynamicDateGlyphCache];
    v14 = *(_QWORD *)&v12[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_dynamicDateGlyphCache];
    *(_QWORD *)&v12[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_dynamicDateGlyphCache] = v13;
    swift_retain(v13);

    v15 = objc_msgSend(v2, "containerView", swift_release(v14).n128_f64[0]);
    if (v15)
    {
      v16 = v15;
      sub_100005508(a2 & 1);

      return;
    }
    __break(1u);
    goto LABEL_8;
  }
  sub_10002A810((uint64_t)v7, (uint64_t)v11);
  v17 = (char *)objc_msgSend(v2, "containerView");
  v18 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders36TTRIAccountsListsViewPinnedListsCell_dynamicDateGlyphCache];
  v19 = *(_QWORD *)&v17[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_dynamicDateGlyphCache];
  *(_QWORD *)&v17[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_dynamicDateGlyphCache] = v18;
  swift_retain(v18);

  v20 = objc_msgSend(v2, "containerView", swift_release(v19).n128_f64[0]);
  if (!v20)
  {
LABEL_8:
    __break(1u);
    return;
  }
  v21 = v20;
  sub_10024DBF4((uint64_t)v11, a2 & 1);

  sub_10002A7D4((uint64_t)v11);
}

uint64_t sub_10000A998(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  if (qword_10063D770 != -1)
    swift_once(&qword_10063D770, sub_100012C34);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100012DC4(v3, (uint64_t)qword_10065A4C8);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Did load root module", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  return a2();
}

uint64_t sub_10000AA84(_QWORD *a1)
{
  swift_release(*a1);
  return swift_bridgeObjectRelease(a1[1]);
}

uint64_t sub_10000AAAC(int a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];
  _QWORD v15[6];
  _BYTE v16[24];
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v4 = (_QWORD *)(v1 + 48);
  v5 = sub_10001413C((_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 72));
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 32);
  swift_unknownObjectRetain(v7);
  sub_10000E860(a1);
  swift_unknownObjectRelease(v7);
  swift_beginAccess(v6 + 96, v16, 0, 0);
  sub_10000AC28(v6 + 96, (uint64_t)v15);
  sub_10000AEFC();
  sub_10000AEA4(v15);
  v8 = v18;
  if (v18)
  {
    v9 = v19;
    sub_10001413C(v17, v18);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v9 + 96))(a1 & 1, v8, v9);
    sub_100027F10(v17);
  }
  else
  {
    sub_1000073A0((uint64_t)v17, (uint64_t *)&unk_1006655F0);
  }
  v10 = *sub_10001413C(v4, *(_QWORD *)(v2 + 72)) + 96;
  swift_beginAccess(v10, v14, 0, 0);
  sub_10000AC28(v10, (uint64_t)v15);
  sub_10000AEFC();
  sub_10000AEA4(v15);
  v11 = v18;
  if (!v18)
    return sub_1000073A0((uint64_t)v17, (uint64_t *)&unk_1006655F0);
  v12 = v19;
  sub_10001413C(v17, v18);
  (*(void (**)(uint64_t, uint64_t))(v12 + 104))(v11, v12);
  return sub_100027F10(v17);
}

uint64_t sub_10000AC28(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for TTRIRootRouter.CurrentDetailContents(a2, a1);
  return a2;
}

uint64_t initializeWithCopy for TTRIRootRouter.CurrentDetailContents(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  char v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 0xD)
    v3 = *(_DWORD *)a2 + 13;
  switch(v3)
  {
    case 0u:
      v4 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v4;
      (**(void (***)(uint64_t))(v4 - 8))(a1);
      *(_BYTE *)(a1 + 40) = 0;
      return a1;
    case 1u:
      v6 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v6;
      (**(void (***)(uint64_t))(v6 - 8))(a1);
      v7 = 1;
      goto LABEL_18;
    case 2u:
      v8 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v8;
      (**(void (***)(uint64_t))(v8 - 8))(a1);
      v7 = 2;
      goto LABEL_18;
    case 3u:
      v9 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v9;
      (**(void (***)(uint64_t))(v9 - 8))(a1);
      v7 = 3;
      goto LABEL_18;
    case 4u:
      v10 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v10;
      (**(void (***)(uint64_t))(v10 - 8))(a1);
      v7 = 4;
      goto LABEL_18;
    case 5u:
      v11 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v11;
      (**(void (***)(uint64_t))(v11 - 8))(a1);
      v7 = 5;
      goto LABEL_18;
    case 6u:
      v12 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v12;
      (**(void (***)(uint64_t))(v12 - 8))(a1);
      v7 = 6;
      goto LABEL_18;
    case 7u:
      v13 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v13;
      (**(void (***)(uint64_t))(v13 - 8))(a1);
      v7 = 7;
      goto LABEL_18;
    case 8u:
      v14 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v14;
      (**(void (***)(uint64_t))(v14 - 8))(a1);
      v7 = 8;
      goto LABEL_18;
    case 9u:
      v15 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v15;
      (**(void (***)(uint64_t))(v15 - 8))(a1);
      v7 = 9;
      goto LABEL_18;
    case 0xAu:
      v16 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v16;
      (**(void (***)(uint64_t))(v16 - 8))(a1);
      v7 = 10;
      goto LABEL_18;
    case 0xBu:
      v17 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v17;
      (**(void (***)(uint64_t))(v17 - 8))(a1);
      v7 = 11;
      goto LABEL_18;
    case 0xCu:
      v18 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v18;
      (**(void (***)(uint64_t))(v18 - 8))(a1);
      v7 = 12;
LABEL_18:
      *(_BYTE *)(a1 + 40) = v7;
      break;
    default:
      v5 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v5;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      break;
  }
  return a1;
}

_QWORD *sub_10000AEA4(_QWORD *a1)
{
  destroy for TTRIRootRouter.CurrentDetailContents(a1);
  return a1;
}

_QWORD *destroy for TTRIRootRouter.CurrentDetailContents(_QWORD *a1)
{
  unsigned int v1;

  v1 = *((unsigned __int8 *)a1 + 40);
  if (v1 >= 0xD)
    v1 = *(_DWORD *)a1 + 13;
  if (v1 <= 0xC)
    return (_QWORD *)sub_100027F10(a1);
  return a1;
}

void sub_10000AEFC()
{
  uint64_t v0;
  _BYTE v1[48];

  sub_10000AC28(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_10000AF3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  sub_10002E37C(&v9, (uint64_t)v6);
  v1 = v7;
  v2 = v8;
  v3 = sub_10001413C(v6, v7);
  v0[3] = v1;
  v0[4] = *(_QWORD *)(v2 + 8);
  v4 = sub_100028D70(v0);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(v4, v3, v1);
  return sub_100027F10(v6);
}

void sub_10000AFB0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = 0;
  *(_OWORD *)v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  JUMPOUT(0x10000AF9CLL);
}

void sub_10000AFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = OBJC_IVAR____TtC9Reminders22TTRIRootViewController_pendingNavigateToRootPromise;
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders22TTRIRootViewController_pendingNavigateToRootPromise);
  if (v4)
  {
    v6 = a2;
    swift_retain(v4);
    DeferredPromise.resolve(_:)(&v6);
    swift_release(v4);
    v5 = *(_QWORD *)(a1 + v3);
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)(a1 + v3) = 0;
  swift_release(v5);
  sub_10023C2C8(0);
}

void sub_10000B060(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_10000B0BC((uint64_t)v4, (SEL *)&selRef_scrollViewDidScroll_);

}

void *sub_10000B0BC(uint64_t a1, SEL *a2)
{
  uint64_t v2;
  void *result;
  void *v6;

  result = (void *)swift_unknownObjectWeakLoadStrong(v2 + qword_100645EE8);
  if (result)
  {
    v6 = result;
    if ((objc_msgSend(result, "respondsToSelector:", *a2) & 1) != 0)
      objc_msgSend(v6, *a2, a1);
    return (void *)swift_unknownObjectRelease(v6);
  }
  return result;
}

void sub_10000B134()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD *v13;
  uint64_t v14;
  id v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  NSObject *oslog;
  uint64_t v20;
  uint64_t v21;

  v0 = (void *)UIApp;
  if (UIApp && (v1 = type metadata accessor for TTRIApplication(), (v2 = swift_dynamicCastClass(v0, v1)) != 0))
  {
    v3 = (void *)v2;
    v4 = objc_allocWithZone((Class)type metadata accessor for PPTLaunch_ExtendedApp());
    v5 = v0;
    v6 = objc_msgSend(v4, "init");
    if (qword_10063D860 != -1)
      swift_once(&qword_10063D860, sub_100005CB4);
    v7 = DeferredPromise.promise.getter();
    if (v7)
    {
      v8 = v7;
      sub_100014160(v3, v7, (uint64_t)&unk_10060A640, (uint64_t)sub_10002D4A4);

      swift_release(v8);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_10063D858 != -1)
      swift_once(&qword_10063D858, sub_1000091DC);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100012DC4(v9, (uint64_t)qword_100663850);
    oslog = Logger.logObject.getter(v10);
    v11 = static os_log_type_t.fault.getter(oslog);
    if (os_log_type_enabled(oslog, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v12 = 138543362;
      v14 = UIApp;
      if (UIApp)
      {
        v20 = UIApp;
        v15 = UIApp;
        v16 = v12 + 4;
        v17 = v12 + 12;
      }
      else
      {
        v17 = v12 + 12;
        v20 = 0;
        v16 = v12 + 4;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v16, v17);
      *v13 = v14;
      _os_log_impl((void *)&_mh_execute_header, oslog, v11, "Unepxected UIApplication class {application: %{public}@, expected: TTRIApplication}", v12, 0xCu);
      v18 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v13, 1, v18);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_10000B410(char a1)
{
  char *v1;
  char *v2;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  id v26;
  char v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  char *v31;
  uint64_t result;
  _QWORD v33[5];
  uint64_t v34;

  v2 = v1;
  v4 = *(void **)&v1[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_mainNavigationController];
  v5 = objc_msgSend(v4, "visibleViewController");
  if (v5)
  {
    v6 = v5;
    v7 = *(void **)&v2[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_ttrMainViewController];
    sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
    v8 = v7;
    v9 = v6;
    LOBYTE(v6) = static NSObject.== infix(_:_:)(v9, v8);

    if ((v6 & 1) != 0)
    {
      v33[0] = v8;
      v10 = sub_10002A750((uint64_t *)&unk_10064F218);
      swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
      v11 = v8;
      return Promise.init(value:)(v33);
    }
  }
  v13 = sub_10002A750(&qword_10064F210);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v14 = DeferredPromise.init()();
  v15 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_pendingNavigateToRootPromise];
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_pendingNavigateToRootPromise] = v14;
  swift_retain(v14);
  swift_release(v15);
  v16 = objc_msgSend(v4, "presentedViewController");
  if (v16)
  {
    v18 = v16;
    ObjectType = swift_getObjectType(v16, v17);
    v20 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIRootNavigationDismissable);
    if (v20)
      v22 = v20;
    else
      v22 = 0;
    if (v20)
      v23 = v18;
    else
      v23 = 0;
    if (!v23
      || (v24 = swift_getObjectType(v23, v21),
          v25 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8),
          v26 = v18,
          v27 = v25(v24, v22),
          v26,
          (v27 & 1) != 0))
    {
      v28 = swift_allocObject(&unk_1005F8498, 25, 7);
      *(_QWORD *)(v28 + 16) = v2;
      *(_BYTE *)(v28 + 24) = a1 & 1;
      v33[4] = sub_10023D1F8;
      v34 = v28;
      v33[0] = _NSConcreteStackBlock;
      v33[1] = 1107296256;
      v33[2] = sub_100006378;
      v33[3] = &unk_1005F84B0;
      v29 = _Block_copy(v33);
      v30 = v34;
      v31 = v2;
      swift_release(v30);
      objc_msgSend(v18, "dismissViewControllerAnimated:completion:", 1, v29);
      _Block_release(v29);

      goto LABEL_16;
    }

  }
LABEL_16:
  result = DeferredPromise.promise.getter();
  if (result)
  {
    v12 = result;
    swift_release(v14);
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_10000B6A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void *, char *, uint64_t))
{
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void *Strong;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v31;
  uint64_t (*v32)(void *, char *, uint64_t);
  _OWORD v33[2];
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  _BYTE v37[24];

  v5 = v3;
  v7 = swift_isaMask & *v3;
  v8 = *(_QWORD *)(v7 + 0x50);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(a1);
  v11 = (char *)&v31 - v10;
  v13 = sub_10002BB68(v12);
  if (!v13)
    return 0;
  v17 = v13;
  v32 = a3;
  v18 = sub_1000232AC(v13, v14, v15, v16);
  v20 = v19;
  v22 = v21;
  v24 = sub_10002BE0C(a1, v18, v19, v21, v23 & 1, v8, *(_QWORD *)(v7 + 88));
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v18);
  if (!v24)
  {
    swift_release(v17);
    return 0;
  }
  Strong = (void *)swift_unknownObjectUnownedLoadStrong((char *)v5 + qword_100645EF8);
  v26 = v24 + *(_QWORD *)(*(_QWORD *)v24 + 144);
  swift_beginAccess(v26, v37, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v26, v8);
  v27 = v32(Strong, v11, a1);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v27)
  {
    *((_QWORD *)&v36 + 1) = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
    *(_QWORD *)&v35 = v27;
    v28 = (void *)v27;
  }
  else
  {
    v28 = 0;
    v35 = 0u;
    v36 = 0u;
  }
  v34 = 0;
  memset(v33, 0, sizeof(v33));
  v29 = v28;
  sub_1000288AC((uint64_t)&v35, v24, (uint64_t)v33);
  swift_release(v24);
  swift_release(v17);
  sub_1000073A0((uint64_t)v33, (uint64_t *)&unk_1006462D8);
  sub_1000073A0((uint64_t)&v35, &qword_100640E50);
  return v27;
}

uint64_t sub_10000B8AC(void *a1, uint64_t a2, void (*a3)(void *, id, char *))
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t result;
  id v24;
  char v25;
  void *Strong;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  void (*v33)(void *, id, char *);
  _OWORD v34[2];
  uint64_t v35;
  _QWORD v36[4];

  v33 = a3;
  v4 = v3;
  v7 = swift_isaMask & *v3;
  v8 = *(_QWORD *)(v7 + 0x50);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(a1);
  v12 = (char *)&v32 - v11;
  v16 = sub_1000232AC(v10, v13, v14, v15);
  v18 = v17;
  v20 = v19;
  v22 = sub_10002BE0C(a2, v16, v17, v19, v21 & 1, v8, *(_QWORD *)(v7 + 88));
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v18);
  result = swift_bridgeObjectRelease(v16);
  if (v22)
  {
    v36[3] = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
    v36[0] = a1;
    v35 = 0;
    memset(v34, 0, sizeof(v34));
    v24 = a1;
    v25 = sub_1000288AC((uint64_t)v36, v22, (uint64_t)v34);
    sub_1000073A0((uint64_t)v34, (uint64_t *)&unk_1006462D8);
    sub_1000073A0((uint64_t)v36, &qword_100640E50);
    if ((v25 & 1) != 0)
    {
      Strong = (void *)swift_unknownObjectUnownedLoadStrong((char *)v4 + qword_100645EF8);
      sub_10043C180();

    }
    v27 = sub_100022F8C(&qword_100645F28, (uint64_t (*)(uint64_t))sub_100022FD4);
    if (v27)
    {
      v28 = v27;
      v29 = (void *)swift_unknownObjectUnownedLoadStrong((char *)v4 + qword_100645EF8);
      v30 = v22 + *(_QWORD *)(*(_QWORD *)v22 + 144);
      v31 = swift_beginAccess(v30, v34, 0, 0);
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v12, v30, v8, v31);
      v33(v29, v24, v12);
      swift_release(v22);
      swift_release(v28);

      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }
    else
    {
      return swift_release(v22);
    }
  }
  return result;
}

void sub_10000BAC0()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  void *object;
  NSString v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;

  v1 = *(void **)(v0 + 24);
  if (*(_BYTE *)(v0 + 32))
  {
    if (*(_BYTE *)(v0 + 32) == 1)
    {
      v2 = 0xD000000000000034;
      v3 = 0x8000000100565960;
      v4 = 0x8000000100565980;
      v5 = 0xD000000000000018;
    }
    else
    {
      v2 = 0xD00000000000002DLL;
      v4 = 0x8000000100565930;
      v5 = 0x6D6574492077654ELL;
      v3 = 0xE800000000000000;
    }
  }
  else
  {
    v2 = 0xD000000000000021;
    v4 = 0x80000001005659C0;
    v5 = 0x696D65522077654ELL;
    v3 = 0xEC0000007265646ELL;
  }
  object = TTRLocalizedString(_:comment:)(*(Swift::String *)&v5, *(Swift::String *)&v2)._object;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v1, "setTitle:forState:", v7, 0);

  objc_msgSend(v1, "setTintColor:", *(_QWORD *)(v0 + 40));
  LODWORD(v7) = *(unsigned __int8 *)(v0 + 32);
  v8 = objc_msgSend(v1, "titleLabel");
  v9 = v8;
  if ((_DWORD)v7 == 1)
  {
    if (v8)
    {
      objc_msgSend(v8, "setNumberOfLines:", 2);

    }
    v10 = objc_msgSend(v1, "titleLabel");
    if (v10)
    {
      v12 = v10;
      objc_msgSend(v10, "setLineBreakMode:", 0);
LABEL_15:

    }
  }
  else
  {
    if (v8)
    {
      objc_msgSend(v8, "setNumberOfLines:", 1);

    }
    v11 = objc_msgSend(v1, "titleLabel");
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v11, "setLineBreakMode:", 2);
      goto LABEL_15;
    }
  }
}

uint64_t sub_10000BCB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  _BYTE v11[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v2);
  if (result)
  {
    v4 = (void *)result;
    if (qword_10063D580 != -1)
      swift_once(&qword_10063D580, sub_10000914C);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100012DC4(v5, (uint64_t)qword_100651DA0);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Donating list names to Siri", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

    v10 = sub_100009998();
    sub_10000A2C8();

    return swift_release(v10);
  }
  return result;
}

void sub_10000BDE0(void *a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  _QWORD v7[5];
  uint64_t v8;

  v2 = objc_msgSend(a1, "windowScene");
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "statusBarManager");

    if (v4)
    {
      v5 = swift_allocObject(&unk_100605128, 24, 7);
      swift_unknownObjectWeakInit(v5 + 16, a1);
      v7[4] = sub_1003E1324;
      v8 = v5;
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 1107296256;
      v7[2] = sub_100006378;
      v7[3] = &unk_100605140;
      v6 = _Block_copy(v7);
      swift_release(v8);
      objc_msgSend(v4, "setDebugMenuHandler:", v6);
      _Block_release(v6);

    }
  }
}

uint64_t sub_10000BED8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10000BEF4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10000BEF4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10002A750((uint64_t *)&unk_10064B8C0);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10000C060(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = v1 + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate____lazy_storage___hashtagAssociation;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate____lazy_storage___hashtagAssociation, v20, 0, 0);
  sub_10000735C(v3, (uint64_t)&v16, &qword_100651F70);
  if (v17)
  {
    sub_100028D38(&v16, &v21);
    v4 = v18;
    sub_100028D38(&v21, &v16);
  }
  else
  {
    sub_1000073A0((uint64_t)&v16, &qword_100651F70);
    v5 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_store);
    v6 = (void *)objc_opt_self(UIApplication);
    v7 = v5;
    v8 = objc_msgSend(v6, "sharedApplication");
    v9 = sub_10000EEC8(v7, v8);
    v11 = v10;
    v13 = v12;

    v22 = type metadata accessor for TTRIHashtagAssociationController();
    v23 = v11;
    *(_QWORD *)&v21 = v9;
    v24 = v13;
    sub_100028CFC((uint64_t)&v21, (uint64_t)&v16);
    v18 = v11;
    v19 = v13;
    swift_beginAccess(v3, v15, 33, 0);
    swift_unknownObjectRetain(v11);
    sub_10002CAE0((uint64_t)&v16, v3);
    swift_endAccess(v15);
    sub_100028D38(&v21, &v16);
    v4 = v23;
  }
  sub_100028D38(&v16, a1);
  return v4;
}

void sub_10000C1E0(int a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  unsigned __int8 v27;
  void *v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int EnumCaseMultiPayload;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t *v53;
  char *v54;
  void *v55;

  v52 = a1;
  v2 = type metadata accessor for TTRIAccountsListsSelection(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v51 = (uint64_t)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v5 = *(_QWORD *)(v50 - 8);
  v6 = __chkstk_darwin(v50);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v48 - v9;
  v11 = sub_10002A750(&qword_100640E90);
  __chkstk_darwin(v11);
  v13 = (void (**)(char *, char *, uint64_t))((char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_10002A750((uint64_t *)&unk_1006549F0);
  v15 = __chkstk_darwin(v14);
  v54 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v48 - v18;
  __chkstk_darwin(v17);
  v53 = (uint64_t *)((char *)&v48 - v20);
  v55 = v1;
  v21 = (char *)objc_msgSend(v1, "view");
  if (!v21)
    goto LABEL_35;
  v22 = v21;
  v49 = v8;
  v23 = type metadata accessor for TTRIAccountsListsTreeView(0);
  v24 = swift_dynamicCastClass(v22, v23);
  if (!v24)
    goto LABEL_34;
  v25 = *(void **)(v24 + qword_10065D8D8);
  if (!v25)
  {
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v26 = v2;
  v27 = objc_msgSend(v25, "isEditing");

  if ((v27 & 1) != 0)
    return;
  v22 = (char *)OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchController;
  v28 = *(void **)((char *)v55 + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchController);
  if (!v28)
    goto LABEL_32;
  if ((objc_msgSend(v28, "isActive") & 1) != 0)
    return;
  v29 = *(void **)&v22[(_QWORD)v55];
  if (!v29)
    goto LABEL_33;
  if ((objc_msgSend(v29, "isBeingPresented") & 1) != 0)
    return;
  v30 = (char *)objc_msgSend(v55, "view");
  if (!v30)
  {
LABEL_35:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
    __break(1u);
    return;
  }
  v22 = v30;
  if (!swift_dynamicCastClass(v30, v23))
  {
LABEL_34:

    goto LABEL_35;
  }
  v31 = v26;
  sub_10000F88C(v13);

  v32 = type metadata accessor for TTRIAccountsListsTreeView.ExtendedSelection(0);
  v33 = v3;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v13, 1, v32) == 1)
  {
    v34 = v53;
    sub_100005804(v53);
LABEL_22:
    v37 = (uint64_t)v54;
    goto LABEL_23;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v32);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      v38 = (char *)v13 + *(int *)(sub_10002A750(&qword_100640E98) + 48);
      v39 = v50;
      v48 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v48(v10, v38, v50);
      v40 = *(_QWORD *)((char *)v55 + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel);
      swift_retain(v40);
      v41 = v49;
      TTRAccountsListsViewModel.validateHashtagSelection(_:allowsLenientFallback:)(v10, 1);
      swift_release(v40);
      v42 = sub_1000175C8((unint64_t *)&qword_100640E30, (uint64_t (*)(uint64_t))&type metadata accessor for REMHashtagLabelSpecifier, (uint64_t)&protocol conformance descriptor for REMHashtagLabelSpecifier);
      LOBYTE(v40) = dispatch thunk of static Equatable.== infix(_:_:)(v41, v10, v39, v42);
      v43 = *(void (**)(char *, uint64_t))(v5 + 8);
      v43(v10, v39);
      if ((v40 & 1) != 0)
      {
        v43(v41, v39);
        v44 = 1;
      }
      else
      {
        v48(v19, v41, v39);
        swift_storeEnumTagMultiPayload(v19, v31, 2);
        v44 = 0;
      }
      v34 = v53;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v19, v44, 1, v31);
      sub_10000F614((uint64_t)v19, (uint64_t)v34, (uint64_t *)&unk_1006549F0);
      sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      goto LABEL_22;
    }
    v36 = sub_10002A750((uint64_t *)&unk_100640EA0);
    sub_10001F544((uint64_t)v13 + *(int *)(v36 + 48), (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  }
  else
  {
    swift_bridgeObjectRelease(*v13);
  }
  v34 = v53;
  v37 = (uint64_t)v54;
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v53, 1, 1, v31);
LABEL_23:
  sub_10000735C((uint64_t)v34, v37, (uint64_t *)&unk_1006549F0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v37, 1, v31) == 1)
  {
    sub_1000073A0((uint64_t)v34, (uint64_t *)&unk_1006549F0);
  }
  else
  {
    v45 = v37;
    v46 = v51;
    sub_10001F580(v45, v51, type metadata accessor for TTRIAccountsListsSelection);
    if ((v52 & 1) != 0)
      v47 = 8;
    else
      v47 = 0;
    sub_1000620B0(v46, v47, 0);
    sub_10001F544(v46, type metadata accessor for TTRIAccountsListsSelection);
    v37 = (uint64_t)v34;
  }
  sub_1000073A0(v37, (uint64_t *)&unk_1006549F0);
}

uint64_t sub_10000C740(void *a1, uint64_t a2)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __int128 v21[2];
  uint64_t v22;
  id v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v4 = objc_msgSend(a1, "viewControllerForColumn:", 0);
  if (v4)
  {
    v5 = v4;
    v6 = objc_opt_self(UINavigationController);
    v7 = swift_dynamicCastObjCClass(v5, v6);

    if (v7)
    {
      v8 = objc_msgSend(a1, "viewControllerForColumn:", 2);
      if (v8)
      {
        v9 = v8;
        v10 = objc_opt_self(UINavigationController);
        v11 = (void *)swift_dynamicCastObjCClass(v9, v10);
        if (v11 && (v12 = objc_msgSend(v11, "topViewController")) != 0)
        {
          v13 = v12;
          v23 = v12;
          v14 = sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
          v15 = v13;
          v16 = sub_10002A750(&qword_10064F240);
          if ((swift_dynamicCast(v21, &v23, v14, v16, 6) & 1) != 0)
          {
            sub_10002E37C(v21, (uint64_t)v24);
            v17 = v25;
            v18 = v26;
            sub_10001413C(v24, v25);
            v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);

            sub_100027F10(v24);
            if ((v19 & 1) == 0)
              return 0;
          }
          else
          {
            v22 = 0;
            memset(v21, 0, sizeof(v21));

            sub_1000073A0((uint64_t)v21, &qword_10064F248);
          }
        }
        else
        {

        }
      }
    }
  }
  return a2;
}

double sub_10000C8E0(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6;
  id v7;
  double v8;

  v6 = a3;
  v7 = a1;
  v8 = sub_10002BAC8(a4, sub_10002BF14, (uint64_t (*)(_QWORD, _QWORD, _QWORD))type metadata accessor for TTRIAnyTreeViewSectionFooterViewProviding, (void (*)(char *, char *))sub_10002BF3C);

  return v8;
}

uint64_t sub_10000C950(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;

  *(_BYTE *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  v5 = sub_100011FAC();
  *(_QWORD *)(v2 + 24) = v5;
  v6 = a1[3];
  v7 = sub_10001413C(a1, v6);
  v8 = v5;
  v9 = _bridgeAnythingToObjectiveC<A>(_:)(v7, v6);
  objc_msgSend(v8, "addTarget:action:forControlEvents:", v9, a2, 0x2000);

  swift_unknownObjectRelease(v9);
  v10 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CursorInteractionDelegate()), "init");
  *(_QWORD *)(v2 + 48) = v10;
  v11 = objc_msgSend(objc_allocWithZone((Class)UIPointerInteraction), "initWithDelegate:", v10);
  v12 = *(void **)(v2 + 24);
  objc_msgSend(v12, "addInteraction:", v11);
  *(_QWORD *)(v2 + 16) = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v12);
  sub_10000BAC0();

  sub_100027F10(a1);
  return v2;
}

id sub_10000CA74(uint64_t a1)
{
  NSString v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  _QWORD v8[5];
  uint64_t v9;

  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v2);

  v4 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithImage:style:target:action:", v3, 0, 0, 0);
  v5 = swift_allocObject(&unk_1005ED088, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, a1);
  v8[4] = sub_1000762CC;
  v9 = v5;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_100081A10;
  v8[3] = &unk_1005ED0C8;
  v6 = _Block_copy(v8);
  swift_release(v9);
  objc_msgSend(v4, "_setSecondaryActionsProvider:", v6);
  _Block_release(v6);
  return v4;
}

double sub_10000CBB4(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6;
  id v7;
  double v8;

  v6 = a3;
  v7 = a1;
  v8 = sub_10002BAC8(a4, sub_10002BBC0, (uint64_t (*)(_QWORD, _QWORD, _QWORD))type metadata accessor for TTRIAnyTreeViewSectionHeaderViewProviding, (void (*)(char *, char *))sub_10002BF1C);

  return v8;
}

uint64_t sub_10000CC24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[5];
  _QWORD v15[5];

  v1 = OBJC_IVAR____TtC9Reminders15TTRIAppDelegate____lazy_storage___attachmentThumbnailsManager;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate____lazy_storage___attachmentThumbnailsManager);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate____lazy_storage___attachmentThumbnailsManager);
  }
  else
  {
    v4 = v0;
    v5 = type metadata accessor for TTRAttachmentThumbnailSizeProvider(0);
    v6 = static TTRAttachmentThumbnailSizeProviding<>.remindersList.getter();
    v7 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
    v8 = static OS_dispatch_queue.main.getter(v7);
    type metadata accessor for RDIDispatchQueue(0);
    v9 = static RDIDispatchQueue.utilityQueue.getter();
    v10 = type metadata accessor for TTRThumbnailGenerator(0);
    swift_allocObject(v10, 32, 7);
    v15[3] = v10;
    v15[4] = &protocol witness table for TTRThumbnailGenerator;
    v15[0] = TTRThumbnailGenerator.init(queue:backgroundQueue:)(v8, v9);
    v14[3] = v5;
    v14[4] = &protocol witness table for TTRAttachmentThumbnailSizeProvider;
    v14[0] = v6;
    v11 = type metadata accessor for TTRAttachmentThumbnailsManager(0);
    swift_allocObject(v11, 120, 7);
    v3 = TTRAttachmentThumbnailsManager.init(thumbnailSizeProvider:thumbnailGenerator:)(v14, v15);
    v12 = *(_QWORD *)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v3;
    swift_retain(v3);
    swift_release(v12);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

uint64_t sub_10000CD58(void *a1)
{
  char *v1;
  char *v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[3];
  __int128 v39;
  __int128 v40;
  uint64_t v41;

  v2 = v1;
  v4 = objc_msgSend(a1, "viewControllerForColumn:", 0);
  if (!v4)
    goto LABEL_10;
  v5 = v4;
  v6 = objc_opt_self(UINavigationController);
  v7 = swift_dynamicCastObjCClass(v5, v6);
  if (!v7)
    goto LABEL_9;
  v8 = (void *)v7;
  v9 = objc_msgSend(a1, "viewControllerForColumn:", 2);
  if (!v9)
    goto LABEL_9;
  v10 = v9;
  v11 = objc_opt_self(UINavigationController);
  v12 = swift_dynamicCastObjCClass(v10, v11);
  if (!v12)
  {

LABEL_9:
    goto LABEL_10;
  }
  v13 = (id)v12;
  v14 = objc_msgSend(v8, "topViewController");
  if (v14
    && (v15 = v14, v14, v15 == v13)
    && (v27 = objc_msgSend(v13, "topViewController")) != 0)
  {
    v28 = v27;
    v38[0] = v27;
    v29 = sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
    v30 = v28;
    v31 = sub_10002A750(&qword_10064F228);
    if ((swift_dynamicCast(&v39, v38, v29, v31, 6) & 1) != 0)
    {
      sub_10002E37C(&v39, (uint64_t)v35);
      v32 = v36;
      v33 = v37;
      sub_10001413C(v35, v36);
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v33);

      sub_100027F10(v35);
    }
    else
    {
      v41 = 0;
      v39 = 0u;
      v40 = 0u;

      sub_1000073A0((uint64_t)&v39, (uint64_t *)&unk_10064F230);
    }
  }
  else
  {

  }
LABEL_10:
  v16 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter];
  v17 = objc_msgSend(v2, "isCollapsed");
  v18 = sub_10001413C((_QWORD *)(v16 + 48), *(_QWORD *)(v16 + 72));
  v19 = *v18;
  v20 = *(_QWORD *)(*v18 + 32);
  swift_unknownObjectRetain(v20);
  sub_10000E860((int)v17);
  swift_unknownObjectRelease(v20);
  swift_beginAccess(v19 + 96, v38, 0, 0);
  sub_10000AC28(v19 + 96, (uint64_t)v35);
  sub_10000AEFC();
  sub_10000AEA4(v35);
  v21 = *((_QWORD *)&v40 + 1);
  if (*((_QWORD *)&v40 + 1))
  {
    v22 = v41;
    sub_10001413C(&v39, *((uint64_t *)&v40 + 1));
    (*(void (**)(id, uint64_t, uint64_t))(v22 + 96))(v17, v21, v22);
    sub_100027F10(&v39);
  }
  else
  {
    sub_1000073A0((uint64_t)&v39, (uint64_t *)&unk_1006655F0);
  }
  v23 = *sub_10001413C((_QWORD *)(v16 + 48), *(_QWORD *)(v16 + 72)) + 96;
  swift_beginAccess(v23, &v34, 0, 0);
  sub_10000AC28(v23, (uint64_t)v35);
  sub_10000AEFC();
  sub_10000AEA4(v35);
  v24 = *((_QWORD *)&v40 + 1);
  if (!*((_QWORD *)&v40 + 1))
    return sub_1000073A0((uint64_t)&v39, (uint64_t *)&unk_1006655F0);
  v25 = v41;
  sub_10001413C(&v39, *((uint64_t *)&v40 + 1));
  (*(void (**)(uint64_t, uint64_t))(v25 + 104))(v24, v25);
  return sub_100027F10(&v39);
}

uint64_t sub_10000D098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12;
  NSString v13;
  id v14;
  id v15;
  NSString v16;
  id v17;
  id v18;
  NSString v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v26[24];
  _BYTE v27[24];
  _QWORD v28[5];

  v28[3] = type metadata accessor for TTRIRootRouter();
  v28[4] = &off_1005FD258;
  v28[0] = a2;
  *(_QWORD *)(a6 + 24) = 0;
  swift_unknownObjectWeakInit(a6 + 16, 0);
  v12 = objc_allocWithZone((Class)TTRUndoManager);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "initWithDebugIdentifier:", v13);

  *(_QWORD *)(a6 + 112) = v14;
  v15 = objc_allocWithZone((Class)TTRUndoManager);
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "initWithDebugIdentifier:", v16);

  *(_QWORD *)(a6 + 120) = v17;
  v18 = objc_allocWithZone((Class)TTRUndoManager);
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v18, "initWithDebugIdentifier:", v19);

  *(_QWORD *)(a6 + 128) = v20;
  *(_WORD *)(a6 + 144) = 0;
  *(_QWORD *)(a6 + 32) = a1;
  *(_QWORD *)(a6 + 40) = &off_1005EC9A0;
  sub_100010634((uint64_t)v28, a6 + 48);
  *(_QWORD *)(a6 + 88) = a3;
  *(_QWORD *)(a6 + 96) = a4;
  *(_QWORD *)(a6 + 104) = a5;
  v21 = *(void **)(a6 + 112);
  v22 = type metadata accessor for TTRUndoNavigationPresenterCapability(0);
  swift_allocObject(v22, 64, 7);
  v23 = TTRUndoNavigationPresenterCapability.init(undoManager:)(v21);
  sub_100027F10(v28);
  *(_QWORD *)(a6 + 136) = v23;
  swift_beginAccess(v23 + 16, v27, 1, 0);
  *(_QWORD *)(v23 + 24) = &off_1005F9ED0;
  swift_unknownObjectWeakAssign(v23 + 16, a6);
  v24 = *(_QWORD *)(a6 + 88) + direct field offset for TTRGeoLocationService.delegate;
  swift_beginAccess(v24, v26, 1, 0);
  *(_QWORD *)(v24 + 8) = &off_1005F9EE0;
  swift_unknownObjectWeakAssign(v24, a6);
  return a6;
}

id sub_10000D2DC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char v11;
  char v12;
  char v13;
  int v14;
  char v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  int v38;
  id v39;
  uint64_t v40;

  v1 = v0;
  v2 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(v0, "isViewLoaded");
  if ((_DWORD)result)
  {
    v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel];
    v7 = swift_retain(*(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel]);
    v8 = TTRAccountsListsViewModel.accounts.getter(v7);
    swift_release(v6);
    if (!*(_QWORD *)(v8 + 16))
      return (id)swift_bridgeObjectRelease(v8);
    v9 = *(_QWORD *)(v8 + 40);
    v40 = *(_QWORD *)(v8 + 32);
    v10 = *(void **)(v8 + 48);
    v11 = *(_BYTE *)(v8 + 56);
    v12 = *(_BYTE *)(v8 + 57);
    v13 = *(_BYTE *)(v8 + 58);
    v14 = *(unsigned __int8 *)(v8 + 59);
    v38 = *(unsigned __int8 *)(v8 + 60);
    LODWORD(v39) = v14;
    v15 = *(_BYTE *)(v8 + 61);
    swift_bridgeObjectRetain(v9);
    v16 = v10;
    swift_bridgeObjectRelease(v8);
    if ((v13 & 1) == 0)
    {

      return (id)swift_bridgeObjectRelease(v9);
    }
    *(_QWORD *)v4 = v40;
    *((_QWORD *)v4 + 1) = v9;
    *((_QWORD *)v4 + 2) = v16;
    v4[24] = v11;
    v4[25] = v12;
    v4[26] = 1;
    v4[27] = (char)v39;
    v4[28] = v38;
    v4[29] = v15;
    swift_storeEnumTagMultiPayload(v4, v2, 3);
    swift_bridgeObjectRetain(v9);
    v17 = v16;
    v18 = objc_msgSend(v1, "view");
    if (v18)
    {
      v19 = v18;
      v20 = type metadata accessor for TTRIAccountsListsTreeView(0);
      v21 = swift_dynamicCastClass(v19, v20);
      if (v21)
      {
        v40 = v9;
        v22 = *(void **)(v21 + qword_10065D8E0);
        if (v22)
        {
          v39 = v17;
          v23 = v22;
          v24 = sub_10006B64C();
          v26 = v25;
          v28 = v27;
          v29 = sub_10007335C((uint64_t)v4, v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (void (*)(uint64_t))&TTRAccountsListsViewModel.Item.treeItemIdentifier.getter, (uint64_t (*)(char *))sub_1002AA6DC, sub_1000CE774);
          swift_bridgeObjectRelease(v28);
          swift_bridgeObjectRelease(v26);
          swift_bridgeObjectRelease(v24);
          if (v29)
          {
            v30 = *(unsigned __int8 *)(v29 + 72);

            swift_release(v29);
            if (v30 == 2)
            {
              sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);

              return (id)swift_bridgeObjectRelease(v40);
            }
          }
          else
          {

          }
          v31 = objc_msgSend(v1, "view");
          v32 = v40;
          if (!v31)
            goto LABEL_23;
          v33 = v31;
          v34 = swift_dynamicCastClass(v31, v20);
          if (!v34)
          {

            goto LABEL_23;
          }
          v35 = *(void **)(v34 + qword_10065D8E0);
          if (v35)
          {
            v36 = v35;
            sub_100073440((uint64_t)v4, 5);

            swift_bridgeObjectRelease(v32);
            return (id)sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
      }

    }
LABEL_23:
    result = (id)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_10000D63C(char a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t Strong;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  void *v29;
  NSString v30;
  id v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  void *v39;
  NSString v40;
  id v41;
  uint64_t v42;

  Strong = swift_unknownObjectWeakLoadStrong(v5 + 48);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = swift_unknownObjectWeakLoadStrong(v5 + 16);
    if (v13)
    {
      v14 = v13;
      v15 = *(_QWORD *)(v5 + 24);
      v16 = sub_10000B410(a1 & 1);
      v17 = swift_allocObject(a2, 32, 7);
      *(_QWORD *)(v17 + 16) = v14;
      *(_QWORD *)(v17 + 24) = v15;
      swift_unknownObjectRetain(v14);
      v19 = (void *)zalgo.getter(v18);
      v20 = sub_10002A750(&qword_100653BF0);
      v21 = dispatch thunk of Promise.then<A>(on:closure:)(v19, a3, v17, v20);
      swift_release(v16);
      swift_release(v17);

      v22 = sub_10002A750(a4);
      v23 = dispatch thunk of Promise.cast<A>(as:)(v22, v22);

      swift_unknownObjectRelease(v14);
      swift_release(v21);
    }
    else
    {
      if (qword_10063D5E0 != -1)
        swift_once(&qword_10063D5E0, sub_10029A924);
      v34 = type metadata accessor for Logger(0);
      v35 = sub_100012DC4(v34, (uint64_t)qword_100653B00);
      v36 = Logger.logObject.getter(v35);
      v37 = static os_log_type_t.fault.getter(v36);
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v38 = 0;
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "Root Router has a nil delegate. Navigation failed", v38, 2u);
        swift_slowDealloc(v38, -1, -1);
      }

      v39 = (void *)objc_opt_self(REMError);
      v40 = String._bridgeToObjectiveC()();
      v41 = objc_msgSend(v39, "internalErrorWithDebugDescription:", v40);

      v42 = sub_10002A750(a5);
      swift_allocObject(v42, *(unsigned int *)(v42 + 48), *(unsigned __int16 *)(v42 + 52));
      v23 = Promise.init(error:)(v41);

    }
    return v23;
  }
  else
  {
    if (qword_10063D5E0 != -1)
      swift_once(&qword_10063D5E0, sub_10029A924);
    v24 = type metadata accessor for Logger(0);
    v25 = sub_100012DC4(v24, (uint64_t)qword_100653B00);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.fault.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Root Router has a nil view controller. Navigation failed", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }

    v29 = (void *)objc_opt_self(REMError);
    v30 = String._bridgeToObjectiveC()();
    v31 = objc_msgSend(v29, "internalErrorWithDebugDescription:", v30);

    v32 = sub_10002A750(a5);
    swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
    return Promise.init(error:)(v31);
  }
}

id sub_10000D9A8(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  id v15;
  objc_super v17;

  v9 = &v4[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_pinnedListsViewDelegate];
  *((_QWORD *)v9 + 1) = 0;
  swift_unknownObjectWeakInit(v9, 0);
  v10 = &v4[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectedPinnedList];
  v11 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *(_QWORD *)&v4[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_dynamicDateGlyphCache] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_pinnedLists] = _swiftEmptyArrayStorage;
  v4[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectedStateShowsPinnedListColor] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_trailingLayoutMarginForControls] = 0x4030000000000000;
  v4[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectionFollowsFocus] = 0;
  v4[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_usesLargeTextLayout] = 0;
  v12 = &v4[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_dropTargetPinnedListID];
  v13 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v17.receiver = v4;
  v17.super_class = (Class)type metadata accessor for TTRIPinnedListsView(0);
  v14 = objc_msgSendSuper2(&v17, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v14, "setColumnSpacing:", 16.0);
  objc_msgSend(v14, "setRowSpacing:", 16.0);
  objc_msgSend(v14, "setPreservesSuperviewLayoutMargins:", 1);
  objc_msgSend(v14, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v14, "setInvalidatingIntrinsicContentSizeAlsoInvalidatesSuperview:", 1);
  objc_msgSend(v14, "setHorizontalAlignment:", 0);
  objc_msgSend(v14, "setHorizontalDistribution:", 1);
  v15 = objc_msgSend(objc_allocWithZone((Class)UIDropInteraction), "initWithDelegate:", v14);
  objc_msgSend(v14, "addInteraction:", v15);

  return v14;
}

id sub_10000DBB0(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (**v10)(uint64_t, uint64_t);
  uint64_t v11;
  void (**v12)(uint64_t, uint64_t);
  uint64_t v13;
  void (**v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t (**v16)(uint64_t, uint64_t);
  uint64_t v17;
  double v18;
  uint64_t (**v19)(uint64_t, uint64_t);
  objc_super v21;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  swift_unknownObjectWeakInit(&v2[qword_10065B7C8], 0);
  *(_QWORD *)&v2[qword_10065B808] = 0;
  v5 = swift_allocObject(&unk_1005FE938, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, a1);
  v6 = &v2[qword_10065B7D0];
  *(_QWORD *)v6 = sub_1002DD040;
  *((_QWORD *)v6 + 1) = v5;
  v7 = swift_allocObject(&unk_1005FE938, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16, a1);
  v8 = &v2[qword_10065B7D8];
  *(_QWORD *)v8 = sub_1002DD040;
  *((_QWORD *)v8 + 1) = v7;
  v9 = swift_allocObject(&unk_1005FE938, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, a1);
  v10 = (uint64_t (**)(uint64_t, uint64_t))&v2[qword_10065B7E0];
  *v10 = sub_1002DC2A8;
  v10[1] = (uint64_t (*)(uint64_t, uint64_t))v9;
  v11 = swift_allocObject(&unk_1005FE938, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, a1);
  v12 = (void (**)(uint64_t, uint64_t))&v2[qword_10065B7E8];
  *v12 = sub_1002DC288;
  v12[1] = (void (*)(uint64_t, uint64_t))v11;
  v13 = swift_allocObject(&unk_1005FE938, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, a1);
  v14 = (void (**)(uint64_t, uint64_t))&v2[qword_10065B7F0];
  *v14 = sub_1002DC288;
  v14[1] = (void (*)(uint64_t, uint64_t))v13;
  v15 = swift_allocObject(&unk_1005FE938, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, a1);
  v16 = (uint64_t (**)(uint64_t, uint64_t))&v2[qword_10065B7F8];
  *v16 = sub_1002DC2E8;
  v16[1] = (uint64_t (*)(uint64_t, uint64_t))v15;
  v17 = swift_allocObject(&unk_1005FE938, 24, 7);
  *(_QWORD *)&v18 = swift_unknownObjectWeakInit(v17 + 16, a1).n128_u64[0];
  v19 = (uint64_t (**)(uint64_t, uint64_t))&v2[qword_10065B800];
  *v19 = sub_1002DC304;
  v19[1] = (uint64_t (*)(uint64_t, uint64_t))v17;
  v21.receiver = v2;
  v21.super_class = ObjectType;
  return objc_msgSendSuper2(&v21, "init", v18);
}

uint64_t sub_10000DDB8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t result;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  __int128 v39[3];
  _QWORD v40[5];

  v37 = a5;
  v38 = a8;
  v35 = a7;
  v36 = a3;
  v12 = type metadata accessor for REMNavigationSpecifier(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010634(a1, (uint64_t)v39);
  v16 = *(void **)(a1 + 40);
  result = sub_10002E37C(v39, (uint64_t)v40);
  v18 = (void *)UIApp;
  if (UIApp)
  {
    v19 = v16;
    if (objc_msgSend(v18, "launchedToTest"))
    {
      sub_10001413C(v40, v40[3]);
      v20 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
      v21 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v15, v20, v21);
      v22 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for REMNavigationSpecifier.root(_:), v12);
      __chkstk_darwin(v22);
      *(&v34 - 4) = (uint64_t)v15;
      *(&v34 - 3) = v23;
      *(&v34 - 2) = 0;
      v24 = sub_10002A750(&qword_100651F48);
      v25 = firstly<A>(closure:)(a6, &v34 - 6, v24);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
    else
    {
      sub_100010634((uint64_t)v40, (uint64_t)v39);
      v26 = sub_10002A750(&qword_100653148);
      swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
      v25 = Promise.init(value:)(v39);
    }
    v27 = v38;
    v28 = (_QWORD *)swift_allocObject(v35, 56, 7);
    v28[2] = a2;
    v28[3] = v19;
    v29 = v37;
    v28[4] = v36;
    v28[5] = a4;
    v28[6] = v29;
    v30 = v19;
    v31 = a2;
    swift_bridgeObjectRetain(a4);
    v32 = (void *)zalgo.getter(v29);
    v33 = dispatch thunk of Promise.then<A>(on:closure:)(v32, v27, v28, (char *)&type metadata for () + 8);
    swift_release(v33);
    swift_release(v25);
    swift_release(v28);

    return sub_100027F10(v40);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10000E014(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  id v5;
  uint64_t result;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;

  v1 = *sub_10001413C((_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 72)) + 48;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (!Strong)
    return 1;
  v3 = Strong;
  v4 = objc_msgSend(Strong, "traitCollection");

  v5 = objc_msgSend(v4, "horizontalSizeClass");
  if (v5 != (id)1)
    return 1;
  result = swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v7 = (char *)result;
    if (objc_msgSend((id)result, "isCollapsed"))
    {
      v8 = objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_mainNavigationController], "viewControllers");
      v9 = sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
      v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

      v11 = (char *)*(id *)&v7[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController];
      sub_10002D318((uint64_t)v11, v10);

      swift_bridgeObjectRelease(v10);
      v7 = v11;
    }

    return 0;
  }
  return result;
}

char *sub_10000E144(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  id v4;
  void *v5;
  id v6;
  id v7;
  NSString v8;
  void *v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders22TTRIMenuSystemNotifier_observer] = 0;
  v16.receiver = v2;
  v16.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v16, "init");
  v5 = (void *)objc_opt_self(NSNotificationCenter);
  v6 = v4;
  v7 = objc_msgSend(v5, "defaultCenter");
  v8 = String._bridgeToObjectiveC()();
  v15[3] = ObjectType;
  v9 = (void *)objc_opt_self(NSOperationQueue);
  v10 = (char *)v6;
  v11 = objc_msgSend(v9, "mainQueue", v6);
  v12 = NSNotificationCenter.ttr_addObserver(forName:object:queue:using:)(v8, v15, v11, sub_1000077D0, 0);

  sub_10002CAA0((uint64_t)v15);
  v13 = *(_QWORD *)&v10[OBJC_IVAR____TtC9Reminders22TTRIMenuSystemNotifier_observer];
  *(_QWORD *)&v10[OBJC_IVAR____TtC9Reminders22TTRIMenuSystemNotifier_observer] = v12;
  swift_release(v13);
  return v10;
}

void sub_10000E280(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;

  if (*(_BYTE *)(v1 + 32) == (a1 & 1))
    return;
  v2 = v1;
  if (qword_10063D6A8 != -1)
    swift_once(&qword_10063D6A8, sub_10000758C);
  v3 = type metadata accessor for Logger(0);
  sub_100012DC4(v3, (uint64_t)qword_100656CC8);
  v4 = swift_retain_n(v1, 2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v26 = v8;
    *(_DWORD *)v7 = 136315138;
    if (*(_BYTE *)(v2 + 32))
      v9 = 1702195828;
    else
      v9 = 0x65736C6166;
    if (*(_BYTE *)(v2 + 32))
      v10 = 0xE400000000000000;
    else
      v10 = 0xE500000000000000;
    v25 = sub_100027E40(v9, v10, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v7 + 4, v7 + 12);
    swift_release_n(v2, 2);
    swift_bridgeObjectRelease(v10);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Application visibility did change {isVisible: %s}", v7, 0xCu);
    swift_arrayDestroy(v8, 1, &type metadata for Any[8]);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {

    swift_release_n(v2, 2);
  }
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (Strong)
  {
    v12 = Strong;
    if (*(_BYTE *)(v2 + 32) == 1)
    {
      v13 = Strong
          + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_backgroundTaskIdentifierForApplicationVisibilityChangeHandler;
      if ((*(_BYTE *)(Strong
                     + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_backgroundTaskIdentifierForApplicationVisibilityChangeHandler
                     + 8) & 1) == 0)
      {
        v14 = *(_QWORD *)v13;
        v15 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
        objc_msgSend(v15, "endBackgroundTask:", v14);

        *(_QWORD *)v13 = 0;
        *(_BYTE *)(v13 + 8) = 1;
        if (qword_10063D580 != -1)
          swift_once(&qword_10063D580, sub_10000914C);
        v16 = sub_100012DC4(v3, (uint64_t)qword_100651DA0);
        v17 = Logger.logObject.getter(v16);
        v18 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v17, v18))
        {
          v19 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v19 = 0;
          _os_log_impl((void *)&_mh_execute_header, v17, v18, "application did tear down background task for application visibility change handler", v19, 2u);
          swift_slowDealloc(v19, -1, -1);
        }
        swift_unknownObjectRelease(v12);

        goto LABEL_23;
      }
    }
    else
    {
      sub_1002573CC();
    }
    swift_unknownObjectRelease(v12);
  }
LABEL_23:
  if (*(_BYTE *)(v2 + 32) == 1)
  {
    v20 = *(_QWORD *)(v2 + 64);
    if (v20)
    {
      *(_QWORD *)(v2 + 64) = 0;
      v21 = swift_release(v20);
      v22 = Logger.logObject.getter(v21);
      v23 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v24 = 0;
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "Application visibility change handler did tear down subscription for timeout", v24, 2u);
        swift_slowDealloc(v24, -1, -1);
      }

    }
    sub_100012E1C(0, 1);
  }
  else
  {
    sub_10035A76C();
  }
}

id sub_10000E644()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  char v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  objc_super v25;

  v1 = v0;
  v2 = OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_intentPerformer;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_intentPerformer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders15TTRIAppDelegate____lazy_storage___siriVocabularyUpdater] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders15TTRIAppDelegate____lazy_storage___attachmentThumbnailsManager] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders15TTRIAppDelegate____lazy_storage___geoService] = 0;
  v3 = &v0[OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_applicationRunProperties];
  v3[4] = 0;
  *(_DWORD *)v3 = 2;
  v4 = OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_widgetRefresher;
  v5 = v0;
  v6 = *(_QWORD *)TTRWidgetCenter.shared.unsafeMutableAddressor();
  v7 = type metadata accessor for TTRWidgetRefresher(0);
  swift_allocObject(v7, 32, 7);
  *(_QWORD *)&v0[v4] = TTRWidgetRefresher.init(widgetCenter:)(v6);
  v8 = OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_appIntentsServicesRefresher;
  v9 = type metadata accessor for AppIntentsServicesRefresher(0);
  swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  v10 = swift_retain(v6);
  *(_QWORD *)&v5[v8] = AppIntentsServicesRefresher.init()(v10);
  *(_QWORD *)&v5[OBJC_IVAR____TtC9Reminders15TTRIAppDelegate____lazy_storage___applicationVisibilityChangeHandler] = 0;
  v11 = &v5[OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_backgroundTaskIdentifierForApplicationVisibilityChangeHandler];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  v12 = &v5[OBJC_IVAR____TtC9Reminders15TTRIAppDelegate____lazy_storage___hashtagAssociation];
  *((_OWORD *)v12 + 1) = 0u;
  *((_OWORD *)v12 + 2) = 0u;
  *(_OWORD *)v12 = 0u;
  v13 = static TTRProcessEnvironment.currentProcessEnvironment.getter();
  v14 = TTRProcessEnvironment.isolatedStoreContainerToken.getter();
  if (v14)
  {
    v15 = (void *)v14;
    v16 = objc_msgSend(objc_allocWithZone((Class)REMStore), "initWithStoreContainerToken:", v14);

  }
  else
  {
    v16 = objc_msgSend(objc_allocWithZone((Class)REMStore), "initUserInteractive:", 1);
  }
  *(_QWORD *)&v5[OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_store] = v16;
  v17 = OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_store;
  v18 = v16;
  v19 = TTRProcessEnvironment.assertOnMainThreadFetches.getter(v13);
  swift_bridgeObjectRelease(v13);
  objc_msgSend(v18, "setAssertOnMainThreadFetches:", v19 & 1);

  v20 = *(void **)&v5[v17];
  v21 = type metadata accessor for REMStoreIntentPerformer(0);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  v22 = REMStoreIntentPerformer.init(store:)(v20);
  v23 = *(_QWORD *)&v1[v2];
  *(_QWORD *)&v1[v2] = v22;

  swift_release(v23);
  v25.receiver = v5;
  v25.super_class = (Class)type metadata accessor for TTRIAppDelegate();
  return objc_msgSendSuper2(&v25, "init");
}

uint64_t sub_10000E860(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  int v57;
  uint64_t v58;
  uint64_t aBlock[5];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v2 = v1;
  v57 = a1;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v52 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v54 = *(_QWORD *)(v6 - 8);
  v55 = v6;
  __chkstk_darwin(v6);
  v53 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_100656198);
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for REMAccountsListDataView.Model(0);
  v58 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = v13;
  __chkstk_darwin(v12);
  v56 = (char *)&v47 - v15;
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v16 = type metadata accessor for Logger(0);
  v17 = sub_100012DC4(v16, (uint64_t)qword_100655F30);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v48 = v5;
    v20 = swift_slowAlloc(12, -1);
    v49 = v3;
    v21 = (uint8_t *)v20;
    v22 = swift_slowAlloc(32, -1);
    v50 = v2;
    v23 = v22;
    *(_DWORD *)v21 = 136315138;
    aBlock[0] = v22;
    if ((v57 & 1) != 0)
      v24 = 1702195828;
    else
      v24 = 0x65736C6166;
    if ((v57 & 1) != 0)
      v25 = 0xE400000000000000;
    else
      v25 = 0xE500000000000000;
    v61 = sub_100027E40(v24, v25, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v21 + 4, v21 + 12);
    v26 = v25;
    v5 = v48;
    swift_bridgeObjectRelease(v26);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Accounts list rootViewCollapseStateDidChange {isCollapsed: %s}", v21, 0xCu);
    swift_arrayDestroy(v23, 1, &type metadata for Any[8]);
    v27 = v23;
    v2 = v50;
    swift_slowDealloc(v27, -1, -1);
    v28 = v21;
    v3 = v49;
    swift_slowDealloc(v28, -1, -1);
  }

  v29 = v2 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel;
  swift_beginAccess(v2 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel, &v61, 0, 0);
  sub_10000735C(v29, (uint64_t)v10, &qword_100656198);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v10, 1, v11) == 1)
  {
    sub_1000073A0((uint64_t)v10, &qword_100656198);
  }
  else
  {
    v30 = v58;
    v31 = *(void (**)(char *, char *, uint64_t))(v58 + 32);
    v32 = v56;
    v31(v56, v10, v11);
    sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
    v33 = (void *)static OS_dispatch_queue.main.getter();
    v34 = swift_allocObject(&unk_100601370, 24, 7);
    swift_weakInit(v34 + 16, v2);
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v14, v32, v11);
    v35 = *(unsigned __int8 *)(v30 + 80);
    v36 = (v35 + 24) & ~v35;
    v37 = v11;
    v38 = swift_allocObject(&unk_100601AF0, v36 + v51, v35 | 7);
    *(_QWORD *)(v38 + 16) = v34;
    v31((char *)(v38 + v36), v14, v37);
    aBlock[4] = (uint64_t)sub_100349FB8;
    v60 = v38;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100006378;
    aBlock[3] = (uint64_t)&unk_100601B08;
    v39 = _Block_copy(aBlock);
    v40 = swift_release(v60);
    v41 = v53;
    static DispatchQoS.unspecified.getter(v40);
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    v42 = sub_1000175C8((unint64_t *)&qword_1006447D0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v43 = sub_10002A750((uint64_t *)&unk_100640F40);
    v44 = sub_10002D150((unint64_t *)&qword_1006447E0, (uint64_t *)&unk_100640F40);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v43, v44, v3, v42);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v41, v5, v39);
    _Block_release(v39);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v5, v3);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v41, v55);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v56, v37);
  }
  result = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (result)
  {
    v46 = result;
    sub_100013518(v57 & 1);
    return swift_unknownObjectRelease(v46);
  }
  return result;
}

void sub_10000ED98()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  Swift::String v4;
  Swift::String v5;
  void *object;
  NSString v7;

  objc_msgSend(v0, "setDefinesPresentationContext:", 1);
  objc_msgSend(v0, "setTitle:", 0);
  objc_msgSend(v0, "setExtendedLayoutIncludesOpaqueBars:", 1);
  v1 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v1, "setLargeTitleDisplayMode:", 2);

  v2 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v2, "setTitle:", 0);

  v3 = objc_msgSend(v0, "navigationItem");
  v4._object = (void *)0x8000000100560E30;
  v5._countAndFlagsBits = 0x737473694CLL;
  v5._object = (void *)0xE500000000000000;
  v4._countAndFlagsBits = 0xD00000000000002CLL;
  object = TTRLocalizedString(_:comment:)(v5, v4)._object;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v3, "setBackButtonTitle:", v7);

}

id sub_10000EEC8(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  objc_class *v11;
  char *v12;
  uint64_t *v13;
  id v14;
  id v15;
  id v16;
  objc_super v18;
  _QWORD v19[5];

  v4 = type metadata accessor for TTRIHashtagAssociationBackgroundTaskPerformer(0);
  swift_allocObject(v4, 24, 7);
  v19[3] = v4;
  v19[4] = &protocol witness table for TTRIHashtagAssociationBackgroundTaskPerformer;
  v19[0] = TTRIHashtagAssociationBackgroundTaskPerformer.init(app:)(a2);
  v5 = type metadata accessor for TTRHashtagAssociationInteractor(0);
  swift_allocObject(v5, 72, 7);
  v6 = TTRHashtagAssociationInteractor.init(store:backgroundTaskPerformer:)(a1, v19);
  v7 = type metadata accessor for TTRIHashtagAssociationPresenter();
  v8 = swift_allocObject(v7, 73, 7);
  *(_QWORD *)(v8 + 24) = 0;
  v9 = swift_unknownObjectWeakInit(v8 + 16, 0);
  *(_QWORD *)(v8 + 56) = 0;
  *(_QWORD *)(v8 + 64) = 0;
  *(_BYTE *)(v8 + 72) = -1;
  *(_QWORD *)(v8 + 32) = v6;
  *(_QWORD *)(v8 + 40) = &protocol witness table for TTRHashtagAssociationInteractor;
  v10 = type metadata accessor for TTRHashtagAssociationPresenterCapability(0, v9);
  swift_allocObject(v10, 32, 7);
  *(_QWORD *)(v8 + 48) = TTRHashtagAssociationPresenterCapability.init(interactor:)(v6, &protocol witness table for TTRHashtagAssociationInteractor);
  v11 = (objc_class *)type metadata accessor for TTRIHashtagAssociationController();
  v12 = (char *)objc_allocWithZone(v11);
  v13 = (uint64_t *)&v12[OBJC_IVAR____TtC9Reminders32TTRIHashtagAssociationController_presenter];
  *v13 = v8;
  v13[1] = (uint64_t)&off_1005F9998;
  v18.receiver = v12;
  v18.super_class = v11;
  v14 = a2;
  v15 = a1;
  swift_retain(v6);
  swift_retain(v8);
  v16 = objc_msgSendSuper2(&v18, "init");
  *(_QWORD *)(v8 + 24) = &off_1005F1E00;
  swift_unknownObjectWeakAssign(v8 + 16, v16);
  return v16;
}

uint64_t sub_10000F050()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v22;

  v0 = sub_10002A750(&qword_100646D68);
  __chkstk_darwin(v0);
  v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UIButton.Configuration(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v22 - v13;
  static UIButton.Configuration.filled()(v12);
  v15 = (void *)objc_opt_self(UIColor);
  UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v15, "tintColor"));
  UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v15, "whiteColor"));
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v3);
  UIButton.Configuration.cornerStyle.setter(v6);
  UIButton.Configuration.contentInsets.setter(5.0, 16.0, 5.0, 16.0);
  UIConfigurationTextAttributesTransformer.init(_:)(sub_100019CE8, 0);
  v16 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v2, 0, 1, v16);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v2);
  v17._object = (void *)0x8000000100570AA0;
  v18._countAndFlagsBits = 0x455441445055;
  v18._object = (void *)0xE600000000000000;
  v17._countAndFlagsBits = 0xD000000000000024;
  v19 = TTRLocalizedString(_:comment:)(v18, v17);
  UIButton.Configuration.title.setter(v19._countAndFlagsBits, v19._object);
  sub_100005ED8(0, &qword_10064C990, UIButton_ptr);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v14, v7);
  v20 = UIButton.init(configuration:primaryAction:)(v11, 0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
  return v20;
}

void sub_10000F29C(char a1, char a2)
{
  void *v4;
  unsigned int v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;

  v4 = (void *)UIViewController.effectiveNavigationControllerForBars.getter();
  if (v4)
  {
    v13 = v4;
    v5 = objc_msgSend(v4, "isToolbarHidden");
    objc_msgSend(v13, "setToolbarHidden:animated:", a1 & 1, a2 & 1);
    if (!v5 || (a1 & 1) != 0)
      goto LABEL_6;
    v6 = objc_msgSend(objc_allocWithZone((Class)UIToolbarAppearance), "init");
    objc_msgSend(v6, "configureWithOpaqueBackground");
    v7 = (void *)objc_opt_self(UIColor);
    v8 = v6;
    v9 = objc_msgSend(v7, "systemGroupedBackgroundColor");
    objc_msgSend(v8, "setBackgroundColor:", v9);

    objc_msgSend(v8, "setShadowColor:", 0);
    v10 = objc_msgSend(v13, "toolbar");
    if (v10)
    {
      v11 = v10;
      v12 = v8;
      objc_msgSend(v11, "setScrollEdgeAppearance:", v12);

LABEL_6:
      return;
    }
    __break(1u);
  }
}

uint64_t sub_10000F3F8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  _QWORD v17[6];
  char v18;

  v3 = v2;
  if (objc_msgSend(v3, "isViewLoaded"))
  {
    sub_10000F614(a2 + 49, (uint64_t)&v18, &qword_100640E60);
    sub_10000F614((uint64_t)&v18, (uint64_t)&v3[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_currentEditModeTransition], &qword_100640E60);
    v6 = objc_msgSend(v3, "view");
    if (v6)
    {
      v7 = v6;
      v8 = type metadata accessor for TTRIAccountsListsTreeView(0);
      v9 = swift_dynamicCastClass(v7, v8);
      if (v9)
      {
        v10 = (char *)v9;
        sub_10000F614(a2, (uint64_t)v17, &qword_100640E68);
        v11 = swift_allocObject(&unk_1005ED088, 24, 7);
        swift_unknownObjectWeakInit(v11 + 16, v3);
        v12 = swift_allocObject(&unk_1005ED0B0, 74, 7);
        *(_QWORD *)(v12 + 16) = v11;
        v13 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(v12 + 24) = *(_OWORD *)a2;
        *(_OWORD *)(v12 + 40) = v13;
        *(_OWORD *)(v12 + 56) = *(_OWORD *)(a2 + 32);
        *(_WORD *)(v12 + 72) = *(_WORD *)(a2 + 48);
        v14 = v3;
        swift_retain(a1);
        swift_retain(v11);
        sub_10002DF4C((_QWORD *)a2);
        sub_100008A14(v17, sub_10002D878, v12, v10, (uint64_t)v14, a1);

        swift_release(v11);
        swift_release(v12);

        return swift_release(a1);
      }

    }
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
    __break(1u);
  }
  else
  {
    v16 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel];
    *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel] = a1;
    swift_retain(a1);
    return swift_release(v16);
  }
  return result;
}

uint64_t sub_10000F614(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10002A750(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000F658(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  uint64_t i;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id *v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  _OWORD v18[2];
  _QWORD *v19;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = _swiftEmptyArrayStorage;
  if (!v4)
    return (uint64_t)v5;
  v19 = _swiftEmptyArrayStorage;
  result = sub_10000BED8(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        v8 = a2(0);
        swift_dynamicCast(v18, &v17, v8, &type metadata for Any[8], 7);
        v5 = v19;
        if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
        {
          sub_10000BED8(0, v5[2] + 1, 1);
          v5 = v19;
        }
        v10 = v5[2];
        v9 = v5[3];
        if (v10 >= v9 >> 1)
        {
          sub_10000BED8(v9 > 1, v10 + 1, 1);
          v5 = v19;
        }
        v5[2] = v10 + 1;
        sub_100028D38(v18, &v5[4 * v10 + 4]);
      }
    }
    else
    {
      v11 = (id *)(a1 + 32);
      v12 = a2(0);
      do
      {
        v17 = *v11;
        v13 = v17;
        swift_dynamicCast(v18, &v17, v12, &type metadata for Any[8], 7);
        v5 = v19;
        if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
        {
          sub_10000BED8(0, v5[2] + 1, 1);
          v5 = v19;
        }
        v15 = v5[2];
        v14 = v5[3];
        if (v15 >= v14 >> 1)
        {
          sub_10000BED8(v14 > 1, v15 + 1, 1);
          v5 = v19;
        }
        v5[2] = v15 + 1;
        sub_100028D38(v18, &v5[4 * v15 + 4]);
        ++v11;
        --v4;
      }
      while (v4);
    }
    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_10000F88C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  uint64_t v24;
  char *v25;
  char *v26;
  void *v27;
  char *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  char *v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  char *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t *v88;
  char *v89;
  char *v90;
  uint64_t *v91;
  _BYTE v92[24];

  v3 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v78 - v8;
  v10 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v11 = __chkstk_darwin(v10);
  v90 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v89 = (char *)&v78 - v13;
  v14 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  v79 = *(_QWORD *)(v14 - 8);
  v15 = __chkstk_darwin(v14);
  v80 = (uint64_t)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v81 = (uint64_t)&v78 - v17;
  v18 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v20);
  v25 = (char *)&v78 - v24;
  v26 = *(char **)(v1 + qword_10065D8E0);
  if (!v26)
  {
    __break(1u);
    return result;
  }
  v82 = v7;
  v83 = v4;
  v84 = v9;
  v85 = v3;
  v27 = *(void **)&v26[qword_100645F00];
  v28 = v26;
  v29 = objc_msgSend(v27, "indexPathsForSelectedRows");
  if (v29)
  {
    v30 = v29;
    v31 = type metadata accessor for IndexPath(0);
    v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v30, v31);

    v33 = v28;
    v34 = swift_bridgeObjectRetain(v32);
    v35 = sub_10022ED78(v34, (uint64_t)v33);
    v36 = v32;
    v37 = (_QWORD *)v35;
    swift_bridgeObjectRelease_n(v36, 2);

  }
  else
  {
    v37 = _swiftEmptyArrayStorage;
  }

  v38 = v37[2];
  if (!v38)
  {
    swift_bridgeObjectRelease(v37);
    v58 = type metadata accessor for TTRIAccountsListsTreeView.ExtendedSelection(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(a1, 1, 1, v58);
  }
  v87 = a1;
  v88 = (uint64_t *)(v1 + qword_10064DEC8);
  v91 = (uint64_t *)(v1 + qword_10064DED0);
  v39 = v37;
  v40 = (uint64_t)v37 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  v41 = *(_QWORD *)(v19 + 72);
  v86 = v39;
  swift_bridgeObjectRetain(v39);
  v42 = (uint64_t)v90;
  while (1)
  {
    sub_10002B1E8(v40, (uint64_t)v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_10002B1E8((uint64_t)v25, (uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v43 = 1 << swift_getEnumCaseMultiPayload(v22, v18);
    if ((v43 & 0x27FD) != 0)
    {
      sub_10001F544((uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      goto LABEL_8;
    }
    if ((v43 & 0x1800) == 0)
      break;
    v44 = sub_10001F544((uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v44);
    v45 = v91;
    swift_beginAccess(v91, v92, 32, 0);
    v46 = *v45;
    if (*(_QWORD *)(v46 + 16))
    {
      v47 = sub_1002AA6DC(v42);
      if ((v48 & 1) != 0)
      {
        v60 = v82;
        v59 = v83;
        v61 = v85;
        (*(void (**)(char *, unint64_t, uint64_t))(v83 + 16))(v82, *(_QWORD *)(v46 + 56) + *(_QWORD *)(v83 + 72) * v47, v85);
        v62 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
        v63 = v84;
        v62(v84, v60, v61);
        swift_endAccess(v92);
        v64 = v86;
        swift_bridgeObjectRelease(v86);
        sub_10001F544(v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        swift_bridgeObjectRelease(v64);
        v65 = sub_10002A750(&qword_100640E98);
        v66 = v87;
        v67 = (char *)v87 + *(int *)(v65 + 48);
        sub_10001F580((uint64_t)v25, (uint64_t)v87, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v62(v67, v63, v61);
        v68 = type metadata accessor for TTRIAccountsListsTreeView.ExtendedSelection(0);
        v69 = v66;
        v70 = v68;
        v71 = 2;
        goto LABEL_23;
      }
    }
    swift_endAccess(v92);
    sub_10001F544(v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
LABEL_8:
    sub_10001F544((uint64_t)v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v40 += v41;
    if (!--v38)
    {
      v55 = v86;
      swift_bridgeObjectRelease(v86);
      v56 = v87;
      *v87 = v55;
      v57 = type metadata accessor for TTRIAccountsListsTreeView.ExtendedSelection(0);
      swift_storeEnumTagMultiPayload(v56, v57, 0);
      return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v56, 0, 1, v57);
    }
  }
  v49 = sub_10001F544((uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  v50 = (uint64_t)v89;
  TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v49);
  v51 = v88;
  swift_beginAccess(v88, v92, 32, 0);
  v52 = *v51;
  if (!*(_QWORD *)(v52 + 16) || (v53 = sub_1002AA6DC(v50), (v54 & 1) == 0))
  {
    swift_endAccess(v92);
    sub_10001F544(v50, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    v42 = (uint64_t)v90;
    goto LABEL_8;
  }
  v72 = *(_QWORD *)(v52 + 56);
  v73 = v80;
  sub_10002B1E8(v72 + *(_QWORD *)(v79 + 72) * v53, v80, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
  v74 = v81;
  sub_10001F580(v73, v81, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
  swift_endAccess(v92);
  v75 = v86;
  swift_bridgeObjectRelease(v86);
  sub_10001F544(v50, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  swift_bridgeObjectRelease(v75);
  v76 = sub_10002A750((uint64_t *)&unk_100640EA0);
  v66 = v87;
  v77 = (uint64_t)v87 + *(int *)(v76 + 48);
  sub_10001F580((uint64_t)v25, (uint64_t)v87, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  sub_10001F580(v74, v77, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
  v68 = type metadata accessor for TTRIAccountsListsTreeView.ExtendedSelection(0);
  v69 = v66;
  v70 = v68;
  v71 = 1;
LABEL_23:
  swift_storeEnumTagMultiPayload(v69, v70, v71);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v66, 0, 1, v68);
}

uint64_t type metadata accessor for TTRIAccountsListsTreeView.ExtendedSelection(uint64_t a1)
{
  return sub_100007328(a1, qword_10064E5B0, (uint64_t)&nominal type descriptor for TTRIAccountsListsTreeView.ExtendedSelection);
}

uint64_t sub_10000FE98()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t sub_10000FEC4(void *a1)
{
  id v2;
  void *v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v2 = objc_msgSend(a1, "splitViewController");
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "isCollapsed");

    v5 = v4 ^ 1;
  }
  else
  {
    v5 = 0;
  }
  if (qword_10063D2F0 != -1)
    swift_once(&qword_10063D2F0, sub_1000073DC);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100012DC4(v6, (uint64_t)qword_100640920);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    *(_DWORD *)v10 = 136315138;
    v18 = 0xE000000000000000;
    v19 = v11;
    v17 = 0;
    if ((_DWORD)v5)
      v12 = 1702195828;
    else
      v12 = 0x65736C6166;
    if ((_DWORD)v5)
      v13 = 0xE400000000000000;
    else
      v13 = 0xE500000000000000;
    v14 = v13;
    String.append(_:)(*(Swift::String *)&v12);
    swift_bridgeObjectRelease(v13);
    v15 = v18;
    v17 = sub_100027E40(v17, v18, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v15);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Set initial value of isInExpandedSplitViewSnapshot { value: %s }", v10, 0xCu);
    swift_arrayDestroy(v11, 1, &type metadata for Any[8]);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }

  *((_BYTE *)a1 + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_isInExpandedSplitViewSnapshot) = v5;
  return v5;
}

id sub_1000100C8(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v5;
  uint64_t v6;
  void (**v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t (**v9)(uint64_t, uint64_t);
  uint64_t v10;
  void (**v11)(uint64_t, uint64_t);
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (**v15)(uint64_t, uint64_t);
  uint64_t v16;
  void (**v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t (**v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t (**v21)(uint64_t, uint64_t);
  uint64_t v22;
  double v23;
  uint64_t (**v24)(uint64_t, uint64_t);
  objc_super v26;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  swift_unknownObjectWeakInit(&v2[qword_100653D08], 0);
  *(_QWORD *)&v2[qword_100653D48] = 0;
  *(_QWORD *)&v2[qword_100653D50] = &_swiftEmptyDictionarySingleton;
  v5 = &v2[qword_100653D68];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v6 = swift_allocObject(&unk_1005FE910, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, a1);
  v7 = (void (**)(uint64_t, uint64_t))&v2[qword_100653D10];
  *v7 = sub_1002DCFD0;
  v7[1] = (void (*)(uint64_t, uint64_t))v6;
  v8 = swift_allocObject(&unk_1005FE910, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, a1);
  v9 = (uint64_t (**)(uint64_t, uint64_t))&v2[qword_100653D18];
  *v9 = sub_1002DC2E8;
  v9[1] = (uint64_t (*)(uint64_t, uint64_t))v8;
  v10 = swift_allocObject(&unk_1005FE910, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, a1);
  v11 = (void (**)(uint64_t, uint64_t))&v2[qword_100653D20];
  *v11 = sub_1002DC288;
  v11[1] = (void (*)(uint64_t, uint64_t))v10;
  v12 = swift_allocObject(&unk_1005FE910, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, a1);
  v13 = &v2[qword_100653D28];
  *(_QWORD *)v13 = sub_1002DCFF0;
  *((_QWORD *)v13 + 1) = v12;
  v14 = swift_allocObject(&unk_1005FE910, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, a1);
  v15 = (void (**)(uint64_t, uint64_t))&v2[qword_100653D30];
  *v15 = sub_1002DC288;
  v15[1] = (void (*)(uint64_t, uint64_t))v14;
  v16 = swift_allocObject(&unk_1005FE910, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16, a1);
  v17 = (void (**)(uint64_t, uint64_t))&v2[qword_100653D38];
  *v17 = sub_1002DCFF8;
  v17[1] = (void (*)(uint64_t, uint64_t))v16;
  v18 = swift_allocObject(&unk_1005FE910, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16, a1);
  v19 = (uint64_t (**)(uint64_t, uint64_t))&v2[qword_100653D40];
  *v19 = sub_1002DC2A8;
  v19[1] = (uint64_t (*)(uint64_t, uint64_t))v18;
  v20 = swift_allocObject(&unk_1005FE910, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16, a1);
  v21 = (uint64_t (**)(uint64_t, uint64_t))&v2[qword_100653D58];
  *v21 = sub_1002DD000;
  v21[1] = (uint64_t (*)(uint64_t, uint64_t))v20;
  v22 = swift_allocObject(&unk_1005FE910, 24, 7);
  *(_QWORD *)&v23 = swift_unknownObjectWeakInit(v22 + 16, a1).n128_u64[0];
  v24 = (uint64_t (**)(uint64_t, uint64_t))&v2[qword_100653D60];
  *v24 = sub_1002DD020;
  v24[1] = (uint64_t (*)(uint64_t, uint64_t))v22;
  v26.receiver = v2;
  v26.super_class = ObjectType;
  return objc_msgSendSuper2(&v26, "init", v23);
}

uint64_t sub_100010370(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[6];
  _QWORD v25[5];

  v25[3] = type metadata accessor for TTRIRootPresenter();
  v25[4] = &off_1005FA0E0;
  v25[0] = a1;
  v4 = qword_10063D858;
  swift_retain(a1);
  if (v4 != -1)
    swift_once(&qword_10063D858, sub_1000091DC);
  v5 = type metadata accessor for Logger(0);
  sub_100012DC4(v5, (uint64_t)qword_100663850);
  v6 = sub_100010634((uint64_t)v25, (uint64_t)v24);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v23 = v10;
    *(_DWORD *)v9 = 136446210;
    sub_100010634((uint64_t)v24, (uint64_t)&v21);
    v11 = sub_10002A750(&qword_100651F48);
    v12 = String.init<A>(describing:)(&v21, v11);
    v14 = v13;
    v21 = sub_100027E40(v12, v13, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v14);
    sub_100027F10(v24);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Did create root module {rootModule: %{public}s}", v9, 0xCu);
    swift_arrayDestroy(v10, 1, &type metadata for Any[8]);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    sub_100027F10(v24);
  }

  if (byte_100663870 == 1)
  {
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Ignoring creating root module because a previous one was already created", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

  }
  else
  {
    byte_100663870 = 1;
    if (qword_10063D860 != -1)
      swift_once(&qword_10063D860, sub_100005CB4);
    sub_100010634((uint64_t)v25, (uint64_t)v24);
    v24[5] = a2;
    v19 = a2;
    DeferredPromise.resolve(_:)(v24);
    sub_1000073A0((uint64_t)v24, (uint64_t *)&unk_100665620);
  }
  return sub_100027F10(v25);
}

uint64_t sub_100010634(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_QWORD *sub_100010678(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = swift_allocObject(&unk_1005FE9B0, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, a1);
  v1[2] = sub_100022FF8;
  v1[3] = v3;
  v4 = swift_allocObject(&unk_1005FE9B0, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16, a1);
  v1[4] = sub_100024DD0;
  v1[5] = v4;
  v5 = swift_allocObject(&unk_1005FE9B0, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, a1);
  v1[6] = sub_1000249EC;
  v1[7] = v5;
  v6 = swift_allocObject(&unk_1005FE9B0, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, a1);
  v1[8] = sub_100024CE8;
  v1[9] = v6;
  v7 = swift_allocObject(&unk_1005FE9B0, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16, a1);
  v1[10] = sub_100020674;
  v1[11] = v7;
  v8 = swift_allocObject(&unk_1005FE9B0, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, a1);
  v1[12] = sub_1002DD15C;
  v1[13] = v8;
  v9 = swift_allocObject(&unk_1005FE9B0, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, a1);
  v1[14] = sub_10002363C;
  v1[15] = v9;
  v10 = swift_allocObject(&unk_1005FE9B0, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, a1);
  v1[16] = sub_10002E564;
  v1[17] = v10;
  v11 = swift_allocObject(&unk_1005FE9B0, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, a1);
  v1[18] = sub_10002E564;
  v1[19] = v11;
  v12 = swift_allocObject(&unk_1005FE9B0, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, a1);
  v1[20] = sub_1002DD17C;
  v1[21] = v12;
  v13 = swift_allocObject(&unk_1005FE9B0, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, a1);
  v1[22] = sub_1002DD184;
  v1[23] = v13;
  return v1;
}

void sub_10001088C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t (*v9)(_QWORD);
  char *v10;
  _BYTE v11[40];
  uint64_t v12;
  _BYTE *v13;

  v3 = sub_10002A750((uint64_t *)&unk_100641030);
  __chkstk_darwin(v3);
  v13 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for TTRAccountsListsViewModel.HashtagFilterOperation(0);
  __chkstk_darwin(v12);
  v5 = type metadata accessor for TTRAccountsListsViewModel.HashtagsSection(0);
  __chkstk_darwin(v5);
  v6 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v6);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002B1E8(a2, (uint64_t)v8, v9);
  v10 = (char *)&loc_1000109D4 + dword_100074D34[swift_getEnumCaseMultiPayload(v8, v6)];
  __asm { BR              X10 }
}

uint64_t sub_1000109E4()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  return 0;
}

void sub_1000117C8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t SelectedListStorage;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  id v20;
  void *v21;
  char *v22;
  objc_class *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  objc_class *v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void *v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _OWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  objc_super v48[2];
  objc_super v49;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = &v2[OBJC_IVAR___TTRIWindowSceneController_delegate];
  *((_QWORD *)v9 + 1) = 0;
  swift_unknownObjectWeakInit(v9, 0);
  *(_QWORD *)&v2[OBJC_IVAR___TTRIWindowSceneController_mainWindow] = 0;
  v10 = &v2[OBJC_IVAR___TTRIWindowSceneController_rootModuleInterface];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_QWORD *)v10 + 4) = 0;
  v11 = &v2[OBJC_IVAR___TTRIWindowSceneController_lastEnterForegroundDate];
  v12 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(_QWORD *)&v3[OBJC_IVAR___TTRIWindowSceneController_store] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___TTRIWindowSceneController_attachmentThumbnailsManager] = 0;
  v13 = &v3[OBJC_IVAR___TTRIWindowSceneController_applicationRunProperties];
  v13[4] = 0;
  *(_DWORD *)v13 = 2;
  v14 = &v3[OBJC_IVAR___TTRIWindowSceneController_hashtagAssociationModule];
  SelectedListStorage = type metadata accessor for PerWindowLastSelectedListStorage(0);
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v16 = swift_allocObject(SelectedListStorage, *(unsigned int *)(SelectedListStorage + 48), *(unsigned __int16 *)(SelectedListStorage + 52));
  v17 = v16 + OBJC_IVAR____TtC9Reminders32PerWindowLastSelectedListStorage_lastSelectedListInWindow;
  v18 = type metadata accessor for TTRListType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = (uint64_t *)&v3[OBJC_IVAR___TTRIWindowSceneController_lastSelectedListStorage];
  *v19 = v16;
  v19[1] = (uint64_t)&off_10060D590;
  v49.receiver = v3;
  v49.super_class = ObjectType;
  v20 = objc_msgSendSuper2(&v49, "init");
  v21 = (void *)UIApp;
  if (!UIApp)
  {
    __break(1u);
    goto LABEL_13;
  }
  v22 = (char *)v20;
  v23 = (objc_class *)objc_msgSend(v21, "delegate");
  if (v23)
  {
    ObjectType = v23;
    v25 = swift_getObjectType(v23, v24);
    v26 = swift_conformsToProtocol2(v25, &protocol descriptor for TTRIWindowSceneControllerDelegate);
    if (v26)
      v27 = v26;
    else
      v27 = 0;
    if (v26)
      v28 = ObjectType;
    else
      v28 = 0;
    if (!v28)
      goto LABEL_14;
    v29 = *(unsigned int *)((char *)v28 + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_applicationRunProperties) | ((unint64_t)*((unsigned __int8 *)v28 + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_applicationRunProperties + 4) << 32);
    if (*(_DWORD *)((char *)v28 + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_applicationRunProperties) != 2)
    {
      v30 = *(id *)((char *)v28 + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_store);
      v31 = sub_10000CC24();
      v32 = sub_10000C060(v48);
      v34 = v33;
      sub_100028D38(v48, v45);
      v46 = v32;
      v47 = v34;
      swift_unknownObjectRetain(v32);
      sub_1000073A0((uint64_t)v45, (uint64_t *)&unk_100665630);

      v35 = &v22[OBJC_IVAR___TTRIWindowSceneController_delegate];
      *((_QWORD *)v35 + 1) = v27;
      swift_unknownObjectWeakAssign(v35, v28);
      swift_unknownObjectRelease(ObjectType);
      v36 = *(void **)&v22[OBJC_IVAR___TTRIWindowSceneController_store];
      *(_QWORD *)&v22[OBJC_IVAR___TTRIWindowSceneController_store] = v30;
      v37 = v30;

      v38 = &v22[OBJC_IVAR___TTRIWindowSceneController_applicationRunProperties];
      v38[4] = BYTE4(v29);
      *(_DWORD *)v38 = v29;
      v39 = *(_QWORD *)&v22[OBJC_IVAR___TTRIWindowSceneController_attachmentThumbnailsManager];
      *(_QWORD *)&v22[OBJC_IVAR___TTRIWindowSceneController_attachmentThumbnailsManager] = v31;
      swift_retain(v31);
      swift_release(v39);
      swift_release(v31);

      v40 = (uint64_t *)&v22[OBJC_IVAR___TTRIWindowSceneController_hashtagAssociationModule];
      v41 = *(_QWORD *)&v22[OBJC_IVAR___TTRIWindowSceneController_hashtagAssociationModule];
      *v40 = v32;
      v40[1] = v34;
      swift_unknownObjectRelease(v41);
      return;
    }
LABEL_13:
    __break(1u);
LABEL_14:
    swift_unknownObjectRelease(ObjectType);
  }
  if (qword_10063D8C8 != -1)
    swift_once(&qword_10063D8C8, sub_100012CC4);
  v42 = sub_100012DC4(v5, (uint64_t)qword_1006653E0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v42, v5);
  v43 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  v44 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1002EB23C((uint64_t)"Cannot find TTRIWindowSceneControllerDelegate", 45, 2uLL, v43, v44);
  __break(1u);
}

NSObject *sub_100011B78(uint64_t a1, double a2, double a3, double a4, double a5)
{
  _BYTE *v5;
  char *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  objc_class *v20;
  id v21;
  void *v22;
  id v23;
  NSObject *v24;
  NSObject *v25;
  char *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  _UNKNOWN **v31;
  uint64_t v32;
  NSObject *v33;
  uint64_t v34;
  uint64_t v35;
  os_log_type_t v36;
  uint8_t *v37;
  objc_super v39;

  *(_QWORD *)&v5[qword_10065D8D8] = 0;
  *(_QWORD *)&v5[qword_10065D8E0] = 0;
  *(_QWORD *)&v5[qword_10065D8E8] = 0;
  v5[qword_10065D8F0] = 0;
  v39.receiver = v5;
  v39.super_class = (Class)sub_10002A750(&qword_100654A00);
  v11 = (char *)objc_msgSendSuper2(&v39, "initWithFrame:", a2, a3, a4, a5);
  objc_msgSend(v11, "bounds");
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v20 = (objc_class *)type metadata accessor for TTRITreeTableView();
  v21 = objc_msgSend(objc_allocWithZone(v20), "initWithFrame:style:", a1, v13, v15, v17, v19);
  v22 = *(void **)&v11[qword_10065D8D8];
  *(_QWORD *)&v11[qword_10065D8D8] = v21;
  v23 = v21;

  objc_msgSend(v23, "setAutoresizingMask:", 18);
  objc_msgSend(v23, "setPreservesSuperviewLayoutMargins:", 1);
  objc_msgSend(v11, "addSubview:", v23);
  objc_allocWithZone((Class)sub_10002A750(&qword_100654A08));
  v24 = v11;
  v25 = v23;
  v26 = sub_1002BB588(v24, v25);
  v27 = qword_10065D8E0;
  v28 = *(Class *)((char *)&v24->isa + qword_10065D8E0);
  *(Class *)((char *)&v24->isa + qword_10065D8E0) = (Class)v26;

  v29 = swift_dynamicCastClass(v25, v20);
  if (v29)
  {
    v30 = *(uint64_t *)((char *)&v24->isa + v27);
    v31 = &off_1005F1388;
    if (!v30)
      v31 = 0;
    v32 = v29 + OBJC_IVAR____TtC9Reminders17TTRITreeTableView_contextMenuDelegate;
    *(_QWORD *)(v32 + 8) = v31;
    swift_unknownObjectWeakAssign(v32, v30);
    v33 = v24;
  }
  else
  {
    if (qword_10063D7E0 != -1)
      swift_once(&qword_10063D7E0, sub_10043C710);
    v34 = type metadata accessor for Logger(0);
    v35 = sub_100012DC4(v34, (uint64_t)qword_10065D8C0);
    v33 = Logger.logObject.getter(v35);
    v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v36, "UITableView contained in TTRITreeView is not a subclass of TTRITreeTableView", v37, 2u);
      swift_slowDealloc(v37, -1, -1);
    }

    v25 = v24;
  }

  return v24;
}

void sub_100011E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;

  v6 = *(_QWORD *)(*sub_10001413C((_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 72)) + 32);
  v7 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 40);
  v8 = swift_allocObject(&unk_10060A6E0, 32, 7);
  *(_QWORD *)(v8 + 16) = sub_10002E400;
  *(_QWORD *)(v8 + 24) = v6;
  swift_unknownObjectRetain_n(v6, 2);
  v9 = swift_retain(v7);
  v10 = (void *)zalgo.getter(v9);
  v11 = sub_10002A750(&qword_100651F40);
  v12 = dispatch thunk of Promise.then<A>(on:closure:)(v10, sub_1002583EC, v8, v11);
  swift_unknownObjectRelease(v6);
  swift_release(v7);
  swift_release(v8);

  v13 = swift_retain(a1);
  v14 = (void *)zalgo.getter(v13);
  v15 = sub_10002A750(&qword_100651F48);
  v16 = dispatch thunk of Promise.then<A>(on:closure:)(v14, sub_10000536C, a1, v15);
  swift_release(v12);
  swift_release(a1);

  v17 = swift_allocObject(&unk_10060A708, 32, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  v18 = swift_retain(a3);
  v20 = (id)zalgo.getter(v18);
  v19 = dispatch thunk of Promise.then<A>(on:closure:)(v20, sub_10002F1E8, v17, (char *)&type metadata for () + 8);
  swift_release(v19);
  swift_release(v16);
  swift_release(v17);

}

id sub_100011FAC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  id v10;
  id v11;
  void *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void (*v18)(_BYTE *, _QWORD);
  _BYTE v20[32];

  v0 = sub_10002A750(&qword_100646D60);
  __chkstk_darwin(v0);
  v2 = &v20[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = sub_10002A750(&qword_100646D68);
  __chkstk_darwin(v3);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for UIButton.Configuration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  objc_msgSend(v10, "setImage:forState:", *(_QWORD *)TTRCommonAsset.Image.newReminderPlus.unsafeMutableAddressor(), 0);
  objc_msgSend(v10, "setShowsLargeContentViewer:", 1);
  v11 = objc_msgSend(v10, "titleLabel");
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, "setLineBreakMode:", 2);

  }
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v13) = 1145569280;
  v14 = static UIButton.Configuration.plain()(objc_msgSend(v10, "setContentCompressionResistancePriority:forAxis:", 0, v13));
  UIButton.Configuration.imagePadding.setter(v14, 12.0);
  UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  v15 = swift_allocObject(&unk_1005F2268, 24, 7);
  *(_QWORD *)(v15 + 16) = 0x4031000000000000;
  UIConfigurationTextAttributesTransformer.init(_:)(sub_10002C9D8, v15);
  v16 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v5, 0, 1, v16);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v5);
  v17 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v18 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v20);
  UIBackgroundConfiguration.backgroundColor.setter(v17);
  v18(v20, 0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v2, v9, v6);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v2, 0, 1, v6);
  UIButton.configuration.setter(v2);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  return v10;
}

void sub_100012260(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t Strong;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  _QWORD v42[3];
  _BYTE v43[8];
  uint64_t v44;
  uint64_t v45[3];

  v6 = a4 + 16;
  if (a1)
  {
    ((void (*)(void))swift_errorRetain)();
    if (qword_10063D6A8 != -1)
      swift_once(&qword_10063D6A8, sub_10000758C);
    v8 = type metadata accessor for Logger(0);
    sub_100012DC4(v8, (uint64_t)qword_100656CC8);
    swift_errorRetain(a1);
    v9 = swift_errorRetain(a1);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc(32, -1);
      v13 = swift_slowAlloc(96, -1);
      v45[0] = v13;
      *(_DWORD *)v12 = 136315650;
      if ((a2 & 1) != 0)
        v14 = 0x6E6F7268636E7973;
      else
        v14 = 0x6F7268636E797361;
      if ((a2 & 1) != 0)
        v15 = 0xEB0000000073756FLL;
      else
        v15 = 0xEC00000073756F6ELL;
      v44 = sub_100027E40(v14, v15, v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, v45, v12 + 4, v12 + 12);
      swift_bridgeObjectRelease(v15);
      *(_WORD *)(v12 + 12) = 2080;
      if ((a3 & 1) != 0)
        v16 = 1702195828;
      else
        v16 = 0x65736C6166;
      if ((a3 & 1) != 0)
        v17 = 0xE400000000000000;
      else
        v17 = 0xE500000000000000;
      v44 = sub_100027E40(v16, v17, v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, v45, v12 + 14, v12 + 22);
      swift_bridgeObjectRelease(v17);
      *(_WORD *)(v12 + 22) = 2080;
      swift_getErrorValue(a1, v43, v42);
      v18 = Error.rem_errorDescription.getter(v42[1], v42[2]);
      v20 = v19;
      v44 = sub_100027E40(v18, v19, v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, v45, v12 + 24, v12 + 32);
      swift_bridgeObjectRelease(v20);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Application visibility change handler failed to request to update client connections {executionMode: %s, shouldKeepAlive: %s, error: %s}", (uint8_t *)v12, 0x20u);
      swift_arrayDestroy(v13, 3, &type metadata for Any[8]);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
  else
  {
    if (qword_10063D6A8 != -1)
      swift_once(&qword_10063D6A8, sub_10000758C);
    v21 = type metadata accessor for Logger(0);
    sub_100012DC4(v21, (uint64_t)qword_100656CC8);
    v22 = ((uint64_t (*)(void))Logger.logObject.getter)();
    v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc(22, -1);
      v25 = swift_slowAlloc(64, -1);
      v45[0] = v25;
      *(_DWORD *)v24 = 136315394;
      if ((a2 & 1) != 0)
        v26 = 0x6E6F7268636E7973;
      else
        v26 = 0x6F7268636E797361;
      if ((a2 & 1) != 0)
        v27 = 0xEB0000000073756FLL;
      else
        v27 = 0xEC00000073756F6ELL;
      v44 = sub_100027E40(v26, v27, v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, v45, v24 + 4, v24 + 12);
      swift_bridgeObjectRelease(v27);
      *(_WORD *)(v24 + 12) = 2080;
      if ((a3 & 1) != 0)
        v28 = 1702195828;
      else
        v28 = 0x65736C6166;
      if ((a3 & 1) != 0)
        v29 = 0xE400000000000000;
      else
        v29 = 0xE500000000000000;
      v44 = sub_100027E40(v28, v29, v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, v45, v24 + 14, v24 + 22);
      swift_bridgeObjectRelease(v29);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Application visibility change handler did request to update client connections {executionMode: %s, shouldKeepAlive: %s}", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy(v25, 2, &type metadata for Any[8]);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }

  }
  swift_beginAccess(v6, v45, 0, 0);
  Strong = swift_weakLoadStrong(v6);
  if (Strong)
  {
    v31 = Strong;
    v32 = swift_unknownObjectWeakLoadStrong(Strong + 16);
    if (v32)
    {
      v33 = v32;
      v34 = v32
          + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_backgroundTaskIdentifierForApplicationVisibilityChangeHandler;
      if ((*(_BYTE *)(v32
                     + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_backgroundTaskIdentifierForApplicationVisibilityChangeHandler
                     + 8) & 1) != 0)
      {
        swift_release(v31);
        swift_unknownObjectRelease(v33);
      }
      else
      {
        v35 = *(_QWORD *)v34;
        v36 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
        objc_msgSend(v36, "endBackgroundTask:", v35);

        *(_QWORD *)v34 = 0;
        *(_BYTE *)(v34 + 8) = 1;
        if (qword_10063D580 != -1)
          swift_once(&qword_10063D580, sub_10000914C);
        v37 = type metadata accessor for Logger(0);
        v38 = sub_100012DC4(v37, (uint64_t)qword_100651DA0);
        v39 = Logger.logObject.getter(v38);
        v40 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v39, v40))
        {
          v41 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v41 = 0;
          _os_log_impl((void *)&_mh_execute_header, v39, v40, "application did tear down background task for application visibility change handler", v41, 2u);
          swift_slowDealloc(v41, -1, -1);
        }
        swift_release(v31);
        swift_unknownObjectRelease(v33);

      }
    }
    else
    {
      swift_release(v31);
    }
  }
}

void sub_100012858()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  char *v9;

  v1 = objc_msgSend(v0, "containerView");
  objc_msgSend(v1, "setPreservesSuperviewLayoutMargins:", 0);

  v2 = objc_msgSend(v0, "containerView");
  objc_msgSend(v2, "setLayoutMargins:", 16.0, 0.0, 0.0, 0.0);

  v3 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v0, "setBackgroundColor:", v3);

  objc_msgSend(v0, "_setContinuousCornerRadius:", 0.0);
  objc_msgSend(v0, "setSelectionStyle:", 0);
  v4 = (char *)objc_msgSend(v0, "containerView");
  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders36TTRIAccountsListsViewPinnedListsCell_dynamicDateGlyphCache];
  v6 = *(_QWORD *)&v4[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_dynamicDateGlyphCache];
  *(_QWORD *)&v4[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_dynamicDateGlyphCache] = v5;
  swift_retain(v5);

  v7 = (char *)objc_msgSend(v0, "containerView", swift_release(v6).n128_f64[0]);
  if (v7)
  {
    v8 = v7;
    v9 = &v7[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_pinnedListsViewDelegate];
    *((_QWORD *)v9 + 1) = &off_1005F9738;
    swift_unknownObjectWeakAssign(v9, v0);

    sub_100015744();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000129D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  unsigned int v4;
  id v5;
  unsigned __int8 v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  id v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v25;
  int v26;
  uint64_t v27;

  v1 = v0;
  if (*(_BYTE *)(v0 + 48) != 1)
  {
    if (qword_10063D2D8 != -1)
      swift_once(&qword_10063D2D8, sub_10000902C);
    v9 = type metadata accessor for Logger(0);
    sub_100012DC4(v9, (uint64_t)qword_1006403C8);
    v10 = swift_retain(v0);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v13 = 67109120;
      v26 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v13 + 4, v13 + 8);
      swift_release(v1);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Should not show welcome screen {allowWelcomeScreen: %{BOOL}d}", v13, 8u);
      swift_slowDealloc(v13, -1, -1);

    }
    else
    {

      swift_release(v1);
    }
    goto LABEL_18;
  }
  v2 = (void *)objc_opt_self(REMUserDefaults);
  v3 = objc_msgSend(v2, "daemonUserDefaults");
  v4 = objc_msgSend(v3, "enableWelcomeScreen");

  v5 = objc_msgSend(v2, "daemonUserDefaults");
  v6 = objc_msgSend(v5, "forceShowWelcomeScreen");

  if ((v6 & 1) != 0)
  {
    v8 = 1;
  }
  else
  {
    v14 = objc_msgSend(v2, "daemonUserDefaults");
    v8 = objc_msgSend(v14, "forceShowWhatsNewScreen");

  }
  v15 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v7);
  v16 = TTRUserDefaults.lastSeenWelcomeScreenVersion.getter();

  v17 = qword_100520DE8[v16];
  v18 = qword_100520DE8[(char)static TTRUserDefaults.WelcomeScreenVersion.current.getter()];
  if (v17 >= v18)
  {
    v20 = *(_QWORD *)(v1 + 32);
    v21 = type metadata accessor for TTRWelcomeStyle();
    *(_QWORD *)(swift_initStackObject(v21, &v25) + 16) = v20;
    v19 = sub_10035F9E0();
    if (!v4)
    {
LABEL_18:
      v23 = 0;
      return v23 & 1;
    }
  }
  else
  {
    v19 = 0;
    if (!v4)
      goto LABEL_18;
  }
  if (v17 < v18)
    v22 = 1;
  else
    v22 = v8;
  v23 = v22 | v19;
  return v23 & 1;
}

uint64_t sub_100012C34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10065A4C8);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10065A4C8);
  if (qword_10063D638 != -1)
    swift_once(&qword_10063D638, sub_10002D51C);
  v2 = sub_100012DC4(v0, (uint64_t)qword_1006737F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100012CC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_1006653E0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_1006653E0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100012D54(uint64_t a1, uint64_t *a2, SEL *a3)
{
  uint64_t v5;
  id v6;

  v5 = type metadata accessor for Logger(0);
  sub_100012DDC(v5, a2);
  sub_100012DC4(v5, (uint64_t)a2);
  v6 = objc_msgSend((id)objc_opt_self(REMLog), *a3);
  return Logger.init(_:)(v6);
}

uint64_t sub_100012DC4(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t *sub_100012DDC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

void sub_100012E1C(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t aBlock[5];
  uint64_t v23;

  v3 = v2;
  v5 = a1 & 1;
  if (qword_10063D6A8 != -1)
    swift_once(&qword_10063D6A8, sub_10000758C);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100012DC4(v6, (uint64_t)qword_100656CC8);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(64, -1);
    aBlock[0] = v11;
    *(_DWORD *)v10 = 136315394;
    if (v5)
      v12 = 0x6E6F7268636E7973;
    else
      v12 = 0x6F7268636E797361;
    if (v5)
      v13 = 0xEB0000000073756FLL;
    else
      v13 = 0xEC00000073756F6ELL;
    v21 = sub_100027E40(v12, v13, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, aBlock, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v13);
    *(_WORD *)(v10 + 12) = 2080;
    if ((a2 & 1) != 0)
      v14 = 1702195828;
    else
      v14 = 0x65736C6166;
    if ((a2 & 1) != 0)
      v15 = 0xE400000000000000;
    else
      v15 = 0xE500000000000000;
    v21 = sub_100027E40(v14, v15, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, aBlock, v10 + 14, v10 + 22);
    swift_bridgeObjectRelease(v15);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Application visibility change handler will request to update client connections {executionMode: %s, shouldKeepAlive: %s}", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 2, &type metadata for Any[8]);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }

  v16 = *(void **)(v3 + 40);
  v17 = swift_allocObject(&unk_100602DA0, 24, 7);
  swift_weakInit(v17 + 16, v3);
  v18 = swift_allocObject(&unk_100602DC8, 32, 7);
  *(_BYTE *)(v18 + 16) = v5;
  v19 = a2 & 1;
  *(_BYTE *)(v18 + 17) = v19;
  *(_QWORD *)(v18 + 24) = v17;
  aBlock[4] = (uint64_t)sub_10002D664;
  v23 = v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100009944;
  aBlock[3] = (uint64_t)&unk_100602DE0;
  v20 = _Block_copy(aBlock);
  swift_release(v23);
  objc_msgSend(v16, "requestToUpdateClientConnectionsAsynchronously:shouldKeepAlive:completion:", v5 == 0, v19, v20);
  _Block_release(v20);
}

uint64_t sub_1000130F8(char a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t Strong;
  id v18;
  BOOL v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  _QWORD v24[5];
  objc_super v25;

  v3 = v2;
  v25.receiver = v2;
  v25.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v25, "viewWillAppear:", a1 & 1);
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_presenter];
  v6 = *(_QWORD *)(v5 + 72);
  ObjectType = swift_getObjectType(*(_QWORD *)(v5 + 64), v7);
  (*(void (**)(uint64_t, uint64_t))(v6 + 256))(ObjectType, v6);
  sub_10000F29C(0, 0);
  v10 = (void *)UIViewController.effectiveNavigationControllerForBars.getter(v9);
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, "navigationBar");
    v13 = objc_msgSend(v3, "view");
    if (!v13)
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    v14 = v13;
    v15 = objc_msgSend(v13, "tintColor");

    v16 = (void *)TTRINavigationBarConfig.init(tintColor:)(v15);
    UINavigationBar.apply(_:)();

  }
  v12 = *(id *)&v3[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchController];
  if (!v12)
  {
    __break(1u);
    goto LABEL_12;
  }
  Strong = swift_unknownObjectWeakLoadStrong(v5 + 32);
  v18 = v12;
  if (Strong)
  {
    v19 = sub_10001408C(Strong);
    swift_unknownObjectRelease(Strong);
  }
  else
  {
    v19 = 0;
  }
  objc_msgSend(v18, "setObscuresBackgroundDuringPresentation:", v19);

  v20 = objc_msgSend(v3, "view");
  if (!v20)
    goto LABEL_14;
  v12 = v20;
  v21 = type metadata accessor for TTRIAccountsListsTreeView(0);
  v22 = swift_dynamicCastClass(v12, v21);
  if (v22)
  {
    v24[3] = v21;
    v24[4] = &off_100600618;
    v24[0] = v22;
    UIViewController.deselectRowsAlongsideTransition(for:animated:)(v24, a1 & 1);
    return sub_100027F10(v24);
  }
LABEL_13:

LABEL_14:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001331C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;

  v2 = v1;
  v3 = a1 + OBJC_IVAR___TTRIWindowSceneController_rootModuleInterface;
  swift_beginAccess(a1 + OBJC_IVAR___TTRIWindowSceneController_rootModuleInterface, &v22, 0, 0);
  sub_10000735C(v3, (uint64_t)v23, &qword_100651F38);
  if (!v24)
    return sub_1000073A0((uint64_t)v23, &qword_100651F38);
  v4 = sub_10001413C(v23, v24);
  v5 = *v4;
  v6 = *(_QWORD *)(*sub_10001413C((_QWORD *)(*v4 + 48), *(_QWORD *)(*v4 + 72)) + 32);
  v7 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 40);
  v8 = swift_allocObject(&unk_1005F96C0, 32, 7);
  *(_QWORD *)(v8 + 16) = sub_10002E400;
  *(_QWORD *)(v8 + 24) = v6;
  swift_unknownObjectRetain_n(v6, 2);
  v9 = swift_retain(v7);
  v10 = (void *)zalgo.getter(v9);
  v11 = sub_10002A750(&qword_100651F40);
  v12 = dispatch thunk of Promise.then<A>(on:closure:)(v10, sub_1002583EC, v8, v11);
  swift_unknownObjectRelease(v6);
  swift_release(v7);
  swift_release(v8);

  v13 = swift_retain(v5);
  v14 = (void *)zalgo.getter(v13);
  v15 = sub_10002A750(&qword_100651F48);
  v16 = dispatch thunk of Promise.then<A>(on:closure:)(v14, sub_10000536C, v5, v15);
  swift_release(v12);
  swift_release(v5);

  v17 = swift_allocObject(&unk_1005F9620, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16, v2);
  v19 = (void *)zalgo.getter(v18);
  v20 = dispatch thunk of Promise.then<A>(on:closure:)(v19, sub_10002F7A4, v17, (char *)&type metadata for () + 8);
  swift_release(v16);
  swift_release(v17);

  swift_release(v20);
  return sub_100027F10(v23);
}

id sub_100013518(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  id result;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t aBlock[5];
  uint64_t v60;
  uint64_t v61;
  _BYTE v62[23];
  unsigned __int8 v63;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v58 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v7 - 8);
  v57 = v7;
  __chkstk_darwin(v7);
  v55 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750((uint64_t *)&unk_100640DF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750((uint64_t *)&unk_1006549F0);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for TTRIAccountsListsSelection(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (uint64_t *)((char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  v21 = (char *)&v53 - v20;
  result = objc_msgSend(v2, "isViewLoaded");
  if (!(_DWORD)result)
    return result;
  v53 = v5;
  v54 = v4;
  sub_10002D96C(a1 & 1);
  v63 = 0;
  v23 = OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchController;
  result = *(id *)&v2[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchController];
  if ((a1 & 1) == 0)
  {
    if (result)
    {
      objc_msgSend(result, "setObscuresBackgroundDuringPresentation:", 0);
      result = *(id *)&v2[v23];
      if (result)
      {
        objc_msgSend(result, "setShowsSearchResultsController:", 0);
        sub_100061874(v14);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
        {
          sub_10001F580((uint64_t)v14, (uint64_t)v21, type metadata accessor for TTRIAccountsListsSelection);
          sub_10001F580((uint64_t)v21, (uint64_t)v19, type metadata accessor for TTRIAccountsListsSelection);
          if (swift_getEnumCaseMultiPayload(v19, v15) != 3)
          {
            sub_10001F544((uint64_t)v19, type metadata accessor for TTRIAccountsListsSelection);
            goto LABEL_28;
          }
          v30 = *v19;
          v31 = swift_projectBox(*v19);
          sub_10000735C(v31, (uint64_t)v11, (uint64_t *)&unk_1006549F0);
          sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_1006549F0);
          swift_release(v30);
          goto LABEL_26;
        }
        sub_1000073A0((uint64_t)v14, (uint64_t *)&unk_1006549F0);
        result = *(id *)&v2[v23];
        if (!result)
          goto LABEL_53;
        if ((objc_msgSend(result, "isActive") & 1) != 0)
          goto LABEL_18;
        result = *(id *)&v2[v23];
        if (!result)
        {
LABEL_56:
          __break(1u);
          return result;
        }
        if (objc_msgSend(result, "isBeingPresented"))
        {
LABEL_18:
          result = *(id *)&v2[v23];
          if (result)
          {
LABEL_19:
            v24 = objc_msgSend(result, "searchBar");
            v25 = objc_msgSend(v24, "text");

            if (!v25)
              goto LABEL_28;
            v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
            v28 = v27;

            swift_bridgeObjectRelease(v28);
            v29 = HIBYTE(v28) & 0xF;
            if ((v28 & 0x2000000000000000) == 0)
              v29 = v26 & 0xFFFFFFFFFFFFLL;
            if (!v29)
              goto LABEL_28;
LABEL_26:
            v63 = 1;
            goto LABEL_28;
          }
          goto LABEL_55;
        }
        goto LABEL_28;
      }
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if (!result)
  {
    __break(1u);
    goto LABEL_48;
  }
  objc_msgSend(result, "setObscuresBackgroundDuringPresentation:", 1);
  result = *(id *)&v2[v23];
  if (!result)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  objc_msgSend(result, "setAutomaticallyShowsSearchResultsController:", 1);
  result = *(id *)&v2[v23];
  if (!result)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  if ((objc_msgSend(result, "isActive") & 1) != 0)
    goto LABEL_9;
  result = *(id *)&v2[v23];
  if (!result)
  {
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  if (objc_msgSend(result, "isBeingPresented"))
  {
LABEL_9:
    result = *(id *)&v2[v23];
    if (result)
      goto LABEL_19;
    goto LABEL_52;
  }
LABEL_28:
  if (qword_10063D2F0 != -1)
    swift_once(&qword_10063D2F0, sub_1000073DC);
  v32 = type metadata accessor for Logger(0);
  v33 = sub_100012DC4(v32, (uint64_t)qword_100640920);
  v34 = v63;
  v35 = Logger.logObject.getter(v33);
  v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = swift_slowAlloc(22, -1);
    v38 = swift_slowAlloc(64, -1);
    aBlock[0] = v38;
    *(_DWORD *)v37 = 136315394;
    if ((a1 & 1) != 0)
      v39 = 1702195828;
    else
      v39 = 0x65736C6166;
    if ((a1 & 1) != 0)
      v40 = 0xE400000000000000;
    else
      v40 = 0xE500000000000000;
    v61 = sub_100027E40(v39, v40, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, v62, v37 + 4, v37 + 12);
    swift_bridgeObjectRelease(v40);
    *(_WORD *)(v37 + 12) = 2080;
    if (v34)
      v41 = 1702195828;
    else
      v41 = 0x65736C6166;
    if (v34)
      v42 = 0xE400000000000000;
    else
      v42 = 0xE500000000000000;
    v61 = sub_100027E40(v41, v42, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, v62, v37 + 14, v37 + 22);
    swift_bridgeObjectRelease(v42);
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Accounts list view rootViewCollapseStateDidChange {isCollapsed: %s, shouldPerformSearch: %s}", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy(v38, 2, &type metadata for Any[8]);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v37, -1, -1);
  }

  result = (id)swift_beginAccess(&v63, &v61, 0, 0);
  if (v63 == 1)
  {
    sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
    v43 = (void *)static OS_dispatch_queue.main.getter();
    v44 = swift_allocObject(&unk_1005ED088, 24, 7);
    swift_unknownObjectWeakInit(v44 + 16, v2);
    aBlock[4] = (uint64_t)sub_100076D14;
    v60 = v44;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100006378;
    aBlock[3] = (uint64_t)&unk_1005ED190;
    v45 = _Block_copy(aBlock);
    v46 = swift_release(v60);
    v47 = v55;
    static DispatchQoS.unspecified.getter(v46);
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    v48 = sub_1000175C8((unint64_t *)&qword_1006447D0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v49 = sub_10002A750((uint64_t *)&unk_100640F40);
    v50 = sub_100023FEC((unint64_t *)&qword_1006447E0, (uint64_t *)&unk_100640F40, (uint64_t)&protocol conformance descriptor for [A]);
    v51 = v58;
    v52 = v54;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v49, v50, v54, v48);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v47, v51, v45);
    _Block_release(v45);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v51, v52);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v47, v57);
  }
  return result;
}

uint64_t sub_100013C58(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  id v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v4 = type metadata accessor for REMAnalyticsEvent(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D8C8 != -1)
    swift_once(&qword_10063D8C8, sub_100012CC4);
  v8 = type metadata accessor for Logger(0);
  sub_100012DC4(v8, (uint64_t)qword_1006653E0);
  v9 = a1;
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v30 = v4;
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v28 = swift_slowAlloc(32, -1);
    v32 = v28;
    *(_DWORD *)v12 = 136315138;
    v27 = v12 + 4;
    v13 = objc_msgSend(v9, "session");
    v14 = objc_msgSend(v13, "persistentIdentifier");

    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v29 = v5;
    v16 = v2;
    v18 = v17;

    v19 = v15;
    v4 = v30;
    v31 = sub_100027E40(v19, v18, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v27, v12 + 12);

    v20 = v18;
    v2 = v16;
    v5 = v29;
    swift_bridgeObjectRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "sceneDidBecomeActive {scene: %s}", v12, 0xCu);
    v21 = v28;
    swift_arrayDestroy(v28, 1, &type metadata for Any[8]);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

  }
  type metadata accessor for REMAnalyticsManager(0);
  v22 = static REMAnalyticsManager.shared.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for REMAnalyticsEvent.appBecameActive(_:), v4);
  REMAnalyticsManager.post(event:)(v7);
  swift_release(v22);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v23 = objc_opt_self(UIWindowScene);
  result = swift_dynamicCastObjCClass(v9, v23);
  if (result)
  {
    result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR___TTRIWindowSceneController_delegate);
    if (result)
    {
      v25 = result;
      v26 = v9;
      sub_10001331C(v2);

      return swift_unknownObjectRelease(v25);
    }
  }
  return result;
}

id sub_100013F3C(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t ObjectType;
  Swift::String v11;
  Swift::String v12;
  void *object;
  id v14;
  NSString v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  id v22;
  _QWORD v24[4];

  ObjectType = swift_getObjectType(a1, a2);
  v11._countAndFlagsBits = a2;
  v11._object = a3;
  v12._countAndFlagsBits = a4;
  v12._object = a5;
  object = TTRLocalizedString(_:comment:)(v11, v12)._object;
  v24[3] = ObjectType;
  v24[0] = a1;
  v14 = a1;
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  if (ObjectType)
  {
    v16 = sub_10001413C(v24, ObjectType);
    v17 = *(_QWORD *)(ObjectType - 8);
    __chkstk_darwin(v16);
    v19 = (char *)v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v17 + 16))(v19);
    v20 = _bridgeAnythingToObjectiveC<A>(_:)(v19, ObjectType);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, ObjectType);
    sub_100027F10(v24);
  }
  else
  {
    v20 = 0;
  }
  v21 = objc_allocWithZone((Class)UIBarButtonItem);
  v22 = objc_msgSend(v21, "initWithTitle:style:target:action:", v15, 0, v20, 0, v24[0]);

  swift_unknownObjectRelease(v20);
  return v22;
}

BOOL sub_10001408C(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v1 = *sub_10001413C((_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 72)) + 48;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "isCollapsed");

  }
  else
  {
    v5 = (void *)swift_unknownObjectWeakLoadStrong(v1);
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v5, "traitCollection");

      v8 = objc_msgSend(v7, "horizontalSizeClass");
      return v8 == (id)1;
    }
    else
    {
      return 0;
    }
  }
  return (BOOL)v4;
}

_QWORD *sub_10001413C(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

void sub_100014160(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v7;
  uint64_t ObjectType;
  objc_class *ObjCClassFromMetadata;
  NSString *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  _QWORD *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;

  v7 = v4;
  ObjectType = swift_getObjectType(v4, a2);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(ObjectType);
  v11 = NSStringFromClass(ObjCClassFromMetadata);
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  if (qword_10063D858 != -1)
    swift_once(&qword_10063D858, sub_1000091DC);
  v15 = type metadata accessor for Logger(0);
  sub_100012DC4(v15, (uint64_t)qword_100663850);
  v16 = swift_bridgeObjectRetain_n(v14, 2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v28 = a1;
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v27 = a3;
    v20 = swift_slowAlloc(32, -1);
    v30 = v20;
    *(_DWORD *)v19 = 136446210;
    swift_bridgeObjectRetain(v14);
    v29 = sub_100027E40(v12, v14, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v19 + 4, v19 + 12);
    swift_bridgeObjectRelease_n(v14, 3);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "TEST START {testName: %{public}s}", v19, 0xCu);
    swift_arrayDestroy(v20, 1, &type metadata for Any[8]);
    v21 = v20;
    a3 = v27;
    swift_slowDealloc(v21, -1, -1);
    v22 = v19;
    a1 = v28;
    swift_slowDealloc(v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v14, 2);
  }
  v23 = (_QWORD *)swift_allocObject(a3, 48, 7);
  v23[2] = v7;
  v23[3] = v12;
  v23[4] = v14;
  v23[5] = a1;
  v24 = v7;
  v25 = (void *)zalgo.getter(a1);
  v26 = dispatch thunk of Promise.then<A>(on:closure:)(v25, a4, v23, (char *)&type metadata for () + 8);
  swift_release(v26);
  swift_release(v23);

}

void sub_1000143B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[56];

  static REM_os_activity.labelUserAction(_:dso:)(a1, a2, a3, &_mh_execute_header);
  type metadata accessor for Analytics(0);
  v8 = sub_10002A750(&qword_100654DD8);
  inited = swift_initStackObject(v8, v28);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x696669746E656449;
  *(_QWORD *)(inited + 40) = 0xEA00000000007265;
  StaticString.description.getter(a1, a2, a3);
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  *(_QWORD *)(inited + 48) = v12;
  v13 = sub_10002D460(inited);
  static Analytics.postEvent(_:payload:duration:)(0xD00000000000001CLL, 0x80000001005732A0, v13, 0, 1);
  swift_bridgeObjectRelease(v13);
  if (qword_10063D608 != -1)
    swift_once(&qword_10063D608, sub_10002D544);
  v14 = type metadata accessor for Logger(0);
  sub_100012DC4(v14, (uint64_t)qword_100673768);
  v15 = swift_bridgeObjectRetain_n(a4, 2);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(22, -1);
    v19 = swift_slowAlloc(64, -1);
    v27 = v19;
    *(_DWORD *)v18 = 136446466;
    v20 = StaticString.description.getter(a1, a2, a3);
    v22 = v21;
    v26 = sub_100027E40(v20, v21, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v18 + 4, v18 + 12);
    swift_bridgeObjectRelease(v22);
    *(_WORD *)(v18 + 12) = 2080;
    swift_bridgeObjectRetain(a4);
    v23 = Dictionary.description.getter(a4, &type metadata for String, &type metadata for Any[8], &protocol witness table for String);
    v25 = v24;
    swift_bridgeObjectRelease(a4);
    v26 = sub_100027E40(v23, v25, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v18 + 14, v18 + 22);
    swift_bridgeObjectRelease_n(a4, 2);
    swift_bridgeObjectRelease(v25);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "%{public}s; UserInfo=%s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v19, 2, &type metadata for Any[8]);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a4, 2);
  }
}

double sub_100014698(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6;
  id v7;
  double v8;

  v6 = a3;
  v7 = a1;
  v8 = sub_10002BAC8(a4, sub_10002BBC0, (uint64_t (*)(_QWORD, _QWORD, _QWORD))type metadata accessor for TTRIAnyTreeViewSectionHeaderViewProviding, (void (*)(char *, char *))sub_10002BEF4);

  return v8;
}

char *sub_100014768(uint64_t a1, void *a2, void *a3, char *a4)
{
  objc_class *ObjectType;
  char *v9;
  id v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  void *v21;
  void *v22;
  char *v23;
  id v24;
  objc_super v26;

  ObjectType = (objc_class *)swift_getObjectType(a4, a2);
  *(_QWORD *)&a4[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_pendingNavigateToRootPromise] = 0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_activityItemsConfigurationProviding] = 0;
  v9 = &a4[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter];
  *(_QWORD *)v9 = a1;
  *((_QWORD *)v9 + 1) = &off_1005FA148;
  *(_QWORD *)&a4[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_ttrMainViewController] = a2;
  v10 = objc_allocWithZone((Class)type metadata accessor for TTRIMainNavigationController());
  v11 = a4;
  swift_retain(a1);
  v12 = a2;
  v13 = objc_msgSend(v10, "initWithRootViewController:", v12);
  *(_QWORD *)&v11[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_mainNavigationController] = v13;
  v14 = objc_msgSend(v13, "navigationBar");
  objc_msgSend(v14, "setPrefersLargeTitles:", 1);

  if (a3)
    v15 = a3;
  else
    v15 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TTRIRootViewEmptyViewController()), "init");
  v16 = objc_allocWithZone((Class)UINavigationController);
  v17 = a3;
  v18 = objc_msgSend(v16, "initWithRootViewController:", v15);
  *(_QWORD *)&v11[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController] = v18;
  v19 = objc_msgSend(v18, "navigationBar");
  objc_msgSend(v19, "setPrefersLargeTitles:", 1);

  v26.receiver = v11;
  v26.super_class = ObjectType;
  v20 = (char *)objc_msgSendSuper2(&v26, "initWithStyle:", 1);
  objc_msgSend(v20, "setDelegate:", v20);
  v21 = *(void **)&v20[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_mainNavigationController];
  objc_msgSend(v21, "setDelegate:", v20);
  objc_msgSend(v20, "setPreferredDisplayMode:", 2);
  objc_msgSend(v20, "setPreferredSplitBehavior:", 1);
  objc_msgSend(v20, "setViewController:forColumn:", v21, 0);
  v22 = *(void **)&v20[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController];
  v23 = v20;
  v24 = v22;
  objc_msgSend(v23, "setViewController:forColumn:", v24, 2);

  swift_release(a1);
  return v23;
}

uint64_t sub_1000149D4(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  void ***v15;
  void **v16;
  void **v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t result;
  void *v21;
  uint64_t v22;
  void *v23;
  void **v24;
  const void *v25;
  uint64_t v26;
  void **v27;
  char *v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void **aBlock;
  _QWORD v41[4];
  uint64_t v42;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v37 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v39 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D530 != -1)
    swift_once(&qword_10063D530, sub_10000746C);
  v9 = type metadata accessor for Logger(0);
  sub_100012DC4(v9, (uint64_t)qword_10064F020);
  v10 = a1;
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v36 = v4;
    v14 = (uint8_t *)v13;
    v15 = (void ***)swift_slowAlloc(8, -1);
    *(_DWORD *)v14 = 138412290;
    v35 = v7;
    aBlock = v10;
    v16 = v10;
    v34 = v2;
    v17 = v16;
    v7 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v41, v14 + 4, v14 + 12);
    *v15 = v10;

    v2 = v34;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "RootViewController did showViewController {viewController: %@}", v14, 0xCu);
    v18 = sub_10002A750(&qword_100642D60);
    swift_arrayDestroy(v15, 1, v18);
    swift_slowDealloc(v15, -1, -1);
    v19 = v14;
    v4 = v36;
    swift_slowDealloc(v19, -1, -1);

  }
  else
  {

  }
  sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
  result = static NSObject.== infix(_:_:)(v10, *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_ttrMainViewController]);
  if ((result & 1) != 0)
  {
    sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
    v21 = (void *)static OS_dispatch_queue.main.getter();
    v22 = swift_allocObject(&unk_1005F84E8, 32, 7);
    *(_QWORD *)(v22 + 16) = v2;
    *(_QWORD *)(v22 + 24) = v10;
    v41[3] = sub_10002ED68;
    v42 = v22;
    aBlock = _NSConcreteStackBlock;
    v41[0] = 1107296256;
    v41[1] = sub_100006378;
    v41[2] = &unk_1005F8500;
    v23 = _Block_copy(&aBlock);
    v24 = v10;
    v25 = v23;
    v26 = v42;
    v27 = v24;
    v28 = v2;
    v29 = swift_release(v26);
    v30 = v39;
    static DispatchQoS.unspecified.getter(v29);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v31 = sub_100005E90();
    v32 = sub_10002A750((uint64_t *)&unk_100640F40);
    v33 = sub_10002D190();
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v32, v33, v4, v31);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v30, v6, v25);
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v30, v38);
  }
  return result;
}

void sub_100014D64()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;

  v1 = objc_msgSend(v0, "subviews");
  v2 = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v3);
    return;
  }
  if (v3 < 0)
    v8 = v3;
  else
    v8 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v8);
  swift_bridgeObjectRelease(v3);
  if (!v4)
    goto LABEL_13;
LABEL_3:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      else
        v6 = *(id *)(v3 + 8 * i + 32);
      v7 = v6;
      objc_msgSend(v6, "setUserInteractionEnabled:", objc_msgSend(v0, "isUserInteractionEnabled"));

    }
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t type metadata accessor for TTRIPinnedListsView(uint64_t a1)
{
  uint64_t result;

  result = qword_100650690;
  if (!qword_100650690)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIPinnedListsView);
  return result;
}

void sub_100014F0C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t Strong;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37[6];
  char v38[24];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43[32];

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D8C8 != -1)
    swift_once(&qword_10063D8C8, sub_100012CC4);
  v7 = type metadata accessor for Logger(0);
  sub_100012DC4(v7, (uint64_t)qword_1006653E0);
  v8 = a1;
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v34 = v2;
    v13 = v12;
    v37[0] = v12;
    *(_DWORD *)v11 = 136315138;
    v33 = v11 + 4;
    v14 = objc_msgSend(v8, "session");
    v15 = objc_msgSend(v14, "persistentIdentifier");

    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v18 = v17;

    v39 = sub_100027E40(v16, v18, v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v33, v11 + 12);

    swift_bridgeObjectRelease(v18);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "sceneWillEnterForeground {scene: %s}", v11, 0xCu);
    swift_arrayDestroy(v13, 1, &type metadata for Any[8]);
    v19 = v13;
    v2 = v34;
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

  }
  v20 = objc_opt_self(UIWindowScene);
  if (swift_dynamicCastObjCClass(v8, v20))
  {
    v21 = v8;
    Date.init()(v21);
    v22 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v6, 0, 1, v22);
    v23 = v2 + OBJC_IVAR___TTRIWindowSceneController_lastEnterForegroundDate;
    swift_beginAccess(v2 + OBJC_IVAR___TTRIWindowSceneController_lastEnterForegroundDate, v37, 33, 0);
    sub_100041F2C((uint64_t)v6, v23, (uint64_t *)&unk_100653A90);
    swift_endAccess(v37);
    Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR___TTRIWindowSceneController_delegate);
    if (Strong)
    {
      v25 = Strong;
      sub_100017AE8();
      swift_unknownObjectRelease(v25);
    }
    v26 = (_QWORD *)(v2 + OBJC_IVAR___TTRIWindowSceneController_rootModuleInterface);
    swift_beginAccess(v2 + OBJC_IVAR___TTRIWindowSceneController_rootModuleInterface, v43, 0, 0);
    v27 = v26[3];
    if (v27)
    {
      v28 = sub_10001413C(v26, v27);
      v29 = *sub_10001413C((_QWORD *)(*v28 + 48), *(_QWORD *)(*v28 + 72)) + 96;
      swift_beginAccess(v29, v38, 0, 0);
      sub_10000AC28(v29, (uint64_t)v37);
      sub_10000AEFC();
      sub_10000AEA4(v37);
      if (v36)
      {
        sub_10002E37C(&v35, (uint64_t)&v39);
        v30 = v41;
        v31 = v42;
        sub_10001413C(&v39, v41);
        (*(void (**)(uint64_t, uint64_t))(v31 + 136))(v30, v31);
        sub_100027F10(&v39);
      }
      else
      {
        sub_1000073A0((uint64_t)&v35, (uint64_t *)&unk_1006655F0);
      }
    }

  }
}

Class sub_1000152D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *preferredElementSize;
  Swift::String v33;
  UIMenu v34;
  _QWORD *v36;
  uint64_t v37;
  Swift::OpaquePointer v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  UIImage_optional v51;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 184);
  v3 = swift_retain(v2);
  v4 = TTRAccountsListsViewModel.accounts.getter(v3);
  swift_release(v2);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v40 = v1;
    sub_10002CC14(0, v5, 0);
    v39 = v4;
    v6 = (char *)(v4 + 61);
    do
    {
      v7 = *(_QWORD *)(v6 - 29);
      v8 = *(_QWORD *)(v6 - 21);
      v9 = *(void **)(v6 - 13);
      v49 = *(v6 - 5);
      v10 = *(v6 - 4);
      v45 = *(v6 - 2);
      v47 = *(v6 - 3);
      v43 = *(v6 - 1);
      v42 = *v6;
      v11 = _swiftEmptyArrayStorage[2];
      v12 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain_n(v8, 2);
      v13 = v9;
      if (v11 >= v12 >> 1)
        sub_10002CC14(v12 > 1, v11 + 1, 1);
      v6 += 32;
      _swiftEmptyArrayStorage[2] = v11 + 1;
      v14 = &_swiftEmptyArrayStorage[6 * v11];
      v14[4] = v7;
      v14[5] = v8;
      v14[6] = v13;
      *((_BYTE *)v14 + 56) = v49;
      *((_BYTE *)v14 + 57) = v10;
      *((_BYTE *)v14 + 58) = v47;
      *((_BYTE *)v14 + 59) = v45;
      *((_BYTE *)v14 + 60) = v43;
      *((_BYTE *)v14 + 61) = v42;
      v14[8] = v7;
      v14[9] = v8;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease(v39);
    v1 = v40;
  }
  else
  {
    swift_bridgeObjectRelease(v4);
  }
  v15 = swift_allocObject(&unk_100601370, 24, 7);
  swift_weakInit(v15 + 16, v1);
  v16 = _swiftEmptyArrayStorage[2];
  if (v16 <= 1)
  {
    swift_release(v15);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    return 0;
  }
  else
  {
    specialized ContiguousArray.reserveCapacity(_:)(v16);
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v41 = v15;
    v17 = 0;
    do
    {
      v18 = _swiftEmptyArrayStorage[v17 + 5];
      v48 = _swiftEmptyArrayStorage[v17 + 4];
      v50 = v16;
      v19 = (void *)_swiftEmptyArrayStorage[v17 + 6];
      v20 = _swiftEmptyArrayStorage[v17 + 7];
      v21 = BYTE1(_swiftEmptyArrayStorage[v17 + 7]);
      v22 = BYTE2(_swiftEmptyArrayStorage[v17 + 7]);
      v23 = BYTE3(_swiftEmptyArrayStorage[v17 + 7]);
      v44 = BYTE5(_swiftEmptyArrayStorage[v17 + 7]);
      v46 = BYTE4(_swiftEmptyArrayStorage[v17 + 7]);
      v24 = _swiftEmptyArrayStorage[v17 + 8];
      v25 = _swiftEmptyArrayStorage[v17 + 9];
      v26 = swift_allocObject(&unk_1006017F8, 80, 7);
      *(_QWORD *)(v26 + 16) = v48;
      *(_QWORD *)(v26 + 24) = v18;
      *(_QWORD *)(v26 + 32) = v19;
      *(_BYTE *)(v26 + 40) = v20;
      *(_BYTE *)(v26 + 41) = v21;
      *(_BYTE *)(v26 + 42) = v22;
      *(_BYTE *)(v26 + 43) = v23;
      *(_BYTE *)(v26 + 44) = v46;
      *(_BYTE *)(v26 + 45) = v44;
      *(_QWORD *)(v26 + 48) = v24;
      *(_QWORD *)(v26 + 56) = v25;
      *(_QWORD *)(v26 + 64) = sub_100348528;
      *(_QWORD *)(v26 + 72) = v41;
      swift_bridgeObjectRetain(v18);
      v27 = v19;
      swift_bridgeObjectRetain_n(v25, 2);
      swift_retain(v41);
      v28 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v24, v25, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10034857C, v26);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v28);
      v29 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v29);
      v30 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v28);
      specialized ContiguousArray._endMutation()(v30);
      v17 += 6;
      v16 = v50 - 1;
    }
    while (v50 != 1);
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
      if ((uint64_t)_swiftEmptyArrayStorage < 0)
        v36 = _swiftEmptyArrayStorage;
      else
        v36 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
      v37 = sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
      preferredElementSize = (_QWORD *)_bridgeCocoaArray<A>(_:)(v36, v37);
    }
    else
    {
      v31 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v31);
      sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
      preferredElementSize = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
    v33._countAndFlagsBits = 0;
    v33._object = (void *)0xE000000000000000;
    v51.value.super.isa = 0;
    v51.is_nil = 0;
    v34.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v33, (Swift::String_optional)0, v51, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, v38).super.super.isa;
    swift_release(v41);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  }
  return v34.super.super.isa;
}

void sub_100015744()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  double v5;
  double v6;
  char *v7;

  v1 = (char *)objc_msgSend(v0, "containerView");
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders36TTRIAccountsListsViewPinnedListsCell_dynamicDateGlyphCache];
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_dynamicDateGlyphCache];
  *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_dynamicDateGlyphCache] = v2;
  swift_retain(v2);

  v7 = (char *)objc_msgSend(v0, "containerView", swift_release(v3).n128_f64[0]);
  if (v7)
  {
    objc_msgSend(v0, "directionalLayoutMargins");
    v4 = v7;
    v5 = *(double *)&v7[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_trailingLayoutMarginForControls];
    *(double *)&v7[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_trailingLayoutMarginForControls] = v6;
    if (v6 != v5)
    {
      sub_100029710();
      v4 = v7;
    }

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100015814(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a3;
  v7 = a1;
  v11 = sub_100015864(a4, v8, v9, v10);

  return v11;
}

uint64_t sub_100015864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v6 = swift_isaMask & *v4;
  v7 = sub_1000232AC(a1, a2, a3, a4);
  v9 = v8;
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v9);
  v11 = *(_QWORD *)(v6 + 80);
  v12 = *(_QWORD *)(v6 + 88);
  v14 = type metadata accessor for TTRITreeViewSectionsMetadata.Section(0, v11, v12, v13);
  Array.subscript.getter(v20, a1, v7, v14);
  swift_bridgeObjectRelease(v7);
  swift_release(v20[0]);
  v15 = v20[1];
  v17 = type metadata accessor for TTRITreeViewNode(0, v11, v12, v16);
  v18 = Array.count.getter(v15, v17);
  swift_bridgeObjectRelease(v15);
  return v18;
}

uint64_t sub_100015928(_QWORD *a1, void *a2, void *a3, uint64_t a4, unint64_t a5, void *a6)
{
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint8_t *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  void *v39;
  uint64_t v42[5];
  uint64_t v43;
  uint64_t v44;

  if (qword_10063D858 != -1)
    swift_once(&qword_10063D858, sub_1000091DC);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100012DC4(v10, (uint64_t)qword_100663850);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "TEST SETUP START", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Default setup", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }

  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "TEST SETUP END", v22, 2u);
    swift_slowDealloc(v22, -1, -1);
  }

  v23 = swift_bridgeObjectRetain_n(a5, 2);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    v39 = a2;
    v26 = a4;
    v27 = (uint8_t *)swift_slowAlloc(12, -1);
    v28 = swift_slowAlloc(32, -1);
    v42[0] = v28;
    *(_DWORD *)v27 = 136446210;
    swift_bridgeObjectRetain(a5);
    v43 = sub_100027E40(v26, a5, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v27 + 4, v27 + 12);
    swift_bridgeObjectRelease_n(a5, 3);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "TEST RUN START {testName: %{public}s}", v27, 0xCu);
    swift_arrayDestroy(v28, 1, &type metadata for Any[8]);
    swift_slowDealloc(v28, -1, -1);
    v29 = v27;
    a4 = v26;
    a2 = v39;
    swift_slowDealloc(v29, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a5, 2);
  }
  v30 = (_QWORD *)swift_allocObject(&unk_10060A690, 48, 7);
  v30[2] = a4;
  v30[3] = a5;
  v30[4] = a2;
  v30[5] = a3;
  v31 = *sub_10001413C(a1, a1[3]);
  v32 = type metadata accessor for TTRIRootPresenter();
  v42[3] = v32;
  v42[4] = (uint64_t)&off_1005FA0E0;
  v42[0] = v31;
  v33 = (_QWORD *)swift_allocObject(&unk_10060A6B8, 40, 7);
  v33[2] = a6;
  v33[3] = sub_10002D46C;
  v33[4] = v30;
  v34 = *sub_10001413C(v42, v32);
  swift_bridgeObjectRetain(a5);
  v35 = a2;
  v36 = a3;
  swift_retain(v31);
  v37 = a6;
  swift_retain(v30);
  sub_100011E18(v34, (uint64_t)sub_10002D4FC, (uint64_t)v33);
  swift_release(v33);
  sub_100027F10(v42);
  return swift_release(v30);
}

void sub_100015D10(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if (qword_10063D858 != -1)
    swift_once(&qword_10063D858, sub_1000091DC);
  v4 = type metadata accessor for Logger(0);
  sub_100012DC4(v4, (uint64_t)qword_100663850);
  v5 = swift_bridgeObjectRetain_n(a2, 2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v28 = v9;
    *(_DWORD *)v8 = 136446210;
    swift_bridgeObjectRetain(a2);
    v27 = sub_100027E40(a1, a2, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "TEST RUN END {testName: %{public}s}", v8, 0xCu);
    swift_arrayDestroy(v9, 1, &type metadata for Any[8]);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    v10 = swift_bridgeObjectRelease_n(a2, 2);
  }
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "TEST TEARDOWN START", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Default tearDown", v17, 2u);
    swift_slowDealloc(v17, -1, -1);
  }

  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "TEST TEARDOWN END", v21, 2u);
    swift_slowDealloc(v21, -1, -1);
  }

  v22 = swift_bridgeObjectRetain_n(a2, 2);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter(v23);
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v28 = v26;
    *(_DWORD *)v25 = 136446210;
    swift_bridgeObjectRetain(a2);
    v27 = sub_100027E40(a1, a2, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v25 + 4, v25 + 12);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "TEST END {testName: %{public}s}", v25, 0xCu);
    swift_arrayDestroy(v26, 1, &type metadata for Any[8]);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
}

char *sub_10001610C(uint64_t *a1, void *a2, __int16 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t IsOffProvider;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  __n128 v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  char *v51;
  id v52;
  char *v53;
  uint64_t *v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t *v60;
  __int128 v61;
  uint64_t v62;
  _UNKNOWN **v63;

  v13 = HIBYTE(a3);
  v60 = a1;
  v15 = type metadata accessor for TTRIDynamicDateGlyphCache(0);
  swift_allocObject(v15, 40, 7);
  v16 = TTRIDynamicDateGlyphCache.init()();
  v59 = sub_100016564(a2, a4, v16, a5, a6, a7, a8);
  v18 = v17;
  v57 = v19;
  swift_release(v16);
  type metadata accessor for RDIDispatchQueue(0);
  v20 = a2;
  v21 = static RDIDispatchQueue.storeQueue.getter();
  v22 = type metadata accessor for TTRIRootInteractor();
  v23 = swift_allocObject(v22, 49, 7);
  v58 = v23 + 16;
  *(_QWORD *)(v23 + 24) = 0;
  swift_unknownObjectWeakInit(v23 + 16, 0);
  *(_QWORD *)(v23 + 32) = v20;
  *(_QWORD *)(v23 + 40) = v21;
  *(_BYTE *)(v23 + 48) = v13 & 1;
  v24 = v20;
  v25 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v24);
  v62 = type metadata accessor for TTRUserDefaults(0);
  v63 = (_UNKNOWN **)&protocol witness table for TTRUserDefaults;
  *(_QWORD *)&v61 = v25;
  v26 = swift_allocObject(&unk_100608C38, 24, 7);
  *(_QWORD *)(v26 + 16) = v24;
  IsOffProvider = type metadata accessor for TTRICloudIsOffProvider();
  v28 = (_QWORD *)swift_allocObject(IsOffProvider, 88, 7);
  v28[8] = 0;
  v28[2] = v24;
  sub_10002E37C(&v61, (uint64_t)(v28 + 3));
  v28[9] = sub_10002EDB0;
  v28[10] = v26;
  v29 = type metadata accessor for TTRIRootRouter();
  swift_allocObject(v29, 137, 7);
  v30 = sub_100006668(v18, v57, a4, a7, a8);
  type metadata accessor for TTRGeoLocationService(0);
  v31 = v24;
  v32 = v25;
  swift_unknownObjectRetain(v18);
  swift_retain(a4);
  v33 = swift_unknownObjectRetain(a7);
  v34 = (void *)static TTRGeoLocationService.newService()(v33);
  sub_100049FB8();
  v35 = swift_retain(v30);
  v36 = static UNUserNotificationCenter.ttr_unUserNotificationCenter.getter(v35);
  v37 = (void *)objc_opt_self(REMUserDefaults);
  v38 = v34;
  v39 = objc_msgSend(v37, "daemonUserDefaults");
  v40 = type metadata accessor for TTRIPrivacyChecker(0);
  swift_allocObject(v40, 112, 7);
  v41 = TTRIPrivacyChecker.init(delegate:unUserNotificationCenter:geoService:notificationsService:userDefaults:)(v30, &off_1005FD248, v36, v34, 0, 0, v39, &protocol witness table for REMDaemonUserDefaults, &protocol witness table for REMDaemonUserDefaults);
  v62 = v29;
  v63 = &off_1005FD258;
  *(_QWORD *)&v61 = v30;
  v42 = type metadata accessor for TTRIRootPresenter();
  v43 = swift_allocObject(v42, 146, 7);
  v44 = sub_100028D48((uint64_t)&v61, v29);
  __chkstk_darwin(v44);
  v46 = (uint64_t *)((char *)&v56 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v47 + 16))(v46);
  v48 = *v46;
  swift_retain(v30);
  v49 = v38;
  swift_retain(v23);
  swift_retain(v41);
  swift_retain(v28);
  v50 = sub_10000D098(v23, v48, (uint64_t)v49, v41, (uint64_t)v28, v43);
  sub_100027F10(&v61);
  v51 = (char *)objc_allocWithZone((Class)type metadata accessor for TTRIRootViewController());
  swift_retain(v50);
  v52 = v59;
  v53 = sub_100014768(v50, v52, 0, v51);
  *(_QWORD *)(v23 + 24) = &off_1005FA0D8;
  swift_unknownObjectWeakAssign(v58, v50);
  *(_QWORD *)(v50 + 24) = &off_1005F8390;
  swift_unknownObjectWeakAssign(v50 + 16, v53);
  swift_unknownObjectWeakAssign(v30 + 48, v53);
  *(_QWORD *)(v30 + 24) = &off_1005FA058;
  swift_unknownObjectWeakAssign(v30 + 16, v50);
  *(_QWORD *)(v18 + 40) = &off_1005FA068;
  swift_unknownObjectWeakAssign(v18 + 32, v50);
  v54 = v60;
  v60[3] = v42;
  v54[4] = (uint64_t)&off_1005FA0E0;
  *v54 = v50;

  swift_unknownObjectRelease(v18);
  swift_release(v23);
  swift_release(v28);
  swift_release(v30);

  swift_release(v41);
  return v53;
}

id sub_100016564(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  __n128 v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  id v50;
  char *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[3];
  uint64_t v61;
  _UNKNOWN **v62;

  v54 = a6;
  v55 = a7;
  v58 = a2;
  v59 = a3;
  v10 = a1;
  v11 = *(_QWORD *)TTRCloudKitMigrationManager.shared.unsafeMutableAddressor();
  v12 = swift_retain(v11);
  v13 = *(void **)TTRCloudKitNetworkActivityMonitor.shared.unsafeMutableAddressor(v12);
  v14 = type metadata accessor for TTRInteractorAsyncEditsCommitter(0);
  v61 = v14;
  v62 = (_UNKNOWN **)&protocol witness table for TTRInteractorAsyncEditsCommitter;
  v60[0] = swift_allocObject(v14, 16, 7);
  v15 = v13;
  v16 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v15);
  v17 = objc_allocWithZone((Class)type metadata accessor for TTRAccountsListsInteractor(0));
  v18 = v16;
  v19 = swift_unknownObjectRetain(a4);
  v56 = (id)TTRAccountsListsInteractor.init(store:committer:cloudKitMigrationManager:cloudKitNetworkActivityMonitor:perWindowLastSelectedListStorage:userDefaults:)(v10, v60, v11, v15, a4, a5, v18, &protocol witness table for TTRUserDefaults, v19);
  v20 = swift_allocObject(v14, 16, 7);
  v61 = v14;
  v62 = (_UNKNOWN **)&protocol witness table for TTRInteractorAsyncEditsCommitter;
  v60[0] = v20;
  v21 = objc_allocWithZone((Class)type metadata accessor for TTRListToCustomSmartListConverter(0));
  v22 = (void *)TTRListToCustomSmartListConverter.init(store:committer:)(v10, v60);
  v23 = type metadata accessor for TTRIAccountsListsRouter();
  v24 = (_QWORD *)swift_allocObject(v23, 56, 7);
  v57 = v24 + 2;
  swift_unknownObjectWeakInit(v24 + 2, 0);
  v24[3] = 0;
  swift_unknownObjectWeakInit(v24 + 6, 0);
  v25 = v54;
  v24[4] = v54;
  v24[5] = a7;
  sub_100005ED8(0, (unint64_t *)&qword_10063F290, UNUserNotificationCenter_ptr);
  swift_unknownObjectRetain(v25);
  v26 = swift_retain(v24);
  v27 = static UNUserNotificationCenter.ttr_unUserNotificationCenter.getter(v26);
  v28 = objc_msgSend((id)objc_opt_self(REMUserDefaults), "daemonUserDefaults");
  v29 = type metadata accessor for TTRIPrivacyChecker(0);
  swift_allocObject(v29, 112, 7);
  v30 = TTRIPrivacyChecker.init(delegate:unUserNotificationCenter:geoService:notificationsService:userDefaults:)(v24, &off_1005F6600, v27, 0, 0, 0, v28, &protocol witness table for REMDaemonUserDefaults, &protocol witness table for REMDaemonUserDefaults);
  v31 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
  v32 = static OS_dispatch_queue.main.getter(v31);
  type metadata accessor for RDIDispatchQueue(0);
  v33 = static RDIDispatchQueue.storeQueue.getter();
  v34 = type metadata accessor for REMContactsProvider(0);
  swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  v35 = REMContactsProvider.init(contactStoreCreator:queue:backgroundQueue:)(sub_100042A70, 0, v32, v33);
  v61 = v23;
  v62 = &off_1005F6610;
  v60[0] = v24;
  v36 = type metadata accessor for TTRIAccountsListsPresenter(0);
  v37 = (_QWORD *)swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
  v38 = sub_100028D48((uint64_t)v60, v23);
  __chkstk_darwin(v38);
  v40 = (uint64_t *)((char *)&v53 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v41 + 16))(v40);
  v42 = *v40;
  swift_unknownObjectRetain(v25);
  swift_retain(v24);
  v43 = (char *)v56;
  swift_retain(v35);
  v44 = v22;
  v45 = v58;
  swift_retain(v58);
  v46 = v59;
  swift_retain(v59);
  swift_retain(v30);
  v47 = sub_10009E78C((uint64_t)v43, v35, v25, v55, (uint64_t)v44, v42, v45, v46, 0, v30, v37);
  sub_100027F10(v60);
  v48 = (char *)objc_allocWithZone((Class)type metadata accessor for TTRIAccountsListsViewController(0));
  v49 = swift_retain(v47);
  v50 = sub_10009E584(v49, v48);
  swift_release(v30);

  swift_release(v35);
  swift_unknownObjectWeakAssign(v57, v50);
  swift_release(v24);
  v51 = &v43[direct field offset for TTRAccountsListsInteractor.delegate];
  swift_beginAccess(&v43[direct field offset for TTRAccountsListsInteractor.delegate], v60, 1, 0);
  *((_QWORD *)v51 + 1) = &off_100601118;
  swift_unknownObjectWeakAssign(v51, v47);

  v47[3] = &off_1005ECF68;
  swift_unknownObjectWeakAssign(v47 + 2, v50);
  return v50;
}

uint64_t sub_100016A78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  *(_QWORD *)(v1 + 608) = 0;
  *(_OWORD *)(v1 + 592) = 0u;
  v3 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, a1);
  *(_QWORD *)(v1 + 16) = sub_100022FF8;
  *(_QWORD *)(v1 + 24) = v3;
  v4 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16, a1);
  *(_QWORD *)(v1 + 32) = sub_1000254BC;
  *(_QWORD *)(v1 + 40) = v4;
  v5 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, a1);
  *(_QWORD *)(v1 + 48) = sub_10002ED0C;
  *(_QWORD *)(v1 + 56) = v5;
  v6 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, a1);
  *(_QWORD *)(v1 + 64) = sub_1002DC3A0;
  *(_QWORD *)(v1 + 72) = v6;
  v7 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16, a1);
  *(_QWORD *)(v1 + 80) = sub_1000234F8;
  *(_QWORD *)(v1 + 88) = v7;
  v8 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, a1);
  *(_QWORD *)(v1 + 96) = sub_1000234F8;
  *(_QWORD *)(v1 + 104) = v8;
  v9 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, a1);
  *(_QWORD *)(v1 + 112) = sub_1002DD048;
  *(_QWORD *)(v1 + 120) = v9;
  v10 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, a1);
  *(_QWORD *)(v1 + 128) = sub_1002DD050;
  *(_QWORD *)(v1 + 136) = v10;
  v11 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, a1);
  *(_QWORD *)(v1 + 144) = sub_1002DC3B8;
  *(_QWORD *)(v1 + 152) = v11;
  v12 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, a1);
  *(_QWORD *)(v1 + 160) = sub_1002DC3B8;
  *(_QWORD *)(v1 + 168) = v12;
  v13 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, a1);
  *(_QWORD *)(v1 + 176) = sub_1002DD058;
  *(_QWORD *)(v1 + 184) = v13;
  v14 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, a1);
  *(_QWORD *)(v1 + 192) = sub_1002DD060;
  *(_QWORD *)(v1 + 200) = v14;
  v15 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, a1);
  *(_QWORD *)(v1 + 208) = sub_1002DD080;
  *(_QWORD *)(v1 + 216) = v15;
  v16 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16, a1);
  *(_QWORD *)(v1 + 224) = sub_1002DD088;
  *(_QWORD *)(v1 + 232) = v16;
  v17 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16, a1);
  *(_QWORD *)(v1 + 240) = sub_1002DD090;
  *(_QWORD *)(v1 + 248) = v17;
  v18 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16, a1);
  *(_QWORD *)(v1 + 256) = sub_1002DD098;
  *(_QWORD *)(v1 + 264) = v18;
  v19 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, a1);
  *(_QWORD *)(v1 + 272) = sub_1002DD0A0;
  *(_QWORD *)(v1 + 280) = v19;
  v20 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16, a1);
  *(_QWORD *)(v1 + 288) = sub_1002DD0C0;
  *(_QWORD *)(v1 + 296) = v20;
  v21 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v21 + 16, a1);
  *(_QWORD *)(v1 + 304) = sub_1002DD098;
  *(_QWORD *)(v1 + 312) = v21;
  v22 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v22 + 16, a1);
  *(_QWORD *)(v1 + 320) = sub_1002DD0E0;
  *(_QWORD *)(v1 + 328) = v22;
  v23 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v23 + 16, a1);
  *(_QWORD *)(v1 + 336) = sub_1002DD100;
  *(_QWORD *)(v1 + 344) = v23;
  v24 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16, a1);
  *(_QWORD *)(v1 + 352) = sub_1002DD108;
  *(_QWORD *)(v1 + 360) = v24;
  v25 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16, a1);
  *(_QWORD *)(v1 + 368) = sub_1002DD128;
  *(_QWORD *)(v1 + 376) = v25;
  v26 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v26 + 16, a1);
  *(_QWORD *)(v1 + 384) = sub_1002DC4C4;
  *(_QWORD *)(v1 + 392) = v26;
  v27 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v27 + 16, a1);
  *(_QWORD *)(v1 + 400) = sub_1002DC4E0;
  *(_QWORD *)(v1 + 408) = v27;
  v28 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v28 + 16, a1);
  *(_QWORD *)(v1 + 416) = sub_1002DC4FC;
  *(_QWORD *)(v1 + 424) = v28;
  v29 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v29 + 16, a1);
  *(_QWORD *)(v1 + 432) = sub_1002DC4C4;
  *(_QWORD *)(v1 + 440) = v29;
  v30 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v30 + 16, a1);
  *(_QWORD *)(v1 + 448) = sub_1002DC3B8;
  *(_QWORD *)(v1 + 456) = v30;
  v31 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v31 + 16, a1);
  *(_QWORD *)(v1 + 464) = sub_1002DD134;
  *(_QWORD *)(v1 + 472) = v31;
  v32 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v32 + 16, a1);
  *(_QWORD *)(v1 + 480) = sub_1002DD13C;
  *(_QWORD *)(v1 + 488) = v32;
  v33 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v33 + 16, a1);
  *(_QWORD *)(v1 + 496) = sub_1002DC54C;
  *(_QWORD *)(v1 + 504) = v33;
  v34 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v34 + 16, a1);
  *(_QWORD *)(v1 + 512) = sub_1002DC54C;
  *(_QWORD *)(v1 + 520) = v34;
  v35 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v35 + 16, a1);
  *(_QWORD *)(v1 + 528) = sub_1002DC3A0;
  *(_QWORD *)(v1 + 536) = v35;
  v36 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v36 + 16, a1);
  *(_QWORD *)(v1 + 544) = sub_1002DD144;
  *(_QWORD *)(v1 + 552) = v36;
  v37 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v37 + 16, a1);
  *(_QWORD *)(v1 + 560) = sub_1002DD14C;
  *(_QWORD *)(v1 + 568) = v37;
  v38 = swift_allocObject(&unk_1005FE988, 24, 7);
  swift_unknownObjectWeakInit(v38 + 16, a1);
  *(_QWORD *)(v1 + 576) = sub_1002DD154;
  *(_QWORD *)(v1 + 584) = v38;
  return v1;
}

uint64_t sub_1000170F8(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a3;
  v5 = a1;
  v9 = sub_100017140((uint64_t)v5, v6, v7, v8);

  return v9;
}

uint64_t sub_100017140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = swift_isaMask & *v4;
  v6 = sub_1000232AC(a1, a2, a3, a4);
  v8 = v7;
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v8);
  v11 = type metadata accessor for TTRITreeViewSectionsMetadata.Section(0, *(_QWORD *)(v5 + 80), *(_QWORD *)(v5 + 88), v10);
  v12 = Array.count.getter(v6, v11);
  swift_bridgeObjectRelease(v6);
  return v12;
}

uint64_t type metadata accessor for PPTLaunch_ExtendedApp()
{
  return objc_opt_self(PPTLaunch_ExtendedApp);
}

uint64_t sub_1000172BC(void *a1, uint64_t a2, void *a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(_QWORD, _QWORD, _QWORD), void (*a8)(char *, char *))
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  uint64_t v22;

  v15 = type metadata accessor for IndexPath(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v19 = a3;
  v20 = a1;
  LOBYTE(a8) = sub_1000173A0((uint64_t)v18, a5, a6, a7, a8);

  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  return a8 & 1;
}

uint64_t sub_1000173A0(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(_QWORD, _QWORD, _QWORD), void (*a5)(char *, char *))
{
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  uint64_t v15;
  unsigned __int8 v16;

  v9 = swift_isaMask & *v5;
  v15 = sub_100022F8C(a2, a3);
  v14 = 0;
  v13 = v5;
  v10 = a4(0, *(_QWORD *)(v9 + 80), *(_QWORD *)(v9 + 88));
  sub_100023068(a1, (uint64_t)&v15, (uint64_t)&v14, a5, (uint64_t)&v12, v10, (uint64_t)&type metadata for Bool, (uint64_t)&v16);
  swift_release(v15);
  return v16;
}

uint64_t type metadata accessor for TTRIAnyTreeViewDataSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIAnyTreeViewDataSource);
}

uint64_t sub_100017454(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, void (*a4)(id *, uint64_t))
{
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  uint64_t v16;
  void **v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;

  v8 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v19 = a1;
    else
      v19 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v9 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v10 = a2(0);
  v11 = sub_1000175C8(a3, a2, (uint64_t)&protocol conformance descriptor for NSObject);
  result = Set.init(minimumCapacity:)(v9, v10, v11);
  v21 = result;
  if (v8)
  {
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v13 = _CocoaArrayWrapper.endIndex.getter(v14);
    result = swift_bridgeObjectRelease(a1);
    if (!v13)
      return v21;
  }
  else
  {
    v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v13)
      return v21;
  }
  if (v13 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v13; ++i)
      {
        v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        a4(&v20, v16);

      }
    }
    else
    {
      v17 = (void **)(a1 + 32);
      do
      {
        v18 = *v17++;
        a4(&v20, (uint64_t)v18);

        --v13;
      }
      while (v13);
    }
    return v21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000175C8(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100017608(unint64_t *a1, unint64_t *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_100005ED8(255, a2, a3);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100017648()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100646430[0];
  if (!qword_100646430[0])
  {
    v1 = objc_opt_self(REMObjectID);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, qword_100646430);
  }
  return result;
}

uint64_t sub_100017684(uint64_t a1)
{
  return sub_100017454(a1, (uint64_t (*)(uint64_t))sub_100017648, (unint64_t *)&qword_10063F030, (void (*)(id *, uint64_t))sub_1000176A0);
}

uint64_t sub_1000176A0(Swift::Int *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  void *v21;
  id v22;
  Swift::Int v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  Swift::Int v32;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v2);
    v8 = a2;
    v9 = __CocoaSet.member(for:)(v8, v7);

    if (v9)
    {
      swift_bridgeObjectRelease(v6);

      v31 = v9;
      v10 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
      swift_unknownObjectRetain(v9);
      swift_dynamicCast(&v32, &v31, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
      *a1 = v32;
      swift_unknownObjectRelease(v9);
      return 0;
    }
    result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v23 = sub_100488DF0(v7, result + 1);
    v32 = v23;
    v24 = *(_QWORD *)(v23 + 16);
    if (*(_QWORD *)(v23 + 24) <= v24)
    {
      v29 = v24 + 1;
      v30 = v8;
      sub_100486FB8(v29, &qword_1006576D0);
      v25 = v32;
    }
    else
    {
      v25 = v23;
      v26 = v8;
    }
    sub_100489404((uint64_t)v8, v25);
    v28 = *v3;
    *v3 = v25;
  }
  else
  {
    v12 = *(_QWORD *)(v6 + 40);
    swift_bridgeObjectRetain(v6);
    v13 = NSObject._rawHashValue(seed:)(v12);
    v14 = -1 << *(_BYTE *)(v6 + 32);
    v15 = v13 & ~v14;
    if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
    {
      sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
      v16 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v15);
      v17 = static NSObject.== infix(_:_:)(v16, a2);

      if ((v17 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease(v6);
        v21 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v15);
        *a1 = (Swift::Int)v21;
        v22 = v21;
        return 0;
      }
      v18 = ~v14;
      while (1)
      {
        v15 = (v15 + 1) & v18;
        if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
          break;
        v19 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v15);
        v20 = static NSObject.== infix(_:_:)(v19, a2);

        if ((v20 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    v8 = a2;
    sub_100017944((uint64_t)v8, v15, isUniquelyReferenced_nonNull_native);
    v28 = *v3;
    *v3 = v32;
  }
  swift_bridgeObjectRelease(v28);
  *a1 = (Swift::Int)v8;
  return 1;
}

void sub_100017944(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100486FB8(v9, &qword_1006576D0);
  }
  else
  {
    if (v8 > v7)
    {
      sub_100483024(&qword_1006576D0);
      goto LABEL_14;
    }
    sub_1004848A8(v9, &qword_1006576D0);
  }
  v10 = *v3;
  v11 = NSObject._rawHashValue(seed:)(*(_QWORD *)(*v3 + 40));
  v12 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
    v14 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
    v15 = static NSObject.== infix(_:_:)(v14, a1);

    if ((v15 & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v13);
      __break(1u);
    }
    else
    {
      v16 = ~v12;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
        v18 = static NSObject.== infix(_:_:)(v17, a1);

        if ((v18 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v19 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * a2) = a1;
  v20 = *(_QWORD *)(v19 + 16);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (v21)
    __break(1u);
  else
    *(_QWORD *)(v19 + 16) = v22;
}

void sub_100017AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char *v34;
  void (**v35)(char *, uint64_t);
  uint64_t v36;
  void *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  void *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  Class isa;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  unsigned int v71;
  void (**v72)(char *, uint64_t);
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  _QWORD *v83;
  void **aBlock;
  uint64_t v85;
  uint64_t (*v86)(uint64_t);
  void *v87;
  void *v88;
  uint64_t v89;

  v79 = type metadata accessor for DispatchWorkItemFlags(0);
  v76 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v78 = (char *)&v67 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for DispatchQoS(0);
  v75 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v82 = (char *)&v67 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for DispatchQoS.QoSClass(0);
  v74 = *(char **)(v81 - 8);
  __chkstk_darwin(v81);
  v3 = (char *)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride(0);
  v72 = *(void (***)(char *, uint64_t))(v4 - 8);
  v73 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v7);
  v9 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D580 != -1)
    swift_once(&qword_10063D580, sub_10000914C);
  v14 = type metadata accessor for Logger(0);
  sub_100012DC4(v14, (uint64_t)qword_100651DA0);
  v15 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"WindowScene will enter foreground", 33, 2, v15);
  v16 = swift_bridgeObjectRelease(v15);
  v17 = (id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v16);
  v18 = *v17;
  v19 = UUID.init()();
  v20 = UUID.uuidString.getter(v19);
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  TTRUserDefaults.activitySessionId.setter(v20, v22);

  v23 = *v17;
  Date.init()(v23);
  v24 = type metadata accessor for Date(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v9, 0, 1, v24);
  TTRUserDefaults.activitySessionBeginTime.setter(v9);

  v25 = v80;
  v26 = *(id *)(v80 + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_store);
  static TTRAppDelegateUtils.triggerSync(store:reason:)();

  aBlock = (void **)objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v27 = sub_1000175C8(&qword_100651F30, (uint64_t (*)(uint64_t))&type metadata accessor for NSRunLoop.SchedulerTimeType.Stride, (uint64_t)&protocol conformance descriptor for NSRunLoop.SchedulerTimeType.Stride);
  v28 = v73;
  dispatch thunk of static SchedulerTimeIntervalConvertible.seconds(_:)(2, v73, v27);
  v29 = sub_100005ED8(0, (unint64_t *)&qword_100642D90, NSRunLoop_ptr);
  v30 = sub_100017608((unint64_t *)&qword_100642DA0, (unint64_t *)&qword_100642D90, NSRunLoop_ptr, (uint64_t)&protocol conformance descriptor for NSRunLoop);
  TTRWidgetRefresher.setUpSubscriptionToReloadWidgetTimelinesUponStoreChange<A>(refreshScheduler:debounceInterval:)(&aBlock, v6, v29, v30);
  v72[1](v6, v28);

  v31 = sub_100005D78();
  v32 = *(_BYTE *)(v31 + 32);
  *(_BYTE *)(v31 + 32) = 1;
  sub_10000E280(v32);
  swift_release(v31);
  v33 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
  v34 = v74;
  v35 = (void (**)(char *, uint64_t))*((_QWORD *)v74 + 13);
  v71 = enum case for DispatchQoS.QoSClass.background(_:);
  v36 = v81;
  v72 = v35;
  ((void (*)(char *))v35)(v3);
  v73 = v33;
  v37 = (void *)static OS_dispatch_queue.global(qos:)(v3);
  v38 = (void (*)(char *, uint64_t))*((_QWORD *)v34 + 1);
  v74 = v3;
  v70 = v38;
  v38(v3, v36);
  v39 = swift_allocObject(&unk_1005F9620, 24, 7);
  swift_unknownObjectWeakInit(v39 + 16, v25);
  v88 = sub_10002F79C;
  v89 = v39;
  aBlock = _NSConcreteStackBlock;
  v85 = 1107296256;
  v86 = sub_100006378;
  v87 = &unk_1005F9660;
  v40 = _Block_copy(&aBlock);
  v41 = swift_retain(v39);
  v42 = v82;
  static DispatchQoS.unspecified.getter(v41);
  v83 = _swiftEmptyArrayStorage;
  v43 = sub_1000175C8((unint64_t *)&qword_1006447D0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v44 = sub_10002A750((uint64_t *)&unk_100640F40);
  v45 = sub_100023FEC((unint64_t *)&qword_1006447E0, (uint64_t *)&unk_100640F40, (uint64_t)&protocol conformance descriptor for [A]);
  v46 = v78;
  v68 = v44;
  v47 = v79;
  v69 = v43;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v83, v44, v45, v79, v43);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v42, v46, v40);
  _Block_release(v40);

  v76 = *(_QWORD *)(v76 + 8);
  ((void (*)(char *, uint64_t))v76)(v46, v47);
  v48 = *(void (**)(char *, uint64_t))(v75 + 8);
  v49 = v77;
  v48(v42, v77);
  v50 = v89;
  swift_release(v39);
  swift_release(v50);
  if (*(_DWORD *)(v25 + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_applicationRunProperties) == 2)
  {
    __break(1u);
  }
  else
  {
    if ((*(_DWORD *)(v25 + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_applicationRunProperties) & 0x1000000) != 0)
    {
      v51 = v47;
      v52 = v46;
      v53 = v45;
      v54 = v74;
      v55 = v81;
      ((void (*)(char *, _QWORD, uint64_t))v72)(v74, v71, v81);
      v56 = v51;
      v57 = (void *)static OS_dispatch_queue.global(qos:)(v54);
      v70(v54, v55);
      v58 = swift_allocObject(&unk_1005F9620, 24, 7);
      swift_unknownObjectWeakInit(v58 + 16, v25);
      v88 = sub_1002583C0;
      v89 = v58;
      aBlock = _NSConcreteStackBlock;
      v85 = 1107296256;
      v86 = sub_100006378;
      v87 = &unk_1005F9688;
      v59 = v49;
      v60 = _Block_copy(&aBlock);
      v61 = swift_retain(v58);
      v62 = v82;
      static DispatchQoS.unspecified.getter(v61);
      v83 = _swiftEmptyArrayStorage;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v83, v68, v53, v56, v69);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v62, v52, v60);
      _Block_release(v60);

      ((void (*)(char *, uint64_t))v76)(v52, v56);
      v48(v62, v59);
      v63 = v89;
      swift_release(v58);
      swift_release(v63);
    }
    v64 = objc_msgSend((id)objc_opt_self(REMUserDefaults), "daemonUserDefaults");
    v65 = static Locale.remPreferredLocalizations.getter();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v65);
    objc_msgSend(v64, "setPreferredLocalizations:", isa);

  }
}

uint64_t sub_100018288(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  unsigned int v14;
  char v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  const mach_header_64 *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  id v39;
  char *v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  id v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  id aBlock[3];
  void *v86;
  void (*v87)();
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v83 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride(0);
  v3 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v82 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v9);
  result = UIApp;
  if (UIApp)
  {
    v75 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    v76 = v12;
    v77 = v11;
    v78 = v8;
    v79 = v6;
    v14 = objc_msgSend(UIApp, "launchedToTest");
    v15 = v14;
    v16 = v14 ^ 1;
    v17 = 65792;
    if (v14)
      v17 = 0;
    v18 = v17 | v16;
    v19 = 0x1000000;
    if (v14)
      v19 = 0;
    v20 = v18 | v19;
    v21 = &_mh_execute_header;
    if (!v14)
      BYTE4(v21) = 0;
    v84 = v1;
    v22 = &v1[OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_applicationRunProperties];
    v22[4] = BYTE4(v21);
    *(_DWORD *)v22 = v20;
    if (qword_10063D580 != -1)
      swift_once(&qword_10063D580, sub_10000914C);
    v23 = type metadata accessor for Logger(0);
    v24 = sub_100012DC4(v23, (uint64_t)qword_100651DA0);
    v25 = swift_bridgeObjectRetain_n(a1, 2);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter();
    v28 = os_log_type_enabled(v26, v27);
    v80 = v5;
    v81 = v3;
    if (v28)
    {
      v29 = swift_slowAlloc(22, -1);
      v74 = v24;
      v30 = v29;
      v31 = (void *)swift_slowAlloc(64, -1);
      aBlock[0] = v31;
      *(_DWORD *)v30 = 136446466;
      v89 = a1;
      v32 = sub_10002A750((uint64_t *)&unk_100651F80);
      v33 = Optional.descriptionOrNil.getter(v32);
      v35 = v34;
      v89 = sub_100027E40(v33, v34, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, &v90, v30 + 4, v30 + 12);
      swift_bridgeObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease(v35);
      *(_WORD *)(v30 + 12) = 2082;
      LODWORD(v89) = 16843009 * v16;
      BYTE4(v89) = v15;
      v36 = String.init<A>(describing:)(&v89, &type metadata for TTRApplicationRunProperties);
      v38 = v37;
      v89 = sub_100027E40(v36, v37, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, &v90, v30 + 14, v30 + 22);
      swift_bridgeObjectRelease(v38);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "didFinishLaunchingWithOptions {options: %{public}s, applicationRunProperties: %{public}s}", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy(v31, 2, &type metadata for Any[8]);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v30, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a1, 2);
    }
    sub_10000B134();
    v39 = objc_msgSend((id)objc_opt_self(UNUserNotificationCenter), "currentNotificationCenter");
    v40 = v84;
    objc_msgSend(v39, "setDelegate:", v84);

    v41 = OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_store;
    v42 = *(id *)&v40[OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_store];
    static TTRAppDelegateUtils.triggerSync(store:reason:)();

    if ((v15 & 1) != 0)
    {
      v44 = Logger.logObject.getter(v43);
      v45 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v46 = 0;
        _os_log_impl((void *)&_mh_execute_header, v44, v45, "Not asking for locationPermission because not allowed", v46, 2u);
        swift_slowDealloc(v46, -1, -1);
      }

    }
    else
    {
      v48 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
      v49 = (void *)static OS_dispatch_queue.main.getter(v48);
      v50 = swift_allocObject(&unk_1005F96E8, 24, 7);
      *(_QWORD *)(v50 + 16) = v40;
      v87 = sub_100258B60;
      v88 = v50;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_100006378;
      v86 = &unk_1005F9700;
      v51 = _Block_copy(aBlock);
      v52 = v88;
      v53 = v40;
      v54 = swift_release(v52);
      v55 = v75;
      static DispatchQoS.unspecified.getter(v54);
      aBlock[0] = _swiftEmptyArrayStorage;
      v56 = sub_1000175C8((unint64_t *)&qword_1006447D0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v57 = sub_10002A750((uint64_t *)&unk_100640F40);
      v58 = sub_100023FEC((unint64_t *)&qword_1006447E0, (uint64_t *)&unk_100640F40, (uint64_t)&protocol conformance descriptor for [A]);
      v59 = v78;
      v60 = v57;
      v61 = v80;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v60, v58, v80, v56);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v55, v59, v51);
      _Block_release(v51);

      (*(void (**)(char *, uint64_t))(v79 + 8))(v59, v61);
      v47 = (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v55, v77);
    }
    v62 = Logger.logObject.getter(v47);
    v63 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v62, v63))
    {
      v64 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v64 = 0;
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "AppIntents adding store dependency", v64, 2u);
      swift_slowDealloc(v64, -1, -1);
    }

    type metadata accessor for AppDependencyManager(0);
    v65 = static AppDependencyManager.shared.getter();
    v66 = *(id *)&v40[v41];
    AppDependencyManager.ttrAdd(dependency:)();
    swift_release(v65);

    result = static AppDependencyManager.shared.getter();
    v67 = *(void **)&v40[OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_intentPerformer];
    if (v67)
    {
      v68 = result;
      v86 = (void *)type metadata accessor for REMStoreIntentPerformer(0);
      v87 = (void (*)())&protocol witness table for REMStoreIntentPerformer;
      aBlock[0] = v67;
      swift_retain(v67);
      AppDependencyManager.ttrAdd(dependency:)(aBlock);
      swift_release(v68);
      sub_100027F10(aBlock);
      static Tips.configure(_:)(_swiftEmptyArrayStorage);
      aBlock[0] = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
      v69 = sub_1000175C8(&qword_100651F30, (uint64_t (*)(uint64_t))&type metadata accessor for NSRunLoop.SchedulerTimeType.Stride, (uint64_t)&protocol conformance descriptor for NSRunLoop.SchedulerTimeType.Stride);
      v71 = v82;
      v70 = v83;
      dispatch thunk of static SchedulerTimeIntervalConvertible.milliseconds(_:)(25, v83, v69);
      v72 = sub_100005ED8(0, (unint64_t *)&qword_100642D90, NSRunLoop_ptr);
      v73 = sub_100017608((unint64_t *)&qword_100642DA0, (unint64_t *)&qword_100642D90, NSRunLoop_ptr, (uint64_t)&protocol conformance descriptor for NSRunLoop);
      AppIntentsServicesRefresher.setUpSubscriptionForRefreshUponStoreChange<A>(refreshScheduler:debounceInterval:)(aBlock, v71, v72, v73);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v71, v70);

      return 1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_100018B5C(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType(a1, a2);
  return objc_msgSendSuper2(&v5, *a3);
}

void sub_100018B98(void *a1, void *a2, void *a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  char *v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  id v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  uint64_t v52;
  void *v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  char *v61;
  char *v62;
  void *v63;
  BOOL v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  char *v70;
  id v71;
  void *v72;
  id v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  id v79;
  char *v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  char v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  char v92;
  id v93;
  void *v94;
  char v95;
  id v96;
  void *v97;
  BOOL v98;
  uint64_t v99;
  os_log_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE *v104;
  uint64_t v105;
  NSObject *v106;
  os_log_type_t v107;
  uint8_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t (*v114)(uint64_t, uint64_t);
  uint64_t v115;
  uint8_t *v116;
  unint64_t v117;
  uint64_t v118;
  BOOL v119;
  char v120;
  NSObject *v121;
  os_log_type_t v122;
  uint8_t *v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  void *v127;
  void *v128;
  uint64_t v129;
  uint64_t inited;
  uint64_t v131;
  Swift::Int v132;
  Class isa;
  id v134;
  id v135;
  int v136;
  NSObject *v137;
  os_log_type_t v138;
  uint8_t *v139;
  _BYTE v140[12];
  int v141;
  uint64_t v142;
  _BYTE *v143;
  os_log_t v144;
  uint64_t v145;
  _BYTE *v146;
  uint64_t v147;
  id v148;
  char *v149;
  uint64_t v150;
  void *v151;
  char *v152;
  uint64_t aBlock[5];
  uint64_t v154;
  char v155[48];
  uint64_t v156;
  _BYTE v157[16];
  uint64_t v158;
  _BYTE v159[16];
  uint64_t v160;

  v4 = v3;
  v8 = sub_10002A750((uint64_t *)&unk_100640EE0);
  __chkstk_darwin(v8);
  v10 = &v140[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = &v140[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v17 = &v140[-v16];
  v18 = objc_opt_self(UIWindowScene);
  v19 = swift_dynamicCastObjCClass(a1, v18);
  if (!v19)
    return;
  v20 = (void *)v19;
  v144 = v10;
  v145 = v12;
  v146 = v17;
  v21 = qword_10063D8C8;
  v22 = a1;
  if (v21 != -1)
    swift_once(&qword_10063D8C8, sub_100012CC4);
  v23 = type metadata accessor for Logger(0);
  v24 = sub_100012DC4(v23, (uint64_t)qword_1006653E0);
  v25 = v22;
  v26 = a2;
  v27 = a3;
  v28 = v25;
  v29 = v26;
  v30 = (char *)v27;
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.default.getter();
  v33 = v32;
  v34 = os_log_type_enabled(v31, v32);
  v148 = v28;
  v150 = v24;
  v152 = v4;
  v147 = v11;
  v143 = v15;
  v149 = v30;
  if (v34)
  {
    v35 = swift_slowAlloc(32, -1);
    v141 = v33;
    v36 = v35;
    v37 = (_QWORD *)swift_slowAlloc(16, -1);
    v142 = swift_slowAlloc(32, -1);
    aBlock[0] = v142;
    *(_DWORD *)v36 = 136315650;
    v38 = objc_msgSend(v28, "session");
    v39 = objc_msgSend(v38, "persistentIdentifier");
    v151 = v20;
    v40 = v39;

    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v43 = v42;

    v158 = sub_100027E40(v41, v43, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, v159, v36 + 4, v36 + 12);

    swift_bridgeObjectRelease(v43);
    *(_WORD *)(v36 + 12) = 2112;
    v158 = (uint64_t)v29;
    v44 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, v159, v36 + 14, v36 + 22);
    *v37 = v29;

    v20 = v151;
    *(_WORD *)(v36 + 22) = 2112;
    v158 = (uint64_t)v30;
    v45 = v30;
    v4 = v152;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, v159, v36 + 24, v36 + 32);
    v37[1] = v30;

    _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v141, "sceneWillConnect {scene: %s, session: %@, connectionOptions: %@}", (uint8_t *)v36, 0x20u);
    v46 = sub_10002A750(&qword_100642D60);
    swift_arrayDestroy(v37, 2, v46);
    swift_slowDealloc(v37, -1, -1);
    v47 = v142;
    swift_arrayDestroy(v142, 1, &type metadata for Any[8]);
    swift_slowDealloc(v47, -1, -1);
    swift_slowDealloc(v36, -1, -1);

  }
  else
  {

  }
  v48 = objc_msgSend(objc_allocWithZone((Class)UIWindow), "init");
  v49 = *(void **)&v4[OBJC_IVAR___TTRIWindowSceneController_mainWindow];
  *(_QWORD *)&v4[OBJC_IVAR___TTRIWindowSceneController_mainWindow] = v48;
  v50 = v48;

  v151 = v50;
  v51 = v20;
  objc_msgSend(v50, "setWindowScene:", v20);
  v52 = OBJC_IVAR___TTRIWindowSceneController_store;
  v53 = *(void **)&v4[OBJC_IVAR___TTRIWindowSceneController_store];
  if (!v53)
  {
    __break(1u);
    goto LABEL_52;
  }
  v54 = *(_DWORD *)&v4[OBJC_IVAR___TTRIWindowSceneController_applicationRunProperties];
  if (v54 == 2)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v55 = *(_QWORD *)&v4[OBJC_IVAR___TTRIWindowSceneController_attachmentThumbnailsManager];
  if (!v55)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v142 = OBJC_IVAR___TTRIWindowSceneController_applicationRunProperties;
  v56 = *(_QWORD *)&v4[OBJC_IVAR___TTRIWindowSceneController_hashtagAssociationModule];
  if (!v56)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v57 = *(_QWORD *)&v4[OBJC_IVAR___TTRIWindowSceneController_hashtagAssociationModule + 8];
  v59 = *(_QWORD *)&v4[OBJC_IVAR___TTRIWindowSceneController_lastSelectedListStorage];
  v58 = *(_QWORD *)&v4[OBJC_IVAR___TTRIWindowSceneController_lastSelectedListStorage + 8];
  type metadata accessor for TTRIRootAssembly();
  v60 = v53;
  swift_retain(v55);
  swift_unknownObjectRetain(v56);
  v61 = v152;
  v62 = sub_10001610C(&v158, v60, v54 & 0x101, v55, v59, v58, v56, v57);

  swift_release(v55);
  swift_unknownObjectRelease(v56);
  v63 = v151;
  objc_msgSend(v151, "setRootViewController:", v62);
  objc_msgSend(v63, "makeKeyAndVisible");
  sub_10001413C(&v158, v160);
  v64 = sub_10002F2B0();
  sub_100010634((uint64_t)&v158, (uint64_t)aBlock);
  v65 = (uint64_t)&v61[OBJC_IVAR___TTRIWindowSceneController_rootModuleInterface];
  swift_beginAccess(&v61[OBJC_IVAR___TTRIWindowSceneController_rootModuleInterface], &v156, 33, 0);
  sub_100041F2C((uint64_t)aBlock, v65, &qword_100651F38);
  swift_endAccess(&v156);
  v66 = *(void **)&v61[v52];
  if (!v66)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  v67 = *sub_10001413C(&v158, v160);
  v68 = v66;
  sub_100010370(v67, v68);

  v70 = v149;
  if (v64)
    goto LABEL_31;
  v71 = objc_msgSend(v149, "cloudKitShareMetadata");
  if (v71)
  {
    v72 = v71;
    v73 = objc_msgSend(objc_allocWithZone((Class)REMStore), "initUserInteractive:", 1);
    v74 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
    v75 = (void *)static OS_dispatch_queue.main.getter(v74);
    v76 = swift_allocObject(&unk_10060D660, 32, 7);
    *(_QWORD *)(v76 + 16) = v72;
    *(_QWORD *)(v76 + 24) = v61;
    aBlock[4] = (uint64_t)sub_10050F968;
    v154 = v76;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100009944;
    aBlock[3] = (uint64_t)&unk_10060D678;
    v77 = _Block_copy(aBlock);
    v78 = v154;
    v79 = v72;
    v80 = v152;
    swift_release(v78);
    objc_msgSend(v73, "acceptShareWithMetadata:queue:completion:", v79, v75, v77);
    _Block_release(v77);

  }
  v81 = objc_msgSend(v70, "userActivities");
  v82 = sub_100005ED8(0, (unint64_t *)&qword_100649BD0, NSUserActivity_ptr);
  v83 = sub_1000199A0((unint64_t *)&unk_100665600, (unint64_t *)&qword_100649BD0, NSUserActivity_ptr);
  v84 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v81, v82, v83);

  v85 = (void *)sub_10002CE28(v84);
  swift_bridgeObjectRelease(v84);
  if (v85)
  {
    v86 = sub_10050B568(v85);

    if ((v86 & 1) != 0)
      goto LABEL_31;
  }
  v87 = objc_msgSend(v70, "URLContexts");
  v88 = sub_100005ED8(0, &qword_100660C90, UIOpenURLContext_ptr);
  v89 = sub_1000199A0(&qword_1006655D0, &qword_100660C90, UIOpenURLContext_ptr);
  v90 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v87, v88, v89);

  v91 = (void *)sub_10002CE14(v90);
  swift_bridgeObjectRelease(v90);
  if (v91)
  {
    v92 = sub_10050CE38(v91);

    if ((v92 & 1) != 0)
      goto LABEL_31;
  }
  v93 = objc_msgSend(v70, "notificationResponse");
  if (v93)
  {
    v94 = v93;
    v95 = sub_10050A91C(v93);

    if ((v95 & 1) != 0)
      goto LABEL_31;
  }
  v96 = objc_msgSend(v70, "shortcutItem");
  if (v96)
  {
    v97 = v96;
    v98 = sub_10050A584(v96);

    if (v98)
      goto LABEL_31;
  }
  v99 = static TTRProcessEnvironment.currentProcessEnvironment.getter();
  v100 = v144;
  TTRProcessEnvironment.targetNavigationURL.getter();
  swift_bridgeObjectRelease(v99);
  v101 = v145;
  v102 = v147;
  if ((*(unsigned int (**)(os_log_t, uint64_t, uint64_t))(v145 + 48))(v100, 1, v147) == 1)
  {
    sub_1000073A0((uint64_t)v100, (uint64_t *)&unk_100640EE0);
  }
  else
  {
    v103 = (uint64_t)v146;
    (*(void (**)(_BYTE *, os_log_t, uint64_t))(v101 + 32))(v146, v100, v102);
    v104 = v143;
    v105 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v101 + 16))(v143, v103, v102);
    v106 = Logger.logObject.getter(v105);
    v107 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v106, v107))
    {
      v108 = (uint8_t *)swift_slowAlloc(12, -1);
      v109 = swift_slowAlloc(32, -1);
      v149 = v62;
      v110 = v109;
      aBlock[0] = v109;
      v144 = v106;
      *(_DWORD *)v108 = 136315138;
      v111 = URL.description.getter();
      v113 = v112;
      v156 = sub_100027E40(v111, v112, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v156, v157, v108 + 4, v108 + 12);
      swift_bridgeObjectRelease(v113);
      v114 = *(uint64_t (**)(uint64_t, uint64_t))(v101 + 8);
      v114((uint64_t)v104, v147);
      v106 = v144;
      _os_log_impl((void *)&_mh_execute_header, v144, v107, "Navigating to URL for window scene restoration {url: %s}", v108, 0xCu);
      swift_arrayDestroy(v110, 1, &type metadata for Any[8]);
      v115 = v110;
      v62 = v149;
      swift_slowDealloc(v115, -1, -1);
      v116 = v108;
      v102 = v147;
      swift_slowDealloc(v116, -1, -1);
    }
    else
    {
      v114 = *(uint64_t (**)(uint64_t, uint64_t))(v101 + 8);
      v114((uint64_t)v104, v102);
    }

    v117 = sub_1003512B8((uint64_t)_swiftEmptyArrayStorage);
    v118 = (uint64_t)v146;
    v119 = sub_10050A39C((uint64_t)v146, v117);
    swift_bridgeObjectRelease(v117);
    v69 = v114(v118, v102);
    if (v119)
      goto LABEL_31;
  }
  sub_10001413C(&v158, v160);
  if ((sub_1000129D4() & 1) != 0 || (sub_10001413C(&v158, v160), v69 = sub_10002F41C(), (v69 & 1) == 0))
  {
    v134 = objc_msgSend(v51, "session");
    v135 = objc_msgSend(v134, "stateRestorationActivity");

    if (!v135)
    {
      v120 = 0;
      goto LABEL_32;
    }
    v136 = *(_DWORD *)&v152[v142];
    if (v136 != 2)
    {
      if ((v136 & 0x10000) != 0)
      {
        v120 = sub_10050B568(v135);
      }
      else
      {
        v137 = Logger.logObject.getter(v69);
        v138 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v137, v138))
        {
          v139 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v139 = 0;
          _os_log_impl((void *)&_mh_execute_header, v137, v138, "Not performing state restoration because not allowed by application capabilities", v139, 2u);
          swift_slowDealloc(v139, -1, -1);
        }

        v120 = 0;
      }

      goto LABEL_32;
    }
LABEL_56:
    __break(1u);
    return;
  }
LABEL_31:
  v120 = 1;
LABEL_32:
  v121 = Logger.logObject.getter(v69);
  v122 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v121, v122))
  {
    v123 = (uint8_t *)swift_slowAlloc(12, -1);
    v124 = swift_slowAlloc(32, -1);
    *(_DWORD *)v123 = 136315138;
    aBlock[0] = v124;
    if ((v120 & 1) != 0)
      v125 = 1702195828;
    else
      v125 = 0x65736C6166;
    if ((v120 & 1) != 0)
      v126 = 0xE400000000000000;
    else
      v126 = 0xE500000000000000;
    v156 = sub_100027E40(v125, v126, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v156, v157, v123 + 4, v123 + 12);
    swift_bridgeObjectRelease(v126);
    _os_log_impl((void *)&_mh_execute_header, v121, v122, "Finished handling connectionOptions in windowSceneWillConnect: {navigated: %s}", v123, 0xCu);
    swift_arrayDestroy(v124, 1, &type metadata for Any[8]);
    swift_slowDealloc(v124, -1, -1);
    swift_slowDealloc(v123, -1, -1);
  }

  v127 = v148;
  v128 = v151;
  sub_10000BDE0(v151);
  v129 = sub_10002A750((uint64_t *)&unk_100654F80);
  inited = swift_initStackObject(v129, v155);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = TTRUserActivityType.activityType.getter(1);
  *(_QWORD *)(inited + 40) = v131;
  v132 = sub_100490398(inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 1, &type metadata for String);
  isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v132);
  objc_msgSend(v51, "_showProgressWhenFetchingUserActivityForTypes:", isa);

  sub_100027F10(&v158);
}

uint64_t sub_1000199A0(unint64_t *a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_100005ED8(255, a2, a3);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000199E0(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t, uint64_t, BOOL, uint64_t))
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char v16;

  v5 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    v7 = __CocoaSet.startIndex.getter(v6);
    v9 = v8;
    v10 = __CocoaSet.endIndex.getter(v6);
    v12 = static __CocoaSet.Index.== infix(_:_:)(v7, v9, v10, v11);
    swift_bridgeObjectRelease(v10);
    if ((v12 & 1) != 0)
      goto LABEL_6;
    goto LABEL_10;
  }
  result = a2(a1);
  if ((v16 & 1) == 0)
  {
    v9 = v15;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v15)
    {
      v7 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
      {
LABEL_6:
        sub_10003E0E0(v7, v9, v5 != 0);
        return 0;
      }
LABEL_10:
      v13 = a3(v7, v9, v5 != 0, a1);
      sub_10003E0E0(v7, v9, v5 != 0);
      return v13;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100019AF8@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  id v10;
  id v11;
  Class isa;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  Class v18;
  char *v19;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_dynamicDateGlyphCache);
  v5 = objc_allocWithZone((Class)type metadata accessor for TTRIPinnedListControl(0));
  v6 = swift_retain(v4);
  sub_100025BFC(v6, v7);
  v9 = v8;
  objc_msgSend(v8, "addTarget:action:forControlEvents:", a1, "didTapControl:", 64);
  v10 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", a1, "didSelectControl:");
  sub_100005ED8(0, (unint64_t *)&qword_100650740, NSNumber_ptr);
  v11 = v10;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v11, "setAllowedTouchTypes:", isa);

  v13 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v14 = swift_allocObject(v13, 40, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100521140;
  v15 = objc_allocWithZone((Class)NSNumber);
  v16 = v11;
  v17 = objc_msgSend(v15, "initWithInteger:", 4);
  *(_QWORD *)(v14 + 32) = v17;
  specialized Array._endMutation()(v17);
  v18 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v14);
  objc_msgSend(v16, "setAllowedPressTypes:", v18);

  objc_msgSend(v9, "addGestureRecognizer:", v16);
  v19 = &v9[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_delegate];
  *((_QWORD *)v19 + 1) = &off_1005F8E90;
  result = swift_unknownObjectWeakAssign(v19, a1);
  *a2 = v9;
  return result;
}

void sub_100019CE8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t KeyPath;
  id v10;

  v4 = type metadata accessor for AttributeContainer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v5 = (void *)static UIFont.roundedSystemFont(ofSize:weight:)(13.0, UIFontWeightSemibold);
  v6 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleBody);
  KeyPath = swift_getKeyPath(&unk_10052BED8);
  v7 = swift_getKeyPath(&unk_10052BF08);
  v10 = objc_msgSend(v6, "scaledFontForFont:", v5, KeyPath);
  v8 = sub_100019EC8();
  AttributeContainer.subscript.setter(&v10, v7, v8);

}

uint64_t sub_100019DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t KeyPath;
  unint64_t v8;
  uint64_t v10;

  v6 = type metadata accessor for AttributeContainer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  swift_getKeyPath(&unk_100524E40);
  KeyPath = swift_getKeyPath(&unk_100524E70);
  sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v10 = static UIFont.roundedSystemFont(ofSize:weight:)(a3, UIFontWeightSemibold);
  v8 = sub_100019EC8();
  return AttributeContainer.subscript.setter(&v10, KeyPath, v8);
}

unint64_t sub_100019EC8()
{
  unint64_t result;

  result = qword_100646D70;
  if (!qword_100646D70)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.UIKitAttributes.FontAttribute, &type metadata for AttributeScopes.UIKitAttributes.FontAttribute);
    atomic_store(result, (unint64_t *)&qword_100646D70);
  }
  return result;
}

char *sub_100019F0C(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  _QWORD *v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  id v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  id v20;
  NSString v21;
  unsigned __int8 v22;
  NSString v23;
  id v24;
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  Class isa;
  void *v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  Class v54;
  void *v55;
  void *v56;
  void *v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  void *v62;
  void *v63;
  double v64;
  char *v65;
  double v66;
  double v67;
  double v68;
  char *result;
  char *v70;
  id v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  id v84;
  uint64_t ObjectType;
  uint64_t v86;
  int v87;
  int v88;
  uint64_t v89;
  objc_super v90;

  v3 = v2;
  ObjectType = swift_getObjectType(v3, a2);
  v5 = &v3[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_identifier];
  *v5 = 0;
  v5[1] = 0;
  v3[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migrateButtonState] = 2;
  v3[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_networkActivityState] = 0;
  v3[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_hasDisclosureControl] = 1;
  v3[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_showUpgradeForLocalOnlyAccount] = 0;
  v3[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_upgradeHintCardShowingForAccount] = 0;
  v6 = &v3[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_delegate];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6, 0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_accountID] = 0;
  v7 = &v3[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_treeCellViewModel];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_OWORD *)v7 + 2) = 0u;
  *((_QWORD *)v7 + 6) = 0;
  v8 = &v3[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_treeCellViewDelegate];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8, 0);
  v9 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_outerStackView;
  v10 = objc_allocWithZone((Class)NUIContainerStackView);
  v11 = v3;
  *(_QWORD *)&v3[v9] = objc_msgSend(v10, "init");
  v12 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_innerStackView;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)NUIContainerStackView), "init");
  v13 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_labelView;
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v14 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migrateButton;
  *(_QWORD *)&v11[v14] = sub_10000F050();
  *(_QWORD *)&v11[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migratingSpinner] = 0;
  v15 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_disclosureView;
  v16 = type metadata accessor for TTRIAccountsListsCellAccessoryView();
  *(_QWORD *)&v11[v15] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v16)), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_collapseGestureRecognizers] = _swiftEmptyArrayStorage;
  v11[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_isHighlighted] = 0;
  v17 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_isStoreDemoMode;
  v18 = objc_allocWithZone((Class)NSUserDefaults);
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v18, "initWithSuiteName:", v19);

  if (v20)
  {
    v21 = String._bridgeToObjectiveC()();
    v22 = objc_msgSend(v20, "BOOLForKey:", v21);

    v11[v17] = v22;
    if (a2)
    {
LABEL_3:
      v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(a2);
      goto LABEL_6;
    }
  }
  else
  {
    v11[v17] = 0;

    if (a2)
      goto LABEL_3;
  }
  v23 = 0;
LABEL_6:
  v90.receiver = v11;
  v90.super_class = (Class)type metadata accessor for TTRIAccountsListsSectionHeaderView();
  v24 = objc_msgSendSuper2(&v90, "initWithReuseIdentifier:", v23);

  v25 = (char *)v24;
  objc_msgSend(v25, "setUserInteractionEnabled:", 1);
  v26 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_outerStackView;
  v27 = *(void **)&v25[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_outerStackView];
  v28 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v29 = swift_allocObject(v28, 48, 7);
  *(_OWORD *)(v29 + 16) = xmmword_10051FF90;
  v30 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_innerStackView;
  v31 = *(void **)&v25[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_innerStackView];
  *(_QWORD *)(v29 + 32) = v31;
  v86 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_disclosureView;
  v32 = *(void **)&v25[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_disclosureView];
  *(_QWORD *)(v29 + 40) = v32;
  v89 = v29;
  specialized Array._endMutation()(v29);
  sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  v33 = v27;
  v34 = v31;
  v35 = v32;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v89);
  objc_msgSend(v33, "setArrangedSubviews:", isa);

  v37 = *(void **)&v25[v26];
  objc_msgSend(v37, "setUserInteractionEnabled:", 1);
  v38 = v37;
  objc_msgSend(v25, "bounds");
  objc_msgSend(v38, "setFrame:");

  v39 = *(void **)&v25[v26];
  objc_msgSend(v39, "setAutoresizingMask:", 18);
  objc_msgSend(v39, "setPreservesSuperviewLayoutMargins:", 0);
  objc_msgSend(v39, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v39, "setDebugBoundingBoxesEnabled:", 0);
  objc_msgSend(v39, "setDirectionalLayoutMargins:", 12.0, 12.0, 8.0, 16.0);
  v40 = objc_msgSend(v25, "contentView");
  objc_msgSend(v40, "addSubview:", v39);

  v41 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v25, "toggleExpandState");
  v42 = objc_msgSend(objc_allocWithZone((Class)UILongPressGestureRecognizer), "initWithTarget:action:", v25, "handleLongPressGesture:");
  objc_msgSend(v42, "setMinimumPressDuration:", 0.2);
  objc_msgSend(v25, "addGestureRecognizer:", v41);
  objc_msgSend(v25, "addGestureRecognizer:", v42);
  v43 = swift_allocObject(v28, 48, 7);
  *(_OWORD *)(v43 + 16) = xmmword_10051FF90;
  *(_QWORD *)(v43 + 32) = v41;
  *(_QWORD *)(v43 + 40) = v42;
  v89 = v43;
  specialized Array._endMutation()(v43);
  v44 = *(_QWORD *)&v25[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_collapseGestureRecognizers];
  *(_QWORD *)&v25[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_collapseGestureRecognizers] = v89;
  v84 = v41;
  v83 = v42;
  swift_bridgeObjectRelease(v44);
  v45 = *(void **)&v25[v30];
  v46 = swift_allocObject(v28, 48, 7);
  *(_OWORD *)(v46 + 16) = xmmword_10051FF90;
  v47 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_labelView;
  v48 = *(void **)&v25[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_labelView];
  *(_QWORD *)(v46 + 32) = v48;
  v49 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migrateButton;
  v50 = *(void **)&v25[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migrateButton];
  *(_QWORD *)(v46 + 40) = v50;
  v89 = v46;
  specialized Array._endMutation()(v46);
  v51 = v45;
  v52 = v48;
  v53 = v50;
  v54 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v89);
  objc_msgSend(v51, "setArrangedSubviews:", v54);

  v55 = *(void **)&v25[v30];
  objc_msgSend(v55, "setUserInteractionEnabled:", 1);
  objc_msgSend(v55, "setDebugBoundingBoxesEnabled:", 0);
  v56 = *(void **)&v25[v47];
  v57 = (void *)objc_opt_self(UIColor);
  v58 = v56;
  v59 = objc_msgSend(v57, "labelColor");
  objc_msgSend(v58, "setTextColor:", v59);

  v60 = *(void **)&v25[v47];
  sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v61 = v60;
  v62 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(UIFontTextStyleTitle2, *(_QWORD *)&UIFontWeightBold, 0, 0);
  objc_msgSend(v61, "setFont:", v62);

  v63 = *(void **)&v25[v47];
  LODWORD(v64) = 1144750080;
  objc_msgSend(v63, "setLayoutSize:withContentPriority:", NUIContainerViewSizeUnbounded[0], NUIContainerViewSizeUnbounded[1], v64);
  objc_msgSend(v63, "setAdjustsFontForContentSizeCategory:", 1);
  v65 = *(char **)&v25[v86];
  v66 = NUIContainerViewSizeUseDefault[0];
  v67 = NUIContainerViewSizeUseDefault[1];
  LODWORD(v68) = 1148846080;
  objc_msgSend(v65, "setLayoutSize:withContentPriority:", NUIContainerViewSizeUseDefault[0], v67, v68);
  result = *(char **)&v65[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_gridView];
  if (result)
  {
    objc_msgSend(result, "setMinimumLayoutSize:", 22.0, 32.0);
    v70 = v65;
    v71 = objc_msgSend(v57, "tintColor");
    sub_100009A80(v71);

    v72 = *(void **)&v25[v49];
    type metadata accessor for UILayoutPriority(0);
    v74 = v73;
    v87 = 1065353216;
    v88 = 1148846080;
    v75 = sub_1000277FC();
    static _UIKitNumericRawRepresentable.- infix(_:_:)(&v88, &v87, v74, v75);
    LODWORD(v76) = v89;
    objc_msgSend(v72, "setLayoutSize:withContentPriority:", v66, v67, v76);
    objc_msgSend(v72, "addTarget:action:forControlEvents:", v25, "migrateButtonAction:", 0x2000);
    objc_msgSend(v72, "setHidden:", 1);
    v77 = sub_10002A750(&qword_1006415F0);
    v78 = swift_allocObject(v77, 48, 7);
    *(_OWORD *)(v78 + 16) = xmmword_100520250;
    *(_QWORD *)(v78 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
    *(_QWORD *)(v78 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
    v79 = v25;
    v80 = UIView.registerForTraitChanges<A>(_:handler:)(v78, sub_10026023C, 0, ObjectType);
    swift_unknownObjectRelease(v80);

    v81 = swift_bridgeObjectRelease(v78);
    (*(void (**)(uint64_t))((swift_isaMask & *(_QWORD *)v79) + 0x250))(v81);
    v82 = *(id *)&v25[v86];
    objc_msgSend(v82, "setIsAccessibilityElement:", 1);

    return v79;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10001A818()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  unsigned int v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unsigned __int8 v8;
  int v9;
  char v10;
  uint64_t v11;
  unsigned int v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  Class isa;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  id v37;
  unsigned __int8 *v38;
  id v39;
  _BOOL4 v40;
  unsigned __int8 *v41;

  v1 = v0;
  if ((objc_msgSend(v0, "isEditing") & 1) != 0)
  {
    v2 = 0x8000;
    goto LABEL_14;
  }
  v3 = objc_msgSend(v0, "view");
  if (v3)
  {
    v4 = v3;
    v5 = type metadata accessor for TTRIAccountsListsTreeView(0);
    v6 = swift_dynamicCastClass(v4, v5);
    if (v6)
    {
      v7 = *(void **)(v6 + qword_10065D8D8);
      if (v7)
      {
        v8 = objc_msgSend(v7, "isEditing");

        v9 = v1[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_isInExpandedSplitViewSnapshot];
        if ((v8 & 1) != 0)
        {
          if (v9 == 2)
            v2 = sub_10000FEC4(v1) & 1;
          else
            v2 = v9 & 1;
        }
        else
        {
          if (v9 == 2)
            v10 = sub_10000FEC4(v1);
          else
            v10 = v9 & 1;
          v11 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_presenter]
                                      + 184)
                          + direct field offset for TTRAccountsListsViewModel.accountsCapabilities);
          v2 = v10 & 1 | (((*(_QWORD *)TTRAccountsListsViewModel.AccountsCapabilities.supportsTemplates.unsafeMutableAddressor() & ~v11) == 0) << 8) | 0x4000;
        }
LABEL_14:
        v12 = *(unsigned __int16 *)&v1[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_currentBarButtonItemConfiguration];
        if ((~v12 & 0xFEFE) != 0)
        {
          if (v12 >> 14)
          {
            if (v12 >> 14 == 1)
            {
              if ((v2 & 0xC000) == 0x4000
                && (v2 & 1) != ((v12 & 1) == 0)
                && ((((v12 & 0x100) == 0) ^ ((unsigned __int16)(v2 & 0x100) >> 8)) & 1) != 0)
              {
                goto LABEL_33;
              }
            }
            else if (v2 == 0x8000)
            {
              goto LABEL_33;
            }
          }
          else
          {
            v40 = (v12 & 1) == 0;
            if ((v2 & 0xC000) == 0 && ((v2 ^ v40) & 1) != 0)
              goto LABEL_33;
          }
        }
        *(_WORD *)&v1[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_currentBarButtonItemConfiguration] = v2;
        if (v2 >> 14 == 1)
        {
          v13 = objc_msgSend(v1, "navigationItem");
          if ((v2 & 0x100) != 0)
            v14 = sub_1000063E0();
          else
            v14 = sub_100008B94();
        }
        else
        {
          v13 = objc_msgSend(v1, "navigationItem");
          v14 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 0, v1, "didTapDone:");
        }
        v15 = v14;
        objc_msgSend(v13, "setRightBarButtonItem:", v14);

        v16 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 5, 0, 0);
        if (v2 >> 14 >= 2)
        {
          v23 = sub_10002A750((uint64_t *)&unk_1006415A0);
          v18 = swift_allocObject(v23, 56, 7);
          *(_OWORD *)(v18 + 16) = xmmword_100521130;
          *(_QWORD *)(v18 + 32) = sub_10001AFC0();
          *(_QWORD *)(v18 + 40) = v16;
          v24 = v16;
        }
        else
        {
          v17 = sub_10002A750((uint64_t *)&unk_1006415A0);
          if ((v2 & 1) != 0)
          {
            v18 = swift_allocObject(v17, 48, 7);
            *(_OWORD *)(v18 + 16) = xmmword_10051FF90;
            *(_QWORD *)(v18 + 32) = v16;
            v26 = v16;
            v25 = sub_10001AD68();
            *(_QWORD *)(v18 + 40) = v25;
            goto LABEL_32;
          }
          v18 = swift_allocObject(v17, 56, 7);
          *(_OWORD *)(v18 + 16) = xmmword_100521130;
          v20 = sub_10001AF10(v18, v19);
          v21 = *(id *)(v20 + 16);
          swift_release(v20);
          *(_QWORD *)(v18 + 32) = v21;
          *(_QWORD *)(v18 + 40) = v16;
          v22 = v16;
        }
        v25 = sub_10001AD68();
        *(_QWORD *)(v18 + 48) = v25;
LABEL_32:
        specialized Array._endMutation()(v25);
        v27 = v18;
        sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v27);
        objc_msgSend(v1, "setToolbarItems:", isa);

LABEL_33:
        v29 = sub_10001AD68();
        v30 = OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel;
        objc_msgSend(v29, "setEnabled:", (*(_QWORD *)TTRAccountsListsViewModel.AccountsCapabilities.supportsAddList.unsafeMutableAddressor() & ~*(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel] + direct field offset for TTRAccountsListsViewModel.accountsCapabilities)) == 0);

        v31 = sub_10001AFC0();
        objc_msgSend(v31, "setEnabled:", (*(_QWORD *)TTRAccountsListsViewModel.AccountsCapabilities.supportsGroups.unsafeMutableAddressor() & ~*(_QWORD *)(*(_QWORD *)&v1[v30] + direct field offset for TTRAccountsListsViewModel.accountsCapabilities)) == 0);

        v34 = sub_10001AF10(v32, v33);
        v35 = *(id *)(v34 + 24);
        v36 = swift_release(v34);
        objc_msgSend(v35, "setEnabled:", (*(_QWORD *)TTRAccountsListsViewModel.AccountsCapabilities.supportsAddReminder.unsafeMutableAddressor(v36) & ~*(_QWORD *)(*(_QWORD *)&v1[v30] + direct field offset for TTRAccountsListsViewModel.accountsCapabilities)) == 0);

        v37 = sub_10001AD68();
        v38 = v1;
        sub_10001ADF4(v37, (uint64_t)"didTapNewList:", v38, (uint64_t)v38, (uint64_t (*)(uint64_t))sub_1000152D0);

        v39 = sub_10001AFC0();
        v41 = v38;
        sub_10001ADF4(v39, (uint64_t)"didTapNewGroup:", v41, (uint64_t)v41, (uint64_t (*)(uint64_t))sub_10032F770);

        return;
      }
      __break(1u);
    }

  }
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
  __break(1u);
}

id sub_10001AD68()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController____lazy_storage___addListButton;
  v2 = *(void **)&v0[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController____lazy_storage___addListButton];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController____lazy_storage___addListButton];
  }
  else
  {
    v4 = sub_100013F3C(v0, 0x7473694C20646441, (void *)0xE800000000000000, 0xD00000000000003DLL, (void *)0x8000000100560C90);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_10001ADF4(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  if (objc_msgSend(a1, "isEnabled"))
  {
    v9 = objc_msgSend(a3, "toolbarItems");
    if (v9)
    {
      v10 = v9;
      v11 = sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
      v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

      LOBYTE(v10) = sub_10001B050((uint64_t)a1, v12);
      v13 = swift_bridgeObjectRelease(v12);
      if ((v10 & 1) != 0)
      {
        v15 = (id)a5(v13);
        objc_msgSend(a1, "setMenu:", v15);
        if (v15)
          v14 = 0;
        else
          v14 = a2;
        objc_msgSend(a1, "setAction:", v14);

      }
    }
  }
}

uint64_t sub_10001AF10(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[4];

  v3 = OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController____lazy_storage___addReminderButton;
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController____lazy_storage___addReminderButton];
  if (v4)
  {
    v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController____lazy_storage___addReminderButton];
  }
  else
  {
    v6 = v2;
    v11[3] = swift_getObjectType(v2, a2);
    v11[0] = v2;
    v7 = type metadata accessor for TTRIAddReminderBarButtonModule();
    swift_allocObject(v7, 56, 7);
    v8 = v2;
    v5 = sub_10000C950(v11, (uint64_t)"didTapNewReminder:");
    v9 = *(_QWORD *)&v6[v3];
    *(_QWORD *)&v6[v3] = v5;
    swift_retain(v5);
    swift_release(v9);
    v4 = 0;
  }
  swift_retain(v4);
  return v5;
}

id sub_10001AFC0()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController____lazy_storage___addGroupButton;
  v2 = *(void **)&v0[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController____lazy_storage___addGroupButton];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController____lazy_storage___addGroupButton];
  }
  else
  {
    v4 = sub_100013F3C(v0, 0x756F724720646441, (void *)0xE900000000000070, 0xD00000000000003ELL, (void *)0x8000000100560C50);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_10001B050(uint64_t a1, uint64_t a2)
{
  return sub_1000820BC(a1, a2, (uint64_t)&unk_100640E70, UIBarButtonItem_ptr);
}

uint64_t type metadata accessor for TTRIAccountsListsBaseCell()
{
  return objc_opt_self(_TtC9Reminders25TTRIAccountsListsBaseCell);
}

uint64_t sub_10001B258(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_10001B278()
{
  uint64_t v0;

  return sub_10001B2A0(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_10001B280()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10001B2A0(uint64_t (*a1)(void))
{
  return a1();
}

void sub_10001B2C0()
{
  uint64_t v0;

  sub_10001B2C8(*(char **)(v0 + 16), *(uint64_t **)(v0 + 24));
}

void sub_10001B2C8(char *a1, uint64_t *a2)
{
  id v4;
  uint64_t v5;
  Class isa;
  id v7;

  v4 = objc_msgSend(a1, "containerView");
  v5 = *a2;
  swift_bridgeObjectRetain(v5);
  sub_10002A750(&qword_100650720);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  objc_msgSend(v4, "setArrangedSubviewRows:", isa);

  v7 = objc_msgSend(a1, "containerView");
  objc_msgSend(v7, "setAlignment:forView:inAxis:", 1, *(_QWORD *)&a1[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_iconContainerView], 0);

}

uint64_t sub_10001B3A0()
{
  uint64_t v0;

  return sub_10001B3B0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_BYTE *)(v0 + 25));
}

uint64_t sub_10001B3B0(uint64_t a1, char a2, char a3)
{
  void *v6;
  uint64_t v7;
  uint64_t result;
  void *v9;
  void *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  Class isa;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  Class v27;
  id v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;

  v6 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_grid);
  if ((uint64_t)objc_msgSend(v6, "numberOfRows") >= 1)
  {
    do
      objc_msgSend(v6, "removeRowAtIndex:", 0);
    while ((uint64_t)objc_msgSend(v6, "numberOfRows") > 0);
  }
  v7 = OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_secondRowStackView;
  if ((objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_secondRowStackView), "isHidden") & 1) != 0)
  {
LABEL_17:
    v16 = sub_10002A750((uint64_t *)&unk_1006415A0);
    result = swift_allocObject(v16, 48, 7);
    *(_OWORD *)(result + 16) = xmmword_10051FF90;
    if ((a3 & 1) != 0)
    {
      v17 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_badgeView);
      if (!v17)
      {
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      *(_QWORD *)(result + 32) = v17;
      v18 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_countLabel);
      if (v18)
      {
LABEL_23:
        *(_QWORD *)(result + 40) = v18;
        v32 = result;
        specialized Array._endMutation()(result);
        sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
        v19 = v17;
        v20 = v18;
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v32);
        v22 = objc_msgSend(v6, "addRowWithArrangedSubviews:", isa);

        objc_msgSend(v22, "setAlignment:", 3);
        swift_unknownObjectRelease(v22);
        result = (uint64_t)objc_msgSend(*(id *)(a1 + v7), "isHidden");
        if ((result & 1) == 0)
        {
          v23 = sub_10002A750((uint64_t *)&unk_1006415A0);
          v24 = swift_allocObject(v23, 48, 7);
          *(_OWORD *)(v24 + 16) = xmmword_10051FF90;
          v25 = *(void **)(a1 + v7);
          *(_QWORD *)(v24 + 32) = v25;
          *(_QWORD *)(v24 + 40) = v25;
          v33 = v24;
          specialized Array._endMutation()(v24);
          v26 = v25;
          v27 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v33);
          v28 = objc_msgSend(v6, "addRowWithArrangedSubviews:", v27);

          objc_msgSend(v6, "setAlignment:forView:inAxis:", 0, *(_QWORD *)(a1 + v7), 0);
          objc_msgSend(v28, "setAlignment:", 3);
          result = swift_unknownObjectRelease(v28);
        }
        v29 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_countLabel);
        if (v29)
          return (uint64_t)objc_msgSend(v6, "setAlignment:forView:inAxis:", 4, v29, 0);
        __break(1u);
        goto LABEL_28;
      }
      __break(1u);
    }
    v17 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_titleLabel);
    if (!v17)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    *(_QWORD *)(result + 32) = v17;
    v18 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_countLabel);
    if (!v18)
    {
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    goto LABEL_23;
  }
  if ((a2 & 1) != 0)
  {
    result = sub_10002A750((uint64_t *)&unk_1006415A0);
    if ((a3 & 1) != 0)
    {
      result = swift_allocObject(result, 48, 7);
      *(_OWORD *)(result + 16) = xmmword_10051FF90;
      v9 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_titleLabel);
      if (!v9)
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      *(_QWORD *)(result + 32) = v9;
      v10 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_stackedAvatarsView);
      if (!v10)
      {
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      *(_QWORD *)(result + 40) = v10;
      v30 = (_QWORD *)result;
      specialized Array._endMutation()(result);
      v11 = v30;
      v12 = v9;
      goto LABEL_14;
    }
  }
  else
  {
    if ((a3 & 1) == 0)
    {
      v11 = _swiftEmptyArrayStorage;
      goto LABEL_16;
    }
    v13 = sub_10002A750((uint64_t *)&unk_1006415A0);
    result = swift_allocObject(v13, 40, 7);
    *(_OWORD *)(result + 16) = xmmword_100521140;
    v10 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_titleLabel);
    if (v10)
      goto LABEL_13;
    __break(1u);
  }
  result = swift_allocObject(result, 40, 7);
  *(_OWORD *)(result + 16) = xmmword_100521140;
  v10 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_stackedAvatarsView);
  if (v10)
  {
LABEL_13:
    *(_QWORD *)(result + 32) = v10;
    v31 = (_QWORD *)result;
    specialized Array._endMutation()(result);
    v11 = v31;
LABEL_14:
    v14 = v10;
LABEL_16:
    v15 = *(id *)(a1 + v7);
    NUIContainerView.setArrangedSubviewsIfChanged(_:)((Swift::OpaquePointer)v11);

    swift_bridgeObjectRelease(v11);
    goto LABEL_17;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_10001B76C(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_class *ObjectType;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t ObjCClassFromMetadata;
  id v11;
  NSString v12;
  unsigned __int8 *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  unsigned __int8 *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  NSString v26;
  unsigned __int8 *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  NSString v33;
  unsigned __int8 *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  NSString v40;
  unsigned __int8 *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  NSString v47;
  unsigned __int8 *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  NSString v54;
  unsigned __int8 *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  NSString v61;
  unsigned __int8 *v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  NSString v68;
  unsigned __int8 *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  NSString v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  void *v83;
  uint64_t (*v84)(void);
  id v85;
  double v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  unsigned __int8 *v104;
  uint64_t v105;
  uint64_t v106;
  unsigned __int8 *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  id v116;
  uint64_t v117;
  id v118;
  void *v119;
  id v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  uint64_t v125;
  id v126;
  void *v127;
  id v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  uint64_t v133;
  void *v134;
  id v135;
  uint64_t v136;
  void *v137;
  id v138;
  uint64_t v139;
  void *v140;
  id v141;
  uint64_t v142;
  void *v143;
  id v144;
  uint64_t v145;
  void *v146;
  id v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  uint64_t v153;
  uint64_t v154;
  id v155;
  NSString v156;
  id v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  uint64_t v163;
  uint64_t v164;
  id v165;
  NSString v166;
  id v167;
  uint64_t v168;
  void *v169;
  id v170;
  id v171;
  uint64_t v172;
  uint64_t v173;
  int v174;
  char v175;
  id v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void *v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t *v192;
  id v193;
  uint64_t v194;
  void *v195;
  id v196;
  uint64_t v197;
  void *v198;
  void *v199;
  uint64_t Strong;
  id v201;
  BOOL v202;
  void *v203;
  void *v204;
  void *v205;
  id v206;
  void *v207;
  id v208;
  id v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t result;
  objc_class *v214;
  _QWORD v215[3];
  uint64_t v216;
  void *v217;
  objc_super v218;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v218.receiver = v2;
  v218.super_class = ObjectType;
  objc_msgSendSuper2(&v218, "viewDidLoad");
  v4 = (unsigned __int8 *)objc_msgSend(v2, "view");
  if (!v4)
    goto LABEL_122;
  v5 = v4;
  v6 = type metadata accessor for TTRIAccountsListsTreeView(0);
  v7 = swift_dynamicCastClass(v5, v6);
  if (!v7)
    goto LABEL_119;
  v8 = *(void **)(v7 + qword_10065D8D8);
  if (!v8)
  {
    __break(1u);
    goto LABEL_92;
  }
  v9 = type metadata accessor for TTRIAccountsListsViewListCell(0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v9);
  v11 = v8;
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v11, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v12);

  v13 = (unsigned __int8 *)objc_msgSend(v2, "view");
  if (!v13)
    goto LABEL_122;
  v5 = v13;
  v14 = swift_dynamicCastClass(v13, v6);
  if (!v14)
  {
LABEL_119:

    goto LABEL_122;
  }
  v15 = *(void **)(v14 + qword_10065D8D8);
  if (!v15)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  v16 = type metadata accessor for TTRIAccountsListsViewPinnedListsCell();
  v17 = swift_getObjCClassFromMetadata(v16);
  v18 = v15;
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "registerClass:forCellReuseIdentifier:", v17, v19);

  v20 = (unsigned __int8 *)objc_msgSend(v2, "view");
  if (!v20)
    goto LABEL_122;
  v5 = v20;
  v21 = swift_dynamicCastClass(v20, v6);
  if (!v21)
    goto LABEL_119;
  v22 = *(void **)(v21 + qword_10065D8D8);
  if (!v22)
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  v23 = type metadata accessor for TTRIAccountListsViewGroupCell();
  v24 = swift_getObjCClassFromMetadata(v23);
  v25 = v22;
  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v25, "registerClass:forCellReuseIdentifier:", v24, v26);

  v27 = (unsigned __int8 *)objc_msgSend(v2, "view");
  if (!v27)
    goto LABEL_122;
  v5 = v27;
  v28 = swift_dynamicCastClass(v27, v6);
  if (!v28)
    goto LABEL_119;
  v29 = *(void **)(v28 + qword_10065D8D8);
  if (!v29)
  {
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  v30 = type metadata accessor for TTRIRemindersListTipCell();
  v31 = swift_getObjCClassFromMetadata(v30);
  v32 = v29;
  v33 = String._bridgeToObjectiveC()();
  objc_msgSend(v32, "registerClass:forCellReuseIdentifier:", v31, v33);

  v34 = (unsigned __int8 *)objc_msgSend(v2, "view");
  if (!v34)
    goto LABEL_122;
  v5 = v34;
  v35 = swift_dynamicCastClass(v34, v6);
  if (!v35)
    goto LABEL_119;
  v36 = *(void **)(v35 + qword_10065D8D8);
  if (!v36)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  v37 = type metadata accessor for TTRIHashtagCollectionCell(0);
  v38 = swift_getObjCClassFromMetadata(v37);
  v39 = v36;
  v40 = String._bridgeToObjectiveC()();
  objc_msgSend(v39, "registerClass:forCellReuseIdentifier:", v38, v40);

  v41 = (unsigned __int8 *)objc_msgSend(v2, "view");
  if (!v41)
    goto LABEL_122;
  v5 = v41;
  v42 = swift_dynamicCastClass(v41, v6);
  if (!v42)
    goto LABEL_119;
  v43 = *(void **)(v42 + qword_10065D8D8);
  if (!v43)
  {
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  v44 = type metadata accessor for TTRIInlinePermissionHeaderViewCell(0);
  v45 = swift_getObjCClassFromMetadata(v44);
  v46 = v43;
  v47 = String._bridgeToObjectiveC()();
  objc_msgSend(v46, "registerClass:forCellReuseIdentifier:", v45, v47);

  v48 = (unsigned __int8 *)objc_msgSend(v2, "view");
  if (!v48)
    goto LABEL_122;
  v5 = v48;
  v49 = swift_dynamicCastClass(v48, v6);
  if (!v49)
    goto LABEL_119;
  v50 = *(void **)(v49 + qword_10065D8D8);
  if (!v50)
  {
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  v51 = type metadata accessor for TTRIInlinePermissionPrimaryButtonViewCell(0);
  v52 = swift_getObjCClassFromMetadata(v51);
  v53 = v50;
  v54 = String._bridgeToObjectiveC()();
  objc_msgSend(v53, "registerClass:forCellReuseIdentifier:", v52, v54);

  v55 = (unsigned __int8 *)objc_msgSend(v2, "view");
  if (!v55)
    goto LABEL_122;
  v5 = v55;
  v56 = swift_dynamicCastClass(v55, v6);
  if (!v56)
    goto LABEL_119;
  v57 = *(void **)(v56 + qword_10065D8D8);
  if (!v57)
  {
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  v58 = sub_10002A750(&qword_100640F70);
  v59 = swift_getObjCClassFromMetadata(v58);
  v60 = v57;
  v61 = String._bridgeToObjectiveC()();
  objc_msgSend(v60, "registerClass:forCellReuseIdentifier:", v59, v61);

  v62 = (unsigned __int8 *)objc_msgSend(v2, "view");
  if (!v62)
    goto LABEL_122;
  v5 = v62;
  v63 = swift_dynamicCastClass(v62, v6);
  if (!v63)
    goto LABEL_119;
  v64 = *(void **)(v63 + qword_10065D8D8);
  if (!v64)
  {
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
    goto LABEL_104;
  }
  v65 = type metadata accessor for TTRIAccountsListsRecentlyDeletedCell();
  v66 = swift_getObjCClassFromMetadata(v65);
  v67 = v64;
  v68 = String._bridgeToObjectiveC()();
  objc_msgSend(v67, "registerClass:forCellReuseIdentifier:", v66, v68);

  v69 = (unsigned __int8 *)objc_msgSend(v2, "view");
  if (!v69)
    goto LABEL_122;
  v5 = v69;
  v70 = swift_dynamicCastClass(v69, v6);
  if (!v70)
    goto LABEL_119;
  v71 = (void *)v70;
  v72 = *(_QWORD *)(TTRAccesibility.AccountsList.ID.AccountsListTable.unsafeMutableAddressor() + 8);
  swift_bridgeObjectRetain(v72);
  v73 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v72);
  objc_msgSend(v71, "setAccessibilityIdentifier:", v73);

  v74 = objc_msgSend(v2, "view");
  if (!v74)
    goto LABEL_122;
  v75 = v74;
  v76 = swift_dynamicCastClass(v74, v6);
  if (!v76)
    goto LABEL_121;
  v77 = v76;
  v214 = ObjectType;
  v78 = sub_10002A750(&qword_100640F78);
  swift_allocObject(v78, 192, 7);
  v5 = v2;
  v79 = sub_100010678((uint64_t)v5);

  v80 = *(char **)(v77 + qword_10065D8E0);
  if (!v80)
    goto LABEL_100;
  v81 = *(_QWORD *)&v80[qword_100645F10];
  *(_QWORD *)&v80[qword_100645F10] = v79;
  v82 = v80;
  swift_retain(v79);
  swift_release(v81);
  v83 = *(void **)&v82[qword_100645F00];
  v84 = (uint64_t (*)(void))v79[2];
  swift_retain(v79);
  v85 = v83;
  LOBYTE(v81) = v84();
  *(_QWORD *)&v86 = swift_release(v79).n128_u64[0];
  if ((v81 & 1) != 0)
    v87 = v82;
  else
    v87 = 0;
  objc_msgSend(v85, "setDataSource:", v87, v86);

  v88 = &v82[qword_100645F30];
  v89 = *(_QWORD *)&v82[qword_100645F30];
  v90 = *(_QWORD *)&v82[qword_100645F30 + 8];
  v91 = *(_QWORD *)&v82[qword_100645F30 + 16];
  *(_QWORD *)v88 = 0;
  *((_QWORD *)v88 + 1) = 0;
  *((_QWORD *)v88 + 2) = 0;
  v88[24] = 0;
  sub_1000072F0(v89, v90, v91);

  v92 = objc_msgSend(v5, "view", swift_release(v79).n128_f64[0]);
  if (!v92)
    goto LABEL_122;
  v93 = v92;
  v94 = swift_dynamicCastClass(v92, v6);
  if (!v94)
    goto LABEL_120;
  v95 = v94;
  v96 = sub_10002A750(&qword_100640F80);
  v97 = (_QWORD *)swift_allocObject(v96, 48, 7);
  v98 = swift_allocObject(&unk_1005ED1C8, 24, 7);
  swift_unknownObjectWeakInit(v98 + 16, v5);
  v97[2] = sub_100076F28;
  v97[3] = v98;
  v99 = swift_allocObject(&unk_1005ED1C8, 24, 7);
  swift_unknownObjectWeakInit(v99 + 16, v5);
  v97[4] = sub_100076F30;
  v97[5] = v99;
  v100 = *(_QWORD *)(v95 + qword_10065D8E0);
  if (!v100)
    goto LABEL_101;
  v101 = *(_QWORD *)(v100 + qword_100645F18);
  *(_QWORD *)(v100 + qword_100645F18) = v97;

  v102 = objc_msgSend(v5, "view", swift_release(v101).n128_f64[0]);
  if (!v102)
    goto LABEL_122;
  v75 = v102;
  if (!swift_dynamicCastClass(v102, v6))
    goto LABEL_121;
  v103 = sub_10002A750(&qword_100640F88);
  swift_allocObject(v103, 616, 7);
  v104 = v5;
  v105 = sub_100016A78((uint64_t)v104);
  v106 = sub_10002A750(&qword_100640F90);
  swift_allocObject(v106, 80, 7);
  v107 = v104;
  swift_retain(v105);
  v108 = sub_10000A6D0((uint64_t)v107);

  v109 = *(_QWORD *)(v105 + 592);
  *(_QWORD *)(v105 + 592) = v108;
  swift_release(v109);
  v110 = sub_10002A750(&qword_100640F98);
  swift_allocObject(v110, 80, 7);
  v111 = sub_10000A528((uint64_t)v107);
  swift_release(v105);

  v112 = *(_QWORD *)(v105 + 600);
  *(_QWORD *)(v105 + 600) = v111;
  swift_release(v112);
  sub_1002C02A8(v105);

  v113 = objc_msgSend(v107, "view");
  if (!v113)
    goto LABEL_122;
  v75 = v113;
  v114 = swift_dynamicCastClass(v113, v6);
  if (!v114)
    goto LABEL_121;
  v115 = v114;
  v116 = objc_allocWithZone((Class)sub_10002A750(&qword_100640FA0));
  v5 = v107;
  v118 = sub_10000DBB0((uint64_t)v5, v117);

  v119 = *(void **)(v115 + qword_10065D8E0);
  if (!v119)
    goto LABEL_102;
  v120 = v119;
  sub_10002EAD4(v118);

  v121 = objc_msgSend(v5, "view");
  if (!v121)
    goto LABEL_122;
  v75 = v121;
  v122 = swift_dynamicCastClass(v121, v6);
  if (!v122)
    goto LABEL_121;
  v123 = v122;
  v124 = objc_allocWithZone((Class)sub_10002A750(&qword_100640FA8));
  v5 = v5;
  v126 = sub_1000100C8((uint64_t)v5, v125);

  v127 = *(void **)(v123 + qword_10065D8E0);
  if (!v127)
    goto LABEL_103;
  v128 = v127;
  sub_10002EAB8(v126);

  v129 = objc_msgSend(v5, "view");
  if (!v129)
    goto LABEL_122;
  v93 = v129;
  v130 = swift_dynamicCastClass(v129, v6);
  if (!v130)
    goto LABEL_120;
  v131 = v130 + qword_10064DEC0;
  *(_QWORD *)(v131 + 8) = &off_1005ED008;
  swift_unknownObjectWeakAssign(v131, v5);

  v132 = objc_msgSend(v5, "view");
  if (!v132)
    goto LABEL_122;
  v93 = v132;
  v133 = swift_dynamicCastClass(v132, v6);
  if (!v133)
  {
LABEL_120:

    goto LABEL_122;
  }
  v134 = *(void **)(v133 + qword_10065D8D8);
  if (!v134)
  {
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }
  objc_msgSend(v134, "setDragInteractionEnabled:", 1);

  v135 = objc_msgSend(v5, "view");
  if (!v135)
    goto LABEL_122;
  v93 = v135;
  v136 = swift_dynamicCastClass(v135, v6);
  if (!v136)
    goto LABEL_120;
  v137 = *(void **)(v136 + qword_10065D8D8);
  if (!v137)
  {
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }
  objc_msgSend(v137, "setRowHeight:", UITableViewAutomaticDimension);

  v138 = objc_msgSend(v5, "view");
  if (!v138)
    goto LABEL_122;
  v93 = v138;
  v139 = swift_dynamicCastClass(v138, v6);
  if (!v139)
    goto LABEL_120;
  v140 = *(void **)(v139 + qword_10065D8D8);
  if (!v140)
  {
LABEL_106:
    __break(1u);
    goto LABEL_107;
  }
  objc_msgSend(v140, "setEstimatedRowHeight:", 56.0);

  v141 = objc_msgSend(v5, "view");
  if (!v141)
    goto LABEL_122;
  v93 = v141;
  v142 = swift_dynamicCastClass(v141, v6);
  if (!v142)
    goto LABEL_120;
  v143 = *(void **)(v142 + qword_10065D8D8);
  if (!v143)
  {
LABEL_107:
    __break(1u);
    goto LABEL_108;
  }
  objc_msgSend(v143, "_setHeaderAndFooterViewsFloat:", 0);

  v144 = objc_msgSend(v5, "view");
  if (!v144)
    goto LABEL_122;
  v93 = v144;
  v145 = swift_dynamicCastClass(v144, v6);
  if (!v145)
    goto LABEL_120;
  v146 = *(void **)(v145 + qword_10065D8D8);
  if (!v146)
  {
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
    goto LABEL_111;
  }
  objc_msgSend(v146, "setInsetsContentViewsToSafeArea:", 0);

  v147 = objc_msgSend(v5, "view");
  if (!v147)
    goto LABEL_122;
  v75 = v147;
  v148 = swift_dynamicCastClass(v147, v6);
  if (!v148)
    goto LABEL_121;
  v149 = v148;
  v150 = type metadata accessor for TTRIAccountsListsSectionHeaderView();
  static UITableViewHeaderFooterView.headerFooterViewIdentifier.getter();
  v152 = *(void **)(v149 + qword_10065D8D8);
  if (!v152)
    goto LABEL_109;
  v153 = v151;
  v154 = swift_getObjCClassFromMetadata(v150);
  v155 = v152;
  v156 = String._bridgeToObjectiveC()();
  objc_msgSend(v155, "registerClass:forHeaderFooterViewReuseIdentifier:", v154, v156);

  swift_bridgeObjectRelease(v153);
  v157 = objc_msgSend(v5, "view");
  if (!v157)
    goto LABEL_122;
  v75 = v157;
  v158 = swift_dynamicCastClass(v157, v6);
  if (!v158)
    goto LABEL_121;
  v159 = v158;
  v160 = type metadata accessor for TTRIAccountsListsTagsSectionHeaderView();
  static UITableViewHeaderFooterView.headerFooterViewIdentifier.getter();
  v162 = *(void **)(v159 + qword_10065D8D8);
  if (!v162)
    goto LABEL_110;
  v163 = v161;
  v164 = swift_getObjCClassFromMetadata(v160);
  v165 = v162;
  v166 = String._bridgeToObjectiveC()();
  objc_msgSend(v165, "registerClass:forHeaderFooterViewReuseIdentifier:", v164, v166);

  swift_bridgeObjectRelease(v163);
  v167 = objc_msgSend(v5, "view");
  if (!v167)
    goto LABEL_122;
  v93 = v167;
  v168 = swift_dynamicCastClass(v167, v6);
  if (!v168)
    goto LABEL_120;
  v169 = *(void **)(v168 + qword_10065D8D8);
  if (!v169)
  {
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
    goto LABEL_113;
  }
  v170 = v169;

  objc_msgSend(v170, "setKeyboardDismissMode:", 2);
  v171 = objc_msgSend(v5, "view");
  if (!v171)
    goto LABEL_122;
  v93 = v171;
  v172 = swift_dynamicCastClass(v171, v6);
  if (!v172)
    goto LABEL_120;
  v173 = v172;
  v174 = v5[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_isInExpandedSplitViewSnapshot];
  if (v174 == 2)
    v175 = sub_10000FEC4(v5);
  else
    v175 = v174 & 1;
  if (!*(_QWORD *)(v173 + qword_10065D8D8))
    goto LABEL_112;
  objc_msgSend(*(id *)(v173 + qword_10065D8D8), "setSelectionFollowsFocus:", v175 & 1);

  v176 = objc_msgSend(v5, "view");
  if (v176)
  {
    v75 = v176;
    v177 = swift_dynamicCastClass(v176, v6);
    if (v177)
    {
      v178 = v177;
      v179 = sub_10002A750(&qword_100640FB0);
      v180 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v179);
      v216 = type metadata accessor for TTRUserDefaults(0);
      v217 = &protocol witness table for TTRUserDefaults;
      v215[0] = v180;
      v181 = v180;
      v215[0] = TTRTreeViewCollapsedStatesUserDefaultsPersistence.__allocating_init(autosaveName:userDefaults:)(0x73746E756F636361, 0xED0000737473694CLL, v215);
      v182 = sub_10002A750(&qword_100640FB8);
      swift_allocObject(v182, 64, 7);
      v183 = sub_100023FEC((unint64_t *)&unk_100640FC0, &qword_100640FB0, (uint64_t)&protocol conformance descriptor for TTRTreeViewCollapsedStatesUserDefaultsPersistence<A>);
      v184 = TTRAnyTreeViewCollapsedStatesPersisting.init<A>(base:)(v215, v179, v183);
      v185 = *(char **)(v178 + qword_10065D8E0);
      if (v185)
      {
        v186 = v184;
        v187 = *(_QWORD *)&v185[qword_100645EF0];
        *(_QWORD *)&v185[qword_100645EF0] = v184;
        swift_retain(v184);
        v188 = v185;
        swift_release(v187);
        sub_1002BACC4();

        swift_release(v186);
        sub_10001A818();
        v190 = *(_QWORD *)&v5[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_presenter];
        v189 = *(_QWORD *)&v5[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_presenter + 8];
        v216 = swift_getObjectType(v190, v191);
        v217 = *(void **)(v189 + 8);
        v215[0] = v190;
        v192 = (uint64_t *)swift_unknownObjectRetain_n(v190, 2);
        v193 = sub_100008F00(v192);
        sub_100027F10(v215);
        v194 = OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchResultContainerViewController;
        v195 = *(void **)&v5[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchResultContainerViewController];
        *(_QWORD *)&v5[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchResultContainerViewController] = v193;

        v196 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TTRISearchController()), "initWithSearchResultsController:", *(_QWORD *)&v5[v194]);
        v197 = OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchController;
        v198 = *(void **)&v5[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchController];
        *(_QWORD *)&v5[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchController] = v196;

        v199 = *(void **)&v5[v197];
        if (v199)
        {
          Strong = swift_unknownObjectWeakLoadStrong(v190 + 32);
          v201 = v199;
          if (Strong)
          {
            v202 = sub_10001408C(Strong);
            swift_unknownObjectRelease(Strong);
          }
          else
          {
            v202 = 0;
          }
          objc_msgSend(v201, "setAutomaticallyShowsSearchResultsController:", v202);

          v203 = *(void **)&v5[v197];
          if (v203)
          {
            objc_msgSend(v203, "setSearchResultsUpdater:", v5);
            v204 = *(void **)&v5[v197];
            if (v204)
            {
              objc_msgSend(v204, "setDelegate:", v5);
              v205 = *(void **)&v5[v197];
              if (v205)
              {
                v206 = objc_msgSend(v205, "searchBar");
                objc_msgSend(v206, "setDelegate:", v5);

                v207 = *(void **)&v5[v197];
                if (v207)
                {
                  v208 = objc_msgSend(v207, "searchBar");
                  objc_msgSend(v208, "setLookToDictateEnabled:", 1);

                  v209 = objc_msgSend(v5, "navigationItem");
                  objc_msgSend(v209, "setSearchController:", *(_QWORD *)&v5[v197]);

                  sub_10000D2DC();
                  v210 = sub_10002A750(&qword_1006415F0);
                  v211 = swift_allocObject(v210, 48, 7);
                  *(_OWORD *)(v211 + 16) = xmmword_100520250;
                  *(_QWORD *)(v211 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
                  *(_QWORD *)(v211 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
                  v212 = UIViewController.registerForTraitChanges<A>(_:handler:)(v211, sub_100073028, 0, v214);
                  swift_unknownObjectRelease(v212);
                  return swift_bridgeObjectRelease(v211);
                }
                goto LABEL_118;
              }
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
              goto LABEL_119;
            }
LABEL_116:
            __break(1u);
            goto LABEL_117;
          }
LABEL_115:
          __break(1u);
          goto LABEL_116;
        }
LABEL_114:
        __break(1u);
        goto LABEL_115;
      }
LABEL_113:
      __break(1u);
      goto LABEL_114;
    }
LABEL_121:

  }
LABEL_122:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
  __break(1u);
  return result;
}

id sub_10001C934(void *a1, uint64_t *a2, _QWORD *a3, SEL *a4)
{
  uint64_t v4;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v7 = *a2;
  v8 = *(void **)(v4 + *a2);
  *(_QWORD *)(v4 + *a2) = a1;
  v9 = a1;

  v10 = *(_QWORD *)(v4 + v7);
  if (v10)
  {
    swift_unknownObjectWeakAssign(v10 + *a3, v4);
    v11 = *(_QWORD *)(v4 + v7);
  }
  else
  {
    v11 = 0;
  }
  return objc_msgSend(*(id *)(v4 + qword_100645F00), *a4, v11);
}

void sub_10001C9AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  int v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  unint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  void (*v70)(id *, unint64_t, uint64_t);
  _QWORD *v71;
  int v72;
  uint64_t v73;
  id v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  _QWORD *v91;
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  _QWORD *v96;
  _QWORD *v97;
  id v98;
  Class isa;
  id v100;
  _QWORD *v101;
  uint64_t v102;
  NSObject *v103;
  os_log_type_t v104;
  uint8_t *v105;
  _QWORD *v106;
  _QWORD *v107;
  id v108;
  Class v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  id *v128;
  uint64_t v129;
  int v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  int v135;
  uint64_t v136;
  void (*v137)(id *, unint64_t, uint64_t);
  void (*v138)(char *, uint64_t);
  unint64_t v139;
  id *v140;
  char *v141;
  uint64_t v142;
  int v143;
  uint64_t v144;
  char v145[8];
  uint64_t v146;
  uint64_t v147;
  _QWORD v148[3];
  char v149[8];
  _QWORD *v150;
  _QWORD *v151;

  v1 = type metadata accessor for REMAccountsListDataView.Model.GroupChild(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (id *)((char *)&v110 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for REMAccountsListDataView.Model.Group(0);
  v124 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v127 = (char *)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = type metadata accessor for CharacterSet(0);
  v126 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v141 = (char *)&v110 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for REMAccountsListDataView.Model.AccountChild(0);
  v129 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v128 = (id *)((char *)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v117 = type metadata accessor for REMAccountsListDataView.Model.Account(0);
  v118 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v116 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (id *)((char *)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(v0 + 16);
  *v14 = v15;
  (*(void (**)(id *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  v16 = v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)(v14);
  (*(void (**)(id *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) == 0)
  {
LABEL_57:
    __break(1u);
    swift_once(&qword_10063D568, sub_1000090BC);
    v20 = type metadata accessor for Logger(0);
    sub_100012DC4(v20, (uint64_t)qword_1006511E8);
    swift_errorRetain(v14);
    v21 = swift_errorRetain(v14);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(12, -1);
      v25 = swift_slowAlloc(32, -1);
      v146 = v25;
      *(_DWORD *)v24 = 136315138;
      swift_getErrorValue(v14, v149, v148);
      v26 = Error.localizedDescription.getter(v148[1], v148[2]);
      v28 = v27;
      v144 = sub_100027E40(v26, v27, &v146);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v144, v145, v24 + 4, v24 + 12);
      swift_bridgeObjectRelease(v28);
      swift_errorRelease(v14);
      swift_errorRelease(v14);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Unexpected error when submitting vocabulary: %s", v24, 0xCu);
      swift_arrayDestroy(v25, 1, &type metadata for Any[8]);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);

      swift_errorRelease(v14);
      return;
    }
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    goto LABEL_54;
  }
  v150 = _swiftEmptyArrayStorage;
  v151 = _swiftEmptyArrayStorage;
  v17 = objc_msgSend((id)objc_opt_self(INVocabulary), "sharedVocabulary");
  v18 = objc_msgSend(objc_allocWithZone((Class)REMStore), "init");
  type metadata accessor for REMAccountsListDataView(0);
  v19 = static REMAccountsListDataView.fetchAccounts(store:diffingAgainst:)(v18, 0);
  v29 = *(_QWORD *)(v19 + 16);
  v119 = v17;
  v111 = v18;
  v114 = v29;
  if (!v29)
  {
LABEL_42:
    swift_bridgeObjectRelease(v19);
    if (qword_10063D568 != -1)
      swift_once(&qword_10063D568, sub_1000090BC);
    v86 = type metadata accessor for Logger(0);
    v87 = sub_100012DC4(v86, (uint64_t)qword_1006511E8);
    v88 = Logger.logObject.getter(v87);
    v89 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v88, v89))
    {
      v90 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v90 = 0;
      _os_log_impl((void *)&_mh_execute_header, v88, v89, "Clearing vocab from Siri", v90, 2u);
      swift_slowDealloc(v90, -1, -1);
    }

    objc_msgSend(v17, "removeAllVocabularyStrings");
    v91 = v151;
    v92 = swift_bridgeObjectRetain(v151);
    v93 = Logger.logObject.getter(v92);
    v94 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v93, v94))
    {
      v95 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v95 = 134217984;
      v146 = v91[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v146, &v147, v95 + 4, v95 + 12);
      swift_bridgeObjectRelease(v91);
      _os_log_impl((void *)&_mh_execute_header, v93, v94, "Submitting vocab to Siri {groupNames.count: %ld}", v95, 0xCu);
      swift_slowDealloc(v95, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease(v91);
    }
    swift_beginAccess(&v151, &v146, 0, 0);
    v96 = v151;
    v97 = sub_10001D94C((uint64_t)v151);
    swift_bridgeObjectRelease(v96);
    v98 = objc_allocWithZone((Class)NSOrderedSet);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v97);
    v100 = objc_msgSend(v98, "initWithArray:", isa);

    objc_msgSend(v17, "setVocabularyStrings:ofType:", v100, 501);
    v101 = v150;
    v102 = swift_bridgeObjectRetain(v150);
    v103 = Logger.logObject.getter(v102);
    v104 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v103, v104))
    {
      v105 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v105 = 134217984;
      v17 = v119;
      v144 = v101[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v144, v145, v105 + 4, v105 + 12);
      swift_bridgeObjectRelease(v101);
      _os_log_impl((void *)&_mh_execute_header, v103, v104, "Submitting vocab to Siri {listNames.count: %ld}", v105, 0xCu);
      swift_slowDealloc(v105, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease(v101);
    }
    swift_beginAccess(&v150, &v144, 0, 0);
    v106 = v150;
    v107 = sub_10001D94C((uint64_t)v150);
    swift_bridgeObjectRelease(v106);
    v108 = objc_allocWithZone((Class)NSOrderedSet);
    v109 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v107);
    v22 = objc_msgSend(v108, "initWithArray:", v109);

    objc_msgSend(v17, "setVocabularyStrings:ofType:", v22, 500);
LABEL_54:

    return;
  }
  v30 = 0;
  v113 = v19 + ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80));
  v130 = enum case for REMAccountsListDataView.Model.AccountChild.list(_:);
  v123 = enum case for REMAccountsListDataView.Model.AccountChild.customSmartList(_:);
  v120 = enum case for REMAccountsListDataView.Model.AccountChild.group(_:);
  v143 = enum case for REMAccountsListDataView.Model.GroupChild.list(_:);
  v135 = enum case for REMAccountsListDataView.Model.GroupChild.customSmartList(_:);
  v136 = v1;
  v140 = v4;
  v121 = v5;
  v125 = v8;
  v31 = v129;
  v14 = v128;
  v112 = v19;
  while (1)
  {
    if (v30 >= *(_QWORD *)(v19 + 16))
      goto LABEL_56;
    v33 = *(_QWORD *)(v118 + 72);
    v115 = v30;
    v34 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v118 + 16))(v116, v113 + v33 * v30, v117);
    v35 = REMAccountsListDataView.Model.Account.children.getter(v34);
    v133 = *(_QWORD *)(v35 + 16);
    if (v133)
      break;
LABEL_7:
    swift_bridgeObjectRelease(v35);
    v32 = v115 + 1;
    (*(void (**)(char *, uint64_t))(v118 + 8))(v116, v117);
    v30 = v32;
    v19 = v112;
    if (v32 == v114)
      goto LABEL_42;
  }
  v36 = 0;
  v131 = v35 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
  v132 = v35;
  while (1)
  {
    if (v36 >= *(_QWORD *)(v35 + 16))
    {
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    v37 = *(_QWORD *)(v31 + 72);
    v134 = v36;
    (*(void (**)(id *, unint64_t, uint64_t))(v31 + 16))(v14, v131 + v37 * v36, v8);
    v38 = (*(uint64_t (**)(id *, uint64_t))(v31 + 88))(v14, v8);
    if (v38 == v130)
    {
      (*(void (**)(id *, uint64_t))(v31 + 96))(v14, v8);
      v39 = *v14;
      v40 = objc_msgSend(v39, "displayName");
      v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
      v43 = v42;

      v146 = v41;
      v147 = v43;
      v44 = v141;
      static CharacterSet.whitespacesAndNewlines.getter();
      sub_10001D7FC();
      v45 = StringProtocol.trimmingCharacters(in:)(v44, &type metadata for String);
      v47 = v46;
      (*(void (**)(char *, uint64_t))(v126 + 8))(v44, v142);
      swift_bridgeObjectRelease(v147);
      v48 = v150;
      if ((swift_isUniquelyReferenced_nonNull_native(v150) & 1) == 0)
        v48 = sub_10001D840(0, v48[2] + 1, 1, v48);
      v50 = v48[2];
      v49 = v48[3];
      if (v50 >= v49 >> 1)
        v48 = sub_10001D840((_QWORD *)(v49 > 1), v50 + 1, 1, v48);
      v48[2] = v50 + 1;
      v51 = &v48[2 * v50];
      v51[4] = v45;
      v51[5] = v47;

      v150 = v48;
      v4 = v140;
LABEL_41:
      v8 = v125;
      v31 = v129;
      v14 = v128;
      goto LABEL_12;
    }
    if (v38 != v123)
      break;
    (*(void (**)(id *, uint64_t))(v31 + 96))(v14, v8);

LABEL_12:
    v36 = v134 + 1;
    v35 = v132;
    if (v134 + 1 == v133)
      goto LABEL_7;
  }
  if (v38 != v120)
    goto LABEL_59;
  (*(void (**)(id *, uint64_t))(v31 + 96))(v14, v8);
  v52 = (*(uint64_t (**)(char *, id *, uint64_t))(v124 + 32))(v127, v14, v5);
  v53 = (void *)REMAccountsListDataView.Model.Group.list.getter(v52);
  v54 = objc_msgSend(v53, "name");

  v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
  v57 = v56;

  v146 = v55;
  v147 = v57;
  v58 = v141;
  static CharacterSet.whitespacesAndNewlines.getter();
  v139 = sub_10001D7FC();
  v59 = StringProtocol.trimmingCharacters(in:)(v58, &type metadata for String);
  v61 = v60;
  v138 = *(void (**)(char *, uint64_t))(v126 + 8);
  v138(v58, v142);
  swift_bridgeObjectRelease(v147);
  v62 = v151;
  if ((swift_isUniquelyReferenced_nonNull_native(v151) & 1) == 0)
    v62 = sub_10001D840(0, v62[2] + 1, 1, v62);
  v64 = v62[2];
  v63 = v62[3];
  if (v64 >= v63 >> 1)
    v62 = sub_10001D840((_QWORD *)(v63 > 1), v64 + 1, 1, v62);
  v62[2] = v64 + 1;
  v65 = &v62[2 * v64];
  v65[4] = v59;
  v65[5] = v61;
  v151 = v62;
  v66 = REMAccountsListDataView.Model.Group.lists.getter();
  v8 = *(_QWORD *)(v66 + 16);
  if (!v8)
  {
    swift_bridgeObjectRelease(v66);
LABEL_40:
    v5 = v121;
    (*(void (**)(char *, uint64_t))(v124 + 8))(v127, v121);
    goto LABEL_41;
  }
  v67 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v122 = v66;
  v68 = v66 + v67;
  v69 = *(_QWORD *)(v2 + 72);
  v137 = *(void (**)(id *, unint64_t, uint64_t))(v2 + 16);
  v70 = v137;
  v137(v4, v66 + v67, v1);
  while (2)
  {
    v72 = (*(uint64_t (**)(id *, uint64_t))(v2 + 88))(v4, v1);
    if (v72 == v143)
    {
      v73 = v2;
      (*(void (**)(id *, uint64_t))(v2 + 96))(v4, v1);
      v74 = *v4;
      v75 = objc_msgSend(*v4, "displayName");
      v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(v75);
      v78 = v77;

      v146 = v76;
      v147 = v78;
      v79 = v141;
      static CharacterSet.whitespacesAndNewlines.getter();
      v80 = StringProtocol.trimmingCharacters(in:)(v79, &type metadata for String);
      v82 = v81;
      v138(v79, v142);
      swift_bridgeObjectRelease(v147);
      v83 = v150;
      if ((swift_isUniquelyReferenced_nonNull_native(v150) & 1) == 0)
        v83 = sub_10001D840(0, v83[2] + 1, 1, v83);
      v85 = v83[2];
      v84 = v83[3];
      if (v85 >= v84 >> 1)
        v83 = sub_10001D840((_QWORD *)(v84 > 1), v85 + 1, 1, v83);
      v83[2] = v85 + 1;
      v71 = &v83[2 * v85];
      v71[4] = v80;
      v71[5] = v82;

      v150 = v83;
      v1 = v136;
      v70 = v137;
      v2 = v73;
      v4 = v140;
      goto LABEL_29;
    }
    if (v72 == v135)
    {
      (*(void (**)(id *, uint64_t))(v2 + 96))(v4, v1);

LABEL_29:
      v68 += v69;
      if (!--v8)
      {
        swift_bridgeObjectRelease(v122);
        v17 = v119;
        goto LABEL_40;
      }
      v70(v4, v68, v1);
      continue;
    }
    break;
  }
  _diagnoseUnexpectedEnumCase<A>(type:)(v1, v1);
  __break(1u);
LABEL_59:
  _diagnoseUnexpectedEnumCase<A>(type:)(v8, v8);
  __break(1u);
}

unint64_t sub_10001D7FC()
{
  unint64_t result;

  result = qword_100640700;
  if (!qword_100640700)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_100640700);
  }
  return result;
}

_QWORD *sub_10001D840(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10002A750((uint64_t *)&unk_100654F80);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10002CC30(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10001D94C(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD v9[2];
  _OWORD v10[2];
  _QWORD *v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v11 = _swiftEmptyArrayStorage;
    sub_10000BED8(0, v1, 0);
    v2 = _swiftEmptyArrayStorage;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *v4;
      v9[0] = *(v4 - 1);
      v9[1] = v5;
      swift_bridgeObjectRetain(v5);
      swift_dynamicCast(v10, v9, &type metadata for String, &type metadata for Any[8], 7);
      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_10000BED8(0, v2[2] + 1, 1);
        v2 = v11;
      }
      v7 = v2[2];
      v6 = v2[3];
      if (v7 >= v6 >> 1)
      {
        sub_10000BED8(v6 > 1, v7 + 1, 1);
        v2 = v11;
      }
      v4 += 2;
      v2[2] = v7 + 1;
      sub_100028D38(v10, &v2[4 * v7 + 4]);
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_10001DB10(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  char *v6;
  char v7;
  double v8;
  double v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;

  v2 = v1;
  v4 = objc_msgSend(v2, "accessoryView");
  if (v4)
  {
    v5 = v4;
    sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
    v6 = a1;
    v7 = static NSObject.== infix(_:_:)(v6, v5);

    if ((v7 & 1) != 0)
    {
      objc_msgSend(v6, "bounds");
      v10 = *(void **)&v6[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_gridView];
      if (v10)
      {
        v11 = v8;
        v12 = v9;
        objc_msgSend(v10, "intrinsicContentSize");
        if (v14 != v11 || v13 != v12)
        {
          objc_msgSend(v6, "frame");
          objc_msgSend(v6, "setFrame:");
          objc_msgSend(v2, "setNeedsLayout");
        }
      }
      else
      {
        __break(1u);
      }
    }
  }
}

char *sub_10001DC9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  char *v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  char *v15;
  id v16;
  uint64_t v17;
  id v18;
  double v19;
  id v20;
  NSString v21;
  id v22;
  char *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  objc_super v33;

  v6 = &v3[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listsViewListCellDelegate];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6, 0);
  v7 = &v3[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listItem];
  v8 = type metadata accessor for TTRIAccountsListsViewListCell.ListItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = &v3[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityEditingCustomActionName];
  *v9 = 0;
  v9[1] = 0;
  v10 = &v3[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityShareListActionName];
  *v10 = 0;
  v10[1] = 0;
  v11 = &v3[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityShareListActionSFSymbolName];
  *v11 = 0;
  v11[1] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_hidePredefinedSmartListGestureRecognizer] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_dynamicGlyphImageCache] = 0;
  v12 = &v3[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_dynamicGlyph];
  *v12 = 0;
  v12[1] = 0;
  v3[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_checkmarkState] = 0;
  v13 = type metadata accessor for TTRListBadgeView(0);
  v14 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v13));
  v15 = v3;
  v16 = objc_msgSend(v14, "init");
  *(_QWORD *)&v15[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_badge] = v16;
  v17 = type metadata accessor for TTRIExpandedHitTestButton(0);
  v18 = objc_msgSend((id)swift_getObjCClassFromMetadata(v17), "buttonWithType:", 0);
  LODWORD(v19) = 1148846080;
  objc_msgSend(v18, "setLayoutSize:withContentPriority:", NUIContainerViewSizeUseDefault[0], NUIContainerViewSizeUseDefault[1], v19);
  objc_msgSend(v18, "setSelected:", 1);
  *(_QWORD *)&v15[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_checkmarkButton] = v18;
  v20 = v18;

  if (a3)
  {
    v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v21 = 0;
  }
  v33.receiver = v15;
  v33.super_class = (Class)type metadata accessor for TTRIAccountsListsViewListCell(0);
  v22 = objc_msgSendSuper2(&v33, "initWithStyle:reuseIdentifier:", a1, v21);

  v23 = (char *)v22;
  objc_msgSend(v23, "setEditingAccessoryType:", 4);
  sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
  v24 = (void *)static UIImage.largeSystemImage(named:)(0x656C63726963, 0xE600000000000000);
  objc_msgSend(v20, "setImage:forState:", v24, 0);

  v25 = (void *)static UIImage.largeSystemImage(named:)(0xD000000000000015, 0x800000010057CD20);
  objc_msgSend(v20, "setImage:forState:", v25, 4);

  objc_msgSend(v20, "addTarget:action:forControlEvents:", v23, "toggleSmartListVisibility:", 0x2000);
  v26 = OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_badge;
  v27 = OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_iconContainerView;
  v28 = *(void **)&v23[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_iconContainerView];
  v29 = *(id *)&v23[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_badge];
  objc_msgSend(v28, "bounds");
  objc_msgSend(v29, "setFrame:");

  v30 = *(void **)&v23[v26];
  objc_msgSend(v30, "setAutoresizingMask:", 18);
  objc_msgSend(*(id *)&v23[v27], "addSubview:", v30);
  v31 = *(id *)&v23[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_customAccessoryView];
  objc_msgSend(v31, "setEnabled:", 0);

  return v23;
}

void sub_10001E08C()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int EnumCaseMultiPayload;
  __objc2_meth_list **p_opt_class_meths;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t *v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  unsigned __int8 v42;
  void *v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  void *v49;
  _QWORD *v50;
  uint64_t v51;
  char v52;
  void *v53;
  uint64_t v54;
  int v55;
  __objc2_meth_list **v56;
  NSString v57;
  uint64_t v58;
  void *v59;
  id v60;
  void *v61;
  char *v62;
  unint64_t *v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  unsigned __int8 v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  void (*v79)(void *, void *);
  _QWORD *v80;
  _QWORD *v81;
  void (*v82)(double);
  _QWORD *v83;
  _QWORD *v84;
  void (*v85)(void *, void *);
  void *v86;
  int v87;
  _QWORD *v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  id v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  void (*v106)(__int128 *);
  _QWORD *v107;
  _QWORD *v108;
  void (*v109)(__int128 *);
  _QWORD *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  _OWORD v132[2];
  char v133[24];
  _OWORD v134[2];
  uint64_t v135;
  char v136;

  v1 = v0;
  v2 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v112 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AppEntityID(0);
  v114 = *(_QWORD *)(v5 - 8);
  v115 = v5;
  __chkstk_darwin(v5);
  v113 = (char *)&v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for REMFeatureFlags(0);
  v118 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v117 = (char *)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750((uint64_t *)&unk_100646680);
  __chkstk_darwin(v8);
  v10 = (char *)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (__int128 *)((char *)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v17 = (char *)&v112 - v16;
  v18 = v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList, v133, 0, 0);
  sub_10001F5C4(v18, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10001FCE8((uint64_t)v10);
    return;
  }
  sub_10001F580((uint64_t)v10, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
  sub_10002A790((uint64_t)v17, (uint64_t)v15);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v11);
  p_opt_class_meths = &OBJC_PROTOCOL___UITableViewDelegate.opt_class_meths;
  v112 = v17;
  if (EnumCaseMultiPayload == 1)
  {
    v21 = v15[10];
    v22 = v15[12];
    v131 = v15[11];
    v132[0] = v22;
    *(_OWORD *)((char *)v132 + 10) = *(__int128 *)((char *)v15 + 202);
    v23 = v15[6];
    v24 = v15[8];
    v25 = v15[9];
    v127 = v15[7];
    v128 = v24;
    v129 = v25;
    v130 = v21;
    v26 = v15[3];
    v122 = v15[2];
    v123 = v26;
    v27 = v15[5];
    v124 = v15[4];
    v125 = v27;
    v126 = v23;
    v28 = v15[1];
    v120 = *v15;
    v121 = v28;
    v29 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_titleLabel);
    if (v29)
    {
      p_opt_class_meths = (__objc2_meth_list **)v121;
      v30 = v29;
      v15 = (__int128 *)String._bridgeToObjectiveC()();
      objc_msgSend(v30, "setText:", v15);

      v31 = OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_countLabel;
      v32 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_countLabel);
      if (v32)
      {
        p_opt_class_meths = (__objc2_meth_list **)v123;
        v33 = v32;
        v15 = (__int128 *)String._bridgeToObjectiveC()();
        objc_msgSend(v33, "setText:", v15);

        v34 = *(void **)(v1 + v31);
        if (v34)
        {
          objc_msgSend(v34, "setHidden:", 0);
          v35 = *(char **)(v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_stackedAvatarsView);
          if (v35)
          {
            v36 = *((_QWORD *)&v131 + 1);
            if (*((_QWORD *)&v131 + 1))
              v37 = (_QWORD *)*((_QWORD *)&v131 + 1);
            else
              v37 = _swiftEmptyArrayStorage;
            v38 = (unint64_t *)&v35[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_contacts];
            swift_beginAccess(&v35[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_contacts], &v119, 1, 0);
            v39 = *v38;
            *v38 = (unint64_t)v37;
            v40 = v35;
            swift_bridgeObjectRetain(v36);
            v41 = swift_bridgeObjectRetain(v37);
            v42 = sub_10001F60C(v41, v39);
            swift_bridgeObjectRelease(v37);
            if ((v42 & 1) != 0)
            {

              swift_bridgeObjectRelease(v39);
              v44 = (void *)*((_QWORD *)&v128 + 1);
              v43 = (void *)v128;
              if ((v129 & 1) == 0)
              {
LABEL_13:
                v45 = OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_badgeView;
                v46 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_badgeView);
                if (!v46)
                {
LABEL_56:
                  __break(1u);
                  goto LABEL_57;
                }
                v47 = v46;
                sub_10002B7A0(v43, v44, 0);
                v48 = REMListBadgeEmblem.image.getter(v43);
                (*(void (**)(uint64_t))((swift_isaMask & *v47) + 0x140))(v48);

                v49 = *(void **)(v1 + v45);
                if (!v49)
                {
LABEL_57:
                  __break(1u);
                  goto LABEL_58;
                }
                v50 = v49;
                v51 = REMListBadgeEmblem.name.getter(v43);
                (*(void (**)(uint64_t))((swift_isaMask & *v50) + 0x390))(v51);
                v52 = 0;
                goto LABEL_32;
              }
            }
            else
            {
              v40[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_avatarsNeedUpdate] = 1;
              objc_msgSend(v40, "invalidateIntrinsicContentSize");
              objc_msgSend(v40, "setNeedsLayout");

              swift_bridgeObjectRelease(v39);
              v44 = (void *)*((_QWORD *)&v128 + 1);
              v43 = (void *)v128;
              if (v129 != 1)
                goto LABEL_13;
            }
            v77 = OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_badgeView;
            v78 = *(_QWORD **)(v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_badgeView);
            if (!v78)
            {
LABEL_58:
              __break(1u);
              goto LABEL_59;
            }
            v79 = *(void (**)(void *, void *))((swift_isaMask & *v78) + 0x158);
            sub_10002B7A0(v43, v44, 1);
            sub_10002B7A0(v43, v44, 1);
            sub_10002B7A0(v43, v44, 1);
            v80 = v78;
            v79(v43, v44);

            v81 = *(_QWORD **)(v1 + v77);
            if (!v81)
            {
LABEL_59:
              __break(1u);
              goto LABEL_60;
            }
            v82 = *(void (**)(double))((swift_isaMask & *v81) + 0x170);
            v83 = v81;
            v82(16.0);

            v84 = *(_QWORD **)(v1 + v77);
            if (!v84)
            {
LABEL_60:
              __break(1u);
              return;
            }
            v85 = *(void (**)(void *, void *))((swift_isaMask & *v84) + 0x390);
            v50 = v84;
            v85(v43, v44);
            v52 = 1;
LABEL_32:

            v86 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_badgeView);
            if (v86)
            {
              v87 = BYTE8(v132[1]);
              v88 = v86;
              if (v87 == 1)
              {
                v89 = TTRListBadgeView.Shape.customSmartListInListRowView.unsafeMutableAddressor();
                v90 = *(_OWORD *)v89;
                v91 = *(_OWORD *)(v89 + 16);
                v92 = *(_QWORD *)(v89 + 32);
                v93 = *(_BYTE *)(v89 + 40);
              }
              else
              {
                v92 = 0;
                v90 = 0uLL;
                v93 = 2;
                v91 = 0uLL;
              }
              v94 = v116;
              v134[0] = v90;
              v134[1] = v91;
              v135 = v92;
              v136 = v93;
              (*(void (**)(_OWORD *))((swift_isaMask & *v88) + 0x110))(v134);

              v95 = (void *)v120;
              v97 = v117;
              v96 = v118;
              v98 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v118 + 104))(v117, enum case for REMFeatureFlags.viewAnnotation(_:), v94);
              v99 = REMFeatureFlags.isEnabled.getter(v98);
              (*(void (**)(char *, uint64_t))(v96 + 8))(v97, v94);
              if ((v99 & 1) != 0)
              {
                v100 = type metadata accessor for ListEntity(0);
                v101 = v95;
                v102 = v113;
                AppEntityID.init(objectID:)(v101);
                v103 = sub_1000175C8((unint64_t *)&unk_100646690, (uint64_t (*)(uint64_t))&type metadata accessor for ListEntity, (uint64_t)&protocol conformance descriptor for ListEntity);
                UIView.setAssociatedAppEntity<A>(entityType:identifier:)(v100, v102, v100, v103);
                (*(void (**)(char *, uint64_t))(v114 + 8))(v102, v115);
              }
              sub_10002B318(v43, v44, v52);
              sub_100075FE8((uint64_t)&v120);
              goto LABEL_43;
            }
            goto LABEL_55;
          }
          goto LABEL_48;
        }
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_47;
  }
  sub_10001F580((uint64_t)v15, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
  v53 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_titleLabel);
  if (!v53)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  v54 = v4[v2[5]];
  v55 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_usesLongTitle);
  v15 = v53;
  if (v55 == 1)
    TTRListType.PredefinedSmartListType.longTitle.getter(v54);
  else
    TTRListType.PredefinedSmartListType.title.getter(v54);
  p_opt_class_meths = v56;
  v57 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(p_opt_class_meths);
  objc_msgSend(v15, "setText:", v57);

  v58 = OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_countLabel;
  v59 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_countLabel);
  if (!v59)
    goto LABEL_50;
  p_opt_class_meths = *(__objc2_meth_list ***)&v4[v2[7] + 8];
  v60 = v59;
  v15 = (__int128 *)String._bridgeToObjectiveC()();
  objc_msgSend(v60, "setText:", v15);

  v61 = *(void **)(v1 + v58);
  if (!v61)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  objc_msgSend(v61, "setHidden:", v54 > 5);
  v62 = *(char **)(v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_stackedAvatarsView);
  if (!v62)
  {
LABEL_52:
    __break(1u);
LABEL_53:

    __break(1u);
    goto LABEL_54;
  }
  v63 = (unint64_t *)&v62[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_contacts];
  swift_beginAccess(&v62[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_contacts], v134, 1, 0);
  v64 = *v63;
  *v63 = (unint64_t)_swiftEmptyArrayStorage;
  v65 = v62;
  v66 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v67 = sub_10001F60C(v66, v64);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  if ((v67 & 1) == 0)
  {
    v65[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_avatarsNeedUpdate] = 1;
    objc_msgSend(v65, "invalidateIntrinsicContentSize");
    objc_msgSend(v65, "setNeedsLayout");
  }

  swift_bridgeObjectRelease(v64);
  v68 = (void *)TTRListType.PredefinedSmartListType.remSmartListType.getter(v54);
  v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
  v71 = v70;

  v72 = type metadata accessor for SmartListEntity(0);
  *(_QWORD *)&v120 = v69;
  *((_QWORD *)&v120 + 1) = v71;
  v73 = sub_1000175C8((unint64_t *)&unk_1006539E0, (uint64_t (*)(uint64_t))&type metadata accessor for SmartListEntity, (uint64_t)&protocol conformance descriptor for SmartListEntity);
  UIView.setAssociatedAppEntity<A>(entityType:identifier:)(v72, &v120, v72, v73);
  swift_bridgeObjectRelease(v71);
  v74 = &v4[v2[10]];
  p_opt_class_meths = (__objc2_meth_list **)*((_QWORD *)v74 + 1);
  if (p_opt_class_meths)
  {
    v75 = *(char **)v74;
    v76 = sub_10002F0A8();
    __chkstk_darwin(v76);
    *(&v112 - 2) = v75;
    *(&v112 - 1) = (char *)p_opt_class_meths;
    v15 = (__int128 *)TTRIDynamicDateGlyphCache.fetch(dayString:_:)(v75, p_opt_class_meths, sub_10002F1D8);
    swift_release(v76);
  }
  else
  {
    v15 = (__int128 *)TTRListType.PredefinedSmartListType.glyph.getter(v54);
  }
  v104 = OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_badgeView;
  v105 = *(_QWORD **)(v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_badgeView);
  if (!v105)
    goto LABEL_53;
  v106 = *(void (**)(__int128 *))((swift_isaMask & *v105) + 0x140);
  p_opt_class_meths = v15;
  v107 = v105;
  v106(v15);

  v108 = *(_QWORD **)(v1 + v104);
  if (!v108)
  {
LABEL_54:

    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  *(_QWORD *)&v122 = 0;
  v120 = 0u;
  v121 = 0u;
  BYTE8(v122) = 2;
  v109 = *(void (**)(__int128 *))((swift_isaMask & *v108) + 0x110);
  v110 = v108;
  v109(&v120);

  sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
LABEL_43:
  v111 = (uint64_t)v112;
  sub_10001EA80();
  sub_10001F914();
  sub_10001F544(v111, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
}

void sub_10001EA80()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  int v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  __objc2_meth_list **p_opt_class_meths;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  int v49;
  uint64_t v50;
  void *v51;
  _QWORD *v52;
  id v53;
  void *v54;
  __objc2_meth_list *v55;
  void *v56;
  __objc2_meth_list **v57;
  _QWORD *v58;
  void (*v59)(id);
  id v60;
  _QWORD *v61;
  id v62;
  _QWORD *v63;
  id v64;
  _QWORD *v65;
  uint64_t v66;
  void (*v67)(uint64_t);
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  void (*v71)(_BYTE *);
  _QWORD *v72;
  void *v73;
  id v74;
  id v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  id v80;
  id v81;
  id v82;
  _OWORD v83[8];
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  _OWORD v88[2];
  char v89[32];

  v1 = v0;
  v2 = sub_10002A750((uint64_t *)&unk_100646680);
  __chkstk_darwin(v2);
  v4 = (char *)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  v78 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v8 = (_OWORD *)((char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v77 = (uint64_t)&v77 - v9;
  sub_10001F1E0();
  v81 = objc_msgSend(v0, "tintColor");
  v10 = (void *)objc_opt_self(UIColor);
  v82 = objc_msgSend(v10, "systemGray4Color");
  v80 = objc_msgSend(v10, "ttr_systemWhiteColor");
  v11 = (unint64_t)objc_msgSend(v1, "state");
  v12 = OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_isDropTarget;
  if (*((_BYTE *)v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_isDropTarget) == 1)
  {
    v13 = qword_1006465B8;
    if ((qword_1006465B8 & ~v11) == 0)
      v13 = 0;
    v11 |= v13;
  }
  v14 = (_BYTE *)OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_isContextMenuTarget;
  if (*((_BYTE *)v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_isContextMenuTarget) == 1)
  {
    v15 = qword_1006465C0;
    if ((qword_1006465C0 & ~v11) == 0)
      v15 = 0;
    LOBYTE(v11) = v15 | v11;
  }
  if ((v11 & 4) != 0)
  {
    v16 = (unint64_t)objc_msgSend(v1, "state");
    if (*((_BYTE *)v1 + v12) == 1)
    {
      v17 = qword_1006465B8;
      if ((qword_1006465B8 & ~v16) == 0)
        v17 = 0;
      v16 |= v17;
    }
    if (v14[(_QWORD)v1] == 1)
    {
      v18 = qword_1006465C0;
      if ((qword_1006465C0 & ~v16) == 0)
        v18 = 0;
      v16 |= v18;
    }
    if ((qword_1006465B8 & ~v16) != 0)
    {
      if ((*((_BYTE *)v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_selectedStateShowsPinnedListColor) & 1) != 0)
      {
        v23 = *(void **)((char *)v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_titleLabel);
        if (!v23)
        {
LABEL_73:
          __break(1u);
          goto LABEL_74;
        }
        v24 = v81;
        v79 = v81;
        v25 = v23;
        v26 = v80;
        objc_msgSend(v25, "setTextColor:", v80);
        v27 = *(void **)((char *)v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_countLabel);
        if (!v27)
        {
LABEL_74:

          __break(1u);
          goto LABEL_75;
        }
        objc_msgSend(v27, "setTextColor:", v26);
        v28 = 1;
        v79 = v24;
        goto LABEL_37;
      }
      goto LABEL_33;
    }
  }
  v19 = (unint64_t)objc_msgSend(v1, "state");
  if (*((_BYTE *)v1 + v12) == 1)
  {
    v20 = qword_1006465B8;
    if ((qword_1006465B8 & ~v19) == 0)
      v20 = 0;
    v19 |= v20;
  }
  if (v14[(_QWORD)v1] == 1)
  {
    v21 = qword_1006465C0;
    if ((qword_1006465C0 & ~v19) == 0)
      v21 = 0;
    v19 |= v21;
  }
  if ((qword_1006465B8 & ~v19) == 0)
  {
LABEL_33:
    v22 = v82;
    v29 = v82;
    goto LABEL_34;
  }
  v22 = 0;
LABEL_34:
  v79 = v22;
  v30 = *(void **)((char *)v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_titleLabel);
  if (!v30)
  {
LABEL_64:

    __break(1u);
    goto LABEL_65;
  }
  v31 = v30;
  v32 = objc_msgSend(v10, "secondaryLabelColor");
  objc_msgSend(v31, "setTextColor:", v32);

  v33 = *(void **)((char *)v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_countLabel);
  if (!v33)
  {
LABEL_65:

    __break(1u);
    goto LABEL_66;
  }
  v34 = v33;
  v35 = objc_msgSend(v10, "labelColor");
  objc_msgSend(v34, "setTextColor:", v35);

  v28 = 0;
LABEL_37:
  v36 = (uint64_t)v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList;
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList, v89, 0, 0);
  sub_10001F5C4(v36, (uint64_t)v4);
  p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___UITableViewDelegate + 48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v4, 1, v5) == 1)
  {
    sub_10001FCE8((uint64_t)v4);
    v39 = v80;
    v38 = v81;
LABEL_55:
    v65 = *(_QWORD **)((char *)p_opt_class_meths[194] + (_QWORD)v1);
    if (v65)
    {
      v66 = v14[(_QWORD)v1];
      v67 = *(void (**)(uint64_t))((swift_isaMask & *v65) + 0x1D0);
      v68 = v65;
      v67(v66);

      objc_msgSend(v1, "setTintAdjustmentMode:", v14[(_QWORD)v1]);
      if (!v79)
      {
        v76 = *(void **)((char *)v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_gradientBackgroundView);
        if (v76)
        {
          v75 = v76;
          objc_msgSend(v75, "setAlpha:", 0.0);
          v14 = v82;
          goto LABEL_62;
        }
        goto LABEL_68;
      }
      v69 = OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_gradientBackgroundView;
      v70 = *(_QWORD **)((char *)v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_gradientBackgroundView);
      if (v70)
      {
        v71 = *(void (**)(_BYTE *))((swift_isaMask & *v70) + 0x88);
        v14 = v79;
        v72 = v70;
        v71(v14);

        v73 = *(void **)((char *)v1 + v69);
        if (v73)
        {
          v74 = v73;
          objc_msgSend(v74, "setAlpha:", 1.0);

          v75 = v82;
          v39 = v38;
          v38 = v14;
LABEL_62:

          return;
        }
        goto LABEL_67;
      }
LABEL_66:
      __break(1u);
LABEL_67:

      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }

    __break(1u);
    goto LABEL_64;
  }
  v40 = (uint64_t)v4;
  v41 = v77;
  sub_10001F580(v40, v77, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
  sub_10002A790(v41, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v5) != 1)
  {
    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    v39 = v80;
LABEL_46:
    v55 = p_opt_class_meths[194];
    v56 = *(void **)((char *)v55 + (_QWORD)v1);
    v38 = v81;
    if (v28)
    {
      if (!v56)
      {
LABEL_69:

        __break(1u);
        goto LABEL_70;
      }
      v57 = p_opt_class_meths;
      objc_msgSend(v56, "setTintColor:", v39);
      v58 = *(_QWORD **)((char *)v55 + (_QWORD)v1);
      if (!v58)
      {
LABEL_71:

        __break(1u);
        goto LABEL_72;
      }
      v59 = *(void (**)(id))((swift_isaMask & *v58) + 0x188);
      v60 = v38;
      v61 = v58;
      v62 = v38;
    }
    else
    {
      if (!v56)
      {
LABEL_70:

        __break(1u);
        goto LABEL_71;
      }
      v57 = p_opt_class_meths;
      objc_msgSend(v56, "setTintColor:", v81);
      v63 = *(_QWORD **)((char *)v55 + (_QWORD)v1);
      if (!v63)
      {
LABEL_72:

        __break(1u);
        goto LABEL_73;
      }
      v59 = *(void (**)(id))((swift_isaMask & *v63) + 0x188);
      v61 = v63;
      v64 = v39;
      v62 = v39;
    }
    v59(v62);

    p_opt_class_meths = v57;
    goto LABEL_54;
  }
  v42 = v8[11];
  v86 = v8[10];
  v87 = v42;
  v88[0] = v8[12];
  *(_OWORD *)((char *)v88 + 10) = *(_OWORD *)((char *)v8 + 202);
  v43 = v8[7];
  v83[6] = v8[6];
  v83[7] = v43;
  v44 = v8[9];
  v84 = v8[8];
  v85 = v44;
  v45 = v8[3];
  v83[2] = v8[2];
  v83[3] = v45;
  v46 = v8[5];
  v83[4] = v8[4];
  v83[5] = v46;
  v47 = v8[1];
  v83[0] = *v8;
  v83[1] = v47;
  v48 = v84;
  v49 = v85;
  sub_10002B7A0((void *)v84, *((id *)&v84 + 1), v85);
  sub_100075FE8((uint64_t)v83);
  if (v49 != 1)
  {
    sub_10002B318((void *)v48, *((id *)&v48 + 1), 0);
    v39 = v80;
    p_opt_class_meths = &OBJC_PROTOCOL___UITableViewDelegate.opt_class_meths;
    goto LABEL_46;
  }
  sub_10002B318((void *)v48, *((id *)&v48 + 1), 1);
  v50 = OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_badgeView;
  v51 = *(void **)((char *)v1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_badgeView);
  if (!v51)
  {
LABEL_75:

    __break(1u);
    goto LABEL_76;
  }
  v52 = v51;
  v53 = objc_msgSend(v10, "clearColor");
  (*(void (**)(id))((swift_isaMask & *v52) + 0x188))(v53);

  v54 = *(void **)((char *)v1 + v50);
  v39 = v80;
  v38 = v81;
  if (v54)
  {
    objc_msgSend(v54, "setTintColor:", v81);
    p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___UITableViewDelegate + 48);
LABEL_54:
    sub_10001F544(v41, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    goto LABEL_55;
  }
LABEL_76:

  __break(1u);
}

uint64_t sub_10001F1E0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _QWORD *v23;
  void *v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  _QWORD *v32;
  uint64_t v33;
  void (*v34)(_OWORD *);
  _QWORD *v35;
  void *v36;
  void (*v37)(uint64_t *);
  id v38;
  _OWORD v39[3];
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _OWORD v49[2];
  char v50[24];
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  char v60;

  v1 = v0;
  v2 = type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750((uint64_t *)&unk_100646680);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (_OWORD *)((char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v14 = (char *)&v37 - v13;
  v15 = (uint64_t)&v1[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList];
  swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList], v50, 0, 0);
  sub_10001F5C4(v15, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_10001FCE8((uint64_t)v7);
  sub_10001F580((uint64_t)v7, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
  sub_10002A790((uint64_t)v14, (uint64_t)v12);
  result = swift_getEnumCaseMultiPayload(v12, v8);
  if ((_DWORD)result != 1)
  {
    result = sub_10001F580((uint64_t)v12, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
    v32 = *(_QWORD **)&v1[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_badgeView];
    if (v32)
    {
      v33 = v4[*(int *)(v2 + 20)];
      *(_QWORD *)&v39[0] = v33;
      *(_OWORD *)((char *)v39 + 8) = 0u;
      *(_OWORD *)((char *)&v39[1] + 8) = 0u;
      *((_QWORD *)&v39[2] + 1) = 0;
      LOBYTE(v40) = 0x80;
      v34 = *(void (**)(_OWORD *))((swift_isaMask & *v32) + 0x128);
      v35 = v32;
      v34(v39);

      v36 = (void *)TTRListType.PredefinedSmartListType.color.getter(v33);
      objc_msgSend(v1, "setTintColor:", v36);

      sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
      return sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    }
LABEL_11:
    __break(1u);
    return result;
  }
  v17 = v12[11];
  v47 = v12[10];
  v48 = v17;
  v49[0] = v12[12];
  *(_OWORD *)((char *)v49 + 10) = *(_OWORD *)((char *)v12 + 202);
  v18 = v12[7];
  v43 = v12[6];
  v44 = v18;
  v19 = v12[9];
  v45 = v12[8];
  v46 = v19;
  v20 = v12[3];
  v39[2] = v12[2];
  v40 = v20;
  v21 = v12[5];
  v41 = v12[4];
  v42 = v21;
  v22 = v12[1];
  v39[0] = *v12;
  v39[1] = v22;
  v23 = *(_QWORD **)&v1[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_badgeView];
  v38 = v1;
  if (!v23)
  {
    __break(1u);
    goto LABEL_11;
  }
  v24 = (void *)*((_QWORD *)&v41 + 1);
  v25 = v42;
  v27 = v43;
  v26 = v44;
  v28 = BYTE8(v44);
  v51 = *((_QWORD *)&v41 + 1);
  v52 = v42;
  v53 = v43;
  v54 = v44;
  v55 = BYTE8(v44);
  v56 = *((_QWORD *)&v41 + 1);
  v57 = v42;
  v58 = v43;
  v59 = v44;
  v60 = BYTE8(v44);
  v37 = *(void (**)(uint64_t *))((swift_isaMask & *v23) + 0x128);
  v29 = v23;
  sub_10002B764(v24, v25, *((uint64_t *)&v25 + 1), v27, *((uint64_t *)&v27 + 1), v26, v28);
  v37(&v56);

  v31 = (void *)TTRListColors.Color.nativeColor.getter(v30);
  objc_msgSend(v38, "setTintColor:", v31);

  sub_100075FE8((uint64_t)v39);
  return sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
}

uint64_t sub_10001F544(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10001F580(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10001F5C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_100646680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_10001F60C(uint64_t a1, unint64_t a2)
{
  return sub_10001F620(a1, a2, (unint64_t *)&qword_100642228, CNContact_ptr);
}

id sub_10001F620(uint64_t a1, unint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id result;
  void *v16;
  id v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  id v23;
  void *v24;
  unint64_t v26;
  void **v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v6 = a2;
  v7 = a1;
  v8 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v10 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_50:
    if (v6 < 0)
      v32 = v6;
    else
      v32 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v33 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(v6);
    if (v9 == v33)
      goto LABEL_4;
LABEL_54:
    LOBYTE(v9) = 0;
    return (id)(v9 & 1);
  }
  if (a1 < 0)
    v31 = a1;
  else
    v31 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v9 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease(v7);
  v10 = (unint64_t)v6 >> 62;
  if ((unint64_t)v6 >> 62)
    goto LABEL_50;
LABEL_3:
  if (v9 != *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_54;
LABEL_4:
  if (!v9)
    goto LABEL_37;
  v11 = v7 & 0xFFFFFFFFFFFFFF8;
  if (v7 < 0)
    v11 = v7;
  if (!v8)
    v11 = (v7 & 0xFFFFFFFFFFFFFF8) + 32;
  v12 = v6 & 0xFFFFFFFFFFFFFF8;
  v13 = (v6 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v6 < 0)
    v14 = v6;
  else
    v14 = v6 & 0xFFFFFFFFFFFFFF8;
  if (v10)
    v13 = v14;
  if (v11 == v13)
  {
LABEL_37:
    LOBYTE(v9) = 1;
    return (id)(v9 & 1);
  }
  if ((v9 & 0x8000000000000000) != 0)
    goto LABEL_60;
  v34 = v7 & 0xC000000000000001;
  if ((v7 & 0xC000000000000001) != 0)
    goto LABEL_61;
  for (result = *(id *)(v7 + 32); ; result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7))
  {
    v16 = result;
    if ((v6 & 0xC000000000000001) == 0)
      break;
    v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
LABEL_21:
    v18 = v17;
    a4 = (_QWORD *)sub_100005ED8(0, a3, a4);
    a3 = (unint64_t *)static NSObject.== infix(_:_:)(v16, v18);

    if ((a3 & 1) == 0)
      goto LABEL_54;
    v19 = v9 - 1;
    if (v9 == 1)
      return (id)(v9 & 1);
    if (((v6 | v7) & 0xC000000000000001) != 0)
    {
      v20 = 0;
      v21 = v9 - 2;
      while (v19 != v20)
      {
        v9 = v20 + 1;
        if (v34)
          v22 = (unint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)(v20 + 1, v7);
        else
          v22 = (unint64_t *)*(id *)(v7 + 40 + 8 * v20);
        a3 = v22;
        if ((v6 & 0xC000000000000001) != 0)
        {
          v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v20 + 1, v6);
        }
        else
        {
          if (v9 >= *(_QWORD *)(v12 + 16))
            goto LABEL_59;
          v23 = *(id *)(v6 + 40 + 8 * v20);
        }
        v24 = v23;
        v9 = static NSObject.== infix(_:_:)(a3, v23);

        if ((v9 & 1) != 0 && v21 != v20++)
          continue;
        return (id)(v9 & 1);
      }
      __break(1u);
    }
    else
    {
      v26 = *(_QWORD *)(v12 + 16);
      if (v26 <= 1)
        v26 = 1;
      a3 = (unint64_t *)(v26 - 1);
      v27 = (void **)(v7 + 40);
      v12 = v6 + 40;
      while (v19)
      {
        if (!a3)
          goto LABEL_58;
        v29 = *v27++;
        v28 = v29;
        v30 = *(void **)v12;
        v12 += 8;
        v6 = v28;
        v7 = v30;
        v9 = static NSObject.== infix(_:_:)(v6, v7);

        if ((v9 & 1) != 0)
        {
          a3 = (unint64_t *)((char *)a3 - 1);
          if (--v19)
            continue;
        }
        return (id)(v9 & 1);
      }
    }
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    ;
  }
  if (*(_QWORD *)(v12 + 16))
  {
    v17 = *(id *)(v6 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void sub_10001F914()
{
  char *v0;
  char **v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unsigned int v11;
  _QWORD *v12;
  unsigned int v13;
  uint64_t (*v14)(void);
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  void (*v18)(void);
  unint64_t v19;
  int v20;
  void *v21;
  void *v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t *v25;
  double v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  char isEscapingClosureAtFileLocation;
  uint64_t v38;
  _QWORD aBlock[5];
  uint64_t v40;
  char v41[24];
  char v42[24];

  v3 = v0;
  v4 = sub_10002A750((uint64_t *)&unk_100646680);
  __chkstk_darwin(v4);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t)&v3[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList];
  swift_beginAccess(&v3[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList], v42, 0, 0);
  sub_10001F5C4(v7, (uint64_t)v6);
  v8 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  LODWORD(v7) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8);
  sub_10001FCE8((uint64_t)v6);
  if ((_DWORD)v7 == 1)
    return;
  v9 = OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_badgeView;
  v10 = *(void **)&v3[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_badgeView];
  if (!v10)
    goto LABEL_34;
  v11 = objc_msgSend(v10, "isHidden");
  v12 = *(_QWORD **)&v3[v9];
  if (!v12)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v13 = v11;
  v14 = *(uint64_t (**)(void))((swift_isaMask & *v12) + 0x138);
  v15 = v12;
  v16 = (_QWORD *)v14();

  if (v16)
  {
LABEL_8:
    v20 = 1;
    v21 = *(void **)&v3[v9];
    if (v21)
      goto LABEL_9;
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v17 = *(_QWORD **)&v3[v9];
  if (!v17)
  {
LABEL_39:
    __break(1u);
    return;
  }
  v18 = *(void (**)(void))((swift_isaMask & *v17) + 0x150);
  v16 = v17;
  v18();
  v15 = v19;

  if (v15)
  {
    swift_bridgeObjectRelease(v15);
    goto LABEL_8;
  }
  v20 = 0;
  v21 = *(void **)&v3[v9];
  if (!v21)
    goto LABEL_28;
LABEL_9:
  LODWORD(v15) = v20 ^ 1;
  v1 = &selRef_supportsAttachments;
  objc_msgSend(v21, "setHidden:", v20 ^ 1u);
  v2 = OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_stackedAvatarsView;
  v22 = *(void **)&v3[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_stackedAvatarsView];
  if (!v22)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v23 = objc_msgSend(v22, "isHidden");
  v24 = *(_QWORD *)&v3[v2];
  if (!v24)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  LODWORD(v16) = v23;
  v25 = (uint64_t *)(v24 + OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_contacts);
  *(_QWORD *)&v26 = swift_beginAccess(v24 + OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_contacts, v41, 0, 0).n128_u64[0];
  v9 = *v25;
  if (!((unint64_t)*v25 >> 62))
  {
    v27 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_13;
  }
LABEL_29:
  if (v9 < 0)
    v38 = v9;
  else
    v38 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v9);
  v27 = _CocoaArrayWrapper.endIndex.getter(v38);
  swift_bridgeObjectRelease(v9);
LABEL_13:
  v28 = *(void **)&v3[v2];
  if (!v28)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (v27)
    v15 = 0;
  else
    v15 = v15;
  objc_msgSend(v28, v1[157], v27 == 0, v26);
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_secondRowStackView], v1[157], v15);
  if ((v13 ^ v20) != 1 || ((v16 ^ (v27 == 0)) & 1) != 0)
    goto LABEL_42;
  v29 = 1;
  if (v27)
    v29 = 2;
  v30 = (id)(v20 ? 2 : v29);
  if (objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_grid], "numberOfRows") != v30)
  {
LABEL_42:
    v31 = *(void **)&v3[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_grid];
    v32 = swift_allocObject(&unk_1005F1D98, 26, 7);
    *(_QWORD *)(v32 + 16) = v3;
    *(_BYTE *)(v32 + 24) = v27 != 0;
    *(_BYTE *)(v32 + 25) = v20;
    v33 = swift_allocObject(&unk_1005F1DC0, 32, 7);
    *(_QWORD *)(v33 + 16) = sub_10001B3A0;
    *(_QWORD *)(v33 + 24) = v32;
    aBlock[4] = sub_10001B278;
    v40 = v33;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001B258;
    aBlock[3] = &unk_1005F1DD8;
    v34 = _Block_copy(aBlock);
    v35 = v40;
    v36 = v3;
    swift_retain(v33);
    swift_release(v35);
    objc_msgSend(v31, "performBatchUpdates:", v34);
    _Block_release(v34);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v33, "", 124, 483, 34, 1);
    swift_release(v32);
    swift_release(v33);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
}

uint64_t sub_10001FCE8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750((uint64_t *)&unk_100646680);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_10001FD28(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v15;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v11 = a3;
  v12 = a1;
  v13 = sub_10001FDDC((uint64_t)v10);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v13;
}

id sub_10001FDDC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void *Strong;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  void *v40;
  id v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  void (*v78)(char *, uint64_t);
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _OWORD v92[2];
  uint64_t v93;
  _QWORD v94[4];
  char v95[32];

  v3 = swift_isaMask & *v1;
  v4 = type metadata accessor for IndexPath(0);
  v89 = *(_QWORD *)(v4 - 8);
  v90 = v4;
  v5 = __chkstk_darwin(v4);
  v83 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v80 - v8;
  v10 = __chkstk_darwin(v7);
  v82 = (char *)&v80 - v11;
  __chkstk_darwin(v10);
  v81 = (char *)&v80 - v12;
  v14 = *(_QWORD *)(v3 + 80);
  v13 = *(_QWORD *)(v3 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v13, v14, &unk_1005987EC, &unk_1005987FC);
  v86 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v87 = AssociatedTypeWitness;
  v16 = __chkstk_darwin(AssociatedTypeWitness);
  v85 = (char *)&v80 - v17;
  v18 = *(_QWORD *)(v14 - 8);
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v80 - v20;
  v22 = v1;
  v26 = sub_1000232AC(v19, v23, v24, v25);
  v28 = v27;
  v30 = v29;
  v88 = a1;
  v84 = v13;
  v32 = sub_10002B364(a1, v26, v27, v29, v31 & 1, v14, v13);
  swift_bridgeObjectRelease(v30);
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v26);
  v91 = v32;
  if (v32)
  {
    v33 = v22;
    v34 = sub_100022F8C(&qword_100645F10, (uint64_t (*)(uint64_t))sub_100022FD4);
    if (v34)
    {
      v35 = v34;
      Strong = (void *)swift_unknownObjectUnownedLoadStrong((char *)v22 + qword_100645EF8);
      v37 = v91;
      v38 = v91 + *(_QWORD *)(*(_QWORD *)v91 + 144);
      v39 = swift_beginAccess(v38, v95, 0, 0);
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16))(v21, v38, v14, v39);
      v40 = (void *)sub_100020654();

      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v14);
      v94[3] = sub_100005ED8(0, (unint64_t *)&qword_1006462D0, UITableViewCell_ptr);
      v94[0] = v40;
      v93 = 0;
      memset(v92, 0, sizeof(v92));
      v41 = v40;
      sub_1000288AC((uint64_t)v94, v37, (uint64_t)v92);
      sub_1000073A0((uint64_t)v92, (uint64_t *)&unk_1006462D8);
      v42 = sub_1000073A0((uint64_t)v94, &qword_100640E50);
      v43 = v85;
      sub_100029148(v42);
      swift_beginAccess((char *)v33 + qword_100645F50, v92, 33, 0);
      v45 = type metadata accessor for TTRITreeViewSoftReloadContext(0, v14, v84, v44);
      sub_100020494(v43, v45);
      swift_endAccess(v92);
      swift_release(v37);
      v46 = swift_release(v35);
      (*(void (**)(char *, uint64_t, __n128))(v86 + 8))(v43, v87, v46);
    }
    else
    {
      if (qword_10063D3C8 != -1)
        swift_once(&qword_10063D3C8, sub_1000E35C8);
      v62 = type metadata accessor for Logger(0);
      sub_100012DC4(v62, (uint64_t)qword_100645EC0);
      v63 = v88;
      v64 = v89;
      v65 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 16);
      v66 = v81;
      v67 = v90;
      v65(v81, v88, v90);
      v68 = v82;
      v69 = ((uint64_t (*)(char *, uint64_t, uint64_t))v65)(v82, v63, v67);
      v70 = Logger.logObject.getter(v69);
      v71 = static os_log_type_t.fault.getter(v70);
      if (os_log_type_enabled(v70, v71))
      {
        v72 = swift_slowAlloc(22, -1);
        *(_DWORD *)v72 = 134218240;
        v73 = IndexPath.row.getter(v72);
        v74 = *(void (**)(char *, uint64_t))(v64 + 8);
        v74(v66, v67);
        *(_QWORD *)&v92[0] = v73;
        v75 = UnsafeMutableRawBufferPointer.copyMemory(from:)(v92, (char *)v92 + 8, v72 + 4, v72 + 12);
        *(_WORD *)(v72 + 12) = 2048;
        v76 = IndexPath.section.getter(v75);
        v74(v68, v67);
        *(_QWORD *)&v92[0] = v76;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v92, (char *)v92 + 8, v72 + 14, v72 + 22);
        _os_log_impl((void *)&_mh_execute_header, v70, v71, "Data source is nil when requesting cell for row at indexPath {indexPath: row=%ld, section=%ld}", (uint8_t *)v72, 0x16u);
        swift_slowDealloc(v72, -1, -1);
      }
      else
      {
        v78 = *(void (**)(char *, uint64_t))(v64 + 8);
        v78(v68, v67);
        v78(v66, v67);
      }

      v41 = objc_msgSend(objc_allocWithZone((Class)UITableViewCell), "init");
      swift_release(v91);
    }
  }
  else
  {
    v47 = v9;
    v48 = v83;
    if (qword_10063D3C8 != -1)
      swift_once(&qword_10063D3C8, sub_1000E35C8);
    v49 = type metadata accessor for Logger(0);
    sub_100012DC4(v49, (uint64_t)qword_100645EC0);
    v50 = v88;
    v51 = v89;
    v52 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 16);
    v53 = v90;
    v52(v47, v88, v90);
    v54 = ((uint64_t (*)(char *, uint64_t, uint64_t))v52)(v48, v50, v53);
    v55 = Logger.logObject.getter(v54);
    v56 = static os_log_type_t.fault.getter(v55);
    if (os_log_type_enabled(v55, v56))
    {
      v57 = swift_slowAlloc(22, -1);
      *(_DWORD *)v57 = 134218240;
      v58 = IndexPath.row.getter(v57);
      v59 = *(void (**)(char *, uint64_t))(v51 + 8);
      v59(v47, v53);
      *(_QWORD *)&v92[0] = v58;
      v60 = UnsafeMutableRawBufferPointer.copyMemory(from:)(v92, (char *)v92 + 8, v57 + 4, v57 + 12);
      *(_WORD *)(v57 + 12) = 2048;
      v61 = IndexPath.section.getter(v60);
      v59(v48, v53);
      *(_QWORD *)&v92[0] = v61;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v92, (char *)v92 + 8, v57 + 14, v57 + 22);
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "Node not found when requesting cell for row at indexPath {indexPath: row=%ld, section=%ld}", (uint8_t *)v57, 0x16u);
      swift_slowDealloc(v57, -1, -1);
    }
    else
    {
      v77 = *(void (**)(char *, uint64_t))(v51 + 8);
      v77(v48, v53);
      v77(v47, v53);
    }

    return objc_msgSend(objc_allocWithZone((Class)UITableViewCell), "init");
  }
  return v41;
}

uint64_t type metadata accessor for TTRITreeViewSoftReloadContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRITreeViewSoftReloadContext);
}

uint64_t sub_100020498(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t AssociatedConformanceWitness;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = a2;
  v5 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(a3 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v4, v5, &unk_1005987EC, &unk_1005987FC);
  v7 = type metadata accessor for Optional(0, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = ((uint64_t (*)(void))__chkstk_darwin)();
  v11 = (char *)&v23 - v10;
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = __chkstk_darwin(v9);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v23 - v16;
  if ((a1 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v23, AssociatedTypeWitness);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v4, v5, AssociatedTypeWitness, &unk_1005987EC, &unk_1005987F4);
    v19 = type metadata accessor for Set(0, AssociatedTypeWitness, AssociatedConformanceWitness);
    Set.insert(_:)(v17, v15, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, AssociatedTypeWitness);
  }
  else
  {
    v21 = swift_getAssociatedConformanceWitness(v4, v5, AssociatedTypeWitness, &unk_1005987EC, &unk_1005987F4);
    v22 = type metadata accessor for Set(0, AssociatedTypeWitness, v21);
    Set.remove(_:)(v23, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
}

uint64_t sub_100020644(uint64_t a1, uint64_t a2)
{
  return sub_100020498(0, a1, a2);
}

uint64_t sub_100020654()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_100020674(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100020694(a1, a2, v2, (uint64_t (*)(uint64_t, uint64_t))sub_100020710);
}

uint64_t sub_100020694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t result;
  void *v9;
  uint64_t v10;
  _BYTE v11[24];

  v7 = a3 + 16;
  swift_beginAccess(a3 + 16, v11, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v7);
  if (result)
  {
    v9 = (void *)result;
    v10 = a4(a1, a2);

    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100020710(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  v3 = type metadata accessor for Logger(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a2, (uint64_t)v6, v7);
  v8 = (char *)&loc_1000207DC + dword_10006444C[swift_getEnumCaseMultiPayload(v6, v4)];
  __asm { BR              X10 }
}

char *sub_1000207EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  char *v21;

  v6 = v3[11];
  *(_OWORD *)(v5 - 160) = v3[10];
  *(_OWORD *)(v5 - 144) = v6;
  *(_OWORD *)(v5 - 128) = v3[12];
  *(_OWORD *)(v4 + 202) = *(_OWORD *)((char *)v3 + 202);
  v7 = v3[7];
  *(_OWORD *)(v5 - 224) = v3[6];
  *(_OWORD *)(v5 - 208) = v7;
  v8 = v3[9];
  *(_OWORD *)(v5 - 192) = v3[8];
  *(_OWORD *)(v5 - 176) = v8;
  v9 = v3[3];
  *(_OWORD *)(v5 - 288) = v3[2];
  *(_OWORD *)(v5 - 272) = v9;
  v10 = v3[5];
  *(_OWORD *)(v5 - 256) = v3[4];
  *(_OWORD *)(v5 - 240) = v10;
  v11 = v3[1];
  *(_OWORD *)(v5 - 320) = *v3;
  *(_OWORD *)(v5 - 304) = v11;
  sub_100075FE8(v5 - 320);
  v12 = type metadata accessor for TTRIAccountsListsViewListCell(0);
  v13 = *(void **)(v1 + qword_10065D8D8);
  if (!v13)
  {
    __break(1u);
    JUMPOUT(0x100020C4CLL);
  }
  v14 = v12;
  v15 = v13;
  v16 = (void *)((uint64_t (*)(uint64_t, uint64_t))UITableView.dequeueReusableCell<A>(_:))(v14, v14);

  v17 = v16;
  ((void (*)(void))TTRAccountsListsViewModel.Item.accessibilityIdentifier.getter)();
  v19 = v18;
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  objc_msgSend(v17, "setAccessibilityIdentifier:", v20);

  v21 = &v17[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listsViewListCellDelegate];
  *((_QWORD *)v21 + 1) = &off_1005ECE88;
  swift_unknownObjectWeakAssign(v21, v0);
  sub_100020D4C((uint64_t)v17, v2);
  return v17;
}

void sub_100020C60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(v0 + 8);

  swift_bridgeObjectRelease(v4);
  if (qword_10063D2F0 != -1)
    swift_once(&qword_10063D2F0, sub_1000073DC);
  v5 = sub_100012DC4(v2, (uint64_t)&unk_100640920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5, v2);
  v6 = sub_10002D32C(&_swiftEmptyArrayStorage);
  v7 = sub_10002D32C(&_swiftEmptyArrayStorage);
  sub_1002EB23C("Item should be displayed by a section header, not a cell", 56, 2, v6, v7);
  __break(1u);
  JUMPOUT(0x100020D0CLL);
}

void sub_100020C74()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  JUMPOUT(0x100020C84);
}

void sub_100020D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  char *v13;
  _QWORD v14[40];

  v14[3] = a1;
  v3 = type metadata accessor for TTRAccountsListsViewModel.Hashtags(0);
  __chkstk_darwin(v3);
  v4 = sub_10002A750((uint64_t *)&unk_100640EF0);
  v5 = __chkstk_darwin(v4);
  v14[1] = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
  __chkstk_darwin(v7);
  v8 = type metadata accessor for TTRAccountsListsViewModel.PinnedLists(0);
  __chkstk_darwin(v8);
  v9 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v9);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a2, (uint64_t)v11, v12);
  v13 = (char *)&loc_100020ED8 + dword_100073C84[swift_getEnumCaseMultiPayload(v11, v9)];
  __asm { BR              X10 }
}

uint64_t sub_100020EE8()
{
  uint64_t v0;

  return sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
}

uint64_t sub_100021A8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  char v17;
  _BYTE v19[24];

  v3 = type metadata accessor for TTRIAccountsListsViewListCell.ListItem(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_10002A750((uint64_t *)&unk_100640EF0);
  __chkstk_darwin(v7);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = sub_10002A750(&qword_100664C60);
  __chkstk_darwin(v10);
  v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = v1 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listItem;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listItem, v19, 0, 0);
  v14 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_100021CA4(v13, (uint64_t)v12);
  sub_100021CA4(a1, v14);
  v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v15((uint64_t)v12, 1, v3) == 1)
  {
    if (v15(v14, 1, v3) == 1)
      return sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_100640EF0);
  }
  else
  {
    sub_100021CA4((uint64_t)v12, (uint64_t)v9);
    if (v15(v14, 1, v3) != 1)
    {
      sub_10001F580(v14, (uint64_t)v6, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
      v17 = sub_1004F6E3C((uint64_t)v9, (uint64_t)v6);
      sub_10001F544((uint64_t)v6, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
      sub_10001F544((uint64_t)v9, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
      result = sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_100640EF0);
      if ((v17 & 1) != 0)
        return result;
      return sub_100021CEC();
    }
    sub_10001F544((uint64_t)v9, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
  }
  sub_1000073A0((uint64_t)v12, &qword_100664C60);
  return sub_100021CEC();
}

uint64_t sub_100021CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_100640EF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100021CEC()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  char v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  void *v35;
  NSString v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  _QWORD *v52;
  uint64_t (*v53)(_QWORD, _QWORD);
  uint64_t v54;
  uint64_t v55;
  void (*v56)(_QWORD);
  id v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  _QWORD *v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  char *v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  char v70;
  void (*v71)(__int128 *);
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  NSString v88;
  char *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t *v92;
  void *v93;
  objc_class *v94;
  Class isa;
  uint64_t v96;
  uint64_t v97;
  Swift::String v98;
  objc_class *v99;
  _QWORD *v100;
  void (*v101)(Class);
  objc_class *v102;
  uint64_t v103;
  void *v104;
  id v105;
  id v106;
  void *v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  id v127;
  id v128;
  id v129;
  id v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  _OWORD v138[3];
  __int128 v139;
  _BYTE v140[48];
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  _OWORD v146[2];
  char v147[24];
  __int128 v148;
  __int128 v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  _OWORD v153[2];
  uint64_t v154;
  char v155;

  v1 = v0;
  v136 = type metadata accessor for AppEntityID(0);
  v134 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136);
  v135 = (char *)&v131 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v131 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750((uint64_t *)&unk_100640EF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRIAccountsListsViewListCell.ListItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (_OWORD *)((char *)&v131 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v15 = (char *)&v131 - v14;
  v16 = (uint64_t)&v1[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listItem];
  swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listItem], v147, 0, 0);
  sub_100021CA4(v16, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100640EF0);
  sub_10001F580((uint64_t)v8, (uint64_t)v15, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
  v18 = (uint64_t)v15;
  v19 = &v1[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityEditingCustomActionName];
  v20 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityEditingCustomActionName
                     + 8];
  *v19 = 0;
  v19[1] = 0;
  swift_bridgeObjectRelease(v20);
  v21 = &v1[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityShareListActionName];
  v22 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityShareListActionName
                     + 8];
  *v21 = 0;
  v21[1] = 0;
  swift_bridgeObjectRelease(v22);
  v23 = &v1[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityShareListActionSFSymbolName];
  v24 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityShareListActionSFSymbolName
                     + 8];
  *v23 = 0;
  v23[1] = 0;
  swift_bridgeObjectRelease(v24);
  v133 = v18;
  sub_100022A08(v18, (uint64_t)v13);
  if (swift_getEnumCaseMultiPayload(v13, v9) == 1)
  {
    sub_10001F580((uint64_t)v13, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
    v25 = v5[v3[9]];
    v26 = *(_QWORD *)&v5[v3[6]];
    if (v25 >= 2 && (v25 == 2 || v26 <= 0))
      v27 = 1;
    else
      v27 = 2;
    v1[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_checkmarkState] = v27;
    sub_1000228BC();
    objc_msgSend(v1, "setEditingAccessoryType:", 0);
    v84 = v5[v3[5]];
    TTRListType.PredefinedSmartListType.longTitle.getter(v84);
    v86 = v85;
    v87 = *(void **)&v1[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_titleLabel];
    v88 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v86);
    objc_msgSend(v87, "setText:", v88);

    sub_100022C28(0, 0);
    sub_100022A94(0, 0xE000000000000000);
    v89 = &v1[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityCount];
    *(_QWORD *)v89 = v26;
    v89[8] = 0;
    v90 = &v1[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityGroupName];
    v91 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityGroupName + 8];
    *v90 = 0;
    v90[1] = 0;
    swift_bridgeObjectRelease(v91);
    v92 = (uint64_t *)&v5[v3[10]];
    v93 = (void *)v92[1];
    if (v93)
    {
      v94 = *(objc_class **)&v1[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_dynamicGlyphImageCache];
      isa = v94;
      if (!v94)
      {
        v96 = *v92;
        v97 = type metadata accessor for TTRIDateIconGenerator(0);
        swift_initStackObject(v97, &v137);
        swift_bridgeObjectRetain(v93);
        v98._countAndFlagsBits = v96;
        v98._object = v93;
        isa = TTRIDateIconGenerator.generateTodaySmartListTemplateIcon(withText:)(v98).super.isa;
        swift_bridgeObjectRelease(v93);
      }
      v99 = v94;
    }
    else
    {
      isa = (Class)TTRListType.PredefinedSmartListType.glyph.getter(v84);
    }
    v100 = *(_QWORD **)&v1[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_badge];
    v101 = *(void (**)(Class))((swift_isaMask & *v100) + 0x140);
    v102 = isa;
    v101(isa);
    v150 = 0;
    v148 = 0u;
    v149 = 0u;
    LOBYTE(v151) = 2;
    (*(void (**)(__int128 *))((swift_isaMask & *v100) + 0x110))(&v148);
    *(_QWORD *)&v138[0] = v84;
    *(_OWORD *)((char *)v138 + 8) = 0u;
    *(_OWORD *)((char *)&v138[1] + 8) = 0u;
    *((_QWORD *)&v138[2] + 1) = 0;
    LOBYTE(v139) = 0x80;
    (*(void (**)(_OWORD *))((swift_isaMask & *v100) + 0x128))(v138);
    v103 = OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_hidePredefinedSmartListGestureRecognizer;
    v104 = *(void **)&v1[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_hidePredefinedSmartListGestureRecognizer];
    if (v104)
    {
      v105 = *(id *)&v1[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_hidePredefinedSmartListGestureRecognizer];
    }
    else
    {
      v106 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v1, "toggleSmartListVisibility:");
      v107 = *(void **)&v1[v103];
      *(_QWORD *)&v1[v103] = v106;
      v105 = v106;

      v104 = 0;
    }
    v108 = v104;
    v109 = objc_msgSend(v1, "containerView");
    objc_msgSend(v109, "addGestureRecognizer:", v105);

    objc_msgSend(v1, "setAccessoryView:", 0);
    v110 = objc_msgSend(v1, "containerView");
    objc_msgSend(v110, "setPreservesSuperviewLayoutMargins:", 1);

    v111 = objc_msgSend(v1, "containerView");
    objc_msgSend(v111, "setEdgesPreservingSuperviewLayoutMargins:", 10);

    v112 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v1, "setSelectedBackgroundView:", v112);

    v113 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v1, "setMultipleSelectionBackgroundView:", v113);

    v114 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityAdditionalLabelAttributes];
    *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityAdditionalLabelAttributes] = _swiftEmptyArrayStorage;

    swift_bridgeObjectRelease(v114);
    sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
    v115 = v133;
  }
  else
  {
    v28 = v13[11];
    v144 = v13[10];
    v145 = v28;
    v146[0] = v13[12];
    *(_OWORD *)((char *)v146 + 10) = *(_OWORD *)((char *)v13 + 202);
    v29 = v13[7];
    *(_OWORD *)&v140[32] = v13[6];
    v141 = v29;
    v30 = v13[9];
    v142 = v13[8];
    v143 = v30;
    v31 = v13[3];
    v138[2] = v13[2];
    v139 = v31;
    v32 = v13[5];
    *(_OWORD *)v140 = v13[4];
    *(_OWORD *)&v140[16] = v32;
    v33 = v13[1];
    v138[0] = *v13;
    v138[1] = v33;
    v1[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_checkmarkState] = 0;
    sub_1000228BC();
    objc_msgSend(v1, "setEditingAccessoryType:", 4);
    v34 = *(_QWORD *)&v138[1];
    v35 = *(void **)&v1[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_titleLabel];
    swift_bridgeObjectRetain(*(_QWORD *)&v138[1]);
    v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v34);
    objc_msgSend(v35, "setText:", v36);

    v37 = v144;
    swift_bridgeObjectRetain(*((_QWORD *)&v144 + 1));
    sub_100022C28(v37, *((uint64_t *)&v37 + 1));
    v38 = *((_QWORD *)&v138[2] + 1);
    v39 = v139;
    swift_bridgeObjectRetain(v139);
    sub_100022A94(v38, v39);
    v40 = &v1[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityCount];
    *(_QWORD *)v40 = *((_QWORD *)&v138[1] + 1);
    v40[8] = 0;
    if ((BYTE2(v143) & 1) != 0)
    {
      v41 = 0;
      v42 = 0;
    }
    else
    {
      v41 = *((_QWORD *)&v146[0] + 1);
      v42 = swift_bridgeObjectRetain(*(_QWORD *)&v146[1]);
    }
    v43 = &v1[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityGroupName];
    v44 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityGroupName + 8];
    *v43 = v41;
    v43[1] = v42;
    swift_bridgeObjectRelease(v44);
    v132 = BYTE8(v146[1]);
    if (BYTE8(v146[1]) == 1)
    {
      v45 = sub_10002A750((uint64_t *)&unk_100654F80);
      v46 = swift_allocObject(v45, 48, 7);
      *(_OWORD *)(v46 + 16) = xmmword_100520250;
      v47 = (uint64_t *)TTRAccesibility.AccountsList.Label.SmartList.unsafeMutableAddressor();
      v49 = *v47;
      v48 = v47[1];
      *(_QWORD *)(v46 + 32) = v49;
      *(_QWORD *)(v46 + 40) = v48;
      v50 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityAdditionalLabelAttributes];
      *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityAdditionalLabelAttributes] = v46;
      swift_bridgeObjectRetain(v48);
    }
    else
    {
      v50 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityAdditionalLabelAttributes];
      *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityAdditionalLabelAttributes] = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease(v50);
    v51 = v142;
    v52 = *(_QWORD **)&v1[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_badge];
    if ((v143 & 1) != 0)
    {
      v53 = *(uint64_t (**)(_QWORD, _QWORD))((swift_isaMask & *v52) + 0x158);
      sub_10002B7A0((void *)v142, *((id *)&v142 + 1), 1);
      swift_bridgeObjectRetain(*((_QWORD *)&v51 + 1));
      v54 = v53(v51, *((_QWORD *)&v51 + 1));
      (*(void (**)(uint64_t, double))((swift_isaMask & *v52) + 0x170))(v54, 16.0);
      v55 = (*(uint64_t (**)(_QWORD, _QWORD))((swift_isaMask & *v52) + 0x390))(v51, *((_QWORD *)&v51 + 1));
    }
    else
    {
      v56 = *(void (**)(_QWORD))((swift_isaMask & *v52) + 0x188);
      v57 = (id)v142;
      v56(0);
      v58 = REMListBadgeEmblem.image.getter(v57);
      (*(void (**)(uint64_t))((swift_isaMask & *v52) + 0x140))(v58);
      v59 = *(_QWORD *)v140;
      v131 = *((_QWORD *)&v139 + 1);
      v60 = v19;
      v61 = v21;
      v62 = v23;
      v63 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v52) + 0x390);
      swift_bridgeObjectRetain(*(_QWORD *)v140);
      v63(v131, v59);
      v23 = v62;
      v21 = v61;
      v19 = v60;
      sub_10002B318((void *)v51, *((id *)&v51 + 1), 0);
    }
    v65 = v135;
    v64 = v136;
    if (v132)
    {
      v66 = TTRListBadgeView.Shape.customSmartListInListRowView.unsafeMutableAddressor(v55);
      v67 = *(_OWORD *)v66;
      v68 = *(_OWORD *)(v66 + 16);
      v69 = *(_QWORD *)(v66 + 32);
      v70 = *(_BYTE *)(v66 + 40);
    }
    else
    {
      v69 = 0;
      v67 = 0uLL;
      v70 = 2;
      v68 = 0uLL;
    }
    v153[0] = v67;
    v153[1] = v68;
    v154 = v69;
    v155 = v70;
    (*(void (**)(_OWORD *))((swift_isaMask & *v52) + 0x110))(v153);
    v148 = *(_OWORD *)&v140[8];
    v149 = *(_OWORD *)&v140[24];
    v150 = *(_QWORD *)&v140[40];
    v151 = v141;
    v152 = BYTE8(v141);
    v71 = *(void (**)(__int128 *))((swift_isaMask & *v52) + 0x128);
    sub_10002B764(*(void **)&v140[8], *(uint64_t *)&v140[16], *(uint64_t *)&v140[24], *(uint64_t *)&v140[32], *(uint64_t *)&v140[40], v141, SBYTE8(v141));
    v71(&v148);
    v72 = (*(uint64_t (**)(_QWORD))((swift_isaMask & *v52) + 0x3C0))(0);
    v73 = (uint64_t *)TTRAccesibility.AccountsList.Action.ListInfo.unsafeMutableAddressor(v72);
    v75 = *v73;
    v74 = v73[1];
    v76 = v19[1];
    *v19 = v75;
    v19[1] = v74;
    swift_bridgeObjectRetain(v74);
    v77 = swift_bridgeObjectRelease(v76);
    if (v132)
    {
      v78 = v21[1];
      *v21 = 0;
      v21[1] = 0;
      swift_bridgeObjectRelease(v78);
      v79 = v23[1];
      *v23 = 0;
      v23[1] = 0;
    }
    else if (BYTE4(v143) == 1)
    {
      v80 = (uint64_t *)TTRAccesibility.AccountsList.Action.ManageSharedList.unsafeMutableAddressor(v77);
      v82 = *v80;
      v81 = v80[1];
      v83 = v21[1];
      *v21 = v82;
      v21[1] = v81;
      swift_bridgeObjectRetain(v81);
      swift_bridgeObjectRelease(v83);
      v79 = v23[1];
      *v23 = 0xD000000000000022;
      v23[1] = 0x8000000100561F10;
    }
    else
    {
      v116 = (uint64_t *)TTRAccesibility.AccountsList.Action.ShareList.unsafeMutableAddressor(v77);
      v118 = *v116;
      v117 = v116[1];
      v119 = v21[1];
      *v21 = v118;
      v21[1] = v117;
      swift_bridgeObjectRetain(v117);
      swift_bridgeObjectRelease(v119);
      v79 = v23[1];
      *v23 = 0xD000000000000013;
      v23[1] = 0x8000000100561F40;
    }
    v120 = v64;
    v121 = v133;
    v122 = v134;
    swift_bridgeObjectRelease(v79);
    v123 = *(void **)&v138[0];
    v124 = type metadata accessor for ListEntity(0);
    AppEntityID.init(objectID:)(v123);
    v125 = sub_1000175C8((unint64_t *)&unk_100646690, (uint64_t (*)(uint64_t))&type metadata accessor for ListEntity, (uint64_t)&protocol conformance descriptor for ListEntity);
    UIView.setAssociatedAppEntity<A>(entityType:identifier:)(v124, v65, v124, v125);
    (*(void (**)(char *, uint64_t))(v122 + 8))(v65, v120);
    v126 = *(void **)&v1[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_hidePredefinedSmartListGestureRecognizer];
    if (v126)
    {
      v127 = v126;
      v128 = objc_msgSend(v1, "containerView");
      objc_msgSend(v128, "removeGestureRecognizer:", v127);

    }
    objc_msgSend(v1, "setAccessoryView:", *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_customAccessoryView]);
    v129 = objc_msgSend(v1, "containerView");
    objc_msgSend(v129, "setPreservesSuperviewLayoutMargins:", 0);

    v130 = objc_msgSend(v1, "containerView");
    objc_msgSend(v130, "setEdgesPreservingSuperviewLayoutMargins:", 0);

    objc_msgSend(v1, "setSelectedBackgroundView:", 0);
    objc_msgSend(v1, "setMultipleSelectionBackgroundView:", 0);
    sub_100075FE8((uint64_t)v138);
    v115 = v121;
  }
  return sub_10001F544(v115, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
}

void sub_1000228BC()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_checkmarkState))
  {
    v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_checkmarkButton);
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_checkmarkState) == 1)
    {
      v2 = v1;
      sub_100022D8C(v1);
      objc_msgSend(v2, "setSelected:", 0);
      v5 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
      objc_msgSend(v2, "setTintColor:", v5);

    }
    else
    {
      v4 = v1;
      sub_100022D8C(v1);
      objc_msgSend(v4, "setSelected:", 1);
      objc_msgSend(v4, "setTintColor:", 0);
    }
  }
  else
  {
    v3 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_checkmarkButton);
    objc_msgSend(v3, "setSelected:", 0);
    objc_msgSend(v3, "setTintColor:", 0);
    sub_100022D8C(0);
  }
}

uint64_t sub_100022A08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRIAccountsListsViewListCell.ListItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100022A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_100640EF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_100022A94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v15;
  char *v16;
  void *v17;
  char *v18;
  id v19;
  NSString v20;

  v3 = OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_customAccessoryView;
  v4 = *(char **)(v2 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_customAccessoryView);
  v5 = *(void **)&v4[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_countLabel];
  if (v5)
  {
    v8 = v4;
    v9 = objc_msgSend(v5, "text");
    if (v9)
    {
      v10 = v9;
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v13 = v12;

    }
    else
    {

      v11 = 0;
      v13 = 0xE000000000000000;
    }
    if (v11 == a1 && v13 == a2)
    {
      swift_bridgeObjectRelease_n(a2, 2);
      return;
    }
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, a1, a2, 0);
    swift_bridgeObjectRelease(v13);
    if ((v15 & 1) != 0)
    {
      swift_bridgeObjectRelease(a2);
      return;
    }
    v16 = *(char **)(v2 + v3);
    v17 = *(void **)&v16[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_countLabel];
    if (v17)
    {
      v18 = v16;
      v19 = v17;
      v20 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(a2);
      objc_msgSend(v19, "setText:", v20);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_100022C28(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  NSString v12;
  id result;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v4 = *(void **)&v2[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_subtitleLabel];
  v5 = objc_msgSend(v4, "text");
  if (v5)
  {
    v6 = v5;
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v9 = v8;

    swift_bridgeObjectRelease(v9);
    v10 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0)
      v10 = v7 & 0xFFFFFFFFFFFFLL;
    v11 = v10 == 0;
    if (a2)
      goto LABEL_5;
  }
  else
  {
    v11 = 1;
    if (a2)
    {
LABEL_5:
      v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(a2);
      goto LABEL_8;
    }
  }
  v12 = 0;
LABEL_8:
  objc_msgSend(v4, "setText:", v12);

  result = objc_msgSend(v4, "text");
  if (!result)
  {
    if (v11)
      return result;
LABEL_14:
    v2[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_needsUpdateGridSubviewRows] = 1;
    return objc_msgSend(v2, "setNeedsLayout");
  }
  v14 = result;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
  v17 = v16;

  result = (id)swift_bridgeObjectRelease(v17);
  v18 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0)
    v18 = v15 & 0xFFFFFFFFFFFFLL;
  if (((v11 ^ (v18 != 0)) & 1) == 0)
    goto LABEL_14;
  return result;
}

void sub_100022D8C(void *a1)
{
  _BYTE *v1;
  id v3;
  id v4;
  BOOL v5;
  id v6;

  v3 = *(id *)&v1[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_leadingControl];
  *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_leadingControl] = a1;
  v4 = a1;
  v6 = v4;
  if (!a1)
  {
    if (!v3)
      goto LABEL_7;
    goto LABEL_6;
  }
  if (v3)
    v5 = v4 == v3;
  else
    v5 = 0;
  if (!v5)
  {
LABEL_6:
    v1[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_needsUpdateGridSubviewRows] = 1;
    objc_msgSend(v1, "setNeedsLayout");
  }
LABEL_7:

}

double sub_100022E10(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(char *, char *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  double v15;
  uint64_t v17;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v13 = a3;
  v14 = a1;
  v15 = sub_100022EDC((uint64_t)v12, a5);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v15;
}

double sub_100022EDC(uint64_t a1, void (*a2)(char *, char *))
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _QWORD *v10;
  CGFloat v11;
  uint64_t v12;
  double v13;

  v5 = swift_isaMask & *v2;
  v12 = sub_100022F8C(&qword_100645F28, (uint64_t (*)(uint64_t))sub_100022FD4);
  v11 = UITableViewAutomaticDimension;
  v10 = v2;
  v7 = type metadata accessor for TTRIAnyTreeViewDelegate(0, *(_QWORD *)(v5 + 80), *(_QWORD *)(v5 + 88), v6);
  sub_100023068(a1, (uint64_t)&v12, (uint64_t)&v11, a2, (uint64_t)&v9, v7, (uint64_t)&type metadata for CGFloat, (uint64_t)&v13);
  swift_release(v12);
  return v13;
}

uint64_t sub_100022F8C(_QWORD *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v3 = *(_QWORD *)(v2 + *a1);
  if (v3)
  {
    v5 = swift_retain(v3);
    if ((a2(v5) & 1) == 0)
    {
      swift_release(v3);
      return 0;
    }
  }
  return v3;
}

uint64_t sub_100022FD4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

BOOL sub_100022FF8()
{
  uint64_t v0;

  return sub_100023014(v0);
}

BOOL sub_100023014(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  v3 = Strong;
  if (Strong)

  return v3 != 0;
}

uint64_t sub_100023068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(char *, char *)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  _QWORD *v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  char *v37;
  __n128 v38;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49[24];

  v46 = a3;
  v47 = a7;
  v43 = a5;
  v44 = a4;
  v45 = a1;
  v48 = a8;
  v11 = swift_isaMask & *v8;
  v12 = *(_QWORD *)(v11 + 0x50);
  v42 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(a1);
  v41 = (char *)&v40 - v13;
  v15 = type metadata accessor for Optional(0, v14);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v40 - v18;
  v20 = *(_QWORD *)(a6 - 8);
  __chkstk_darwin(v17);
  v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, a2, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, a6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  else
  {
    v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v20 + 32))(v22, v19, a6);
    v27 = sub_1000232AC(v23, v24, v25, v26);
    v29 = v28;
    v31 = v30;
    v33 = sub_10002B364(v45, v27, v28, v30, v32 & 1, v12, *(_QWORD *)(v11 + 88));
    swift_bridgeObjectRelease(v31);
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease(v27);
    if (v33)
    {
      v34 = v33 + *(_QWORD *)(*(_QWORD *)v33 + 144);
      v35 = swift_beginAccess(v34, v49, 0, 0);
      v37 = v41;
      v36 = v42;
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v42 + 16))(v41, v34, v12, v35);
      v44(v37, v22);
      v38 = swift_release(v33);
      (*(void (**)(char *, uint64_t, __n128))(v36 + 8))(v37, v12, v38);
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, a6);
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, a6);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v48, v46);
}

uint64_t sub_1000232AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = v4;
  if (*((_BYTE *)v4 + qword_100645F38) == 1)
  {
    if (qword_10063D3C8 != -1)
      swift_once(&qword_10063D3C8, sub_1000E35C8);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100012DC4(v6, (uint64_t)qword_100645EC0);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.fault.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Attempting to read sectionMetadata while it is being modified", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

  }
  v11 = *(_QWORD *)((char *)v5 + qword_100645F30);
  v12 = *(_QWORD *)((char *)v5 + qword_100645F30 + 8);
  v13 = *(_QWORD *)((char *)v5 + qword_100645F30 + 16);
  if (v11)
    v14 = *(_QWORD *)((char *)v5 + qword_100645F30);
  else
    v14 = sub_100023884(v5, a2, a3, a4);
  sub_10002340C(v11, v12, v13);
  return v14;
}

uint64_t sub_10002340C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    ((void (*)(void))swift_bridgeObjectRetain)();
    swift_bridgeObjectRetain(a2);
    return swift_bridgeObjectRetain(a3);
  }
  return result;
}

uint64_t type metadata accessor for TTRIAnyTreeViewDelegate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIAnyTreeViewDelegate);
}

void sub_100023450(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;

  sub_100023470(a1, *(_QWORD *)(v2 + 16), (double (*)(void *, uint64_t))sub_1000234D8, a2);
}

void sub_100023470(uint64_t a1@<X0>, uint64_t a2@<X2>, double (*a3)(void *, uint64_t)@<X3>, double *a4@<X8>)
{
  void *Strong;
  double v8;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(a2 + qword_100645EF8);
  v8 = a3(Strong, a1);

  *a4 = v8;
}

uint64_t sub_1000234D8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

void sub_1000234F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100023510(a1, a2, v2);
}

void sub_100023510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *Strong;
  _BYTE v5[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)

  else
    __break(1u);
}

void sub_100023574(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;

  sub_100023470(a1, *(_QWORD *)(v2 + 16), (double (*)(void *, uint64_t))sub_100020654, a2);
}

void sub_100023594(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  sub_1000235B4(a1, *(_QWORD *)(v2 + 16), (uint64_t (*)(void *, uint64_t))sub_100023618, a2);
}

void sub_1000235B4(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(void *, uint64_t)@<X3>, _BYTE *a4@<X8>)
{
  void *Strong;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(a2 + qword_100645EF8);
  LOBYTE(a3) = a3(Strong, a1);

  *a4 = a3 & 1;
}

uint64_t sub_100023618()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))() & 1;
}

uint64_t sub_10002363C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100023644(a1, a2, v2);
}

uint64_t sub_100023644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  char *v9;
  _BYTE v11[24];

  v5 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 216;
  a3 += 16;
  swift_beginAccess(a3, v11, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a3);
  if (result)
  {
    sub_10002B1E8(a2, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v9 = (char *)&loc_1000236FC + *((int *)qword_1002C0BC8 + swift_getEnumCaseMultiPayload(v7, v5));
    __asm { BR              X10 }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000237E8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_100023808()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 48))();
}

void sub_100023828(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100023830(a1, a2, v2);
}

void sub_100023830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *Strong;
  _BYTE v5[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)

  else
    __break(1u);
}

uint64_t sub_100023884(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = type metadata accessor for TTRITreeViewNodeReuseQueue(0, *(_QWORD *)((swift_isaMask & *a1) + 0x50), *(_QWORD *)((swift_isaMask & *a1) + 0x58), a4);
  v9 = sub_100023974(v5, v6, v7, v8);
  v10 = sub_100023B88(v9);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  swift_release(v9);
  v17 = (char *)a1 + qword_100645F30;
  v18 = *(_QWORD *)((char *)a1 + qword_100645F30);
  v19 = *((_QWORD *)v17 + 1);
  v20 = *((_QWORD *)v17 + 2);
  *(_QWORD *)v17 = v10;
  *((_QWORD *)v17 + 1) = v12;
  *((_QWORD *)v17 + 2) = v14;
  v17[24] = v16 & 1;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v14);
  sub_1000072F0(v18, v19, v20);
  return v10;
}

uint64_t type metadata accessor for TTRITreeViewNodeReuseQueue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRITreeViewNodeReuseQueue);
}

uint64_t sub_100023974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t WitnessTable;
  uint64_t v9;
  uint64_t v11;

  v5 = type metadata accessor for TTRITreeViewNode(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4);
  v6 = static Array._allocateUninitialized(_:)(0, v5);
  v11 = v6;
  v7 = type metadata accessor for Array(0, v5);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v7);
  swift_allocObject(v4, 24, 7);
  v9 = sub_100023A18((uint64_t)&v11, v7, WitnessTable);
  swift_bridgeObjectRelease(v6);
  return v9;
}

uint64_t sub_100023A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t AssociatedConformanceWitness;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a3, a2, &protocol requirements base descriptor for Sequence, &associated type descriptor for Sequence.Iterator);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = __chkstk_darwin(AssociatedTypeWitness);
  v12 = (char *)&v20 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v16(v14, a1, a2);
  *(_QWORD *)(v4 + 16) = Sequence.reversed()(a2, a3);
  v16(v14, a1, a2);
  dispatch thunk of Sequence.makeIterator()(a2);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a3, a2, AssociatedTypeWitness, &protocol requirements base descriptor for Sequence, &associated conformance descriptor for Sequence.Sequence.Iterator: IteratorProtocol);
  while (1)
  {
    dispatch thunk of IteratorProtocol.next()(AssociatedTypeWitness, AssociatedConformanceWitness);
    v18 = v21;
    if (!v21)
      break;
    sub_10019D788();
    swift_release(v18);
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, AssociatedTypeWitness);
  return v4;
}

uint64_t sub_100023B88(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  void *Strong;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v2 = v1;
  v4 = swift_isaMask & *v1;
  v5 = *(_QWORD *)(v4 + 80);
  v6 = type metadata accessor for Optional(0, v5);
  v30 = *(_QWORD *)(v6 - 8);
  v31 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - v7;
  v9 = *(_QWORD *)(v4 + 88);
  v12 = sub_100023D60(v5, v9, v10, v11);
  v32 = v12;
  v33 = v13;
  v34 = v14;
  v35 = v15 & 1;
  v16 = sub_100022F8C(&qword_100645F10, (uint64_t (*)(uint64_t))sub_100022FD4);
  if (!v16)
    return v12;
  v17 = v16;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong((char *)v2 + qword_100645EF8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v8, 1, 1, v5);
  v19 = sub_1000237E8();

  result = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v8, v31);
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v19)
    {
      v21 = 0;
      do
      {
        v22 = v21 + 1;
        sub_100024284(v21, a1);
        v24 = v23;
        v26 = v25;
        v28 = type metadata accessor for TTRITreeViewSectionsMetadata(0, v5, v9, v27);
        sub_10002402C(v24, v26, v28, v29);
        swift_bridgeObjectRelease(v26);
        swift_release(v24);
        v21 = v22;
      }
      while (v19 != v22);
    }
    swift_release(v17);
    return v32;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for TTRITreeViewSectionsMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRITreeViewSectionsMetadata);
}

uint64_t sub_100023D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t WitnessTable;
  uint64_t v12;
  uint64_t AssociatedConformanceWitness;

  v6 = type metadata accessor for TTRITreeViewSectionsMetadata.Section(0, a1, a2, a4);
  v7 = Array.init()(v6);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a2, a1, &unk_1005987EC, &unk_1005987FC);
  v10 = type metadata accessor for TTRITreeViewNode(255, a1, a2, v9);
  WitnessTable = swift_getWitnessTable(&unk_1005276C0, v10);
  v12 = type metadata accessor for Set(0, v10, WitnessTable);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a2, a1, AssociatedTypeWitness, &unk_1005987EC, &unk_1005987F4);
  Dictionary.init()(AssociatedTypeWitness, v12, AssociatedConformanceWitness);
  Dictionary.init()(v10, &type metadata for Int, WitnessTable);
  return v7;
}

uint64_t sub_100023E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t WitnessTable;
  _QWORD v23[2];

  v23[0] = a1;
  v23[1] = a2;
  v8 = *(_QWORD *)(a4 + 16);
  v9 = *(_QWORD *)(a4 + 24);
  v10 = type metadata accessor for TTRITreeViewSectionsMetadata.Section(255, v8, v9, a4);
  v11 = type metadata accessor for Array(0, v10);
  swift_retain(a1);
  swift_bridgeObjectRetain(a2);
  Array.insert(_:at:)(v23, a3, v11);
  v23[0] = a3;
  v12 = sub_10002A750(&qword_100644720);
  v13 = sub_100023FEC(&qword_100644728, &qword_100644720, (uint64_t)&protocol conformance descriptor for PartialRangeFrom<A>);
  sub_10002408C((uint64_t)v23, 1, a4, v12, v13);
  v14 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v15 = swift_allocObject(v14, 40, 7);
  v16 = static Array._adoptStorage(_:count:)(v15, 1);
  *v17 = a1;
  v19 = type metadata accessor for TTRITreeViewNode(0, v8, v9, v18);
  v20 = type metadata accessor for Array(0, v19);
  v23[0] = v16;
  swift_retain(a1);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v20);
  sub_100028F08((uint64_t)v23, a3, a4, v20, WitnessTable);
  swift_bridgeObjectRelease(v16);
  v23[0] = a2;
  return sub_100028F08((uint64_t)v23, a3, a4, v20, WitnessTable);
}

uint64_t sub_100023FEC(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_10002CA5C(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002402C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = *v4;
  v9 = type metadata accessor for TTRITreeViewSectionsMetadata.Section(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  v10 = Array.count.getter(v8, v9);
  return sub_100023E68(a1, a2, v10, a3);
}

uint64_t sub_10002408C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t WitnessTable;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v9 = *(_QWORD *)(v5 + 16);
  v28 = v9 + 64;
  v10 = 1 << *(_BYTE *)(v9 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v9 + 64);
  v27 = (unint64_t)(v10 + 63) >> 6;
  result = swift_bridgeObjectRetain(v9);
  v14 = 0;
  if (v12)
    goto LABEL_6;
LABEL_7:
  v17 = v14 + 1;
  if (!__OFADD__(v14, 1))
  {
    if (v17 < v27)
    {
      v18 = *(_QWORD *)(v28 + 8 * v17);
      ++v14;
      if (v18)
        goto LABEL_18;
      v14 = v17 + 1;
      if (v17 + 1 >= v27)
        return swift_release(v9);
      v18 = *(_QWORD *)(v28 + 8 * v14);
      if (v18)
      {
LABEL_18:
        v12 = (v18 - 1) & v18;
        for (i = __clz(__rbit64(v18)) + (v14 << 6); ; i = v15 | (v14 << 6))
        {
          v20 = 8 * i;
          v21 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + v20);
          v22 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + v20);
          v31 = v22;
          swift_retain(v21);
          result = dispatch thunk of RangeExpression.contains(_:)(&v31, a4, a5);
          if ((result & 1) != 0)
          {
            if (__OFADD__(v22, a2))
            {
              __break(1u);
              goto LABEL_25;
            }
            v30 = v21;
            v31 = v22 + a2;
            v32 = 0;
            v24 = type metadata accessor for TTRITreeViewNode(255, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v23);
            WitnessTable = swift_getWitnessTable(&unk_1005276C0, v24);
            v26 = type metadata accessor for Dictionary(0, v24, &type metadata for Int, WitnessTable);
            result = Dictionary.subscript.setter(&v31, &v30, v26);
            if (!v12)
              goto LABEL_7;
          }
          else
          {
            result = swift_release(v21);
            if (!v12)
              goto LABEL_7;
          }
LABEL_6:
          v15 = __clz(__rbit64(v12));
          v12 &= v12 - 1;
        }
      }
      v19 = v17 + 2;
      if (v19 < v27)
      {
        v18 = *(_QWORD *)(v28 + 8 * v19);
        if (v18)
        {
          v14 = v19;
          goto LABEL_18;
        }
        while (1)
        {
          v14 = v19 + 1;
          if (__OFADD__(v19, 1))
            goto LABEL_26;
          if (v14 >= v27)
            return swift_release(v9);
          v18 = *(_QWORD *)(v28 + 8 * v14);
          ++v19;
          if (v18)
            goto LABEL_18;
        }
      }
    }
    return swift_release(v9);
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void sub_100024284(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *Strong;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v29 = a1;
  v30 = a2;
  v3 = swift_isaMask & *v2;
  v4 = type metadata accessor for Logger(0);
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v3;
  v7 = *(_QWORD *)(v3 + 80);
  v8 = type metadata accessor for Optional(0, v7);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v27 - v11;
  v13 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v10);
  v15 = (char *)&v27 - v14;
  v16 = sub_100022F8C(&qword_100645F10, (uint64_t (*)(uint64_t))sub_100022FD4);
  if (v16)
  {
    v17 = v16;
    Strong = (void *)swift_unknownObjectUnownedLoadStrong((char *)v2 + qword_100645EF8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v12, 1, 1, v7);
    sub_1000249CC();

    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    v19 = sub_100024A90((uint64_t)v15, 0, v30);
    v21 = type metadata accessor for TTRITreeViewNode(0, v7, *(_QWORD *)(v31 + 88), v20);
    v32 = Array.init()(v21);
    sub_1000244E0(&v32);
    swift_release(v17);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v7);
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v19);
  }
  else
  {
    v23 = v27;
    v22 = v28;
    if (qword_10063D3C8 != -1)
      swift_once(&qword_10063D3C8, sub_1000E35C8);
    v24 = sub_100012DC4(v22, (uint64_t)qword_100645EC0);
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v6, v24, v22);
    v25 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    v26 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    sub_1002EB23C((uint64_t)"Need non-nil dataSource here", 28, 2uLL, v25, v26);
    __break(1u);
  }
}

uint64_t sub_1000244E0(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Bool IsNativeType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[24];

  v2 = v1;
  v4 = *v1;
  result = Array.count.getter(*a1, *v1);
  v6 = v1[3];
  if (*((_BYTE *)v1 + 32))
    v6 = -1;
  v7 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_18;
  }
  v8 = result;
  if (*((_BYTE *)v1 + 72) != 2)
    goto LABEL_15;
  swift_beginAccess(v1 + 8, v18, 0, 0);
  v9 = v1[8];
  v10 = swift_bridgeObjectRetain(v9);
  if (!Array.endIndex.getter(v10, v4))
    goto LABEL_14;
  v11 = 4;
  while (1)
  {
    v12 = v11 - 4;
    IsNativeType = Array._hoistableIsNativeTypeChecked()();
    Array._checkSubscript(_:wasNativeTypeChecked:)(v11 - 4, IsNativeType, v9, v4);
    if (!IsNativeType)
      break;
    v14 = *(_QWORD *)(v9 + 8 * v11);
    swift_retain(v14);
    v15 = v11 - 3;
    if (__OFADD__(v12, 1))
      goto LABEL_13;
LABEL_9:
    *(_QWORD *)(v14 + 24) = v7;
    *(_BYTE *)(v14 + 32) = 0;
    v17 = v14;
    v16 = type metadata accessor for Array(0, v4);
    swift_retain(v14);
    Array.append(_:)(&v17, v16);
    sub_1000244E0(a1);
    swift_release(v14);
    ++v11;
    if (v15 == Array.endIndex.getter(v9, v4))
      goto LABEL_14;
  }
  v14 = _ArrayBuffer._getElementSlowPath(_:)(v11 - 4, v9, v4);
  v15 = v11 - 3;
  if (!__OFADD__(v12, 1))
    goto LABEL_9;
LABEL_13:
  __break(1u);
LABEL_14:
  swift_bridgeObjectRelease(v9);
LABEL_15:
  result = Array.count.getter(*a1, v4);
  if (!__OFSUB__(result, v8))
  {
    v2[5] = result - v8;
    *((_BYTE *)v2 + 48) = 0;
    return result;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_100024684(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *Strong;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  void (*v31)(char *, uint64_t);
  char *v32;
  void (*v33)(char *, _QWORD, uint64_t, uint64_t);
  void *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  void (*v43)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  Swift::Int v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55[24];

  v3 = v2;
  v50 = a2;
  v5 = swift_isaMask & *v2;
  v6 = *(_QWORD *)(v5 + 0x50);
  v52 = type metadata accessor for Optional(0, v6);
  v48 = *(_QWORD *)(v52 - 8);
  v7 = __chkstk_darwin(v52);
  v9 = (char *)&v40 - v8;
  v10 = *(_QWORD *)(v6 - 8);
  v11 = __chkstk_darwin(v7);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v40 - v14;
  v16 = *(_QWORD *)(*(_QWORD *)a1 + 144);
  v49 = a1;
  v17 = a1 + v16;
  swift_beginAccess(v17, v55, 0, 0);
  v18 = v10;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v19(v15, v17, v6);
  v20 = sub_100022F8C(&qword_100645F10, (uint64_t (*)(uint64_t))sub_100022FD4);
  if (v20)
  {
    v22 = v20;
    v51 = v15;
    v46 = v3;
    v41 = (char *)v3 + qword_100645EF8;
    Strong = (void *)swift_unknownObjectUnownedLoadStrong((char *)v3 + qword_100645EF8);
    v19(v9, v17, v6);
    v43 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56);
    v43(v9, 0, 1, v6);
    v24 = sub_1000237E8();

    v42 = *(void (**)(char *, uint64_t))(v48 + 8);
    v42(v9, v52);
    v48 = v24;
    v26 = v24 < 1;
    v27 = v22;
    if (v26)
    {
      v38 = type metadata accessor for TTRITreeViewNode(0, v6, *(_QWORD *)(v5 + 88), v25);
      v36 = static Array._allocateUninitialized(_:)(0, v38);
      swift_release(v27);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v51, v6);
    }
    else
    {
      v28 = type metadata accessor for TTRITreeViewNode(0, v6, *(_QWORD *)(v5 + 88), v25);
      v54 = Array.init()(v28);
      v45 = type metadata accessor for Array(0, v28);
      Array.reserveCapacity(_:)(v48);
      v29 = 0;
      v44 = v18;
      v47 = v27;
      v30 = (void (*)(char *, char *, uint64_t))v19;
      v32 = v41;
      v31 = v42;
      v33 = v43;
      do
      {
        v34 = (void *)swift_unknownObjectUnownedLoadStrong(v32);
        v30(v9, v51, v6);
        v33(v9, 0, 1, v6);
        sub_1000249CC();

        v31(v9, v52);
        v53 = sub_100024A90(v13, v49, v50);
        Array.append(_:)(&v53, v45);
        v35 = *(void (**)(char *, uint64_t))(v44 + 8);
        v35(v13, v6);
        ++v29;
      }
      while (v48 != v29);
      v35(v51, v6);
      swift_release(v47);
      return v54;
    }
  }
  else
  {
    v37 = type metadata accessor for TTRITreeViewNode(0, v6, *(_QWORD *)(v5 + 88), v21);
    v36 = static Array._allocateUninitialized(_:)(0, v37);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v6);
  }
  return v36;
}

uint64_t sub_1000249CC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t sub_1000249EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1000249F4(a1, a2, a3, v3);
}

uint64_t sub_1000249F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t result;
  void *v8;
  uint64_t v9;
  _BYTE v10[24];

  v6 = a4 + 16;
  swift_beginAccess(a4 + 16, v10, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v6);
  if (result)
  {
    v8 = (void *)result;
    v9 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel);
    swift_retain(v9);
    TTRAccountsListsViewModel.child(_:of:)(a2, a3);

    return swift_release(v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t *sub_100024A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *Strong;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char v34[24];
  char v35[24];

  v4 = v3;
  v9 = *(_QWORD *)((swift_isaMask & *v3) + 0x50);
  v8 = *(_QWORD *)((swift_isaMask & *v3) + 0x58);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v8, v9, &unk_1005987EC, &unk_1005987FC);
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v13 = (char *)&v30 - v12;
  v14 = sub_100022F8C(&qword_100645F10, (uint64_t (*)(uint64_t))sub_100022FD4);
  if (v14)
  {
    v15 = v14;
    v32 = a2;
    v33 = a3;
    Strong = (void *)swift_unknownObjectUnownedLoadStrong((char *)v4 + qword_100645EF8);
    v17 = sub_100024CC4();
    swift_release(v15);

    if ((v17 & 1) != 0)
    {
      v18 = (_QWORD *)((char *)v4 + qword_100645F48);
      swift_beginAccess((char *)v4 + qword_100645F48, v34, 0, 0);
      v19 = *v18;
      v20 = v18[1];
      v31 = *(void (**)(uint64_t, uint64_t))(v8 + 24);
      swift_bridgeObjectRetain(v19);
      swift_bridgeObjectRetain(v20);
      v31(v9, v8);
      LOBYTE(v18) = sub_100024E60((uint64_t)v13, v19, v20, v9, v8);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v19);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
      a2 = v32;
      v21 = v33;
      if ((v18 & 1) == 0)
      {
        v23 = sub_100492BF0(a1, v32, 2);
        v26 = sub_100024684((uint64_t)v23, v21);
        goto LABEL_8;
      }
      v22 = 1;
    }
    else
    {
      v22 = 0;
      a2 = v32;
    }
  }
  else
  {
    v22 = 0;
  }
  v23 = sub_100492BF0(a1, a2, v22);
  v25 = type metadata accessor for TTRITreeViewNode(0, v9, v8, v24);
  v26 = static Array._allocateUninitialized(_:)(0, v25);
LABEL_8:
  v27 = v26;
  swift_beginAccess(v23 + 8, v35, 1, 0);
  v28 = v23[8];
  v23[8] = v27;
  swift_bridgeObjectRelease(v28);
  return v23;
}

uint64_t sub_100024CC4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 64))() & 1;
}

uint64_t sub_100024CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100024CF0(a1, a2, v2);
}

uint64_t sub_100024CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  void *v9;
  uint64_t v10;
  _BYTE v12[24];

  v5 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a3 += 16;
  swift_beginAccess(a3, v12, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a3);
  if (result)
  {
    v9 = (void *)result;
    sub_10002B1E8(a2, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v10 = (0xAC9u >> swift_getEnumCaseMultiPayload(v7, v5)) & 1;
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);

    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100024DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100024DD8(a1, a2, v2);
}

uint64_t sub_100024DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t result;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v9, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v4);
  if (result)
  {
    v6 = (void *)result;
    v7 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel);
    swift_retain(v7);
    v8 = TTRAccountsListsViewModel.numberOfChildren(of:)(a2);

    swift_release(v7);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100024E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t AssociatedConformanceWitness;
  char v15;
  uint64_t v17;

  v6 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a5, a4, &unk_1005987EC, &unk_1005987FC);
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v13 = (char *)&v17 - v12;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a5, v6, AssociatedTypeWitness, &unk_1005987EC, &unk_1005987F4);
  LOBYTE(v6) = Set.contains(_:)(a1, a2, AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, AssociatedTypeWitness);
  if ((v6 & 1) != 0)
    v15 = Set.contains(_:)(v13, a3, AssociatedTypeWitness, AssociatedConformanceWitness) ^ 1;
  else
    v15 = 0;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
  return v15 & 1;
}

void sub_100024F84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002BAA28(a1, a2, v2);
}

void sub_100024F90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100024FA8(a1, a2, v2);
}

void sub_100024FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *Strong;
  _BYTE v5[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)

  else
    __break(1u);
}

uint64_t sub_100024FF8(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v17;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v13 = a3;
  v14 = a4;
  v15 = a1;
  sub_1000250C0(v14, (uint64_t)v12);

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

double sub_1000250C0(void *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  id v38;
  char v39;
  void *Strong;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  void *v52;
  _OWORD v53[2];
  uint64_t v54;
  _QWORD v55[4];
  char v56[24];

  v3 = v2;
  v52 = a1;
  v5 = *(_QWORD *)((swift_isaMask & *v2) + 0x50);
  v51 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(a1);
  v50 = (char *)&v49 - v6;
  v8 = *(_QWORD *)(v7 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v8, v5, &unk_1005987EC, &unk_1005987FC);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = __chkstk_darwin(AssociatedTypeWitness);
  v13 = (char *)&v49 - v12;
  v17 = sub_1000232AC(v11, v14, v15, v16);
  v19 = v18;
  v21 = v20;
  v23 = a2;
  v24 = v5;
  v25 = sub_10002B364(v23, v17, v18, v20, v22 & 1, v5, v8);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v17);
  if (v25)
  {
    v27 = (_QWORD *)((char *)v3 + qword_100645F50);
    swift_beginAccess((char *)v3 + qword_100645F50, v56, 0, 0);
    v28 = *v27;
    v29 = swift_bridgeObjectRetain(*v27);
    sub_100029148(v29);
    v49 = v24;
    v30 = sub_100025434((uint64_t)v13, v28, v24, v8);
    swift_bridgeObjectRelease(v28);
    v31 = *(void (**)(char *, uint64_t))(v10 + 8);
    v31(v13, AssociatedTypeWitness);
    if ((v30 & 1) != 0 && (v32 = sub_100022F8C(&qword_100645F18, (uint64_t (*)(uint64_t))sub_10002F988)) != 0)
    {
      v33 = v32;
      v34 = sub_1000EC330(v52, v25);
      sub_100029148(v34);
      swift_beginAccess(v27, v53, 33, 0);
      v36 = type metadata accessor for TTRITreeViewSoftReloadContext(0, v49, v8, v35);
      sub_100020644((uint64_t)v13, v36);
      swift_endAccess(v53);
      v37 = swift_release(v33);
      ((void (*)(char *, uint64_t, __n128))v31)(v13, AssociatedTypeWitness, v37);
    }
    else
    {
      v55[3] = sub_100005ED8(0, (unint64_t *)&qword_1006462D0, UITableViewCell_ptr);
      v54 = 0;
      v55[0] = v52;
      memset(v53, 0, sizeof(v53));
      v38 = v52;
      v39 = sub_1000288AC((uint64_t)v55, v25, (uint64_t)v53);
      sub_1000073A0((uint64_t)v53, (uint64_t *)&unk_1006462D8);
      sub_1000073A0((uint64_t)v55, &qword_100640E50);
      if ((v39 & 1) == 0)
        goto LABEL_7;
    }
    Strong = (void *)swift_unknownObjectUnownedLoadStrong((char *)v3 + qword_100645EF8);
    sub_10043C180();

LABEL_7:
    v41 = sub_100022F8C(&qword_100645F28, (uint64_t (*)(uint64_t))sub_100022FD4);
    if (v41)
    {
      v42 = v41;
      v43 = (void *)swift_unknownObjectUnownedLoadStrong((char *)v3 + qword_100645EF8);
      v44 = v25 + *(_QWORD *)(*(_QWORD *)v25 + 144);
      v45 = swift_beginAccess(v44, v53, 0, 0);
      v47 = v50;
      v46 = v51;
      v48 = v49;
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v51 + 16))(v50, v44, v49, v45);
      sub_1000237E8();
      swift_release(v25);
      swift_release(v42);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
    }
    else
    {
      *(_QWORD *)&result = swift_release(v25).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_100025434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a4, a3, &unk_1005987EC, &unk_1005987FC);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a4, a3, AssociatedTypeWitness, &unk_1005987EC, &unk_1005987F4);
  return Set.contains(_:)(a1, a2, AssociatedTypeWitness, AssociatedConformanceWitness);
}

void sub_1000254BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1000254DC(a1, a2, a3, v3, (void (*)(uint64_t, uint64_t))sub_1000255F8);
}

void sub_1000254DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  void *v5;
  uint64_t v9;
  void *Strong;
  void *v11;
  id v12;
  uint64_t v13;
  _BYTE v14[24];

  v9 = a4 + 16;
  swift_beginAccess(a4 + 16, v14, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v9);
  if (!Strong)
  {
    __break(1u);
LABEL_6:

    goto LABEL_7;
  }
  v11 = Strong;
  v12 = objc_msgSend(Strong, "view");
  if (v12)
  {
    v5 = v12;
    v13 = type metadata accessor for TTRIAccountsListsTreeView(0);
    if (swift_dynamicCastClass(v5, v13))
    {
      a5(a2, a3);

      return;
    }
    goto LABEL_6;
  }
LABEL_7:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
  __break(1u);
}

uint64_t type metadata accessor for TTRIAccountsListsTreeView(uint64_t a1)
{
  return sub_100007328(a1, qword_10064DF08, (uint64_t)&nominal type descriptor for TTRIAccountsListsTreeView);
}

uint64_t sub_1000255F8(uint64_t (*a1)(_QWORD, _QWORD, _QWORD), uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t (*v32)(_QWORD);
  int v33;
  uint64_t result;
  uint64_t v35;
  void *v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  id v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t);
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t (*v71)(_QWORD, _QWORD, _QWORD);

  v71 = a1;
  v3 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v68 = *(_QWORD *)(v3 - 8);
  v69 = v3;
  v4 = __chkstk_darwin(v3);
  v63 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v70 = (char *)&v63 - v6;
  v7 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v8 = __chkstk_darwin(v7);
  v64 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v65 = (char *)&v63 - v10;
  v11 = sub_10002A750(&qword_100640E90);
  v12 = __chkstk_darwin(v11);
  v14 = (char **)((char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  v16 = (char **)((char *)&v63 - v15);
  v67 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  v17 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10002A750((uint64_t *)&unk_100646680);
  __chkstk_darwin(v20);
  v22 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v24);
  v29 = (char *)&v63 - v28;
  __chkstk_darwin(v27);
  v31 = (char *)&v63 - v30;
  v66 = a2;
  sub_10002B1E8(a2, (uint64_t)&v63 - v30, v32);
  v33 = 1 << swift_getEnumCaseMultiPayload(v31, v23);
  if ((v33 & 0x27FD) != 0)
    return sub_10001F544((uint64_t)v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  if ((v33 & 0x1800) == 0)
  {
    sub_10001F544((uint64_t)v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v40 = type metadata accessor for TTRIAccountsListsViewPinnedListsCell();
    v41 = v71;
    result = swift_dynamicCastClass(v71, v40);
    if (!result)
      return result;
    v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
    v42(v22, 1, 1, v67);
    v43 = v41;
    sub_10000F88C(v16);
    v44 = type metadata accessor for TTRIAccountsListsTreeView.ExtendedSelection(0);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v16, 1, v44) == 1)
    {
      sub_1000073A0((uint64_t)v16, &qword_100640E90);
LABEL_24:
      sub_10000A7B0((uint64_t)v22, 0);

      return sub_1000073A0((uint64_t)v22, (uint64_t *)&unk_100646680);
    }
    if (swift_getEnumCaseMultiPayload(v16, v44) == 1)
    {
      v56 = (uint64_t)v16 + *(int *)(sub_10002A750((uint64_t *)&unk_100640EA0) + 48);
      sub_10001F580((uint64_t)v16, (uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      v57 = sub_10001F580(v56, (uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
      v58 = (uint64_t)v65;
      v59 = TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v57);
      v60 = (uint64_t)v64;
      TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v59);
      LOBYTE(v56) = static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:)(v58, v60);
      sub_10001F544(v60, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      sub_10001F544(v58, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      sub_10001F544((uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      if ((v56 & 1) != 0)
      {
        sub_1000073A0((uint64_t)v22, (uint64_t *)&unk_100646680);
        sub_10001F580((uint64_t)v19, (uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
        v42(v22, 0, 1, v67);
        goto LABEL_24;
      }
      v61 = (uint64_t (*)(uint64_t))&type metadata accessor for TTRAccountsListsViewModel.PinnedList;
      v62 = (uint64_t)v19;
    }
    else
    {
      v61 = type metadata accessor for TTRIAccountsListsTreeView.ExtendedSelection;
      v62 = (uint64_t)v16;
    }
    sub_10001F544(v62, v61);
    goto LABEL_24;
  }
  sub_10001F544((uint64_t)v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  v35 = type metadata accessor for TTRIHashtagCollectionCell(0);
  v36 = v71;
  result = swift_dynamicCastClass(v71, v35);
  if (result)
  {
    v37 = v36;
    v38 = v70;
    static REMHashtagLabelSpecifier.empty.getter();
    sub_10000F88C(v14);
    v39 = type metadata accessor for TTRIAccountsListsTreeView.ExtendedSelection(0);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v14, 1, v39) == 1)
    {
      sub_1000073A0((uint64_t)v14, &qword_100640E90);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload(v14, v39) == 2)
      {
        v45 = (char *)v14 + *(int *)(sub_10002A750(&qword_100640E98) + 48);
        sub_10001F580((uint64_t)v14, (uint64_t)v26, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v46 = v68;
        v47 = v69;
        v48 = v63;
        v71 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v68 + 32);
        v49 = v71(v63, v45, v69);
        v50 = (uint64_t)v65;
        v51 = TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v49);
        v52 = (uint64_t)v64;
        TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v51);
        LOBYTE(v45) = static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:)(v50, v52);
        sub_10001F544(v52, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        sub_10001F544(v50, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        v53 = (uint64_t)v26;
        v54 = v46;
        sub_10001F544(v53, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v55 = *(void (**)(char *, uint64_t))(v46 + 8);
        if ((v45 & 1) != 0)
        {
          v38 = v70;
          v55(v70, v47);
          v71(v38, v48, v47);
        }
        else
        {
          v55(v48, v47);
          v38 = v70;
        }
        goto LABEL_19;
      }
      sub_10001F544((uint64_t)v14, type metadata accessor for TTRIAccountsListsTreeView.ExtendedSelection);
    }
    v54 = v68;
    v47 = v69;
LABEL_19:
    TTRIHashtagCollectionCell.setSelection(_:animated:)(v38, 0);

    return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v38, v47);
  }
  return result;
}

void sub_100025BFC(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  id v17;
  void *v18;
  _QWORD *v19;
  void (*v20)(_QWORD);
  _QWORD *v21;
  uint64_t v22;
  id v23;
  void *v24;
  double v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  _BOOL4 IsBoldTextEnabled;
  const UIFontWeight *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  id v44;
  void *v45;
  void *v46;
  id v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  id v52;
  id v53;
  uint64_t v54;
  id v55;
  void *v56;
  void *v57;
  id v58;
  void *v59;
  id v60;
  double *v61;
  double v62;
  uint64_t v63;
  uint64_t inited;
  void *v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  id v80;
  Class isa;
  id v82;
  uint64_t v83;
  id v84;
  char *v85;
  id v86;
  id v87;
  id v88;
  char *v89;
  id v90;
  char *v91;
  uint64_t v92;
  objc_super v93;
  objc_super v94;
  char v95[64];
  char v96[72];

  v3 = v2;
  v93.super_class = (Class)swift_getObjectType(v2, a2);
  v2[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_isDropTarget] = 0;
  v2[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_isContextMenuTarget] = 0;
  v5 = &v2[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList];
  v6 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_count] = 0;
  v3[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_usesLongTitle] = 0;
  v3[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_selectedStateShowsPinnedListColor] = 0;
  v7 = &v3[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_delegate];
  *((_QWORD *)v7 + 1) = 0;
  swift_unknownObjectWeakInit(v7, 0);
  v8 = OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_dynamicDateGlyphCache;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_dynamicDateGlyphCache] = 0;
  v9 = OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_gradientBackgroundView;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_gradientBackgroundView] = 0;
  v10 = OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_badgeView;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_badgeView] = 0;
  v11 = OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_countLabel;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_countLabel] = 0;
  v12 = OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_titleLabel;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_titleLabel] = 0;
  v13 = OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_stackedAvatarsView;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_stackedAvatarsView] = 0;
  v14 = *(_QWORD *)&v3[v8];
  *(_QWORD *)&v3[v8] = a1;
  v15 = v3;
  swift_retain(a1);
  swift_release(v14);
  v16 = type metadata accessor for TTRSingleColorGradientView(0);
  v17 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v16)), "init");
  v18 = *(void **)&v3[v9];
  *(_QWORD *)&v3[v9] = v17;

  v19 = *(_QWORD **)&v3[v9];
  if (!v19)
  {
    __break(1u);
    goto LABEL_24;
  }
  v20 = *(void (**)(_QWORD))((swift_isaMask & *v19) + 0xA0);
  v21 = v19;
  v20(0);

  v22 = type metadata accessor for TTRListBadgeView(0);
  v23 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v22)), "init");
  v24 = *(void **)&v3[v10];
  *(_QWORD *)&v3[v10] = v23;

  v26 = *(void **)&v3[v10];
  if (!v26)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  LODWORD(v25) = 1148846080;
  objc_msgSend(v26, "setLayoutSize:withContentPriority:", 32.0, 32.0, v25);
  v27 = *(void **)&v3[v10];
  if (!v27)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v92 = a1;
  v93.receiver = v15;
  objc_msgSend(v27, "setAccessibilityIgnoresInvertColors:", 1);
  v28 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v29 = *(void **)&v3[v11];
  *(_QWORD *)&v3[v11] = v28;

  v30 = *(void **)&v3[v11];
  if (!v30)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v31 = v30;
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v33 = &UIFontWeightBold;
  if (IsBoldTextEnabled)
    v33 = &UIFontWeightHeavy;
  v34 = *(_QWORD *)v33;
  sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v35 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(UIFontTextStyleTitle1, v34, 0, 0);
  objc_msgSend(v31, "setFont:", v35);

  v36 = *(void **)&v3[v11];
  if (!v36)
    goto LABEL_27;
  sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
  v37 = v36;
  v38 = sub_100029558();
  v39 = (void *)static UIColor.ttr_color(named:in:)(0xD00000000000001ALL, 0x8000000100565700, v38);

  objc_msgSend(v37, "setTextColor:", v39);
  v40 = *(void **)&v3[v11];
  if (!v40)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  objc_msgSend(v40, "setAdjustsFontForContentSizeCategory:", 1);
  v41 = *(void **)&v3[v11];
  if (!v41)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  objc_msgSend(v41, "setAdjustsFontSizeToFitWidth:", 1);
  v42 = *(void **)&v3[v11];
  if (!v42)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  objc_msgSend(v42, "setMinimumScaleFactor:", 0.5);
  v43 = *(void **)&v3[v11];
  if (!v43)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  objc_msgSend(v43, "setBaselineAdjustment:", 1);
  v44 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v45 = *(void **)&v3[v12];
  *(_QWORD *)&v3[v12] = v44;

  v46 = *(void **)&v3[v12];
  if (!v46)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v47 = v46;
  v48 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(UIFontTextStyleHeadline, 0, 1, 0);
  objc_msgSend(v47, "setFont:", v48);

  v49 = *(void **)&v3[v12];
  if (!v49)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  objc_msgSend(v49, "setAdjustsFontForContentSizeCategory:", 1);
  v50 = *(void **)&v3[v12];
  if (!v50)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v51 = (void *)objc_opt_self(UIColor);
  v52 = v50;
  v53 = objc_msgSend(v51, "whiteColor");
  objc_msgSend(v52, "setTextColor:", v53);

  v54 = type metadata accessor for TTRIStackedAvatarsView();
  v55 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v54)), "init");
  v56 = *(void **)&v3[v13];
  *(_QWORD *)&v3[v13] = v55;

  v57 = *(void **)&v3[v13];
  if (!v57)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v58 = v57;
  sub_100029688(0x4030000000000000, 0x4030000000000000, 0);

  v59 = *(void **)&v3[v13];
  if (!v59)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v60 = v59;
  v61 = (double *)CGSize.nuiUseDefault.unsafeMutableAddressor();
  LODWORD(v62) = 1148846080;
  objc_msgSend(v60, "setLayoutSize:withContentPriority:", *v61, v61[1], v62);

  v63 = sub_10002A750((uint64_t *)&unk_10065BE00);
  inited = swift_initStackObject(v63, v96);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  v65 = *(void **)&v3[v11];
  if (!v65)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v66 = inited;
  *(_QWORD *)(inited + 32) = v65;
  *(_DWORD *)(inited + 40) = 1144750080;
  v67 = *(void **)&v3[v12];
  if (!v67)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v68 = inited + 32;
  sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  *(_QWORD *)(v66 + 48) = v67;
  *(_DWORD *)(v66 + 56) = 1132068864;
  v69 = v65;
  v70 = v67;
  static UIView.setContentPriorities(_:for:)(v66, &off_1005EA218);
  swift_setDeallocating(v66);
  v71 = *(_QWORD *)(v66 + 16);
  v72 = sub_10002A750((uint64_t *)&unk_1006466B0);
  swift_arrayDestroy(v68, v71, v72);
  v73 = swift_initStackObject(v63, v95);
  *(_OWORD *)(v73 + 16) = xmmword_1005201E0;
  v74 = *(void **)&v3[v11];
  if (!v74)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v75 = v73;
  *(_QWORD *)(v73 + 32) = v74;
  *(_DWORD *)(v73 + 40) = 1132068864;
  v76 = *(void **)&v3[v12];
  if (!v76)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  *(_QWORD *)(v73 + 48) = v76;
  *(_DWORD *)(v73 + 56) = 1144750080;
  v77 = v74;
  v78 = v76;
  static UIView.setContentPriorities(_:for:)(v75, &off_1005EA248);
  swift_setDeallocating(v75);
  swift_arrayDestroy(v75 + 32, *(_QWORD *)(v75 + 16), v72);
  v79 = objc_msgSend(objc_allocWithZone((Class)NUIContainerGridView), "init");
  *(_QWORD *)((char *)v93.receiver + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_grid) = v79;
  objc_msgSend(v79, "setVerticalAlignment:", 3);
  objc_msgSend(v79, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v79, "setLayoutMargins:", 10.0, 12.0, 8.0, 12.0);
  objc_msgSend(v79, "setRowSpacing:", 10.0);
  objc_msgSend(v79, "setColumnSpacing:", 10.0);
  objc_msgSend(v79, "setUserInteractionEnabled:", 0);
  objc_msgSend(v79, "setInvalidatingIntrinsicContentSizeAlsoInvalidatesSuperview:", 1);
  v80 = objc_allocWithZone((Class)NUIContainerStackView);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v82 = objc_msgSend(v80, "initWithArrangedSubviews:", isa);

  v83 = OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_secondRowStackView;
  *(_QWORD *)((char *)v93.receiver + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_secondRowStackView) = v82;
  objc_msgSend(v82, "setAxis:", 0);
  objc_msgSend(*(id *)((char *)v93.receiver + v83), "setSpacing:", 10.0);
  v84 = *(id *)((char *)v93.receiver + v83);
  objc_msgSend(v84, "setAlignment:", 3);

  v94 = v93;
  v85 = (char *)objc_msgSendSuper2(&v94, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v86 = objc_msgSend(v51, "secondarySystemGroupedBackgroundColor");
  objc_msgSend(v85, "setBackgroundColor:", v86);

  if (*(_QWORD *)&v85[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_gradientBackgroundView])
  {
    objc_msgSend(v85, "addSubview:");
    objc_msgSend(v85, "addSubview:", *(_QWORD *)&v85[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_grid]);
    objc_msgSend(v85, "_setContinuousCornerRadius:", 12.0);
    objc_msgSend(v85, "setClipsToBounds:", 1);
    v87 = objc_msgSend(objc_allocWithZone((Class)UIContextMenuInteraction), "initWithDelegate:", v85);
    objc_msgSend(v85, "addInteraction:", v87);
    v88 = objc_allocWithZone((Class)UIDragInteraction);
    v89 = v85;
    v90 = objc_msgSend(v88, "initWithDelegate:", v89);
    objc_msgSend(v89, "addInteraction:", v90);

    objc_msgSend(v89, "setTtrFocusGroupIdentifier:", 0);
    v91 = v89;
    objc_msgSend(v91, "setFocusEffect:", 0);

    swift_release(v92);
    return;
  }
LABEL_41:
  __break(1u);
}

void sub_100026548()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  char *v32;
  id v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  char *v40;
  id v41;
  uint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  id v62;
  uint64_t v63;
  _QWORD *v64;
  unint64_t v65;
  unint64_t v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  char v73;
  uint64_t v74;
  void *v75;
  char *v76;
  _QWORD *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  _QWORD aBlock[5];
  _QWORD *v83;
  _QWORD *v84;

  v1 = v0;
  v84 = _swiftEmptyArrayStorage;
  v2 = *(void **)&v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_subtitleLabel];
  v3 = objc_msgSend(v2, "text");
  if (!v3)
    goto LABEL_6;
  v4 = v3;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v7 = v6;

  swift_bridgeObjectRelease(v7);
  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  if (v8)
    v9 = v2;
  else
LABEL_6:
    v2 = 0;
  v81 = v2;
  if ((*((_BYTE *)v1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_unitTest_forceLargeTextLayout) & 1) == 0)
  {
    v10 = objc_msgSend(v1, "traitCollection");
    v11 = objc_msgSend(v10, "preferredContentSizeCategory");

    LOBYTE(v10) = UIContentSizeCategory.isAccessibilityCategory.getter(v11);
    if ((v10 & 1) == 0)
    {
      v80 = sub_10002A750((uint64_t *)&unk_10064BB30);
      v46 = swift_allocObject(v80, 56, 7);
      *(_OWORD *)(v46 + 16) = xmmword_1005275C0;
      v40 = (char *)OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_leadingControl;
      v47 = *(void **)((char *)v1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_leadingControl);
      v48 = *(void **)((char *)v1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_iconContainerView);
      *(_QWORD *)(v46 + 32) = v47;
      *(_QWORD *)(v46 + 40) = v48;
      v49 = *(void **)((char *)v1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_titleLabel);
      *(_QWORD *)(v46 + 48) = v49;
      aBlock[0] = v46;
      specialized Array._endMutation()(v46);
      v50 = v47;
      v78 = v48;
      v51 = v49;
      v52 = sub_10002A750((uint64_t *)&unk_100653A60);
      v53 = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
      v54 = sub_100023FEC(&qword_100653A70, (uint64_t *)&unk_100653A60, (uint64_t)&protocol conformance descriptor for [A]);
      v55 = Sequence.removingNils<A>()(v52, v53, v54);
      swift_bridgeObjectRelease(aBlock[0]);
      v56 = v84;
      if ((swift_isUniquelyReferenced_nonNull_native(v84) & 1) == 0)
      {
        v56 = sub_100026DC0(0, v84[2] + 1, 1, v84);
        v84 = v56;
      }
      v58 = v56[2];
      v57 = v56[3];
      if (v58 >= v57 >> 1)
      {
        v56 = sub_100026DC0((_QWORD *)(v57 > 1), v58 + 1, 1, v56);
        v84 = v56;
      }
      v56[2] = v58 + 1;
      v56[v58 + 4] = v55;
      if (!v81)
        goto LABEL_37;
      v59 = swift_allocObject(v80, 56, 7);
      *(_OWORD *)(v59 + 16) = xmmword_1005275C0;
      v60 = *(void **)&v40[(_QWORD)v1];
      *(_QWORD *)(v59 + 32) = v60;
      *(_QWORD *)(v59 + 40) = v48;
      *(_QWORD *)(v59 + 48) = v81;
      aBlock[0] = v59;
      specialized Array._endMutation()(v59);
      v61 = v60;
      v40 = v81;
      v62 = v78;
      v63 = Sequence.removingNils<A>()(v52, v53, v54);
      swift_bridgeObjectRelease(aBlock[0]);
      v64 = v84;
      if ((swift_isUniquelyReferenced_nonNull_native(v84) & 1) == 0)
      {
        v64 = sub_100026DC0(0, v84[2] + 1, 1, v84);
        v84 = v64;
      }
      v66 = v64[2];
      v65 = v64[3];
      if (v66 >= v65 >> 1)
      {
        v64 = sub_100026DC0((_QWORD *)(v65 > 1), v66 + 1, 1, v64);
        v84 = v64;
      }
      v64[2] = v66 + 1;
      v64[v66 + 4] = v63;
      goto LABEL_36;
    }
  }
  v12 = OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_leadingControl;
  v13 = *(void **)((char *)v1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_leadingControl);
  if (v13)
  {
    v14 = v13;
    v15 = sub_100414AC8();

  }
  else
  {
    v15 = 0;
  }
  v16 = sub_10002A750((uint64_t *)&unk_10064BB30);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_1005201E0;
  v18 = *(void **)((char *)v1 + v12);
  v19 = *(void **)((char *)v1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_iconContainerView);
  *(_QWORD *)(v17 + 32) = v18;
  *(_QWORD *)(v17 + 40) = v19;
  aBlock[0] = v17;
  specialized Array._endMutation()(v17);
  v20 = v18;
  v21 = v19;
  v22 = sub_10002A750((uint64_t *)&unk_100653A60);
  v23 = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  v24 = sub_100023FEC(&qword_100653A70, (uint64_t *)&unk_100653A60, (uint64_t)&protocol conformance descriptor for [A]);
  v25 = Sequence.removingNils<A>()(v22, v23, v24);
  swift_bridgeObjectRelease(aBlock[0]);
  v26 = v84;
  if ((swift_isUniquelyReferenced_nonNull_native(v84) & 1) == 0)
  {
    v26 = sub_100026DC0(0, v84[2] + 1, 1, v84);
    v84 = v26;
  }
  v28 = v26[2];
  v27 = v26[3];
  if (v28 >= v27 >> 1)
  {
    v26 = sub_100026DC0((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
    v84 = v26;
  }
  v26[2] = v28 + 1;
  v26[v28 + 4] = v25;
  v79 = v16;
  v29 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v29 + 16) = xmmword_1005201E0;
  v30 = *(void **)((char *)v1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_titleLabel);
  *(_QWORD *)(v29 + 32) = v15;
  *(_QWORD *)(v29 + 40) = v30;
  aBlock[0] = v29;
  specialized Array._endMutation()(v29);
  v31 = v15;
  v32 = (char *)v15;
  v33 = v30;
  v34 = Sequence.removingNils<A>()(v22, v23, v24);
  swift_bridgeObjectRelease(aBlock[0]);
  v35 = v84;
  if ((swift_isUniquelyReferenced_nonNull_native(v84) & 1) == 0)
  {
    v35 = sub_100026DC0(0, v84[2] + 1, 1, v84);
    v84 = v35;
  }
  v37 = v35[2];
  v36 = v35[3];
  if (v37 >= v36 >> 1)
  {
    v35 = sub_100026DC0((_QWORD *)(v36 > 1), v37 + 1, 1, v35);
    v84 = v35;
  }
  v35[2] = v37 + 1;
  v35[v37 + 4] = v34;
  if (!v81)
  {
    v40 = v32;
    goto LABEL_36;
  }
  v38 = swift_allocObject(v79, 48, 7);
  *(_OWORD *)(v38 + 16) = xmmword_1005201E0;
  *(_QWORD *)(v38 + 32) = v31;
  *(_QWORD *)(v38 + 40) = v81;
  aBlock[0] = v38;
  specialized Array._endMutation()(v38);
  v39 = v81;
  v40 = v32;
  v41 = v39;
  v42 = Sequence.removingNils<A>()(v22, v23, v24);
  swift_bridgeObjectRelease(aBlock[0]);
  v43 = v84;
  if ((swift_isUniquelyReferenced_nonNull_native(v84) & 1) == 0)
    goto LABEL_43;
  while (1)
  {
    v45 = v43[2];
    v44 = v43[3];
    if (v45 >= v44 >> 1)
    {
      v43 = sub_100026DC0((_QWORD *)(v44 > 1), v45 + 1, 1, v43);
      v84 = v43;
    }
    v43[2] = v45 + 1;
    v43[v45 + 4] = v42;

LABEL_36:
LABEL_37:
    v67 = objc_msgSend(v1, "containerView");
    v68 = objc_msgSend(v67, "arrangedSubviewRows");

    if (v68)
    {
      v69 = sub_10002A750(&qword_100650720);
      v70 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v68, v69);

      v71 = v84;
      swift_bridgeObjectRetain(v84);
      v72 = (_QWORD *)swift_bridgeObjectRetain(v70);
      v73 = sub_100096B10(v72, v71);
      swift_bridgeObjectRelease_n(v70, 2);
      swift_bridgeObjectRelease(v71);
      if ((v73 & 1) != 0)
      {
        swift_bridgeObjectRelease(v71);

        return;
      }
    }
    v41 = objc_msgSend(v1, "containerView");
    v42 = swift_allocObject(&unk_100606A18, 32, 7);
    *(_QWORD *)(v42 + 16) = v1;
    *(_QWORD *)(v42 + 24) = &v84;
    v74 = swift_allocObject(&unk_100606A40, 32, 7);
    *(_QWORD *)(v74 + 16) = sub_10001B2C0;
    *(_QWORD *)(v74 + 24) = v42;
    aBlock[4] = sub_10001B278;
    v83 = (_QWORD *)v74;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001B258;
    aBlock[3] = &unk_100606A58;
    v75 = _Block_copy(aBlock);
    v43 = v83;
    v76 = v1;
    swift_retain(v74);
    objc_msgSend(v41, "performBatchUpdates:", v75, swift_release(v43).n128_f64[0]);

    _Block_release(v75);
    LOBYTE(v75) = swift_isEscapingClosureAtFileLocation(v74, "", 118, 403, 43, 1);
    swift_release(v74);
    if ((v75 & 1) == 0)
      break;
    __break(1u);
LABEL_43:
    v43 = sub_100026DC0(0, v43[2] + 1, 1, v43);
    v84 = v43;
  }
  v77 = v84;
  swift_release(v42);
  swift_bridgeObjectRelease(v77);
}

_QWORD *sub_100026DC0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10002A750(&qword_100659A30);
      v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v8 + 4])
          memmove(v14, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100026ECC(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100026ECC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v4;
    if (v6 >= v7 || v6 + 8 * v4 <= a3)
    {
      sub_10002A750(&qword_100650720);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_100026FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  char *v4;
  _QWORD *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  id v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t inited;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  uint64_t v56;
  char *result;
  void *v58;
  char *v59;
  NSString v60;
  id v61;
  char *v62;
  id v63;
  uint64_t v64;
  char *v65;
  char *v66;
  void *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t ObjectType;
  objc_super v77;
  int v78;
  int v79;
  char v80[80];
  char v81[88];

  ObjectType = swift_getObjectType(v3, a2);
  v4 = &v3[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityCount];
  *(_QWORD *)v4 = 0;
  v4[8] = 1;
  v5 = &v3[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityGroupName];
  *v5 = 0;
  v5[1] = 0;
  v6 = &v3[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_treeCellViewModel];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((_OWORD *)v6 + 2) = 0u;
  *((_QWORD *)v6 + 6) = 0;
  v7 = &v3[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_treeCellViewDelegate];
  *((_QWORD *)v7 + 1) = 0;
  swift_unknownObjectWeakInit(v7, 0);
  v8 = &v3[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_delegate];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8, 0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_leadingControl] = 0;
  v3[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_unitTest_forceLargeTextLayout] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityAdditionalLabelAttributes] = 0;
  v9 = &v3[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_totalIndentation];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  v3[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_needsUpdateGridSubviewRows] = 1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell____lazy_storage___fillerView] = 0;
  v10 = objc_allocWithZone((Class)UIView);
  v11 = v3;
  v12 = objc_msgSend(v10, "init");
  v13 = OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_iconContainerView;
  *(_QWORD *)&v11[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_iconContainerView] = v12;
  v14 = qword_10063D798;
  v15 = v12;
  if (v14 != -1)
    swift_once(&qword_10063D798, sub_10002E874);
  objc_msgSend(v15, "setMinimumLayoutSize:", *(double *)&qword_100673908, *(double *)&qword_100673908, a2);

  v16 = *(id *)&v11[v13];
  objc_msgSend(v16, "minimumLayoutSize");
  objc_msgSend(v16, "setMaximumLayoutSize:");

  v17 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v18 = OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_titleLabel;
  *(_QWORD *)&v11[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_titleLabel] = v17;
  v19 = v18;
  objc_msgSend(v17, "setNumberOfLines:", 0);
  objc_msgSend(v17, "setUserInteractionEnabled:", 0);
  v20 = (void *)objc_opt_self(UIColor);
  v21 = v17;
  v22 = objc_msgSend(v20, "labelColor");
  objc_msgSend(v21, "setTextColor:", v22);

  v23 = v13;
  v24 = *(void **)&v11[v19];
  sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v25 = v24;
  v26 = (void *)static UIFont.roundedBodyFont.getter(v25);
  objc_msgSend(v25, "setFont:", v26);

  objc_msgSend(*(id *)&v11[v19], "setAdjustsFontForContentSizeCategory:", 1);
  v27 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v28 = OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_subtitleLabel;
  *(_QWORD *)&v11[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_subtitleLabel] = v27;
  v29 = v28;
  objc_msgSend(v27, "setNumberOfLines:", 1);
  objc_msgSend(v27, "setUserInteractionEnabled:", 0);
  v30 = v27;
  v31 = objc_msgSend(v20, "secondaryLabelColor");
  objc_msgSend(v30, "setTextColor:", v31);

  v32 = *(id *)&v11[v29];
  v33 = (void *)static UIFont.roundedFootnoteFont.getter();
  objc_msgSend(v32, "setFont:", v33);

  v34 = *(void **)&v11[v29];
  objc_msgSend(v34, "setAdjustsFontForContentSizeCategory:", 1);
  sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  v35 = sub_10002A750((uint64_t *)&unk_10065BE00);
  inited = swift_initStackObject(v35, v81);
  *(_OWORD *)(inited + 16) = xmmword_1005275C0;
  v37 = v23;
  v38 = *(void **)&v11[v23];
  *(_QWORD *)(inited + 32) = v38;
  v39 = inited + 32;
  *(_DWORD *)(inited + 40) = 1144750080;
  v40 = *(void **)&v11[v19];
  *(_QWORD *)(inited + 48) = v40;
  *(_DWORD *)(inited + 56) = 1132068864;
  *(_QWORD *)(inited + 64) = v34;
  *(_DWORD *)(inited + 72) = 1132068864;
  v41 = v38;
  v42 = v40;
  v43 = v34;
  static UIView.setContentPriorities(_:for:)(inited, &off_1005EB078);
  swift_setDeallocating(inited);
  v44 = *(_QWORD *)(inited + 16);
  v45 = sub_10002A750((uint64_t *)&unk_1006466B0);
  swift_arrayDestroy(v39, v44, v45);
  v46 = swift_initStackObject(v35, v80);
  *(_OWORD *)(v46 + 16) = xmmword_1005275C0;
  v47 = *(void **)&v11[v37];
  *(_QWORD *)(v46 + 32) = v47;
  *(_DWORD *)(v46 + 40) = 1144750080;
  v48 = *(void **)&v11[v19];
  *(_QWORD *)(v46 + 48) = v48;
  type metadata accessor for UILayoutPriority(0);
  v50 = v49;
  v78 = 1065353216;
  v79 = 1144750080;
  v51 = sub_1000277FC();
  v52 = v47;
  v53 = v48;
  static _UIKitNumericRawRepresentable.- infix(_:_:)(&v79, &v78, v50, v51);
  v54 = *(void **)&v11[v29];
  *(_QWORD *)(v46 + 64) = v54;
  v78 = 0x40000000;
  v79 = 1144750080;
  v55 = v54;
  static _UIKitNumericRawRepresentable.- infix(_:_:)(&v79, &v78, v50, v51);
  static UIView.setContentPriorities(_:for:)(v46, &off_1005EB0B8);
  swift_setDeallocating(v46);
  swift_arrayDestroy(v46 + 32, *(_QWORD *)(v46 + 16), v45);
  v56 = type metadata accessor for TTRIAccountsListsCellAccessoryView();
  result = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v56)), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_customAccessoryView] = result;
  v58 = *(void **)&result[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_gridView];
  if (v58)
  {
    v59 = result;
    objc_msgSend(v58, "setMinimumLayoutSize:", 44.0, 44.0);

    if (a3)
    {
      v60 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(a3);
    }
    else
    {
      v60 = 0;
    }
    v77.receiver = v11;
    v77.super_class = (Class)type metadata accessor for TTRIAccountsListsBaseCell();
    v61 = objc_msgSendSuper2(&v77, "initWithStyle:reuseIdentifier:", a1, v60);

    v62 = (char *)v61;
    v63 = objc_msgSend(v62, "containerView");
    objc_msgSend(v63, "setHorizontalDistribution:", 0);
    objc_msgSend(v63, "setVerticalDistribution:", 0);
    objc_msgSend(v63, "setHorizontalAlignment:", 0);
    objc_msgSend(v63, "setVerticalAlignment:", 3);
    objc_msgSend(v63, "setColumnSpacing:", 12.0);
    objc_msgSend(v63, "setRowSpacing:", 0.0);
    objc_msgSend(v63, "setDebugBoundingBoxesEnabled:", 0);
    objc_msgSend(v63, "setPreservesSuperviewLayoutMargins:", 0);
    objc_msgSend(v63, "setDelegate:", v62);
    sub_100028720();
    v64 = OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_customAccessoryView;
    v65 = *(char **)&v62[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_customAccessoryView];
    v66 = &v65[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_layoutDelegate];
    *((_QWORD *)v66 + 1) = &off_1006069A0;
    result = (char *)swift_unknownObjectWeakAssign(v66, v62);
    v67 = *(void **)&v65[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_gridView];
    if (v67)
    {
      v68 = v65;
      objc_msgSend(v67, "intrinsicContentSize");
      objc_msgSend(v68, "frame");
      objc_msgSend(v68, "setFrame:");

      objc_msgSend(v62, "setAccessoryView:", *(_QWORD *)&v62[v64]);
      objc_msgSend(v62, "setAccessoryType:", 0);
      v69 = sub_10002A750(&qword_1006415F0);
      v70 = swift_allocObject(v69, 48, 7);
      *(_OWORD *)(v70 + 16) = xmmword_100520250;
      *(_QWORD *)(v70 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
      *(_QWORD *)(v70 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
      v71 = v62;
      v72 = UIView.registerForTraitChanges<A>(_:handler:)(v70, sub_100415908, 0, ObjectType);

      swift_unknownObjectRelease(v72);
      swift_bridgeObjectRelease(v70);

      return v71;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063E2C8, (uint64_t)&unk_1005EB700);
}

unint64_t sub_1000277FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10065BE10;
  if (!qword_10065BE10)
  {
    type metadata accessor for UILayoutPriority(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UILayoutPriority, v1);
    atomic_store(result, (unint64_t *)&qword_10065BE10);
  }
  return result;
}

uint64_t type metadata accessor for TTRIAccountsListsCellAccessoryView()
{
  return objc_opt_self(_TtC9Reminders34TTRIAccountsListsCellAccessoryView);
}

id sub_100027884(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  _BYTE *v6;
  objc_class *ObjectType;
  char *v12;
  id v13;
  uint64_t v14;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_preferredTintColor] = 0;
  v6[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_isExpanded] = 0;
  v12 = &v6[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_layoutDelegate];
  *((_QWORD *)v12 + 1) = 0;
  swift_unknownObjectWeakInit(v12, 0);
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_gridView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_countLabel] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_disclosureImageView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView____lazy_storage___chevronFont] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView____lazy_storage___chevronConfiguration] = 0;
  v16.receiver = v6;
  v16.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v16, "initWithFrame:", a1, a2, a3, a4);
  sub_100027974((uint64_t)v13, v14);

  return v13;
}

void sub_100027974(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  id v5;
  double v6;
  double v7;
  id v8;
  unint64_t v9;
  void *v10;
  NSString v11;
  id v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  Class isa;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  char *v31;
  UIAccessibilityTraits v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  objc_super v37;
  objc_super v38;
  _QWORD v39[4];

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  objc_msgSend(v2, "setUserInteractionEnabled:", 1);
  v5 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  LODWORD(v6) = 1144733696;
  objc_msgSend(v5, "setContentHuggingPriority:forAxis:", 0, v6);
  LODWORD(v7) = 1144733696;
  objc_msgSend(v5, "setContentCompressionResistancePriority:forAxis:", 0, v7);
  v8 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v5, "setTextColor:", v8);

  v9 = sub_100027E04();
  v10 = (void *)static UIFont.roundedBodyFont.getter(v9);
  objc_msgSend(v5, "setFont:", v10);

  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setText:", v11);

  objc_msgSend(v5, "setAdjustsFontForContentSizeCategory:", 1);
  v12 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  LODWORD(v13) = 1144750080;
  objc_msgSend(v12, "setContentHuggingPriority:forAxis:", 0, v13);
  LODWORD(v14) = 1144750080;
  objc_msgSend(v12, "setContentCompressionResistancePriority:forAxis:", 0, v14);
  v15 = sub_10002A750(&qword_100659A30);
  v16 = swift_allocObject(v15, 40, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100520250;
  v17 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v18 = swift_allocObject(v17, 48, 7);
  *(_OWORD *)(v18 + 16) = xmmword_10051FF90;
  *(_QWORD *)(v18 + 32) = v5;
  *(_QWORD *)(v18 + 40) = v12;
  v39[0] = v18;
  specialized Array._endMutation()(v18);
  *(_QWORD *)(v16 + 32) = v39[0];
  v19 = objc_allocWithZone((Class)NUIContainerGridView);
  v20 = v5;
  v21 = v12;
  sub_10002A750(&qword_100650720);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v16);
  v23 = objc_msgSend(v19, "initWithArrangedSubviewRows:", isa);

  objc_msgSend(v23, "setAlignment:forView:inAxis:", 4, v21, 0);
  objc_msgSend(v23, "setAlignment:forView:inAxis:", 4, v20, 0);
  objc_msgSend(v23, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v23, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  objc_msgSend(v23, "setHorizontalDistribution:", 0);
  objc_msgSend(v23, "setVerticalAlignment:", 3);
  objc_msgSend(v23, "setColumnSpacing:", 8.0);
  objc_msgSend(v23, "setDebugBoundingBoxesEnabled:", 0);
  objc_msgSend(v23, "setUserInteractionEnabled:", 0);
  v24 = *(void **)&v3[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_countLabel];
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_countLabel] = v20;
  v25 = v20;

  v26 = *(void **)&v3[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_disclosureImageView];
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_disclosureImageView] = v21;
  v27 = v21;

  v28 = *(void **)&v3[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_gridView];
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_gridView] = v23;
  v29 = v23;

  objc_msgSend(v29, "setInvalidatingIntrinsicContentSizeAlsoInvalidatesSuperview:", 1);
  v30 = v29;
  objc_msgSend(v3, "bounds");
  objc_msgSend(v30, "setFrame:");

  objc_msgSend(v30, "setAutoresizingMask:", 18);
  objc_msgSend(v30, "setDelegate:", v3);
  objc_msgSend(v3, "addSubview:", v30);
  sub_100028358();
  v39[3] = ObjectType;
  v39[0] = v3;
  v31 = v3;
  static UIAccessibility.addButtonShapesStatusChangeObserver(_:selector:)(v39, "buttonShapesSettingDidChange");
  sub_100027F10(v39);
  v32 = UIAccessibilityTraitHeader;
  v38.receiver = v31;
  v38.super_class = ObjectType;
  v33 = (unint64_t)objc_msgSendSuper2(&v38, "accessibilityTraits");
  v34 = -1;
  if ((v33 & v32) != 0)
    v34 = ~v32;
  v35 = v34 & v33;
  if ((v35 & v32) != 0)
    v36 = v33 & ~v32;
  else
    v36 = v35;
  v37.receiver = v31;
  v37.super_class = ObjectType;
  objc_msgSendSuper2(&v37, "setAccessibilityTraits:", v36);

}

unint64_t sub_100027E04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10064ACC0;
  if (!qword_10064ACC0)
  {
    v1 = objc_opt_self(UIFont);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10064ACC0);
  }
  return result;
}

uint64_t sub_100027E40(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13[3];
  void *ObjectType;

  sub_100027F30(v13, 0, 0, 1, a1, a2);
  v8 = v13[0];
  if (v6)
  {
    v9 = v6;
    ObjectType = (void *)swift_getObjectType(v6, v7);
    v13[0] = v9;
    v10 = *a3;
    if (*a3)
    {
      sub_100028CFC((uint64_t)v13, *a3);
      *a3 = v10 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v13[0] = a1;
    v13[1] = a2;
    v11 = *a3;
    if (*a3)
    {
      sub_100028CFC((uint64_t)v13, *a3);
      *a3 = v11 + 32;
    }
    swift_bridgeObjectRetain(a2);
  }
  sub_100027F10(v13);
  return v8;
}

uint64_t sub_100027F10(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_100027F30(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  int v13;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            *a1 = (uint64_t)__dst;
            return;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    sub_1000280E8(a5, a6);
    *a1 = v12;
    return;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v13) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v13, 1173, 0);
    __break(1u);
    return;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) == 0)
    swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

uint64_t sub_1000280E8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)sub_10002817C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_100352DAC(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_100352DAC(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

_QWORD *sub_10002817C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_1000282F0(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_1000282F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = sub_10002A750(&qword_1006568A0);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

void sub_100028358()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;
  Swift::String v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  NSString v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  unint64_t v28;

  v1 = v0;
  v2 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_isExpanded;
  v3 = 0xEF64726177726F66;
  if (v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_isExpanded])
    v3 = 0xEC0000006E776F64;
  v28 = v3;
  if (UIAccessibilityButtonShapesEnabled())
  {
    v4._countAndFlagsBits = 0x2E656C637269632ELL;
    v4._object = (void *)0xEC0000006C6C6966;
    String.append(_:)(v4);
  }
  v5 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_disclosureImageView;
  v6 = *(void **)&v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_disclosureImageView];
  if (!v6)
  {
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v7 = (void *)objc_opt_self(UIImage);
  swift_bridgeObjectRetain(v28);
  v8 = v6;
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v28);
  v10 = objc_msgSend(v7, "__systemImageNamedSwift:", v9);

  if (v10)
  {
    v11 = sub_10002861C();
    v12 = objc_msgSend(v10, "imageWithConfiguration:", v11);

  }
  else
  {
    v12 = 0;
  }
  objc_msgSend(v8, "setImage:", v12);

  v13 = *(void **)&v1[v5];
  if (!v13)
    goto LABEL_20;
  v14 = *(void **)&v1[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_preferredTintColor];
  if (v14)
  {
    v15 = v13;
    v16 = v14;
  }
  else
  {
    v17 = (void *)objc_opt_self(UIColor);
    v18 = v13;
    v16 = objc_msgSend(v17, "tertiaryLabelColor");
  }
  v19 = v14;
  objc_msgSend(v13, "setTintColor:", v16);

  v20 = *(void **)&v1[v5];
  if (!v20)
    goto LABEL_21;
  objc_msgSend(v20, "invalidateIntrinsicContentSize");
  v21 = *(void **)&v1[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_gridView];
  if (!v21)
  {
LABEL_22:
    __break(1u);
    return;
  }
  v22 = v21;
  swift_bridgeObjectRelease(v28);
  v23 = objc_msgSend(v22, "columnAtIndex:", 0);

  objc_msgSend(v23, "setHidden:", v1[v2]);
  v24 = swift_unknownObjectRelease(v23);
  if (v1[v2] == 1)
    v25 = TTRAccesibility.AccountsList.Action.Collapse.unsafeMutableAddressor(v24);
  else
    v25 = TTRAccesibility.AccountsList.Action.Expand.unsafeMutableAddressor(v24);
  v26 = *(_QWORD *)(v25 + 8);
  swift_bridgeObjectRetain(v26);
  v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v26);
  objc_msgSend(v1, "setAccessibilityLabel:", v27);

}

id sub_10002861C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView____lazy_storage___chevronConfiguration;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView____lazy_storage___chevronConfiguration);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView____lazy_storage___chevronConfiguration);
  }
  else
  {
    v4 = sub_1000286B4();
    v5 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v4, 1);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1000286B4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView____lazy_storage___chevronFont;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView____lazy_storage___chevronFont);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView____lazy_storage___chevronFont);
  }
  else
  {
    v4 = v0;
    sub_100027E04();
    v5 = (void *)static UIFont.roundedBodyEmphasizedFont.getter();
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

uint64_t sub_100028720()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double *v6;
  id v7;
  _QWORD v9[7];
  char v10[24];
  _BYTE v11[40];
  uint64_t v12;

  v1 = (uint64_t)&v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_treeCellViewModel];
  swift_beginAccess(&v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_treeCellViewModel], v10, 0, 0);
  sub_1000922C0(v1, (uint64_t)v11);
  if (v12)
  {
    sub_100102FD4((uint64_t)v11, (uint64_t)v9);
    sub_100092308((uint64_t)v11);
    v2 = v9[0];
    sub_100092348((uint64_t)v9);
    v3 = (double)v2;
  }
  else
  {
    sub_100092308((uint64_t)v11);
    v3 = 0.0;
  }
  if (qword_10063D7A0 != -1)
    swift_once(&qword_10063D7A0, sub_10002E8A4);
  v4 = *(double *)&qword_10065BA90;
  if (qword_10063D7A8 != -1)
    swift_once(&qword_10063D7A8, sub_10002E884);
  v5 = v4 + v3 * *(double *)&qword_10065BA98;
  v6 = (double *)&v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_totalIndentation];
  *v6 = v5;
  *((_BYTE *)v6 + 8) = 0;
  v7 = objc_msgSend(v0, "containerView");
  if (qword_10063D7B0 != -1)
    swift_once(&qword_10063D7B0, sub_10002E894);
  objc_msgSend(v7, "setDirectionalLayoutMargins:", *(double *)&qword_10065BAA0, v5, *(double *)&qword_10065BAA0, 0.0);

  objc_msgSend(v0, "setNeedsLayout");
  return 0;
}

uint64_t sub_1000288AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(__n128);
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t *v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _UNKNOWN **v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _UNKNOWN **v25;
  __int128 v26;
  _OWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD v36[2];
  __int128 v37;
  uint64_t v38;
  _QWORD v39[7];
  _QWORD v40[3];
  uint64_t v41;
  _UNKNOWN **v42;
  _BYTE v43[56];
  _QWORD v44[3];
  uint64_t v45;
  uint64_t v46;
  _OWORD v47[2];

  sub_10000735C(a1, (uint64_t)&v32, &qword_100640E50);
  if (!*((_QWORD *)&v33 + 1))
  {
    v13 = &qword_100640E50;
LABEL_11:
    sub_1000073A0((uint64_t)&v32, v13);
    return 0;
  }
  sub_100028D38(&v32, v47);
  sub_100028CFC((uint64_t)v47, (uint64_t)v43);
  v5 = sub_10002A750(&qword_1006462E8);
  if ((swift_dynamicCast(&v32, v43, &type metadata for Any[8], v5, 6) & 1) == 0)
  {
    v34 = 0;
    v32 = 0u;
    v33 = 0u;
    sub_100027F10(v47);
    v13 = (uint64_t *)&unk_1006462F0;
    goto LABEL_11;
  }
  sub_10002E37C(&v32, (uint64_t)v44);
  v6 = v46;
  sub_100028D48((uint64_t)v44, v45);
  v7 = *(uint64_t (**)(__n128))(v6 + 24);
  v8 = swift_unknownObjectRetain(v3);
  v9 = v7(v8);
  sub_10019D434(v9, (uint64_t)v43);
  v10 = v45;
  v11 = v46;
  sub_10001413C(v44, v45);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v11 + 8))(v40, v10, v11);
  sub_100102FD4((uint64_t)v43, (uint64_t)v39);
  sub_10000735C((uint64_t)v40, (uint64_t)&v32, (uint64_t *)&unk_10065BDF0);
  sub_10000735C((uint64_t)v39, (uint64_t)v36, (uint64_t *)&unk_10065BDF0);
  if (!v35)
  {
    sub_1000073A0((uint64_t)v39, (uint64_t *)&unk_10065BDF0);
    sub_1000073A0((uint64_t)v40, (uint64_t *)&unk_10065BDF0);
    if (!*((_QWORD *)&v37 + 1))
    {
      sub_1000073A0((uint64_t)&v32, (uint64_t *)&unk_10065BDF0);
LABEL_15:
      sub_100092348((uint64_t)v43);
      sub_100027F10(v47);
      sub_100027F10(v44);
      return 0;
    }
    goto LABEL_18;
  }
  sub_10000735C((uint64_t)&v32, (uint64_t)&v29, (uint64_t *)&unk_10065BDF0);
  if (!*((_QWORD *)&v37 + 1))
  {
    sub_1000073A0((uint64_t)v39, (uint64_t *)&unk_10065BDF0);
    sub_1000073A0((uint64_t)v40, (uint64_t *)&unk_10065BDF0);
    sub_100092348((uint64_t)&v29);
LABEL_18:
    v15 = (uint64_t *)&unk_100646300;
    goto LABEL_19;
  }
  v26 = v36[0];
  v27[0] = v36[1];
  v27[1] = v37;
  v28 = v38;
  if (v29 == *(_QWORD *)&v36[0] && v30 == BYTE8(v26))
  {
    v12 = static AnyHashable.== infix(_:_:)(&v31, v27);
    sub_100092348((uint64_t)&v26);
    sub_1000073A0((uint64_t)v39, (uint64_t *)&unk_10065BDF0);
    sub_1000073A0((uint64_t)v40, (uint64_t *)&unk_10065BDF0);
    sub_100092348((uint64_t)&v29);
    sub_1000073A0((uint64_t)&v32, (uint64_t *)&unk_10065BDF0);
    if ((v12 & 1) == 0)
      goto LABEL_20;
    goto LABEL_15;
  }
  sub_100092348((uint64_t)&v26);
  sub_1000073A0((uint64_t)v39, (uint64_t *)&unk_10065BDF0);
  sub_1000073A0((uint64_t)v40, (uint64_t *)&unk_10065BDF0);
  sub_100092348((uint64_t)&v29);
  v15 = (uint64_t *)&unk_10065BDF0;
LABEL_19:
  sub_1000073A0((uint64_t)&v32, v15);
LABEL_20:
  sub_10000735C(a3, (uint64_t)&v32, (uint64_t *)&unk_1006462D8);
  if (*((_QWORD *)&v33 + 1))
  {
    sub_10002E37C(&v32, (uint64_t)v40);
  }
  else
  {
    v16 = type metadata accessor for TTRITreeViewAnimatingUnanimatedWrapper();
    v17 = swift_allocObject(v16, 32, 7);
    *(_QWORD *)(v17 + 16) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v17 + 24) = _swiftEmptyArrayStorage;
    v41 = v16;
    v42 = &off_1005F1328;
    v40[0] = v17;
    sub_1000073A0((uint64_t)&v32, (uint64_t *)&unk_1006462D8);
  }
  v18 = v45;
  v19 = v46;
  sub_10001413C(v44, v45);
  sub_100102FD4((uint64_t)v43, (uint64_t)&v32);
  v20 = v41;
  v21 = v42;
  v22 = sub_10001413C(v40, v41);
  v39[3] = v20;
  v39[4] = v21[1];
  v23 = sub_100028D70(v39);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v23, v22, v20);
  (*(void (**)(__int128 *, _QWORD *, uint64_t, uint64_t))(v19 + 40))(&v32, v39, v18, v19);
  sub_1000073A0((uint64_t)&v32, (uint64_t *)&unk_10065BDF0);
  sub_100027F10(v39);
  v24 = v41;
  v25 = v42;
  sub_10001413C(v40, v41);
  ((void (*)(uint64_t, _UNKNOWN **))v25[2])(v24, v25);
  sub_100092348((uint64_t)v43);
  sub_100027F10(v47);
  sub_100027F10(v40);
  sub_100027F10(v44);
  return 1;
}

uint64_t sub_100028CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_100028D38(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_100028D48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

_QWORD *sub_100028D70(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

uint64_t type metadata accessor for TTRITreeViewAnimatingUnanimatedWrapper()
{
  return objc_opt_self(_TtC9RemindersP33_5FD5AAA012F98A2355B7634098A9176C38TTRITreeViewAnimatingUnanimatedWrapper);
}

uint64_t sub_100028DCC()
{
  return sub_100028DEC();
}

uint64_t sub_100028DEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  void (*v14)(uint64_t *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _BYTE v19[24];
  _BYTE v20[24];

  v1 = v0;
  v2 = (uint64_t *)(v0 + 16);
  swift_beginAccess(v0 + 16, v20, 1, 0);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
    v5 = (_QWORD *)(v3 + 40);
    do
    {
      v7 = (void (*)(uint64_t))*(v5 - 1);
      v6 = *v5;
      v8 = swift_retain(*v5);
      v7(v8);
      swift_release(v6);
      v5 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(v3);
  }
  v9 = (uint64_t *)(v1 + 24);
  swift_beginAccess(v1 + 24, v19, 1, 0);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain(v10);
    v12 = (uint64_t *)(v10 + 40);
    do
    {
      v14 = (void (*)(uint64_t *))*(v12 - 1);
      v13 = *v12;
      v18 = 0;
      swift_retain(v13);
      v14(&v18);
      swift_release(v13);
      v12 += 2;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease(v10);
  }
  v15 = *v2;
  *v2 = (uint64_t)&_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v15);
  v16 = *v9;
  *v9 = (uint64_t)&_swiftEmptyArrayStorage;
  return swift_bridgeObjectRelease(v16);
}

uint64_t sub_100028F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t AssociatedConformanceWitness;
  uint64_t v21;
  uint64_t i;
  uint64_t v23;
  uint64_t v24;
  uint64_t WitnessTable;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  v33 = a2;
  v29 = a1;
  v8 = *(_QWORD *)(a3 + 24);
  v31 = *(_QWORD *)(a3 + 16);
  v32 = v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v8, v31, &unk_1005987EC, &unk_1005987FC);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = __chkstk_darwin(AssociatedTypeWitness);
  v13 = (char *)&v28 - v12;
  v14 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v11);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_getAssociatedTypeWitness(0, a5, a4, &protocol requirements base descriptor for Sequence, &associated type descriptor for Sequence.Iterator);
  v30 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v28 - v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v29, a4);
  dispatch thunk of Sequence.makeIterator()(a4);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a5, a4, v17, &protocol requirements base descriptor for Sequence, &associated conformance descriptor for Sequence.Sequence.Iterator: IteratorProtocol);
  v21 = dispatch thunk of IteratorProtocol.next()(v17, AssociatedConformanceWitness);
  for (i = v35; v35; i = v35)
  {
    sub_100029148(v21);
    sub_10002920C((uint64_t)v13, i, a3);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, AssociatedTypeWitness);
    v34 = i;
    v35 = v33;
    v36 = 0;
    v24 = type metadata accessor for TTRITreeViewNode(255, v31, v32, v23);
    WitnessTable = swift_getWitnessTable(&unk_1005276C0, v24);
    v26 = type metadata accessor for Dictionary(0, v24, &type metadata for Int, WitnessTable);
    Dictionary.subscript.setter(&v35, &v34, v26);
    v21 = dispatch thunk of IteratorProtocol.next()(v17, AssociatedConformanceWitness);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v19, v17);
}

uint64_t sub_100029148(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _BYTE v10[24];

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(a1);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = (uint64_t)v1 + *(_QWORD *)(v2 + 144);
  swift_beginAccess(v7, v10, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  (*(void (**)(uint64_t))(*(_QWORD *)(v2 + 88) + 24))(v3);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10002920C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t WitnessTable;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t AssociatedConformanceWitness;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  _QWORD *v29;
  void (*v30)(_QWORD *, _QWORD);
  void (*v31)(char *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t inited;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[4];
  uint64_t v46;
  uint64_t v47;
  char v48[40];

  v44 = a2;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v6, v5, &unk_1005987EC, &unk_1005987FC);
  v43 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = __chkstk_darwin(AssociatedTypeWitness);
  v42 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v40 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v40 - v13;
  v15 = *(_QWORD *)(v3 + 8);
  v17 = type metadata accessor for TTRITreeViewNode(255, v5, v6, v16);
  WitnessTable = swift_getWitnessTable(&unk_1005276C0, v17);
  v19 = type metadata accessor for Set(0, v17, WitnessTable);
  v20 = v5;
  v21 = v19;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v6, v20, AssociatedTypeWitness, &unk_1005987EC, &unk_1005987F4);
  Dictionary.subscript.getter(v45, a1, v15, AssociatedTypeWitness, v21, AssociatedConformanceWitness);
  v23 = v45[0];
  swift_bridgeObjectRelease(v45[0]);
  if (v23)
  {
    v24 = v43;
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
    v25(v14, a1, AssociatedTypeWitness);
    v26 = v44;
    v46 = v44;
    v25(v12, (uint64_t)v14, AssociatedTypeWitness);
    swift_retain(v26);
    v27 = type metadata accessor for Dictionary._Variant(0, AssociatedTypeWitness, v21, AssociatedConformanceWitness);
    result = Dictionary._Variant.subscript.modify(v45, v12, v27);
    if (*v29)
    {
      v30 = (void (*)(_QWORD *, _QWORD))result;
      Set.insert(_:)(&v47, &v46, v21);
      swift_release(v47);
      v30(v45, 0);
      v31 = *(void (**)(char *, uint64_t))(v24 + 8);
      v31(v12, AssociatedTypeWitness);
      return ((uint64_t (*)(char *, uint64_t))v31)(v14, AssociatedTypeWitness);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v41 = v21;
    v32 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v42, a1, AssociatedTypeWitness);
    v33 = sub_10002A750((uint64_t *)&unk_1006415A0);
    inited = swift_initStackObject(v33, v48);
    v35 = static Array._adoptStorage(_:count:)(inited, 1);
    v36 = v44;
    *v37 = v44;
    type metadata accessor for Array(0, v17);
    swift_retain(v36);
    if (Array._getCount()())
      v38 = (void *)sub_1000BFC60(v35, v17, WitnessTable);
    else
      v38 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease(v35);
    v45[0] = v38;
    v39 = type metadata accessor for Dictionary(0, AssociatedTypeWitness, v41, AssociatedConformanceWitness);
    return Dictionary.subscript.setter(v45, v32, v39);
  }
  return result;
}

Swift::Int sub_1000294F4(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_100029530();
  return Hasher._finalize()();
}

void sub_100029530()
{
  uint64_t v0;

  Hasher._combine(_:)(*(_QWORD *)(v0 + 16));
}

id sub_100029558()
{
  if (qword_100666108[0] != -1)
    dispatch_once(qword_100666108, &stru_1005EA060);
  return (id)qword_100666100;
}

uint64_t type metadata accessor for TTRIStackedAvatarsView()
{
  return objc_opt_self(_TtC9Reminders22TTRIStackedAvatarsView);
}

uint64_t sub_100029688(uint64_t result, uint64_t a2, char a3)
{
  _BYTE *v3;
  double *v4;
  double v5;
  double v6;
  int v7;

  v4 = (double *)&v3[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_unscaledAvatarSize];
  v5 = *(double *)&v3[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_unscaledAvatarSize];
  v6 = *(double *)&v3[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_unscaledAvatarSize + 8];
  v7 = v3[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_unscaledAvatarSize + 16];
  *v4 = *(double *)&result;
  v4[1] = *(double *)&a2;
  *((_BYTE *)v4 + 16) = a3 & 1;
  if ((a3 & 1) != 0)
  {
    if (!v7)
    {
LABEL_11:
      v3[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_avatarsNeedUpdate] = 1;
      objc_msgSend(v3, "invalidateIntrinsicContentSize", v5, v6);
      *(double *)&result = COERCE_DOUBLE(objc_msgSend(v3, "setNeedsLayout"));
    }
  }
  else
  {
    if ((v7 & 1) != 0)
      goto LABEL_11;
    if (v5 != *(double *)&result || v6 != *(double *)&a2)
      goto LABEL_11;
  }
  return result;
}

void sub_100029710()
{
  char *v0;
  uint64_t (**v1)();
  uint64_t (**v2)();
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  Class isa;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  Class v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int (*v77)(uint64_t, uint64_t, _QWORD *);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(uint64_t, uint64_t, uint64_t);
  int v94;
  uint64_t *v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  void (*v101)(char *, uint64_t);
  objc_class *v102;
  id v103;
  char v104;
  double v105;
  double v106;
  double v107;
  uint64_t v108;
  id v109;
  void *v110;
  _QWORD *v111;
  id v112;
  int v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t (**i)();
  unint64_t v131;
  uint64_t v132;
  char *v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD aBlock[5];
  uint64_t v150;
  objc_super v151;
  objc_super v152;
  objc_super v153;
  char v154[8];
  char v155[8];

  v2 = (uint64_t (**)())v0;
  v3 = type metadata accessor for UUID(0);
  v147 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v121 = (char *)&v120 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_10002A750(&qword_100650710);
  __chkstk_darwin(v139);
  v142 = (uint64_t)&v120 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750(&qword_100650718);
  v7 = __chkstk_darwin(v6);
  v133 = (char *)&v120 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v11 = (uint64_t)&v120 - v10;
  __chkstk_darwin(v9);
  v146 = (uint64_t)&v120 - v12;
  v138 = sub_10002A750(&qword_100650728);
  __chkstk_darwin(v138);
  v14 = (char *)&v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750((uint64_t *)&unk_100646680);
  v16 = __chkstk_darwin(v15);
  v137 = (uint64_t)&v120 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v122 = (uint64_t)&v120 - v19;
  v20 = __chkstk_darwin(v18);
  v145 = (uint64_t)&v120 - v21;
  __chkstk_darwin(v20);
  v144 = (uint64_t)&v120 - v22;
  v23 = (_QWORD *)type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  v136 = *(v23 - 1);
  v24 = __chkstk_darwin(v23);
  v123 = (uint64_t)&v120 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v148 = (uint64_t)&v120 - v26;
  v135 = sub_10002A750((uint64_t *)&unk_100650730);
  __chkstk_darwin(v135);
  v134 = (uint64_t *)((char *)&v120 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v29 = objc_msgSend(v28, "preferredContentSizeCategory");

  LODWORD(v132) = UIContentSizeCategory.isAccessibilityCategory.getter(v29);
  v30 = objc_msgSend(v2, "subviews");
  v31 = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v30, v31);

  if ((unint64_t)v32 >> 62)
    goto LABEL_78;
  v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v32);
LABEL_3:
  v140 = (char *)v2;
  v141 = v11;
  v143 = v23;
  if (v33)
  {
    if (v33 < 1)
    {
      __break(1u);
      goto LABEL_88;
    }
    v11 = 0;
    v34 = 0;
    while (1)
    {
      v35 = (v32 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v34, v32)
          : *(id *)(v32 + 8 * v34 + 32);
      v36 = v35;
      v37 = type metadata accessor for TTRIPinnedListEmptyControl();
      v38 = swift_dynamicCastClass(v36, v37);

      if (!v38 && __OFADD__(v11++, 1))
        break;
      if (v33 == ++v34)
        goto LABEL_15;
    }
    __break(1u);
  }
  v11 = 0;
LABEL_15:
  swift_bridgeObjectRelease_n(v32, 2);
  v2 = (uint64_t (**)())OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_pinnedLists;
  v40 = v140;
  v32 = *(_QWORD *)(*(_QWORD *)&v140[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_pinnedLists] + 16);
  v1 = &off_100650000;
  if (v32 != v11 || (v132 & 1) != v140[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_usesLargeTextLayout])
  {
    v33 = v140;
    v32 = (uint64_t)sub_10024FC98(0, v32, v33);

    if ((v132 & 1) != 0)
    {
      v41 = type metadata accessor for TTRIPinnedListControl(0);
      v11 = 1;
      v42 = Array.chunked(by:)(1, v32, v41);
      v43 = sub_1002DE8F8(v42);
      swift_bridgeObjectRelease(v42);
      sub_10002A750(&qword_100650720);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v43);
      objc_msgSend((id)v33, "setArrangedSubviewRows:", isa);

LABEL_36:
      *((_BYTE *)v1[203] + v33) = v11;
      v59 = sub_10002CC08(v32);
      swift_bridgeObjectRelease(v32);
      v32 = (uint64_t)Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v59);
      objc_msgSend((id)v33, "setAccessibilityElements:", v32);

      v40 = v140;
      goto LABEL_37;
    }
    v11 = (unint64_t)v32 >> 62;
    if (!((unint64_t)v32 >> 62))
    {
      if (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1
        && (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) & 1) != 0)
      {
        v132 = (unint64_t)v32 >> 62;
        v49 = swift_bridgeObjectRetain(v32);
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v49);
        v50 = v32;
LABEL_26:
        v51 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TTRIPinnedListEmptyControl()), "init");
        aBlock[0] = v50;
        swift_bridgeObjectRetain(v50);
        v52 = v51;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v52);
        v54 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
        v53 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v54 >= v53 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v53 > 1, v54 + 1, 1);
        v55 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v54, v52);
        specialized Array._endMutation()(v55);
        v47 = aBlock[0];
        swift_bridgeObjectRelease(v50);

        v48 = (_QWORD *)Array.chunked(by:)(2, v47, v31);
        v1 = &off_100650000;
        v11 = v132;
        goto LABEL_29;
      }
      goto LABEL_25;
    }
LABEL_88:
    if (v32 < 0)
      v117 = v32;
    else
      v117 = v32 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v32);
    v118 = _CocoaArrayWrapper.endIndex.getter(v117);
    swift_bridgeObjectRelease(v32);
    if (v118 != 1 && (v118 & 1) != 0)
    {
      v132 = v11;
      swift_bridgeObjectRetain(v32);
      v50 = _bridgeCocoaArray<A>(_:)(v117, v31);
      swift_bridgeObjectRelease(v32);
      goto LABEL_26;
    }
LABEL_25:
    v46 = type metadata accessor for TTRIPinnedListControl(0);
    v47 = Array.chunked(by:)(2, v32, v46);
    v48 = sub_1002DE8F8(v47);
LABEL_29:
    swift_bridgeObjectRelease(v47);
    sub_10002A750(&qword_100650720);
    v56 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v48);
    objc_msgSend((id)v33, "setArrangedSubviewRows:", v56);

    if (v11)
    {
      if (v32 < 0)
        v58 = v32;
      else
        v58 = v32 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v32);
      v57 = _CocoaArrayWrapper.endIndex.getter(v58);
      swift_bridgeObjectRelease(v32);
    }
    else
    {
      v57 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v11 = v57 == 1;
    goto LABEL_36;
  }
LABEL_37:
  v60 = (uint64_t)sub_10002A8F8();
  v61 = v60;
  v31 = *(uint64_t *)((char *)v2 + (_QWORD)v40);
  if ((unint64_t)v60 >> 62)
  {
    if (v60 < 0)
      v116 = v60;
    else
      v116 = v60 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v31);
    v2 = (uint64_t (**)())_CocoaArrayWrapper.endIndex.getter(v116);
    if (v2)
      goto LABEL_39;
  }
  else
  {
    v2 = *(uint64_t (***)())((v60 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v31);
    if (v2)
    {
LABEL_39:
      v132 = *(_QWORD *)(v31 + 16);
      v128 = OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectedStateShowsPinnedListColor;
      v127 = OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_trailingLayoutMarginForControls;
      v131 = v61 & 0xC000000000000001;
      v129 = &v40[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectedPinnedList];
      swift_beginAccess(&v40[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectedPinnedList], v155, 0, 0);
      v1 = 0;
      v126 = v14;
      v125 = v61;
      v124 = v31;
      for (i = v2; i != v1; v2 = i)
      {
        if (v131)
          v63 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v1, v61);
        else
          v63 = *(id *)(v61 + 8 * (_QWORD)v1 + 32);
        v23 = v63;
        if ((uint64_t (**)())v132 == v1)
        {
          swift_bridgeObjectRelease(v31);
          swift_bridgeObjectRelease(v61);

          return;
        }
        if ((unint64_t)v1 >= *(_QWORD *)(v31 + 16))
        {
          __break(1u);
LABEL_78:
          if (v32 < 0)
            v115 = v32;
          else
            v115 = v32 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v32);
          v33 = _CocoaArrayWrapper.endIndex.getter(v115);
          goto LABEL_3;
        }
        v64 = (uint64_t)v14;
        v65 = v3;
        v66 = v136;
        v67 = v31
            + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))
            + *(_QWORD *)(v66 + 72) * (_QWORD)v1;
        v68 = *(int *)(v135 + 48);
        v69 = v134;
        v70 = (uint64_t)v134 + v68;
        *v134 = v23;
        sub_10002A790(v67, (uint64_t)v69 + v68);
        v71 = v148;
        sub_10002A810(v70, v148);
        v72 = v144;
        sub_10002A790(v71, v144);
        v73 = v143;
        (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD *))(v66 + 56))(v72, 0, 1, v143);
        v74 = (uint64_t)v23 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList;
        swift_beginAccess((char *)v23 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList, v154, 0, 0);
        v75 = v145;
        sub_10000735C(v74, v145, (uint64_t *)&unk_100646680);
        swift_beginAccess(v74, aBlock, 33, 0);
        sub_10002A890(v72, v74);
        swift_endAccess(aBlock);
        v76 = v64 + *(int *)(v138 + 48);
        sub_10000735C(v74, v64, (uint64_t *)&unk_100646680);
        sub_10000735C(v75, v76, (uint64_t *)&unk_100646680);
        v77 = *(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v66 + 48);
        if (v77(v64, 1, v73) == 1)
        {
          v3 = v65;
          if (v77(v76, 1, v73) != 1)
            goto LABEL_51;
          sub_1000073A0(v64, (uint64_t *)&unk_100646680);
        }
        else
        {
          v78 = v122;
          sub_10000735C(v64, v122, (uint64_t *)&unk_100646680);
          v3 = v65;
          if (v77(v76, 1, v73) == 1)
          {
            sub_10002A7D4(v78);
LABEL_51:
            sub_1000073A0(v64, &qword_100650728);
LABEL_53:
            sub_10001E08C();
            goto LABEL_54;
          }
          v79 = v123;
          sub_10002A810(v76, v123);
          v80 = v78;
          v81 = static TTRAccountsListsViewModel.PinnedList.__derived_enum_equals(_:_:)(v78, v79);
          sub_10002A7D4(v79);
          sub_10002A7D4(v80);
          sub_1000073A0(v64, (uint64_t *)&unk_100646680);
          if ((v81 & 1) == 0)
            goto LABEL_53;
        }
LABEL_54:
        sub_1000073A0(v144, (uint64_t *)&unk_100646680);
        v82 = sub_1000073A0(v145, (uint64_t *)&unk_100646680);
        v83 = v146;
        TTRAccountsListsViewModel.PinnedList.id.getter(v82);
        v84 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v147 + 56);
        v84(v83, 0, 1, v3);
        v85 = v137;
        sub_10000735C((uint64_t)v129, v137, (uint64_t *)&unk_100646680);
        if (v77(v85, 1, v143))
        {
          sub_1000073A0(v85, (uint64_t *)&unk_100646680);
          v86 = 1;
          v87 = v141;
        }
        else
        {
          v88 = v123;
          sub_10002A790(v85, v123);
          v89 = sub_1000073A0(v85, (uint64_t *)&unk_100646680);
          v87 = v141;
          TTRAccountsListsViewModel.PinnedList.id.getter(v89);
          sub_10002A7D4(v88);
          v86 = 0;
        }
        v84(v87, v86, 1, v3);
        v90 = v142;
        v91 = v142 + *(int *)(v139 + 48);
        v92 = v146;
        sub_10000735C(v146, v142, &qword_100650718);
        sub_10000735C(v87, v91, &qword_100650718);
        v93 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v147 + 48);
        if (v93(v90, 1, v3) == 1)
        {
          sub_1000073A0(v87, &qword_100650718);
          sub_1000073A0(v92, &qword_100650718);
          v94 = v93(v91, 1, v3);
          if (v94 == 1)
            v95 = &qword_100650718;
          else
            v95 = &qword_100650710;
          if (v94 == 1)
            v96 = -1;
          else
            v96 = 0;
        }
        else
        {
          v97 = (uint64_t)v133;
          sub_10000735C(v90, (uint64_t)v133, &qword_100650718);
          if (v93(v91, 1, v3) == 1)
          {
            sub_1000073A0(v141, &qword_100650718);
            sub_1000073A0(v146, &qword_100650718);
            (*(void (**)(uint64_t, uint64_t))(v147 + 8))(v97, v3);
            v96 = 0;
            v95 = &qword_100650710;
          }
          else
          {
            v98 = v147;
            v99 = v121;
            (*(void (**)(char *, uint64_t, uint64_t))(v147 + 32))(v121, v91, v3);
            v100 = sub_10024FBEC();
            v96 = dispatch thunk of static Equatable.== infix(_:_:)(v133, v99, v3, v100);
            v101 = *(void (**)(char *, uint64_t))(v98 + 8);
            v101(v99, v3);
            sub_1000073A0(v141, &qword_100650718);
            sub_1000073A0(v146, &qword_100650718);
            v101(v133, v3);
            v95 = &qword_100650718;
          }
        }
        v14 = v126;
        v61 = v125;
        v31 = v124;
        sub_1000073A0(v142, v95);
        v102 = (objc_class *)type metadata accessor for TTRIPinnedListControl(0);
        v153.receiver = v23;
        v153.super_class = v102;
        v32 = (uint64_t)&selRef_supportsAttachments;
        v11 = (uint64_t)objc_msgSendSuper2(&v153, "isSelected");
        v152.receiver = v23;
        v152.super_class = v102;
        objc_msgSendSuper2(&v152, "setSelected:", v96 & 1);
        v151.receiver = v23;
        v151.super_class = v102;
        v103 = objc_msgSendSuper2(&v151, "isSelected");
        if ((_DWORD)v11 != (_DWORD)v103)
        {
          TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v103);
          v104 = TTRUserDefaults.animationSlowModeEnabled.getter();
          v105 = 0.15;
          if (*((_BYTE *)v23 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_selectedStateShowsPinnedListColor))
            v105 = 0.25;
          if ((v104 & 1) != 0)
            v106 = 3.0;
          else
            v106 = 1.0;
          v107 = v106 * v105;
          v108 = swift_allocObject(&unk_1005F9030, 24, 7);
          *(_QWORD *)(v108 + 16) = v23;
          v109 = objc_allocWithZone((Class)UIViewPropertyAnimator);
          aBlock[4] = sub_100250930;
          v150 = v108;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100006378;
          aBlock[3] = &unk_1005F9048;
          v110 = _Block_copy(aBlock);
          v11 = v150;
          v111 = v23;
          swift_release(v11);
          v112 = objc_msgSend(v109, "initWithDuration:controlPoint1:controlPoint2:animations:", v110, v107, 0.33, 0.0, 0.67, 1.0);
          _Block_release(v110);
          objc_msgSend(v112, "startAnimation");

        }
        v113 = v140[v128];
        v114 = *((unsigned __int8 *)v23
               + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_selectedStateShowsPinnedListColor);
        *((_BYTE *)v23 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_selectedStateShowsPinnedListColor) = v113;
        if (v113 != v114)
          sub_10001EA80();
        v1 = (uint64_t (**)())((char *)v1 + 1);
        v62 = *(void **)((char *)v23 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_grid);
        objc_msgSend(v62, "directionalLayoutMargins");
        objc_msgSend(v62, "setDirectionalLayoutMargins:");

        sub_10002A7D4(v148);
      }
    }
  }
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v61);
}

uint64_t sub_10002A750(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_10002A790(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002A7D4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10002A810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for TTRIPinnedListControl(uint64_t a1)
{
  uint64_t result;

  result = qword_100646668;
  if (!qword_100646668)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIPinnedListControl);
  return result;
}

uint64_t sub_10002A890(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_100646680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for TTRIPinnedListEmptyControl()
{
  return objc_opt_self(_TtC9Reminders26TTRIPinnedListEmptyControl);
}

_QWORD *sub_10002A8F8()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *result;
  uint64_t v11;
  uint64_t j;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;

  v1 = objc_msgSend(v0, "arrangedSubviewRows");
  if (!v1)
    return _swiftEmptyArrayStorage;
  v2 = v1;
  v3 = sub_10002A750(&qword_100650720);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain(v4);
    for (i = 0; i != v5; ++i)
    {
      v7 = *(_QWORD *)(v4 + 8 * i + 32);
      v8 = swift_bridgeObjectRetain(v7);
      sub_10002AAE0(v8);
    }
    swift_bridgeObjectRelease_n(v4, 2);
  }
  else
  {
    swift_bridgeObjectRelease(v4);
  }
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
    v9 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (_QWORD *)swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    if (v9)
      goto LABEL_9;
LABEL_21:
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    return _swiftEmptyArrayStorage;
  }
  if ((uint64_t)_swiftEmptyArrayStorage < 0)
    v19 = _swiftEmptyArrayStorage;
  else
    v19 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v19);
  v9 = (uint64_t)result;
  if (!result)
    goto LABEL_21;
LABEL_9:
  if (v9 >= 1)
  {
    v11 = type metadata accessor for TTRIPinnedListControl(0);
    for (j = 0; j != v9; ++j)
    {
      v14 = (void *)_swiftEmptyArrayStorage[j + 4];
      v15 = swift_dynamicCastClass(v14, v11);
      if (v15)
      {
        v16 = v15;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
        v18 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v17 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v18 >= v17 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
        v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
        specialized Array._endMutation()(v13);
      }
    }
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_10002AAE0(uint64_t a1)
{
  return sub_100450D4C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10002AAEC);
}

uint64_t sub_10002AAEC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1003DC8E4(&qword_10065F598, &qword_100650720);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10002A750(&qword_100650720);
          v13 = sub_10002AD10(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void destroy for TTRITemplateSavingDismissAnimationCoordinator.SourceView(id *a1)
{

}

void (*sub_10002AD10(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_10002AD64(v6, a2, a3);
  return sub_10002AD0C;
}

uint64_t (*sub_10002AD64(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_10002AD00;
  }
  __break(1u);
  return result;
}

uint64_t sub_10002ADD0(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  uint64_t v5;

  v4 = a1;
  LOBYTE(a3) = sub_10002AE08(a3, v5);

  return a3 & 1;
}

uint64_t sub_10002AE08(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t result;
  uint64_t v6;
  void *Strong;
  char v8;
  char v9;
  uint64_t (*v10)();
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  if (!a1)
    goto LABEL_20;
  if ((static Selector.== infix(_:_:)("tableView:estimatedHeightForHeaderInSection:", a1) & 1) != 0)
  {
    result = sub_10002BB68(sub_10002BBC0);
    if (!result)
      return result;
    v6 = result;
    Strong = (void *)swift_unknownObjectUnownedLoadStrong(&v2[qword_100645EF8]);
    v8 = sub_10002F988();
    goto LABEL_5;
  }
  if ((static Selector.== infix(_:_:)("tableView:heightForHeaderInSection:", a1) & 1) != 0
    || (static Selector.== infix(_:_:)("tableView:viewForHeaderInSection:", a1) & 1) != 0)
  {
    v10 = sub_10002BBC0;
    goto LABEL_9;
  }
  if ((static Selector.== infix(_:_:)("tableView:estimatedHeightForFooterInSection:", a1) & 1) == 0)
  {
    if ((static Selector.== infix(_:_:)("tableView:heightForFooterInSection:", a1) & 1) != 0
      || (static Selector.== infix(_:_:)("tableView:viewForFooterInSection:", a1) & 1) != 0)
    {
      v10 = sub_10002BF14;
      goto LABEL_9;
    }
    if ((static Selector.== infix(_:_:)("tableView:shouldDrawBottomSeparatorForSection:", a1) & 1) != 0
      || (static Selector.== infix(_:_:)("tableView:shouldHaveFullLengthBottomSeparatorForSection:", a1) & 1) != 0)
    {
      v10 = sub_10002BF5C;
LABEL_9:
      result = sub_10002BB68(v10);
      if (result)
      {
        swift_release(result);
        return 1;
      }
      return result;
    }
LABEL_20:
    v11.receiver = v2;
    v11.super_class = ObjectType;
    return (uint64_t)objc_msgSendSuper2(&v11, "respondsToSelector:", a1);
  }
  result = sub_10002BB68(sub_10002BF14);
  if (result)
  {
    v6 = result;
    Strong = (void *)swift_unknownObjectUnownedLoadStrong(&v2[qword_100645EF8]);
    v8 = sub_100022FD4();
LABEL_5:
    v9 = v8;
    swift_release(v6);

    return v9 & 1;
  }
  return result;
}

uint64_t sub_10002AFAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  char v21;
  int v22;
  _OWORD v23[9];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _OWORD v27[2];
  _BYTE v28[24];

  v3 = type metadata accessor for TTRIAccountsListsViewListCell.ListItem(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (_OWORD *)((char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  v9 = (char *)v23 - v8;
  v10 = sub_10002A750((uint64_t *)&unk_100640EF0);
  __chkstk_darwin(v10);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listItem;
  swift_beginAccess(v13, v28, 0, 0);
  sub_10000735C(v13, (uint64_t)v12, (uint64_t *)&unk_100640EF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3))
  {
    sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_100640EF0);
    return 0;
  }
  sub_10002B1E8((uint64_t)v12, (uint64_t)v9, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
  sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_100640EF0);
  sub_10002B1E8((uint64_t)v9, (uint64_t)v7, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
  if (swift_getEnumCaseMultiPayload(v7, v3) == 1)
  {
    sub_10001F544((uint64_t)v7, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
    sub_10001F544((uint64_t)v9, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
  }
  else
  {
    v15 = v7[11];
    v25 = v7[10];
    v26 = v15;
    v27[0] = v7[12];
    *(_OWORD *)((char *)v27 + 10) = *(_OWORD *)((char *)v7 + 202);
    v16 = v7[7];
    v23[6] = v7[6];
    v23[7] = v16;
    v17 = v7[9];
    v23[8] = v7[8];
    v24 = v17;
    v18 = v7[3];
    v23[2] = v7[2];
    v23[3] = v18;
    v19 = v7[5];
    v23[4] = v7[4];
    v23[5] = v19;
    v20 = v7[1];
    v23[0] = *v7;
    v23[1] = v20;
    sub_100075FE8((uint64_t)v23);
    v21 = BYTE2(v24);
    if (BYTE2(v24) == 2)
    {
      sub_10001F544((uint64_t)v9, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
      return 0;
    }
    sub_10001F544((uint64_t)v9, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
    if ((v21 & 1) == 0)
      return 0;
  }
  v22 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_currentEditModeTransition);
  if (v22 == 2)
    return 0;
  if ((v22 & 1) != 0)
    return 2;
  else
    return 1;
}

uint64_t sub_10002B1E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for TTRIAccountsListsViewListCell.ListItem(uint64_t a1)
{
  return sub_100007328(a1, qword_100664C10, (uint64_t)&nominal type descriptor for TTRIAccountsListsViewListCell.ListItem);
}

uint64_t sub_10002B240(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    v3 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    v4 = type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v4 + 28) + 8));
    v5 = (_QWORD *)(a1 + *(int *)(v4 + 40) + 8);
  }
  else
  {

    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 64));
    sub_10002B328(*(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_BYTE *)(a1 + 120));
    sub_10002B318(*(void **)(a1 + 128), *(id *)(a1 + 136), *(_BYTE *)(a1 + 144));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 168));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 176));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 184));

    v5 = (_QWORD *)(a1 + 208);
  }
  return swift_bridgeObjectRelease(*v5);
}

void sub_10002B318(void *a1, id a2, char a3)
{
  if ((a3 & 1) != 0)
    swift_bridgeObjectRelease(a2);
  else

}

void sub_10002B328(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) != 0)
  {

  }
  else
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a6);
  }
}

uint64_t sub_10002B364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t WitnessTable;
  _QWORD *v13;
  uint64_t v14;
  char v15;
  uint64_t result;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;

  v10 = type metadata accessor for TTRITreeViewSectionsMetadata.Section(255, a6, a7, a4);
  v11 = type metadata accessor for Array(0, v10);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v11);
  v13 = RandomAccessCollection<>.indices.getter(&v28, v11, WitnessTable, &protocol witness table for Int);
  v27 = v28;
  v26 = IndexPath.section.getter(v13);
  v14 = sub_10002A750(&qword_100644730);
  v15 = Range.contains(_:)(&v26, v14);
  result = 0;
  if ((v15 & 1) != 0)
  {
    v17 = IndexPath.section.getter(0);
    Array.subscript.getter(&v28, v17, a2, v10);
    v18 = v28;
    *(_QWORD *)&v27 = *((_QWORD *)&v28 + 1);
    v20 = type metadata accessor for TTRITreeViewNode(255, a6, a7, v19);
    v21 = type metadata accessor for Array(0, v20);
    v22 = swift_getWitnessTable(&protocol conformance descriptor for [A], v21);
    v23 = RandomAccessCollection<>.indices.getter(&v28, v21, v22, &protocol witness table for Int);
    v27 = v28;
    v26 = IndexPath.row.getter(v23);
    v24 = Range.contains(_:)(&v26, v14);
    if ((v24 & 1) != 0)
    {
      v25 = IndexPath.row.getter(v24);
      Array.subscript.getter(&v28, v25, *((_QWORD *)&v18 + 1), v20);
      swift_bridgeObjectRelease(*((_QWORD *)&v18 + 1));
      swift_release(v18);
      return v28;
    }
    else
    {
      swift_bridgeObjectRelease(*((_QWORD *)&v18 + 1));
      swift_release(v18);
      return 0;
    }
  }
  return result;
}

uint64_t sub_10002B51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

uint64_t sub_10002B548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  char v40;
  uint64_t v41;
  uint64_t v42;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
    *(_BYTE *)(a1 + v7[5]) = *(_BYTE *)(a2 + v7[5]);
    *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
    v8 = v7[7];
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)(a2 + v8);
    v12 = *v10;
    v11 = v10[1];
    *v9 = v12;
    v9[1] = v11;
    *(_QWORD *)(a1 + v7[8]) = *(_QWORD *)(a2 + v7[8]);
    *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
    v13 = v7[10];
    v14 = (_QWORD *)(a1 + v13);
    v15 = (_QWORD *)(a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v16);
    v17 = a1;
    v18 = a3;
    v19 = 1;
  }
  else
  {
    v20 = *(void **)a2;
    v21 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v21;
    v42 = a3;
    v22 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 16) = v22;
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    v23 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v23;
    v24 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v24;
    v25 = *(void **)(a2 + 72);
    v26 = *(_QWORD *)(a2 + 80);
    v27 = *(_QWORD *)(a2 + 88);
    v28 = *(_QWORD *)(a2 + 96);
    v29 = *(_QWORD *)(a2 + 104);
    v41 = *(_QWORD *)(a2 + 112);
    v40 = *(_BYTE *)(a2 + 120);
    v30 = v20;
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v24);
    sub_10002B764(v25, v26, v27, v28, v29, v41, v40);
    *(_QWORD *)(a1 + 72) = v25;
    *(_QWORD *)(a1 + 80) = v26;
    *(_QWORD *)(a1 + 88) = v27;
    *(_QWORD *)(a1 + 96) = v28;
    *(_QWORD *)(a1 + 104) = v29;
    *(_QWORD *)(a1 + 112) = v41;
    *(_BYTE *)(a1 + 120) = v40;
    v31 = *(void **)(a2 + 128);
    v32 = *(void **)(a2 + 136);
    LOBYTE(v23) = *(_BYTE *)(a2 + 144);
    sub_10002B7A0(v31, v32, v23);
    *(_QWORD *)(a1 + 128) = v31;
    *(_QWORD *)(a1 + 136) = v32;
    *(_BYTE *)(a1 + 144) = v23;
    *(_DWORD *)(a1 + 145) = *(_DWORD *)(a2 + 145);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    v33 = *(_QWORD *)(a2 + 168);
    v34 = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 168) = v33;
    *(_QWORD *)(a1 + 176) = v34;
    v35 = *(_QWORD *)(a2 + 184);
    v36 = *(void **)(a2 + 192);
    *(_QWORD *)(a1 + 184) = v35;
    *(_QWORD *)(a1 + 192) = v36;
    v37 = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = v37;
    *(_WORD *)(a1 + 216) = *(_WORD *)(a2 + 216);
    swift_bridgeObjectRetain(v33);
    swift_bridgeObjectRetain(v34);
    swift_bridgeObjectRetain(v35);
    v38 = v36;
    swift_bridgeObjectRetain(v37);
    v17 = a1;
    v18 = v42;
    v19 = 0;
  }
  swift_storeEnumTagMultiPayload(v17, v18, v19);
  return a1;
}

id sub_10002B764(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) != 0)
    return a1;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a4);
  return (id)swift_bridgeObjectRetain(a6);
}

id sub_10002B7A0(void *a1, id a2, char a3)
{
  if ((a3 & 1) != 0)
    return (id)swift_bridgeObjectRetain(a2);
  else
    return a1;
}

uint64_t type metadata accessor for TTRITreeViewNode(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRITreeViewNode);
}

uint64_t type metadata accessor for TTRITreeViewSectionsMetadata.Section(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRITreeViewSectionsMetadata.Section);
}

uint64_t *sub_10002B7CC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

void sub_10002B800(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t Strong;
  uint64_t v11;
  char v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double *v17;
  double *v18;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  objc_super *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;
  uint64_t v32;

  isEscapingClosureAtFileLocation = v4;
  Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listsViewListCellDelegate);
  if (Strong)
  {
    v11 = Strong;
    v12 = sub_10002AFAC(v4);
    swift_unknownObjectRelease(v11);
  }
  else
  {
    v12 = 0;
  }
  objc_msgSend((id)isEscapingClosureAtFileLocation, "frame");
  v14 = v13;
  v16 = v15;
  v17 = (double *)swift_allocObject(&unk_10060C6F8, 48, 7);
  v18 = v17;
  v17[2] = a1;
  v17[3] = a2;
  v17[4] = a3;
  v17[5] = a4;
  if (v14 != a1 || v16 != a2)
  {
    if (!v12)
    {
      v26 = type metadata accessor for TTRIAccountsListsViewListCell(0);
      v29 = isEscapingClosureAtFileLocation;
      v27 = (objc_super *)&v29;
      goto LABEL_15;
    }
    if (v12 != 1)
    {
      v17[2] = v14;
      v17[3] = v16;
      v26 = type metadata accessor for TTRIAccountsListsViewListCell(0);
      v32 = isEscapingClosureAtFileLocation;
      v27 = (objc_super *)&v32;
      a1 = v14;
      a2 = v16;
      goto LABEL_15;
    }
    v20 = (void *)objc_opt_self(UIView);
    v21 = swift_allocObject(&unk_10060C720, 32, 7);
    *(_QWORD *)(v21 + 16) = isEscapingClosureAtFileLocation;
    *(_QWORD *)(v21 + 24) = v18;
    v22 = swift_allocObject(&unk_10060C748, 32, 7);
    *(_QWORD *)(v22 + 16) = sub_1004F7194;
    *(_QWORD *)(v22 + 24) = v21;
    aBlock[4] = sub_10001B278;
    v31 = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001B258;
    aBlock[3] = &unk_10060C760;
    v23 = _Block_copy(aBlock);
    v24 = v31;
    v25 = (id)isEscapingClosureAtFileLocation;
    swift_retain(v18);
    swift_retain(v22);
    objc_msgSend(v20, "performWithoutAnimation:", v23, swift_release(v24).n128_f64[0]);
    _Block_release(v23);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v22, "", 122, 125, 52, 1);
    swift_release(v21);
    swift_release(v18);
    swift_release(v22);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return;
    __break(1u);
  }
  v26 = type metadata accessor for TTRIAccountsListsViewListCell(0);
  v28 = isEscapingClosureAtFileLocation;
  v27 = (objc_super *)&v28;
LABEL_15:
  v27->super_class = (Class)v26;
  -[objc_super setFrame:](v27, "setFrame:", a1, a2, a3, a4, v28);
  swift_release(v18);
}

uint64_t type metadata accessor for TTRIAccountsListsViewListCell(uint64_t a1)
{
  return sub_100007328(a1, (uint64_t *)&unk_100664780, (uint64_t)&nominal type descriptor for TTRIAccountsListsViewListCell);
}

double sub_10002BAC8(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD, _QWORD, _QWORD), void (*a4)(char *, char *))
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;

  v8 = swift_isaMask & *v4;
  v13 = 0;
  v14 = sub_10002BB68(a2);
  v12 = v4;
  v9 = a3(0, *(_QWORD *)(v8 + 80), *(_QWORD *)(v8 + 88));
  sub_10002BBC8(a1, (uint64_t)&v14, (uint64_t)&v13, a4, (uint64_t)&v11, v9, (uint64_t)&type metadata for CGFloat, (uint64_t)&v15);
  swift_release(v14);
  return v15;
}

uint64_t sub_10002BB68(uint64_t (*a1)(void))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_100022F8C(&qword_100645F28, (uint64_t (*)(uint64_t))sub_100022FD4);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = a1();
  swift_retain(v4);
  swift_release(v3);
  return v4;
}

uint64_t sub_10002BBC0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 592);
}

uint64_t sub_10002BBC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(char *, char *)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  _QWORD *v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  char *v37;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48[24];

  v45 = a3;
  v46 = a7;
  v42 = a5;
  v43 = a4;
  v44 = a1;
  v47 = a8;
  v11 = swift_isaMask & *v8;
  v12 = *(_QWORD *)(v11 + 0x50);
  v41 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(a1);
  v40 = (char *)&v39 - v13;
  v15 = type metadata accessor for Optional(0, v14);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v39 - v18;
  v20 = *(_QWORD *)(a6 - 8);
  __chkstk_darwin(v17);
  v22 = (char *)&v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, a2, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, a6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  else
  {
    v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v20 + 32))(v22, v19, a6);
    v27 = sub_1000232AC(v23, v24, v25, v26);
    v29 = v28;
    v31 = v30;
    v33 = sub_10002BE0C(v44, v27, v28, v30, v32 & 1, v12, *(_QWORD *)(v11 + 88));
    swift_bridgeObjectRelease(v31);
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease(v27);
    if (v33)
    {
      v34 = v33 + *(_QWORD *)(*(_QWORD *)v33 + 144);
      v35 = swift_beginAccess(v34, v48, 0, 0);
      v37 = v40;
      v36 = v41;
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v41 + 16))(v40, v34, v12, v35);
      v43(v37, v22);
      swift_release(v33);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v12);
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, a6);
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, a6);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v47, v45);
}

uint64_t sub_10002BE0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t WitnessTable;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  __int128 v16;
  __int128 v17;

  v9 = type metadata accessor for TTRITreeViewSectionsMetadata.Section(255, a6, a7, a4);
  v10 = type metadata accessor for Array(0, v9);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v10);
  RandomAccessCollection<>.indices.getter(&v17, v10, WitnessTable, &protocol witness table for Int);
  v16 = v17;
  v15 = a1;
  v12 = sub_10002A750(&qword_100644730);
  v13 = 0;
  if ((Range.contains(_:)(&v15, v12) & 1) != 0)
  {
    Array.subscript.getter(&v17, a1, a2, v9);
    v13 = v17;
    swift_bridgeObjectRelease(*((_QWORD *)&v17 + 1));
  }
  return v13;
}

uint64_t type metadata accessor for TTRIAnyTreeViewSectionHeaderViewProviding(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIAnyTreeViewSectionHeaderViewProviding);
}

void sub_10002BEF4(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;

  sub_100023470(a1, *(_QWORD *)(v2 + 16), (double (*)(void *, uint64_t))sub_1000237E4, a2);
}

uint64_t sub_10002BF14()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 600);
}

void sub_10002BF1C(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;

  sub_100023470(a1, *(_QWORD *)(v2 + 16), (double (*)(void *, uint64_t))sub_100024F8C, a2);
}

void sub_10002BF3C(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;

  sub_100023470(a1, *(_QWORD *)(v2 + 16), (double (*)(void *, uint64_t))sub_1000237E8, a2);
}

uint64_t sub_10002BF5C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 608);
}

uint64_t type metadata accessor for TTRIAnyTreeViewSectionFooterViewProviding(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIAnyTreeViewSectionFooterViewProviding);
}

BOOL sub_10002BF70(uint64_t *a1, uint64_t *a2)
{
  return sub_10002BF90(*a1, *a2);
}

BOOL sub_10002BF90(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16);
}

uint64_t sub_10002BFC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002BFD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002BFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002BFF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C004(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C014(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C024(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C034(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C044(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C054(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C064(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C074(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C084(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C094(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C0B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C0E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C104(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C114(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C124(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C134(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C144(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C154(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C164(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C174(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C184(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C194(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C1B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C1D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C204(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C214(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C224(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C234(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C244(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C254(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C264(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C274(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C284(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C294(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C2B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C2C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C2E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C2F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C304(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C314(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C324(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C334(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C344(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C354(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C364(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C374(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C384(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C394(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C3A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C3B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C3D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C3E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C3F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C404(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C414(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C424(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C434(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C444(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C454(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C464(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C474(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C484(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C494(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C4B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C4C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C504(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C514(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C524(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C534(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C544(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C554(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C564(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C574(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C584(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C594(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C5A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C5B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C5C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C5D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C5F4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C5FC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C604(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C60C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C614(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C61C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C624(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C62C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C634(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C63C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C644(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C64C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C654(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C65C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C664(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C66C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C674(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C67C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C684(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C68C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C694(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C69C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C6A4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C6AC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C6B4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C6BC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C6C4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C6CC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C6D4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C6DC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C6E4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C6EC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C6F4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C6FC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C704(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C70C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C714(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C71C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C724(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C72C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C734(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C73C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C744(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C74C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C754(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C75C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C764(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C76C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C774(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C77C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C784(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C78C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C794(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C79C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C7A4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C7AC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C7B4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C7BC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C7C4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C7CC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C7D4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C7DC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C7E4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C7EC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C7F4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C7FC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C804(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C80C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C814(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C81C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C824(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C82C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C834(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C83C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C844(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C84C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C854(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C85C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C864(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C86C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C874(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C87C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C884(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C88C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C894(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C89C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C8A4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C8AC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C8B4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C8BC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C8C4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C8CC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C8D4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C8DC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C8E4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C8EC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C8F4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C8FC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C904(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_10002C90C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_100022E10(a1, a2, a3, a4, (void (*)(char *, char *))sub_100023450);
}

uint64_t initializeBufferWithCopyOfBuffer for TTRApplicationRunProperties(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

__n128 initializeWithTake for TTRIRemindersListCompletedCellContentConfiguration(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_10002C950()
{
  return 0;
}

double sub_10002C958(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_100022E10(a1, a2, a3, a4, (void (*)(char *, char *))sub_100023574);
}

uint64_t sub_10002C964(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1000172BC(a1, a2, a3, a4, &qword_100645F10, (uint64_t (*)(uint64_t))sub_100022FD4, (uint64_t (*)(_QWORD, _QWORD, _QWORD))type metadata accessor for TTRIAnyTreeViewDataSource, (void (*)(char *, char *))sub_100023594);
}

__n128 initializeWithTake for TTRIRemindersBoardDragItemSources(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_10002C9D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100019DFC(a1, a2, *(double *)(v2 + 16));
}

uint64_t type metadata accessor for TTRIAccountsListsPresenter.AccountMenuContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIAccountsListsPresenter.AccountMenuContent);
}

uint64_t type metadata accessor for TTRITreeView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRITreeView);
}

uint64_t sub_10002CA5C(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_10002CAA0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750(&qword_100640E50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10002CAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100651F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_10002CB28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_10002CC08(uint64_t a1)
{
  return sub_10000F658(a1, type metadata accessor for TTRIPinnedListControl);
}

uint64_t sub_10002CC14(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10000926C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_10002CC30(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10002CD20(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

void type metadata accessor for LaunchOptionsKey(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063E2A0, (uint64_t)&unk_1005EB640);
}

unint64_t sub_10002CDD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100640F30;
  if (!qword_100640F30)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100640F30);
  }
  return result;
}

uint64_t sub_10002CE14(uint64_t a1)
{
  return sub_1000199E0(a1, sub_10002CDC0, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_1004789DC);
}

uint64_t sub_10002CE28(uint64_t a1)
{
  return sub_1000199E0(a1, sub_10002CDC0, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_100478C50);
}

void sub_10002CE3C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  Swift::Int v19;
  id v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  char v25;
  uint64_t v26;
  id v27;
  char v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;

  v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v5 = a1;
    else
      v5 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v4)
    {
      if (a2 < 0)
        v6 = a2;
      else
        v6 = a2 & 0xFFFFFFFFFFFFFF8;
      __CocoaSet.isEqual(to:)(v6, v5);
      return;
    }
    v7 = v5;
    v8 = a2;
LABEL_16:
    sub_100341F14(v7, v8);
    return;
  }
  if (v4)
  {
    if (a2 < 0)
      v7 = a2;
    else
      v7 = a2 & 0xFFFFFFFFFFFFFF8;
    v8 = a1;
    goto LABEL_16;
  }
  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v29 = a1 + 56;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(a1 + 56);
  sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  v12 = 0;
  v30 = (unint64_t)(v9 + 63) >> 6;
  v13 = a2 + 56;
  while (1)
  {
    if (v11)
    {
      v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_42;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_52;
    }
    if (v16 >= v30)
      return;
    v17 = *(_QWORD *)(v29 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v30)
        return;
      v17 = *(_QWORD *)(v29 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v30)
          return;
        v17 = *(_QWORD *)(v29 + 8 * v12);
        if (!v17)
        {
          v12 = v16 + 3;
          if (v16 + 3 >= v30)
            return;
          v17 = *(_QWORD *)(v29 + 8 * v12);
          if (!v17)
            break;
        }
      }
    }
LABEL_41:
    v11 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_42:
    v19 = *(_QWORD *)(a2 + 40);
    v20 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v15);
    v21 = NSObject._rawHashValue(seed:)(v19);
    v22 = -1 << *(_BYTE *)(a2 + 32);
    v23 = v21 & ~v22;
    if (((*(_QWORD *)(v13 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
      goto LABEL_49;
    v31 = v12;
    v24 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v23);
    v25 = static NSObject.== infix(_:_:)(v24, v20);

    if ((v25 & 1) == 0)
    {
      v26 = ~v22;
      while (1)
      {
        v23 = (v23 + 1) & v26;
        if (((*(_QWORD *)(v13 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
          break;
        v27 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v23);
        v28 = static NSObject.== infix(_:_:)(v27, v20);

        if ((v28 & 1) != 0)
          goto LABEL_23;
      }
LABEL_49:

      return;
    }
LABEL_23:

    v12 = v31;
  }
  v18 = v16 + 4;
  if (v18 >= v30)
    return;
  v17 = *(_QWORD *)(v29 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_41;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v30)
      return;
    v17 = *(_QWORD *)(v29 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_41;
  }
LABEL_52:
  __break(1u);
}

uint64_t sub_10002D150(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_10002CA5C(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10002D190()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006447E0;
  if (!qword_1006447E0)
  {
    v1 = sub_10002CA5C((uint64_t *)&unk_100640F40);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1006447E0);
  }
  return result;
}

uint64_t sub_10002D1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v17;
  uint64_t v19;

  v4 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      do
      {
        sub_10002B1E8(a1 + v12, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
        sub_10002B1E8(a2 + v12, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
        v15 = static TTRAccountsListsViewModel.PinnedList.__derived_enum_equals(_:_:)(v10, v7);
        sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
        sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
        v17 = v14-- != 0;
        if ((v15 & 1) == 0)
          break;
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_10002D318(uint64_t a1, uint64_t a2)
{
  return sub_1000820BC(a1, a2, (uint64_t)&qword_1006415E8, UIViewController_ptr);
}

unint64_t sub_10002D32C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002A750(&qword_1006568A8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10000735C(v7, (uint64_t)&v16, qword_1006568B0);
    v8 = v16;
    v9 = v17;
    result = sub_100005CF4(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_100028D38(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10002D460(uint64_t a1)
{
  return sub_1000097AC(a1, &qword_100654348);
}

void sub_10002D470()
{
  uint64_t v0;

  sub_100015D10(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10002D488(uint64_t a1)
{
  return sub_1004C4854(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100015928);
}

uint64_t sub_10002D4A4(uint64_t a1)
{
  uint64_t v1;

  return sub_10000DDB8(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), (uint64_t)sub_1004C2084, (uint64_t)&unk_10060A668, (uint64_t)sub_10002D488);
}

uint64_t type metadata accessor for CellLayer()
{
  return objc_opt_self(_TtC9RemindersP33_E28D896C953424B0133C5B43DB432AE59CellLayer);
}

void sub_10002D4FC()
{
  uint64_t v0;

  sub_100009DC0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_10002D508(uint64_t a1)
{
  return sub_100012D54(a1, qword_1006737B0, (SEL *)&selRef_siriKit);
}

uint64_t sub_10002D51C(uint64_t a1)
{
  return sub_100012D54(a1, qword_1006737F8, (SEL *)&selRef_ppt);
}

uint64_t sub_10002D530(uint64_t a1)
{
  return sub_100012D54(a1, qword_100673780, (SEL *)&selRef_ui);
}

uint64_t sub_10002D544(uint64_t a1)
{
  return sub_100012D54(a1, qword_100673768, (SEL *)&selRef_userAction);
}

uint64_t sub_10002D558(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = &unk_100538EC0;
  v2[1] = &unk_100538ED8;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + 96);
}

uint64_t type metadata accessor for TTRIAccountsListsInlineTextAttachmentCell(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIAccountsListsInlineTextAttachmentCell);
}

uint64_t type metadata accessor for TTRISearchResultContainerViewController()
{
  return objc_opt_self(_TtC9Reminders39TTRISearchResultContainerViewController);
}

uint64_t sub_10002D5D0(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for () + 64;
  v2[1] = (char *)&value witness table for () + 64;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + 96);
}

uint64_t type metadata accessor for TTRIAnyTreeViewDataSourceSoftReloading(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIAnyTreeViewDataSourceSoftReloading);
}

uint64_t type metadata accessor for TTRIAccountsListsTagsSectionHeaderView()
{
  return objc_opt_self(_TtC9Reminders38TTRIAccountsListsTagsSectionHeaderView);
}

uint64_t type metadata accessor for TTRApplicationVisibilityChangeHandler()
{
  return objc_opt_self(_TtC9Reminders37TTRApplicationVisibilityChangeHandler);
}

void sub_10002D664(uint64_t a1)
{
  uint64_t v1;

  sub_100012260(a1, *(_BYTE *)(v1 + 16), *(_BYTE *)(v1 + 17), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10002D6E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t type metadata accessor for TTRITreeViewDropUpdateCoordinator.Hit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRITreeViewDropUpdateCoordinator.Hit);
}

void sub_10002D6F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t updated;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v9[2];

  updated = type metadata accessor for TTRITreeViewDropUpdateCoordinator.Hit(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  if (v6 <= 0x3F)
  {
    v9[0] = *(_QWORD *)(updated - 8) + 64;
    sub_1000065C0(319);
    if (v8 <= 0x3F)
    {
      v9[1] = *(_QWORD *)(v7 - 8) + 64;
      swift_initEnumMetadataMultiPayload(a1, 0, 2, v9);
    }
  }
}

uint64_t sub_10002D77C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t type metadata accessor for TTRITreeViewDropUpdateCoordinator.HitTestResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRITreeViewDropUpdateCoordinator.HitTestResult);
}

uint64_t type metadata accessor for TTRIActivityAlertRouterCapability()
{
  return objc_opt_self(_TtC9Reminders33TTRIActivityAlertRouterCapability);
}

uint64_t type metadata accessor for PerWindowLastSelectedListStorage(uint64_t a1)
{
  return sub_100007328(a1, (uint64_t *)&unk_100665500, (uint64_t)&nominal type descriptor for PerWindowLastSelectedListStorage);
}

uint64_t sub_10002D7C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC9Reminders32PerWindowLastSelectedListStorage_lastSelectedListInWindow;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_10000735C(v3, a1, (uint64_t *)&unk_100665590);
}

uint64_t type metadata accessor for TTRIHashtagAssociationPresenter()
{
  return objc_opt_self(_TtC9Reminders31TTRIHashtagAssociationPresenter);
}

uint64_t type metadata accessor for TTRIAccountsListsViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_100640A20;
  if (!qword_100640A20)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIAccountsListsViewController);
  return result;
}

void sub_10002D878(uint64_t a1)
{
  uint64_t v1;

  sub_100008D44(a1, *(_QWORD *)(v1 + 16), v1 + 24);
}

void sub_10002D96C(int a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  void *v32;
  _BOOL4 v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_isInExpandedSplitViewSnapshot;
  v8 = v1[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_isInExpandedSplitViewSnapshot];
  if (v8 == 2 || ((v8 ^ a1) & 1) == 0)
  {
    v1[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_isInExpandedSplitViewSnapshot] = (a1 ^ 1) & 1;
    if (qword_10063D2F0 != -1)
      swift_once(&qword_10063D2F0, sub_1000073DC);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100012DC4(v9, (uint64_t)qword_100640920);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(12, -1);
      v14 = swift_slowAlloc(32, -1);
      v41 = v7;
      v42 = 0;
      v15 = v14;
      *(_DWORD *)v13 = 136315138;
      v43 = 0xE000000000000000;
      v44 = v14;
      if ((a1 & 1) != 0)
        v16 = 0x65736C6166;
      else
        v16 = 1702195828;
      if ((a1 & 1) != 0)
        v17 = 0xE500000000000000;
      else
        v17 = 0xE400000000000000;
      v18 = v17;
      String.append(_:)(*(Swift::String *)&v16);
      swift_bridgeObjectRelease(v17);
      v19 = v43;
      v42 = sub_100027E40(v42, v43, &v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v13 + 4, v13 + 12);
      swift_bridgeObjectRelease(v19);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Reloading tree view because isInExpandedSplitView has changed { newValue: %s }", v13, 0xCu);
      swift_arrayDestroy(v15, 1, &type metadata for Any[8]);
      v20 = v15;
      v7 = v41;
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v13, -1, -1);
    }

    v21 = objc_msgSend(v2, "view");
    if (!v21)
      goto LABEL_32;
    v22 = v21;
    v23 = type metadata accessor for TTRIAccountsListsTreeView(0);
    v24 = swift_dynamicCastClass(v22, v23);
    if (!v24)
      goto LABEL_30;
    v25 = *(void **)(v24 + qword_10065D8E0);
    if (v25)
    {
      v26 = v25;
      sub_1000076E0((uint64_t)&unk_100640E58, (uint64_t *)&unk_100646A20, (uint64_t *)&unk_100640E40);

      v27 = objc_msgSend(v2, "view");
      if (!v27)
        goto LABEL_32;
      v22 = v27;
      v28 = swift_dynamicCastClass(v27, v23);
      if (!v28)
      {
LABEL_30:

        goto LABEL_32;
      }
      v29 = v28;
      sub_10000735C(*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel]+ direct field offset for TTRAccountsListsViewModel.hashtagsHeaderItem, (uint64_t)v6, (uint64_t *)&unk_100640E00);
      v30 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
      v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v6, 1, v30);
      v32 = *(void **)(v29 + qword_10065D8E0);
      if (v32)
      {
        v33 = v31 == 1;
        v34 = v32;
        sub_100314AE0((uint64_t)v6, v33, 5);

        sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640E00);
        v35 = objc_msgSend(v2, "view");
        if (v35)
        {
          v36 = v35;
          v37 = swift_dynamicCastClass(v35, v23);
          if (!v37)
          {

            goto LABEL_32;
          }
          v38 = v37;
          v39 = v2[v7];
          if (v39 == 2)
            v40 = sub_10000FEC4(v2);
          else
            v40 = v39 & 1;
          if (*(_QWORD *)(v38 + qword_10065D8D8))
          {
            objc_msgSend(*(id *)(v38 + qword_10065D8D8), "setSelectionFollowsFocus:", v40 & 1);

            sub_10001A818();
            return;
          }
          goto LABEL_29;
        }
LABEL_32:
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
}

uint64_t type metadata accessor for TTRIAddReminderBarButtonModule()
{
  return objc_opt_self(_TtC9Reminders30TTRIAddReminderBarButtonModule);
}

void sub_10002DDC8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[11];

  v4[0] = &unk_10053A8F0;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_10002DE74(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_10053A908;
    v4[4] = &unk_10053A908;
    v4[5] = &unk_10053A908;
    v4[6] = &unk_10053A920;
    v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[8] = &unk_10053A920;
    v4[9] = &unk_10053A908;
    v4[10] = &unk_10053A938;
    swift_updateClassMetadata2(a1, 256, 11, v4, a1 + 656);
  }
}

void sub_10002DE74(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100664790)
  {
    v2 = type metadata accessor for TTRIAccountsListsViewListCell.ListItem(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100664790);
  }
}

uint64_t type metadata accessor for TTRIAccountListsViewGroupCell()
{
  return objc_opt_self(_TtC9Reminders29TTRIAccountListsViewGroupCell);
}

uint64_t type metadata accessor for TTRIMainNavigationController()
{
  return objc_opt_self(_TtC9Reminders28TTRIMainNavigationController);
}

_QWORD *sub_10002DF4C(_QWORD *a1)
{
  swift_bridgeObjectRetain(*a1);
  return a1;
}

ValueMetadata *type metadata accessor for TTRIAccountsListsViewUpdates.EditModeTransition()
{
  return &type metadata for TTRIAccountsListsViewUpdates.EditModeTransition;
}

uint64_t sub_10002DF84(uint64_t a1)
{
  _QWORD v2[13];

  v2[0] = "\b";
  v2[1] = (char *)&value witness table for () + 64;
  v2[2] = (char *)&value witness table for () + 64;
  v2[3] = (char *)&value witness table for () + 64;
  v2[4] = (char *)&value witness table for () + 64;
  v2[5] = (char *)&value witness table for () + 64;
  v2[6] = (char *)&value witness table for () + 64;
  v2[7] = (char *)&value witness table for () + 64;
  v2[8] = &unk_10052CB58;
  v2[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[10] = (char *)&value witness table for () + 64;
  v2[11] = (char *)&value witness table for () + 64;
  v2[12] = &unk_10052CB70;
  return swift_initClassMetadata2(a1, 0, 13, v2, a1 + 96);
}

uint64_t type metadata accessor for TTRIAnyTreeViewDropDelegate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIAnyTreeViewDropDelegate);
}

uint64_t sub_10002E010(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v24[24];

  v5 = type metadata accessor for TTRITreeViewDropProposal(0);
  __chkstk_darwin(v5);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_10002A750(a1);
  result = __chkstk_darwin(v8);
  v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = *(_QWORD *)(v2 + qword_100653D48);
  if (v12)
  {
    v13 = (uint64_t *)(v2 + qword_100653D50);
    swift_beginAccess(v13, v24, 32, 0);
    v14 = *v13;
    if (*(_QWORD *)(v14 + 16) && (v15 = sub_1002AA474(v12), (v16 & 1) != 0))
    {
      v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15);
      swift_endAccess(v24);
      v18 = sub_10002A750(a2);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v11, 1, 1, v18);
      v19 = v17 + *(_QWORD *)(*(_QWORD *)v17 + 120);
      swift_beginAccess(v19, v24, 33, 0);
      swift_retain(v17);
      swift_unknownObjectRetain(v12);
      sub_100041F2C((uint64_t)v11, v19, a1);
      swift_endAccess(v24);
      v20 = (char *)v7 + *(int *)(v5 + 20);
      v21 = sub_10002A750(&qword_100653E50);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 4, v21);
      *v7 = 0;
      v22 = v17 + qword_1006736E0;
      swift_beginAccess(v17 + qword_1006736E0, v24, 33, 0);
      sub_100076238((uint64_t)v7, v22);
      swift_endAccess(v24);
      swift_unknownObjectRelease(v12);
      return swift_release(v17);
    }
    else
    {
      return swift_endAccess(v24);
    }
  }
  return result;
}

uint64_t sub_10002E208(uint64_t a1)
{
  _QWORD v2[9];

  v2[0] = "\b";
  v2[1] = (char *)&value witness table for () + 64;
  v2[2] = (char *)&value witness table for () + 64;
  v2[3] = (char *)&value witness table for () + 64;
  v2[4] = (char *)&value witness table for () + 64;
  v2[5] = (char *)&value witness table for () + 64;
  v2[6] = (char *)&value witness table for () + 64;
  v2[7] = (char *)&value witness table for () + 64;
  v2[8] = &unk_100534F68;
  return swift_initClassMetadata2(a1, 0, 9, v2, a1 + 96);
}

uint64_t type metadata accessor for TTRIAnyTreeViewDragDelegate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIAnyTreeViewDragDelegate);
}

uint64_t sub_10002E278(uint64_t result)
{
  uint64_t v1;
  void *v2;
  uint64_t *v3;
  double v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[2];
  _BYTE v11[24];
  uint64_t v12;

  v2 = *(void **)(v1 + qword_10065B808);
  if (v2)
  {
    v3 = (uint64_t *)result;
    *(_QWORD *)&v4 = swift_unknownObjectRetain(*(_QWORD *)(v1 + qword_10065B808)).n128_u64[0];
    v6 = objc_msgSend(v5, "localContext", v4);
    if (v6)
    {
      v7 = v6;
      _bridgeAnyObjectToAny(_:)(v10);
      swift_unknownObjectRelease(v7);
    }
    else
    {
      memset(v10, 0, sizeof(v10));
    }
    sub_10000F614((uint64_t)v10, (uint64_t)v11, &qword_100640E50);
    if (v12)
    {
      v8 = sub_10002A750(v3);
      if ((swift_dynamicCast(&v9, v11, &type metadata for Any[8], v8, 6) & 1) != 0)
      {
        swift_release(v9);
        objc_msgSend(v2, "setLocalContext:", 0);
      }
      return swift_unknownObjectRelease(v2);
    }
    else
    {
      swift_unknownObjectRelease(v2);
      return sub_1000073A0((uint64_t)v11, &qword_100640E50);
    }
  }
  return result;
}

uint64_t sub_10002E37C(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_10002E394(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 96);
}

uint64_t type metadata accessor for TTRIAccountsListsSelection(uint64_t a1)
{
  return sub_100007328(a1, qword_100656140, (uint64_t)&nominal type descriptor for TTRIAccountsListsSelection);
}

uint64_t type metadata accessor for TTRIAccountsListsPresenter(uint64_t a1)
{
  return sub_100007328(a1, (uint64_t *)&unk_100655FA8, (uint64_t)&nominal type descriptor for TTRIAccountsListsPresenter);
}

uint64_t sub_10002E400()
{
  return sub_1000054E0();
}

uint64_t sub_10002E408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003487D4(a3);
}

void sub_10002E414(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = &unk_10053B4D0;
  v4[1] = &unk_10053B4E8;
  v4[2] = &unk_10053B500;
  sub_100005494(319, (unint64_t *)&qword_100665470, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = &unk_10053B518;
    v4[5] = &unk_10053B4E8;
    v4[6] = &unk_10053B4E8;
    v4[7] = &unk_10053B530;
    v4[8] = &unk_10053B548;
    swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 80);
  }
}

uint64_t type metadata accessor for TTRIWindowSceneController(uint64_t a1)
{
  return sub_100007328(a1, (uint64_t *)&unk_100665460, (uint64_t)&nominal type descriptor for TTRIWindowSceneController);
}

uint64_t sub_10002E4E4()
{
  return type metadata accessor for TTRIWindowSceneController(0);
}

uint64_t sub_10002E50C(uint64_t a1)
{
  _QWORD v2[11];

  v2[0] = (char *)&value witness table for () + 64;
  v2[1] = (char *)&value witness table for () + 64;
  v2[2] = (char *)&value witness table for () + 64;
  v2[3] = (char *)&value witness table for () + 64;
  v2[4] = (char *)&value witness table for () + 64;
  v2[5] = (char *)&value witness table for () + 64;
  v2[6] = (char *)&value witness table for () + 64;
  v2[7] = (char *)&value witness table for () + 64;
  v2[8] = (char *)&value witness table for () + 64;
  v2[9] = (char *)&value witness table for () + 64;
  v2[10] = (char *)&value witness table for () + 64;
  return swift_initClassMetadata2(a1, 0, 11, v2, a1 + 96);
}

void *sub_10002E564(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1000067EC(a1, a2, v2);
}

uint64_t sub_10002E57C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_10002E59C(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = &unk_10052A610;
  v2[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 256, 4, v2, a1 + 1488);
}

uint64_t sub_10002E5EC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  int v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  char v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;

  v4 = sub_10002A750(&qword_100640E90);
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a2, (uint64_t)v13, v14);
  v15 = 1 << swift_getEnumCaseMultiPayload(v13, v11);
  if ((v15 & 0x27FD) != 0 || (v15 & 0x1800) == 0)
    return sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  v17 = type metadata accessor for TTRIAccountsListsTagsSectionHeaderView();
  result = swift_dynamicCastClass(a1, v17);
  if (result)
  {
    v18 = result;
    v19 = a1;
    static REMHashtagLabelSpecifier.empty.getter(v19);
    sub_10000F88C(v6);
    v20 = type metadata accessor for TTRIAccountsListsTreeView.ExtendedSelection(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v6, 1, v20) == 1)
    {
      sub_1000073A0((uint64_t)v6, &qword_100640E90);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload(v6, v20) == 2)
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        v21 = sub_10002A750(&qword_100640E98);
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, &v6[*(int *)(v21 + 48)], v7);
        v22 = (uint64_t (*)(uint64_t))&type metadata accessor for TTRAccountsListsViewModel.Item;
      }
      else
      {
        v22 = type metadata accessor for TTRIAccountsListsTreeView.ExtendedSelection;
      }
      sub_10001F544((uint64_t)v6, v22);
    }
    v23 = sub_1002A0E0C((uint64_t)v10);
    sub_1002A03A4(v23 & 1);
    v24 = *(_QWORD *)(v18 + OBJC_IVAR____TtC9Reminders38TTRIAccountsListsTagsSectionHeaderView_menu);
    if (v24)
    {
      v25 = swift_bridgeObjectRetain(*(_QWORD *)(v18
                                               + OBJC_IVAR____TtC9Reminders38TTRIAccountsListsTagsSectionHeaderView_menu));
      v26 = sub_1002A1008(v25, (uint64_t)v10);
      swift_bridgeObjectRelease(v24);
      sub_1002A022C((uint64_t)v26);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return result;
}

void sub_10002E874()
{
  qword_100673908 = 0x4040000000000000;
}

void sub_10002E884()
{
  qword_10065BA98 = 0x4030000000000000;
}

void sub_10002E894()
{
  qword_10065BAA0 = 0x4026000000000000;
}

void sub_10002E8A4()
{
  qword_10065BA90 = 0x4028000000000000;
}

uint64_t type metadata accessor for CursorInteractionDelegate()
{
  return objc_opt_self(_TtC9RemindersP33_CB8DF1A557292041751C28CBB1A9D75525CursorInteractionDelegate);
}

uint64_t type metadata accessor for TTRSiriVocabularyUpdater()
{
  return objc_opt_self(_TtC9Reminders24TTRSiriVocabularyUpdater);
}

void sub_10002E8F4()
{
  uint64_t v0;

  sub_10002E8FC(v0);
}

void sub_10002E8FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  NSObject *oslog;

  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if (qword_10063D568 != -1)
      swift_once(&qword_10063D568, sub_1000090BC);
    v1 = type metadata accessor for Logger(0);
    v2 = sub_100012DC4(v1, (uint64_t)qword_1006511E8);
    oslog = Logger.logObject.getter(v2);
    v3 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(oslog, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v3, "Update in progress, skipping", v4, 2u);
      swift_slowDealloc(v4, -1, -1);
    }

  }
  else
  {
    *(_BYTE *)(a1 + 24) = 1;
    sub_10001C9AC();
    *(_BYTE *)(a1 + 24) = 0;
  }
}

uint64_t sub_10002E9F4(uint64_t a1)
{
  _QWORD v2[19];

  v2[0] = "\b";
  v2[1] = "\b";
  v2[2] = &unk_1005247A8;
  v2[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[4] = &unk_1005247C0;
  v2[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[6] = &unk_1005247D8;
  v2[7] = "\b";
  v2[8] = "\b";
  v2[9] = "\b";
  v2[10] = "\b";
  v2[11] = &unk_1005247F0;
  v2[12] = &unk_100524808;
  v2[13] = "\b";
  v2[14] = &unk_100524820;
  v2[15] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[16] = &unk_100524808;
  v2[17] = "\b";
  v2[18] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 0, 19, v2, a1 + 96);
}

uint64_t type metadata accessor for TTRITreeViewTableAdapter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRITreeViewTableAdapter);
}

id sub_10002EAB8(void *a1)
{
  return sub_10001C934(a1, &qword_100645EE0, &qword_100653D08, (SEL *)&selRef_setDropDelegate_);
}

id sub_10002EAD4(void *a1)
{
  return sub_10001C934(a1, &qword_100645ED8, &qword_10065B7C8, (SEL *)&selRef_setDragDelegate_);
}

void sub_10002EAF0()
{
  sub_1000076E0((uint64_t)&unk_100640E58, (uint64_t *)&unk_100646A20, (uint64_t *)&unk_100640E40);
}

id sub_10002EB0C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_100008994(a1, a2, a3, a4, (void (*)(uint64_t))sub_10002EB18);
}

uint64_t sub_10002EB18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  _QWORD *v9;
  _QWORD v10[2];
  uint64_t v11;
  uint64_t v12;

  v3 = swift_isaMask & *v1;
  v10[1] = 0;
  v11 = sub_100022F8C(&qword_100645F10, (uint64_t (*)(uint64_t))sub_100022FD4);
  v9 = v1;
  v10[0] = 0;
  v5 = type metadata accessor for TTRIAnyTreeViewDataSource(0, *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), v4);
  v6 = sub_10002A750(&qword_100646428);
  sub_10002BBC8(a1, (uint64_t)&v11, (uint64_t)v10, (void (*)(char *, char *))sub_10002EBC4, (uint64_t)&v8, v5, v6, (uint64_t)&v12);
  swift_release(v11);
  return v12;
}

void sub_10002EBC4(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1000060F8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10002EBCC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for TTRITreeViewDropProposal.Intent(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for TTRITreeViewDropProposal(uint64_t a1)
{
  return sub_100007328(a1, qword_100653EB0, (uint64_t)&nominal type descriptor for TTRITreeViewDropProposal);
}

uint64_t type metadata accessor for TTRITreeViewDropProposal.Intent(uint64_t a1)
{
  return sub_100007328(a1, qword_100653F58, (uint64_t)&nominal type descriptor for TTRITreeViewDropProposal.Intent);
}

uint64_t sub_10002EC6C(uint64_t a1)
{
  _QWORD v2[39];

  v2[0] = (char *)&value witness table for () + 64;
  v2[1] = (char *)&value witness table for () + 64;
  v2[2] = (char *)&value witness table for () + 64;
  v2[3] = (char *)&value witness table for () + 64;
  v2[4] = (char *)&value witness table for () + 64;
  v2[5] = (char *)&value witness table for () + 64;
  v2[6] = (char *)&value witness table for () + 64;
  v2[7] = (char *)&value witness table for () + 64;
  v2[8] = (char *)&value witness table for () + 64;
  v2[9] = (char *)&value witness table for () + 64;
  v2[10] = (char *)&value witness table for () + 64;
  v2[11] = (char *)&value witness table for () + 64;
  v2[12] = (char *)&value witness table for () + 64;
  v2[13] = (char *)&value witness table for () + 64;
  v2[14] = (char *)&value witness table for () + 64;
  v2[15] = (char *)&value witness table for () + 64;
  v2[16] = (char *)&value witness table for () + 64;
  v2[17] = (char *)&value witness table for () + 64;
  v2[18] = (char *)&value witness table for () + 64;
  v2[19] = (char *)&value witness table for () + 64;
  v2[20] = (char *)&value witness table for () + 64;
  v2[21] = (char *)&value witness table for () + 64;
  v2[22] = (char *)&value witness table for () + 64;
  v2[23] = (char *)&value witness table for () + 64;
  v2[24] = (char *)&value witness table for () + 64;
  v2[25] = (char *)&value witness table for () + 64;
  v2[26] = (char *)&value witness table for () + 64;
  v2[27] = (char *)&value witness table for () + 64;
  v2[28] = (char *)&value witness table for () + 64;
  v2[29] = (char *)&value witness table for () + 64;
  v2[30] = (char *)&value witness table for () + 64;
  v2[31] = (char *)&value witness table for () + 64;
  v2[32] = (char *)&value witness table for () + 64;
  v2[33] = (char *)&value witness table for () + 64;
  v2[34] = (char *)&value witness table for () + 64;
  v2[35] = (char *)&value witness table for () + 64;
  v2[36] = "\b";
  v2[37] = "\b";
  v2[38] = "\b";
  return swift_initClassMetadata2(a1, 0, 39, v2, a1 + 96);
}

void sub_10002ED0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1000254DC(a1, a2, a3, v3, (void (*)(uint64_t, uint64_t))sub_10002E5EC);
}

uint64_t type metadata accessor for TTRIRootViewController()
{
  return objc_opt_self(_TtC9Reminders22TTRIRootViewController);
}

void sub_10002ED68()
{
  uint64_t v0;

  sub_10000AFE8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t type metadata accessor for TTRICloudIsOffProvider()
{
  return objc_opt_self(_TtC9Reminders22TTRICloudIsOffProvider);
}

id sub_10002EDB0()
{
  uint64_t v0;

  return sub_1000094DC(*(_QWORD *)(v0 + 16));
}

void sub_10002EDC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (!*(_QWORD *)(v0 + 64))
  {
    v1 = (*(uint64_t (**)(void))(v0 + 72))();
    v2 = *(_QWORD *)(v0 + 64);
    *(_QWORD *)(v0 + 64) = v1;
    swift_unknownObjectRelease(v2);
  }
}

void sub_10002EFF4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[15];

  v4[0] = &unk_100524A28;
  v4[1] = &unk_100524A28;
  sub_10002FBA0(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[4] = &unk_100524A28;
    v4[5] = &unk_100524A28;
    v4[6] = &unk_100524A40;
    v4[7] = &unk_100524A58;
    v4[8] = &unk_100524A58;
    v4[9] = &unk_100524A58;
    v4[10] = &unk_100524A58;
    v4[11] = &unk_100524A58;
    v4[12] = &unk_100524A58;
    v4[13] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[14] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 15, v4, a1 + 80);
  }
}

uint64_t sub_10002F0A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;

  v1 = OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_dynamicDateGlyphCache;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_dynamicDateGlyphCache);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_dynamicDateGlyphCache);
  }
  else
  {
    v4 = v0;
    if (qword_10063D3D0 != -1)
      swift_once(&qword_10063D3D0, sub_100105C1C);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100012DC4(v5, (uint64_t)qword_1006465A0);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.fault.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "TTRIDynamicDateGlyphCache did not get passed down to TTRIPinnedListControl", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

    v10 = type metadata accessor for TTRIDynamicDateGlyphCache(0);
    swift_allocObject(v10, 40, 7);
    v3 = TTRIDynamicDateGlyphCache.init()();
    v11 = *(_QWORD *)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v3;
    swift_retain(v3);
    swift_release(v11);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

UIImage sub_10002F1D8()
{
  uint64_t v0;

  return sub_100006894(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10002F1E8(uint64_t a1)
{
  uint64_t v1;

  return sub_10000A998(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t type metadata accessor for TTRISearchController()
{
  return objc_opt_self(_TtC9RemindersP33_6BFE23A799CB20D2DB7CA4EA96508B8A20TTRISearchController);
}

uint64_t type metadata accessor for TTRIRootInteractor()
{
  return objc_opt_self(_TtC9Reminders18TTRIRootInteractor);
}

BOOL sub_10002F2B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  _BOOL8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t *v13;
  _QWORD v15[5];
  _BYTE v16[24];

  v1 = v0;
  v2 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v2);
  v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 32);
  if ((sub_1000129D4() & 1) == 0)
    return 0;
  v6 = sub_1000578D8();
  v7 = sub_100057BD0(v6);
  swift_bridgeObjectRelease(v6);
  v8 = v7 != 0;
  if (v7)
  {
    sub_10001413C((_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 72));
    v9 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
    sub_10029B534(v7, (uint64_t)v4, v1, (uint64_t)&off_1005FA018, v15);
    sub_100027F10(v15);

    sub_1000073A0((uint64_t)v4, (uint64_t *)&unk_1006463C0);
  }
  v10 = *(_QWORD *)(v5 + 32);
  v11 = type metadata accessor for TTRWelcomeStyle();
  *(_QWORD *)(swift_initStackObject(v11, v16) + 16) = v10;
  v12 = (void *)sub_10035F678();
  v13 = sub_10001413C((_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 72));
  sub_100343930(1, v12, v1, *v13);
  sub_10009DDA8(v12);
  return v8;
}

uint64_t sub_10002F41C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD aBlock[5];
  uint64_t v30;

  v1 = v0;
  v2 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v2);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_100009B40() || (sub_10032BD50() & 1) != 0)
    return 0;
  static TTRLocalizableStrings.PrivacyAlert.enableICloudSyncingTitle.getter();
  v7 = v6;
  static TTRLocalizableStrings.PrivacyAlert.enableICloudSyncingMessage.getter();
  v9 = v8;
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v5 = 1;
  v12 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v10, v11, 1);

  static TTRLocalizableStrings.PrivacyAlert.settingsButtonTitle.getter();
  v14 = v13;
  swift_retain(v1);
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  aBlock[4] = sub_100289BDC;
  v30 = v1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000D4884;
  aBlock[3] = &unk_1005FC920;
  v16 = _Block_copy(aBlock);
  swift_release(v30);
  v17 = (void *)objc_opt_self(UIAlertAction);
  v18 = objc_msgSend(v17, "actionWithTitle:style:handler:", v15, 0, v16);
  _Block_release(v16);

  static TTRLocalizableStrings.Common.notNowButton.getter();
  v20 = v19;
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  v22 = objc_msgSend(v17, "actionWithTitle:style:handler:", v21, 1, 0);

  objc_msgSend(v12, "addAction:", v22);
  objc_msgSend(v12, "addAction:", v18);
  static TaskPriority.userInitiated.getter(objc_msgSend(v12, "setPreferredAction:", v18));
  v23 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v4, 0, 1, v23);
  type metadata accessor for MainActor(0);
  swift_retain(v1);
  v24 = v12;
  v25 = static MainActor.shared.getter(v24);
  v26 = (_QWORD *)swift_allocObject(&unk_1005FC958, 48, 7);
  v26[2] = v25;
  v26[3] = &protocol witness table for MainActor;
  v26[4] = v1;
  v26[5] = v24;
  v27 = sub_100148368((uint64_t)v4, (uint64_t)&unk_100653198, (uint64_t)v26);

  swift_release(v27);
  return v5;
}

uint64_t sub_10002F710(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100527698, a1);
}

uint64_t type metadata accessor for TTRIRootAssembly()
{
  return objc_opt_self(_TtC9Reminders16TTRIRootAssembly);
}

void sub_10002F79C()
{
  uint64_t v0;

  sub_1000095BC(v0);
}

uint64_t sub_10002F7A4(uint64_t a1)
{
  uint64_t v1;

  return sub_10000BCB8(a1, v1);
}

uint64_t sub_10002F7BC@<X0>(_OWORD *a1@<X8>)
{
  return sub_10029FD70(a1);
}

uint64_t sub_10002F7D0(char a1)
{
  return sub_10000D63C(a1, (uint64_t)&unk_1005FD6A8, (uint64_t)sub_10002F7BC, &qword_100651F48, &qword_100653148);
}

uint64_t sub_10002F7F4(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = "\b";
  v2[1] = "\b";
  v2[2] = "\b";
  v2[3] = &unk_100536768;
  return swift_initClassMetadata2(a1, 0, 4, v2, a1 + 96);
}

void sub_10002F840(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v4 = a1;
  sub_10002F874((uint64_t)v4, v1, v2, v3);

}

void sub_10002F874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v6;

  v5 = (objc_class *)type metadata accessor for TTRITreeView(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a4);
  v6.receiver = v4;
  v6.super_class = v5;
  objc_msgSendSuper2(&v6, "layoutSubviews");
  if (*((_BYTE *)v4 + qword_10065D8F0) == 1)
  {
    *((_BYTE *)v4 + qword_10065D8F0) = 0;
    sub_10043C000(0);
  }
}

uint64_t type metadata accessor for PPTTestClass()
{
  return objc_opt_self(PPTTestClass);
}

uint64_t type metadata accessor for TTRIAccountsListsDropExceedsMaximumNumberOfPinnedListsTracker()
{
  return objc_opt_self(_TtC9Reminders61TTRIAccountsListsDropExceedsMaximumNumberOfPinnedListsTracker);
}

uint64_t sub_10002F960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10000650C(a1, a2, a3, v3);
}

uint64_t sub_10002F968(uint64_t a1)
{
  uint64_t v1;

  return sub_100005F30(a1, v1) & 1;
}

void *sub_10002F98C(uint64_t a1)
{
  uint64_t v1;

  return sub_100006150(a1, v1);
}

uint64_t sub_10002F994()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 64))();
}

uint64_t type metadata accessor for TTRIRootViewEmptyViewController()
{
  return objc_opt_self(_TtC9RemindersP33_FA7497EFB9442A0772420FA2AEB0251131TTRIRootViewEmptyViewController);
}

uint64_t REMSmartListChangeItem.canMakeIntoGroceriesList.getter()
{
  return 0;
}

unint64_t sub_10002FA6C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, void *a7, uint64_t a8, uint64_t a9, unint64_t a10, void *a11)
{
  void *v15;
  id v16;

  if (a3)
  {
    v15 = (void *)result;
    swift_bridgeObjectRetain(a5);
    v16 = v15;
    swift_bridgeObjectRetain(a3);
    sub_100077888(a6, a7);
    return sub_10023054C(a8, a9, a10, a11);
  }
  return result;
}

void sub_10002FAF0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, void *a7, uint64_t a8, uint64_t a9, unint64_t a10, void *a11)
{
  if (a3)
  {
    swift_bridgeObjectRelease(a3);

    swift_bridgeObjectRelease(a5);
    sub_100077044(a6, a7);
    sub_10007706C(a8, a9, a10, a11);
  }
}

uint64_t sub_10002FB74()
{
  return sub_1000175C8(&qword_100640E88, (uint64_t (*)(uint64_t))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (uint64_t)&protocol conformance descriptor for TTRAccountsListsViewModel.ItemIdentifier);
}

void sub_10002FBA0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1006506A0)
  {
    v2 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1006506A0);
  }
}

uint64_t sub_10002FBF4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750((uint64_t *)&unk_100653A90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10002FC34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_100653A90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_100031894(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "setFrame:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
}

id sub_100032140(uint64_t a1)
{
  void *v2;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setFrame:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "setContentSize:", *(double *)(a1 + 72), *(double *)(a1 + 80));
  objc_msgSend(*(id *)(a1 + 32), "_maxScrollerHeight");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v2, "bounds");

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "frame");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "setFrame:");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "frame");
  return _objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "scrollRectToVisible:animated:", 0);
}

id sub_10003221C(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100032284;
  v2[3] = &unk_1005E9FF8;
  v2[4] = *(_QWORD *)(a1 + 32);
  return +[UIView animateWithDuration:animations:](UIView, "animateWithDuration:animations:", v2, 0.2);
}

void sub_100032284(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "addButton"));
  objc_msgSend(v1, "setAlpha:", 1.0);

}

void sub_100032C14(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  int v16;
  void *v17;
  __int16 v18;
  void *v19;
  __int16 v20;
  void *v21;
  __int16 v22;
  void *v23;

  v6 = a3;
  v7 = a4;
  v8 = objc_claimAutoreleasedReturnValue(+[REMLogStore utility](REMLogStore, "utility"));
  v9 = v8;
  if (!v6 || v7)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_10050FCDC((uint64_t)v7, v9);
  }
  else
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "incompatibleDevices"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "needUpgradeDevices"));
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "incompatibleDeviceNames"));
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "needUpgradeDeviceNames"));
      v16 = 138413058;
      v17 = v10;
      v18 = 2112;
      v19 = v11;
      v20 = 2112;
      v21 = v12;
      v22 = 2112;
      v23 = v13;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Received deviceListResponse from CloudKit {incompatibleDevices %@, needUpgradeDevices: %@, incompatibleDeviceNames: %@, needUpgradeDeviceNames: %@}", (uint8_t *)&v16, 0x2Au);

    }
    v14 = *(_QWORD *)(a1 + 32);
    v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "incompatibleDeviceNames"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "needUpgradeDeviceNames"));
    (*(void (**)(uint64_t, NSObject *, void *))(v14 + 16))(v14, v9, v15);

  }
}

void sub_100032F68(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_100032F84(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id WeakRetained;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *i;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  BOOL v20;
  ICFullDeviceInfo *v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  id v33;
  id v34;
  void *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint8_t buf[4];
  void *v41;
  __int16 v42;
  void *v43;
  __int16 v44;
  void *v45;
  __int16 v46;
  void *v47;
  _BYTE v48[128];

  v4 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    v6 = objc_opt_class(AADeviceListResponse);
    v7 = REMCheckedDynamicCast(v6, v4);
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (!v8)
      goto LABEL_32;
    v33 = WeakRetained;
    v34 = v4;
    v35 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
    v36 = 0u;
    v37 = 0u;
    v38 = 0u;
    v39 = 0u;
    v32 = v8;
    v9 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject devices](v8, "devices"));
    v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v36, v48, 16);
    if (!v10)
      goto LABEL_27;
    v11 = v10;
    v12 = *(_QWORD *)v37;
    while (1)
    {
      for (i = 0; i != v11; i = (char *)i + 1)
      {
        if (*(_QWORD *)v37 != v12)
          objc_enumerationMutation(v9);
        v14 = *(void **)(*((_QWORD *)&v36 + 1) + 8 * (_QWORD)i);
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "name"));
        v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "model"));
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "modelDisplayName"));
        v18 = objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "swVersion"));
        v19 = (void *)v18;
        if (v15)
          v20 = v16 == 0;
        else
          v20 = 1;
        if (v20 || v17 == 0 || v18 == 0)
        {
          v23 = (ICFullDeviceInfo *)objc_claimAutoreleasedReturnValue(+[REMLogStore utility](REMLogStore, "utility"));
          if (os_log_type_enabled(&v23->super.super, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138413058;
            v41 = v15;
            v42 = 2112;
            v43 = v16;
            v44 = 2112;
            v45 = v17;
            v46 = 2112;
            v47 = v19;
            _os_log_error_impl((void *)&_mh_execute_header, &v23->super.super, OS_LOG_TYPE_ERROR, "Bad AADevice {name: %@, model: %@, modelDisplayName: %@, swVersion: %@}", buf, 0x2Au);
          }
          goto LABEL_24;
        }
        if (!objc_msgSend(*(id *)(a1 + 32), "isEqualToString:", v15)
          || (objc_msgSend(*(id *)(a1 + 40), "isEqualToString:", v19) & 1) == 0)
        {
          v23 = -[ICFullDeviceInfo initWithName:model:modelDisplayName:softwareVersion:]([ICFullDeviceInfo alloc], "initWithName:model:modelDisplayName:softwareVersion:", v15, v16, v17, v19);
          objc_msgSend(v35, "addObject:", v23);
LABEL_24:

        }
      }
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v36, v48, 16);
      if (!v11)
      {
LABEL_27:

        v24 = objc_claimAutoreleasedReturnValue(+[REMLogStore utility](REMLogStore, "utility"));
        if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v41 = v35;
          _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "Received deviceListResponse from iCloud {devices: %@}", buf, 0xCu);
        }

        (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
        WeakRetained = v33;
        v4 = v34;
        v8 = v32;
        goto LABEL_32;
      }
    }
  }
  v8 = objc_claimAutoreleasedReturnValue(+[REMLogStore utility](REMLogStore, "utility"));
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    sub_10050FD50(v8, v25, v26, v27, v28, v29, v30, v31);
LABEL_32:

}

void sub_100033390(uint64_t a1)
{
  NSObject *v2;
  dispatch_queue_attr_t v3;
  NSObject *v4;
  dispatch_queue_t v5;
  dispatch_queue_global_t global_queue;
  NSObject *v7;
  NSObject *v8;
  NSObject *v9;
  dispatch_time_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id WeakRetained;
  NSObject *v20;
  void **v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  void *v24;
  uint64_t v25;
  NSObject *v26;
  id v27;
  _QWORD block[5];
  NSObject *v29;
  id v30;

  v2 = dispatch_group_create();
  v3 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  v5 = dispatch_queue_create("com.apple.reminders.deviceListDevicesMutex", v4);

  global_queue = dispatch_get_global_queue(2, 0);
  v7 = objc_claimAutoreleasedReturnValue(global_queue);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000335B0;
  block[3] = &unk_1005EA128;
  block[4] = *(_QWORD *)(a1 + 32);
  v8 = v5;
  v29 = v8;
  objc_copyWeak(&v30, (id *)(a1 + 48));
  dispatch_group_async(v2, v7, block);

  v21 = _NSConcreteStackBlock;
  v22 = 3221225472;
  v23 = sub_1000339E0;
  v24 = &unk_1005EA128;
  v25 = *(_QWORD *)(a1 + 32);
  v9 = v8;
  v26 = v9;
  objc_copyWeak(&v27, (id *)(a1 + 48));
  dispatch_group_async(v2, v7, &v21);

  v10 = dispatch_time(0, 10000000000);
  if (dispatch_group_wait(v2, v10))
  {
    v11 = objc_claimAutoreleasedReturnValue(+[REMLogStore utility](REMLogStore, "utility", v21, v22, v23, v24, v25, v26));
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_10050FD84(v11, v12, v13, v14, v15, v16, v17, v18);

  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v20 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "workSemaphore"));
  dispatch_semaphore_signal(v20);

  if (*(_QWORD *)(a1 + 40))
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, *(dispatch_block_t *)(a1 + 40));

  objc_destroyWeak(&v27);
  objc_destroyWeak(&v30);

}

void sub_100033590(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000335B0(uint64_t a1)
{
  dispatch_semaphore_t v2;
  void *v3;
  NSObject *v4;
  _QWORD v5[4];
  id v6;
  NSObject *v7;
  id v8;

  v2 = dispatch_semaphore_create(0);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100033688;
  v5[3] = &unk_1005EA100;
  v3 = *(void **)(a1 + 32);
  v6 = *(id *)(a1 + 40);
  objc_copyWeak(&v8, (id *)(a1 + 48));
  v4 = v2;
  v7 = v4;
  objc_msgSend(v3, "fetchCloudKitDevicesWithCompletionBlock:", v5);
  dispatch_semaphore_wait(v4, 0xFFFFFFFFFFFFFFFFLL);

  objc_destroyWeak(&v8);
}

void sub_100033674(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100033688(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  ICMinimalDeviceInfo *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  ICMinimalDeviceInfo *v19;
  NSObject *v20;
  NSObject *v21;
  uint8_t v22[16];
  _QWORD block[4];
  id v24;
  id v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[128];
  _BYTE v35[128];

  v5 = a2;
  v6 = a3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v8 = v5;
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v30, v35, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v31;
    do
    {
      v12 = 0;
      do
      {
        if (*(_QWORD *)v31 != v11)
          objc_enumerationMutation(v8);
        v13 = -[ICMinimalDeviceInfo initWithName:upgradable:upgraded:]([ICMinimalDeviceInfo alloc], "initWithName:upgradable:upgraded:", *(_QWORD *)(*((_QWORD *)&v30 + 1) + 8 * (_QWORD)v12), 0, 0);
        objc_msgSend(v7, "addObject:", v13);

        v12 = (char *)v12 + 1;
      }
      while (v10 != v12);
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v30, v35, 16);
    }
    while (v10);
  }

  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  v14 = v6;
  v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v26, v34, 16);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)v27;
    do
    {
      v18 = 0;
      do
      {
        if (*(_QWORD *)v27 != v17)
          objc_enumerationMutation(v14);
        v19 = -[ICMinimalDeviceInfo initWithName:upgradable:upgraded:]([ICMinimalDeviceInfo alloc], "initWithName:upgradable:upgraded:", *(_QWORD *)(*((_QWORD *)&v26 + 1) + 8 * (_QWORD)v18), 1, 0);
        objc_msgSend(v7, "addObject:", v19);

        v18 = (char *)v18 + 1;
      }
      while (v16 != v18);
      v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v26, v34, 16);
    }
    while (v16);
  }

  if (objc_msgSend(v7, "count"))
  {
    v20 = *(NSObject **)(a1 + 32);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100033958;
    block[3] = &unk_1005EA0D8;
    objc_copyWeak(&v25, (id *)(a1 + 48));
    v24 = v7;
    dispatch_sync(v20, block);

    objc_destroyWeak(&v25);
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
  v21 = objc_claimAutoreleasedReturnValue(+[REMLogStore utility](REMLogStore, "utility"));
  if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_INFO, "Got old device list", v22, 2u);
  }

}

void sub_100033958(uint64_t a1)
{
  void *v2;
  void *v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "devices"));
  if (objc_msgSend(v2, "count"))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceListRequest combineICloudDevices:withCloudKitDevices:](ICDeviceListRequest, "combineICloudDevices:withCloudKitDevices:", v2, *(_QWORD *)(a1 + 32)));
    objc_msgSend(WeakRetained, "setDevices:", v3);

  }
  else
  {
    objc_msgSend(WeakRetained, "setDevices:", *(_QWORD *)(a1 + 32));
  }

}

void sub_1000339E0(uint64_t a1)
{
  dispatch_semaphore_t v2;
  void *v3;
  NSObject *v4;
  _QWORD v5[4];
  id v6;
  uint64_t v7;
  NSObject *v8;
  id v9;

  v2 = dispatch_semaphore_create(0);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100033AC0;
  v5[3] = &unk_1005EA150;
  v3 = *(void **)(a1 + 32);
  v6 = *(id *)(a1 + 40);
  objc_copyWeak(&v9, (id *)(a1 + 48));
  v7 = *(_QWORD *)(a1 + 32);
  v4 = v2;
  v8 = v4;
  objc_msgSend(v3, "fetchICloudDevicesWithCompletionBlock:", v5);
  dispatch_semaphore_wait(v4, 0xFFFFFFFFFFFFFFFFLL);

  objc_destroyWeak(&v9);
}

void sub_100033AAC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100033AC0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  id v6;
  NSObject *v7;
  uint8_t v8[16];
  _QWORD block[4];
  id v10;
  id v11;

  v3 = a2;
  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceListRequest filteredDevices:](ICDeviceListRequest, "filteredDevices:", v3));
    v5 = *(NSObject **)(a1 + 32);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100033BEC;
    block[3] = &unk_1005EA0D8;
    objc_copyWeak(&v11, (id *)(a1 + 56));
    v10 = v4;
    v6 = v4;
    dispatch_sync(v5, block);

    objc_destroyWeak(&v11);
  }
  objc_msgSend(*(id *)(a1 + 40), "setDidGetICloudDeviceList:", 1);
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
  v7 = objc_claimAutoreleasedReturnValue(+[REMLogStore utility](REMLogStore, "utility"));
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Got new device list", v8, 2u);
  }

}

void sub_100033BEC(uint64_t a1)
{
  void *v2;
  void *v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "devices"));
  if (objc_msgSend(v2, "count"))
  {
    if (objc_msgSend(*(id *)(a1 + 32), "count"))
    {
      v3 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceListRequest combineICloudDevices:withCloudKitDevices:](ICDeviceListRequest, "combineICloudDevices:withCloudKitDevices:", *(_QWORD *)(a1 + 32), v2));
      objc_msgSend(WeakRetained, "setDevices:", v3);

    }
  }
  else
  {
    objc_msgSend(WeakRetained, "setDevices:", *(_QWORD *)(a1 + 32));
  }

}

void sub_10003417C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

uint64_t variable initialization expression of TTRSmartListFilterEditorInteractor.delegate()
{
  return 0;
}

uint64_t variable initialization expression of TTRIDebouncedHoverAction.passthroughSubject()
{
  uint64_t v0;

  v0 = sub_10002A750(&qword_10063D8D0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return PassthroughSubject.init()();
}

uint64_t variable initialization expression of TTRSmartListFilterEditorInteractor.listFetchOperationManager()
{
  return 0;
}

uint64_t variable initialization expression of TTRSmartListFilterEditorInteractor.$__lazy_storage_$_selectableHashtagLabels@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for REMHashtagLabelCollection(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t variable initialization expression of TTRListDetailCreationChangeItem.name()
{
  return 0;
}

uint64_t variable initialization expression of TTRSmartListFilterEditorViewModel.LocationData.quickPickItemSelected()
{
  return 6;
}

double variable initialization expression of TTRSmartListFilterEditorViewModel.locationData@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_BYTE *)(a1 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t variable initialization expression of OpenAnyListAppIntent._target()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v43 = *(_QWORD *)(v0 - 8);
  v44 = v0;
  __chkstk_darwin(v0);
  v42 = (char *)&v38 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10002A750(&qword_10063D8D8);
  v3 = __chkstk_darwin(v2);
  v41 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v40 = (char *)&v38 - v5;
  v6 = sub_10002A750(&qword_10063D8E0);
  __chkstk_darwin(v6);
  v39 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_10063D8E8);
  __chkstk_darwin(v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Locale(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for LocalizedStringResource(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v38 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_10002A750(&qword_10063D8F0);
  v25 = String.LocalizationValue.init(stringLiteral:)(0x7473694C20796E41, 0xE800000000000000);
  static Locale.current.getter(v25);
  v26 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
  v27(v14, enum case for LocalizedStringResource.BundleDescription.main(_:), v11);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Open Any List AppIntent list name parameter title", 49, 2);
  v28 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x800000010055F070);
  static Locale.current.getter(v28);
  v27(v14, v26, v11);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Open Any List AppIntent list name parameter description", 55, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v10, 0, 1, v21);
  v29 = type metadata accessor for AnyListEntity(0);
  v30 = v39;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v39, 1, 1, v29);
  v31 = type metadata accessor for IntentDialog(0);
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v33 = v40;
  v32(v40, 1, 1, v31);
  v34 = v41;
  v32(v41, 1, 1, v31);
  v35 = v42;
  (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v42, enum case for InputConnectionBehavior.default(_:), v44);
  v36 = sub_1000175C8(&qword_10063D8F8, type metadata accessor for AnyListEntity, (uint64_t)&protocol conformance descriptor for AnyListEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v24, v10, v30, v33, v34, v35, v36);
}

uint64_t variable initialization expression of AnyListEntityQuery._store()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v11[5];

  v0 = type metadata accessor for AppIntentsDependencyKey(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v11[-1] - v5;
  sub_10002A750(&qword_10063D900);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v6, enum case for AppIntentsDependencyKey.remStore(_:), v0);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  v7 = sub_1000175C8(&qword_10063D908, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentsDependencyKey, (uint64_t)&protocol conformance descriptor for AppIntentsDependencyKey);
  AnyHashable.init<A>(_:)(v11, v4, v0, v7);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  type metadata accessor for AppDependencyManager(0);
  v8 = static AppDependencyManager.shared.getter();
  return AppDependency.__allocating_init(key:manager:)(v11, v8);
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063DD90, (uint64_t)&unk_1005EB2D0);
}

uint64_t initializeBufferWithCopyOfBuffer for TTRITemplateSavingDismissAnimationCoordinator.SourceView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

__n128 initializeWithTake for TTRIRemindersBoardDragItemSourcesRelativeToColumn(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for HorizontalStackView.CacheKey(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HorizontalStackView.CacheKey(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063DD98, (uint64_t)&unk_1005EB350);
}

void type metadata accessor for REMAlarmProximity(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063DDA0, (uint64_t)&unk_1005EB380);
}

uint64_t getEnumTagSinglePayload for TTRIBoardColumnDraggingAnimationCellBackgroundView.Shape(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TTRIBoardColumnDraggingAnimationCellBackgroundView.Shape(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063DDA8, (uint64_t)&unk_1005EB3F8);
}

void type metadata accessor for UIBackgroundTaskIdentifier(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063DDB0, (uint64_t)&unk_1005EB420);
}

void type metadata accessor for REMSmartListType(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063DDB8, (uint64_t)&unk_1005EB448);
}

void type metadata accessor for UIViewAnimatingPosition(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063DDC0, (uint64_t)&unk_1005EB470);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063DDC8, (uint64_t)&unk_1005EB4E8);
}

void type metadata accessor for EditingStyle(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063DDD0, (uint64_t)&unk_1005EB510);
}

void type metadata accessor for RowAnimation(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063DDD8, (uint64_t)&unk_1005EB530);
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063DDE0, (uint64_t)&unk_1005EB5A8);
}

void type metadata accessor for REMListBadgeEmblem(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063DDE8, (uint64_t)&unk_1005EB5D0);
}

NSNumber sub_100034914()
{
  return Float._bridgeToObjectiveC()();
}

uint64_t sub_10003491C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  int v5;
  int v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = static Float._forceBridgeFromObjectiveC(_:result:)(a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return result;
}

uint64_t sub_10003496C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  int v5;
  int v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = static Float._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return v3 & 1;
}

void sub_1000349C0(float *a1@<X8>)
{
  *a1 = static Float._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000349E4(uint64_t a1, uint64_t a2)
{
  return sub_1000356FC(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

BOOL sub_1000349FC(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_100034A38@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_100034A48(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_100034A50@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_100034A64@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_100034A78@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_100034AA4@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_100034AC8(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_100034ADC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_100034AF0(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_100034B04()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_100034B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

_QWORD *sub_100034B2C(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

_QWORD *sub_100034B48@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

NSNumber sub_100034B54()
{
  return Int._bridgeToObjectiveC()();
}

uint64_t sub_100034B5C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = static Int._forceBridgeFromObjectiveC(_:result:)(a1, &v6);
  v4 = v6;
  v5 = v7;
  if (v7)
    v4 = 0;
  *(_QWORD *)a2 = v4;
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_100034BAC(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = static Int._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v7);
  v4 = v7;
  v5 = v8;
  if (v8)
    v4 = 0;
  *(_QWORD *)a2 = v4;
  *(_BYTE *)(a2 + 8) = v5;
  return v3 & 1;
}

uint64_t sub_100034C00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = static Int._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  return result;
}

uint64_t sub_100034C24(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_100034C98(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_100034D14@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5;
  return result;
}

void sub_100034D54(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

BOOL sub_100034D64(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_100034D78()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100034DBC()
{
  Swift::UInt *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_100034DE4(uint64_t a1)
{
  Swift::UInt *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

uint64_t sub_100034E24@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100034E4C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_10050593C();
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

_QWORD *sub_100034E88@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_100034E9C(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_100034EB0(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

BOOL sub_100034EC4(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_100034ED8(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

_DWORD *sub_100034EEC@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

float sub_100034EFC@<S0>(_DWORD *a1@<X8>)
{
  float *v1;
  float result;

  result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_100034F08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1000175C8(&qword_10063E438, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_10051F6F4);
  v3 = sub_1000175C8((unint64_t *)&unk_10063E440, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_10051F694);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for Float);
}

uint64_t sub_100034F9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1000175C8(&qword_10063DEB0, (uint64_t (*)(uint64_t))type metadata accessor for REMSmartListType, (uint64_t)&unk_10051ED80);
  v3 = sub_1000175C8(&qword_10063DEB8, (uint64_t (*)(uint64_t))type metadata accessor for REMSmartListType, (uint64_t)&unk_10051ED28);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100035020(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1000175C8(&qword_10063DEC0, (uint64_t (*)(uint64_t))type metadata accessor for REMListBadgeEmblem, (uint64_t)&unk_10051EB10);
  v3 = sub_1000175C8(&qword_10063DEC8, (uint64_t (*)(uint64_t))type metadata accessor for REMListBadgeEmblem, (uint64_t)&unk_10051EAB8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000350A4()
{
  return sub_1000175C8(&qword_10063DE50, (uint64_t (*)(uint64_t))type metadata accessor for REMListBadgeEmblem, (uint64_t)&unk_10051EA80);
}

uint64_t sub_1000350D0()
{
  return sub_1000175C8(&qword_10063DE58, (uint64_t (*)(uint64_t))type metadata accessor for REMListBadgeEmblem, (uint64_t)&unk_10051EA58);
}

uint64_t sub_1000350FC()
{
  return sub_1000175C8(&qword_10063DE60, (uint64_t (*)(uint64_t))type metadata accessor for REMListBadgeEmblem, (uint64_t)&unk_10051EAE8);
}

uint64_t sub_100035128(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1000175C8(&qword_10063E418, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_10051F994);
  v3 = sub_1000175C8(&qword_10063E420, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_10051F93C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000351AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1000175C8(&qword_100642D50, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_10051FEC4);
  v3 = sub_1000175C8((unint64_t *)&unk_10063E450, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_10051F3DC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100035230(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1000175C8((unint64_t *)&qword_10064BB50, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10051FF08);
  v3 = sub_1000175C8((unint64_t *)&unk_10063E460, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10051F260);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000352B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1000175C8(&qword_10063E428, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_10051F84C);
  v3 = sub_1000175C8(&qword_10063E430, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_10051F7EC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100035338(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1000175C8(&qword_10063E3E8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_10051FD0C);
  v3 = sub_1000175C8(&qword_10063E3F0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_10051FCAC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000353BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1000175C8(&qword_10063DEA0, (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier, (uint64_t)&unk_10051EED0);
  v3 = sub_1000175C8(&qword_10063DEA8, (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier, (uint64_t)&unk_10051EE70);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for Int);
}

uint64_t sub_100035450(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1000175C8(&qword_10063E408, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_10051FE3C);
  v3 = sub_1000175C8(&qword_10063E410, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_10051FA84);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000354D4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  NSString v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_100035518(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1000175C8(&qword_10063E3F8, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_10051FE80);
  v3 = sub_1000175C8(&qword_10063E400, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_10051FB98);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10003559C()
{
  float *v0;

  return Float.hashValue.getter(*v0);
}

void sub_1000355A4()
{
  Swift::UInt32 *v0;
  Swift::UInt32 v1;

  if ((*v0 & 0x7FFFFFFF) != 0)
    v1 = *v0;
  else
    v1 = 0;
  Hasher._combine(_:)(v1);
}

uint64_t sub_1000355D4(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;

  if ((*v1 & 0x7FFFFFFF) != 0)
    v2 = *v1;
  else
    v2 = 0;
  return static Hasher._hash(seed:bytes:count:)(a1, v2, 4);
}

uint64_t sub_1000355E8()
{
  return sub_1000175C8(&qword_10063DE68, (uint64_t (*)(uint64_t))type metadata accessor for RowAnimation, (uint64_t)&unk_10051EBE8);
}

uint64_t sub_100035614()
{
  return sub_1000175C8(&qword_10063DE70, (uint64_t (*)(uint64_t))type metadata accessor for REMSmartListType, (uint64_t)&unk_10051ECF0);
}

uint64_t sub_100035640()
{
  return sub_1000175C8(&qword_10063DE78, (uint64_t (*)(uint64_t))type metadata accessor for REMSmartListType, (uint64_t)&unk_10051ECC8);
}

uint64_t sub_10003566C()
{
  return sub_1000175C8(&qword_10063DE80, (uint64_t (*)(uint64_t))type metadata accessor for REMSmartListType, (uint64_t)&unk_10051ED58);
}

uint64_t sub_100035698()
{
  return sub_1000175C8(&qword_10063DE88, (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier, (uint64_t)&unk_10051EE34);
}

uint64_t sub_1000356C4()
{
  return sub_1000175C8(&qword_10063DE90, (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier, (uint64_t)&unk_10051EE08);
}

uint64_t sub_1000356F0(uint64_t a1, uint64_t a2)
{
  return sub_1000356FC(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_1000356FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_100035738(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_100035778(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  Hasher.init(_seed:)(v8, a1);
  String.hash(into:)(v8, v3, v5);
  v6 = Hasher._finalize()();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_1000357E8()
{
  _QWORD *v0;

  return Int.hashValue.getter(*v0);
}

uint64_t sub_1000357F0(uint64_t a1)
{
  _QWORD *v1;

  return static Hasher._hash(seed:_:)(a1, *v1);
}

BOOL sub_1000357F8(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_10003580C(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

uint64_t sub_100035894()
{
  return sub_1000175C8(&qword_10063DE98, (uint64_t (*)(uint64_t))type metadata accessor for UIBackgroundTaskIdentifier, (uint64_t)&unk_10051EEA4);
}

void type metadata accessor for REMReminderPriorityLevel(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063E290, (uint64_t)&unk_1005EB5F8);
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063E298, (uint64_t)&unk_1005EB618);
}

void type metadata accessor for OpenURLOptionsKey(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063E2A8, (uint64_t)&unk_1005EB668);
}

void type metadata accessor for ActivityType(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063E2B0, (uint64_t)&unk_1005EB690);
}

void type metadata accessor for Name(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063E2B8, (uint64_t)&unk_1005EB6B8);
}

void type metadata accessor for ScrollPosition(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063E2C0, (uint64_t)&unk_1005EB6E0);
}

{
  sub_1000359B0(a1, &qword_10063E2D0, (uint64_t)&unk_1005EB728);
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063E2D8, (uint64_t)&unk_1005EB750);
}

void type metadata accessor for REMAccountType(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063E2E0, (uint64_t)&unk_1005EB778);
}

void type metadata accessor for State(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063E2E8, (uint64_t)&unk_1005EB798);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063E2F0, (uint64_t)&unk_1005EB7B8);
}

void type metadata accessor for UIDropOperation(uint64_t a1)
{
  sub_1000359B0(a1, &qword_10063E2F8, (uint64_t)&unk_1005EB7E0);
}

void sub_1000359B0(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1000359F4()
{
  return sub_1000175C8(&qword_10063E300, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10051F224);
}

uint64_t sub_100035A20()
{
  return sub_1000175C8(&qword_10063E308, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10051F1F8);
}

uint64_t sub_100035A4C()
{
  return sub_1000175C8(&qword_10063E310, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_10051F3A0);
}

uint64_t sub_100035A78()
{
  return sub_1000175C8(&qword_10063E318, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_10051F374);
}

uint64_t sub_100035AA4()
{
  return sub_1000175C8(&qword_10063E320, (uint64_t (*)(uint64_t))type metadata accessor for ScrollPosition, (uint64_t)&unk_10051F4BC);
}

uint64_t sub_100035AD0()
{
  return sub_1000175C8(&qword_10063E328, (uint64_t (*)(uint64_t))type metadata accessor for ScrollPosition, (uint64_t)&unk_10051F488);
}

uint64_t sub_100035AFC()
{
  return sub_1000175C8(&qword_10063E330, (uint64_t (*)(uint64_t))type metadata accessor for ScrollPosition, (uint64_t)&unk_10051F4E8);
}

uint64_t sub_100035B28()
{
  return sub_1000175C8(&qword_10063E338, (uint64_t (*)(uint64_t))type metadata accessor for ScrollPosition, (uint64_t)&unk_10051F524);
}

uint64_t sub_100035B54()
{
  return sub_1000175C8(&qword_10063E340, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_10051F658);
}

uint64_t sub_100035B80()
{
  return sub_1000175C8(&qword_10063E348, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_10051F62C);
}

uint64_t sub_100035BAC()
{
  return sub_1000175C8(&qword_10063E350, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_10051F6C8);
}

uint64_t sub_100035BD8()
{
  return sub_1000175C8(&qword_10063E358, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_10051F7B0);
}

uint64_t sub_100035C04()
{
  return sub_1000175C8(&qword_10063E360, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_10051F784);
}

uint64_t sub_100035C30()
{
  return sub_1000175C8(&qword_10063E368, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_10051F820);
}

uint64_t sub_100035C5C()
{
  return sub_1000175C8(&qword_10063E370, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_10051F904);
}

uint64_t sub_100035C88()
{
  return sub_1000175C8(&qword_10063E378, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_10051F8DC);
}

uint64_t sub_100035CB4()
{
  return sub_1000175C8(&qword_10063E380, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_10051F96C);
}

uint64_t sub_100035CE0()
{
  return sub_1000175C8(&qword_10063E388, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_10051FA48);
}

uint64_t sub_100035D0C()
{
  return sub_1000175C8(&qword_10063E390, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_10051FA1C);
}

uint64_t sub_100035D38()
{
  return sub_1000175C8(&qword_10063E398, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_10051FB5C);
}

uint64_t sub_100035D64()
{
  return sub_1000175C8(&qword_10063E3A0, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_10051FB30);
}

uint64_t sub_100035D90()
{
  return sub_1000175C8(&qword_10063E3A8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_10051FC70);
}

uint64_t sub_100035DBC()
{
  return sub_1000175C8(&qword_10063E3B0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_10051FC44);
}

uint64_t sub_100035DE8()
{
  return sub_1000175C8(&qword_10063E3B8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_10051FCE0);
}

uint64_t sub_100035E14()
{
  return sub_1000175C8(&qword_10063E3C0, (uint64_t (*)(uint64_t))type metadata accessor for REMReminderPriorityLevel, (uint64_t)&unk_10051FDDC);
}

uint64_t sub_100035E40()
{
  return sub_1000175C8(&qword_10063E3C8, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_10051FAB8);
}

uint64_t sub_100035E6C()
{
  return sub_1000175C8(&qword_10063E3D0, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_10051FBCC);
}

uint64_t sub_100035E98()
{
  return sub_1000175C8(&qword_10063E3D8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_10051F410);
}

uint64_t sub_100035EC4()
{
  return sub_1000175C8(&qword_10063E3E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10051F294);
}

uint64_t sub_100035F38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10063E710);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10063E710);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_100035FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  NSObject *oslog;

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_presenter);
  if (Strong)
  {
    v3 = Strong;
    v4 = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_presentee);
    swift_unknownObjectRelease(v4);
    if (v4)
    {
      v6 = (uint64_t *)(v3 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter);
      v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
      ObjectType = swift_getObjectType(*(_QWORD *)(v3 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter), v5);
      v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 416))(ObjectType, v7);
      v10 = v9;
      v11 = *(unsigned __int8 *)(v9
                               + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_templatesItemVisibilityOverride);
      if (v11 == 2 || (v11 & 1) != 0)
      {
        *(_BYTE *)(v9
                 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_templatesItemVisibilityOverride) = 0;
        sub_10004BD64(0xD000000000000027, 0x800000010055F1A0);
      }
      v13 = swift_unknownObjectRelease(v10);
      sub_100037D14(v13, v14);
      v17 = v15;
      if (v15)
      {
        objc_msgSend(v15, "bounds");
        objc_msgSend(v17, "convertRect:toView:", 0);
        v19 = v18;
        v21 = v20;
        v23 = v22;
        v25 = v24;

      }
      else
      {
        v19 = 0;
        v21 = 0;
        v23 = 0;
        v25 = 0;
      }
      v30 = *v6;
      v31 = v6[1];
      v32 = swift_getObjectType(v30, v16);
      v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 416))(v32, v31);
      v34 = v33;
      if (*(_BYTE *)(v33
                    + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_templatesItemVisibilityOverride) != 2)
      {
        *(_BYTE *)(v33
                 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_templatesItemVisibilityOverride) = 2;
        sub_10004BD64(0xD000000000000027, 0x800000010055F1A0);
      }
      swift_unknownObjectRelease(v34);
      if (!v17)
      {
        if (qword_10063D290 != -1)
          swift_once(&qword_10063D290, sub_100035F38);
        v35 = type metadata accessor for Logger(0);
        v36 = sub_100012DC4(v35, (uint64_t)qword_10063E710);
        v37 = Logger.logObject.getter(v36);
        v38 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v37, v38))
        {
          v39 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v39 = 0;
          _os_log_impl((void *)&_mh_execute_header, v37, v38, "TTRITemplateSavingDismissAnimationCoordinator: Failed to determine frameOfDestBarButtonInWindow", v39, 2u);
          swift_slowDealloc(v39, -1, -1);
          swift_unknownObjectRelease(v3);

LABEL_26:
          v40 = v1
              + OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_frameOfDestBarButtonInWindow;
          *(_QWORD *)v40 = v19;
          *(_QWORD *)(v40 + 8) = v21;
          *(_QWORD *)(v40 + 16) = v23;
          *(_QWORD *)(v40 + 24) = v25;
          *(_BYTE *)(v40 + 32) = v17 == 0;
          return;
        }

      }
      swift_unknownObjectRelease(v3);
      goto LABEL_26;
    }
    swift_unknownObjectRelease(v3);
  }
  if (qword_10063D290 != -1)
    swift_once(&qword_10063D290, sub_100035F38);
  v26 = type metadata accessor for Logger(0);
  v27 = sub_100012DC4(v26, (uint64_t)qword_10063E710);
  oslog = Logger.logObject.getter(v27);
  v28 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v28, "TTRITemplateSavingDismissAnimationCoordinator#willPresentPresentee: missing presenter/presentee", v29, 2u);
    swift_slowDealloc(v29, -1, -1);
  }

}

void sub_100036320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  double v22;
  __int128 v23;
  void *v24;
  id v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t ObjectType;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  void *v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  void *v84;
  char *v85;
  NSObject *oslog;
  os_log_t osloga;
  _QWORD aBlock[6];
  id v89[9];
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  id v95[2];
  __int128 v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_presenter);
  if (!Strong)
    goto LABEL_7;
  v3 = (char *)Strong;
  v4 = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_presentee);
  if (!v4)
  {
    v5 = (uint64_t)v3;
    goto LABEL_6;
  }
  v5 = v4;
  if ((*(_BYTE *)(v0
                 + OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_frameOfDestBarButtonInWindow
                 + 32) & 1) == 0)
  {
    sub_10028DF18((uint64_t)v89);
    sub_100037F08((uint64_t)v89, (uint64_t)&v90);
    v10 = v90;
    if (!(_QWORD)v90)
    {
      if (qword_10063D290 != -1)
        swift_once(&qword_10063D290, sub_100035F38);
      v59 = type metadata accessor for Logger(0);
      v60 = sub_100012DC4(v59, (uint64_t)qword_10063E710);
      v61 = Logger.logObject.getter(v60);
      v62 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v61, v62))
      {
        v63 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v63 = 0;
        _os_log_impl((void *)&_mh_execute_header, v61, v62, "TTRITemplateSavingDismissAnimationCoordinator: missing sourceView", v63, 2u);
        swift_slowDealloc(v63, -1, -1);
        swift_unknownObjectRelease(v5);
        swift_unknownObjectRelease(v3);

        return;
      }

      swift_unknownObjectRelease(v5);
      v70 = (uint64_t)v3;
      goto LABEL_35;
    }
    *(_OWORD *)v95 = v90;
    v96 = v91;
    v97 = v92;
    v98 = v93;
    v11 = v94;
    v83 = *((_QWORD *)&v93 + 1);
    v85 = v3;
    v99 = v94;
    v12 = *((_QWORD *)&v90 + 1);
    v13 = v91;
    v15 = v92;
    v14 = v93;
    osloga = (os_log_t)v90;
    v82 = objc_msgSend((id)v90, "window");
    if (v82)
    {
      v81 = v5;
      v16 = v0 + OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_sourceView;
      v17 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_sourceView);
      *(_QWORD *)v16 = v10;
      *(_QWORD *)(v16 + 8) = v12;
      *(_OWORD *)(v16 + 16) = v13;
      *(_OWORD *)(v16 + 32) = v15;
      *(_QWORD *)(v16 + 48) = v14;
      *(_QWORD *)(v16 + 56) = v83;
      *(_QWORD *)(v16 + 64) = v11;
      sub_100037F78(v95);

      v18 = -[NSObject snapshotViewAfterScreenUpdates:](osloga, "snapshotViewAfterScreenUpdates:", 0);
      if (!v18)
      {
        if (qword_10063D290 != -1)
          swift_once(&qword_10063D290, sub_100035F38);
        v71 = type metadata accessor for Logger(0);
        v72 = sub_100012DC4(v71, (uint64_t)qword_10063E710);
        v66 = Logger.logObject.getter(v72);
        v73 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v66, v73))
        {
          swift_unknownObjectRelease(v3);
          sub_100037F50(v89);

          swift_unknownObjectRelease(v81);
          return;
        }
        v74 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v74 = 0;
        _os_log_impl((void *)&_mh_execute_header, v66, v73, "TTRITemplateSavingDismissAnimationCoordinator: Failed to create snapshot for source view", v74, 2u);
        swift_slowDealloc(v74, -1, -1);

        swift_unknownObjectRelease(v81);
        v69 = v3;
LABEL_33:
        swift_unknownObjectRelease(v69);

        sub_100037F50(v89);
        return;
      }
      v19 = v18;
      v20 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      objc_msgSend(v20, "setClipsToBounds:", 1);
      v21 = v95[1];
      v23 = v96;
      v22 = *(double *)&v97;
      objc_msgSend(v20, "setBounds:", *(double *)&v95[1], v96, *(double *)&v97);
      objc_msgSend(v19, "frame");
      objc_msgSend(v19, "setFrame:", 0.0, 0.0);
      v84 = v19;
      objc_msgSend(v20, "addSubview:", v19);
      v24 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_sourceSnapshotView);
      *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_sourceSnapshotView) = v20;
      v25 = v20;

      objc_msgSend(v82, "frame");
      v30 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v26, v27, v28, v29);
      objc_msgSend(v30, "setAutoresizingMask:", 18);
      objc_msgSend(v82, "addSubview:", v30);
      v31 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_containerView);
      *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_containerView) = v30;
      v32 = v30;

      objc_msgSend(v32, "convertRect:fromCoordinateSpace:", osloga, *(double *)&v21, v23, v22);
      v34 = v33;
      v36 = v35;
      v38 = v37;
      v40 = v39;
      v41 = objc_opt_self(UIView);
      v5 = swift_allocObject(&unk_1005EBA20, 136, 7);
      *(_QWORD *)(v5 + 16) = v25;
      *(_QWORD *)(v5 + 24) = v34;
      *(_QWORD *)(v5 + 32) = v36;
      *(_QWORD *)(v5 + 40) = v38;
      *(_QWORD *)(v5 + 48) = v40;
      *(_QWORD *)(v5 + 56) = v32;
      v42 = v98;
      *(_OWORD *)(v5 + 96) = v97;
      *(_OWORD *)(v5 + 112) = v42;
      *(_QWORD *)(v5 + 128) = v99;
      v43 = v96;
      *(_OWORD *)(v5 + 64) = *(_OWORD *)v95;
      *(_OWORD *)(v5 + 80) = v43;
      v44 = swift_allocObject(&unk_1005EBA48, 32, 7);
      *(_QWORD *)(v44 + 16) = sub_100037FD4;
      *(_QWORD *)(v44 + 24) = v5;
      aBlock[4] = sub_10001B278;
      aBlock[5] = v44;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10001B258;
      aBlock[3] = &unk_1005EBA60;
      v45 = _Block_copy(aBlock);
      sub_100037F78(v89);
      v46 = v25;
      v3 = (char *)v32;
      swift_retain();
      objc_msgSend((id)v41, "performWithoutAnimation:", v45, swift_release().n128_f64[0]);
      _Block_release(v45);
      LOBYTE(v41) = swift_isEscapingClosureAtFileLocation(v44, "", 144, 142, 40, 1);
      swift_release();
      if ((v41 & 1) == 0)
      {
        v47 = (void *)objc_opt_self(UIColor);

        v48 = objc_msgSend(v47, "redColor");
        v49 = *(_QWORD *)&v85[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
        ObjectType = swift_getObjectType(*(_QWORD *)&v85[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v50);
        v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 416))(ObjectType, v49);
        v53 = v52;
        v54 = *(unsigned __int8 *)(v52
                                 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_templatesItemVisibilityOverride);
        if (v54 == 2 || (v54 & 1) != 0)
        {
          *(_BYTE *)(v52
                   + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_templatesItemVisibilityOverride) = 0;
          sub_10004BD64(0xD000000000000027, 0x800000010055F1A0);
        }
        v55 = swift_unknownObjectRelease(v53);
        sub_100037D14(v55, v56);
        v58 = v57;
        if (v57)
        {

          swift_unknownObjectRelease(v81);
          swift_unknownObjectRelease(v85);
        }
        else
        {
          if (qword_10063D290 != -1)
            swift_once(&qword_10063D290, sub_100035F38);
          v75 = type metadata accessor for Logger(0);
          v76 = sub_100012DC4(v75, (uint64_t)qword_10063E710);
          v77 = Logger.logObject.getter(v76);
          v78 = static os_log_type_t.error.getter();
          if (!os_log_type_enabled(v77, v78))
          {
            swift_unknownObjectRelease(v85);
            sub_100037F50(v89);

            swift_unknownObjectRelease(v81);
            goto LABEL_41;
          }
          v79 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v79 = 0;
          _os_log_impl((void *)&_mh_execute_header, v77, v78, "TTRITemplateSavingDismissAnimationCoordinator: Failed to get destBarButtonView", v79, 2u);
          swift_slowDealloc(v79, -1, -1);

          swift_unknownObjectRelease(v81);
          swift_unknownObjectRelease(v85);

        }
        sub_100037F50(v89);
LABEL_41:
        v80 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_destBarButtonView);
        *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_destBarButtonView) = v58;
        swift_release();

        return;
      }
      __break(1u);
    }
    else if (qword_10063D290 == -1)
    {
LABEL_26:
      v64 = type metadata accessor for Logger(0);
      v65 = sub_100012DC4(v64, (uint64_t)qword_10063E710);
      v66 = Logger.logObject.getter(v65);
      v67 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v66, v67))
      {
        v68 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v68 = 0;
        _os_log_impl((void *)&_mh_execute_header, v66, v67, "TTRITemplateSavingDismissAnimationCoordinator: sourceView window is nil", v68, 2u);
        swift_slowDealloc(v68, -1, -1);
        swift_unknownObjectRelease(v5);
        v69 = v3;
        goto LABEL_33;
      }
      swift_unknownObjectRelease(v3);
      sub_100037F50(v89);

      v70 = v5;
LABEL_35:
      swift_unknownObjectRelease(v70);
      return;
    }
    swift_once(&qword_10063D290, sub_100035F38);
    goto LABEL_26;
  }
  swift_unknownObjectRelease(v3);
LABEL_6:
  swift_unknownObjectRelease(v5);
LABEL_7:
  if (qword_10063D290 != -1)
    swift_once(&qword_10063D290, sub_100035F38);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100012DC4(v6, (uint64_t)qword_10063E710);
  oslog = Logger.logObject.getter(v7);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v8, "TTRITemplateSavingDismissAnimationCoordinator#willDismissPresentee: missing params from last step", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

}

void sub_100036D08()
{
  char *v0;
  char *v1;
  double *v2;
  double *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  id v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  double v19;
  double v20;
  double v21;
  double v22;
  void *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  unint64_t v28;
  unint64_t v29;
  double v30;
  unint64_t v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  void *v38;
  uint64_t v39;
  void *v40;
  id v41;
  double v42;
  double v43;
  uint64_t v44;
  void *v45;
  double v46;
  double v47;
  uint64_t v48;
  void *v49;
  id v50;
  double v51;
  double v52;
  uint64_t v53;
  void *v54;
  id v55;
  uint64_t v56;
  void *v57;
  char *v58;
  __n128 v59;
  __n128 v60;
  __n128 v61;
  __n128 v62;
  uint64_t v63;
  double v64;
  double v65;
  double v66;
  __n128 v67;
  __n128 v68;
  __n128 v69;
  __n128 v70;
  uint64_t v71;
  double v72;
  double v73;
  double v74;
  id v75;
  NSString v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  NSNumber v80;
  void **v81;
  Class isa;
  id v83;
  double v84;
  void *v85;
  id v86;
  id v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  double v94;
  unint64_t v95;
  unint64_t v96;
  id v97;
  id v98;
  id v99;
  char v100[24];
  void **aBlock;
  uint64_t v102;
  void *v103;
  void *v104;
  void *v105;
  uint64_t v106;
  char v107[16];

  v1 = v0;
  v2 = (double *)&v0[OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_frameOfDestBarButtonInWindow];
  if ((v0[OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_frameOfDestBarButtonInWindow + 32] & 1) == 0
    && (v3 = (double *)&v0[OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_sourceView],
        (v4 = *(void **)&v0[OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_sourceView]) != 0)
    && (v5 = *(void **)&v0[OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_sourceSnapshotView]) != 0
    && (v6 = *(void **)&v0[OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_containerView]) != 0
    && (v7 = *(void **)&v1[OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_destBarButtonView]) != 0)
  {
    v9 = v2[2];
    v8 = v2[3];
    v11 = *v2;
    v10 = v2[1];
    v13 = v3[5];
    v12 = v3[6];
    v99 = v4;
    v14 = v5;
    v98 = v6;
    v15 = v7;
    TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v15);
    TTRUserDefaults.animationSlowModeEnabled.getter();
    v107[0] = v16 & 1;
    objc_msgSend(v98, "convertRect:fromView:", 0, v11, v10, v9, v8);
    v95 = v18;
    v96 = v17;
    v20 = v19;
    v22 = v21;
    v23 = (void *)objc_opt_self(UIColor);

    objc_msgSend(v14, "frame");
    v94 = sub_100038048(v24, v25, v26, v27, v13, v12);
    v29 = v28;
    v31 = *(_QWORD *)&v30;
    v33 = v32;
    v34 = CGSize.aspectFitting(boundingSize:)(v20, v22) / v30;
    v36 = v35 / v33;
    if (v36 < v34)
      v34 = v36;
    v37 = v34 * 0.4;
    v38 = (void *)objc_opt_self(UIView);
    v39 = swift_allocObject(&unk_1005EBB10, 32, 7);
    *(_QWORD *)(v39 + 16) = v14;
    *(double *)(v39 + 24) = v37;
    v105 = sub_1000380D0;
    v106 = v39;
    aBlock = _NSConcreteStackBlock;
    v102 = 1107296256;
    v103 = sub_100006378;
    v104 = &unk_1005EBB28;
    v40 = _Block_copy(&aBlock);
    v41 = v14;
    swift_release();
    objc_msgSend(v38, "_animateUsingSpringWithTension:friction:interactive:animations:completion:", 0, v40, 0, 200.0, 30.0);
    _Block_release(v40);
    swift_beginAccess(v107, v100, 0, 0);
    if (v107[0])
      v42 = 0.45;
    else
      v42 = 0.15;
    if (v107[0])
      v43 = 1.65;
    else
      v43 = 0.55;
    v44 = swift_allocObject(&unk_1005EBB60, 24, 7);
    *(_QWORD *)(v44 + 16) = v41;
    v105 = sub_100038100;
    v106 = v44;
    aBlock = _NSConcreteStackBlock;
    v102 = 1107296256;
    v103 = sub_100006378;
    v104 = &unk_1005EBB78;
    v45 = _Block_copy(&aBlock);
    v97 = v41;
    swift_release();
    objc_msgSend(v38, "animateWithDuration:delay:options:animations:completion:", 0, v45, 0, v42, v43);
    _Block_release(v45);
    if (v107[0])
      v46 = 0.6;
    else
      v46 = 0.2;
    if (v107[0])
      v47 = 1.05;
    else
      v47 = 0.35;
    v48 = swift_allocObject(&unk_1005EBBB0, 24, 7);
    *(_QWORD *)(v48 + 16) = v15;
    v105 = sub_100038114;
    v106 = v48;
    aBlock = _NSConcreteStackBlock;
    v102 = 1107296256;
    v103 = sub_100006378;
    v104 = &unk_1005EBBC8;
    v49 = _Block_copy(&aBlock);
    v50 = v15;
    swift_release();
    objc_msgSend(v38, "animateWithDuration:delay:options:animations:completion:", 0, v49, 0, v46, v47);
    _Block_release(v49);
    if (v107[0])
      v51 = 0.9;
    else
      v51 = 0.3;
    if (v107[0])
      v52 = 2.1;
    else
      v52 = 0.7;
    v53 = swift_allocObject(&unk_1005EBC00, 24, 7);
    *(_QWORD *)(v53 + 16) = v50;
    v105 = sub_10003811C;
    v106 = v53;
    aBlock = _NSConcreteStackBlock;
    v102 = 1107296256;
    v103 = sub_100006378;
    v104 = &unk_1005EBC18;
    v54 = _Block_copy(&aBlock);
    v55 = v50;
    swift_release();
    v56 = swift_allocObject(&unk_1005EBC50, 24, 7);
    *(_QWORD *)(v56 + 16) = v1;
    v105 = sub_100038158;
    v106 = v56;
    aBlock = _NSConcreteStackBlock;
    v102 = 1107296256;
    v103 = sub_1000D3A2C;
    v104 = &unk_1005EBC68;
    v57 = _Block_copy(&aBlock);
    v58 = v1;
    swift_release();
    objc_msgSend(v38, "animateWithDuration:delay:options:animations:completion:", 0, v54, v57, v51, v52);
    _Block_release(v57);
    _Block_release(v54);
    v59.n128_f64[0] = v94;
    v60.n128_u64[0] = v29;
    v61.n128_u64[0] = v31;
    v62.n128_f64[0] = v33;
    v64 = CGRect.center.getter(v63, v59, v60, v61, v62);
    v66 = v65;
    v68.n128_u64[0] = v95;
    v67.n128_u64[0] = v96;
    v69.n128_f64[0] = v20;
    v70.n128_f64[0] = v22;
    v72 = CGRect.center.getter(v71, v67, v68, v69, v70);
    v74 = v73;
    v75 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
    objc_msgSend(v75, "moveToPoint:", v64, v66);
    objc_msgSend(v75, "addQuadCurveToPoint:controlPoint:", v72, v74, v64 + (v72 - v64) * 0.05, v74 + -100.0);

    v76 = String._bridgeToObjectiveC()();
    v77 = objc_msgSend((id)objc_opt_self(CAKeyframeAnimation), "animationWithKeyPath:", v76);

    v78 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v79 = swift_allocObject(v78, 48, 7);
    *(_OWORD *)(v79 + 16) = xmmword_10051FF90;
    sub_10003817C();
    *(NSNumber *)(v79 + 32) = NSNumber.init(integerLiteral:)(0);
    v80.super.super.isa = NSNumber.init(integerLiteral:)(1).super.super.isa;
    *(NSNumber *)(v79 + 40) = v80;
    aBlock = (void **)v79;
    specialized Array._endMutation()(v80.super.super.isa);
    v81 = aBlock;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v77, "setKeyTimes:", isa, swift_bridgeObjectRelease(v81).n128_f64[0]);

    v83 = objc_msgSend(v75, "CGPath");
    objc_msgSend(v77, "setPath:", v83);

    v84 = 0.6;
    if (v107[0])
      v84 = 1.8;
    objc_msgSend(v77, "setDuration:", v84);
    objc_msgSend(v77, "setFillMode:", kCAFillModeForwards);
    objc_msgSend(v77, "setRemovedOnCompletion:", 0);
    v85 = (void *)objc_opt_self(CAMediaTimingFunction);
    v86 = v77;
    v87 = objc_msgSend(v85, "functionWithName:", kCAMediaTimingFunctionEaseOut);
    objc_msgSend(v86, "setTimingFunction:", v87);

    v88 = objc_msgSend(v97, "layer");
    objc_msgSend(v88, "addAnimation:forKey:", v86, 0);

  }
  else
  {
    if (qword_10063D290 != -1)
      swift_once(&qword_10063D290, sub_100035F38);
    v89 = type metadata accessor for Logger(0);
    v90 = sub_100012DC4(v89, (uint64_t)qword_10063E710);
    v91 = Logger.logObject.getter(v90);
    v92 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v91, v92))
    {
      v93 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v93 = 0;
      _os_log_impl((void *)&_mh_execute_header, v91, v92, "TTRITemplateSavingDismissAnimationCoordinator#didBeginDismissingPresentee: missing params from last step", v93, 2u);
      swift_slowDealloc(v93, -1, -1);
    }

    sub_1000375E8(0);
  }
}

char *sub_1000375E8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  char *result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  if (qword_10063D290 != -1)
    swift_once(&qword_10063D290, sub_100035F38);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100012DC4(v4, (uint64_t)qword_10063E710);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "TTRITemplateSavingDismissAnimationCoordinator: cleaning up", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_containerView;
  v10 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_containerView);
  if (v10)
  {
    objc_msgSend(v10, "removeFromSuperview");
    v11 = *(void **)(v2 + v9);
  }
  else
  {
    v11 = 0;
  }
  *(_QWORD *)(v2 + v9) = 0;

  v12 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_sourceSnapshotView);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_sourceSnapshotView) = 0;

  result = *(char **)(v2 + OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_sourceView);
  if (result)
    result = (char *)objc_msgSend(result, "setAlpha:", 1.0);
  if ((a1 & 1) != 0)
  {
    result = (char *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_presenter);
    if (result)
    {
      v15 = result;
      v16 = *(_QWORD *)&result[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
      ObjectType = swift_getObjectType(*(_QWORD *)&result[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v14);
      v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 416))(ObjectType, v16);
      v19 = v18;
      if ((*(_BYTE *)(v18
                     + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_templatesItemVisibilityOverride) & 1) == 0)
      {
        *(_BYTE *)(v18
                 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_templatesItemVisibilityOverride) = 1;
        sub_10004BD64(0xD000000000000027, 0x800000010055F1A0);
      }
      swift_unknownObjectRelease(v15);
      result = (char *)swift_unknownObjectRelease(v19);
    }
  }
  v20 = v2 + OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_completion;
  v21 = *(void (**)(uint64_t))(v2
                                       + OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_completion);
  if (v21)
  {
    v22 = *(_QWORD *)(v20 + 8);
    v23 = swift_retain();
    v21(v23);
    return (char *)sub_1000381B8((uint64_t)v21, v22);
  }
  return result;
}

id sub_1000377F0(void *a1, CGFloat a2)
{
  CGAffineTransform v4;

  CGAffineTransformMakeScale(&v4, a2, a2);
  return objc_msgSend(a1, "setTransform:", &v4);
}

id sub_100037844(void *a1)
{
  CGAffineTransform v3;

  CGAffineTransformMakeScale(&v3, 1.3, 1.3);
  return objc_msgSend(a1, "setTransform:", &v3);
}

id TTRHashtagLabelInteractor.__deallocating_deinit(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)swift_getObjectType(v2, a2);
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t type metadata accessor for TTRITemplateSavingDismissAnimationCoordinator()
{
  return objc_opt_self(_TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator);
}

uint64_t initializeWithCopy for TTRITemplateSavingDismissAnimationCoordinator.SourceView(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for TTRITemplateSavingDismissAnimationCoordinator.SourceView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

__n128 initializeWithTake for TTRITemplateSavingDismissAnimationCoordinator.SourceView(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for TTRITemplateSavingDismissAnimationCoordinator.SourceView(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRITemplateSavingDismissAnimationCoordinator.SourceView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRITemplateSavingDismissAnimationCoordinator.SourceView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRITemplateSavingDismissAnimationCoordinator.SourceView()
{
  return &type metadata for TTRITemplateSavingDismissAnimationCoordinator.SourceView;
}

void sub_100037B98(void *a1, uint64_t a2, void **a3)
{
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;

  v5 = (void *)UIBarButtonItem.ttr_view.getter(objc_msgSend(a1, "layoutIfNeeded"));
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "window");

    if (v7)
      goto LABEL_15;

  }
  v8 = (void *)UIBarButtonItem.ttr_view.getter(objc_msgSend(a1, "layoutIfNeeded"));
  if (v8)
  {
    v6 = v8;
    v9 = objc_msgSend(v8, "window");

    if (v9)
      goto LABEL_15;

  }
  v10 = (void *)UIBarButtonItem.ttr_view.getter(objc_msgSend(a1, "layoutIfNeeded"));
  if (v10)
  {
    v6 = v10;
    v11 = objc_msgSend(v10, "window");

    if (v11)
      goto LABEL_15;

  }
  v12 = (void *)UIBarButtonItem.ttr_view.getter(objc_msgSend(a1, "layoutIfNeeded"));
  if (v12)
  {
    v6 = v12;
    v13 = objc_msgSend(v12, "window");

    if (v13)
      goto LABEL_15;

  }
  v14 = (void *)UIBarButtonItem.ttr_view.getter(objc_msgSend(a1, "layoutIfNeeded"));
  if (v14)
  {
    v6 = v14;
    v15 = objc_msgSend(v14, "window");

    if (!v15)
    {
      v16 = v6;
      goto LABEL_16;
    }
LABEL_15:
    v16 = *a3;
    *a3 = v6;
LABEL_16:

  }
}

void sub_100037D14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  objc_class *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  objc_class *v16;
  id v17;
  uint64_t v18;
  _QWORD aBlock[6];
  uint64_t v20;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter), a2);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 416))(ObjectType, v3);
  Strong = swift_unknownObjectWeakLoadStrong(v5 + 16);
  if (!Strong)
  {
    v18 = swift_unknownObjectRelease(v5);
    v11 = (void *)UIViewController.effectiveNavigationBar.getter(v18);
    goto LABEL_7;
  }
  v7 = Strong;
  v8 = sub_100083700();
  swift_unknownObjectRelease(v5);
  v9 = swift_unknownObjectRelease(v7);
  v10 = UIViewController.effectiveNavigationBar.getter(v9);
  v11 = (void *)v10;
  if (!v8)
  {
LABEL_7:

    return;
  }
  if (v10)
  {
    v20 = 0;
    v12 = (void *)objc_opt_self(UIView);
    v13 = (_QWORD *)swift_allocObject(&unk_1005EBA98, 40, 7);
    v13[2] = v11;
    v13[3] = v8;
    v13[4] = &v20;
    v14 = swift_allocObject(&unk_1005EBAC0, 32, 7);
    *(_QWORD *)(v14 + 16) = sub_100038090;
    *(_QWORD *)(v14 + 24) = v13;
    aBlock[4] = sub_1000381EC;
    aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001B258;
    aBlock[3] = &unk_1005EBAD8;
    v15 = _Block_copy(aBlock);
    v16 = v8;
    v17 = v11;
    swift_retain();
    objc_msgSend(v12, "performWithoutAnimation:", v15, swift_release().n128_f64[0]);

    _Block_release(v15);
    LOBYTE(v17) = swift_isEscapingClosureAtFileLocation(v14, "", 144, 287, 40, 1);
    swift_release();
    if ((v17 & 1) != 0)
      __break(1u);
    else
      swift_release();
  }
  else
  {

  }
}

uint64_t sub_100037F08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_10063E790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id *sub_100037F50(id *a1)
{

  return a1;
}

id *sub_100037F78(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

uint64_t sub_100037FA0()
{
  id *v0;

  return swift_deallocObject(v0, 136, 7);
}

id sub_100037FD4()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 16);
  v2 = *(void **)(v0 + 56);
  objc_msgSend(v1, "setFrame:", *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
  objc_msgSend(v2, "addSubview:", v1);
  return objc_msgSend(*(id *)(v0 + 64), "setAlpha:", 0.0);
}

uint64_t sub_100038038()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_100038048(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

uint64_t sub_100038064()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_100038090()
{
  uint64_t v0;

  sub_100037B98(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void ***)(v0 + 32));
}

uint64_t sub_10003809C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000380AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1000380D0()
{
  uint64_t v0;

  return sub_1000377F0(*(void **)(v0 + 16), *(CGFloat *)(v0 + 24));
}

uint64_t sub_1000380DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100038100()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 0.0);
}

id sub_100038114()
{
  uint64_t v0;

  return sub_100037844(*(void **)(v0 + 16));
}

id sub_10003811C()
{
  uint64_t v0;
  void *v1;
  _QWORD v3[6];

  v1 = *(void **)(v0 + 16);
  v3[0] = 0x3FF0000000000000;
  v3[1] = 0;
  v3[2] = 0;
  v3[3] = 0x3FF0000000000000;
  v3[4] = 0;
  v3[5] = 0;
  return objc_msgSend(v1, "setTransform:", v3);
}

char *sub_100038158()
{
  return sub_1000375E8(1);
}

unint64_t sub_10003817C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100650740;
  if (!qword_100650740)
  {
    v1 = objc_opt_self(NSNumber);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100650740);
  }
  return result;
}

uint64_t sub_1000381B8(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

uint64_t sub_1000381C8(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_10003821C(uint64_t a1, uint64_t a2)
{
  char v2;

  v2 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (*(_BYTE *)(a2 + 8))
      return 1;
  }
  else
  {
    if (*(_QWORD *)a1 != *(_QWORD *)a2)
      v2 = 1;
    if ((v2 & 1) == 0)
      return 1;
  }
  return 0;
}

uint64_t sub_100038250()
{
  return 3;
}

uint64_t sub_100038258(uint64_t a1)
{
  _QWORD *v1;
  char *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  _QWORD *v14;
  void *v15;
  uint64_t v16;
  char v17[24];

  v2 = *(char **)(a1 + OBJC_IVAR____TtC9Reminders29TTRIListDetailColorsTableCell_gridView);
  v3 = objc_msgSend(v2, "subviews");
  v4 = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v16 = v5;
    else
      v16 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v5);
  if (!v6)
    sub_100038440();
  v7 = (char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x78);
  swift_beginAccess(v7, v17, 0, 0);
  v8 = v7[8];
  v9 = &v2[OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_indexOfSelectedItem];
  *(_QWORD *)v9 = *(_QWORD *)v7;
  v9[8] = v8;
  result = (uint64_t)sub_100245324();
  v11 = result;
  if ((unint64_t)result >> 62)
  {
    if (result >= 0)
      result &= 0xFFFFFFFFFFFFFF8uLL;
    result = _CocoaArrayWrapper.endIndex.getter(result);
    v12 = result;
    if (!result)
      return swift_bridgeObjectRelease(v11);
  }
  else
  {
    v12 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v12)
      return swift_bridgeObjectRelease(v11);
  }
  if (v12 >= 1)
  {
    for (i = 0; i != v12; ++i)
    {
      if ((v11 & 0xC000000000000001) != 0)
        v14 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v11);
      else
        v14 = *(id *)(v11 + 8 * i + 32);
      v15 = v14;
      (*(void (**)(_QWORD))((swift_isaMask & *v14) + 0x1B8))((i == *(_QWORD *)v9) & ~v9[8]);

    }
    return swift_bridgeObjectRelease(v11);
  }
  __break(1u);
  return result;
}

uint64_t sub_100038440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  _QWORD *v12;
  void (*v13)(_QWORD *);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  objc_class *v23;
  uint64_t v24;
  _QWORD v25[6];
  char v26;

  v1 = *(_QWORD *)(v0 + qword_10063E7A0);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain(v1);
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v23 = (objc_class *)type metadata accessor for TTRListBadgeView(0);
    v22 = v1;
    v3 = (char *)(v1 + 80);
    do
    {
      v24 = v2;
      v5 = (void *)*((_QWORD *)v3 - 6);
      v4 = *((_QWORD *)v3 - 5);
      v7 = *((_QWORD *)v3 - 4);
      v6 = *((_QWORD *)v3 - 3);
      v9 = *((_QWORD *)v3 - 2);
      v8 = *((_QWORD *)v3 - 1);
      v10 = *v3;
      v11 = objc_allocWithZone(v23);
      sub_10002B764(v5, v4, v7, v6, v9, v8, v10);
      v12 = objc_msgSend(v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      v25[0] = v5;
      v25[1] = v4;
      v25[2] = v7;
      v25[3] = v6;
      v25[4] = v9;
      v25[5] = v8;
      v26 = v10;
      v13 = *(void (**)(_QWORD *))((swift_isaMask & *v12) + 0x128);
      sub_10002B764(v5, v4, v7, v6, v9, v8, v10);
      v13(v25);
      (*(void (**)(uint64_t))((swift_isaMask & *v12) + 0x3A8))(1);
      TTRListBadgeView.enableCursorInteraction()();
      if (qword_10063D298 != -1)
        swift_once(&qword_10063D298, sub_100038874);
      TTRListBadgeView.enableHoverEffectIfApplicable(padding:)(*(double *)&qword_1006736A0 * 0.5);
      sub_10002B328(v5, v4, v7, v6, v9, v8, v10);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
      v15 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
      v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v12);
      specialized ContiguousArray._endMutation()(v16);
      v3 += 56;
      v2 = v24 - 1;
    }
    while (v24 != 1);
    swift_bridgeObjectRelease(v22);
  }
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v20 = _swiftEmptyArrayStorage;
    else
      v20 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    v21 = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v18 = (_QWORD *)_bridgeCocoaArray<A>(_:)(v20, v21);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  }
  else
  {
    v17 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v17);
    sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
    v18 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  return TTRListAppearanceGridView.arrangedSubviews.setter(v18);
}

uint64_t sub_100038710(uint64_t a1)
{
  uint64_t v1;

  v1 = a1 + OBJC_IVAR____TtC9Reminders29TTRIListDetailColorsTableCell_delegate;
  *(_QWORD *)(v1 + 8) = 0;
  return swift_unknownObjectWeakAssign(v1, 0);
}

uint64_t sub_100038728(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = a1 + OBJC_IVAR____TtC9Reminders29TTRIListDetailColorsTableCell_delegate;
  *(_QWORD *)(v2 + 8) = &off_1005EBD28;
  return swift_unknownObjectWeakAssign(v2, v1);
}

uint64_t sub_100038748()
{
  uint64_t v0;

  sub_1000381B8(*(_QWORD *)(v0 + qword_10063E798), *(_QWORD *)(v0 + qword_10063E798 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_10063E7A0));
}

uint64_t sub_10003877C(uint64_t a1)
{
  sub_1000381B8(*(_QWORD *)(a1 + qword_10063E798), *(_QWORD *)(a1 + qword_10063E798 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_10063E7A0));
}

uint64_t type metadata accessor for TTRIListDetailColorsContent(uint64_t a1)
{
  uint64_t result;

  result = qword_10063E7D0;
  if (!qword_10063E7D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIListDetailColorsContent);
  return result;
}

uint64_t sub_1000387F4(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = &unk_100520080;
  v2[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 256, 2, v2, a1 + 232);
}

void sub_100038840()
{
  _swift_stdlib_reportUnimplementedInitializer("Reminders.TTRIListDetailColorsContent", 37, "init(state:prototypeCellView:reuseIdentifier:)", 46, 0);
  __break(1u);
}

uint64_t sub_10003886C()
{
  return type metadata accessor for TTRIListDetailColorsContent(0);
}

void sub_100038874()
{
  qword_1006736A0 = 0x4024000000000000;
}

id sub_100038884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_class *ObjectType;
  char *v7;
  id v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  char *v15;
  NSString v16;
  id v17;
  char *v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  Class isa;
  char *v42;
  Swift::String v43;
  Swift::String v44;
  void *object;
  NSString v46;
  objc_super v48;

  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  v7 = &v3[OBJC_IVAR____TtC9Reminders29TTRIListDetailColorsTableCell_delegate];
  *((_QWORD *)v7 + 1) = 0;
  swift_unknownObjectWeakInit(v7, 0);
  v8 = objc_allocWithZone((Class)type metadata accessor for TTRListAppearanceBadgeGridView());
  v9 = v3;
  v10 = objc_msgSend(v8, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  TTRListAppearanceGridView.badgeSize.setter(40.0, 40.0);
  v11 = v10;
  TTRListAppearanceGridView.horizontalMargins.setter(0x4030000000000000, 0);

  v12 = v11;
  TTRListAppearanceGridView.topMargin.setter(0x4030000000000000, 0);

  v13 = qword_10063D298;
  v14 = v12;
  if (v13 != -1)
    swift_once(&qword_10063D298, sub_100038874);
  TTRListAppearanceGridView.minimumGap.setter(*(double *)&qword_1006736A0);

  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v9[OBJC_IVAR____TtC9Reminders29TTRIListDetailColorsTableCell_gridView] = v14;
  v15 = (char *)v14;

  if (a3)
  {
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v16 = 0;
  }
  v48.receiver = v9;
  v48.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v48, "initWithStyle:reuseIdentifier:", a1, v16);

  v18 = &v15[OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_delegate];
  *((_QWORD *)v18 + 1) = &off_1005EBD10;
  swift_unknownObjectWeakAssign(v18, v17);
  v19 = v17;
  v20 = objc_msgSend(v19, "contentView");
  objc_msgSend(v20, "addSubview:", v15);

  v21 = (void *)objc_opt_self(NSLayoutConstraint);
  v22 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v23 = swift_allocObject(v22, 64, 7);
  *(_OWORD *)(v23 + 16) = xmmword_100520050;
  v24 = objc_msgSend(v19, "contentView");
  v25 = objc_msgSend(v24, "leadingAnchor");

  v26 = objc_msgSend(v15, "leadingAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

  *(_QWORD *)(v23 + 32) = v27;
  v28 = objc_msgSend(v19, "contentView");
  v29 = objc_msgSend(v28, "trailingAnchor");

  v30 = objc_msgSend(v15, "trailingAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

  *(_QWORD *)(v23 + 40) = v31;
  v32 = objc_msgSend(v19, "contentView");
  v33 = objc_msgSend(v32, "topAnchor");

  v34 = objc_msgSend(v15, "topAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v23 + 48) = v35;
  v36 = objc_msgSend(v19, "contentView");
  v37 = objc_msgSend(v36, "bottomAnchor");

  v38 = objc_msgSend(v15, "bottomAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

  *(_QWORD *)(v23 + 56) = v39;
  specialized Array._endMutation()(v40);
  sub_100005ED8(0, (unint64_t *)&qword_10064BB60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v23);
  objc_msgSend(v21, "activateConstraints:", isa);

  objc_msgSend(v15, "setAccessibilityContainerType:", 4);
  v42 = v15;
  v43._object = (void *)0x800000010055F340;
  v44._countAndFlagsBits = 0x73726F6C6F43;
  v44._object = (void *)0xE600000000000000;
  v43._countAndFlagsBits = 0xD000000000000041;
  object = TTRLocalizedString(_:comment:)(v44, v43)._object;
  v46 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v42, "setAccessibilityLabel:", v46);

  return v19;
}

uint64_t type metadata accessor for TTRIListDetailColorsTableCell()
{
  return objc_opt_self(_TtC9Reminders29TTRIListDetailColorsTableCell);
}

uint64_t initializeBufferWithCopyOfBuffer for TTRIListDetailColorsContentState(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for TTRIListDetailColorsContentState(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TTRIListDetailColorsContentState(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TTRIListDetailColorsContentState()
{
  return &type metadata for TTRIListDetailColorsContentState;
}

uint64_t sub_100038F48(uint64_t a1, uint64_t a2)
{
  return sub_100038F50(a2);
}

uint64_t sub_100038F50(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);
  uint64_t v6;

  result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9Reminders29TTRIListDetailColorsTableCell_delegate);
  if (result)
  {
    v4 = result;
    v5 = *(void (**)(uint64_t, _QWORD))(result + qword_10063E798);
    if (v5)
    {
      v6 = *(_QWORD *)(result + qword_10063E798 + 8);
      swift_retain(v6);
      v5(a1, 0);
      sub_1000381B8((uint64_t)v5, v6);
    }
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

uint64_t sub_100038FD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  uint64_t result;
  uint64_t v19;
  unsigned int v20;
  __n128 v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  _BYTE v25[24];
  _BYTE v26[24];

  v3 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v4 = __chkstk_darwin(v3);
  v24 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - v6;
  v8 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750(qword_100657440);
  __chkstk_darwin(v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v1
      + OBJC_IVAR____TtC9Reminders52TTRIRemindersListAutomaticSubtaskSelectionController_currentMultipleSelectionInteractionSession;
  swift_beginAccess(v1+ OBJC_IVAR____TtC9Reminders52TTRIRemindersListAutomaticSubtaskSelectionController_currentMultipleSelectionInteractionSession, v26, 0, 0);
  sub_10003970C(v14, (uint64_t)v13);
  v15 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession(0);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48);
  v17 = v16(v13, 1, v15);
  sub_100039754((uint64_t)v13);
  sub_10002B1E8(a1, (uint64_t)v10, type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState);
  result = swift_getEnumCaseMultiPayload(v10, v8);
  if ((result - 2) >= 2)
  {
    if ((_DWORD)result)
    {
      v7 = v24;
      sub_10001F580((uint64_t)v10, (uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (v17 == 1)
      {
        v19 = (uint64_t)v7;
        v20 = 0;
        goto LABEL_7;
      }
      v22 = swift_beginAccess(v14, v25, 33, 0);
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v16)(v14, 1, v15, v22))
        sub_100147654();
    }
    else
    {
      sub_10001F580((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (v17 == 1)
      {
        v19 = (uint64_t)v7;
        v20 = 1;
LABEL_7:
        sub_1000393C8(v19, v20, v1);
        return sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      v21 = swift_beginAccess(v14, v25, 33, 0);
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v16)(v14, 1, v15, v21))
        sub_100147430();
    }
    swift_endAccess(v25);
    return sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return result;
}

uint64_t sub_100039244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE v13[24];
  _BYTE v14[24];

  v1 = sub_10002A750(qword_100657440);
  v2 = __chkstk_darwin(v1);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  v6 = &v13[-v5];
  v7 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = v0
      + OBJC_IVAR____TtC9Reminders52TTRIRemindersListAutomaticSubtaskSelectionController_currentMultipleSelectionInteractionSession;
  swift_beginAccess(v0+ OBJC_IVAR____TtC9Reminders52TTRIRemindersListAutomaticSubtaskSelectionController_currentMultipleSelectionInteractionSession, v14, 0, 0);
  sub_10003970C(v11, (uint64_t)v6);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_100039754((uint64_t)v6);
  sub_10001F580((uint64_t)v6, (uint64_t)v10, type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v4, 1, 1, v7);
  swift_beginAccess(v11, v13, 33, 0);
  sub_100039794((uint64_t)v4, v11);
  swift_endAccess(v13);
  sub_100038FD8((uint64_t)v10);
  return sub_10001F544((uint64_t)v10, type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession);
}

uint64_t sub_1000393C8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  int v18;
  uint64_t v19;
  unsigned __int8 *v20;
  void (*v21)(unsigned __int8 *, uint64_t, _QWORD);
  _BYTE v23[12];
  unsigned int v24;

  v24 = a2;
  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for TTRIRemindersListItemAdjustedSelection.AssociatedItems(0);
  __chkstk_darwin(v9);
  v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for TTRIRemindersListItemAdjustedSelection(0);
  __chkstk_darwin(v12);
  v14 = &v23[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = *(_QWORD *)(a3 + 24);
  ObjectType = swift_getObjectType(*(_QWORD *)(a3 + 16), v16);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 328))(a1, v24, ObjectType, v15);
  sub_10002B1E8((uint64_t)&v14[*(int *)(v12 + 24)], (uint64_t)v11, type metadata accessor for TTRIRemindersListItemAdjustedSelection.AssociatedItems);
  v18 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v11, 2, v5);
  if (v18)
  {
    if (v18 == 1)
      (*(void (**)(unsigned __int8 *, _QWORD, _QWORD))(a3 + 32))(&v14[*(int *)(v12 + 20)], *v14, 0);
    else
      (*(void (**)(unsigned __int8 *, _QWORD, uint64_t))(a3 + 32))(&v14[*(int *)(v12 + 20)], *v14, 1);
  }
  else
  {
    sub_10001F580((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v19 = *v14;
    v20 = &v14[*(int *)(v12 + 20)];
    v21 = *(void (**)(unsigned __int8 *, uint64_t, _QWORD))(a3 + 32);
    v21(v20, v19, 0);
    v21(v8, v19, 0);
    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return sub_10001F544((uint64_t)v14, type metadata accessor for TTRIRemindersListItemAdjustedSelection);
}

uint64_t sub_1000395B0()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  sub_100039754((uint64_t)v0+ OBJC_IVAR____TtC9Reminders52TTRIRemindersListAutomaticSubtaskSelectionController_currentMultipleSelectionInteractionSession);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1000395F0()
{
  return type metadata accessor for TTRIRemindersListAutomaticSubtaskSelectionController(0);
}

uint64_t type metadata accessor for TTRIRemindersListAutomaticSubtaskSelectionController(uint64_t a1)
{
  uint64_t result;

  result = qword_10063E978;
  if (!qword_10063E978)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIRemindersListAutomaticSubtaskSelectionController);
  return result;
}

void sub_100039634(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_1005201A8;
  v4[1] = (char *)&value witness table for () + 64;
  sub_1000396B8(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

void sub_1000396B8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10063E988)
  {
    v2 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10063E988);
  }
}

uint64_t sub_10003970C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(qword_100657440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100039754(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750(qword_100657440);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100039794(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(qword_100657440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

double sub_1000397DC@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_BYTE *)a1 = 1;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1005201D0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  return result;
}

uint64_t static TTRSmartListFilterEditorViewModel.HelpTopic.__derived_enum_equals(_:_:)()
{
  return 1;
}

id sub_100039808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _BYTE v9[24];

  v1 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v1);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
  swift_beginAccess(v4, v9, 0, 0);
  sub_10000735C(v4, (uint64_t)v3, &qword_100649CA0);
  v5 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_1000073A0((uint64_t)v3, &qword_100649CA0);
    return 0;
  }
  else
  {
    v6 = *(id *)&v3[*(int *)(v5 + 24)];
    sub_10001F544((uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  }
  return v6;
}

uint64_t sub_100039904()
{
  id v0;
  char v1;

  v0 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  v1 = TTRUserDefaults.showingLargeAttachments(forType:)(0);

  return v1 & 1;
}

void sub_100039940(uint64_t a1)
{
  id v2;

  v2 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  TTRUserDefaults.setShowingLargeAttachments(value:forType:)(a1, 0);

}

_UNKNOWN **sub_10003998C()
{
  return &off_1005EA3C8;
}

uint64_t sub_100039998()
{
  return 64;
}

uint64_t sub_1000399A0()
{
  sub_100005ED8(0, (unint64_t *)&qword_100649BD0, NSUserActivity_ptr);
  return static NSUserActivity.forStoringListPayloadForSmartListsAndSearch()();
}

uint64_t sub_1000399D8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD v3[5];

  v3[3] = type metadata accessor for TTRUserActivityListPayload(0);
  v3[4] = &protocol witness table for TTRUserActivityListPayload;
  v0 = sub_100028D70(v3);
  *(_BYTE *)v0 = 6;
  v1 = type metadata accessor for TTRUserActivityListPayload.State(0);
  swift_storeEnumTagMultiPayload(v0, v1, 2);
  NSUserActivity.setPayload(_:)(v3);
  return sub_100027F10(v3);
}

uint64_t sub_100039A4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD v26[5];

  v1 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v26[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v26[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v7);
  v9 = (char *)&v26[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005ED8(0, (unint64_t *)&qword_100649BD0, NSUserActivity_ptr);
  v10 = static NSUserActivity.forStoringWindowSceneRestorationPayload()();
  v11 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
  if (Strong)
  {
    v14 = Strong;
    v15 = *(_QWORD *)(v11 + 8);
    ObjectType = swift_getObjectType(Strong, v13);
    sub_10046B304(ObjectType, v15);
    swift_unknownObjectRelease(v14);
    v17 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v6, 1, v17);
    if ((_DWORD)v18 != 1)
    {
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v18);
      sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v20 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v9, 0, 1, v20);
      goto LABEL_6;
    }
    sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
  }
  v19 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v9, 1, 1, v19);
LABEL_6:
  v21 = (uint64_t)&v3[*(int *)(sub_10002A750(&qword_10063F038) + 48)];
  *v3 = 6;
  sub_10000735C((uint64_t)v9, v21, (uint64_t *)&unk_1006463C0);
  v22 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State(0);
  swift_storeEnumTagMultiPayload(v3, v22, 2);
  v26[3] = v1;
  v26[4] = &protocol witness table for TTRUserActivityWindowSceneRestorationPayload;
  v23 = sub_100028D70(v26);
  sub_10002B1E8((uint64_t)v3, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  NSUserActivity.setPayload(_:)(v26);
  sub_10001F544((uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  sub_1000073A0((uint64_t)v9, (uint64_t *)&unk_1006463C0);
  sub_100027F10(v26);
  return v10;
}

uint64_t sub_100039CCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRAutoCompleteReminderListScope(0);
  swift_storeEnumTagMultiPayload(a1, v2, 2);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t sub_100039D1C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v0 = type metadata accessor for Calendar(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date(0);
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v11 = static Locale.current.getter(v10);
  static Calendar.current.getter(v11);
  v12 = type metadata accessor for TTRShowCompletedSectionHeaderTitleFormatter(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  result = TTRShowCompletedSectionHeaderTitleFormatter.init(locale:calendar:allowsRelativeDates:referenceDateForYearAndEra:)(v5, v2, 1, v8);
  qword_10063EA18 = result;
  return result;
}

uint64_t sub_100039E4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v28;
  char v29;
  char v30;
  uint64_t v31;
  _BYTE v32[12];
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[5];

  v36 = a1;
  v2 = sub_10002A750((uint64_t *)&unk_100653A00);
  __chkstk_darwin(v2);
  v4 = &v32[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_10002A750((uint64_t *)&unk_100665210);
  __chkstk_darwin(v5);
  v7 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_10002A750((uint64_t *)&unk_100665590);
  __chkstk_darwin(v8);
  v10 = &v32[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *v10 = 6;
  v11 = type metadata accessor for TTRListType(0);
  swift_storeEnumTagMultiPayload(v10, v11, 2);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 0, 1, v11);
  v12 = REMSmartListType.title.getter(REMSmartListTypeCompleted);
  v14 = v13;
  v15 = static TTRListColors.SmartList.completed.getter();
  v16 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders31TTRShowCompletedViewModelSource_completedRemindersCount);
  v34 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRShowCompletedViewModelSource_completedRemindersCount);
  v35 = v15;
  v33 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9Reminders31TTRShowCompletedViewModelSource_completedRemindersCount + 8);
  v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v18);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(ObjectType, v17);
  v21 = v20;
  if (v20)
    swift_unknownObjectRelease(v20);
  v22 = v21 != 0;
  if (!v14)
  {
    v14 = 0xE000000000000000;
    v12 = 0;
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v17 + 56))(v37, ObjectType, v17);
  v23 = v37[3] != 0;
  sub_1000073A0((uint64_t)v37, &qword_100649FC0);
  if (*((_BYTE *)v16 + 8))
    v24 = 0;
  else
    v24 = *v16;
  v25 = type metadata accessor for TTRRemindersListViewModel.HashtagsState(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v7, 1, 1, v25);
  v26 = type metadata accessor for TTRTemplatePublicLinkData(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v4, 1, 1, v26);
  BYTE6(v31) = 0;
  WORD2(v31) = 1;
  LODWORD(v31) = 0;
  v30 = 0;
  v29 = 0;
  *(_WORD *)((char *)&v28 + 7) = 1;
  BYTE6(v28) = v23;
  WORD2(v28) = 0;
  BYTE3(v28) = v22;
  BYTE2(v28) = 0;
  LOWORD(v28) = 0;
  return TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)(v10, v12, v14, v35, v34, v33, 0, 3, v28, BYTE8(v28), v24, v29, 0, 0, v30, v7, v4, v31);
}

uint64_t sub_10003A0F0()
{
  uint64_t v0;

  v0 = sub_10046B320();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10003A110()
{
  return type metadata accessor for TTRShowCompletedViewModelSource(0);
}

uint64_t type metadata accessor for TTRShowCompletedViewModelSource(uint64_t a1)
{
  uint64_t result;

  result = qword_10063EA58;
  if (!qword_10063EA58)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRShowCompletedViewModelSource);
  return result;
}

uint64_t sub_10003A154(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = &unk_100520210;
  v2[1] = &unk_100520228;
  return swift_updateClassMetadata2(a1, 256, 2, v2, a1 + 1336);
}

uint64_t sub_10003A19C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void (*v159)(char *, unint64_t, uint64_t);
  char *v160;
  char *v161;
  uint64_t v162;
  int v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  _BYTE *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  _BOOL8 v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  unint64_t v179;
  unint64_t v180;
  uint64_t v181;
  void (*v182)(char *, uint64_t);
  char *v183;
  uint64_t v184;
  _BYTE *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  unint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  __n128 v195;
  uint64_t (*v196)(_QWORD, __n128);
  uint64_t v197;
  char *v198;
  uint64_t v199;
  void (*v200)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v201;
  uint64_t v202;
  void (*v203)(char *, uint64_t);
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t (*v208)(uint64_t, uint64_t, uint64_t);
  int v209;
  uint64_t *v210;
  char v211;
  uint64_t v212;
  char *v213;
  unint64_t v214;
  void (*v215)(char *, uint64_t);
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  _BYTE *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  unint64_t v228;
  unint64_t v229;
  unint64_t v230;
  void (*v231)(char *, uint64_t);
  char *v232;
  uint64_t v233;
  _BYTE *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  unint64_t v239;
  unint64_t v240;
  uint64_t v241;
  uint64_t v242;
  __n128 v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  void (*v249)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v250;
  uint64_t v251;
  void (*v252)(char *, uint64_t);
  uint64_t v253;
  uint64_t v254;
  uint64_t (*v255)(uint64_t, uint64_t, uint64_t);
  int v256;
  uint64_t *v257;
  char v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  unint64_t v264;
  void (*v265)(char *, uint64_t);
  uint64_t v266;
  uint64_t v267;
  char *v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  _BYTE *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  unint64_t v279;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v281;
  unint64_t v282;
  unint64_t v283;
  void (*v284)(char *, uint64_t);
  char *v285;
  uint64_t v286;
  char *v287;
  _BYTE *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  unint64_t v293;
  char v294;
  unint64_t v295;
  unint64_t v296;
  uint64_t v297;
  uint64_t v298;
  char *v299;
  __n128 v300;
  uint64_t (*v301)(_QWORD, __n128);
  char *v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  void (*v306)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v307;
  uint64_t v308;
  void (*v309)(char *, uint64_t);
  uint64_t v310;
  uint64_t v311;
  uint64_t (*v312)(uint64_t, uint64_t, uint64_t);
  uint64_t v313;
  int v314;
  uint64_t *v315;
  char v316;
  uint64_t v317;
  uint64_t v318;
  char *v319;
  unint64_t v320;
  void (*v321)(char *, uint64_t);
  char *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  char *v326;
  char *v327;
  uint64_t v328;
  uint64_t v329;
  _BYTE *v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  unint64_t v335;
  char v336;
  uint64_t v337;
  unint64_t v338;
  unint64_t v339;
  uint64_t v340;
  uint64_t v341;
  char *v342;
  _QWORD *v343;
  char *v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  void (*v353)(uint64_t, _QWORD, uint64_t);
  void *v354;
  uint64_t v355;
  char *v356;
  char *v357;
  char *v358;
  uint64_t v359;
  _BYTE *v360;
  char v361;
  uint64_t v362;
  char v363;
  unint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  unint64_t v369;
  uint64_t v370;
  unint64_t v371;
  unint64_t v372;
  uint64_t v373;
  uint64_t v374;
  __n128 v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t (*v378)(char *, uint64_t (*)(_QWORD, __n128), uint64_t);
  uint64_t v379;
  void (*v380)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v381;
  uint64_t v382;
  void (*v383)(char *, uint64_t);
  uint64_t v384;
  uint64_t v385;
  uint64_t (*v386)(uint64_t, uint64_t, uint64_t);
  uint64_t v387;
  int v388;
  uint64_t *v389;
  char v390;
  uint64_t v391;
  char *v392;
  unint64_t v393;
  void (*v394)(uint64_t, uint64_t);
  uint64_t v395;
  char *v396;
  char *v397;
  uint64_t v398;
  uint64_t v399;
  _BYTE *v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  unint64_t v407;
  char v408;
  unint64_t v409;
  unint64_t v410;
  uint64_t v411;
  char *v412;
  unint64_t v413;
  char *v414;
  uint64_t v415;
  _QWORD *v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t Strong;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t ObjectType;
  uint64_t result;
  __int128 v430;
  unsigned int v431;
  unsigned int v432;
  int v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  char *v438;
  char *v439;
  char *v440;
  uint64_t v441;
  uint64_t v442;
  int v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  char *v449;
  uint64_t v450;
  uint64_t v451;
  char *v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  char *v458;
  int v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  void (*v463)(char *, char *, uint64_t);
  int v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  char *v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  int v472;
  unint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  char *v480;
  uint64_t (*j)(_QWORD, __n128);
  char *v482;
  char *v483;
  char *v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  char *v491;
  uint64_t v492;
  unint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  char *v502;
  char *v503;
  char *v504;
  char *v505;
  uint64_t v506;
  char *v507;
  char *v508;
  uint64_t v509;
  uint64_t (*i)(_QWORD, __n128);
  char *v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  char *v517;
  uint64_t v518;
  unint64_t v519;
  unint64_t v520;
  uint64_t v521;
  uint64_t v522;
  char *v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  char *v532;
  uint64_t v533;
  char *v534;
  uint64_t v535;
  _BYTE *v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  char *v540;
  uint64_t v541;
  _BYTE v542[24];
  __int128 v543;
  __int128 v544;
  __int128 v545;
  __int128 v546;
  __int128 v547;
  __int128 v548;
  _OWORD v549[2];
  __int128 v550;
  __int128 v551;
  __int128 v552;
  __int128 v553;
  __int128 v554;
  __int128 v555;
  _OWORD v556[2];
  __int128 v557;
  __int128 v558;
  __int128 v559;
  __int128 v560;
  __int128 v561;
  __int128 v562;
  _OWORD v563[2];
  __int128 v564;
  __int128 v565;
  __int128 v566;
  __int128 v567;
  __int128 v568;
  __int128 v569;
  _OWORD v570[2];
  _QWORD *v571;
  _OWORD v572[6];
  _OWORD v573[2];
  _OWORD v574[6];
  _OWORD v575[2];
  _OWORD v576[6];
  _OWORD v577[2];
  _OWORD v578[6];
  _OWORD v579[2];
  _OWORD v580[6];
  _OWORD v581[2];
  _OWORD v582[6];
  _OWORD v583[2];
  _OWORD v584[6];
  _OWORD v585[2];
  _OWORD v586[6];
  _OWORD v587[2];
  _OWORD v588[6];
  _OWORD v589[2];
  _BYTE v590[128];
  _BYTE v591[128];
  _BYTE v592[128];
  _BYTE v593[128];
  _BYTE v594[128];
  _BYTE v595[128];
  _BYTE v596[128];
  _BYTE v597[128];
  _BYTE v598[144];

  v437 = a2;
  v2 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v2);
  v438 = (char *)&v430 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v4);
  v436 = (uint64_t)&v430 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Calendar(0);
  v441 = *(_QWORD *)(v6 - 8);
  v442 = v6;
  __chkstk_darwin(v6);
  v440 = (char *)&v430 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DateComponents(0);
  v453 = *(_QWORD *)(v8 - 8);
  v454 = v8;
  v9 = __chkstk_darwin(v8);
  v439 = (char *)&v430 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v452 = (char *)&v430 - v11;
  v12 = type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(0);
  v450 = *(_QWORD *)(v12 - 8);
  v451 = v12;
  __chkstk_darwin(v12);
  v458 = (char *)&v430 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Date(0);
  v541 = *(_QWORD *)(v14 - 8);
  v15 = __chkstk_darwin(v14);
  v503 = (char *)&v430 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v502 = (char *)&v430 - v18;
  v19 = __chkstk_darwin(v17);
  v449 = (char *)&v430 - v20;
  v21 = __chkstk_darwin(v19);
  v468 = (char *)&v430 - v22;
  v23 = __chkstk_darwin(v21);
  v517 = (char *)&v430 - v24;
  v25 = __chkstk_darwin(v23);
  v534 = (char *)&v430 - v26;
  __chkstk_darwin(v25);
  v504 = (char *)&v430 - v27;
  v533 = sub_10002A750(&qword_10063F000);
  v28 = __chkstk_darwin(v533);
  v30 = (char *)&v430 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v28);
  v487 = (uint64_t)&v430 - v32;
  v33 = __chkstk_darwin(v31);
  v516 = (uint64_t)&v430 - v34;
  __chkstk_darwin(v33);
  v522 = (uint64_t)&v430 - v35;
  v36 = sub_10002A750((uint64_t *)&unk_100653A90);
  v37 = __chkstk_darwin(v36);
  v470 = (uint64_t)&v430 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __chkstk_darwin(v37);
  v490 = (uint64_t)&v430 - v40;
  v41 = __chkstk_darwin(v39);
  v492 = (uint64_t)&v430 - v42;
  v43 = __chkstk_darwin(v41);
  v469 = (uint64_t)&v430 - v44;
  v45 = __chkstk_darwin(v43);
  v489 = (uint64_t)&v430 - v46;
  v47 = __chkstk_darwin(v45);
  v488 = (uint64_t)&v430 - v48;
  v49 = __chkstk_darwin(v47);
  v485 = (uint64_t)&v430 - v50;
  v51 = __chkstk_darwin(v49);
  v486 = (uint64_t)&v430 - v52;
  v53 = __chkstk_darwin(v51);
  v509 = (uint64_t)&v430 - v54;
  v55 = __chkstk_darwin(v53);
  v501 = (uint64_t)&v430 - v56;
  v57 = __chkstk_darwin(v55);
  v525 = (uint64_t)&v430 - v58;
  __chkstk_darwin(v57);
  v524 = (uint64_t)&v430 - v59;
  v535 = type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day(0);
  v539 = *(_QWORD *)(v535 - 8);
  v60 = __chkstk_darwin(v535);
  v508 = (char *)&v430 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __chkstk_darwin(v60);
  v507 = (char *)&v430 - v63;
  v64 = __chkstk_darwin(v62);
  v480 = (char *)&v430 - v65;
  v66 = __chkstk_darwin(v64);
  v523 = (char *)&v430 - v67;
  v68 = __chkstk_darwin(v66);
  v532 = (char *)&v430 - v69;
  __chkstk_darwin(v68);
  v540 = (char *)&v430 - v70;
  v538 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  v475 = *(_QWORD *)(v538 - 8);
  v71 = __chkstk_darwin(v538);
  v500 = (uint64_t)&v430 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __chkstk_darwin(v71);
  v499 = (uint64_t)&v430 - v74;
  v75 = __chkstk_darwin(v73);
  v456 = (uint64_t)&v430 - v76;
  v77 = __chkstk_darwin(v75);
  v448 = (uint64_t)&v430 - v78;
  v79 = __chkstk_darwin(v77);
  v484 = (char *)&v430 - v80;
  v81 = __chkstk_darwin(v79);
  v483 = (char *)&v430 - v82;
  v83 = __chkstk_darwin(v81);
  v455 = (uint64_t)&v430 - v84;
  v85 = __chkstk_darwin(v83);
  v447 = (uint64_t)&v430 - v86;
  v87 = __chkstk_darwin(v85);
  v479 = (uint64_t)&v430 - v88;
  v89 = __chkstk_darwin(v87);
  v478 = (uint64_t)&v430 - v90;
  v91 = __chkstk_darwin(v89);
  v515 = (uint64_t)&v430 - v92;
  v93 = __chkstk_darwin(v91);
  v514 = (uint64_t)&v430 - v94;
  v95 = __chkstk_darwin(v93);
  v462 = (uint64_t)&v430 - v96;
  v97 = __chkstk_darwin(v95);
  v461 = (uint64_t)&v430 - v98;
  v99 = __chkstk_darwin(v97);
  v531 = (uint64_t)&v430 - v100;
  v101 = __chkstk_darwin(v99);
  v530 = (uint64_t)&v430 - v102;
  v103 = __chkstk_darwin(v101);
  v467 = (uint64_t)&v430 - v104;
  __chkstk_darwin(v103);
  v466 = (uint64_t)&v430 - v105;
  v537 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  v106 = __chkstk_darwin(v537);
  v498 = (uint64_t)&v430 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = __chkstk_darwin(v106);
  v497 = (uint64_t)&v430 - v109;
  v110 = __chkstk_darwin(v108);
  v477 = (uint64_t)&v430 - v111;
  v112 = __chkstk_darwin(v110);
  v513 = (uint64_t)&v430 - v113;
  v114 = __chkstk_darwin(v112);
  v529 = (uint64_t)&v430 - v115;
  __chkstk_darwin(v114);
  v536 = (char *)&v430 - v116;
  v117 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v118 = __chkstk_darwin(v117);
  v496 = (uint64_t)&v430 - ((v119 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = __chkstk_darwin(v118);
  v446 = (uint64_t)&v430 - v121;
  v122 = __chkstk_darwin(v120);
  v495 = (uint64_t)&v430 - v123;
  v124 = __chkstk_darwin(v122);
  v445 = (uint64_t)&v430 - v125;
  v126 = __chkstk_darwin(v124);
  v476 = (uint64_t)&v430 - v127;
  v128 = __chkstk_darwin(v126);
  v512 = (uint64_t)&v430 - v129;
  v130 = __chkstk_darwin(v128);
  v460 = (uint64_t)&v430 - v131;
  v132 = __chkstk_darwin(v130);
  v528 = (uint64_t)&v430 - v133;
  __chkstk_darwin(v132);
  v465 = (uint64_t)&v430 - v134;
  v494 = type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket(0);
  v506 = *(_QWORD *)(v494 - 8);
  v135 = __chkstk_darwin(v494);
  v491 = (char *)&v430 - ((v136 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v135);
  v505 = (char *)&v430 - v137;
  v138 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  v434 = *(_QWORD *)(v138 - 8);
  v435 = v138;
  __chkstk_darwin(v138);
  v457 = (uint64_t)&v430 - ((v139 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_10002A750(&qword_10063F008);
  v141 = __chkstk_darwin(v140);
  v143 = (char *)&v430 - ((v142 + 15) & 0xFFFFFFFFFFFFFFF0);
  REMRemindersListDataView.CompletedDateBucketsModel.remindersCount.getter(v141);
  v144 = type metadata accessor for REMRemindersListDataView.CountByCompleted(0);
  v145 = *(_QWORD *)(v144 - 8);
  v146 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v145 + 48))(v143, 1, v144);
  if (v146 == 1)
  {
    sub_1000073A0((uint64_t)v143, &qword_10063F008);
    v147 = 0;
  }
  else
  {
    v147 = REMRemindersListDataView.CountByCompleted.completed.getter();
    (*(void (**)(char *, uint64_t))(v145 + 8))(v143, v144);
  }
  v148 = v444 + OBJC_IVAR____TtC9Reminders31TTRShowCompletedViewModelSource_completedRemindersCount;
  *(_QWORD *)v148 = v147;
  *(_BYTE *)(v148 + 8) = v146 == 1;
  v149 = sub_100039E4C(v457);
  v571 = _swiftEmptyArrayStorage;
  v150 = REMRemindersListDataView.CompletedDateBucketsModel.buckets.getter(v149);
  v151 = v525;
  v152 = v535;
  v474 = *(_QWORD *)(v150 + 16);
  if (!v474)
  {
LABEL_134:
    swift_bridgeObjectRelease(v150);
    v415 = v436;
    sub_10002B1E8(v457, v436, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v434 + 56))(v415, 0, 1, v435);
    swift_beginAccess(&v571, &v550, 0, 0);
    v416 = v571;
    v417 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
    v418 = swift_allocObject(v417, 16, 7);
    v419 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v420 = (uint64_t)v438;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v419 - 8) + 56))(v438, 1, 1, v419);
    *(_QWORD *)&v566 = &off_100604210;
    *((_QWORD *)&v565 + 1) = v417;
    *(_QWORD *)&v564 = v418;
    sub_100010634((uint64_t)&v564, (uint64_t)&v557);
    v421 = swift_allocObject(&unk_1005EBDB0, 72, 7);
    *(_QWORD *)(v421 + 16) = v416;
    sub_10002E37C(&v557, v421 + 24);
    v422 = v444;
    *(_QWORD *)(v421 + 64) = v444;
    swift_bridgeObjectRetain_n(v416, 2);
    swift_retain(v418);
    swift_retain(v422);
    sub_10047C8F8(1, v415, (uint64_t (*)(uint64_t))sub_10003E360, v421, v437, 0, v420);
    swift_release(v421);
    sub_100027F10(&v564);
    swift_bridgeObjectRelease(v416);
    sub_1000073A0(v420, (uint64_t *)&unk_100640EB0);
    sub_1000073A0(v415, &qword_100649CA0);
    swift_release(v418);
    v423 = v422 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    Strong = swift_unknownObjectWeakLoadStrong(v422 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
    if (Strong)
    {
      v426 = Strong;
      v427 = *(_QWORD *)(v423 + 8);
      ObjectType = swift_getObjectType(Strong, v425);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v427 + 104))(6, ObjectType, v427);
      swift_unknownObjectRelease(v426);
    }
    sub_10001F544(v457, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    return swift_bridgeObjectRelease(v571);
  }
  v153 = 0;
  v154 = v506;
  v473 = v150 + ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80));
  v472 = enum case for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.day(_:);
  v464 = enum case for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.pastSevenDays(_:);
  v459 = enum case for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.pastThirtyDays(_:);
  v443 = enum case for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.month(_:);
  v432 = enum case for Calendar.Component.era(_:);
  v433 = enum case for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.year(_:);
  v431 = enum case for Calendar.Component.year(_:);
  v430 = xmmword_1005201E0;
  v155 = 1;
  v482 = v30;
  v156 = v494;
  v471 = v150;
  while (v153 < *(_QWORD *)(v150 + 16))
  {
    v158 = *(_QWORD *)(v154 + 72);
    v493 = v153;
    v159 = *(void (**)(char *, unint64_t, uint64_t))(v506 + 16);
    v160 = v505;
    v159(v505, v473 + v158 * v153, v156);
    v161 = v491;
    v159(v491, (unint64_t)v160, v156);
    v162 = v506;
    v163 = (*(uint64_t (**)(char *, uint64_t))(v506 + 88))(v161, v156);
    if (v163 == v472)
    {
      (*(void (**)(char *, uint64_t))(v162 + 96))(v161, v156);
      v164 = (*(uint64_t (**)(char *, char *, uint64_t))(v539 + 32))(v480, v161, v152);
      v165 = v468;
      REMRemindersListDataView.CompletedDateBucketsModel.Day.date.getter(v164);
      v166 = v541;
      if (qword_10063D2A0 != -1)
        swift_once(&qword_10063D2A0, sub_100039D1C);
      TTRShowCompletedSectionHeaderTitleFormatter.title(for:isFirst:)(v580, v505, v155 & 1);
      v561 = v580[4];
      v562 = v580[5];
      v563[0] = v581[0];
      *(_OWORD *)((char *)v563 + 10) = *(_OWORD *)((char *)v581 + 10);
      v557 = v580[0];
      v558 = v580[1];
      v559 = v580[2];
      v560 = v580[3];
      v167 = v477;
      (*(void (**)(uint64_t, char *, uint64_t))(v166 + 16))(v477, v165, v14);
      swift_storeEnumTagMultiPayload(v167, v537, 4);
      v168 = v536;
      sub_10002B1E8(v167, (uint64_t)v536, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      v568 = v561;
      v569 = v562;
      v570[0] = v563[0];
      *(_OWORD *)((char *)v570 + 10) = *(_OWORD *)((char *)v563 + 10);
      v564 = v557;
      v565 = v558;
      v566 = v559;
      v567 = v560;
      TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v564);
      sub_10003E0EC((uint64_t)&v564, (uint64_t)v594);
      v169 = sub_10003E134((uint64_t)v580);
      v170 = REMRemindersListDataView.CompletedDateBucketsModel.Day.reminders.getter(v169);
      v171 = *(_QWORD *)(v170 + 16);
      swift_bridgeObjectRelease(v170);
      v172 = v171 == 0;
      v173 = v476;
      TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v168, v594, 1, v172, 0, 0, 0, 0);
      v174 = v478;
      v175 = sub_10002B1E8(v173, v478, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v176 = REMRemindersListDataView.CompletedDateBucketsModel.Day.reminders.getter(v175);
      v177 = v538;
      *(_QWORD *)(v174 + *(int *)(v538 + 20)) = v176;
      *(_BYTE *)(v174 + *(int *)(v177 + 24)) = 0;
      sub_10002B1E8(v174, v479, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      swift_beginAccess(&v571, &v550, 33, 0);
      v178 = (unint64_t)v571;
      if ((swift_isUniquelyReferenced_nonNull_native(v571) & 1) == 0)
        v178 = sub_100455348(0, *(_QWORD *)(v178 + 16) + 1, 1, v178);
      v180 = *(_QWORD *)(v178 + 16);
      v179 = *(_QWORD *)(v178 + 24);
      if (v180 >= v179 >> 1)
        v178 = sub_100455348(v179 > 1, v180 + 1, 1, v178);
      *(_QWORD *)(v178 + 16) = v180 + 1;
      sub_10001F580(v479, v178+ ((*(unsigned __int8 *)(v475 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v475 + 80))+ *(_QWORD *)(v475 + 72) * v180, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      v571 = (_QWORD *)v178;
      swift_endAccess(&v550);
      sub_10003E230((uint64_t)v580);
      sub_10001F544(v478, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      sub_10001F544(v476, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      sub_10001F544(v477, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      (*(void (**)(char *, uint64_t))(v166 + 8))(v165, v14);
      (*(void (**)(char *, uint64_t))(v539 + 8))(v480, v152);
LABEL_18:
      v154 = v506;
      v156 = v494;
      (*(void (**)(char *, uint64_t))(v506 + 8))(v505, v494);
      goto LABEL_8;
    }
    v181 = v541;
    if (v163 == v464)
    {
      v182 = *(void (**)(char *, uint64_t))(v162 + 96);
      v183 = v491;
      v182(v491, v156);
      v184 = *(_QWORD *)&v183[*(int *)(sub_10002A750(&qword_10063F028) + 48)];
      if (qword_10063D2A0 != -1)
        swift_once(&qword_10063D2A0, sub_100039D1C);
      TTRShowCompletedSectionHeaderTitleFormatter.title(for:isFirst:)(v572, v505, v155 & 1);
      v561 = v572[4];
      v562 = v572[5];
      v563[0] = v573[0];
      *(_OWORD *)((char *)v563 + 10) = *(_OWORD *)((char *)v573 + 10);
      v557 = v572[0];
      v558 = v572[1];
      v559 = v572[2];
      v560 = v572[3];
      v185 = v536;
      *v536 = 14;
      swift_storeEnumTagMultiPayload(v185, v537, 0);
      v568 = v561;
      v569 = v562;
      v570[0] = v563[0];
      *(_OWORD *)((char *)v570 + 10) = *(_OWORD *)((char *)v563 + 10);
      v564 = v557;
      v565 = v558;
      v566 = v559;
      v567 = v560;
      TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v564);
      sub_10003E0EC((uint64_t)&v564, (uint64_t)v591);
      v186 = v465;
      TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v185, v591, 1, 0, 0, 0, 0, 0);
      v187 = v466;
      sub_10002B1E8(v186, v466, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v188 = v538;
      *(_QWORD *)(v187 + *(int *)(v538 + 20)) = _swiftEmptyArrayStorage;
      *(_BYTE *)(v187 + *(int *)(v188 + 24)) = 0;
      sub_10002B1E8(v187, v467, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      swift_beginAccess(&v571, &v550, 33, 0);
      v189 = (unint64_t)v571;
      sub_10003E134((uint64_t)v572);
      if ((swift_isUniquelyReferenced_nonNull_native(v189) & 1) == 0)
        v189 = sub_100455348(0, *(_QWORD *)(v189 + 16) + 1, 1, v189);
      v191 = *(_QWORD *)(v189 + 16);
      v190 = *(_QWORD *)(v189 + 24);
      if (v191 >= v190 >> 1)
        v189 = sub_100455348(v190 > 1, v191 + 1, 1, v189);
      *(_QWORD *)(v189 + 16) = v191 + 1;
      v520 = (*(unsigned __int8 *)(v475 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v475 + 80);
      v519 = *(_QWORD *)(v475 + 72);
      sub_10001F580(v467, v189 + v520 + v519 * v191, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      v571 = (_QWORD *)v189;
      swift_endAccess(&v550);
      v192 = *(_QWORD *)(v184 + 16);
      if (v192)
      {
        v193 = v539;
        v194 = (char *)(v184
                      + ((*(unsigned __int8 *)(v539 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v539 + 80)));
        v521 = v184;
        v195 = swift_bridgeObjectRetain(v184);
        v511 = *(char **)(v193 + 72);
        v196 = *(uint64_t (**)(_QWORD, __n128))(v193 + 16);
        v197 = v192 - 1;
        v518 = (uint64_t)v194;
        v198 = v194;
        v156 = v524;
        for (i = v196; ; v196 = i)
        {
          v526 = (uint64_t)v198;
          v199 = v196(v540, v195);
          REMRemindersListDataView.CompletedDateBucketsModel.Day.date.getter(v199);
          v200 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v181 + 56);
          v200(v156, 0, 1, v14);
          if (!*(_QWORD *)(v521 + 16))
            break;
          v527 = v197;
          v201 = v532;
          v202 = ((uint64_t (*)(char *, uint64_t, uint64_t))v196)(v532, v518, v152);
          REMRemindersListDataView.CompletedDateBucketsModel.Day.date.getter(v202);
          v203 = *(void (**)(char *, uint64_t))(v539 + 8);
          v203(v201, v152);
          v200(v151, 0, 1, v14);
          v204 = v181;
          v205 = v522;
          v206 = v522 + *(int *)(v533 + 48);
          sub_10000735C(v156, v522, (uint64_t *)&unk_100653A90);
          sub_10000735C(v151, v206, (uint64_t *)&unk_100653A90);
          v207 = v204;
          v208 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v204 + 48);
          if (v208(v205, 1, v14) == 1)
          {
            sub_1000073A0(v151, (uint64_t *)&unk_100653A90);
            sub_1000073A0(v156, (uint64_t *)&unk_100653A90);
            v209 = v208(v206, 1, v14);
            if (v209 == 1)
              v210 = (uint64_t *)&unk_100653A90;
            else
              v210 = &qword_10063F000;
            if (v209 == 1)
              v211 = -1;
            else
              v211 = 0;
          }
          else
          {
            v212 = v501;
            sub_10000735C(v205, v501, (uint64_t *)&unk_100653A90);
            if (v208(v206, 1, v14) == 1)
            {
              sub_1000073A0(v525, (uint64_t *)&unk_100653A90);
              sub_1000073A0(v524, (uint64_t *)&unk_100653A90);
              (*(void (**)(uint64_t, uint64_t))(v207 + 8))(v212, v14);
              v211 = 0;
              v210 = &qword_10063F000;
            }
            else
            {
              v213 = v504;
              (*(void (**)(char *, uint64_t, uint64_t))(v207 + 32))(v504, v206, v14);
              v214 = sub_10003E370();
              v211 = dispatch thunk of static Equatable.== infix(_:_:)(v212, v213, v14, v214);
              v215 = *(void (**)(char *, uint64_t))(v207 + 8);
              v205 = v522;
              v215(v213, v14);
              sub_1000073A0(v525, (uint64_t *)&unk_100653A90);
              sub_1000073A0(v524, (uint64_t *)&unk_100653A90);
              v215((char *)v212, v14);
              v210 = (uint64_t *)&unk_100653A90;
            }
          }
          v216 = sub_1000073A0(v205, v210);
          v217 = v534;
          v218 = v540;
          REMRemindersListDataView.CompletedDateBucketsModel.Day.date.getter(v216);
          TTRShowCompletedSectionHeaderTitleFormatter.title(for:)(v574, v218);
          v547 = v574[4];
          v548 = v574[5];
          v549[0] = v575[0];
          *(_OWORD *)((char *)v549 + 10) = *(_OWORD *)((char *)v575 + 10);
          v543 = v574[0];
          v544 = v574[1];
          v545 = v574[2];
          v546 = v574[3];
          v219 = v529;
          (*(void (**)(uint64_t, char *, uint64_t))(v207 + 16))(v529, v217, v14);
          swift_storeEnumTagMultiPayload(v219, v537, 4);
          v220 = v219;
          v221 = v536;
          sub_10002B1E8(v220, (uint64_t)v536, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
          v554 = v547;
          v555 = v548;
          v556[0] = v549[0];
          *(_OWORD *)((char *)v556 + 10) = *(_OWORD *)((char *)v549 + 10);
          v550 = v543;
          v551 = v544;
          v552 = v545;
          v553 = v546;
          TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v550);
          sub_10003E0EC((uint64_t)&v550, (uint64_t)v590);
          v222 = v528;
          TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v221, v590, (v211 & 1) == 0, 0, 0, 0, 0, 0);
          v223 = v222;
          v224 = v530;
          sub_10002B1E8(v223, v530, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          v225 = sub_10003E134((uint64_t)v574);
          v226 = REMRemindersListDataView.CompletedDateBucketsModel.Day.reminders.getter(v225);
          v227 = v538;
          *(_QWORD *)(v224 + *(int *)(v538 + 20)) = v226;
          *(_BYTE *)(v224 + *(int *)(v227 + 24)) = 0;
          sub_10002B1E8(v224, v531, type metadata accessor for TTRRemindersListTreeViewModel.Section);
          swift_beginAccess(&v571, v542, 33, 0);
          v228 = (unint64_t)v571;
          if ((swift_isUniquelyReferenced_nonNull_native(v571) & 1) == 0)
            v228 = sub_100455348(0, *(_QWORD *)(v228 + 16) + 1, 1, v228);
          v156 = v524;
          v152 = v535;
          v230 = *(_QWORD *)(v228 + 16);
          v229 = *(_QWORD *)(v228 + 24);
          if (v230 >= v229 >> 1)
            v228 = sub_100455348(v229 > 1, v230 + 1, 1, v228);
          *(_QWORD *)(v228 + 16) = v230 + 1;
          sub_10001F580(v531, v228 + v520 + v230 * v519, type metadata accessor for TTRRemindersListTreeViewModel.Section);
          v571 = (_QWORD *)v228;
          swift_endAccess(v542);
          sub_10003E230((uint64_t)v574);
          sub_10001F544(v530, type metadata accessor for TTRRemindersListTreeViewModel.Section);
          sub_10001F544(v528, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          sub_10001F544(v529, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
          v181 = v541;
          (*(void (**)(char *, uint64_t))(v541 + 8))(v534, v14);
          v203(v540, v152);
          if (!v527)
          {
            v157 = v521;
            swift_bridgeObjectRelease(v521);
            sub_10003E230((uint64_t)v572);
            swift_bridgeObjectRelease(v157);
            v151 = v525;
            goto LABEL_7;
          }
          v197 = v527 - 1;
          v198 = &v511[v526];
          v151 = v525;
        }
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
        break;
      }
      sub_10003E230((uint64_t)v572);
      swift_bridgeObjectRelease(v184);
LABEL_7:
      sub_10001F544(v466, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      sub_10001F544(v465, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v154 = v506;
      v156 = v494;
      (*(void (**)(char *, uint64_t))(v506 + 8))(v505, v494);
      (*(void (**)(char *, uint64_t))(v181 + 8))(v491, v14);
    }
    else if (v163 == v459)
    {
      v231 = *(void (**)(char *, uint64_t))(v162 + 96);
      v232 = v491;
      v231(v491, v156);
      v233 = *(_QWORD *)&v232[*(int *)(sub_10002A750(&qword_10063F028) + 48)];
      if (qword_10063D2A0 != -1)
        swift_once(&qword_10063D2A0, sub_100039D1C);
      TTRShowCompletedSectionHeaderTitleFormatter.title(for:isFirst:)(v576, v505, v155 & 1);
      v561 = v576[4];
      v562 = v576[5];
      v563[0] = v577[0];
      *(_OWORD *)((char *)v563 + 10) = *(_OWORD *)((char *)v577 + 10);
      v557 = v576[0];
      v558 = v576[1];
      v559 = v576[2];
      v560 = v576[3];
      v234 = v536;
      *v536 = 15;
      swift_storeEnumTagMultiPayload(v234, v537, 0);
      v568 = v561;
      v569 = v562;
      v570[0] = v563[0];
      *(_OWORD *)((char *)v570 + 10) = *(_OWORD *)((char *)v563 + 10);
      v564 = v557;
      v565 = v558;
      v566 = v559;
      v567 = v560;
      TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v564);
      sub_10003E0EC((uint64_t)&v564, (uint64_t)v593);
      v235 = v460;
      TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v234, v593, 1, 0, 0, 0, 0, 0);
      v236 = v461;
      sub_10002B1E8(v235, v461, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v237 = v538;
      *(_QWORD *)(v236 + *(int *)(v538 + 20)) = _swiftEmptyArrayStorage;
      *(_BYTE *)(v236 + *(int *)(v237 + 24)) = 0;
      sub_10002B1E8(v236, v462, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      swift_beginAccess(&v571, &v550, 33, 0);
      v238 = (unint64_t)v571;
      sub_10003E134((uint64_t)v576);
      if ((swift_isUniquelyReferenced_nonNull_native(v238) & 1) == 0)
        v238 = sub_100455348(0, *(_QWORD *)(v238 + 16) + 1, 1, v238);
      v240 = *(_QWORD *)(v238 + 16);
      v239 = *(_QWORD *)(v238 + 24);
      if (v240 >= v239 >> 1)
        v238 = sub_100455348(v239 > 1, v240 + 1, 1, v238);
      *(_QWORD *)(v238 + 16) = v240 + 1;
      v520 = (*(unsigned __int8 *)(v475 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v475 + 80);
      v519 = *(_QWORD *)(v475 + 72);
      sub_10001F580(v462, v238 + v520 + v519 * v240, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      v571 = (_QWORD *)v238;
      swift_endAccess(&v550);
      v241 = *(_QWORD *)(v233 + 16);
      if (v241)
      {
        v242 = v539;
        v156 = v233 + ((*(unsigned __int8 *)(v539 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v539 + 80));
        v521 = v233;
        v243 = swift_bridgeObjectRetain(v233);
        i = *(uint64_t (**)(_QWORD, __n128))(v242 + 72);
        v244 = *(char **)(v242 + 16);
        v527 = v241 - 1;
        v518 = v156;
        v245 = v486;
        v246 = v509;
        v511 = v244;
        while (1)
        {
          v247 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v244)(v523, v156, v152, v243);
          REMRemindersListDataView.CompletedDateBucketsModel.Day.date.getter(v247);
          v248 = v541;
          v249 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v541 + 56);
          v249(v246, 0, 1, v14);
          if (!*(_QWORD *)(v521 + 16))
            goto LABEL_138;
          v526 = v156;
          v250 = v532;
          v251 = ((uint64_t (*)(char *, uint64_t, uint64_t))v244)(v532, v518, v152);
          REMRemindersListDataView.CompletedDateBucketsModel.Day.date.getter(v251);
          v252 = *(void (**)(char *, uint64_t))(v539 + 8);
          v252(v250, v152);
          v249(v245, 0, 1, v14);
          v253 = v516;
          v254 = v516 + *(int *)(v533 + 48);
          sub_10000735C(v246, v516, (uint64_t *)&unk_100653A90);
          sub_10000735C(v245, v254, (uint64_t *)&unk_100653A90);
          v255 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v248 + 48);
          if (v255(v253, 1, v14) == 1)
          {
            sub_1000073A0(v245, (uint64_t *)&unk_100653A90);
            sub_1000073A0(v246, (uint64_t *)&unk_100653A90);
            v256 = v255(v254, 1, v14);
            if (v256 == 1)
              v257 = (uint64_t *)&unk_100653A90;
            else
              v257 = &qword_10063F000;
            if (v256 == 1)
              v258 = -1;
            else
              v258 = 0;
            v259 = v541;
          }
          else
          {
            v260 = v253;
            v261 = v485;
            sub_10000735C(v260, v485, (uint64_t *)&unk_100653A90);
            if (v255(v254, 1, v14) == 1)
            {
              sub_1000073A0(v245, (uint64_t *)&unk_100653A90);
              sub_1000073A0(v509, (uint64_t *)&unk_100653A90);
              v259 = v541;
              (*(void (**)(uint64_t, uint64_t))(v541 + 8))(v261, v14);
              v258 = 0;
              v257 = &qword_10063F000;
            }
            else
            {
              v259 = v541;
              v262 = v261;
              v263 = v504;
              (*(void (**)(char *, uint64_t, uint64_t))(v541 + 32))(v504, v254, v14);
              v264 = sub_10003E370();
              v258 = dispatch thunk of static Equatable.== infix(_:_:)(v262, v263, v14, v264);
              v265 = *(void (**)(char *, uint64_t))(v259 + 8);
              v265(v263, v14);
              sub_1000073A0(v486, (uint64_t *)&unk_100653A90);
              sub_1000073A0(v509, (uint64_t *)&unk_100653A90);
              v266 = v262;
              v245 = v486;
              v265((char *)v266, v14);
              v257 = (uint64_t *)&unk_100653A90;
            }
          }
          v267 = sub_1000073A0(v516, v257);
          v268 = v517;
          v269 = v523;
          REMRemindersListDataView.CompletedDateBucketsModel.Day.date.getter(v267);
          TTRShowCompletedSectionHeaderTitleFormatter.title(for:)(v578, v269);
          v547 = v578[4];
          v548 = v578[5];
          v549[0] = v579[0];
          *(_OWORD *)((char *)v549 + 10) = *(_OWORD *)((char *)v579 + 10);
          v543 = v578[0];
          v544 = v578[1];
          v545 = v578[2];
          v546 = v578[3];
          v270 = v513;
          (*(void (**)(uint64_t, char *, uint64_t))(v259 + 16))(v513, v268, v14);
          swift_storeEnumTagMultiPayload(v270, v537, 4);
          v271 = v270;
          v272 = v536;
          sub_10002B1E8(v271, (uint64_t)v536, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
          v554 = v547;
          v555 = v548;
          v556[0] = v549[0];
          *(_OWORD *)((char *)v556 + 10) = *(_OWORD *)((char *)v549 + 10);
          v550 = v543;
          v551 = v544;
          v552 = v545;
          v553 = v546;
          TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v550);
          sub_10003E0EC((uint64_t)&v550, (uint64_t)v592);
          v273 = v512;
          TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v272, v592, (v258 & 1) == 0, 0, 0, 0, 0, 0);
          v274 = v273;
          v275 = v514;
          sub_10002B1E8(v274, v514, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          v276 = sub_10003E134((uint64_t)v578);
          v277 = REMRemindersListDataView.CompletedDateBucketsModel.Day.reminders.getter(v276);
          v278 = v538;
          *(_QWORD *)(v275 + *(int *)(v538 + 20)) = v277;
          *(_BYTE *)(v275 + *(int *)(v278 + 24)) = 0;
          sub_10002B1E8(v275, v515, type metadata accessor for TTRRemindersListTreeViewModel.Section);
          swift_beginAccess(&v571, v542, 33, 0);
          v279 = (unint64_t)v571;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v571);
          v152 = v535;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            v279 = sub_100455348(0, *(_QWORD *)(v279 + 16) + 1, 1, v279);
          v244 = v511;
          v281 = v527;
          v283 = *(_QWORD *)(v279 + 16);
          v282 = *(_QWORD *)(v279 + 24);
          if (v283 >= v282 >> 1)
            v279 = sub_100455348(v282 > 1, v283 + 1, 1, v279);
          *(_QWORD *)(v279 + 16) = v283 + 1;
          sub_10001F580(v515, v279 + v520 + v283 * v519, type metadata accessor for TTRRemindersListTreeViewModel.Section);
          v571 = (_QWORD *)v279;
          swift_endAccess(v542);
          sub_10003E230((uint64_t)v578);
          sub_10001F544(v514, type metadata accessor for TTRRemindersListTreeViewModel.Section);
          sub_10001F544(v512, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          sub_10001F544(v513, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
          (*(void (**)(char *, uint64_t))(v541 + 8))(v517, v14);
          v252(v523, v152);
          if (!v281)
          {
            v340 = v521;
            swift_bridgeObjectRelease(v521);
            sub_10003E230((uint64_t)v576);
            v341 = v340;
            goto LABEL_127;
          }
          v527 = v281 - 1;
          v156 = (uint64_t)i + v526;
          v246 = v509;
        }
      }
      sub_10003E230((uint64_t)v576);
      v341 = v233;
LABEL_127:
      swift_bridgeObjectRelease(v341);
      v156 = v494;
      sub_10001F544(v461, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      sub_10001F544(v460, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v154 = v506;
      (*(void (**)(char *, uint64_t))(v506 + 8))(v505, v156);
      (*(void (**)(char *, uint64_t))(v541 + 8))(v491, v14);
      v151 = v525;
    }
    else
    {
      if (v163 == v443)
      {
        v284 = *(void (**)(char *, uint64_t))(v162 + 96);
        v285 = v491;
        v284(v491, v156);
        v286 = *(_QWORD *)&v285[*(int *)(sub_10002A750(&qword_10063F028) + 48)];
        v287 = v449;
        v463 = *(void (**)(char *, char *, uint64_t))(v181 + 32);
        v463(v449, v285, v14);
        if (qword_10063D2A0 != -1)
          swift_once(&qword_10063D2A0, sub_100039D1C);
        TTRShowCompletedSectionHeaderTitleFormatter.title(for:isFirst:)(v582, v505, v155 & 1);
        v561 = v582[4];
        v562 = v582[5];
        v563[0] = v583[0];
        *(_OWORD *)((char *)v563 + 10) = *(_OWORD *)((char *)v583 + 10);
        v557 = v582[0];
        v558 = v582[1];
        v559 = v582[2];
        v560 = v582[3];
        v288 = v536;
        v520 = *(_QWORD *)(v181 + 16);
        ((void (*)(_BYTE *, char *, uint64_t))v520)(v536, v287, v14);
        swift_storeEnumTagMultiPayload(v288, v537, 5);
        v568 = v561;
        v569 = v562;
        v570[0] = v563[0];
        *(_OWORD *)((char *)v570 + 10) = *(_OWORD *)((char *)v563 + 10);
        v564 = v557;
        v565 = v558;
        v566 = v559;
        v567 = v560;
        TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v564);
        sub_10003E0EC((uint64_t)&v564, (uint64_t)v596);
        v289 = *(_QWORD *)(v286 + 16);
        v290 = v445;
        TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v288, v596, 1, v289 == 0, 0, 0, 0, 0);
        v291 = v447;
        sub_10002B1E8(v290, v447, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        v292 = v538;
        *(_QWORD *)(v291 + *(int *)(v538 + 20)) = _swiftEmptyArrayStorage;
        *(_BYTE *)(v291 + *(int *)(v292 + 24)) = 0;
        sub_10002B1E8(v291, v455, type metadata accessor for TTRRemindersListTreeViewModel.Section);
        swift_beginAccess(&v571, &v550, 33, 0);
        v293 = (unint64_t)v571;
        sub_10003E134((uint64_t)v582);
        v294 = swift_isUniquelyReferenced_nonNull_native(v293);
        v521 = v286;
        if ((v294 & 1) == 0)
          v293 = sub_100455348(0, *(_QWORD *)(v293 + 16) + 1, 1, v293);
        v296 = *(_QWORD *)(v293 + 16);
        v295 = *(_QWORD *)(v293 + 24);
        if (v296 >= v295 >> 1)
          v293 = sub_100455348(v295 > 1, v296 + 1, 1, v293);
        *(_QWORD *)(v293 + 16) = v296 + 1;
        v519 = (*(unsigned __int8 *)(v475 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v475 + 80);
        v518 = *(_QWORD *)(v475 + 72);
        sub_10001F580(v455, v293 + v519 + v518 * v296, type metadata accessor for TTRRemindersListTreeViewModel.Section);
        v571 = (_QWORD *)v293;
        swift_endAccess(&v550);
        if (v289)
        {
          v297 = v539;
          v298 = v521;
          v299 = (char *)(v521
                        + ((*(unsigned __int8 *)(v539 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v539 + 80)));
          v300 = swift_bridgeObjectRetain(v521);
          i = *(uint64_t (**)(_QWORD, __n128))(v297 + 72);
          v301 = *(uint64_t (**)(_QWORD, __n128))(v297 + 16);
          v527 = v289 - 1;
          v511 = v299;
          v302 = v299;
          v156 = v488;
          v303 = v489;
          for (j = v301; ; v301 = j)
          {
            v526 = (uint64_t)v302;
            v304 = v301(v507, v300);
            REMRemindersListDataView.CompletedDateBucketsModel.Day.date.getter(v304);
            v305 = v541;
            v306 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v541 + 56);
            v306(v156, 0, 1, v14);
            if (!*(_QWORD *)(v298 + 16))
              break;
            v307 = v532;
            v308 = ((uint64_t (*)(char *, char *, uint64_t))v301)(v532, v511, v152);
            REMRemindersListDataView.CompletedDateBucketsModel.Day.date.getter(v308);
            v309 = *(void (**)(char *, uint64_t))(v539 + 8);
            v309(v307, v152);
            v306(v303, 0, 1, v14);
            v310 = v487;
            v311 = v487 + *(int *)(v533 + 48);
            sub_10000735C(v156, v487, (uint64_t *)&unk_100653A90);
            sub_10000735C(v303, v311, (uint64_t *)&unk_100653A90);
            v312 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v305 + 48);
            v313 = v310;
            if (v312(v310, 1, v14) == 1)
            {
              sub_1000073A0(v303, (uint64_t *)&unk_100653A90);
              sub_1000073A0(v156, (uint64_t *)&unk_100653A90);
              v314 = v312(v311, 1, v14);
              if (v314 == 1)
                v315 = (uint64_t *)&unk_100653A90;
              else
                v315 = &qword_10063F000;
              if (v314 == 1)
                v316 = -1;
              else
                v316 = 0;
            }
            else
            {
              v317 = v310;
              v318 = v469;
              sub_10000735C(v317, v469, (uint64_t *)&unk_100653A90);
              if (v312(v311, 1, v14) == 1)
              {
                sub_1000073A0(v489, (uint64_t *)&unk_100653A90);
                sub_1000073A0(v488, (uint64_t *)&unk_100653A90);
                (*(void (**)(uint64_t, uint64_t))(v541 + 8))(v318, v14);
                v316 = 0;
                v315 = &qword_10063F000;
              }
              else
              {
                v319 = v504;
                v463(v504, (char *)v311, v14);
                v320 = sub_10003E370();
                v316 = dispatch thunk of static Equatable.== infix(_:_:)(v318, v319, v14, v320);
                v321 = *(void (**)(char *, uint64_t))(v541 + 8);
                v322 = v319;
                v313 = v487;
                v321(v322, v14);
                sub_1000073A0(v489, (uint64_t *)&unk_100653A90);
                sub_1000073A0(v488, (uint64_t *)&unk_100653A90);
                v321((char *)v318, v14);
                v315 = (uint64_t *)&unk_100653A90;
              }
            }
            v324 = (uint64_t)v483;
            v323 = (uint64_t)v484;
            v325 = sub_1000073A0(v313, v315);
            v326 = v502;
            v327 = v507;
            REMRemindersListDataView.CompletedDateBucketsModel.Day.date.getter(v325);
            TTRShowCompletedSectionHeaderTitleFormatter.title(for:)(v584, v327);
            v547 = v584[4];
            v548 = v584[5];
            v549[0] = v585[0];
            *(_OWORD *)((char *)v549 + 10) = *(_OWORD *)((char *)v585 + 10);
            v543 = v584[0];
            v544 = v584[1];
            v545 = v584[2];
            v546 = v584[3];
            v328 = v497;
            ((void (*)(uint64_t, char *, uint64_t))v520)(v497, v326, v14);
            swift_storeEnumTagMultiPayload(v328, v537, 4);
            v329 = v328;
            v330 = v536;
            sub_10002B1E8(v329, (uint64_t)v536, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
            v554 = v547;
            v555 = v548;
            v556[0] = v549[0];
            *(_OWORD *)((char *)v556 + 10) = *(_OWORD *)((char *)v549 + 10);
            v550 = v543;
            v551 = v544;
            v552 = v545;
            v553 = v546;
            TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v550);
            sub_10003E0EC((uint64_t)&v550, (uint64_t)v595);
            v331 = v495;
            TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v330, v595, (v316 & 1) == 0, 0, 0, 0, 0, 0);
            sub_10002B1E8(v331, v324, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
            v332 = sub_10003E134((uint64_t)v584);
            v333 = REMRemindersListDataView.CompletedDateBucketsModel.Day.reminders.getter(v332);
            v334 = v538;
            *(_QWORD *)(v324 + *(int *)(v538 + 20)) = v333;
            *(_BYTE *)(v324 + *(int *)(v334 + 24)) = 0;
            sub_10002B1E8(v324, v323, type metadata accessor for TTRRemindersListTreeViewModel.Section);
            swift_beginAccess(&v571, v542, 33, 0);
            v335 = (unint64_t)v571;
            v336 = swift_isUniquelyReferenced_nonNull_native(v571);
            v152 = v535;
            if ((v336 & 1) == 0)
              v335 = sub_100455348(0, *(_QWORD *)(v335 + 16) + 1, 1, v335);
            v337 = v527;
            v339 = *(_QWORD *)(v335 + 16);
            v338 = *(_QWORD *)(v335 + 24);
            if (v339 >= v338 >> 1)
              v335 = sub_100455348(v338 > 1, v339 + 1, 1, v335);
            *(_QWORD *)(v335 + 16) = v339 + 1;
            sub_10001F580(v323, v335 + v519 + v339 * v518, type metadata accessor for TTRRemindersListTreeViewModel.Section);
            v571 = (_QWORD *)v335;
            swift_endAccess(v542);
            sub_10003E230((uint64_t)v584);
            sub_10001F544(v324, type metadata accessor for TTRRemindersListTreeViewModel.Section);
            sub_10001F544(v495, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
            sub_10001F544(v497, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
            v181 = v541;
            (*(void (**)(char *, uint64_t))(v541 + 8))(v502, v14);
            v309(v507, v152);
            if (!v337)
            {
              v411 = v521;
              swift_bridgeObjectRelease(v521);
              sub_10003E230((uint64_t)v582);
              swift_bridgeObjectRelease(v411);
              v412 = v449;
              v151 = v525;
              goto LABEL_131;
            }
            v527 = v337 - 1;
            v302 = (char *)i + v526;
            v156 = v488;
            v303 = v489;
            v298 = v521;
          }
          goto LABEL_139;
        }
        sub_10003E230((uint64_t)v582);
        swift_bridgeObjectRelease(v521);
        v412 = v449;
LABEL_131:
        sub_10001F544(v447, type metadata accessor for TTRRemindersListTreeViewModel.Section);
        sub_10001F544(v445, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        (*(void (**)(char *, uint64_t))(v181 + 8))(v412, v14);
        goto LABEL_18;
      }
      v342 = v491;
      if (v163 != v433)
        goto LABEL_142;
      (*(void (**)(char *, uint64_t))(v162 + 96))(v491, v156);
      v520 = *(_QWORD *)&v342[*(int *)(sub_10002A750(&qword_10063F010) + 48)];
      (*(void (**)(char *, char *, uint64_t))(v450 + 32))(v458, v342, v451);
      if (qword_10063D2A0 != -1)
        swift_once(&qword_10063D2A0, sub_100039D1C);
      v343 = TTRShowCompletedSectionHeaderTitleFormatter.title(for:isFirst:)(v586, v505, v155 & 1);
      v561 = v586[4];
      v562 = v586[5];
      v563[0] = v587[0];
      *(_OWORD *)((char *)v563 + 10) = *(_OWORD *)((char *)v587 + 10);
      v557 = v586[0];
      v558 = v586[1];
      v559 = v586[2];
      v560 = v586[3];
      v344 = v440;
      static Calendar.current.getter(v343);
      v345 = sub_10002A750(&qword_10063F018);
      v346 = type metadata accessor for Calendar.Component(0);
      v347 = *(_QWORD *)(v346 - 8);
      v348 = *(_QWORD *)(v347 + 72);
      v349 = *(unsigned __int8 *)(v347 + 80);
      v350 = (v349 + 32) & ~v349;
      v351 = swift_allocObject(v345, v350 + 2 * v348, v349 | 7);
      *(_OWORD *)(v351 + 16) = v430;
      v352 = v351 + v350;
      v353 = *(void (**)(uint64_t, _QWORD, uint64_t))(v347 + 104);
      v353(v352, v432, v346);
      v353(v352 + v348, v431, v346);
      v354 = sub_10048ECA4(v351);
      swift_setDeallocating(v351);
      swift_arrayDestroy(v352, 2, v346);
      v355 = swift_deallocClassInstance(v351, 32, 7);
      v356 = v504;
      REMRemindersListDataView.DateBucketsModel.RepresentativeDate.date.getter(v355);
      v357 = v452;
      Calendar.dateComponents(_:from:)(v354, v356);
      swift_bridgeObjectRelease(v354);
      v521 = *(_QWORD *)(v541 + 8);
      ((void (*)(char *, uint64_t))v521)(v356, v14);
      (*(void (**)(char *, uint64_t))(v441 + 8))(v344, v442);
      v358 = v439;
      (*(void (**)(char *, char *, uint64_t))(v453 + 16))(v439, v357, v454);
      v359 = TTRRemindersListViewModel.SectionID.EraAndYear.init(dateComponents:)(v358);
      v360 = v536;
      *(_QWORD *)v536 = v359;
      v360[8] = v361 & 1;
      *((_QWORD *)v360 + 2) = v362;
      v360[24] = v363 & 1;
      swift_storeEnumTagMultiPayload(v360, v537, 7);
      v568 = v561;
      v569 = v562;
      v570[0] = v563[0];
      *(_OWORD *)((char *)v570 + 10) = *(_OWORD *)((char *)v563 + 10);
      v564 = v557;
      v565 = v558;
      v566 = v559;
      v567 = v560;
      TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v564);
      sub_10003E0EC((uint64_t)&v564, (uint64_t)v598);
      v364 = v520;
      v365 = *(_QWORD *)(v520 + 16);
      v366 = v446;
      TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v360, v598, 1, v365 == 0, 0, 0, 0, 0);
      v367 = v448;
      sub_10002B1E8(v366, v448, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v368 = v538;
      *(_QWORD *)(v367 + *(int *)(v538 + 20)) = _swiftEmptyArrayStorage;
      *(_BYTE *)(v367 + *(int *)(v368 + 24)) = 0;
      sub_10002B1E8(v367, v456, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      swift_beginAccess(&v571, &v550, 33, 0);
      v369 = (unint64_t)v571;
      sub_10003E134((uint64_t)v586);
      if ((swift_isUniquelyReferenced_nonNull_native(v369) & 1) == 0)
        v369 = sub_100455348(0, *(_QWORD *)(v369 + 16) + 1, 1, v369);
      v370 = v492;
      v151 = v525;
      v152 = v535;
      v372 = *(_QWORD *)(v369 + 16);
      v371 = *(_QWORD *)(v369 + 24);
      if (v372 >= v371 >> 1)
        v369 = sub_100455348(v371 > 1, v372 + 1, 1, v369);
      *(_QWORD *)(v369 + 16) = v372 + 1;
      v519 = (*(unsigned __int8 *)(v475 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v475 + 80);
      v518 = *(_QWORD *)(v475 + 72);
      sub_10001F580(v456, v369 + v519 + v518 * v372, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      v571 = (_QWORD *)v369;
      swift_endAccess(&v550);
      if (v365)
      {
        v373 = v539;
        v374 = v364 + ((*(unsigned __int8 *)(v539 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v539 + 80));
        v375 = swift_bridgeObjectRetain(v364);
        j = *(uint64_t (**)(_QWORD, __n128))(v373 + 72);
        v511 = *(char **)(v373 + 16);
        v527 = v365 - 1;
        i = (uint64_t (*)(_QWORD, __n128))v374;
        v156 = v374;
        v376 = v490;
        v377 = v541;
        while (1)
        {
          v378 = (uint64_t (*)(char *, uint64_t (*)(_QWORD, __n128), uint64_t))v511;
          v379 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v511)(v508, v156, v152, v375);
          REMRemindersListDataView.CompletedDateBucketsModel.Day.date.getter(v379);
          v380 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v377 + 56);
          v380(v370, 0, 1, v14);
          if (!*(_QWORD *)(v520 + 16))
            goto LABEL_140;
          v526 = v156;
          v381 = v532;
          v382 = v378(v532, i, v152);
          REMRemindersListDataView.CompletedDateBucketsModel.Day.date.getter(v382);
          v383 = *(void (**)(char *, uint64_t))(v539 + 8);
          v383(v381, v152);
          v380(v376, 0, 1, v14);
          v384 = (uint64_t)v482;
          v385 = (uint64_t)&v482[*(int *)(v533 + 48)];
          sub_10000735C(v370, (uint64_t)v482, (uint64_t *)&unk_100653A90);
          sub_10000735C(v376, v385, (uint64_t *)&unk_100653A90);
          v386 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v377 + 48);
          v387 = v384;
          if (v386(v384, 1, v14) == 1)
          {
            sub_1000073A0(v376, (uint64_t *)&unk_100653A90);
            sub_1000073A0(v370, (uint64_t *)&unk_100653A90);
            v388 = v386(v385, 1, v14);
            if (v388 == 1)
              v389 = (uint64_t *)&unk_100653A90;
            else
              v389 = &qword_10063F000;
            if (v388 == 1)
              v390 = -1;
            else
              v390 = 0;
          }
          else
          {
            v391 = v470;
            sub_10000735C(v384, v470, (uint64_t *)&unk_100653A90);
            if (v386(v385, 1, v14) == 1)
            {
              sub_1000073A0(v490, (uint64_t *)&unk_100653A90);
              sub_1000073A0(v492, (uint64_t *)&unk_100653A90);
              ((void (*)(uint64_t, uint64_t))v521)(v391, v14);
              v390 = 0;
              v389 = &qword_10063F000;
            }
            else
            {
              v392 = v504;
              (*(void (**)(char *, uint64_t, uint64_t))(v541 + 32))(v504, v385, v14);
              v393 = sub_10003E370();
              v390 = dispatch thunk of static Equatable.== infix(_:_:)(v391, v392, v14, v393);
              v394 = (void (*)(uint64_t, uint64_t))v521;
              ((void (*)(char *, uint64_t))v521)(v392, v14);
              sub_1000073A0(v490, (uint64_t *)&unk_100653A90);
              sub_1000073A0(v492, (uint64_t *)&unk_100653A90);
              v394(v391, v14);
              v389 = (uint64_t *)&unk_100653A90;
            }
          }
          v395 = sub_1000073A0(v387, v389);
          v396 = v503;
          v397 = v508;
          REMRemindersListDataView.CompletedDateBucketsModel.Day.date.getter(v395);
          TTRShowCompletedSectionHeaderTitleFormatter.title(for:)(v588, v397);
          v547 = v588[4];
          v548 = v588[5];
          v549[0] = v589[0];
          *(_OWORD *)((char *)v549 + 10) = *(_OWORD *)((char *)v589 + 10);
          v543 = v588[0];
          v544 = v588[1];
          v545 = v588[2];
          v546 = v588[3];
          v398 = v498;
          (*(void (**)(uint64_t, char *, uint64_t))(v541 + 16))(v498, v396, v14);
          swift_storeEnumTagMultiPayload(v398, v537, 4);
          v399 = v398;
          v400 = v536;
          sub_10002B1E8(v399, (uint64_t)v536, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
          v554 = v547;
          v555 = v548;
          v556[0] = v549[0];
          *(_OWORD *)((char *)v556 + 10) = *(_OWORD *)((char *)v549 + 10);
          v550 = v543;
          v551 = v544;
          v552 = v545;
          v553 = v546;
          TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v550);
          sub_10003E0EC((uint64_t)&v550, (uint64_t)v597);
          v401 = v496;
          TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v400, v597, (v390 & 1) == 0, 0, 0, 0, 0, 0);
          v402 = v401;
          v403 = v499;
          sub_10002B1E8(v402, v499, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          v404 = sub_10003E134((uint64_t)v588);
          v405 = REMRemindersListDataView.CompletedDateBucketsModel.Day.reminders.getter(v404);
          v406 = v538;
          *(_QWORD *)(v403 + *(int *)(v538 + 20)) = v405;
          *(_BYTE *)(v403 + *(int *)(v406 + 24)) = 0;
          sub_10002B1E8(v403, v500, type metadata accessor for TTRRemindersListTreeViewModel.Section);
          swift_beginAccess(&v571, v542, 33, 0);
          v407 = (unint64_t)v571;
          v408 = swift_isUniquelyReferenced_nonNull_native(v571);
          v152 = v535;
          if ((v408 & 1) == 0)
            v407 = sub_100455348(0, *(_QWORD *)(v407 + 16) + 1, 1, v407);
          v370 = v492;
          v156 = v494;
          v410 = *(_QWORD *)(v407 + 16);
          v409 = *(_QWORD *)(v407 + 24);
          if (v410 >= v409 >> 1)
            v407 = sub_100455348(v409 > 1, v410 + 1, 1, v407);
          *(_QWORD *)(v407 + 16) = v410 + 1;
          sub_10001F580(v500, v407 + v519 + v410 * v518, type metadata accessor for TTRRemindersListTreeViewModel.Section);
          v571 = (_QWORD *)v407;
          swift_endAccess(v542);
          sub_10003E230((uint64_t)v588);
          sub_10001F544(v499, type metadata accessor for TTRRemindersListTreeViewModel.Section);
          sub_10001F544(v496, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          sub_10001F544(v498, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
          ((void (*)(char *, uint64_t))v521)(v503, v14);
          v383(v508, v152);
          if (!v527)
          {
            v413 = v520;
            swift_bridgeObjectRelease(v520);
            sub_10003E230((uint64_t)v586);
            swift_bridgeObjectRelease(v413);
            v414 = v458;
            v151 = v525;
            goto LABEL_133;
          }
          --v527;
          v156 = (uint64_t)j + v526;
          v377 = v541;
          v376 = v490;
        }
      }
      sub_10003E230((uint64_t)v586);
      swift_bridgeObjectRelease(v364);
      v414 = v458;
      v156 = v494;
LABEL_133:
      sub_10001F544(v448, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      sub_10001F544(v446, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      (*(void (**)(char *, uint64_t))(v453 + 8))(v452, v454);
      (*(void (**)(char *, uint64_t))(v450 + 8))(v414, v451);
      v154 = v506;
      (*(void (**)(char *, uint64_t))(v506 + 8))(v505, v156);
    }
LABEL_8:
    v155 = 0;
    v153 = v493 + 1;
    v150 = v471;
    if (v493 + 1 == v474)
      goto LABEL_134;
  }
  __break(1u);
LABEL_142:
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v156, v156);
  __break(1u);
  return result;
}

uint64_t sub_10003D318(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  swift_retain(v4);
  v5 = sub_10003D3F0(a1, (uint64_t (*)(void *, uint64_t, uint64_t))sub_10003DE1C);
  swift_release(v4);
  v6 = v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (!Strong)
    return swift_bridgeObjectRelease(v5);
  v9 = Strong;
  v10 = *(_QWORD *)(v6 + 8);
  ObjectType = swift_getObjectType(Strong, v8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v5, ObjectType, v10);
  swift_bridgeObjectRelease(v5);
  return swift_unknownObjectRelease(v9);
}

_QWORD *sub_10003D3D8(uint64_t a1)
{
  return sub_10003D3F0(a1, (uint64_t (*)(void *, uint64_t, uint64_t))sub_10003D998);
}

_QWORD *sub_10003D3E4(uint64_t a1)
{
  return sub_10003D3F0(a1, (uint64_t (*)(void *, uint64_t, uint64_t))sub_10003DE1C);
}

_QWORD *sub_10003D3F0(uint64_t a1, uint64_t (*a2)(void *, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int64_t v14;
  _QWORD *result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;

  v5 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  v32 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v31 = (uint64_t)&v27 - v9;
  v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v29 = *(_QWORD *)(v10 - 8);
  v30 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain(v2);
  v13 = a2(&_swiftEmptySetSingleton, a1, v2);
  swift_release(v2);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v33 = _swiftEmptyArrayStorage;
    sub_1003D7F78(0, v14, 0);
    result = (_QWORD *)sub_10002CD20(v13);
    v16 = (uint64_t)result;
    v18 = v17;
    v20 = v19 & 1;
    v28 = v13 + 56;
    while ((v20 & 1) == 0)
    {
      if (v16 < 0 || v16 >= 1 << *(_BYTE *)(v13 + 32))
      {
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
        break;
      }
      if (((*(_QWORD *)(v28 + (((unint64_t)v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
        goto LABEL_17;
      if (*(_DWORD *)(v13 + 36) != (_DWORD)v18)
        goto LABEL_18;
      v21 = v31;
      sub_10002B1E8(*(_QWORD *)(v13 + 48) + *(_QWORD *)(v32 + 72) * v16, v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      sub_10001F580(v21, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      sub_10002B1E8((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      swift_storeEnumTagMultiPayload(v12, v30, 2);
      sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      v22 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native(v33) & 1) == 0)
      {
        sub_1003D7F78(0, v22[2] + 1, 1);
        v22 = v33;
      }
      v24 = v22[2];
      v23 = v22[3];
      if (v24 >= v23 >> 1)
      {
        sub_1003D7F78(v23 > 1, v24 + 1, 1);
        v22 = v33;
      }
      v22[2] = v24 + 1;
      sub_10001F580((uint64_t)v12, (uint64_t)v22+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(_QWORD *)(v29 + 72) * v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      result = (_QWORD *)sub_10048B2BC(v16, v18, 0, v13);
      v16 = (uint64_t)result;
      v18 = v25;
      v20 = v26 & 1;
      if (!--v14)
      {
        sub_10003E0E0((uint64_t)result, v25, v20);
        swift_bridgeObjectRelease(v13);
        return v22;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease(v13);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_10003D6CC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  _QWORD *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;

  v36 = a3;
  v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  v35 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v32 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v34 = (uint64_t)&v28 - v9;
  v10 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  v33 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v37 = (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = _swiftEmptyArrayStorage;
  if (!v12)
    return (uint64_t)v13;
  v28 = v3;
  v38 = _swiftEmptyArrayStorage;
  sub_1003D7F04(0, v12, 0);
  result = sub_10002CD20(a1);
  v15 = result;
  v17 = v16;
  v19 = v18 & 1;
  v30 = a2 + 5;
  v31 = a1 + 56;
  v29 = a2;
  v20 = (uint64_t)v32;
  while ((v19 & 1) == 0)
  {
    if (v15 < 0 || v15 >= 1 << *(_BYTE *)(a1 + 32))
    {
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
      break;
    }
    if (((*(_QWORD *)(v31 + (((unint64_t)v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
      goto LABEL_16;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v17)
      goto LABEL_17;
    v21 = v34;
    sub_10002B1E8(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v35 + 72) * v15, v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_10001F580(v21, v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v22 = a2[8];
    v23 = a2[9];
    sub_10001413C(v30, v22);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8))(v36, v20, v22, v23);
    sub_10001F544(v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v13 = v38;
    if ((swift_isUniquelyReferenced_nonNull_native(v38) & 1) == 0)
    {
      sub_1003D7F04(0, v13[2] + 1, 1);
      v13 = v38;
    }
    v25 = v13[2];
    v24 = v13[3];
    if (v25 >= v24 >> 1)
    {
      sub_1003D7F04(v24 > 1, v25 + 1, 1);
      v13 = v38;
    }
    v13[2] = v25 + 1;
    sub_10001F580(v37, (uint64_t)v13+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(_QWORD *)(v33 + 72) * v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    result = sub_10048B2BC(v15, v17, 0, a1);
    v15 = result;
    v17 = v26;
    v19 = v27 & 1;
    --v12;
    a2 = v29;
    if (!v12)
    {
      sub_10003E0E0(result, v26, v19);
      return (uint64_t)v13;
    }
  }
  __break(1u);
  return result;
}

void sub_10003D998(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  id v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  _QWORD v47[2];
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  unint64_t v57;
  int64_t v58;
  uint64_t v59;
  _QWORD v60[3];
  _QWORD v61[8];

  v48 = a3;
  v5 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  v53 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)v47 - v9;
  v61[7] = a1;
  if ((a2 & 0xC000000000000001) != 0)
  {
    if (a2 < 0)
      v11 = a2;
    else
      v11 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v12 = __CocoaSet.makeIterator()(v11);
    v13 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
    v14 = sub_10003E3B8();
    v15 = Set.Iterator.init(_cocoa:)(v61, v12, v13, v14);
    a2 = v61[0];
    v52 = v61[1];
    v16 = v61[2];
    v17 = v61[3];
    v18 = v61[4];
  }
  else
  {
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = *(_QWORD *)(a2 + 56);
    v52 = a2 + 56;
    v16 = ~v19;
    v21 = -v19;
    if (v21 < 64)
      v22 = ~(-1 << v21);
    else
      v22 = -1;
    v18 = v22 & v20;
    swift_bridgeObjectRetain(a2);
    v17 = 0;
  }
  v50 = a2 & 0x7FFFFFFFFFFFFFFFLL;
  v47[1] = v16;
  v51 = (unint64_t)(v16 + 64) >> 6;
  v56 = v48 + 12;
  v49 = (char *)&type metadata for Swift.AnyObject + 8;
  v54 = a2;
  if ((a2 & 0x8000000000000000) == 0)
    goto LABEL_14;
LABEL_11:
  v23 = __CocoaSet.Iterator.next()(v15);
  if (!v23)
    goto LABEL_45;
  v24 = v23;
  v59 = v23;
  v25 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  swift_unknownObjectRetain(v24);
  swift_dynamicCast(v60, &v59, v49, v25, 7);
  v26 = (id)v60[0];
  swift_unknownObjectRelease(v24);
  v27 = v17;
  v28 = v18;
  if (!v26)
    goto LABEL_45;
  while (1)
  {
    v58 = v27;
    v32 = v56;
    swift_beginAccess(v56, v60, 32, 0);
    v33 = *v32;
    v34 = *(_QWORD *)(*v32 + 16);
    v57 = v28;
    if (v34)
    {
      v35 = v26;
      v36 = sub_1002AA364((uint64_t)v35);
      if ((v37 & 1) != 0)
      {
        v38 = *(_QWORD *)(*(_QWORD *)(v33 + 56) + 8 * v36);
        swift_endAccess(v60);
        swift_bridgeObjectRetain(v38);

        v39 = v35;
        v40 = v48;
        swift_retain();
        v41 = v55;
        v42 = (_QWORD *)sub_10003D6CC(v38, v40, (uint64_t)v39);
        v55 = v41;
        swift_bridgeObjectRelease(v38);
        swift_release();

        v43 = v42[2];
        if (!v43)
          goto LABEL_31;
        goto LABEL_35;
      }

    }
    swift_endAccess(v60);
    v42 = _swiftEmptyArrayStorage;
    v43 = _swiftEmptyArrayStorage[2];
    if (!v43)
    {
LABEL_31:

      v15 = (_QWORD *)swift_bridgeObjectRelease(v42);
      v18 = v57;
      v17 = v58;
      if (a2 < 0)
        goto LABEL_11;
      goto LABEL_14;
    }
LABEL_35:
    v44 = (uint64_t)v42 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
    v45 = *(_QWORD *)(v53 + 72);
    do
    {
      sub_10002B1E8(v44, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      sub_1004810FC((uint64_t)v10, (uint64_t)v8);
      sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      v44 += v45;
      --v43;
    }
    while (v43);

    v15 = (_QWORD *)swift_bridgeObjectRelease(v42);
    v18 = v57;
    v17 = v58;
    a2 = v54;
    if (v54 < 0)
      goto LABEL_11;
LABEL_14:
    if (!v18)
      break;
    v28 = (v18 - 1) & v18;
    v29 = __clz(__rbit64(v18)) | (v17 << 6);
    v27 = v17;
LABEL_27:
    v26 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v29);
    if (!v26)
      goto LABEL_45;
  }
  v27 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
    return;
  }
  if (v27 >= v51)
    goto LABEL_45;
  v30 = *(_QWORD *)(v52 + 8 * v27);
  if (v30)
    goto LABEL_26;
  v31 = v17 + 2;
  if (v17 + 2 >= v51)
    goto LABEL_45;
  v30 = *(_QWORD *)(v52 + 8 * v31);
  if (v30)
    goto LABEL_25;
  v31 = v17 + 3;
  if (v17 + 3 >= v51)
    goto LABEL_45;
  v30 = *(_QWORD *)(v52 + 8 * v31);
  if (v30)
    goto LABEL_25;
  v31 = v17 + 4;
  if (v17 + 4 >= v51)
    goto LABEL_45;
  v30 = *(_QWORD *)(v52 + 8 * v31);
  if (v30)
  {
LABEL_25:
    v27 = v31;
LABEL_26:
    v28 = (v30 - 1) & v30;
    v29 = __clz(__rbit64(v30)) + (v27 << 6);
    goto LABEL_27;
  }
  v27 = v17 + 5;
  if (v17 + 5 >= v51)
    goto LABEL_45;
  v30 = *(_QWORD *)(v52 + 8 * v27);
  if (v30)
    goto LABEL_26;
  v46 = v17 + 6;
  while (v51 != v46)
  {
    v30 = *(_QWORD *)(v52 + 8 * v46++);
    if (v30)
    {
      v27 = v46 - 1;
      goto LABEL_26;
    }
  }
LABEL_45:
  sub_10003E410(a2);
}

void *sub_10003DE1C(void *a1, uint64_t a2, _QWORD *a3)
{
  void **v3;
  void **v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  void ***v18;
  void *v19;
  id v20;
  unint64_t v21;
  char v22;
  id v23;
  _QWORD *v24;
  void **v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void **v37;
  uint64_t v38;
  void ***v39;
  unint64_t v40;
  id v41;
  _BYTE v42[24];
  void *v43;

  v4 = v3;
  v33 = a3;
  v7 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  v36 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v32 - v11;
  v43 = a1;
  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v13 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  while (v13)
  {
    v37 = v4;
    v14 = 0;
    v39 = (void ***)(v33 + 12);
    v40 = a2 & 0xC000000000000001;
    v34 = a2 + 32;
    a1 = &type metadata accessor for TTRRemindersListViewModel.ReminderID;
    v38 = v13;
    v35 = a2;
    while (1)
    {
      v15 = v40 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, a2) : *(id *)(v34 + 8 * v14);
      v16 = v15;
      if (__OFADD__(v14++, 1))
        break;
      v18 = v39;
      swift_beginAccess(v39, v42, 32, 0);
      v4 = *v18;
      v19 = v4[2];
      v41 = v16;
      if (!v19)
        goto LABEL_14;
      v20 = v16;
      v21 = sub_1002AA364((uint64_t)v20);
      if ((v22 & 1) != 0)
      {
        v4 = (void **)*((_QWORD *)v4[7] + v21);
        swift_endAccess(v42);
        swift_bridgeObjectRetain(v4);

        v23 = v20;
        v24 = v33;
        swift_retain(v33);
        v25 = v37;
        v26 = (_QWORD *)sub_10003D6CC((uint64_t)v4, v24, (uint64_t)v23);
        v37 = v25;
        swift_bridgeObjectRelease(v4);
        swift_release(v24);

        v13 = v38;
        v27 = v26[2];
        if (!v27)
          goto LABEL_4;
LABEL_15:
        v28 = (uint64_t)v26
            + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
        v29 = *(_QWORD *)(v36 + 72);
        do
        {
          sub_10002B1E8(v28, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
          v4 = &v43;
          sub_1004810FC((uint64_t)v12, (uint64_t)v10);
          sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
          v28 += v29;
          --v27;
        }
        while (v27);

        swift_bridgeObjectRelease(v26);
        a2 = v35;
        v13 = v38;
        if (v14 == v38)
        {
LABEL_18:
          swift_bridgeObjectRelease(a2);
          return v43;
        }
      }
      else
      {

LABEL_14:
        swift_endAccess(v42);
        v26 = _swiftEmptyArrayStorage;
        v27 = _swiftEmptyArrayStorage[2];
        if (v27)
          goto LABEL_15;
LABEL_4:

        swift_bridgeObjectRelease(v26);
        if (v14 == v13)
          goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    if (a2 < 0)
      v30 = a2;
    else
      v30 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v13 = _CocoaArrayWrapper.endIndex.getter(v30);
  }
  swift_bridgeObjectRelease(a2);
  return a1;
}

uint64_t sub_10003E0E0(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t sub_10003E0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100649B60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003E134(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;

  v2 = *(void **)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 88);
  v15 = *(_QWORD *)(a1 + 80);
  v16 = *(void **)(a1 + 72);
  v13 = *(_QWORD *)(a1 + 104);
  v14 = *(_QWORD *)(a1 + 96);
  v12 = *(_QWORD *)(a1 + 112);
  v9 = *(_BYTE *)(a1 + 64);
  v10 = *(_BYTE *)(a1 + 120);
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
  sub_10003E1F0(v2, v3, v4, v5, v6, v7, v9);
  sub_10003E218(v16, v15, v8, v14, v13, v12, v10);
  return a1;
}

id sub_10003E1F0(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 >> 6 == 2)
    return (id)swift_bridgeObjectRetain(a2);
  if (!(a7 >> 6))
    return sub_10002B764(result, a2, a3, a4, a5, a6, a7 & 1);
  return result;
}

id sub_10003E218(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 != 255)
    return sub_10002B764(result, a2, a3, a4, a5, a6, a7 & 1);
  return result;
}

uint64_t sub_10003E230(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;

  v2 = *(void **)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 88);
  v15 = *(_QWORD *)(a1 + 80);
  v16 = *(void **)(a1 + 72);
  v13 = *(_QWORD *)(a1 + 104);
  v14 = *(_QWORD *)(a1 + 96);
  v12 = *(_QWORD *)(a1 + 112);
  v9 = *(_BYTE *)(a1 + 64);
  v10 = *(_BYTE *)(a1 + 120);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  sub_10003E2EC(v2, v3, v4, v5, v6, v7, v9);
  sub_10003E314(v16, v15, v8, v14, v13, v12, v10);
  return a1;
}

void sub_10003E2EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 >> 6 == 2)
  {
    swift_bridgeObjectRelease(a2);
  }
  else if (!(a7 >> 6))
  {
    sub_10002B328(a1, a2, a3, a4, a5, a6, a7 & 1);
  }
}

void sub_10003E314(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 != 255)
    sub_10002B328(a1, a2, a3, a4, a5, a6, a7 & 1);
}

uint64_t sub_10003E32C()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  sub_100027F10(v0 + 3);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10003E360()
{
  uint64_t v0;

  return sub_10047C484(*(_QWORD *)(v0 + 16), v0 + 24, *(_QWORD *)(v0 + 64));
}

unint64_t sub_10003E370()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10063F020;
  if (!qword_10063F020)
  {
    v1 = type metadata accessor for Date(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Date, v1);
    atomic_store(result, (unint64_t *)&qword_10063F020);
  }
  return result;
}

unint64_t sub_10003E3B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10063F030;
  if (!qword_10063F030)
  {
    v1 = sub_100005ED8(255, qword_100646430, REMObjectID_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_10063F030);
  }
  return result;
}

uint64_t sub_10003E410(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

uint64_t sub_10003E418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10063F040);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10063F040);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10003E4A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  Swift::Bool v6;
  uint64_t v7;
  uint64_t v8;
  char v9[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    Strong = swift_unknownObjectWeakLoadStrong(result + 16);
    if (Strong)
    {
      v5 = Strong;
      v6 = (*(_QWORD *)(*(_QWORD *)(v3
                                  + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_activityTracker)
                      + 16) & 3) != 0;
      v7 = *(_QWORD *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter)
                     + 88);
      swift_retain(v7);
      TTRRemindersBoardCellPresentationStatesPresenterCapability.requestHandleDragAndDropActiveStateChange(_:)(v6);
      swift_release(v3);
      swift_unknownObjectRelease(v5);
      v8 = v7;
    }
    else
    {
      v8 = v3;
    }
    return swift_release(v8);
  }
  return result;
}

uint64_t sub_10003E564(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD v9[2];
  _QWORD v10[5];
  __int128 v11;
  __int128 v12;

  v2 = sub_10002A750((uint64_t *)&unk_100654F20);
  __chkstk_darwin(v2);
  v4 = (char *)&v9[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(a1, (uint64_t)v4, (uint64_t *)&unk_100654F20);
  v5 = type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    sub_1000073A0((uint64_t)v4, (uint64_t *)&unk_100654F20);
    v11 = 0u;
    v12 = 0u;
  }
  else
  {
    *((_QWORD *)&v12 + 1) = v5;
    v6 = sub_100028D70(&v11);
    sub_10001F580((uint64_t)v4, (uint64_t)v6, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
  }
  v9[0] = 0xD000000000000022;
  v9[1] = 0x800000010055F610;
  AnyHashable.init<A>(_:)(v10, v9, &type metadata for String, &protocol witness table for String);
  UIDragItem.setLocalObject(_:forKey:)(&v11, v10);
  sub_100041DDC((uint64_t)v10);
  return sub_1000073A0((uint64_t)&v11, &qword_100640E50);
}

uint64_t sub_10003E6A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  uint64_t v15;
  _QWORD v18[2];
  _QWORD v19[5];

  v4 = type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v18[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750((uint64_t *)&unk_100654F20);
  __chkstk_darwin(v8);
  v10 = (char *)&v18[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (_QWORD *)((char *)&v18[-1] - v12);
  v18[0] = 0xD000000000000022;
  v18[1] = 0x800000010055F610;
  AnyHashable.init<A>(_:)(v19, v18, &type metadata for String, &protocol witness table for String);
  UIDragItem.localObject<A>(ofType:forKey:)(v13, v4, v19, v4);
  sub_100041DDC((uint64_t)v19);
  sub_10000735C((uint64_t)v13, (uint64_t)v10, (uint64_t *)&unk_100654F20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_1000073A0((uint64_t)v13, (uint64_t *)&unk_100654F20);
    sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100654F20);
LABEL_6:
    v15 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v15, 1, v4);
  }
  sub_10001F580((uint64_t)v10, (uint64_t)v7, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
  v14 = static UUID.== infix(_:_:)(v7, a1);
  sub_1000073A0((uint64_t)v13, (uint64_t *)&unk_100654F20);
  if ((v14 & 1) == 0)
  {
    sub_10001F544((uint64_t)v7, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
    goto LABEL_6;
  }
  sub_10001F580((uint64_t)v7, a2, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
  v15 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v15, 1, v4);
}

void sub_10003E898(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int EnumCaseMultiPayload;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  void (*v113)(char *, uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  BOOL v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void (*v147)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  void (*v155)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t Strong;
  uint64_t v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t *v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char v245[8];
  char v246[8];

  v6 = v5;
  v240 = a4;
  v225 = a3;
  v244 = a1;
  v229 = a5;
  v8 = sub_10002A750((uint64_t *)&unk_100654F40);
  __chkstk_darwin(v8);
  v197 = (char *)&v192 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_10063F180);
  __chkstk_darwin(v10);
  v202 = (uint64_t)&v192 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v201 = sub_10002A750(&qword_10063F188);
  v200 = *(_QWORD *)(v201 - 8);
  __chkstk_darwin(v201);
  v196 = (uint64_t)&v192 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750((uint64_t *)&unk_100644950);
  __chkstk_darwin(v13);
  v218 = (uint64_t)&v192 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TTRICollectionViewEmptySpaceType(0);
  __chkstk_darwin(v15);
  v215 = (uint64_t)&v192 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v217 = (uint64_t)&v192 - v18;
  v19 = type metadata accessor for TTRAdjustedIndexPath(0);
  __chkstk_darwin(v19);
  v205 = (uint64_t)&v192 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v216 = (char *)&v192 - v22;
  v23 = type metadata accessor for TTRICollectionViewGapHit(0);
  __chkstk_darwin(v23);
  v223 = (uint64_t)&v192 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10002A750(&qword_10063F190);
  __chkstk_darwin(v25);
  v204 = (uint64_t)&v192 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v207 = (uint64_t)&v192 - v28;
  __chkstk_darwin(v29);
  v210 = (uint64_t)&v192 - v30;
  __chkstk_darwin(v31);
  v213 = (char *)&v192 - v32;
  v241 = type metadata accessor for TTRIRemindersBoardDropProposal(0);
  v224 = *(_QWORD *)(v241 - 8);
  __chkstk_darwin(v241);
  v203 = (uint64_t *)((char *)&v192 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v34);
  v211 = (uint64_t *)((char *)&v192 - v35);
  __chkstk_darwin(v36);
  v209 = (uint64_t)&v192 - v37;
  v228 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
  v219 = *(_QWORD *)(v228 - 8);
  __chkstk_darwin(v228);
  v206 = (uint64_t)&v192 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v222 = (uint64_t)&v192 - v40;
  __chkstk_darwin(v41);
  v208 = (char *)&v192 - v42;
  v195 = type metadata accessor for TTRUnadjustedIndexPath(0);
  v194 = *(_QWORD *)(v195 - 8);
  __chkstk_darwin(v195);
  v199 = (uint64_t)&v192 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v193 = (uint64_t)&v192 - v45;
  __chkstk_darwin(v46);
  v214 = (uint64_t)&v192 - v47;
  __chkstk_darwin(v48);
  v221 = (uint64_t)&v192 - v49;
  v242 = type metadata accessor for IndexPath(0);
  v233 = *(_QWORD *)(v242 - 8);
  __chkstk_darwin(v242);
  v231 = (char *)&v192 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  v232 = (char *)&v192 - v52;
  v212 = type metadata accessor for TTRICollectionViewItemHit(0);
  __chkstk_darwin(v212);
  v220 = (uint64_t)&v192 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_10002A750((uint64_t *)&unk_1006645D0);
  __chkstk_darwin(v54);
  v239 = (uint64_t)&v192 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56);
  v58 = (char *)&v192 - v57;
  v59 = type metadata accessor for TTRICollectionViewHitTestResult(0);
  v237 = *(_QWORD *)(v59 - 8);
  v238 = v59;
  __chkstk_darwin(v59);
  v236 = (char *)&v192 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v61);
  v63 = (char *)&v192 - v62;
  v64 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v64);
  v66 = (char *)&v192 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = *(void **)(v244 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_session);
  swift_getObjectType(v67, v68);
  v227 = v6;
  v69 = sub_10004181C(v67, v6);
  v70 = sub_1002EC590(v69);
  swift_bridgeObjectRelease(v69);
  v71 = a2 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_columnID;
  swift_beginAccess(a2 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_columnID, v246, 0, 0);
  v198 = v71;
  sub_10002B1E8(v71, (uint64_t)v66, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  swift_unknownObjectRetain(v67);
  v72 = sub_1004CC8AC((uint64_t)v66, (uint64_t)v67, (uint64_t)v70);
  v74 = v73;
  v76 = v75;
  v78 = v77;
  v79 = v70;
  v80 = (uint64_t)v63;
  swift_bridgeObjectRelease(v79);
  swift_unknownObjectRelease(v67);
  v81 = (uint64_t)v66;
  sub_10001F544((uint64_t)v66, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v230 = v72;
  v243 = v74;
  v234 = v78;
  v235 = v76;
  v82 = v76;
  v83 = (uint64_t)v236;
  v226 = a2;
  sub_1002EE9B4(v67, v74, v82, v78, v240, v80);
  v84 = v244;
  v85 = *(_QWORD *)(v244 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_debugInfo);
  sub_10002B1E8(v80, (uint64_t)v58, type metadata accessor for TTRICollectionViewHitTestResult);
  v86 = v238;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v237 + 56))(v58, 0, 1, v238);
  v87 = (uint64_t)v58;
  v88 = v239;
  sub_10000F614(v87, v239, (uint64_t *)&unk_1006645D0);
  v89 = v85 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastHitTestResult;
  swift_beginAccess(v89, v245, 33, 0);
  sub_100041F2C(v88, v89, (uint64_t *)&unk_1006645D0);
  swift_endAccess(v245);
  v240 = v80;
  sub_10002B1E8(v80, v83, type metadata accessor for TTRICollectionViewHitTestResult);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v83, v86);
  if (!EnumCaseMultiPayload)
  {
    v109 = v212;
    v110 = v213;
    v111 = v220;
    sub_10001F580(v83, v220, type metadata accessor for TTRICollectionViewItemHit);
    v112 = v232;
    v113 = *(void (**)(char *, uint64_t, uint64_t))(v233 + 16);
    v114 = v111;
    v115 = v111;
    v116 = v242;
    v113(v232, v115, v242);
    v117 = v231;
    v113(v231, (uint64_t)v112, v116);
    TTRUnadjustedIndexPath.init(_:)(v117);
    v118 = *(_QWORD *)(v243 + 16);
    v120 = v234;
    v119 = v235;
    v121 = *(_QWORD *)(v235 + 16);
    if ((unint64_t)v234 >> 62)
    {
      if (v234 < 0)
        v191 = v234;
      else
        v191 = v234 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v234);
      v122 = _CocoaArrayWrapper.endIndex.getter(v191);
      swift_bridgeObjectRelease(v120);
    }
    else
    {
      v122 = *(_QWORD *)((v234 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v123 = v121 + v122;
    if (__OFADD__(v121, v122))
    {
      __break(1u);
    }
    else
    {
      v124 = (uint64_t)v110;
      v125 = v242;
      if (!v118)
        goto LABEL_11;
      v126 = __OFADD__(v118, v123);
      v127 = v118 + v123;
      if (!v126)
      {
        if (v127 != 1)
        {
          v151 = *(unsigned __int8 *)(v114 + *(int *)(v109 + 20));
          v152 = v231;
          v113(v231, (uint64_t)v232, v242);
          v130 = (uint64_t)v208;
          TTRUnadjustedIndexPath.init(_:)(v152);
          if (v151)
            v131 = 2;
          else
            v131 = 1;
          goto LABEL_22;
        }
LABEL_11:
        v128 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
        v129 = v231;
        v113(v231, v114 + *(int *)(v128 + 20), v125);
        v130 = (uint64_t)v208;
        TTRAdjustedIndexPath.init(_:)(v129);
        v131 = 0;
LABEL_22:
        v153 = v228;
        swift_storeEnumTagMultiPayload(v130, v228, v131);
        v154 = v221;
        sub_10002B1E8(v221, v124, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
        swift_storeEnumTagMultiPayload(v124, v153, 1);
        v155 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v219 + 56);
        v155(v124, 0, 1, v153);
        v156 = v124;
        v157 = v210;
        sub_10002B1E8(v154, v210, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
        swift_storeEnumTagMultiPayload(v157, v153, 2);
        v155(v157, 0, 1, v153);
        v158 = v209;
        v159 = v114;
        v160 = v230;
        v161 = v243;
        sub_10003FC84(v226, v225, v159, v230, v243, v119, v120, v154, v209, v156, v157, v130);
        swift_bridgeObjectRelease(v120);
        swift_bridgeObjectRelease(v119);
        swift_bridgeObjectRelease(v161);
        swift_unknownObjectRelease(v160);
        sub_1000073A0(v157, &qword_10063F190);
        sub_1000073A0(v156, &qword_10063F190);
        sub_10001F544(v130, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
        sub_10001F544(v154, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
        (*(void (**)(char *, uint64_t))(v233 + 8))(v232, v242);
        sub_10001F544(v220, type metadata accessor for TTRICollectionViewItemHit);
        sub_10001F544(v240, type metadata accessor for TTRICollectionViewHitTestResult);
        v144 = v229;
        sub_10001F580(v158, v229, type metadata accessor for TTRIRemindersBoardDropProposal);
        v147 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v224 + 56);
LABEL_23:
        v147(v144, 0, 1, v241);
        return;
      }
    }
    __break(1u);
    return;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v91 = v223;
    sub_10001F580(v83, v223, type metadata accessor for TTRICollectionViewGapHit);
    v92 = v91 + *(int *)(type metadata accessor for TTRICollectionViewHitIndexPaths(0) + 20);
    v93 = v231;
    (*(void (**)(char *, uint64_t, uint64_t))(v233 + 16))(v231, v92, v242);
    v94 = (uint64_t)v216;
    TTRAdjustedIndexPath.init(_:)(v93);
    v95 = v222;
    sub_10002B1E8(v94, v222, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath);
    swift_storeEnumTagMultiPayload(v95, v228, 0);
    v96 = v214;
    v97 = v230;
    v98 = v243;
    v100 = v234;
    v99 = v235;
    sub_1004CCC64(v95, v243, v214);
    v101 = sub_10004097C(v226, v225, v97, v98, v99, v100, v96);
    v102 = UIDropOperation.isCancelOrForbidden.getter(v101);
    v103 = v241;
    if ((v102 & 1) != 0)
    {
      sub_10001F544(v96, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
      v104 = v211;
      v105 = (char *)v211 + *(int *)(v103 + 24);
      v106 = type metadata accessor for TTRICollectionViewDropIntent(0);
      v107 = (uint64_t)v105;
      v108 = 2;
    }
    else
    {
      v140 = v205;
      sub_1004CCDD0(v222, v98, v205);
      sub_10001F544(v96, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
      v104 = v211;
      v141 = (uint64_t)v211 + *(int *)(v103 + 24);
      v142 = *(int *)(sub_10002A750(&qword_100664530) + 48);
      v143 = v140;
      v95 = v222;
      sub_10001F580(v143, v141, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath);
      *(_BYTE *)(v141 + v142) = 0;
      v106 = type metadata accessor for TTRICollectionViewDropIntent(0);
      v107 = v141;
      v108 = 0;
    }
    swift_storeEnumTagMultiPayload(v107, v106, v108);
    v144 = v229;
    v145 = v224;
    swift_unknownObjectRetain(v97);
    swift_bridgeObjectRetain(v98);
    swift_bridgeObjectRetain(v99);
    swift_bridgeObjectRetain(v100);
    *v104 = v97;
    v104[1] = v98;
    v104[2] = v99;
    v104[3] = v100;
    v104[4] = v101;
    swift_bridgeObjectRelease(v146);
    swift_bridgeObjectRelease(v99);
    swift_bridgeObjectRelease(v98);
    swift_unknownObjectRelease(v97);
    sub_10001F544(v95, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
    sub_10001F544(v94, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath);
    sub_10001F544(v223, type metadata accessor for TTRICollectionViewGapHit);
    sub_10001F544(v240, type metadata accessor for TTRICollectionViewHitTestResult);
    sub_10001F580((uint64_t)v104, v144, type metadata accessor for TTRIRemindersBoardDropProposal);
    v147 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v145 + 56);
    goto LABEL_23;
  }
  v132 = v217;
  sub_10001F580(v83, v217, type metadata accessor for TTRICollectionViewEmptySpaceType);
  v133 = v84 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal;
  swift_beginAccess(v133, v245, 0, 0);
  v134 = v218;
  sub_10000735C(v133, v218, (uint64_t *)&unk_100644950);
  v135 = v215;
  sub_10002B1E8(v132, v215, type metadata accessor for TTRICollectionViewEmptySpaceType);
  v136 = sub_10002A750((uint64_t *)&unk_100654F50);
  v137 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 48))(v135, 1, v136);
  v138 = v243;
  v139 = v235;
  if (v137 == 1)
  {
    swift_bridgeObjectRelease(v234);
    swift_bridgeObjectRelease(v139);
    swift_bridgeObjectRelease(v138);
    swift_unknownObjectRelease(v230);
    sub_10001F544(v132, type metadata accessor for TTRICollectionViewEmptySpaceType);
    sub_10001F544(v240, type metadata accessor for TTRICollectionViewHitTestResult);
LABEL_18:
    sub_10000F614(v134, v229, (uint64_t *)&unk_100644950);
    return;
  }
  v148 = v135;
  v149 = v207;
  sub_10000F614(v148, v207, &qword_10063F190);
  v150 = v204;
  sub_10000735C(v149, v204, &qword_10063F190);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v219 + 48))(v150, 1, v228) == 1)
  {
    swift_bridgeObjectRelease(v234);
    swift_bridgeObjectRelease(v139);
    swift_bridgeObjectRelease(v138);
    swift_unknownObjectRelease(v230);
    sub_1000073A0(v149, &qword_10063F190);
    sub_10001F544(v132, type metadata accessor for TTRICollectionViewEmptySpaceType);
    sub_10001F544(v240, type metadata accessor for TTRICollectionViewHitTestResult);
    sub_1000073A0(v150, &qword_10063F190);
    goto LABEL_18;
  }
  sub_10001F580(v150, v206, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
  Strong = swift_unknownObjectWeakLoadStrong(v227 + 16);
  if (!Strong)
  {
    v164 = v202;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v200 + 56))(v202, 1, 1, v201);
    v166 = v241;
    goto LABEL_29;
  }
  v163 = Strong;
  sub_10002B1E8(v198, v81, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v164 = v202;
  sub_1000A3B80(v81, v202);
  swift_unknownObjectRelease(v163);
  sub_10001F544(v81, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v165 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v200 + 48))(v164, 1, v201);
  v166 = v241;
  if (v165 == 1)
  {
LABEL_29:
    sub_1000073A0(v164, &qword_10063F180);
    v168 = v226;
    goto LABEL_30;
  }
  v167 = v196;
  sub_10000F614(v164, v196, &qword_10063F188);
  v168 = v226;
  v169 = (uint64_t)v197;
  TTRBoardColumnDiffableDataSource.indexPath(forInsertingAt:)(v167);
  sub_1000073A0(v167, &qword_10063F188);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v194 + 48))(v169, 1, v195) != 1)
  {
    v188 = v206;
    sub_10001F544(v206, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
    v189 = v169;
    v190 = v193;
    sub_10001F580(v189, v193, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
    v170 = v188;
    sub_10001F580(v190, v188, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
    swift_storeEnumTagMultiPayload(v188, v228, 1);
    goto LABEL_31;
  }
  sub_1000073A0(v169, (uint64_t *)&unk_100654F40);
LABEL_30:
  v170 = v206;
LABEL_31:
  v171 = v199;
  v172 = v230;
  v173 = v234;
  sub_1004CCC64(v170, v138, v199);
  v244 = sub_10004097C(v168, v225, v172, v138, v139, v173, v171);
  if ((UIDropOperation.isCancelOrForbidden.getter(v244) & 1) != 0)
  {
    sub_10001F544(v171, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
    v174 = *(int *)(v166 + 24);
    v175 = v203;
    v176 = (char *)v203 + v174;
    v177 = type metadata accessor for TTRICollectionViewDropIntent(0);
    v178 = (uint64_t)v176;
    v179 = 2;
  }
  else
  {
    v180 = v205;
    sub_1004CCDD0(v206, v138, v205);
    sub_10001F544(v171, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
    v181 = *(int *)(v166 + 24);
    v175 = v203;
    v182 = (uint64_t)v203 + v181;
    v183 = *(int *)(sub_10002A750(&qword_100664530) + 48);
    v184 = v180;
    v170 = v206;
    sub_10001F580(v184, v182, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath);
    *(_BYTE *)(v182 + v183) = 1;
    v177 = type metadata accessor for TTRICollectionViewDropIntent(0);
    v178 = v182;
    v179 = 0;
  }
  swift_storeEnumTagMultiPayload(v178, v177, v179);
  v185 = v229;
  v186 = v224;
  swift_unknownObjectRetain(v172);
  swift_bridgeObjectRetain(v138);
  swift_bridgeObjectRetain(v139);
  swift_bridgeObjectRetain(v173);
  *v175 = v172;
  v175[1] = v138;
  v175[2] = v139;
  v175[3] = v173;
  v175[4] = v244;
  swift_bridgeObjectRelease(v187);
  swift_bridgeObjectRelease(v139);
  swift_bridgeObjectRelease(v138);
  swift_unknownObjectRelease(v172);
  sub_10001F544(v170, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
  sub_1000073A0(v207, &qword_10063F190);
  sub_1000073A0(v134, (uint64_t *)&unk_100644950);
  sub_10001F544(v132, type metadata accessor for TTRICollectionViewEmptySpaceType);
  sub_10001F544(v240, type metadata accessor for TTRICollectionViewHitTestResult);
  sub_10001F580((uint64_t)v175, v185, type metadata accessor for TTRIRemindersBoardDropProposal);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v186 + 56))(v185, 0, 1, v241);
}

uint64_t sub_10003FC84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;

  v156 = a5;
  v150 = (char *)a8;
  v155 = a4;
  v147 = a3;
  v152 = (uint64_t *)a9;
  v153 = (char *)a11;
  v154 = type metadata accessor for TTRIRemindersBoardDropProposal(0);
  v148 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin(v154);
  v145 = (uint64_t *)((char *)&v129 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = type metadata accessor for TTRAdjustedIndexPath(0);
  __chkstk_darwin(v17);
  v138 = (uint64_t)&v129 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TTRUnadjustedIndexPath(0);
  __chkstk_darwin(v19);
  v151 = (uint64_t)&v129 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v136 = (uint64_t)&v129 - v22;
  v23 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
  v141 = *(_QWORD *)(v23 - 8);
  v142 = (void (*)(uint64_t *, _QWORD, uint64_t, uint64_t))v23;
  __chkstk_darwin(v23);
  v137 = (uint64_t)&v129 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10002A750((uint64_t *)&unk_100644950);
  __chkstk_darwin(v25);
  v144 = (uint64_t)&v129 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v133 = (char *)&v129 - v28;
  __chkstk_darwin(v29);
  v146 = (uint64_t *)((char *)&v129 - v30);
  v31 = sub_10002A750(&qword_10063F190);
  __chkstk_darwin(v31);
  v140 = (uint64_t)&v129 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v139 = (uint64_t)&v129 - v34;
  v35 = sub_10002A750(&qword_10063F198);
  __chkstk_darwin(v35);
  v143 = (uint64_t)&v129 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v149 = (uint64_t)&v129 - v38;
  __chkstk_darwin(v39);
  v41 = (char *)&v129 - v40;
  v43 = (char *)&v129 + *(int *)(v42 + 48) - v40;
  v44 = (char *)&v129 + *(int *)(v42 + 64) - v40;
  sub_10002B1E8((uint64_t)v150, (uint64_t)&v129 - v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
  sub_10000735C(a10, (uint64_t)v43, &qword_10063F190);
  v45 = (uint64_t)v153;
  v153 = v44;
  sub_10000735C(v45, (uint64_t)v44, &qword_10063F190);
  v46 = a1;
  v47 = a1;
  v48 = a2;
  v49 = a2;
  v50 = v155;
  v51 = v156;
  v52 = sub_1000407A0(v47, v49, v155, v156, a6, a7, (uint64_t)v41);
  if ((UIDropOperation.isCancelOrForbidden.getter(v52) & 1) != 0)
  {
    v150 = v41;
    v53 = v151;
    sub_1004CCC64(a12, v51, v151);
    v54 = sub_10004097C(v46, v48, v50, v51, a6, a7, v53);
    v55 = v51;
    v56 = v50;
    v57 = a6;
    if ((UIDropOperation.isCancelOrForbidden.getter(v54) & 1) != 0)
    {
      sub_10001F544(v151, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
      v58 = v152;
      v59 = (char *)v152 + *(int *)(v154 + 24);
      v60 = type metadata accessor for TTRICollectionViewDropIntent(0);
      v61 = (uint64_t)v59;
      v62 = 2;
    }
    else
    {
      v75 = v54;
      v76 = v138;
      sub_1004CCDD0(a12, v51, v138);
      sub_10001F544(v151, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
      v58 = v152;
      v77 = (uint64_t)v152 + *(int *)(v154 + 24);
      v78 = *(int *)(sub_10002A750(&qword_100664530) + 48);
      v79 = v76;
      v54 = v75;
      sub_10001F580(v79, v77, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath);
      *(_BYTE *)(v77 + v78) = 0;
      v60 = type metadata accessor for TTRICollectionViewDropIntent(0);
      v61 = v77;
      v62 = 0;
    }
    swift_storeEnumTagMultiPayload(v61, v60, v62);
    v80 = (uint64_t)v150;
    swift_unknownObjectRetain(v56);
    swift_bridgeObjectRetain(v55);
    swift_bridgeObjectRetain(v57);
    swift_bridgeObjectRetain(a7);
    *v58 = v56;
    v58[1] = v55;
    v58[2] = v57;
    v58[3] = a7;
    v58[4] = v54;
    return sub_1000073A0(v80, &qword_10063F198);
  }
  v129 = v46;
  v130 = v48;
  v131 = v52;
  v135 = a6;
  v132 = a7;
  v63 = type metadata accessor for TTRICollectionViewItemHit(0);
  v64 = *(unsigned __int8 *)(v147 + *(int *)(v63 + 20));
  v65 = v149;
  v66 = v149 + *(int *)(v35 + 48);
  v151 = v35;
  v67 = v149 + *(int *)(v35 + 64);
  sub_10002B1E8((uint64_t)v41, v149, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
  v134 = v43;
  sub_10000735C((uint64_t)v43, v66, &qword_10063F190);
  sub_10000735C((uint64_t)v153, v67, &qword_10063F190);
  if (v64)
    v68 = v67;
  else
    v68 = v66;
  if (!v64)
    v66 = v67;
  v69 = v139;
  sub_10000F614(v68, v139, &qword_10063F190);
  sub_1000073A0(v66, &qword_10063F190);
  sub_10001F544(v65, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
  v70 = v148;
  v71 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v148 + 56);
  v72 = v146;
  v73 = v154;
  v71(v146, 1, 1, v154);
  v74 = v140;
  sub_10000735C(v69, v140, &qword_10063F190);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void (*)(uint64_t *, _QWORD, uint64_t, uint64_t)))(v141 + 48))(v74, 1, v142) != 1)
  {
    v142 = v71;
    v82 = v63;
    v150 = v41;
    v83 = v69;
    v84 = v137;
    sub_10001F580(v74, v137, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
    v85 = v136;
    v86 = v155;
    v87 = v156;
    v88 = v135;
    v89 = v132;
    sub_1004CCC64(v84, v156, v136);
    v90 = sub_10004097C(v129, v130, v86, v87, v88, v89, v85);
    if ((UIDropOperation.isCancelOrForbidden.getter(v90) & 1) != 0)
    {
      sub_10001F544(v85, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
      sub_10001F544(v84, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
      sub_1000073A0(v83, &qword_10063F190);
    }
    else
    {
      if (*(_BYTE *)(v147 + *(int *)(v82 + 24)) == 1)
      {
        sub_10001F544(v85, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
        sub_10001F544(v84, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
        sub_1000073A0((uint64_t)v72, (uint64_t *)&unk_100644950);
        sub_1000073A0(v83, &qword_10063F190);
        v91 = v73;
        v92 = (uint64_t *)v133;
        v93 = (uint64_t)&v133[*(int *)(v73 + 24)];
        v41 = v150;
        v94 = v149;
        v95 = v149 + *(int *)(v151 + 48);
        v96 = v89;
        v97 = v149 + *(int *)(v151 + 64);
        sub_10002B1E8((uint64_t)v150, v149, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
        sub_10000735C((uint64_t)v134, v95, &qword_10063F190);
        sub_10000735C((uint64_t)v153, v97, &qword_10063F190);
        sub_10001F580(v94, v93, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
        v98 = type metadata accessor for TTRICollectionViewDropIntent(0);
        v99 = v93;
        v73 = v91;
        swift_storeEnumTagMultiPayload(v99, v98, 1);
        v100 = v155;
        v101 = v156;
        *v92 = v155;
        v92[1] = v101;
        v102 = v135;
        v92[2] = v135;
        v92[3] = v96;
        v92[4] = v131;
        swift_unknownObjectRetain(v100);
        v103 = v101;
        v72 = v146;
        swift_bridgeObjectRetain(v103);
        swift_bridgeObjectRetain(v102);
        swift_bridgeObjectRetain(v96);
        sub_1000073A0(v97, &qword_10063F190);
        sub_1000073A0(v95, &qword_10063F190);
        v142(v92, 0, 1, v73);
        sub_10000F614((uint64_t)v92, (uint64_t)v72, (uint64_t *)&unk_100644950);
        v70 = v148;
        goto LABEL_19;
      }
      v104 = v85;
      v105 = v138;
      v107 = v155;
      v106 = v156;
      sub_1004CCDD0(v84, v156, v138);
      sub_10001F544(v104, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
      sub_10001F544(v84, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
      sub_1000073A0((uint64_t)v72, (uint64_t *)&unk_100644950);
      sub_1000073A0(v83, &qword_10063F190);
      v108 = (uint64_t)v72 + *(int *)(v154 + 24);
      v109 = *(int *)(sub_10002A750(&qword_100664530) + 48);
      sub_10001F580(v105, v108, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath);
      *(_BYTE *)(v108 + v109) = 0;
      v110 = type metadata accessor for TTRICollectionViewDropIntent(0);
      swift_storeEnumTagMultiPayload(v108, v110, 0);
      *v72 = v107;
      v72[1] = v106;
      v72[2] = v88;
      v72[3] = v89;
      v72[4] = v90;
      v142(v72, 0, 1, v154);
      v111 = v107;
      v73 = v154;
      swift_unknownObjectRetain(v111);
      swift_bridgeObjectRetain(v106);
      swift_bridgeObjectRetain(v88);
      swift_bridgeObjectRetain(v89);
    }
    v70 = v148;
    v41 = v150;
    goto LABEL_19;
  }
  sub_1000073A0(v69, &qword_10063F190);
  sub_1000073A0(v74, &qword_10063F190);
LABEL_19:
  v112 = v144;
  sub_10000F614((uint64_t)v72, v144, (uint64_t *)&unk_100644950);
  v113 = v151;
  v114 = v143;
  v115 = v143 + *(int *)(v151 + 48);
  v116 = v143 + *(int *)(v151 + 64);
  sub_10001F580((uint64_t)v41, v143, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
  sub_10000F614((uint64_t)v134, v115, &qword_10063F190);
  sub_10000F614((uint64_t)v153, v116, &qword_10063F190);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v112, 1, v73) == 1)
  {
    v117 = *(int *)(v73 + 24);
    v118 = v145;
    v119 = (uint64_t)v145 + v117;
    v120 = v149;
    v121 = v149 + *(int *)(v113 + 48);
    v122 = v149 + *(int *)(v113 + 64);
    sub_10001F580(v114, v149, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
    sub_10000F614(v115, v121, &qword_10063F190);
    sub_10000F614(v116, v122, &qword_10063F190);
    sub_10001F580(v120, v119, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
    v123 = type metadata accessor for TTRICollectionViewDropIntent(0);
    swift_storeEnumTagMultiPayload(v119, v123, 1);
    v124 = v155;
    v125 = v156;
    *v118 = v155;
    v118[1] = v125;
    v126 = v135;
    v127 = v112;
    v128 = v132;
    v118[2] = v135;
    v118[3] = v128;
    v118[4] = v131;
    swift_unknownObjectRetain(v124);
    swift_bridgeObjectRetain(v125);
    swift_bridgeObjectRetain(v126);
    swift_bridgeObjectRetain(v128);
    sub_1000073A0(v122, &qword_10063F190);
    sub_1000073A0(v121, &qword_10063F190);
    sub_1000073A0(v127, (uint64_t *)&unk_100644950);
  }
  else
  {
    sub_1000073A0(v114, &qword_10063F198);
    v118 = v145;
    sub_10001F580(v112, (uint64_t)v145, type metadata accessor for TTRIRemindersBoardDropProposal);
  }
  return sub_10001F580((uint64_t)v118, (uint64_t)v152, type metadata accessor for TTRIRemindersBoardDropProposal);
}

uint64_t sub_1000407A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t Strong;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a5;
  v27 = a6;
  v24 = a3;
  v25 = a4;
  v9 = sub_10002A750(&qword_100657410);
  __chkstk_darwin(v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750((uint64_t *)&unk_100644930);
  __chkstk_darwin(v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750(&qword_10063F1A0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v7 + 16);
  if (Strong)
  {
    v20 = Strong;
    TTRBoardColumnDiffableDataSource.itemLocation(forItemAt:)(a7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
    {
      sub_10000F614((uint64_t)v14, (uint64_t)v18, &qword_10063F1A0);
      sub_10000735C((uint64_t)v18, (uint64_t)v11, &qword_10063F1A0);
      swift_storeEnumTagMultiPayload(v11, v9, 1);
      sub_10036B754(v24, v25, v26, v27, (uint64_t)v11);
      v21 = v22;
      swift_unknownObjectRelease(v20);
      sub_1000073A0((uint64_t)v11, &qword_100657410);
      sub_1000073A0((uint64_t)v18, &qword_10063F1A0);
      return v21;
    }
    swift_unknownObjectRelease(v20);
    sub_1000073A0((uint64_t)v14, (uint64_t *)&unk_100644930);
  }
  return 0;
}

uint64_t sub_10004097C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a7;
  v33 = a6;
  v34 = a1;
  v30 = a3;
  v29 = sub_10002A750(&qword_100657410);
  __chkstk_darwin(v29);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750((uint64_t *)&unk_100644940);
  __chkstk_darwin(v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750(&qword_10063F1A8);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a4;
  v31 = a4;
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a5);
  v32 = a5;
  sub_10045050C(a5);
  v18 = v37;
  v19 = sub_10002A750((uint64_t *)&unk_100644960);
  v20 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v21 = sub_100041E98();
  v22 = sub_100041EE4();
  v23 = Sequence.mapToSet<A>(_:)(sub_1000410F0, 0, v19, v20, v21, v22);
  swift_bridgeObjectRelease(v18);
  Strong = swift_unknownObjectWeakLoadStrong(v36 + 16);
  if (Strong)
  {
    v25 = Strong;
    TTRBoardColumnDiffableDataSource.itemLocation(forInsertingAt:localItemIDsToBeMoved:)(v35, v23);
    swift_bridgeObjectRelease(v23);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {
      swift_unknownObjectRelease(v25);
      sub_1000073A0((uint64_t)v13, (uint64_t *)&unk_100644940);
      return 0;
    }
    else
    {
      sub_10000F614((uint64_t)v13, (uint64_t)v17, &qword_10063F1A8);
      sub_10000735C((uint64_t)v17, (uint64_t)v10, &qword_10063F1A8);
      swift_storeEnumTagMultiPayload(v10, v29, 0);
      sub_10036B754(v30, v31, v32, v33, (uint64_t)v10);
      v26 = v27;
      swift_unknownObjectRelease(v25);
      sub_1000073A0((uint64_t)v10, &qword_100657410);
      sub_1000073A0((uint64_t)v17, &qword_10063F1A8);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v23);
    return 0;
  }
  return v26;
}

uint64_t sub_100040C00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76[32];

  v70 = a5;
  v71 = a4;
  v69 = a2;
  v74 = a6;
  v75 = type metadata accessor for IndexPath(0);
  v73 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v65 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRAdjustedIndexPath(0);
  __chkstk_darwin(v9);
  v66 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRUnadjustedIndexPath(0);
  __chkstk_darwin(v11);
  v68 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
  __chkstk_darwin(v13);
  v67 = (uint64_t)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v15);
  v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v62 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)&v62 - v26;
  v28 = a1;
  v72 = a3;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_1000073A0((uint64_t)v17, (uint64_t *)&unk_1006463C0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v73 + 16))(v74, v71, v75);
  }
  else
  {
    sub_10001F580((uint64_t)v17, (uint64_t)v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v64 = v27;
    sub_10001F580((uint64_t)v25, (uint64_t)v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v63 = a1;
    v30 = a1 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_columnID;
    swift_beginAccess(v28 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_columnID, v76, 0, 0);
    v31 = v67;
    sub_10002B1E8(v30, v67, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v32 = v73;
    v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 16);
    v33(v31 + v13[5], v72, v75);
    sub_10002B1E8((uint64_t)v27, v31 + v13[6], (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    *(_BYTE *)(v31 + v13[7]) = 0;
    v34 = sub_10002A750(&qword_10063F1C0);
    v35 = type metadata accessor for TTRIRemindersBoardDragItemSources.Source(0);
    v36 = *(_QWORD *)(v35 - 8);
    v37 = *(_QWORD *)(v36 + 72);
    v38 = *(unsigned __int8 *)(v36 + 80);
    v39 = (v38 + 32) & ~v38;
    v40 = swift_allocObject(v34, v39 + v37, v38 | 7);
    v62 = xmmword_100520250;
    *(_OWORD *)(v40 + 16) = xmmword_100520250;
    sub_10002B1E8(v31, v40 + v39, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
    swift_storeEnumTagMultiPayload(v40 + v39, v35, 0);
    sub_10002B1E8(v30, (uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v41 = sub_1004CC8AC((uint64_t)v22, 0, v40);
    v43 = v42;
    v45 = v44;
    v47 = v46;
    swift_bridgeObjectRelease(v40);
    sub_10001F544((uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v48 = v65;
    v49 = v75;
    v33((uint64_t)v65, v70, v75);
    v50 = (uint64_t)v66;
    TTRAdjustedIndexPath.init(_:)(v48);
    v51 = sub_10002A750((uint64_t *)&unk_100650540);
    v52 = *(_QWORD *)(v32 + 72);
    v53 = *(unsigned __int8 *)(v32 + 80);
    v54 = (v53 + 32) & ~v53;
    v55 = swift_allocObject(v51, v54 + v52, v53 | 7);
    *(_OWORD *)(v55 + 16) = v62;
    v56 = v49;
    v57 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v33;
    v33(v55 + v54, v72, v56);
    v58 = (uint64_t)v68;
    TTRAdjustedIndexPath.unadjusted(forOriginalItemIndexPaths:)(v55);
    swift_bridgeObjectRelease(v55);
    sub_10001F544(v50, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath);
    v59 = sub_10004097C(v63, v69, v41, v43, v45, v47, v58);
    swift_bridgeObjectRelease(v47);
    swift_bridgeObjectRelease(v45);
    swift_bridgeObjectRelease(v43);
    swift_unknownObjectRelease(v41);
    sub_10001F544(v58, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
    sub_10001F544(v31, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
    sub_10001F544((uint64_t)v64, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    if ((UIDropOperation.isCancelOrForbidden.getter(v59) & 1) != 0)
    {
      v60 = v74;
      v61 = v71;
    }
    else
    {
      v60 = v74;
      v61 = v70;
    }
    return v57(v60, v61, v75);
  }
}

uint64_t sub_1000410F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
  return sub_10002B1E8(a1 + *(int *)(v4 + 24), a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
}

uint64_t sub_100041140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1000381C8(v0 + 16);
  v1 = v0 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_coordinatorID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_activityTracker));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_internalActiveDropContext));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_multiRowReorderingDropIndicatorView));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1000411E8()
{
  return type metadata accessor for TTRIRemindersBoardDragAndDropCoordinator(0);
}

uint64_t type metadata accessor for TTRIRemindersBoardDragAndDropCoordinator(uint64_t a1)
{
  uint64_t result;

  result = qword_10063F0B8;
  if (!qword_10063F0B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIRemindersBoardDragAndDropCoordinator);
  return result;
}

uint64_t sub_10004122C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = &unk_1005202D0;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[4] = &unk_1005202E8;
    v4[5] = &unk_1005202E8;
    v4[6] = &unk_1005202E8;
    v4[7] = &unk_100520300;
    result = swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

double sub_1000412D8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  char *v35;
  char *v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  id v43;
  double result;
  int EnumCaseMultiPayload;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE v59[24];
  _BYTE v60[24];
  _BYTE v61[32];

  v55 = a5;
  v56 = a3;
  v57 = a4;
  v58 = a6;
  v54 = a2;
  v8 = sub_10002A750(&qword_10063F1B8);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v53 = (char *)&v47 - v12;
  v13 = type metadata accessor for TTRAdjustedIndexPath(0);
  __chkstk_darwin(v13);
  v49 = (uint64_t)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TTRIRemindersBoardDropProposal(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for TTRICollectionViewDropIntent(0);
  __chkstk_darwin(v50);
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v21);
  v23 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_internalActiveDropContext;
  v25 = *(_QWORD *)(v6 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_internalActiveDropContext);
  if (!v25)
    goto LABEL_8;
  v52 = OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_internalActiveDropContext;
  v48 = v11;
  v26 = v25 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_columnID;
  v51 = a1;
  v27 = a1 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_columnID;
  swift_beginAccess(a1 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_columnID, v61, 0, 0);
  sub_10002B1E8(v27, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  swift_retain();
  LOBYTE(v26) = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v26, v23);
  sub_10001F544((uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  if ((v26 & 1) == 0)
  {
    swift_release();
    a1 = v51;
    v24 = v52;
LABEL_8:
    sub_100040C00(a1, v54, v56, v57, v55, v58);
    goto LABEL_9;
  }
  v28 = v25 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal;
  v29 = swift_beginAccess(v25 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal, v60, 0, 0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v16 + 48))(v28, 1, v15, v29))
  {
    swift_retain();
    a1 = v51;
    v30 = v58;
  }
  else
  {
    sub_10002B1E8(v28, (uint64_t)v18, type metadata accessor for TTRIRemindersBoardDropProposal);
    sub_10002B1E8((uint64_t)&v18[*(int *)(v15 + 24)], (uint64_t)v20, type metadata accessor for TTRICollectionViewDropIntent);
    swift_retain();
    sub_10001F544((uint64_t)v18, type metadata accessor for TTRIRemindersBoardDropProposal);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v20, v50);
    if (!EnumCaseMultiPayload)
    {
      v46 = v49;
      sub_10001F580((uint64_t)v20, v49, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath);
      v31 = type metadata accessor for IndexPath(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v58, v46, v31);
      a1 = v51;
      v32 = v55;
      goto LABEL_6;
    }
    a1 = v51;
    v30 = v58;
    if (EnumCaseMultiPayload == 1)
      sub_10001F544((uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
  }
  v31 = type metadata accessor for IndexPath(0);
  v32 = v55;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v30, v55, v31);
LABEL_6:
  *(_BYTE *)(v25 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_dropProposalHasBlockingTargetRedirection) = 0;
  swift_release();
  v33 = *(_QWORD *)(v25 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_debugInfo);
  v34 = (int *)type metadata accessor for TTRIRemindersBoardDropContext.DebugInfo.LastTargetIndexPathForMoveCall(0);
  v35 = v53;
  v36 = &v53[v34[5]];
  type metadata accessor for IndexPath(0);
  v37 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
  v37(v36, v56, v31);
  v37(&v35[v34[6]], v57, v31);
  v37(&v35[v34[7]], v32, v31);
  v37(&v35[v34[8]], v58, v31);
  *(_QWORD *)v35 = 1886351972;
  *((_QWORD *)v35 + 1) = 0xE400000000000000;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(*((_QWORD *)v34 - 1) + 56))(v35, 0, 1, v34);
  v38 = (uint64_t)v48;
  sub_10000F614((uint64_t)v35, (uint64_t)v48, &qword_10063F1B8);
  v39 = v33 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastTargetIndexPathForMoveCall;
  swift_beginAccess(v33 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastTargetIndexPathForMoveCall, v59, 33, 0);
  swift_retain();
  sub_100041F2C(v38, v39, &qword_10063F1B8);
  swift_endAccess(v59);
  swift_release();
  v24 = v52;
LABEL_9:
  if ((sub_1002EF7CC(v6, a1) & 1) == 0)
  {
    v40 = *(void **)(v6
                   + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_multiRowReorderingDropIndicatorView);
    if (v40)
      objc_msgSend(v40, "removeFromSuperview");
  }
  if (*(_QWORD *)(v6 + v24))
  {
    v41 = *(void **)(v6 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_rootView);
    swift_retain();

    swift_release();
  }
  v42 = *(void **)(v6 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_dropPointIndicatorView);
  if (v42)
  {
    v43 = v42;
    TTRIDebugDropIndicatorView.stopShowing()();
    swift_release();

  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_10004181C(void *a1, uint64_t a2)
{
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(a1, "items");
  v4 = sub_100041E10();
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  v6 = sub_1000418A8(v5, (uint64_t (*)(char *, id))sub_100041E4C, a2);
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_1000418A8(uint64_t a1, uint64_t (*a2)(char *, id), uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD v20[2];
  unint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, id);
  uint64_t v24;
  _QWORD *v25;

  v4 = v3;
  v23 = a2;
  v24 = a3;
  v22 = sub_10002A750(&qword_10063F178);
  v6 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v8 = (_QWORD *)((char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v10 = _swiftEmptyArrayStorage;
    if (!v9)
      return (uint64_t)v10;
    v25 = _swiftEmptyArrayStorage;
    result = sub_1003D8044(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0)
      break;
    v12 = 0;
    v10 = v25;
    v20[1] = v4;
    v21 = a1 & 0xC000000000000001;
    v13 = a1;
    while (v9 != v12)
    {
      if (v21)
        v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, a1);
      else
        v14 = *(id *)(a1 + 8 * v12 + 32);
      v15 = v14;
      v16 = v23((char *)v8 + *(int *)(v22 + 48), v14);

      *v8 = v16;
      v25 = v10;
      v18 = v10[2];
      v17 = v10[3];
      v4 = v18 + 1;
      if (v18 >= v17 >> 1)
      {
        sub_1003D8044(v17 > 1, v18 + 1, 1);
        v10 = v25;
      }
      ++v12;
      v10[2] = v4;
      sub_10000F614((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v18, &qword_10063F178);
      a1 = v13;
      if (v9 == v12)
        return (uint64_t)v10;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v19 = a1;
    else
      v19 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v9 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_100041A84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_100654F20);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
  v8 = *((_QWORD *)v7 - 1);
  __chkstk_darwin(v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (!Strong)
    return 0;
  v12 = Strong;
  v13 = type metadata accessor for TTRIRemindersBoardDragItemInfo(0);
  v14 = a1 + *(int *)(v13 + 24);
  sub_10036B4CC(v14);
  v16 = v15;
  swift_unknownObjectRelease(v12);
  if (v16)
  {
    v17 = v2 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_coordinatorID;
    v18 = type metadata accessor for UUID(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v10, v17, v18);
    sub_10002B1E8(a1, (uint64_t)&v10[v7[5]], (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v19 = a1 + *(int *)(v13 + 20);
    v20 = &v10[v7[6]];
    v21 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v20, v19, v21);
    sub_10002B1E8(v14, (uint64_t)&v10[v7[7]], (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v10[v7[8]] = 0;
    sub_10002B1E8((uint64_t)v10, (uint64_t)v6, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v8 + 56))(v6, 0, 1, v7);
    sub_10003E564((uint64_t)v6);
    sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100654F20);
    sub_10001F544((uint64_t)v10, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
  }
  return v16;
}

id sub_100041C6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v14;

  v1 = sub_10002A750((uint64_t *)&unk_100654F20);
  __chkstk_darwin(v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003E6A0(v0 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_coordinatorID, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1000073A0((uint64_t)v3, (uint64_t *)&unk_100654F20);
    return 0;
  }
  sub_10001F580((uint64_t)v3, (uint64_t)v7, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (!Strong
    || (v9 = Strong, sub_10036C6B8((uint64_t)&v7[*(int *)(v4 + 20)]), v11 = v10, swift_unknownObjectRelease(v9), !v11))
  {
    sub_10001F544((uint64_t)v7, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
    return 0;
  }
  v12 = sub_1002EEB3C((uint64_t)&v7[*(int *)(v4 + 28)]);
  swift_unknownObjectRelease(v11);
  sub_10001F544((uint64_t)v7, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
  return v12;
}

uint64_t sub_100041DDC(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

unint64_t sub_100041E10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100650570;
  if (!qword_100650570)
  {
    v1 = objc_opt_self(UIDragItem);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100650570);
  }
  return result;
}

id sub_100041E4C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  id v5;

  v4 = v2 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_coordinatorID;
  v5 = a2;
  sub_10003E6A0(v4, a1);
  return v5;
}

unint64_t sub_100041E98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10063F1B0;
  if (!qword_10063F1B0)
  {
    v1 = sub_10002CA5C((uint64_t *)&unk_100644960);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10063F1B0);
  }
  return result;
}

unint64_t sub_100041EE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100644970;
  if (!qword_100644970)
  {
    v1 = type metadata accessor for TTRRemindersListViewModel.ItemID(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRRemindersListViewModel.ItemID, v1);
    atomic_store(result, (unint64_t *)&qword_100644970);
  }
  return result;
}

uint64_t sub_100041F2C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10002A750(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_100041F70@<X0>(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _UNKNOWN **v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  void **v70;
  void *v71;
  void *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  id v89;
  id v90;
  id v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  id v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  id v132;
  void **v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  id v138;
  void *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD v145[5];
  uint64_t v146;
  __int128 v147;
  uint64_t v148;
  _UNKNOWN **v149;

  v139 = a3;
  v143 = a2;
  v133 = a1;
  v6 = sub_10002A750(&qword_10063F270);
  __chkstk_darwin(v6);
  v135 = (char *)&v127 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Locale(0);
  __chkstk_darwin(v8);
  v134 = (char *)&v127 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v10);
  v130 = (char *)&v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes(0);
  v136 = *(_QWORD *)(v140 - 8);
  v12 = __chkstk_darwin(v140);
  v129 = (char *)&v127 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v127 - v15;
  __chkstk_darwin(v14);
  v128 = (char *)&v127 - v17;
  v18 = *a1;
  v19 = type metadata accessor for TTRGeoLocationService(0);
  v131 = v19;
  v20 = (void *)static TTRGeoLocationService.newService()();
  v142 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
  v21 = ((uint64_t (*)(void))static OS_dispatch_queue.main.getter)();
  v141 = type metadata accessor for RDIDispatchQueue(0);
  v22 = static RDIDispatchQueue.storeQueue.getter();
  v23 = type metadata accessor for REMContactsProvider(0);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  v24 = REMContactsProvider.init(contactStoreCreator:queue:backgroundQueue:)(sub_10004931C, 0, v21, v22);
  *(_QWORD *)(a4 + 96) = v23;
  *(_QWORD *)(a4 + 104) = &protocol witness table for REMContactsProvider;
  *(_QWORD *)(a4 + 72) = v24;
  v25 = type metadata accessor for TTRReminderLocationOptionsProvider(0);
  v137 = v25;
  v144 = a4 + 72;
  sub_100010634(a4 + 72, (uint64_t)&v147);
  v26 = v148;
  v27 = (uint64_t)v149;
  v28 = sub_100028D48((uint64_t)&v147, v148);
  __chkstk_darwin(v28);
  v30 = (char *)&v127 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v31 + 16))(v30);
  v145[0] = v20;
  v32 = v18;
  v132 = v20;
  v33 = sub_100043038((uint64_t)v32, (uint64_t)v30, (uint64_t)v145, v25, v26, v19, v27, (uint64_t)&protocol witness table for TTRGeoLocationService);
  sub_100027F10(&v147);
  v127 = type metadata accessor for TTRReminderTitleAttributesHarvester(0);
  sub_100010634(a4 + 72, (uint64_t)&v147);
  v138 = v32;
  v34 = swift_retain(v33);
  static REMSuggestedAttributesElector.ExcludedAttributes.listsFromOtherAccounts.getter(v34);
  v35 = sub_100043870(&qword_10063F278, (uint64_t)&protocol conformance descriptor for REMSuggestedAttributesElector.ExcludedAttributes);
  v36 = v140;
  dispatch thunk of RawRepresentable.rawValue.getter(v145, v140, v35);
  v37 = sub_100043870(&qword_10063F280, (uint64_t)&protocol conformance descriptor for REMSuggestedAttributesElector.ExcludedAttributes);
  v38 = (uint64_t)v128;
  dispatch thunk of OptionSet.init(rawValue:)(v145, v36, v37);
  v39 = v136;
  v40 = v129;
  (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v129, v16, v36);
  v41 = sub_100043870((unint64_t *)&qword_10063F288, (uint64_t)&protocol conformance descriptor for REMSuggestedAttributesElector.ExcludedAttributes);
  dispatch thunk of SetAlgebra.formUnion(_:)(v40, v36, v41);
  v136 = *(_QWORD *)(v39 + 8);
  ((void (*)(char *, uint64_t))v136)(v16, v36);
  v42 = type metadata accessor for Date(0);
  v43 = (uint64_t)v130;
  v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v130, 1, 1, v42);
  v45 = static OS_dispatch_queue.main.getter(v44);
  v46 = static RDIDispatchQueue.utilityQueue.getter();
  v47 = (uint64_t)v134;
  static Locale.autoupdatingCurrent.getter();
  v48 = v148;
  v49 = (uint64_t)v149;
  v50 = sub_100028D48((uint64_t)&v147, v148);
  __chkstk_darwin(v50);
  v52 = (char *)&v127 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v53 + 16))(v52);
  v145[0] = v33;
  swift_retain(v33);
  v54 = sub_1000430F0(v45, v46, (uint64_t)v145, (uint64_t)v52, (uint64_t)v138, v38, v47, (uint64_t)&j___s10Foundation8TimeZoneV7currentACvgZ, 0, v43, 0, v127, v137, v48, (uint64_t)&protocol witness table for TTRReminderLocationOptionsProvider, v49);
  sub_100027F10(&v147);
  swift_release(v33);
  v55 = type metadata accessor for TTRReminderTitleAttributesInteractor(0);
  v56 = type metadata accessor for TTRIReminderTitleAttributesStyler(0);
  v57 = swift_allocObject(v56, 16, 7);
  sub_100010634(v144, (uint64_t)&v147);
  v59 = v148;
  v58 = v149;
  v60 = sub_100028D48((uint64_t)&v147, v148);
  __chkstk_darwin(v60);
  v62 = (char *)&v127 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v63 + 16))(v62);
  v145[0] = v57;
  v146 = v33;
  swift_retain(v33);
  v134 = (char *)v54;
  swift_retain(v54);
  swift_retain(v57);
  v126 = (uint64_t)v58;
  v64 = v137;
  v65 = sub_1000431D8(v54, (uint64_t)v145, (uint64_t)v62, (uint64_t)&v146, v55, v59, v56, v137, v126, (uint64_t)&protocol witness table for TTRIReminderTitleAttributesStyler, (uint64_t)&protocol witness table for TTRReminderLocationOptionsProvider);
  sub_100027F10(&v147);
  swift_release(v57);
  *(_QWORD *)(a4 + 56) = v55;
  *(_QWORD *)(a4 + 64) = &protocol witness table for TTRReminderTitleAttributesInteractor;
  *(_QWORD *)(a4 + 32) = v65;
  v148 = v131;
  v149 = (_UNKNOWN **)&protocol witness table for TTRGeoLocationService;
  v66 = v132;
  *(_QWORD *)&v147 = v132;
  v145[3] = v64;
  v145[4] = &protocol witness table for TTRReminderLocationOptionsProvider;
  v145[0] = v33;
  v67 = type metadata accessor for TTRLocationQuickPicksInteractor(0);
  swift_allocObject(v67, 136, 7);
  v68 = v66;
  swift_retain(v33);
  v69 = TTRLocationQuickPicksInteractor.init(geoService:locationOptionsProvider:)(&v147, v145);
  *(_QWORD *)(a4 + 312) = v69;
  *(_QWORD *)(a4 + 320) = &protocol witness table for TTRLocationQuickPicksInteractor;
  v70 = v133;
  v71 = *v133;
  swift_retain(v69);
  v72 = v139;
  v73 = sub_100322A84((uint64_t *)(a4 + 128), v71, v139, v69, (uint64_t)&protocol witness table for TTRLocationQuickPicksInteractor);
  v75 = v74;
  v77 = v76;
  v79 = v78;
  v80 = swift_release(v69);
  *(_QWORD *)(a4 + 160) = v73;
  *(_QWORD *)(a4 + 168) = v75;
  *(_QWORD *)(a4 + 176) = v77;
  *(_QWORD *)(a4 + 184) = v79;
  v81 = (_QWORD *)TTRIQuickBarInputAccessorySupportedIdioms.default.unsafeMutableAddressor(v80);
  v82 = v138;
  *(_QWORD *)(a4 + 224) = static TTRIQuickBarInputAccessoryAssembly.createViewController(supportedIdioms:allowsClearingDueDate:store:locationOptionsProvider:contactsProvider:contactStoreCreator:)(a4 + 192, *v81, 1, v138, v33, v144, sub_100042A70, 0);
  *(_QWORD *)(a4 + 232) = v83;
  v84 = type metadata accessor for TTRRemindersListUndoContext(0);
  v85 = v135;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v135, 1, 1, v84);
  v86 = type metadata accessor for TTRInteractorAsyncEditsCommitter(0);
  v87 = swift_allocObject(v86, 16, 7);
  v148 = v86;
  v149 = (_UNKNOWN **)&protocol witness table for TTRInteractorAsyncEditsCommitter;
  *(_QWORD *)&v147 = v87;
  v88 = objc_allocWithZone((Class)type metadata accessor for TTRRemindersListInteractor(0));
  v89 = v82;
  sub_1000438B0(v72);
  *(_QWORD *)a4 = TTRRemindersListInteractor.init(store:canChangeSortingStyle:defaultListType:committer:undoContext:)(v89, 1, v72, &v147, v85);
  *(_BYTE *)(a4 + 240) = 1;
  v90 = v89;
  v91 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v90);
  *(_QWORD *)(a4 + 248) = sub_100043358(v90, (uint64_t)v91);
  v92 = type metadata accessor for TTRUserActivityMetadataInterator(0);
  swift_allocObject(v92, 24, 7);
  *(_QWORD *)(a4 + 112) = TTRUserActivityMetadataInterator.init()();
  *(_QWORD *)(a4 + 120) = &protocol witness table for TTRUserActivityMetadataInterator;
  v93 = (uint64_t *)((char *)v70
                  + *(int *)(type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0) + 28));
  v94 = (uint64_t)v70;
  v96 = *v93;
  v95 = v93[1];
  v97 = type metadata accessor for TTRIRemindersListRouter();
  swift_allocObject(v97, 88, 7);
  v98 = sub_10009EAA0(v96, v95);
  *(_QWORD *)(a4 + 24) = v98;
  sub_100005ED8(0, (unint64_t *)&qword_10063F290, UNUserNotificationCenter_ptr);
  swift_unknownObjectRetain(v96);
  v99 = swift_retain(v98);
  v100 = static UNUserNotificationCenter.ttr_unUserNotificationCenter.getter(v99);
  v101 = (void *)objc_opt_self(REMUserDefaults);
  v102 = v68;
  v103 = objc_msgSend(v101, "daemonUserDefaults");
  v104 = type metadata accessor for TTRIPrivacyChecker(0);
  swift_allocObject(v104, 112, 7);
  *(_QWORD *)(a4 + 256) = TTRIPrivacyChecker.init(delegate:unUserNotificationCenter:geoService:notificationsService:userDefaults:)(v98, &off_1005EED70, v100, v68, 0, 0, v103, &protocol witness table for REMDaemonUserDefaults, &protocol witness table for REMDaemonUserDefaults);
  v105 = type metadata accessor for TTRURLMetadataInteractor(0);
  swift_allocObject(v105, 32, 7);
  *(_QWORD *)(a4 + 8) = TTRURLMetadataInteractor.init()();
  *(_QWORD *)(a4 + 16) = &protocol witness table for TTRURLMetadataInteractor;
  v106 = v90;
  v107 = static OS_dispatch_queue.main.getter(v106);
  v108 = static RDIDispatchQueue.storeQueue.getter();
  v109 = objc_msgSend(objc_allocWithZone((Class)SWHighlightCenter), "init");
  v110 = objc_allocWithZone((Class)type metadata accessor for TTRSharedWithYouProvider(0));
  *(_QWORD *)(a4 + 264) = TTRSharedWithYouProvider.init(store:invocationQueue:backgroundQueue:highlightCenter:customFetchShareForSharedList:)(v106, v107, v108, v109, &protocol witness table for SWHighlightCenter, 0, 0);
  v111 = type metadata accessor for TTRParticipantAvatarProvider(0);
  v112 = sub_100010634(v144, (uint64_t)&v147);
  v113 = static OS_dispatch_queue.main.getter(v112);
  v114 = v148;
  v115 = (uint64_t)v149;
  v116 = sub_100028D48((uint64_t)&v147, v148);
  __chkstk_darwin(v116);
  v118 = (char *)&v127 - ((v117 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v119 + 16))(v118);
  v120 = sub_1000432C8((uint64_t)v118, (uint64_t)sub_10004931C, 0, v113, v111, v114, v115);
  sub_100027F10(&v147);
  *(_QWORD *)(a4 + 296) = v111;
  *(_QWORD *)(a4 + 304) = &protocol witness table for TTRParticipantAvatarProvider;
  *(_QWORD *)(a4 + 272) = v120;
  v121 = type metadata accessor for TTRAutoCompleteReminderProvider(0);
  v122 = TTRAutoCompleteReminderProvider.__allocating_init(store:)(v106);
  *(_QWORD *)(a4 + 352) = v121;
  *(_QWORD *)(a4 + 360) = &protocol witness table for TTRAutoCompleteReminderProvider;
  *(_QWORD *)(a4 + 328) = v122;
  v123 = type metadata accessor for TTRIShowRemindersUndoManagerObserver();
  swift_allocObject(v123, 82, 7);
  v124 = sub_100449820();
  v148 = v123;
  v149 = &off_100608590;
  sub_1000438C0(v139);

  swift_release(v33);
  swift_release(v134);
  *(_QWORD *)&v147 = v124;
  ((void (*)(uint64_t, uint64_t))v136)(v143, v140);
  sub_10001F544(v94, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  return sub_10002E37C(&v147, a4 + 368);
}

id sub_100042A70()
{
  return objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
}

uint64_t sub_100042A94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int *v10;
  uint64_t *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t result;
  _QWORD v25[4];
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[6];

  sub_100042FBC(a1, a5);
  v10 = (int *)type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  sub_100043000(a2, a5 + v10[5]);
  v11 = (uint64_t *)(a5 + v10[6]);
  *v11 = a3;
  v11[1] = a4;
  v12 = *(void **)a2;
  v13 = sub_10002A750(&qword_10063F260);
  v14 = swift_allocObject(v13, 64, 7);
  *(_OWORD *)(v14 + 16) = xmmword_1005201E0;
  sub_100028CFC(a2 + 192, (uint64_t)v29);
  v16 = *(_QWORD *)(a2 + 224);
  v15 = *(_QWORD *)(a2 + 232);
  v29[4] = v16;
  v29[5] = v15;
  v17 = *(_QWORD *)(v15 + 8);
  *(_QWORD *)(v14 + 32) = v16;
  *(_QWORD *)(v14 + 40) = v17;
  sub_100028CFC(a2 + 128, (uint64_t)v25);
  v26 = *(_OWORD *)(a2 + 160);
  v19 = *(_QWORD *)(a2 + 176);
  v18 = *(_QWORD *)(a2 + 184);
  v27 = v19;
  v28 = v18;
  *(_QWORD *)(v14 + 48) = v19;
  *(_QWORD *)(v14 + 56) = v18;
  swift_unknownObjectRetain(a3);
  v20 = v12;
  swift_unknownObjectRetain(v16);
  swift_unknownObjectRetain(v19);
  sub_100027F10(v25);
  sub_100027F10(v29);
  v21 = type metadata accessor for TTRReminderListEditingPresenter(0);
  v22 = (_QWORD *)swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  v23 = sub_1000435B8(v20, a3, a4, v14, v22);

  swift_unknownObjectRelease(a3);
  sub_100043844(a2);
  result = sub_10001F544(a1, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  *(_QWORD *)(a5 + v10[7]) = v23;
  return result;
}

uint64_t sub_100042C0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67[2];
  __int128 v68[2];
  __int128 v69[2];
  _OWORD v70[3];
  _QWORD v71[8];
  _OWORD v72[2];
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77[2];
  __int128 v78[3];

  v64 = a1;
  v2 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v2);
  v50 = (uint64_t)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (int *)type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  v5 = v4[6];
  v6 = v1 + v4[5];
  v7 = *(_QWORD *)(v6 + 24);
  v60 = *(void **)v6;
  v61 = v7;
  v8 = *(_QWORD *)(v1 + v5 + 8);
  v62 = *(_QWORD *)(v1 + v5);
  v63 = v8;
  v9 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  v10 = v9[7];
  v11 = *(_QWORD *)(v6 + 264);
  v58 = *(_QWORD *)(v1 + v9[6]);
  v59 = (void *)v11;
  v12 = v1 + v10;
  v13 = *(_QWORD *)(v1 + v10);
  v56 = *(_QWORD *)(v12 + 8);
  v57 = v13;
  v55 = *(unsigned __int8 *)(v6 + 240);
  v14 = *(_QWORD *)(v6 + 248);
  v53 = *(_QWORD *)(v6 + 256);
  v54 = v14;
  v15 = *(_QWORD *)(v6 + 8);
  v51 = *(_QWORD *)(v6 + 16);
  v52 = v15;
  sub_100010634(v6 + 32, (uint64_t)v78);
  sub_100010634(v6 + 72, (uint64_t)v77);
  v66 = *(_QWORD *)(v6 + 112);
  v49 = *(_QWORD *)(v6 + 120);
  sub_100028CFC(v6 + 128, (uint64_t)v72);
  v16 = *(_QWORD *)(v6 + 160);
  v17 = *(_QWORD *)(v6 + 168);
  v73 = v16;
  v74 = v17;
  v65 = v16;
  v18 = *(_QWORD *)(v6 + 184);
  v75 = *(_QWORD *)(v6 + 176);
  v19 = v75;
  v76 = v18;
  sub_100028CFC(v6 + 128, (uint64_t)v71);
  v71[4] = v16;
  v71[5] = v17;
  v71[6] = v19;
  v71[7] = v18;
  sub_100028CFC(v6 + 192, (uint64_t)v70);
  v20 = *(_QWORD *)(v6 + 224);
  v45 = *(_QWORD *)(v6 + 232);
  v46 = v20;
  v47 = *(_QWORD *)(v1 + v4[7]);
  v21 = v47;
  sub_100010634(v6 + 272, (uint64_t)v69);
  v22 = *(_QWORD *)(v6 + 320);
  v48 = *(_QWORD *)(v6 + 312);
  v23 = v48;
  v24 = v50;
  sub_100042F74(v1 + v9[5], v50);
  sub_100010634(v6 + 328, (uint64_t)v68);
  sub_100010634(v6 + 368, (uint64_t)v67);
  v44 = *(_BYTE *)(v1 + v9[8]);
  v42 = v22;
  v43 = v24;
  *((_QWORD *)&v39 + 1) = v45;
  v38 = v17;
  v40 = v21;
  v41 = v23;
  *(_QWORD *)&v39 = v20;
  v25 = v52;
  v26 = v53;
  *((_QWORD *)&v37 + 1) = v53;
  v27 = v54;
  *(_QWORD *)&v37 = v54;
  v28 = v57;
  v29 = v60;
  v30 = v61;
  v31 = v62;
  v33 = v58;
  v32 = v59;
  sub_100147878((uint64_t)v60, (uint64_t)&protocol witness table for TTRRemindersListInteractor, v61, (uint64_t)&off_1005EED90, v62, v63, v58, (uint64_t)v59, v64, v57, v56, v55, v37, v52, v51, v78, v77, v66, v49,
    v72,
    v65,
    v38,
    v70,
    v39,
    v40,
    (uint64_t)&off_100606F60,
    v69,
    v41,
    v42,
    v43,
    v68,
    v67,
    v44);
  v34 = v29;
  swift_retain(v30);
  swift_unknownObjectRetain(v31);
  swift_retain(v33);
  v35 = v32;
  swift_unknownObjectRetain(v28);
  swift_retain(v27);
  swift_retain(v26);
  swift_unknownObjectRetain(v25);
  swift_unknownObjectRetain(v66);
  swift_unknownObjectRetain(v65);
  swift_unknownObjectRetain(v46);
  swift_retain(v47);
  swift_unknownObjectRetain(v48);
  return sub_100027F10(v71);
}

uint64_t TTRListDetailListViewModelSource.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for TTRIRemindersListAssembly()
{
  return objc_opt_self(_TtC9Reminders25TTRIRemindersListAssembly);
}

uint64_t type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(uint64_t a1)
{
  return sub_100007328(a1, qword_10063F2F0, (uint64_t)&nominal type descriptor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
}

uint64_t type metadata accessor for TTRIRemindersListAssembly.CommonParameters(uint64_t a1)
{
  return sub_100007328(a1, qword_10063F388, (uint64_t)&nominal type descriptor for TTRIRemindersListAssembly.CommonParameters);
}

uint64_t sub_100042F74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_1006463C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100042FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100043000(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for TTRIRemindersListAssembly.CommonComponents(a2, a1);
  return a2;
}

uint64_t sub_100043038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v15;
  _QWORD *v16;
  _QWORD v18[5];
  _QWORD v19[5];

  v19[3] = a5;
  v19[4] = a7;
  v15 = sub_100028D70(v19);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(v15, a2, a5);
  v18[3] = a6;
  v18[4] = a8;
  v16 = sub_100028D70(v18);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(v16, a3, a6);
  swift_allocObject(a4, 128, 7);
  return TTRReminderLocationOptionsProvider.init(store:meCardProvider:geoService:)(a1, v19, v18);
}

uint64_t sub_1000430F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  _QWORD *v19;
  _QWORD *v20;
  _QWORD v28[5];
  _QWORD v29[6];

  v29[3] = a13;
  v29[4] = a15;
  v19 = sub_100028D70(v29);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a13 - 8) + 32))(v19, a3, a13);
  v28[3] = a14;
  v28[4] = a16;
  v20 = sub_100028D70(v28);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a14 - 8) + 32))(v20, a4, a14);
  swift_allocObject(a12, *(unsigned int *)(a12 + 48), *(unsigned __int16 *)(a12 + 52));
  return TTRReminderTitleAttributesHarvester.init(queue:backgroundQueue:locationOptionsProvider:contactsProvider:store:excludedSuggestedAttributes:locale:timeZone:now:forTesting:)(a1, a2, v29, v28, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1000431D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD v23[5];
  _QWORD v24[5];
  _QWORD v25[5];

  v25[3] = a7;
  v25[4] = a10;
  v19 = sub_100028D70(v25);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(v19, a2, a7);
  v24[3] = a6;
  v24[4] = a9;
  v20 = sub_100028D70(v24);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(v20, a3, a6);
  v23[3] = a8;
  v23[4] = a11;
  v21 = sub_100028D70(v23);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(v21, a4, a8);
  swift_allocObject(a5, 160, 7);
  return TTRReminderTitleAttributesInteractor.init(harvester:styler:contactsProvider:locationOptionsProvider:)(a1, v25, v24, v23);
}

uint64_t sub_1000432C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;
  _QWORD v15[5];

  v15[3] = a6;
  v15[4] = a7;
  v13 = sub_100028D70(v15);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(v13, a1, a6);
  swift_allocObject(a5, 128, 7);
  return TTRParticipantAvatarProvider.init(contactsProvider:contactStoreCreator:queue:)(v15, a2, a3, a4);
}

uint64_t sub_100043358(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  _QWORD v16[5];
  __int128 v17[2];
  _QWORD v18[5];

  v18[3] = swift_getObjectType(a2, a2);
  v18[4] = &protocol witness table for TTRUserDefaults;
  v18[0] = a2;
  v4 = swift_allocObject(&unk_1005EBEF8, 24, 7);
  *(_QWORD *)(v4 + 16) = a1;
  sub_100010634((uint64_t)v18, (uint64_t)v17);
  v5 = type metadata accessor for TTRStoreReviewController();
  v16[3] = v5;
  v16[4] = &off_100607E08;
  v16[0] = swift_allocObject(v5, 16, 7);
  v6 = type metadata accessor for TTRIAppStoreProvider();
  v7 = swift_allocObject(v6, 152, 7);
  v8 = sub_100028D48((uint64_t)v16, v5);
  __chkstk_darwin(v8);
  v10 = (_QWORD *)((char *)&v16[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v11 + 16))(v10);
  v12 = *v10;
  *(_QWORD *)(v7 + 120) = v5;
  *(_QWORD *)(v7 + 128) = &off_100607E08;
  *(_QWORD *)(v7 + 96) = v12;
  *(_BYTE *)(v7 + 16) = 0;
  *(_QWORD *)(v7 + 72) = 0;
  *(_OWORD *)(v7 + 136) = xmmword_100520340;
  *(_QWORD *)(v7 + 24) = a1;
  sub_10002E37C(v17, v7 + 32);
  *(_QWORD *)(v7 + 80) = sub_1000438F4;
  *(_QWORD *)(v7 + 88) = v4;
  v13 = a1;
  sub_100027F10(v16);
  sub_100027F10(v18);
  return v7;
}

id sub_1000434B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v16;

  v8 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(a1);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v10);
  v11 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", a1);
  v12 = objc_msgSend(v11, "navigationBar");
  objc_msgSend(v12, "setPrefersLargeTitles:", 1);

  v13 = objc_msgSend(v11, "presentationController");
  if (v13)
  {
    v14 = v13;
    (*(void (**)(id, uint64_t, uint64_t))(a5 + 16))(v13, a4, a5);

  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, a4);
  return v11;
}

_QWORD *sub_1000435B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27[24];
  char v28[24];
  char v29[24];

  a5[3] = 0;
  swift_unknownObjectWeakInit(a5 + 2, 0);
  a5[9] = &_swiftEmptyDictionarySingleton;
  a5[11] = 0;
  v10 = (char *)a5 + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state;
  v11 = sub_10002A750(&qword_10063F268);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v10[*(int *)(type metadata accessor for TTRReminderListEditingPresenter.EditingState(0) + 20)] = 0;
  a5[6] = a1;
  a5[7] = &protocol witness table for TTRRemindersListInteractor;
  a5[4] = a2;
  a5[5] = a3;
  v12 = type metadata accessor for TTRInCellEditingPresenterManagingHelper(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v13 = a1;
  v14 = swift_unknownObjectRetain(a2);
  v15 = TTRInCellEditingPresenterManagingHelper.init(reminderEditingComponents:)(a4, v14);
  a5[12] = v15;
  v16 = type metadata accessor for TTRRemindersListEditingSessionProvider();
  v17 = (_QWORD *)swift_allocObject(v16, 80, 7);
  v17[3] = 0;
  swift_unknownObjectWeakInit(v17 + 2, 0);
  v17[9] = _swiftEmptyArrayStorage;
  v17[4] = v13;
  v17[5] = &protocol witness table for TTRRemindersListInteractor;
  v17[6] = a2;
  v17[7] = a3;
  sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
  v18 = v13;
  swift_unknownObjectRetain(a2);
  v20 = static OS_dispatch_queue.main.getter(v19);
  v21 = type metadata accessor for TTRDeferredAction(0);
  swift_allocObject(v21, 56, 7);
  v22 = TTRDeferredAction.init(queue:)(v20);
  v17[8] = v22;
  swift_beginAccess(v22 + 16, v29, 1, 0);
  *(_QWORD *)(v22 + 24) = &off_1005FFF88;
  v23 = swift_unknownObjectWeakAssign(v22 + 16, v17);
  a5[8] = v17;
  v24 = static OS_dispatch_queue.main.getter(v23);
  swift_allocObject(v21, 56, 7);
  v25 = TTRDeferredAction.init(queue:)(v24);
  a5[10] = v25;
  swift_beginAccess(v15 + 16, v28, 1, 0);
  *(_QWORD *)(v15 + 24) = &off_100606E80;
  swift_unknownObjectWeakAssign(v15 + 16, a5);
  v17[3] = &off_100606EA8;
  swift_unknownObjectWeakAssign(v17 + 2, a5);
  swift_beginAccess(v25 + 16, v27, 1, 0);
  *(_QWORD *)(v25 + 24) = &off_100606E98;
  swift_unknownObjectWeakAssign(v25 + 16, a5);
  return a5;
}

uint64_t sub_100043844(uint64_t a1)
{
  destroy for TTRIRemindersListAssembly.CommonComponents(a1);
  return a1;
}

uint64_t sub_100043870(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

id sub_1000438B0(id result)
{
  if ((unint64_t)result >= 2)
    return result;
  return result;
}

void sub_1000438C0(id a1)
{
  if ((unint64_t)a1 >= 2)

}

uint64_t sub_1000438D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1000438F4()
{
  uint64_t v0;

  return sub_100358B78(*(_QWORD *)(v0 + 16));
}

uint64_t destroy for TTRIRemindersListAssembly.CommonComponents(uint64_t a1)
{

  swift_unknownObjectRelease(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 24));
  sub_100027F10((_QWORD *)(a1 + 32));
  sub_100027F10((_QWORD *)(a1 + 72));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 112));
  sub_100027F10((_QWORD *)(a1 + 128));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 160));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 176));
  sub_100027F10((_QWORD *)(a1 + 192));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 224));
  swift_release(*(_QWORD *)(a1 + 248));
  swift_release(*(_QWORD *)(a1 + 256));

  sub_100027F10((_QWORD *)(a1 + 272));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 312));
  sub_100027F10((_QWORD *)(a1 + 328));
  return sub_100027F10((_QWORD *)(a1 + 368));
}

uint64_t initializeWithCopy for TTRIRemindersListAssembly.CommonComponents(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  id v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  __int128 v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  __int128 v35;
  __int128 v36;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v35 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v35;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = a1 + 32;
  v7 = a2 + 32;
  v8 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  v11 = v4;
  swift_unknownObjectRetain(v35);
  swift_retain(v5);
  v10(v6, v7, v9);
  v12 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 96) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 72, a2 + 72);
  v13 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 112) = v13;
  v14 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 152) = v14;
  v15 = **(void (***)(uint64_t, uint64_t, uint64_t))(v14 - 8);
  swift_unknownObjectRetain(v13);
  v15(a1 + 128, a2 + 128, v14);
  v16 = *(_OWORD *)(a2 + 160);
  v36 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = v16;
  *(_OWORD *)(a1 + 176) = v36;
  v17 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 216) = v17;
  v18 = **(void (***)(uint64_t, uint64_t, uint64_t))(v17 - 8);
  swift_unknownObjectRetain(v16);
  swift_unknownObjectRetain(v36);
  v18(a1 + 192, a2 + 192, v17);
  v19 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 224) = v19;
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  v20 = *(_QWORD *)(a2 + 248);
  v21 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = v20;
  *(_QWORD *)(a1 + 256) = v21;
  v22 = *(void **)(a2 + 264);
  *(_QWORD *)(a1 + 264) = v22;
  v24 = *(_QWORD *)(a2 + 296);
  v23 = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = v24;
  *(_QWORD *)(a1 + 304) = v23;
  v25 = **(void (***)(uint64_t, uint64_t, uint64_t))(v24 - 8);
  swift_unknownObjectRetain(v19);
  swift_retain(v20);
  swift_retain(v21);
  v26 = v22;
  v25(a1 + 272, a2 + 272, v24);
  v27 = *(_QWORD *)(a2 + 312);
  v28 = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 312) = v27;
  *(_QWORD *)(a1 + 320) = v28;
  v29 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 352) = v29;
  v30 = v29;
  v31 = **(void (***)(uint64_t, uint64_t, uint64_t))(v29 - 8);
  swift_unknownObjectRetain(v27);
  v31(a1 + 328, a2 + 328, v30);
  v32 = *(_QWORD *)(a2 + 392);
  v33 = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 392) = v32;
  *(_QWORD *)(a1 + 400) = v33;
  (**(void (***)(uint64_t, uint64_t))(v32 - 8))(a1 + 368, a2 + 368);
  return a1;
}

uint64_t assignWithCopy for TTRIRemindersListAssembly.CommonComponents(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  swift_unknownObjectRetain(v7);
  swift_unknownObjectRelease(v9);
  *(_QWORD *)(a1 + 16) = v8;
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v10;
  swift_retain(v10);
  swift_release(v11);
  sub_100043D5C((_QWORD *)(a1 + 32), (_QWORD *)(a2 + 32));
  sub_100043D5C((_QWORD *)(a1 + 72), (_QWORD *)(a2 + 72));
  v12 = *(_QWORD *)(a2 + 112);
  v13 = *(_QWORD *)(a2 + 120);
  v14 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 112) = v12;
  swift_unknownObjectRetain(v12);
  swift_unknownObjectRelease(v14);
  *(_QWORD *)(a1 + 120) = v13;
  sub_100043EC4((_QWORD *)(a1 + 128), (_QWORD *)(a2 + 128));
  v15 = *(_QWORD *)(a2 + 160);
  v16 = *(_QWORD *)(a2 + 168);
  v17 = *(_QWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 160) = v15;
  swift_unknownObjectRetain(v15);
  swift_unknownObjectRelease(v17);
  *(_QWORD *)(a1 + 168) = v16;
  v18 = *(_QWORD *)(a2 + 176);
  v19 = *(_QWORD *)(a2 + 184);
  v20 = *(_QWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 176) = v18;
  swift_unknownObjectRetain(v18);
  swift_unknownObjectRelease(v20);
  *(_QWORD *)(a1 + 184) = v19;
  sub_100043EC4((_QWORD *)(a1 + 192), (_QWORD *)(a2 + 192));
  v21 = *(_QWORD *)(a2 + 224);
  v22 = *(_QWORD *)(a2 + 232);
  v23 = *(_QWORD *)(a1 + 224);
  *(_QWORD *)(a1 + 224) = v21;
  swift_unknownObjectRetain(v21);
  swift_unknownObjectRelease(v23);
  *(_QWORD *)(a1 + 232) = v22;
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  v24 = *(_QWORD *)(a2 + 248);
  v25 = *(_QWORD *)(a1 + 248);
  *(_QWORD *)(a1 + 248) = v24;
  swift_retain(v24);
  swift_release(v25);
  v26 = *(_QWORD *)(a2 + 256);
  v27 = *(_QWORD *)(a1 + 256);
  *(_QWORD *)(a1 + 256) = v26;
  swift_retain(v26);
  swift_release(v27);
  v28 = *(void **)(a2 + 264);
  v29 = *(void **)(a1 + 264);
  *(_QWORD *)(a1 + 264) = v28;
  v30 = v28;

  sub_100043D5C((_QWORD *)(a1 + 272), (_QWORD *)(a2 + 272));
  v31 = *(_QWORD *)(a2 + 312);
  v32 = *(_QWORD *)(a2 + 320);
  v33 = *(_QWORD *)(a1 + 312);
  *(_QWORD *)(a1 + 312) = v31;
  swift_unknownObjectRetain(v31);
  swift_unknownObjectRelease(v33);
  *(_QWORD *)(a1 + 320) = v32;
  sub_100043D5C((_QWORD *)(a1 + 328), (_QWORD *)(a2 + 328));
  sub_100043D5C((_QWORD *)(a1 + 368), (_QWORD *)(a2 + 368));
  return a1;
}

_QWORD *sub_100043D5C(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

_QWORD *sub_100043EC4(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

void *initializeWithTake for TTRIRemindersListAssembly.CommonComponents(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x198uLL);
}

uint64_t assignWithTake for TTRIRemindersListAssembly.CommonComponents(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_unknownObjectRelease(v5);
  v6 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v6);
  sub_100027F10((_QWORD *)(a1 + 32));
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  sub_100027F10((_QWORD *)(a1 + 72));
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v8 = *(_QWORD *)(a2 + 112);
  v9 = *(_QWORD *)(a2 + 120);
  v10 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v8;
  swift_unknownObjectRelease(v10);
  *(_QWORD *)(a1 + 120) = v9;
  sub_100027F10((_QWORD *)(a1 + 128));
  v11 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v11;
  v12 = *(_QWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_unknownObjectRelease(v12);
  v13 = *(_QWORD *)(a2 + 184);
  v14 = *(_QWORD *)(a1 + 176);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  swift_unknownObjectRelease(v14);
  *(_QWORD *)(a1 + 184) = v13;
  sub_100027F10((_QWORD *)(a1 + 192));
  v15 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v15;
  v16 = *(_QWORD *)(a2 + 232);
  v17 = *(_QWORD *)(a1 + 224);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_unknownObjectRelease(v17);
  *(_QWORD *)(a1 + 232) = v16;
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  v18 = *(_QWORD *)(a1 + 248);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_release(v18);
  v19 = *(_QWORD *)(a1 + 256);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_release(v19);
  v20 = *(void **)(a1 + 264);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);

  sub_100027F10((_QWORD *)(a1 + 272));
  v21 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v21;
  v22 = *(_QWORD *)(a2 + 312);
  v23 = *(_QWORD *)(a2 + 320);
  v24 = *(_QWORD *)(a1 + 312);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = v22;
  swift_unknownObjectRelease(v24);
  *(_QWORD *)(a1 + 320) = v23;
  sub_100027F10((_QWORD *)(a1 + 328));
  v25 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v25;
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  sub_100027F10((_QWORD *)(a1 + 368));
  v26 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v26;
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListAssembly.CommonComponents(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 408))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListAssembly.CommonComponents(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 408) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 408) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListAssembly.CommonComponents()
{
  return &type metadata for TTRIRemindersListAssembly.CommonComponents;
}

char *sub_1000442C4(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  int *v8;
  uint64_t v9;
  void **v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(void **, uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  char *v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  void *v20;
  id v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void **v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void **v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(void **, uint64_t, uint64_t);
  id v36;
  uint64_t v37;
  void *v38;
  void **v39;
  id v40;
  void **v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  id v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t, uint64_t);
  id v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  void (*v80)(char *, char *, uint64_t, __n128);
  __n128 v81;
  __int128 v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t, __n128);
  __n128 v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  void **v92;
  void (*v93)(char *, char *, uint64_t);
  id v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  void (*v99)(char *, char *, uint64_t, __n128);
  __n128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  void **v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  void **__dst;
  void *__dsta[2];
  void *__dstb[2];

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) == 0)
  {
    v8 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
    v9 = v8[5];
    v10 = (void **)((char *)a1 + v9);
    v11 = (void **)((char *)a2 + v9);
    v12 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v13 + 48);
    v15 = v4;
    if (v14(v11, 1, v12))
    {
      v16 = sub_10002A750((uint64_t *)&unk_1006463C0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
LABEL_39:
      v63 = v8[6];
      v64 = *(void **)((char *)a2 + v63);
      *(void **)((char *)a1 + v63) = v64;
      v65 = v8[7];
      *(_OWORD *)__dsta = *(_OWORD *)((char *)a2 + v65);
      *(_OWORD *)((char *)a1 + v65) = *(_OWORD *)__dsta;
      *((_BYTE *)a1 + v8[8]) = *((_BYTE *)a2 + v8[8]);
      v66 = *(int *)(a3 + 20);
      v67 = (char *)a1 + v66;
      v68 = (char *)a2 + v66;
      v69 = *(void **)((char *)a2 + v66);
      *(_QWORD *)v67 = v69;
      v108 = *(_OWORD *)((char *)a2 + v66 + 8);
      *(_OWORD *)(v67 + 8) = v108;
      v70 = *(uint64_t *)((char *)a2 + v66 + 24);
      *((_QWORD *)v67 + 3) = v70;
      v71 = (uint64_t)a1 + v66 + 32;
      v72 = (uint64_t)a2 + v66 + 32;
      v73 = *(_OWORD *)((char *)a2 + v66 + 56);
      *(_OWORD *)(v67 + 56) = v73;
      v74 = v73;
      v110 = a3;
      v75 = **(void (***)(uint64_t, uint64_t, uint64_t))(v73 - 8);
      swift_retain(v64);
      swift_unknownObjectRetain(__dsta[0]);
      v76 = v69;
      swift_unknownObjectRetain(v108);
      swift_retain(v70);
      v75(v71, v72, v74);
      v77 = *((_OWORD *)v68 + 6);
      *((_OWORD *)v67 + 6) = v77;
      (**(void (***)(uint64_t, uint64_t))(v77 - 8))((uint64_t)(v67 + 72), (uint64_t)(v68 + 72));
      v78 = *((_OWORD *)v68 + 7);
      *((_OWORD *)v67 + 7) = v78;
      v79 = *((_QWORD *)v68 + 19);
      *((_QWORD *)v67 + 19) = v79;
      v80 = **(void (***)(char *, char *, uint64_t, __n128))(v79 - 8);
      v81 = swift_unknownObjectRetain(v78);
      v80(v67 + 128, v68 + 128, v79, v81);
      v82 = *((_OWORD *)v68 + 10);
      *(_OWORD *)__dstb = *((_OWORD *)v68 + 11);
      *((_OWORD *)v67 + 10) = v82;
      *((_OWORD *)v67 + 11) = *(_OWORD *)__dstb;
      v83 = *((_QWORD *)v68 + 27);
      *((_QWORD *)v67 + 27) = v83;
      v84 = **(void (***)(char *, char *, uint64_t, __n128))(v83 - 8);
      swift_unknownObjectRetain(v82);
      v85 = swift_unknownObjectRetain(__dstb[0]);
      v84(v67 + 192, v68 + 192, v83, v85);
      v86 = *((_OWORD *)v68 + 14);
      *((_OWORD *)v67 + 14) = v86;
      v67[240] = v68[240];
      v87 = *((_QWORD *)v68 + 31);
      v88 = *((_QWORD *)v68 + 32);
      *((_QWORD *)v67 + 31) = v87;
      *((_QWORD *)v67 + 32) = v88;
      v89 = (void *)*((_QWORD *)v68 + 33);
      *((_QWORD *)v67 + 33) = v89;
      v91 = *((_QWORD *)v68 + 37);
      v90 = *((_QWORD *)v68 + 38);
      *((_QWORD *)v67 + 37) = v91;
      *((_QWORD *)v67 + 38) = v90;
      __dstb[0] = a1;
      v92 = a2;
      v93 = **(void (***)(char *, char *, uint64_t))(v91 - 8);
      swift_unknownObjectRetain(v86);
      swift_retain(v87);
      swift_retain(v88);
      v94 = v89;
      v93(v67 + 272, v68 + 272, v91);
      v95 = *((_QWORD *)v68 + 39);
      v96 = *((_QWORD *)v68 + 40);
      *((_QWORD *)v67 + 39) = v95;
      *((_QWORD *)v67 + 40) = v96;
      v97 = *((_OWORD *)v68 + 22);
      *((_OWORD *)v67 + 22) = v97;
      v98 = v97;
      v99 = **(void (***)(char *, char *, uint64_t, __n128))(v97 - 8);
      v100 = swift_unknownObjectRetain(v95);
      v99(v67 + 328, v68 + 328, v98, v100);
      v101 = *((_QWORD *)v68 + 49);
      v102 = *((_QWORD *)v68 + 50);
      *((_QWORD *)v67 + 49) = v101;
      *((_QWORD *)v67 + 50) = v102;
      (**(void (***)(uint64_t, uint64_t))(v101 - 8))((uint64_t)(v67 + 368), (uint64_t)(v68 + 368));
      v103 = *(int *)(v110 + 24);
      v104 = *(int *)(v110 + 28);
      v105 = *(_OWORD *)((char *)v92 + v103);
      *(_OWORD *)((char *)__dstb[0] + v103) = v105;
      v4 = *(char **)((char *)v92 + v104);
      v17 = (char *)__dstb[0];
      *(_QWORD *)((char *)__dstb[0] + v104) = v4;
      swift_unknownObjectRetain(v105);
      goto LABEL_40;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
    if (EnumCaseMultiPayload == 2)
    {
      v25 = *v11;
      *v10 = *v11;
      v26 = v25;
      v27 = v10;
      v28 = v12;
      v29 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v109 = v13;
      v30 = *v11;
      *v10 = *v11;
      v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v107 = v10;
      __dst = (void **)((char *)v10 + v31);
      v32 = (void **)((char *)v11 + v31);
      v33 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v34 = *(_QWORD *)(v33 - 8);
      v35 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v34 + 48);
      v36 = v30;
      if (v35(v32, 1, v33))
      {
        v37 = sub_10002A750(&qword_100644980);
        memcpy(__dst, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        v13 = v109;
        v10 = v107;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v32, v33))
        {
          case 1u:
            v38 = *v32;
            v39 = __dst;
            *__dst = *v32;
            v40 = v38;
            v41 = __dst;
            v42 = v33;
            v43 = 1;
            goto LABEL_34;
          case 2u:
            v53 = type metadata accessor for Date(0);
            v39 = __dst;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(__dst, v32, v53);
            v41 = __dst;
            v42 = v33;
            v43 = 2;
            goto LABEL_34;
          case 3u:
            v54 = type metadata accessor for Date(0);
            v39 = __dst;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(__dst, v32, v54);
            v41 = __dst;
            v42 = v33;
            v43 = 3;
            goto LABEL_34;
          case 4u:
            v55 = type metadata accessor for Date(0);
            v39 = __dst;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(__dst, v32, v55);
            v41 = __dst;
            v42 = v33;
            v43 = 4;
            goto LABEL_34;
          case 5u:
            v62 = type metadata accessor for Date(0);
            v39 = __dst;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(__dst, v32, v62);
            v41 = __dst;
            v42 = v33;
            v43 = 5;
            goto LABEL_34;
          case 6u:
            v56 = type metadata accessor for Date(0);
            v39 = __dst;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(__dst, v32, v56);
            v41 = __dst;
            v42 = v33;
            v43 = 6;
            goto LABEL_34;
          case 8u:
            v58 = *v32;
            v39 = __dst;
            *__dst = *v32;
            v59 = v58;
            v41 = __dst;
            v42 = v33;
            v43 = 8;
            goto LABEL_34;
          case 9u:
            v60 = *v32;
            v39 = __dst;
            *__dst = *v32;
            v61 = v60;
            v41 = __dst;
            v42 = v33;
            v43 = 9;
LABEL_34:
            swift_storeEnumTagMultiPayload(v41, v42, v43);
            v57 = v34;
            break;
          default:
            v39 = __dst;
            memcpy(__dst, v32, *(_QWORD *)(v34 + 64));
            v57 = v34;
            break;
        }
        v13 = v109;
        v10 = v107;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v57 + 56))(v39, 0, 1, v33);
      }
      v27 = v10;
      v28 = v12;
      v29 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v10, v11, *(_QWORD *)(v13 + 64));
LABEL_38:
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        goto LABEL_39;
      }
      v19 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v11, v19))
      {
        case 1u:
          v20 = *v11;
          *v10 = *v11;
          v21 = v20;
          v22 = v10;
          v23 = v19;
          v24 = 1;
          goto LABEL_24;
        case 2u:
          v44 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v10, v11, v44);
          v22 = v10;
          v23 = v19;
          v24 = 2;
          goto LABEL_24;
        case 3u:
          v45 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v10, v11, v45);
          v22 = v10;
          v23 = v19;
          v24 = 3;
          goto LABEL_24;
        case 4u:
          v46 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v10, v11, v46);
          v22 = v10;
          v23 = v19;
          v24 = 4;
          goto LABEL_24;
        case 5u:
          v47 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v10, v11, v47);
          v22 = v10;
          v23 = v19;
          v24 = 5;
          goto LABEL_24;
        case 6u:
          v48 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v10, v11, v48);
          v22 = v10;
          v23 = v19;
          v24 = 6;
          goto LABEL_24;
        case 8u:
          v49 = *v11;
          *v10 = *v11;
          v50 = v49;
          v22 = v10;
          v23 = v19;
          v24 = 8;
          goto LABEL_24;
        case 9u:
          v51 = *v11;
          *v10 = *v11;
          v52 = v51;
          v22 = v10;
          v23 = v19;
          v24 = 9;
LABEL_24:
          swift_storeEnumTagMultiPayload(v22, v23, v24);
          break;
        default:
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
          break;
      }
      v27 = v10;
      v28 = v12;
      v29 = 0;
    }
    swift_storeEnumTagMultiPayload(v27, v28, v29);
    goto LABEL_38;
  }
  v17 = &v4[(v3 + 16) & ~(unint64_t)v3];
LABEL_40:
  swift_retain(v4);
  return v17;
}

double sub_100044A58(id *a1, int *a2)
{
  int *v4;
  id *v5;
  uint64_t v6;
  char *v7;
  double result;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  v5 = (id *)((char *)a1 + v4[5]);
  v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v6);
    switch(EnumCaseMultiPayload)
    {
      case 2:
LABEL_10:

        break;
      case 1:

        v5 = (id *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v5, 1, v11))
        {
          switch(swift_getEnumCaseMultiPayload(v5, v11))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_10;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_9:
              v12 = type metadata accessor for Date(0);
              (*(void (**)(id *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v5, v12);
              break;
            default:
              goto LABEL_2;
          }
        }
        break;
      case 0:
        v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v5, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_10;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_9;
          default:
            goto LABEL_2;
        }
    }
  }
LABEL_2:
  swift_release(*(id *)((char *)a1 + v4[6]));
  swift_unknownObjectRelease(*(id *)((char *)a1 + v4[7]));
  v7 = (char *)a1 + a2[5];

  swift_unknownObjectRelease(*((_QWORD *)v7 + 1));
  swift_release(*((_QWORD *)v7 + 3));
  sub_100027F10((_QWORD *)v7 + 4);
  sub_100027F10((_QWORD *)v7 + 9);
  swift_unknownObjectRelease(*((_QWORD *)v7 + 14));
  sub_100027F10((_QWORD *)v7 + 16);
  swift_unknownObjectRelease(*((_QWORD *)v7 + 20));
  swift_unknownObjectRelease(*((_QWORD *)v7 + 22));
  sub_100027F10((_QWORD *)v7 + 24);
  swift_unknownObjectRelease(*((_QWORD *)v7 + 28));
  swift_release(*((_QWORD *)v7 + 31));
  swift_release(*((_QWORD *)v7 + 32));

  sub_100027F10((_QWORD *)v7 + 34);
  swift_unknownObjectRelease(*((_QWORD *)v7 + 39));
  sub_100027F10((_QWORD *)v7 + 41);
  sub_100027F10((_QWORD *)v7 + 46);
  swift_unknownObjectRelease(*(id *)((char *)a1 + a2[6]));
  *(_QWORD *)&result = swift_release(*(id *)((char *)a1 + a2[7])).n128_u64[0];
  return result;
}

void **sub_100044C84(void **a1, void **a2, int *a3)
{
  void *v5;
  int *v6;
  uint64_t v7;
  void **v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(void **, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  void *v17;
  id v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void **v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(void **, uint64_t, uint64_t);
  id v33;
  uint64_t v34;
  void *v35;
  void **v36;
  id v37;
  void **v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  void *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, uint64_t);
  id v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t, __n128);
  __n128 v78;
  __int128 v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t, __n128);
  __n128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  id v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t, __n128);
  __n128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  void *v102;
  uint64_t v104;
  __int128 v105;
  void **__dst;
  void *__dsta[2];
  void *__dstb[2];

  v5 = *a2;
  *a1 = *a2;
  v6 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  v7 = v6[5];
  v8 = (void **)((char *)a1 + v7);
  v9 = (void **)((char *)a2 + v7);
  v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v11 + 48);
  v13 = v5;
  if (!v12(v9, 1, v10))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
    if (EnumCaseMultiPayload == 2)
    {
      v22 = *v9;
      *v8 = *v9;
      v23 = v22;
      v24 = v8;
      v25 = v10;
      v26 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v104 = v11;
      v27 = *v9;
      *v8 = *v9;
      v28 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      __dst = (void **)((char *)v8 + v28);
      v29 = (void **)((char *)v9 + v28);
      v30 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v31 = *(_QWORD *)(v30 - 8);
      v32 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v31 + 48);
      v33 = v27;
      if (v32(v29, 1, v30))
      {
        v34 = sub_10002A750(&qword_100644980);
        memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        v11 = v104;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v29, v30))
        {
          case 1u:
            v35 = *v29;
            v36 = __dst;
            *__dst = *v29;
            v37 = v35;
            v38 = __dst;
            v39 = v30;
            v40 = 1;
            goto LABEL_32;
          case 2u:
            v50 = type metadata accessor for Date(0);
            v36 = __dst;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(__dst, v29, v50);
            v38 = __dst;
            v39 = v30;
            v40 = 2;
            goto LABEL_32;
          case 3u:
            v51 = type metadata accessor for Date(0);
            v36 = __dst;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(__dst, v29, v51);
            v38 = __dst;
            v39 = v30;
            v40 = 3;
            goto LABEL_32;
          case 4u:
            v52 = type metadata accessor for Date(0);
            v36 = __dst;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(__dst, v29, v52);
            v38 = __dst;
            v39 = v30;
            v40 = 4;
            goto LABEL_32;
          case 5u:
            v59 = type metadata accessor for Date(0);
            v36 = __dst;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(__dst, v29, v59);
            v38 = __dst;
            v39 = v30;
            v40 = 5;
            goto LABEL_32;
          case 6u:
            v53 = type metadata accessor for Date(0);
            v36 = __dst;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(__dst, v29, v53);
            v38 = __dst;
            v39 = v30;
            v40 = 6;
            goto LABEL_32;
          case 8u:
            v55 = *v29;
            v36 = __dst;
            *__dst = *v29;
            v56 = v55;
            v38 = __dst;
            v39 = v30;
            v40 = 8;
            goto LABEL_32;
          case 9u:
            v57 = *v29;
            v36 = __dst;
            *__dst = *v29;
            v58 = v57;
            v38 = __dst;
            v39 = v30;
            v40 = 9;
LABEL_32:
            swift_storeEnumTagMultiPayload(v38, v39, v40);
            v54 = v31;
            break;
          default:
            v36 = __dst;
            memcpy(__dst, v29, *(_QWORD *)(v31 + 64));
            v54 = v31;
            break;
        }
        v11 = v104;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v54 + 56))(v36, 0, 1, v30);
      }
      v24 = v8;
      v25 = v10;
      v26 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v8, v9, *(_QWORD *)(v11 + 64));
LABEL_36:
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
        goto LABEL_37;
      }
      v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v9, v16))
      {
        case 1u:
          v17 = *v9;
          *v8 = *v9;
          v18 = v17;
          v19 = v8;
          v20 = v16;
          v21 = 1;
          goto LABEL_22;
        case 2u:
          v41 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v8, v9, v41);
          v19 = v8;
          v20 = v16;
          v21 = 2;
          goto LABEL_22;
        case 3u:
          v42 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v8, v9, v42);
          v19 = v8;
          v20 = v16;
          v21 = 3;
          goto LABEL_22;
        case 4u:
          v43 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v8, v9, v43);
          v19 = v8;
          v20 = v16;
          v21 = 4;
          goto LABEL_22;
        case 5u:
          v44 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v8, v9, v44);
          v19 = v8;
          v20 = v16;
          v21 = 5;
          goto LABEL_22;
        case 6u:
          v45 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v8, v9, v45);
          v19 = v8;
          v20 = v16;
          v21 = 6;
          goto LABEL_22;
        case 8u:
          v46 = *v9;
          *v8 = *v9;
          v47 = v46;
          v19 = v8;
          v20 = v16;
          v21 = 8;
          goto LABEL_22;
        case 9u:
          v48 = *v9;
          *v8 = *v9;
          v49 = v48;
          v19 = v8;
          v20 = v16;
          v21 = 9;
LABEL_22:
          swift_storeEnumTagMultiPayload(v19, v20, v21);
          break;
        default:
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
          break;
      }
      v24 = v8;
      v25 = v10;
      v26 = 0;
    }
    swift_storeEnumTagMultiPayload(v24, v25, v26);
    goto LABEL_36;
  }
  v14 = sub_10002A750((uint64_t *)&unk_1006463C0);
  memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_37:
  v60 = v6[6];
  v61 = *(void **)((char *)a2 + v60);
  *(void **)((char *)a1 + v60) = v61;
  v62 = v6[7];
  *(_OWORD *)__dsta = *(_OWORD *)((char *)a2 + v62);
  *(_OWORD *)((char *)a1 + v62) = *(_OWORD *)__dsta;
  *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
  v63 = a3[5];
  v64 = (char *)a1 + v63;
  v65 = (char *)a2 + v63;
  v66 = *(void **)((char *)a2 + v63);
  *(_QWORD *)v64 = v66;
  v105 = *(_OWORD *)((char *)a2 + v63 + 8);
  *(_OWORD *)(v64 + 8) = v105;
  v67 = *(uint64_t *)((char *)a2 + v63 + 24);
  *((_QWORD *)v64 + 3) = v67;
  v68 = (uint64_t)a1 + v63 + 32;
  v69 = (uint64_t)a2 + v63 + 32;
  v70 = *(_OWORD *)((char *)a2 + v63 + 56);
  *(_OWORD *)(v64 + 56) = v70;
  v71 = v70;
  v72 = **(void (***)(uint64_t, uint64_t, uint64_t))(v70 - 8);
  swift_retain(v61);
  swift_unknownObjectRetain(__dsta[0]);
  v73 = v66;
  swift_unknownObjectRetain(v105);
  swift_retain(v67);
  v72(v68, v69, v71);
  v74 = *((_OWORD *)v65 + 6);
  *((_OWORD *)v64 + 6) = v74;
  (**(void (***)(uint64_t, uint64_t))(v74 - 8))((uint64_t)(v64 + 72), (uint64_t)(v65 + 72));
  v75 = *((_OWORD *)v65 + 7);
  *((_OWORD *)v64 + 7) = v75;
  v76 = *((_QWORD *)v65 + 19);
  *((_QWORD *)v64 + 19) = v76;
  v77 = **(void (***)(char *, char *, uint64_t, __n128))(v76 - 8);
  v78 = swift_unknownObjectRetain(v75);
  v77(v64 + 128, v65 + 128, v76, v78);
  v79 = *((_OWORD *)v65 + 10);
  *(_OWORD *)__dstb = *((_OWORD *)v65 + 11);
  *((_OWORD *)v64 + 10) = v79;
  *((_OWORD *)v64 + 11) = *(_OWORD *)__dstb;
  v80 = *((_QWORD *)v65 + 27);
  *((_QWORD *)v64 + 27) = v80;
  v81 = **(void (***)(char *, char *, uint64_t, __n128))(v80 - 8);
  swift_unknownObjectRetain(v79);
  v82 = swift_unknownObjectRetain(__dstb[0]);
  v81(v64 + 192, v65 + 192, v80, v82);
  v83 = *((_OWORD *)v65 + 14);
  *((_OWORD *)v64 + 14) = v83;
  v64[240] = v65[240];
  v84 = *((_QWORD *)v65 + 31);
  v85 = *((_QWORD *)v65 + 32);
  *((_QWORD *)v64 + 31) = v84;
  *((_QWORD *)v64 + 32) = v85;
  v86 = (void *)*((_QWORD *)v65 + 33);
  *((_QWORD *)v64 + 33) = v86;
  v88 = *((_QWORD *)v65 + 37);
  v87 = *((_QWORD *)v65 + 38);
  *((_QWORD *)v64 + 37) = v88;
  *((_QWORD *)v64 + 38) = v87;
  __dstb[0] = a2;
  v89 = **(void (***)(char *, char *, uint64_t))(v88 - 8);
  swift_unknownObjectRetain(v83);
  swift_retain(v84);
  swift_retain(v85);
  v90 = v86;
  v89(v64 + 272, v65 + 272, v88);
  v91 = *((_QWORD *)v65 + 39);
  v92 = *((_QWORD *)v65 + 40);
  *((_QWORD *)v64 + 39) = v91;
  *((_QWORD *)v64 + 40) = v92;
  v93 = *((_OWORD *)v65 + 22);
  *((_OWORD *)v64 + 22) = v93;
  v94 = v93;
  v95 = **(void (***)(char *, char *, uint64_t, __n128))(v93 - 8);
  v96 = swift_unknownObjectRetain(v91);
  v95(v64 + 328, v65 + 328, v94, v96);
  v97 = *((_QWORD *)v65 + 49);
  v98 = *((_QWORD *)v65 + 50);
  *((_QWORD *)v64 + 49) = v97;
  *((_QWORD *)v64 + 50) = v98;
  (**(void (***)(uint64_t, uint64_t))(v97 - 8))((uint64_t)(v64 + 368), (uint64_t)(v65 + 368));
  v99 = a3[6];
  v100 = a3[7];
  v101 = *(_OWORD *)((char *)__dstb[0] + v99);
  *(_OWORD *)((char *)a1 + v99) = v101;
  v102 = *(void **)((char *)__dstb[0] + v100);
  *(void **)((char *)a1 + v100) = v102;
  swift_unknownObjectRetain(v101);
  swift_retain(v102);
  return a1;
}

void **sub_1000453E8(void **a1, void **a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  int *v9;
  uint64_t v10;
  void **v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void **, uint64_t, uint64_t);
  int v16;
  int v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  void *v20;
  id v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  size_t v25;
  int v26;
  uint64_t v27;
  void *v28;
  id v29;
  void **v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  void **v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(void **, uint64_t, uint64_t);
  id v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(void **, uint64_t, uint64_t);
  id v52;
  uint64_t v53;
  void *v54;
  id v55;
  void **v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  id v60;
  void **v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  void *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  id v79;
  void *v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  id v89;
  void *v90;
  id v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  void *v104;
  void *v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  void *v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  id v151;
  void *v152;
  id v153;
  int *v154;
  void **v155;
  void **v156;
  void **__dst;
  void **__dsta;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  v10 = v9[5];
  v11 = (void **)((char *)a1 + v10);
  v12 = (void **)((char *)a2 + v10);
  v13 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v13);
      if (EnumCaseMultiPayload == 2)
      {
        v33 = *v12;
        *v11 = *v12;
        v34 = v33;
        v35 = v11;
        v36 = v13;
        v37 = 2;
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v154 = a3;
        v38 = *v12;
        *v11 = *v12;
        v39 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v155 = (void **)((char *)v12 + v39);
        __dst = (void **)((char *)v11 + v39);
        v40 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v41 = *(_QWORD *)(v40 - 8);
        v42 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v41 + 48);
        v43 = v38;
        if (v42(v155, 1, v40))
        {
          v44 = sub_10002A750(&qword_100644980);
          memcpy(__dst, v155, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
          a3 = v154;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v155, v40))
          {
            case 1u:
              v54 = *v155;
              *__dst = *v155;
              v55 = v54;
              v56 = __dst;
              v57 = v40;
              v58 = 1;
              goto LABEL_58;
            case 2u:
              v82 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(__dst, v155, v82);
              v56 = __dst;
              v57 = v40;
              v58 = 2;
              goto LABEL_58;
            case 3u:
              v83 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(__dst, v155, v83);
              v56 = __dst;
              v57 = v40;
              v58 = 3;
              goto LABEL_58;
            case 4u:
              v84 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(__dst, v155, v84);
              v56 = __dst;
              v57 = v40;
              v58 = 4;
              goto LABEL_58;
            case 5u:
              v85 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(__dst, v155, v85);
              v56 = __dst;
              v57 = v40;
              v58 = 5;
              goto LABEL_58;
            case 6u:
              v86 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(__dst, v155, v86);
              v56 = __dst;
              v57 = v40;
              v58 = 6;
              goto LABEL_58;
            case 8u:
              v88 = *v155;
              *__dst = *v155;
              v89 = v88;
              v56 = __dst;
              v57 = v40;
              v58 = 8;
              goto LABEL_58;
            case 9u:
              v90 = *v155;
              *__dst = *v155;
              v91 = v90;
              v56 = __dst;
              v57 = v40;
              v58 = 9;
LABEL_58:
              swift_storeEnumTagMultiPayload(v56, v57, v58);
              v87 = v41;
              break;
            default:
              memcpy(__dst, v155, *(_QWORD *)(v41 + 64));
              v87 = v41;
              break;
          }
          a3 = v154;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v87 + 56))(__dst, 0, 1, v40);
        }
        v35 = v11;
        v36 = v13;
        v37 = 1;
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v11, v12, *(_QWORD *)(v14 + 64));
LABEL_62:
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
          goto LABEL_63;
        }
        v19 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v12, v19))
        {
          case 1u:
            v20 = *v12;
            *v11 = *v12;
            v21 = v20;
            v22 = v11;
            v23 = v19;
            v24 = 1;
            goto LABEL_38;
          case 2u:
            v64 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v11, v12, v64);
            v22 = v11;
            v23 = v19;
            v24 = 2;
            goto LABEL_38;
          case 3u:
            v65 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v11, v12, v65);
            v22 = v11;
            v23 = v19;
            v24 = 3;
            goto LABEL_38;
          case 4u:
            v66 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v11, v12, v66);
            v22 = v11;
            v23 = v19;
            v24 = 4;
            goto LABEL_38;
          case 5u:
            v67 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v11, v12, v67);
            v22 = v11;
            v23 = v19;
            v24 = 5;
            goto LABEL_38;
          case 6u:
            v68 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v11, v12, v68);
            v22 = v11;
            v23 = v19;
            v24 = 6;
            goto LABEL_38;
          case 8u:
            v69 = *v12;
            *v11 = *v12;
            v70 = v69;
            v22 = v11;
            v23 = v19;
            v24 = 8;
            goto LABEL_38;
          case 9u:
            v71 = *v12;
            *v11 = *v12;
            v72 = v71;
            v22 = v11;
            v23 = v19;
            v24 = 9;
LABEL_38:
            swift_storeEnumTagMultiPayload(v22, v23, v24);
            break;
          default:
            memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
            break;
        }
        v35 = v11;
        v36 = v13;
        v37 = 0;
      }
      swift_storeEnumTagMultiPayload(v35, v36, v37);
      goto LABEL_62;
    }
    goto LABEL_10;
  }
  if (v17)
  {
    sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
LABEL_10:
    v25 = *(_QWORD *)(*(_QWORD *)(sub_10002A750((uint64_t *)&unk_1006463C0) - 8) + 64);
LABEL_11:
    memcpy(v11, v12, v25);
    goto LABEL_63;
  }
  if (a1 == a2)
    goto LABEL_63;
  sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v26 = swift_getEnumCaseMultiPayload(v12, v13);
  if (v26 == 2)
  {
    v45 = *v12;
    *v11 = *v12;
    v46 = v45;
    swift_storeEnumTagMultiPayload(v11, v13, 2);
    goto LABEL_63;
  }
  if (v26 == 1)
  {
    v47 = *v12;
    *v11 = *v12;
    v48 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
    v156 = (void **)((char *)v12 + v48);
    __dsta = (void **)((char *)v11 + v48);
    v49 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v50 = *(_QWORD *)(v49 - 8);
    v51 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v50 + 48);
    v52 = v47;
    if (v51(v156, 1, v49))
    {
      v53 = sub_10002A750(&qword_100644980);
      memcpy(__dsta, v156, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(v156, v49))
      {
        case 1u:
          v59 = *v156;
          *__dsta = *v156;
          v60 = v59;
          v61 = __dsta;
          v62 = v49;
          v63 = 1;
          goto LABEL_72;
        case 2u:
          v144 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v144 - 8) + 16))(__dsta, v156, v144);
          v61 = __dsta;
          v62 = v49;
          v63 = 2;
          goto LABEL_72;
        case 3u:
          v145 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v145 - 8) + 16))(__dsta, v156, v145);
          v61 = __dsta;
          v62 = v49;
          v63 = 3;
          goto LABEL_72;
        case 4u:
          v146 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v146 - 8) + 16))(__dsta, v156, v146);
          v61 = __dsta;
          v62 = v49;
          v63 = 4;
          goto LABEL_72;
        case 5u:
          v147 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v147 - 8) + 16))(__dsta, v156, v147);
          v61 = __dsta;
          v62 = v49;
          v63 = 5;
          goto LABEL_72;
        case 6u:
          v148 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v148 - 8) + 16))(__dsta, v156, v148);
          v61 = __dsta;
          v62 = v49;
          v63 = 6;
          goto LABEL_72;
        case 8u:
          v150 = *v156;
          *__dsta = *v156;
          v151 = v150;
          v61 = __dsta;
          v62 = v49;
          v63 = 8;
          goto LABEL_72;
        case 9u:
          v152 = *v156;
          *__dsta = *v156;
          v153 = v152;
          v61 = __dsta;
          v62 = v49;
          v63 = 9;
LABEL_72:
          swift_storeEnumTagMultiPayload(v61, v62, v63);
          v149 = v50;
          break;
        default:
          v149 = v50;
          memcpy(__dsta, v156, *(_QWORD *)(v50 + 64));
          break;
      }
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v149 + 56))(__dsta, 0, 1, v49);
    }
    swift_storeEnumTagMultiPayload(v11, v13, 1);
  }
  else
  {
    if (v26)
    {
      v25 = *(_QWORD *)(v14 + 64);
      goto LABEL_11;
    }
    v27 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(v12, v27))
    {
      case 1u:
        v28 = *v12;
        *v11 = *v12;
        v29 = v28;
        v30 = v11;
        v31 = v27;
        v32 = 1;
        goto LABEL_48;
      case 2u:
        v73 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v11, v12, v73);
        v30 = v11;
        v31 = v27;
        v32 = 2;
        goto LABEL_48;
      case 3u:
        v74 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v11, v12, v74);
        v30 = v11;
        v31 = v27;
        v32 = 3;
        goto LABEL_48;
      case 4u:
        v75 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v11, v12, v75);
        v30 = v11;
        v31 = v27;
        v32 = 4;
        goto LABEL_48;
      case 5u:
        v76 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v11, v12, v76);
        v30 = v11;
        v31 = v27;
        v32 = 5;
        goto LABEL_48;
      case 6u:
        v77 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(v11, v12, v77);
        v30 = v11;
        v31 = v27;
        v32 = 6;
        goto LABEL_48;
      case 8u:
        v78 = *v12;
        *v11 = *v12;
        v79 = v78;
        v30 = v11;
        v31 = v27;
        v32 = 8;
        goto LABEL_48;
      case 9u:
        v80 = *v12;
        *v11 = *v12;
        v81 = v80;
        v30 = v11;
        v31 = v27;
        v32 = 9;
LABEL_48:
        swift_storeEnumTagMultiPayload(v30, v31, v32);
        break;
      default:
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        break;
    }
    swift_storeEnumTagMultiPayload(v11, v13, 0);
  }
LABEL_63:
  v92 = v9[6];
  v93 = *(void **)((char *)a2 + v92);
  v94 = *(uint64_t *)((char *)a1 + v92);
  *(void **)((char *)a1 + v92) = v93;
  swift_retain(v93);
  swift_release(v94);
  v95 = v9[7];
  v96 = (uint64_t *)((char *)a1 + v95);
  v97 = (uint64_t *)((char *)a2 + v95);
  v98 = *v97;
  v99 = v97[1];
  v100 = *v96;
  *v96 = *v97;
  swift_unknownObjectRetain(v98);
  swift_unknownObjectRelease(v100);
  v96[1] = v99;
  *((_BYTE *)a1 + v9[8]) = *((_BYTE *)a2 + v9[8]);
  v101 = a3[5];
  v102 = (char *)a1 + v101;
  v103 = (char *)a2 + v101;
  v104 = *(void **)((char *)a2 + v101);
  v105 = *(void **)v102;
  *(_QWORD *)v102 = v104;
  v106 = v104;

  v107 = *((_QWORD *)v103 + 1);
  v108 = *((_QWORD *)v103 + 2);
  v109 = *((_QWORD *)v102 + 1);
  *((_QWORD *)v102 + 1) = v107;
  swift_unknownObjectRetain(v107);
  swift_unknownObjectRelease(v109);
  *((_QWORD *)v102 + 2) = v108;
  v110 = *((_QWORD *)v103 + 3);
  v111 = *((_QWORD *)v102 + 3);
  *((_QWORD *)v102 + 3) = v110;
  swift_retain(v110);
  swift_release(v111);
  sub_100043D5C((_QWORD *)v102 + 4, (_QWORD *)v103 + 4);
  sub_100043D5C((_QWORD *)v102 + 9, (_QWORD *)v103 + 9);
  v112 = *((_QWORD *)v103 + 14);
  v113 = *((_QWORD *)v103 + 15);
  v114 = *((_QWORD *)v102 + 14);
  *((_QWORD *)v102 + 14) = v112;
  swift_unknownObjectRetain(v112);
  swift_unknownObjectRelease(v114);
  *((_QWORD *)v102 + 15) = v113;
  sub_100043EC4((_QWORD *)v102 + 16, (_QWORD *)v103 + 16);
  v115 = *((_QWORD *)v103 + 20);
  v116 = *((_QWORD *)v103 + 21);
  v117 = *((_QWORD *)v102 + 20);
  *((_QWORD *)v102 + 20) = v115;
  swift_unknownObjectRetain(v115);
  swift_unknownObjectRelease(v117);
  *((_QWORD *)v102 + 21) = v116;
  v118 = *((_QWORD *)v103 + 22);
  v119 = *((_QWORD *)v103 + 23);
  v120 = *((_QWORD *)v102 + 22);
  *((_QWORD *)v102 + 22) = v118;
  swift_unknownObjectRetain(v118);
  swift_unknownObjectRelease(v120);
  *((_QWORD *)v102 + 23) = v119;
  sub_100043EC4((_QWORD *)v102 + 24, (_QWORD *)v103 + 24);
  v121 = *((_QWORD *)v103 + 28);
  v122 = *((_QWORD *)v103 + 29);
  v123 = *((_QWORD *)v102 + 28);
  *((_QWORD *)v102 + 28) = v121;
  swift_unknownObjectRetain(v121);
  swift_unknownObjectRelease(v123);
  *((_QWORD *)v102 + 29) = v122;
  v102[240] = v103[240];
  v124 = *((_QWORD *)v103 + 31);
  v125 = *((_QWORD *)v102 + 31);
  *((_QWORD *)v102 + 31) = v124;
  swift_retain(v124);
  swift_release(v125);
  v126 = *((_QWORD *)v103 + 32);
  v127 = *((_QWORD *)v102 + 32);
  *((_QWORD *)v102 + 32) = v126;
  swift_retain(v126);
  swift_release(v127);
  v128 = (void *)*((_QWORD *)v103 + 33);
  v129 = (void *)*((_QWORD *)v102 + 33);
  *((_QWORD *)v102 + 33) = v128;
  v130 = v128;

  sub_100043D5C((_QWORD *)v102 + 34, (_QWORD *)v103 + 34);
  v131 = *((_QWORD *)v103 + 39);
  v132 = *((_QWORD *)v103 + 40);
  v133 = *((_QWORD *)v102 + 39);
  *((_QWORD *)v102 + 39) = v131;
  swift_unknownObjectRetain(v131);
  swift_unknownObjectRelease(v133);
  *((_QWORD *)v102 + 40) = v132;
  sub_100043D5C((_QWORD *)v102 + 41, (_QWORD *)v103 + 41);
  sub_100043D5C((_QWORD *)v102 + 46, (_QWORD *)v103 + 46);
  v134 = a3[6];
  v135 = (uint64_t *)((char *)a1 + v134);
  v136 = (uint64_t *)((char *)a2 + v134);
  v137 = *v136;
  v138 = v136[1];
  v139 = *v135;
  *v135 = *v136;
  swift_unknownObjectRetain(v137);
  swift_unknownObjectRelease(v139);
  v135[1] = v138;
  v140 = a3[7];
  v141 = *(void **)((char *)a2 + v140);
  v142 = *(uint64_t *)((char *)a1 + v140);
  *(void **)((char *)a1 + v140) = v141;
  swift_retain(v141);
  swift_release(v142);
  return a1;
}

_QWORD *sub_100045F8C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  char *__dst;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  v7 = v6[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
    if (EnumCaseMultiPayload == 1)
    {
      *v8 = *v9;
      v19 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      __dst = (char *)v8 + v19;
      v20 = (char *)v9 + v19;
      v21 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        v23 = sub_10002A750(&qword_100644980);
        memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v42 = v22;
        switch(swift_getEnumCaseMultiPayload(v20, v21))
        {
          case 2u:
            v24 = type metadata accessor for Date(0);
            v25 = __dst;
            (*(void (**)(void))(*(_QWORD *)(v24 - 8) + 32))();
            v26 = __dst;
            v27 = v21;
            v28 = 2;
            goto LABEL_24;
          case 3u:
            v36 = type metadata accessor for Date(0);
            v25 = __dst;
            (*(void (**)(void))(*(_QWORD *)(v36 - 8) + 32))();
            v26 = __dst;
            v27 = v21;
            v28 = 3;
            goto LABEL_24;
          case 4u:
            v37 = type metadata accessor for Date(0);
            v25 = __dst;
            (*(void (**)(void))(*(_QWORD *)(v37 - 8) + 32))();
            v26 = __dst;
            v27 = v21;
            v28 = 4;
            goto LABEL_24;
          case 5u:
            v38 = type metadata accessor for Date(0);
            v25 = __dst;
            (*(void (**)(void))(*(_QWORD *)(v38 - 8) + 32))();
            v26 = __dst;
            v27 = v21;
            v28 = 5;
            goto LABEL_24;
          case 6u:
            v39 = type metadata accessor for Date(0);
            v25 = __dst;
            (*(void (**)(void))(*(_QWORD *)(v39 - 8) + 32))();
            v26 = __dst;
            v27 = v21;
            v28 = 6;
LABEL_24:
            swift_storeEnumTagMultiPayload(v26, v27, v28);
            break;
          default:
            v25 = __dst;
            memcpy(__dst, v20, *(_QWORD *)(v42 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v25, 0, 1, v21);
      }
      v33 = v8;
      v34 = v10;
      v35 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v8, v9, *(_QWORD *)(v11 + 64));
LABEL_28:
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
        goto LABEL_29;
      }
      v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v9, v14))
      {
        case 2u:
          v15 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v8, v9, v15);
          v16 = v8;
          v17 = v14;
          v18 = 2;
          goto LABEL_17;
        case 3u:
          v29 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v8, v9, v29);
          v16 = v8;
          v17 = v14;
          v18 = 3;
          goto LABEL_17;
        case 4u:
          v30 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v8, v9, v30);
          v16 = v8;
          v17 = v14;
          v18 = 4;
          goto LABEL_17;
        case 5u:
          v31 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v8, v9, v31);
          v16 = v8;
          v17 = v14;
          v18 = 5;
          goto LABEL_17;
        case 6u:
          v32 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v8, v9, v32);
          v16 = v8;
          v17 = v14;
          v18 = 6;
LABEL_17:
          swift_storeEnumTagMultiPayload(v16, v17, v18);
          break;
        default:
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
          break;
      }
      v33 = v8;
      v34 = v10;
      v35 = 0;
    }
    swift_storeEnumTagMultiPayload(v33, v34, v35);
    goto LABEL_28;
  }
  v12 = sub_10002A750((uint64_t *)&unk_1006463C0);
  memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
LABEL_29:
  *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
  *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
  *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
  memcpy((char *)a1 + a3[5], (char *)a2 + a3[5], 0x198uLL);
  v40 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v40) = *(_QWORD *)((char *)a2 + v40);
  return a1;
}

void **sub_100046414(void **a1, void **a2, int *a3)
{
  void *v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD *, uint64_t, uint64_t);
  int v14;
  int v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  size_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int *v111;

  v6 = *a1;
  *a1 = *a2;

  v7 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  v8 = v7[5];
  v9 = (void **)((char *)a1 + v8);
  v10 = (void **)((char *)a2 + v8);
  v11 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
      if (EnumCaseMultiPayload == 1)
      {
        v111 = a3;
        *v9 = *v10;
        v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v30 = (char *)v9 + v29;
        v31 = (char *)v10 + v29;
        v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v33 = *(_QWORD *)(v32 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
        {
          v34 = sub_10002A750(&qword_100644980);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
          a3 = v111;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v31, v32))
          {
            case 2u:
              v41 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v30, v31, v41);
              v42 = v30;
              v43 = v32;
              v44 = 2;
              goto LABEL_45;
            case 3u:
              v58 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v30, v31, v58);
              v42 = v30;
              v43 = v32;
              v44 = 3;
              goto LABEL_45;
            case 4u:
              v59 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v30, v31, v59);
              v42 = v30;
              v43 = v32;
              v44 = 4;
              goto LABEL_45;
            case 5u:
              v60 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v30, v31, v60);
              v42 = v30;
              v43 = v32;
              v44 = 5;
              goto LABEL_45;
            case 6u:
              v61 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v30, v31, v61);
              v42 = v30;
              v43 = v32;
              v44 = 6;
LABEL_45:
              swift_storeEnumTagMultiPayload(v42, v43, v44);
              v57 = v33;
              break;
            default:
              memcpy(v30, v31, *(_QWORD *)(v33 + 64));
              v57 = v33;
              break;
          }
          a3 = v111;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v30, 0, 1, v32);
        }
        v49 = v9;
        v50 = v11;
        v51 = 1;
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v9, v10, *(_QWORD *)(v12 + 64));
LABEL_49:
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
          goto LABEL_50;
        }
        v17 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v10, v17))
        {
          case 2u:
            v18 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v9, v10, v18);
            v19 = v9;
            v20 = v17;
            v21 = 2;
            goto LABEL_29;
          case 3u:
            v45 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v9, v10, v45);
            v19 = v9;
            v20 = v17;
            v21 = 3;
            goto LABEL_29;
          case 4u:
            v46 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v9, v10, v46);
            v19 = v9;
            v20 = v17;
            v21 = 4;
            goto LABEL_29;
          case 5u:
            v47 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v9, v10, v47);
            v19 = v9;
            v20 = v17;
            v21 = 5;
            goto LABEL_29;
          case 6u:
            v48 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v9, v10, v48);
            v19 = v9;
            v20 = v17;
            v21 = 6;
LABEL_29:
            swift_storeEnumTagMultiPayload(v19, v20, v21);
            break;
          default:
            memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
            break;
        }
        v49 = v9;
        v50 = v11;
        v51 = 0;
      }
      swift_storeEnumTagMultiPayload(v49, v50, v51);
      goto LABEL_49;
    }
    goto LABEL_9;
  }
  if (v15)
  {
    sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
LABEL_9:
    v22 = *(_QWORD *)(*(_QWORD *)(sub_10002A750((uint64_t *)&unk_1006463C0) - 8) + 64);
LABEL_10:
    memcpy(v9, v10, v22);
    goto LABEL_50;
  }
  if (a1 == a2)
    goto LABEL_50;
  sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v23 = swift_getEnumCaseMultiPayload(v10, v11);
  if (v23 == 1)
  {
    *v9 = *v10;
    v35 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
    v36 = (char *)v9 + v35;
    v37 = (char *)v10 + v35;
    v38 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      v40 = sub_10002A750(&qword_100644980);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(v37, v38))
      {
        case 2u:
          v52 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v36, v37, v52);
          swift_storeEnumTagMultiPayload(v36, v38, 2);
          break;
        case 3u:
          v107 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v36, v37, v107);
          swift_storeEnumTagMultiPayload(v36, v38, 3);
          break;
        case 4u:
          v108 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 32))(v36, v37, v108);
          swift_storeEnumTagMultiPayload(v36, v38, 4);
          break;
        case 5u:
          v109 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v36, v37, v109);
          swift_storeEnumTagMultiPayload(v36, v38, 5);
          break;
        case 6u:
          v110 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(v36, v37, v110);
          swift_storeEnumTagMultiPayload(v36, v38, 6);
          break;
        default:
          memcpy(v36, v37, *(_QWORD *)(v39 + 64));
          break;
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    if (v23)
    {
      v22 = *(_QWORD *)(v12 + 64);
      goto LABEL_10;
    }
    v24 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(v10, v24))
    {
      case 2u:
        v25 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v9, v10, v25);
        v26 = v9;
        v27 = v24;
        v28 = 2;
        goto LABEL_38;
      case 3u:
        v53 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v9, v10, v53);
        v26 = v9;
        v27 = v24;
        v28 = 3;
        goto LABEL_38;
      case 4u:
        v54 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v9, v10, v54);
        v26 = v9;
        v27 = v24;
        v28 = 4;
        goto LABEL_38;
      case 5u:
        v55 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v9, v10, v55);
        v26 = v9;
        v27 = v24;
        v28 = 5;
        goto LABEL_38;
      case 6u:
        v56 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v9, v10, v56);
        v26 = v9;
        v27 = v24;
        v28 = 6;
LABEL_38:
        swift_storeEnumTagMultiPayload(v26, v27, v28);
        break;
      default:
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        break;
    }
    swift_storeEnumTagMultiPayload(v9, v11, 0);
  }
LABEL_50:
  v62 = v7[6];
  v63 = *(uint64_t *)((char *)a1 + v62);
  *(void **)((char *)a1 + v62) = *(void **)((char *)a2 + v62);
  swift_release(v63);
  v64 = v7[7];
  v65 = (uint64_t *)((char *)a1 + v64);
  v66 = (uint64_t *)((char *)a2 + v64);
  v67 = v66[1];
  v68 = *v65;
  *v65 = *v66;
  swift_unknownObjectRelease(v68);
  v65[1] = v67;
  *((_BYTE *)a1 + v7[8]) = *((_BYTE *)a2 + v7[8]);
  v69 = a3[5];
  v70 = (char *)a1 + v69;
  v71 = (char *)a2 + v69;
  v72 = *(void **)((char *)a1 + v69);
  *(void **)((char *)a1 + v69) = *(void **)((char *)a2 + v69);

  v73 = *((_QWORD *)v71 + 2);
  v74 = *((_QWORD *)v70 + 1);
  *((_QWORD *)v70 + 1) = *((_QWORD *)v71 + 1);
  swift_unknownObjectRelease(v74);
  v75 = *((_QWORD *)v71 + 3);
  v76 = *((_QWORD *)v70 + 3);
  *((_QWORD *)v70 + 2) = v73;
  *((_QWORD *)v70 + 3) = v75;
  swift_release(v76);
  sub_100027F10((_QWORD *)v70 + 4);
  v77 = *((_OWORD *)v71 + 3);
  *((_OWORD *)v70 + 2) = *((_OWORD *)v71 + 2);
  *((_OWORD *)v70 + 3) = v77;
  *((_QWORD *)v70 + 8) = *((_QWORD *)v71 + 8);
  sub_100027F10((_QWORD *)v70 + 9);
  *(_OWORD *)(v70 + 72) = *(_OWORD *)(v71 + 72);
  *(_OWORD *)(v70 + 88) = *(_OWORD *)(v71 + 88);
  v78 = *((_QWORD *)v71 + 14);
  v79 = *((_QWORD *)v71 + 15);
  v80 = *((_QWORD *)v70 + 14);
  *((_QWORD *)v70 + 13) = *((_QWORD *)v71 + 13);
  *((_QWORD *)v70 + 14) = v78;
  swift_unknownObjectRelease(v80);
  *((_QWORD *)v70 + 15) = v79;
  sub_100027F10((_QWORD *)v70 + 16);
  v81 = *((_OWORD *)v71 + 9);
  *((_OWORD *)v70 + 8) = *((_OWORD *)v71 + 8);
  *((_OWORD *)v70 + 9) = v81;
  v82 = *((_QWORD *)v71 + 21);
  v83 = *((_QWORD *)v70 + 20);
  *((_QWORD *)v70 + 20) = *((_QWORD *)v71 + 20);
  swift_unknownObjectRelease(v83);
  v84 = *((_QWORD *)v71 + 22);
  v85 = *((_QWORD *)v71 + 23);
  v86 = *((_QWORD *)v70 + 22);
  *((_QWORD *)v70 + 21) = v82;
  *((_QWORD *)v70 + 22) = v84;
  swift_unknownObjectRelease(v86);
  *((_QWORD *)v70 + 23) = v85;
  sub_100027F10((_QWORD *)v70 + 24);
  v87 = *((_OWORD *)v71 + 13);
  *((_OWORD *)v70 + 12) = *((_OWORD *)v71 + 12);
  *((_OWORD *)v70 + 13) = v87;
  v88 = *((_QWORD *)v71 + 29);
  v89 = *((_QWORD *)v70 + 28);
  *((_QWORD *)v70 + 28) = *((_QWORD *)v71 + 28);
  swift_unknownObjectRelease(v89);
  *((_QWORD *)v70 + 29) = v88;
  v70[240] = v71[240];
  v90 = *((_QWORD *)v70 + 31);
  *((_QWORD *)v70 + 31) = *((_QWORD *)v71 + 31);
  swift_release(v90);
  v91 = *((_QWORD *)v70 + 32);
  *((_QWORD *)v70 + 32) = *((_QWORD *)v71 + 32);
  swift_release(v91);
  v92 = (void *)*((_QWORD *)v70 + 33);
  *((_QWORD *)v70 + 33) = *((_QWORD *)v71 + 33);

  sub_100027F10((_QWORD *)v70 + 34);
  v93 = *((_OWORD *)v71 + 18);
  *((_OWORD *)v70 + 17) = *((_OWORD *)v71 + 17);
  *((_OWORD *)v70 + 18) = v93;
  v94 = *((_QWORD *)v71 + 39);
  v95 = *((_QWORD *)v71 + 40);
  v96 = *((_QWORD *)v70 + 39);
  *((_QWORD *)v70 + 38) = *((_QWORD *)v71 + 38);
  *((_QWORD *)v70 + 39) = v94;
  swift_unknownObjectRelease(v96);
  *((_QWORD *)v70 + 40) = v95;
  sub_100027F10((_QWORD *)v70 + 41);
  v97 = *(_OWORD *)(v71 + 344);
  *(_OWORD *)(v70 + 328) = *(_OWORD *)(v71 + 328);
  *(_OWORD *)(v70 + 344) = v97;
  *((_QWORD *)v70 + 45) = *((_QWORD *)v71 + 45);
  sub_100027F10((_QWORD *)v70 + 46);
  v98 = *((_OWORD *)v71 + 24);
  *((_OWORD *)v70 + 23) = *((_OWORD *)v71 + 23);
  *((_OWORD *)v70 + 24) = v98;
  *((_QWORD *)v70 + 50) = *((_QWORD *)v71 + 50);
  v99 = a3[6];
  v100 = (uint64_t *)((char *)a1 + v99);
  v101 = (uint64_t *)((char *)a2 + v99);
  v102 = v101[1];
  v103 = *v100;
  *v100 = *v101;
  swift_unknownObjectRelease(v103);
  v100[1] = v102;
  v104 = a3[7];
  v105 = *(uint64_t *)((char *)a1 + v104);
  *(void **)((char *)a1 + v104) = *(void **)((char *)a2 + v104);
  swift_release(v105);
  return a1;
}

uint64_t sub_100046DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100046DE0);
}

uint64_t sub_100046DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100046E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100046E68);
}

uint64_t sub_100046E68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_100046EE0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_1005204E0;
    v4[2] = &unk_1005204F8;
    v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

void **sub_100046F68(void **a1, void **a2, int *a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  void **v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(void **, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  void *v18;
  id v19;
  void **v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void **v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(void **, uint64_t, uint64_t);
  id v34;
  uint64_t v35;
  void *v36;
  id v37;
  void **v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  void *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v64;
  void **__dst;
  void *__dsta[2];

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) == 0)
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (void **)((char *)a1 + v8);
    v10 = (void **)((char *)a2 + v8);
    v11 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v12 + 48);
    v14 = v4;
    if (v13(v10, 1, v11))
    {
      v15 = sub_10002A750((uint64_t *)&unk_1006463C0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
LABEL_39:
      v60 = a3[6];
      v61 = a3[7];
      v62 = *(void **)((char *)a2 + v60);
      *(void **)((char *)v7 + v60) = v62;
      *(_OWORD *)__dsta = *(_OWORD *)((char *)a2 + v61);
      *(_OWORD *)((char *)v7 + v61) = *(_OWORD *)__dsta;
      *((_BYTE *)v7 + a3[8]) = *((_BYTE *)a2 + a3[8]);
      swift_retain(v62);
      swift_unknownObjectRetain(__dsta[0]);
      return v7;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
    if (EnumCaseMultiPayload == 2)
    {
      v23 = *v10;
      *v9 = *v10;
      v24 = v23;
      v25 = v9;
      v26 = v11;
      v27 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v64 = v12;
      v28 = *v10;
      *v9 = *v10;
      v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      __dst = (void **)((char *)v9 + v29);
      v30 = (void **)((char *)v10 + v29);
      v31 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v32 = *(_QWORD *)(v31 - 8);
      v33 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v32 + 48);
      v34 = v28;
      if (v33(v30, 1, v31))
      {
        v35 = sub_10002A750(&qword_100644980);
        memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        v12 = v64;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v30, v31))
        {
          case 1u:
            v36 = *v30;
            *__dst = *v30;
            v37 = v36;
            v38 = __dst;
            v39 = v31;
            v40 = 1;
            goto LABEL_34;
          case 2u:
            v50 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(__dst, v30, v50);
            v38 = __dst;
            v39 = v31;
            v40 = 2;
            goto LABEL_34;
          case 3u:
            v51 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(__dst, v30, v51);
            v38 = __dst;
            v39 = v31;
            v40 = 3;
            goto LABEL_34;
          case 4u:
            v52 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(__dst, v30, v52);
            v38 = __dst;
            v39 = v31;
            v40 = 4;
            goto LABEL_34;
          case 5u:
            v59 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(__dst, v30, v59);
            v38 = __dst;
            v39 = v31;
            v40 = 5;
            goto LABEL_34;
          case 6u:
            v53 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(__dst, v30, v53);
            v38 = __dst;
            v39 = v31;
            v40 = 6;
            goto LABEL_34;
          case 8u:
            v55 = *v30;
            *__dst = *v30;
            v56 = v55;
            v38 = __dst;
            v39 = v31;
            v40 = 8;
            goto LABEL_34;
          case 9u:
            v57 = *v30;
            *__dst = *v30;
            v58 = v57;
            v38 = __dst;
            v39 = v31;
            v40 = 9;
LABEL_34:
            swift_storeEnumTagMultiPayload(v38, v39, v40);
            v54 = v32;
            break;
          default:
            memcpy(__dst, v30, *(_QWORD *)(v32 + 64));
            v54 = v32;
            break;
        }
        v12 = v64;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v54 + 56))(__dst, 0, 1, v31);
      }
      v25 = v9;
      v26 = v11;
      v27 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v9, v10, *(_QWORD *)(v12 + 64));
LABEL_38:
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        goto LABEL_39;
      }
      v17 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v10, v17))
      {
        case 1u:
          v18 = *v10;
          *v9 = *v10;
          v19 = v18;
          v20 = v9;
          v21 = v17;
          v22 = 1;
          goto LABEL_24;
        case 2u:
          v41 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v9, v10, v41);
          v20 = v9;
          v21 = v17;
          v22 = 2;
          goto LABEL_24;
        case 3u:
          v42 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v9, v10, v42);
          v20 = v9;
          v21 = v17;
          v22 = 3;
          goto LABEL_24;
        case 4u:
          v43 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v9, v10, v43);
          v20 = v9;
          v21 = v17;
          v22 = 4;
          goto LABEL_24;
        case 5u:
          v44 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v9, v10, v44);
          v20 = v9;
          v21 = v17;
          v22 = 5;
          goto LABEL_24;
        case 6u:
          v45 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v9, v10, v45);
          v20 = v9;
          v21 = v17;
          v22 = 6;
          goto LABEL_24;
        case 8u:
          v46 = *v10;
          *v9 = *v10;
          v47 = v46;
          v20 = v9;
          v21 = v17;
          v22 = 8;
          goto LABEL_24;
        case 9u:
          v48 = *v10;
          *v9 = *v10;
          v49 = v48;
          v20 = v9;
          v21 = v17;
          v22 = 9;
LABEL_24:
          swift_storeEnumTagMultiPayload(v20, v21, v22);
          break;
        default:
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
          break;
      }
      v25 = v9;
      v26 = v11;
      v27 = 0;
    }
    swift_storeEnumTagMultiPayload(v25, v26, v27);
    goto LABEL_38;
  }
  v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
  swift_retain(v4);
  return v7;
}

uint64_t sub_1000474C8(id *a1, int *a2)
{
  id *v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = (id *)((char *)a1 + a2[5]);
  v5 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v5);
    switch(EnumCaseMultiPayload)
    {
      case 2:
LABEL_10:

        break;
      case 1:

        v4 = (id *)((char *)v4 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v4, 1, v9))
        {
          switch(swift_getEnumCaseMultiPayload(v4, v9))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_10;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_9:
              v10 = type metadata accessor for Date(0);
              (*(void (**)(id *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v4, v10);
              break;
            default:
              goto LABEL_2;
          }
        }
        break;
      case 0:
        v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v4, v8))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_10;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_9;
          default:
            goto LABEL_2;
        }
    }
  }
LABEL_2:
  swift_release(*(id *)((char *)a1 + a2[6]));
  return swift_unknownObjectRelease(*(id *)((char *)a1 + a2[7]));
}

void **sub_100047630(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  void **v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(void **, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  void *v17;
  id v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void **v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(void **, uint64_t, uint64_t);
  id v33;
  uint64_t v34;
  void *v35;
  id v36;
  void **v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v63;
  void **__dst;
  void *__dsta[2];

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (void **)((char *)a1 + v7);
  v9 = (void **)((char *)a2 + v7);
  v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v11 + 48);
  v13 = v6;
  if (!v12(v9, 1, v10))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
    if (EnumCaseMultiPayload == 2)
    {
      v22 = *v9;
      *v8 = *v9;
      v23 = v22;
      v24 = v8;
      v25 = v10;
      v26 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v63 = v11;
      v27 = *v9;
      *v8 = *v9;
      v28 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      __dst = (void **)((char *)v8 + v28);
      v29 = (void **)((char *)v9 + v28);
      v30 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v31 = *(_QWORD *)(v30 - 8);
      v32 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v31 + 48);
      v33 = v27;
      if (v32(v29, 1, v30))
      {
        v34 = sub_10002A750(&qword_100644980);
        memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        v11 = v63;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v29, v30))
        {
          case 1u:
            v35 = *v29;
            *__dst = *v29;
            v36 = v35;
            v37 = __dst;
            v38 = v30;
            v39 = 1;
            goto LABEL_32;
          case 2u:
            v49 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(__dst, v29, v49);
            v37 = __dst;
            v38 = v30;
            v39 = 2;
            goto LABEL_32;
          case 3u:
            v50 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(__dst, v29, v50);
            v37 = __dst;
            v38 = v30;
            v39 = 3;
            goto LABEL_32;
          case 4u:
            v51 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(__dst, v29, v51);
            v37 = __dst;
            v38 = v30;
            v39 = 4;
            goto LABEL_32;
          case 5u:
            v58 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(__dst, v29, v58);
            v37 = __dst;
            v38 = v30;
            v39 = 5;
            goto LABEL_32;
          case 6u:
            v52 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(__dst, v29, v52);
            v37 = __dst;
            v38 = v30;
            v39 = 6;
            goto LABEL_32;
          case 8u:
            v54 = *v29;
            *__dst = *v29;
            v55 = v54;
            v37 = __dst;
            v38 = v30;
            v39 = 8;
            goto LABEL_32;
          case 9u:
            v56 = *v29;
            *__dst = *v29;
            v57 = v56;
            v37 = __dst;
            v38 = v30;
            v39 = 9;
LABEL_32:
            swift_storeEnumTagMultiPayload(v37, v38, v39);
            v53 = v31;
            break;
          default:
            memcpy(__dst, v29, *(_QWORD *)(v31 + 64));
            v53 = v31;
            break;
        }
        v11 = v63;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v53 + 56))(__dst, 0, 1, v30);
      }
      v24 = v8;
      v25 = v10;
      v26 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v8, v9, *(_QWORD *)(v11 + 64));
LABEL_36:
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
        goto LABEL_37;
      }
      v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v9, v16))
      {
        case 1u:
          v17 = *v9;
          *v8 = *v9;
          v18 = v17;
          v19 = v8;
          v20 = v16;
          v21 = 1;
          goto LABEL_22;
        case 2u:
          v40 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v8, v9, v40);
          v19 = v8;
          v20 = v16;
          v21 = 2;
          goto LABEL_22;
        case 3u:
          v41 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v8, v9, v41);
          v19 = v8;
          v20 = v16;
          v21 = 3;
          goto LABEL_22;
        case 4u:
          v42 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v8, v9, v42);
          v19 = v8;
          v20 = v16;
          v21 = 4;
          goto LABEL_22;
        case 5u:
          v43 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v8, v9, v43);
          v19 = v8;
          v20 = v16;
          v21 = 5;
          goto LABEL_22;
        case 6u:
          v44 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v8, v9, v44);
          v19 = v8;
          v20 = v16;
          v21 = 6;
          goto LABEL_22;
        case 8u:
          v45 = *v9;
          *v8 = *v9;
          v46 = v45;
          v19 = v8;
          v20 = v16;
          v21 = 8;
          goto LABEL_22;
        case 9u:
          v47 = *v9;
          *v8 = *v9;
          v48 = v47;
          v19 = v8;
          v20 = v16;
          v21 = 9;
LABEL_22:
          swift_storeEnumTagMultiPayload(v19, v20, v21);
          break;
        default:
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
          break;
      }
      v24 = v8;
      v25 = v10;
      v26 = 0;
    }
    swift_storeEnumTagMultiPayload(v24, v25, v26);
    goto LABEL_36;
  }
  v14 = sub_10002A750((uint64_t *)&unk_1006463C0);
  memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_37:
  v59 = a3[6];
  v60 = a3[7];
  v61 = *(void **)((char *)a2 + v59);
  *(void **)((char *)a1 + v59) = v61;
  *(_OWORD *)__dsta = *(_OWORD *)((char *)a2 + v60);
  *(_OWORD *)((char *)a1 + v60) = *(_OWORD *)__dsta;
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  swift_retain(v61);
  swift_unknownObjectRetain(__dsta[0]);
  return a1;
}

void **sub_100047B68(void **a1, void **a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void **v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void **, uint64_t, uint64_t);
  int v15;
  int v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  void *v19;
  id v20;
  void **v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  int v25;
  uint64_t v26;
  void *v27;
  id v28;
  void **v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  void **v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(void **, uint64_t, uint64_t);
  id v42;
  uint64_t v43;
  void *v44;
  id v45;
  void *v46;
  uint64_t v47;
  void **v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(void **, uint64_t, uint64_t);
  id v52;
  uint64_t v53;
  void *v54;
  id v55;
  void **v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  id v60;
  void **v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  void *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  id v79;
  void *v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  id v89;
  void *v90;
  id v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  id v108;
  void *v109;
  id v110;
  void **v111;
  void **__dst;
  void **__dsta;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = a3[5];
  v10 = (void **)((char *)a1 + v9);
  v11 = (void **)((char *)a2 + v9);
  v12 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
      if (EnumCaseMultiPayload == 2)
      {
        v32 = *v11;
        *v10 = *v11;
        v33 = v32;
        v34 = v10;
        v35 = v12;
        v36 = 2;
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v37 = *v11;
        *v10 = *v11;
        v38 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v111 = (void **)((char *)v11 + v38);
        __dst = (void **)((char *)v10 + v38);
        v39 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v40 = *(_QWORD *)(v39 - 8);
        v41 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v40 + 48);
        v42 = v37;
        if (v41(v111, 1, v39))
        {
          v43 = sub_10002A750(&qword_100644980);
          memcpy(__dst, v111, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v111, v39))
          {
            case 1u:
              v54 = *v111;
              *__dst = *v111;
              v55 = v54;
              v56 = __dst;
              v57 = v39;
              v58 = 1;
              goto LABEL_58;
            case 2u:
              v82 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(__dst, v111, v82);
              v56 = __dst;
              v57 = v39;
              v58 = 2;
              goto LABEL_58;
            case 3u:
              v83 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(__dst, v111, v83);
              v56 = __dst;
              v57 = v39;
              v58 = 3;
              goto LABEL_58;
            case 4u:
              v84 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(__dst, v111, v84);
              v56 = __dst;
              v57 = v39;
              v58 = 4;
              goto LABEL_58;
            case 5u:
              v85 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(__dst, v111, v85);
              v56 = __dst;
              v57 = v39;
              v58 = 5;
              goto LABEL_58;
            case 6u:
              v86 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(__dst, v111, v86);
              v56 = __dst;
              v57 = v39;
              v58 = 6;
              goto LABEL_58;
            case 8u:
              v88 = *v111;
              *__dst = *v111;
              v89 = v88;
              v56 = __dst;
              v57 = v39;
              v58 = 8;
              goto LABEL_58;
            case 9u:
              v90 = *v111;
              *__dst = *v111;
              v91 = v90;
              v56 = __dst;
              v57 = v39;
              v58 = 9;
LABEL_58:
              swift_storeEnumTagMultiPayload(v56, v57, v58);
              v87 = v40;
              break;
            default:
              memcpy(__dst, v111, *(_QWORD *)(v40 + 64));
              v87 = v40;
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v87 + 56))(__dst, 0, 1, v39);
        }
        v34 = v10;
        v35 = v12;
        v36 = 1;
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v10, v11, *(_QWORD *)(v13 + 64));
LABEL_62:
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
          goto LABEL_63;
        }
        v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v11, v18))
        {
          case 1u:
            v19 = *v11;
            *v10 = *v11;
            v20 = v19;
            v21 = v10;
            v22 = v18;
            v23 = 1;
            goto LABEL_38;
          case 2u:
            v64 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v10, v11, v64);
            v21 = v10;
            v22 = v18;
            v23 = 2;
            goto LABEL_38;
          case 3u:
            v65 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v10, v11, v65);
            v21 = v10;
            v22 = v18;
            v23 = 3;
            goto LABEL_38;
          case 4u:
            v66 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v10, v11, v66);
            v21 = v10;
            v22 = v18;
            v23 = 4;
            goto LABEL_38;
          case 5u:
            v67 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v10, v11, v67);
            v21 = v10;
            v22 = v18;
            v23 = 5;
            goto LABEL_38;
          case 6u:
            v68 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v10, v11, v68);
            v21 = v10;
            v22 = v18;
            v23 = 6;
            goto LABEL_38;
          case 8u:
            v69 = *v11;
            *v10 = *v11;
            v70 = v69;
            v21 = v10;
            v22 = v18;
            v23 = 8;
            goto LABEL_38;
          case 9u:
            v71 = *v11;
            *v10 = *v11;
            v72 = v71;
            v21 = v10;
            v22 = v18;
            v23 = 9;
LABEL_38:
            swift_storeEnumTagMultiPayload(v21, v22, v23);
            break;
          default:
            memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
            break;
        }
        v34 = v10;
        v35 = v12;
        v36 = 0;
      }
      swift_storeEnumTagMultiPayload(v34, v35, v36);
      goto LABEL_62;
    }
    goto LABEL_10;
  }
  if (v16)
  {
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
LABEL_10:
    v24 = *(_QWORD *)(*(_QWORD *)(sub_10002A750((uint64_t *)&unk_1006463C0) - 8) + 64);
LABEL_11:
    memcpy(v10, v11, v24);
    goto LABEL_63;
  }
  if (a1 == a2)
    goto LABEL_63;
  sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v25 = swift_getEnumCaseMultiPayload(v11, v12);
  if (v25 == 2)
  {
    v44 = *v11;
    *v10 = *v11;
    v45 = v44;
    swift_storeEnumTagMultiPayload(v10, v12, 2);
    goto LABEL_63;
  }
  if (v25 == 1)
  {
    v46 = *v11;
    *v10 = *v11;
    v47 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
    __dsta = (void **)((char *)v10 + v47);
    v48 = (void **)((char *)v11 + v47);
    v49 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v50 = *(_QWORD *)(v49 - 8);
    v51 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v50 + 48);
    v52 = v46;
    if (v51(v48, 1, v49))
    {
      v53 = sub_10002A750(&qword_100644980);
      memcpy(__dsta, v48, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(v48, v49))
      {
        case 1u:
          v59 = *v48;
          *__dsta = *v48;
          v60 = v59;
          v61 = __dsta;
          v62 = v49;
          v63 = 1;
          goto LABEL_72;
        case 2u:
          v102 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(__dsta, v48, v102);
          v61 = __dsta;
          v62 = v49;
          v63 = 2;
          goto LABEL_72;
        case 3u:
          v103 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(__dsta, v48, v103);
          v61 = __dsta;
          v62 = v49;
          v63 = 3;
          goto LABEL_72;
        case 4u:
          v104 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(__dsta, v48, v104);
          v61 = __dsta;
          v62 = v49;
          v63 = 4;
          goto LABEL_72;
        case 5u:
          v105 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(__dsta, v48, v105);
          v61 = __dsta;
          v62 = v49;
          v63 = 5;
          goto LABEL_72;
        case 6u:
          v106 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(__dsta, v48, v106);
          v61 = __dsta;
          v62 = v49;
          v63 = 6;
          goto LABEL_72;
        case 8u:
          v107 = *v48;
          *__dsta = *v48;
          v108 = v107;
          v61 = __dsta;
          v62 = v49;
          v63 = 8;
          goto LABEL_72;
        case 9u:
          v109 = *v48;
          *__dsta = *v48;
          v110 = v109;
          v61 = __dsta;
          v62 = v49;
          v63 = 9;
LABEL_72:
          swift_storeEnumTagMultiPayload(v61, v62, v63);
          break;
        default:
          memcpy(__dsta, v48, *(_QWORD *)(v50 + 64));
          break;
      }
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v50 + 56))(__dsta, 0, 1, v49);
    }
    swift_storeEnumTagMultiPayload(v10, v12, 1);
  }
  else
  {
    if (v25)
    {
      v24 = *(_QWORD *)(v13 + 64);
      goto LABEL_11;
    }
    v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(v11, v26))
    {
      case 1u:
        v27 = *v11;
        *v10 = *v11;
        v28 = v27;
        v29 = v10;
        v30 = v26;
        v31 = 1;
        goto LABEL_48;
      case 2u:
        v73 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v10, v11, v73);
        v29 = v10;
        v30 = v26;
        v31 = 2;
        goto LABEL_48;
      case 3u:
        v74 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v10, v11, v74);
        v29 = v10;
        v30 = v26;
        v31 = 3;
        goto LABEL_48;
      case 4u:
        v75 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v10, v11, v75);
        v29 = v10;
        v30 = v26;
        v31 = 4;
        goto LABEL_48;
      case 5u:
        v76 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v10, v11, v76);
        v29 = v10;
        v30 = v26;
        v31 = 5;
        goto LABEL_48;
      case 6u:
        v77 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(v10, v11, v77);
        v29 = v10;
        v30 = v26;
        v31 = 6;
        goto LABEL_48;
      case 8u:
        v78 = *v11;
        *v10 = *v11;
        v79 = v78;
        v29 = v10;
        v30 = v26;
        v31 = 8;
        goto LABEL_48;
      case 9u:
        v80 = *v11;
        *v10 = *v11;
        v81 = v80;
        v29 = v10;
        v30 = v26;
        v31 = 9;
LABEL_48:
        swift_storeEnumTagMultiPayload(v29, v30, v31);
        break;
      default:
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        break;
    }
    swift_storeEnumTagMultiPayload(v10, v12, 0);
  }
LABEL_63:
  v92 = a3[6];
  v93 = *(void **)((char *)a2 + v92);
  v94 = *(uint64_t *)((char *)a1 + v92);
  *(void **)((char *)a1 + v92) = v93;
  swift_retain(v93);
  swift_release(v94);
  v95 = a3[7];
  v96 = (uint64_t *)((char *)a1 + v95);
  v97 = (uint64_t *)((char *)a2 + v95);
  v98 = *v97;
  v99 = v97[1];
  v100 = *v96;
  *v96 = *v97;
  swift_unknownObjectRetain(v98);
  swift_unknownObjectRelease(v100);
  v96[1] = v99;
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_10004851C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v9);
    if (EnumCaseMultiPayload == 1)
    {
      *v7 = *v8;
      v18 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v19 = (char *)v7 + v18;
      v20 = (char *)v8 + v18;
      v21 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        v23 = sub_10002A750(&qword_100644980);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v20, v21))
        {
          case 2u:
            v24 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v19, v20, v24);
            v25 = v19;
            v26 = v21;
            v27 = 2;
            goto LABEL_24;
          case 3u:
            v35 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v19, v20, v35);
            v25 = v19;
            v26 = v21;
            v27 = 3;
            goto LABEL_24;
          case 4u:
            v36 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v19, v20, v36);
            v25 = v19;
            v26 = v21;
            v27 = 4;
            goto LABEL_24;
          case 5u:
            v37 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v19, v20, v37);
            v25 = v19;
            v26 = v21;
            v27 = 5;
            goto LABEL_24;
          case 6u:
            v38 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v19, v20, v38);
            v25 = v19;
            v26 = v21;
            v27 = 6;
LABEL_24:
            swift_storeEnumTagMultiPayload(v25, v26, v27);
            break;
          default:
            memcpy(v19, v20, *(_QWORD *)(v22 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      v32 = v7;
      v33 = v9;
      v34 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v7, v8, *(_QWORD *)(v10 + 64));
LABEL_28:
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
        goto LABEL_29;
      }
      v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v8, v13))
      {
        case 2u:
          v14 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v7, v8, v14);
          v15 = v7;
          v16 = v13;
          v17 = 2;
          goto LABEL_17;
        case 3u:
          v28 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v7, v8, v28);
          v15 = v7;
          v16 = v13;
          v17 = 3;
          goto LABEL_17;
        case 4u:
          v29 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v7, v8, v29);
          v15 = v7;
          v16 = v13;
          v17 = 4;
          goto LABEL_17;
        case 5u:
          v30 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v7, v8, v30);
          v15 = v7;
          v16 = v13;
          v17 = 5;
          goto LABEL_17;
        case 6u:
          v31 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v7, v8, v31);
          v15 = v7;
          v16 = v13;
          v17 = 6;
LABEL_17:
          swift_storeEnumTagMultiPayload(v15, v16, v17);
          break;
        default:
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          break;
      }
      v32 = v7;
      v33 = v9;
      v34 = 0;
    }
    swift_storeEnumTagMultiPayload(v32, v33, v34);
    goto LABEL_28;
  }
  v11 = sub_10002A750((uint64_t *)&unk_1006463C0);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_29:
  v39 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v39) = *(_OWORD *)((char *)a2 + v39);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

void **sub_100048940(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  size_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v6 = *a1;
  *a1 = *a2;

  v7 = a3[5];
  v8 = (void **)((char *)a1 + v7);
  v9 = (void **)((char *)a2 + v7);
  v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
      if (EnumCaseMultiPayload == 1)
      {
        *v8 = *v9;
        v28 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v29 = (char *)v8 + v28;
        v30 = (char *)v9 + v28;
        v31 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v32 = *(_QWORD *)(v31 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
        {
          v33 = sub_10002A750(&qword_100644980);
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v30, v31))
          {
            case 2u:
              v40 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v29, v30, v40);
              v41 = v29;
              v42 = v31;
              v43 = 2;
              goto LABEL_45;
            case 3u:
              v56 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v29, v30, v56);
              v41 = v29;
              v42 = v31;
              v43 = 3;
              goto LABEL_45;
            case 4u:
              v57 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v29, v30, v57);
              v41 = v29;
              v42 = v31;
              v43 = 4;
              goto LABEL_45;
            case 5u:
              v58 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v29, v30, v58);
              v41 = v29;
              v42 = v31;
              v43 = 5;
              goto LABEL_45;
            case 6u:
              v59 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v29, v30, v59);
              v41 = v29;
              v42 = v31;
              v43 = 6;
LABEL_45:
              swift_storeEnumTagMultiPayload(v41, v42, v43);
              break;
            default:
              memcpy(v29, v30, *(_QWORD *)(v32 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
        }
        v48 = v8;
        v49 = v10;
        v50 = 1;
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v8, v9, *(_QWORD *)(v11 + 64));
LABEL_49:
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
          goto LABEL_50;
        }
        v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v9, v16))
        {
          case 2u:
            v17 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v8, v9, v17);
            v18 = v8;
            v19 = v16;
            v20 = 2;
            goto LABEL_29;
          case 3u:
            v44 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v8, v9, v44);
            v18 = v8;
            v19 = v16;
            v20 = 3;
            goto LABEL_29;
          case 4u:
            v45 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v8, v9, v45);
            v18 = v8;
            v19 = v16;
            v20 = 4;
            goto LABEL_29;
          case 5u:
            v46 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v8, v9, v46);
            v18 = v8;
            v19 = v16;
            v20 = 5;
            goto LABEL_29;
          case 6u:
            v47 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v8, v9, v47);
            v18 = v8;
            v19 = v16;
            v20 = 6;
LABEL_29:
            swift_storeEnumTagMultiPayload(v18, v19, v20);
            break;
          default:
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
            break;
        }
        v48 = v8;
        v49 = v10;
        v50 = 0;
      }
      swift_storeEnumTagMultiPayload(v48, v49, v50);
      goto LABEL_49;
    }
    goto LABEL_9;
  }
  if (v14)
  {
    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
LABEL_9:
    v21 = *(_QWORD *)(*(_QWORD *)(sub_10002A750((uint64_t *)&unk_1006463C0) - 8) + 64);
LABEL_10:
    memcpy(v8, v9, v21);
    goto LABEL_50;
  }
  if (a1 == a2)
    goto LABEL_50;
  sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v22 = swift_getEnumCaseMultiPayload(v9, v10);
  if (v22 == 1)
  {
    *v8 = *v9;
    v34 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
    v35 = (char *)v8 + v34;
    v36 = (char *)v9 + v34;
    v37 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v38 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
    {
      v39 = sub_10002A750(&qword_100644980);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(v36, v37))
      {
        case 2u:
          v51 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v35, v36, v51);
          swift_storeEnumTagMultiPayload(v35, v37, 2);
          break;
        case 3u:
          v68 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v35, v36, v68);
          swift_storeEnumTagMultiPayload(v35, v37, 3);
          break;
        case 4u:
          v69 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v35, v36, v69);
          swift_storeEnumTagMultiPayload(v35, v37, 4);
          break;
        case 5u:
          v70 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v35, v36, v70);
          swift_storeEnumTagMultiPayload(v35, v37, 5);
          break;
        case 6u:
          v71 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v35, v36, v71);
          swift_storeEnumTagMultiPayload(v35, v37, 6);
          break;
        default:
          memcpy(v35, v36, *(_QWORD *)(v38 + 64));
          break;
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    if (v22)
    {
      v21 = *(_QWORD *)(v11 + 64);
      goto LABEL_10;
    }
    v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(v9, v23))
    {
      case 2u:
        v24 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v8, v9, v24);
        v25 = v8;
        v26 = v23;
        v27 = 2;
        goto LABEL_38;
      case 3u:
        v52 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v8, v9, v52);
        v25 = v8;
        v26 = v23;
        v27 = 3;
        goto LABEL_38;
      case 4u:
        v53 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v8, v9, v53);
        v25 = v8;
        v26 = v23;
        v27 = 4;
        goto LABEL_38;
      case 5u:
        v54 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v8, v9, v54);
        v25 = v8;
        v26 = v23;
        v27 = 5;
        goto LABEL_38;
      case 6u:
        v55 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v8, v9, v55);
        v25 = v8;
        v26 = v23;
        v27 = 6;
LABEL_38:
        swift_storeEnumTagMultiPayload(v25, v26, v27);
        break;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        break;
    }
    swift_storeEnumTagMultiPayload(v8, v10, 0);
  }
LABEL_50:
  v60 = a3[6];
  v61 = *(uint64_t *)((char *)a1 + v60);
  *(void **)((char *)a1 + v60) = *(void **)((char *)a2 + v60);
  swift_release(v61);
  v62 = a3[7];
  v63 = (uint64_t *)((char *)a1 + v62);
  v64 = (uint64_t *)((char *)a2 + v62);
  v65 = v64[1];
  v66 = *v63;
  *v63 = *v64;
  swift_unknownObjectRelease(v66);
  v63[1] = v65;
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

uint64_t sub_100049120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004912C);
}

uint64_t sub_10004912C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_10002A750((uint64_t *)&unk_1006463C0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1000491AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000491B8);
}

char *sub_1000491B8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_10002A750((uint64_t *)&unk_1006463C0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_100049230(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_1000492C8(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[3] = &unk_1005204F8;
    v4[4] = &unk_100520528;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

void sub_1000492C8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1006489F0)
  {
    v2 = type metadata accessor for TTRRemindersListViewModel.ItemID(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1006489F0);
  }
}

void sub_100049320(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;

  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000493D8(a1, (uint64_t)v4);
  v5 = (char *)sub_1000493B0 + 4 * byte_100520540[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_1000493B0()
{
  uint64_t v0;

  sub_10004941C(v0);
  return 1;
}

uint64_t sub_1000493D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004941C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100049458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10063F3D0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10063F3D0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_100049544(int a1, int a2, Swift::String _, Swift::String comment)
{
  void *object;
  NSString v5;

  object = TTRLocalizedString(_:comment:)(_, comment)._object;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  return v5;
}

double sub_100049588(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  double result;
  objc_super v19;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19.receiver = v3;
  v19.super_class = ObjectType;
  objc_msgSendSuper2(&v19, "viewDidLoad");
  v8 = sub_100049FB8();
  v9 = static UNUserNotificationCenter.ttr_unUserNotificationCenter.getter(v8);
  v10 = objc_msgSend((id)objc_opt_self(REMUserDefaults), "daemonUserDefaults");
  v11 = type metadata accessor for TTRIPrivacyChecker(0);
  swift_allocObject(v11, 112, 7);
  v12 = TTRIPrivacyChecker.init(delegate:unUserNotificationCenter:geoService:notificationsService:userDefaults:)(v3, &off_1005EBFC8, v9, 0, 0, 0, v10, &protocol witness table for REMDaemonUserDefaults, &protocol witness table for REMDaemonUserDefaults);
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 1, 1, v13);
  type metadata accessor for MainActor(0);
  v14 = swift_retain(v12);
  v15 = static MainActor.shared.getter(v14);
  v16 = (_QWORD *)swift_allocObject(&unk_1005EBFE8, 40, 7);
  v16[2] = v15;
  v16[3] = &protocol witness table for MainActor;
  v16[4] = v12;
  v17 = sub_100148368((uint64_t)v7, (uint64_t)&unk_10063F418, (uint64_t)v16);
  swift_release(v17);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

uint64_t sub_10004972C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *a4;
  v7 = type metadata accessor for MainActor(0);
  v4[3] = v7;
  v4[4] = static MainActor.shared.getter(v7);
  v4[2] = a4;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to TTRPrivacyChecker.checkContactsAccess(contactsFeature:)[1]);
  v4[5] = v8;
  *v8 = v4;
  v8[1] = sub_1000497B4;
  return TTRPrivacyChecker.checkContactsAccess(contactsFeature:)(2, v6, &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_1000497B4()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 40));
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v2);
  return swift_task_switch(sub_100049824, v3, v4);
}

uint64_t sub_100049824()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for TTRIAddShareesViewController()
{
  return objc_opt_self(_TtC9Reminders28TTRIAddShareesViewController);
}

void *sub_1000499D8()
{
  void *v0;
  id v1;

  v1 = v0;
  return v0;
}

id sub_1000499F0(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  NSString v18;
  uint64_t v19;
  NSString v20;
  uint64_t v21;
  NSString v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  id v26;
  id v28;

  if (a5)
  {
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a5);
    v19 = a9;
    if (a7)
      goto LABEL_3;
  }
  else
  {
    v18 = 0;
    v19 = a9;
    if (a7)
    {
LABEL_3:
      v20 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(a7);
      v21 = a11;
      if (v19)
        goto LABEL_4;
LABEL_8:
      v22 = 0;
      v23 = a12;
      v24 = a13;
      if (v21)
        goto LABEL_5;
LABEL_9:
      v25 = 0;
      goto LABEL_10;
    }
  }
  v20 = 0;
  v21 = a11;
  if (!v19)
    goto LABEL_8;
LABEL_4:
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  v23 = a12;
  v24 = a13;
  if (!v21)
    goto LABEL_9;
LABEL_5:
  v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21);
LABEL_10:
  v26 = objc_msgSend(v28, "initShareeWithObjectID:accountID:listID:displayName:firstName:lastName:address:status:accessLevel:", a1, a2, a3, v18, v20, v22, v25, v23, v24);

  return v26;
}

id sub_100049B4C(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSString v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CharacterSet(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend(a1, "address", v12);
  v16 = v15;
  if (v15)
  {
    v59 = v7;
    v60 = v6;
    v61 = v9;
    v17 = a2;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v20 = v19;
    v21 = objc_msgSend(a1, "compositeName");
    if (v21)
    {
      v22 = v21;
      v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v69 = v24;
      v70 = v23;

    }
    else
    {
      v69 = 0;
      v70 = 0;
    }
    v64 = v20;
    v25 = objc_msgSend(a1, "contact");
    v68 = v25;
    if (v25)
    {
      v26 = v25;
      v27 = a3;
      v28 = objc_msgSend(v25, "givenName");
      v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
      v66 = v30;
      v67 = v29;

      v31 = objc_msgSend(v26, "familyName");
      v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      v65 = v33;

      a3 = v27;
    }
    else
    {
      v32 = 0;
      v65 = 0;
      v66 = 0;
      v67 = 0;
    }
    v34 = v18;
    v35 = objc_msgSend(a1, "kind");
    v62 = v17;
    v63 = v32;
    switch((unint64_t)v35)
    {
      case 0uLL:
        v40 = objc_msgSend(v16, "stringAddingMailto", swift_bridgeObjectRelease(v64).n128_f64[0]);

        v39 = v69;
        if (!v40)
          goto LABEL_15;
        v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
        v37 = v41;

        goto LABEL_16;
      case 1uLL:

        v42 = v64;
        v71 = v18;
        v72 = v64;
        static CharacterSet.controlCharacters.getter();
        sub_10001D7FC();
        StringProtocol.trimmingCharacters(in:)(v14, &type metadata for String);
        v44 = v43;
        (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
        swift_bridgeObjectRelease(v42);
        v45 = String._bridgeToObjectiveC()();
        v46 = objc_msgSend(v45, "stringAddingTel", swift_bridgeObjectRelease(v44).n128_f64[0]);

        v39 = v69;
        if (v46)
        {
          v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
          v37 = v47;

        }
        else
        {
LABEL_15:
          v36 = 0;
          v37 = 0;
        }
LABEL_16:
        v38 = v70;
        goto LABEL_17;
      case 2uLL:
      case 3uLL:
      case 5uLL:
      case 6uLL:
      case 7uLL:
        swift_bridgeObjectRelease(v64);

        v36 = 0;
        v37 = 0;
        v39 = v69;
        v38 = v70;
LABEL_17:
        v49 = v66;
        v48 = v67;
        break;
      case 4uLL:

        v39 = v69;
        v38 = v70;
        v49 = v66;
        v48 = v67;
        v36 = v34;
        v37 = v64;
        break;
      default:

        if (qword_10063D2B0 != -1)
          swift_once(&qword_10063D2B0, sub_100049458);
        v55 = v60;
        v56 = sub_100012DC4(v60, (uint64_t)qword_10063F3D0);
        (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v61, v56, v55);
        v57 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
        v58 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
        sub_1002EB23C((uint64_t)"unknown kind", 12, 2uLL, v57, v58);
        __break(1u);
        JUMPOUT(0x100049F98);
    }
    v50 = objc_msgSend((id)objc_opt_self(REMSharee), "newObjectID");
    v51 = objc_allocWithZone((Class)REMSharee);
    v52 = v62;
    v53 = a3;
    v16 = sub_1000499F0(v50, v52, v53, v38, v39, v48, v49, v63, v65, v36, v37, 5, 2);

  }
  return v16;
}

unint64_t sub_100049FB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10063F290;
  if (!qword_10063F290)
  {
    v1 = objc_opt_self(UNUserNotificationCenter);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10063F290);
  }
  return result;
}

uint64_t sub_100049FF4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10004A020(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (uint64_t *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10063F414);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10004A08C;
  return sub_10004972C(a1, v4, v5, v6);
}

uint64_t sub_10004A08C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v0;
  v1 = *(_QWORD *)(v4 + 16);
  v2 = *v0;
  v4 = v2;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10004A0D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10063F420);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10063F420);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10004A164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRIRemindersListNavigationBarEditingTarget(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_shouldIgnoreCenterItemActions) & 1) == 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v1 + 32);
    if (Strong)
    {
      v12 = Strong;
      v13 = *(_QWORD *)(v1 + 40);
      v14 = *(_QWORD *)(v1 + 64);
      v15 = *(_QWORD *)(v14 + 48);
      if (v15)
      {
        v16 = *(_QWORD *)(v14 + 56);
        ObjectType = swift_getObjectType(*(_QWORD *)(v14 + 48), v11);
        v25 = v13;
        v18 = *(void (**)(uint64_t, uint64_t, __n128))(v16 + 16);
        v19 = swift_unknownObjectRetain(v15);
        v18(ObjectType, v16, v19);
        v13 = v25;
        swift_unknownObjectRelease(v15);
        sub_10001F580((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v20 = 0;
      }
      else
      {
        v20 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, v20, 1, v2);
      v22 = swift_getObjectType(v12, v21);
      v9 = (*(uint64_t (**)(uint64_t, _UNKNOWN **, char *, uint64_t, uint64_t))(v13 + 24))(v1, &off_1005EC008, v8, v22, v13);
      swift_unknownObjectRelease(v12);
      sub_10001F544((uint64_t)v8, type metadata accessor for TTRIRemindersListNavigationBarEditingTarget);
    }
    else
    {
      return 0;
    }
  }
  return v9;
}

Class sub_10004A30C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Class v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(__int128 *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  int v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t v28;
  _QWORD *preferredElementSize;
  Swift::String v30;
  Class isa;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  UIMenuElementSize v38;
  Swift::String v39;
  Class v40;
  uint64_t v41;
  _QWORD *v42;
  Swift::String v43;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  Swift::OpaquePointer v49;
  Swift::OpaquePointer v50;
  char v51;
  __int128 v52;
  uint64_t v53;
  UIMenuElementSize v54[5];
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  UIImage_optional v58;
  UIImage_optional v59;
  UIImage_optional v60;

  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_shouldIgnoreCenterItemActions) & 1) != 0)
    return 0;
  v4 = v2;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v5 + 48);
  if (v6)
  {
    v7 = *(_QWORD *)(v5 + 56);
    ObjectType = swift_getObjectType(*(_QWORD *)(v5 + 48), a2);
    v9 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, __n128))(v7 + 32);
    v10 = swift_unknownObjectRetain(v6);
    v9(&v55, ObjectType, v7, v10);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    v57 = 0;
    v55 = 0u;
    v56 = 0u;
  }
  sub_10000735C((uint64_t)&v55, (uint64_t)&v52, &qword_10063F5A0);
  if (v53)
  {
    sub_10002E37C(&v52, (uint64_t)v54);
    v11 = *(_QWORD *)(v4 + 136);
    v13 = swift_getObjectType(*(_QWORD *)(v4 + 128), v12);
    v51 = (*(uint64_t (**)(UIMenuElementSize *, uint64_t, uint64_t))(v11 + 24))(v54, v13, v11);
    sub_100027F10(v54);
  }
  else
  {
    sub_1000073A0((uint64_t)&v52, &qword_10063F5A0);
    v51 = 6;
  }
  v15 = *(_QWORD *)(v4 + 136);
  v16 = swift_getObjectType(*(_QWORD *)(v4 + 128), v14);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v16, v15);
  v18 = v17;
  v19 = *(_QWORD *)(v17 + 16);
  if (v19)
  {
    v20 = (unsigned __int8 *)(v17 + 32);
    v21 = _swiftEmptyArrayStorage;
    do
    {
      v25 = *v20++;
      v24 = v25;
      if (v25)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v21);
        v54[0] = (UIMenuElementSize)v21;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1003D81C0(0, v21[2] + 1, 1);
          v21 = (_QWORD *)v54[0];
        }
        v23 = v21[2];
        v22 = v21[3];
        if (v23 >= v22 >> 1)
        {
          sub_1003D81C0(v22 > 1, v23 + 1, 1);
          v21 = (_QWORD *)v54[0];
        }
        v21[2] = v23 + 1;
        *((_BYTE *)v21 + v23 + 32) = v24;
      }
      --v19;
    }
    while (v19);
  }
  else
  {
    v21 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v18);
  v27 = v21[2];
  if (v27)
  {
    v54[0] = (UIMenuElementSize)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v27);
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    __asm { BR              X8 }
  }
  swift_release(v21);
  if (*((_QWORD *)&v56 + 1))
  {
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
      if ((uint64_t)_swiftEmptyArrayStorage < 0)
        v45 = _swiftEmptyArrayStorage;
      else
        v45 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
      v46 = sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
      swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
      preferredElementSize = (_QWORD *)_bridgeCocoaArray<A>(_:)(v45, v46);
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    }
    else
    {
      swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v28);
      sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
      preferredElementSize = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    v58.value.super.isa = 0;
    v58.is_nil = 0;
    isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v30, (Swift::String_optional)0, v58, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, v49).super.super.isa;
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v32._object = (void *)0x800000010055F8E0;
    v33._countAndFlagsBits = 1701736270;
    v33._object = (void *)0xE400000000000000;
    v32._countAndFlagsBits = 0xD00000000000002BLL;
    v34 = TTRLocalizedString(_:comment:)(v33, v32);
    v35 = swift_allocObject(&unk_1005EC120, 24, 7);
    swift_weakInit(v35 + 16, v4);
    v36 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v34._countAndFlagsBits, v34._object, 0, 0, 0, 0, 0, 0, 0, 0, v51 == 6, sub_10004E104, v35);
    v37 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v38 = swift_allocObject(v37, 48, 7);
    *(_OWORD *)(v38 + 16) = xmmword_10051FF90;
    *(_QWORD *)(v38 + 32) = v36;
    *(_QWORD *)(v38 + 40) = isa;
    v54[0] = v38;
    specialized Array._endMutation()(v38);
    v39._countAndFlagsBits = 0;
    v39._object = (void *)0xE000000000000000;
    v59.value.super.isa = 0;
    v59.is_nil = 0;
    v40 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v39, (Swift::String_optional)0, v59, 0, 0xFFFFFFFFFFFFFFFFLL, v54[0], v50).super.super.isa;
  }
  else
  {
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
      if ((uint64_t)_swiftEmptyArrayStorage < 0)
        v47 = _swiftEmptyArrayStorage;
      else
        v47 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
      v48 = sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
      swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
      v42 = (_QWORD *)_bridgeCocoaArray<A>(_:)(v47, v48);
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    }
    else
    {
      swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v41);
      sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
      v42 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
    v43._countAndFlagsBits = 0;
    v43._object = (void *)0xE000000000000000;
    v60.value.super.isa = 0;
    v60.is_nil = 0;
    v40 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v43, (Swift::String_optional)0, v60, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v42, v49).super.super.isa;
  }
  v3 = v40;
  sub_1000073A0((uint64_t)&v55, &qword_10063F5A0);
  return v3;
}

double sub_10004AA80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  double result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, __n128);
  uint64_t v33;
  unsigned int v34;
  char v35[24];

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRIRemindersListNavigationBarEditingTarget(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v35, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v15 = Strong;
    v16 = swift_unknownObjectWeakLoadStrong(Strong + 32);
    if (v16)
    {
      v18 = v16;
      v19 = *(_QWORD *)(v15 + 40);
      v20 = *(_QWORD *)(v15 + 64);
      v21 = *(_QWORD *)(v20 + 48);
      if (v21)
      {
        v33 = *(_QWORD *)(v15 + 40);
        v22 = *(_QWORD *)(v20 + 56);
        ObjectType = swift_getObjectType(v21, v17);
        v34 = a3;
        v24 = a1;
        v25 = ObjectType;
        v32 = *(void (**)(uint64_t, uint64_t, __n128))(v22 + 16);
        v26 = swift_unknownObjectRetain(v21);
        v27 = v25;
        a1 = v24;
        a3 = v34;
        v28 = v22;
        v19 = v33;
        v32(v27, v28, v26);
        swift_unknownObjectRelease(v21);
        sub_10001F580((uint64_t)v9, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v29 = 0;
      }
      else
      {
        v29 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, v29, 1, v6);
      v31 = swift_getObjectType(v18, v30);
      (*(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t))(v19 + 112))(a3, v12, a1, v31, v19);
      swift_unknownObjectRelease(v18);
      sub_10001F544((uint64_t)v12, type metadata accessor for TTRIRemindersListNavigationBarEditingTarget);
    }
    *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  }
  return result;
}

double sub_10004AC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  double result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  void (*v22)(uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRIRemindersListNavigationBarEditingTarget(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v31, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v13 = Strong;
    v14 = swift_unknownObjectWeakLoadStrong(Strong + 32);
    if (v14)
    {
      v16 = v14;
      v17 = *(_QWORD *)(v13 + 40);
      v18 = *(_QWORD *)(v13 + 64);
      v19 = *(_QWORD *)(v18 + 48);
      if (v19)
      {
        v29 = *(_QWORD *)(v13 + 40);
        v20 = *(_QWORD *)(v18 + 56);
        ObjectType = swift_getObjectType(v19, v15);
        v30 = a1;
        v22 = *(void (**)(uint64_t, uint64_t, __n128))(v20 + 16);
        v23 = swift_unknownObjectRetain(v19);
        v24 = v20;
        v17 = v29;
        v22(ObjectType, v24, v23);
        a1 = v30;
        swift_unknownObjectRelease(v19);
        sub_10001F580((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v25 = 0;
      }
      else
      {
        v25 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, v25, 1, v4);
      v27 = swift_getObjectType(v16, v26);
      (*(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t))(v17 + 112))(6, v10, a1, v27, v17);
      swift_unknownObjectRelease(v16);
      sub_10001F544((uint64_t)v10, type metadata accessor for TTRIRemindersListNavigationBarEditingTarget);
    }
    *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  }
  return result;
}

Class sub_10004AE08()
{
  uint64_t v0;
  uint64_t v2;
  const char *v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  _UNKNOWN **v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  NSString v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  NSString v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  unint64_t v31;
  uint64_t v32;
  Swift::UInt v33;
  Swift::Int v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;
  Swift::String v40;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String v46;
  Swift::OpaquePointer v47;
  void *comment;
  const char *v49;
  uint64_t v50;
  _QWORD v51[9];
  UIMenuElementSize preferredElementSize;
  UIImage_optional v53;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_shouldIgnoreCenterItemActions) & 1) != 0)
    return 0;
  v2 = v0;
  preferredElementSize = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v3 = "Reminders list navigation bar photo menu";
  v50 = v0;
  if (*(_QWORD *)(*(_QWORD *)(v0 + 64) + 48))
  {
    Strong = swift_unknownObjectWeakLoadStrong(v0 + 32);
    if (Strong)
    {
      v6 = Strong;
      v7 = *(_QWORD *)(v2 + 40);
      ObjectType = swift_getObjectType(Strong, v5);
      v9 = (*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v7 + 96))(v2, &off_1005EC008, ObjectType, v7);
      swift_unknownObjectRelease(v6);
      if (v9)
      {
        v10 = (_UNKNOWN **)v9;
        if (objc_msgSend((id)v9, "canPerformAction:withSender:", "captureTextFromCamera:", v2))
        {
          sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
          v11._object = (void *)0x800000010055F910;
          v12._countAndFlagsBits = 0x786554206E616353;
          v12._object = (void *)0xE900000000000074;
          v11._countAndFlagsBits = 0xD000000000000028;
          v13 = TTRLocalizedString(_:comment:)(v12, v11);
          v14 = String._bridgeToObjectiveC()();
          v15 = v2;
          v16 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v14);

          v17 = swift_allocObject(&unk_1005EC120, 24, 7);
          swift_weakInit(v17 + 16, v15);
          v10 = (_UNKNOWN **)(id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v13._countAndFlagsBits, v13._object, 0, 0, v16, 0, 0, 0, 0, 0, 0, sub_10004E118, v17);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
          v19 = *(_QWORD **)((preferredElementSize & 0xFFFFFFFFFFFFFF8) + 0x10);
          v18 = *(_QWORD *)((preferredElementSize & 0xFFFFFFFFFFFFFF8) + 0x18);
          if ((unint64_t)v19 >= v18 >> 1)
LABEL_30:
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, (char *)v19 + 1, 1);
          v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v10);
          specialized Array._endMutation()(v20);

          v2 = v50;
        }

      }
    }
  }
  type metadata accessor for TTRIAttachmentImportingController(0);
  v9 = static TTRIAttachmentImportingController.availableSources.getter();
  v21 = 0;
  v22 = v9 + 56;
  v10 = &off_1005EA498;
  v19 = (_QWORD *)&unk_1005EA000;
  v49 = v3 - 32;
  comment = (void *)((unint64_t)(v3 - 32) | 0x8000000000000000);
  do
  {
    v18 = v19[149];
    if (v21 >= v18)
    {
      __break(1u);
      goto LABEL_30;
    }
    if (*(_QWORD *)(v9 + 16))
    {
      v33 = *((unsigned __int8 *)&off_1005EA498 + v21 + 32);
      Hasher.init(_seed:)(v51, *(_QWORD *)(v9 + 40));
      Hasher._combine(_:)(v33);
      v34 = Hasher._finalize()();
      v35 = -1 << *(_BYTE *)(v9 + 32);
      v36 = v34 & ~v35;
      if (((*(_QWORD *)(v22 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) != 0)
      {
        v37 = *(_QWORD *)(v9 + 48);
        if (*(unsigned __int8 *)(v37 + v36) == (_DWORD)v33)
        {
LABEL_23:
          if ((_DWORD)v33)
          {
            if ((_DWORD)v33 == 1)
            {
              v23 = 0x636F44206E616353;
              v24 = 0xED0000746E656D75;
            }
            else
            {
              v23 = 0x502065736F6F6843;
              v24 = 0xEC0000006F746F68;
            }
            v39._countAndFlagsBits = 0xD000000000000028;
            v39._object = (void *)((unint64_t)v49 | 0x8000000000000000);
            v40 = TTRLocalizedString(_:comment:)(*(Swift::String *)&v23, v39);
            countAndFlagsBits = v40._countAndFlagsBits;
            object = v40._object;
          }
          else
          {
            v43._countAndFlagsBits = 0x6F685020656B6154;
            v43._object = (void *)0xEA00000000006F74;
            v44._countAndFlagsBits = 0xD000000000000028;
            v44._object = comment;
            v45 = TTRLocalizedString(_:comment:)(v43, v44);
            countAndFlagsBits = v45._countAndFlagsBits;
            object = v45._object;
          }
          v25 = String._bridgeToObjectiveC()();
          v26 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v25);

          sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
          v27 = swift_allocObject(&unk_1005EC120, 24, 7);
          swift_weakInit(v27 + 16, v2);
          v28 = swift_allocObject(&unk_1005EC170, 25, 7);
          *(_QWORD *)(v28 + 16) = v27;
          *(_BYTE *)(v28 + 24) = v33;
          v29 = v26;
          v30 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(countAndFlagsBits, object, 0, 0, v26, 0, 0, 0, 0, 0, 0, sub_10004E10C, v28);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v30);
          v3 = *(const char **)((preferredElementSize & 0xFFFFFFFFFFFFFF8) + 0x10);
          v31 = *(_QWORD *)((preferredElementSize & 0xFFFFFFFFFFFFFF8) + 0x18);
          if ((unint64_t)v3 >= v31 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v3 + 1, 1);
          v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v3, v30);
          specialized Array._endMutation()(v32);

          v2 = v50;
          v10 = &off_1005EA498;
          v19 = &unk_1005EA000;
        }
        else
        {
          v38 = ~v35;
          while (1)
          {
            v36 = (v36 + 1) & v38;
            if (((*(_QWORD *)(v22 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) == 0)
              break;
            if (*(unsigned __int8 *)(v37 + v36) == (_DWORD)v33)
              goto LABEL_23;
          }
        }
      }
    }
    ++v21;
  }
  while (v21 != 3);
  swift_bridgeObjectRelease(v9);
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v46._countAndFlagsBits = 0;
  v46._object = (void *)0xE000000000000000;
  v53.value.super.isa = 0;
  v53.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v46, (Swift::String_optional)0, v53, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v47).super.super.isa;
}

void sub_10004B3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void *v10;
  _BYTE v11[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + 32);
    if (v5
      && (v7 = v5,
          v8 = *(_QWORD *)(v4 + 40),
          ObjectType = swift_getObjectType(v5, v6),
          v10 = (void *)(*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v8 + 96))(v4, &off_1005EC008, ObjectType, v8), swift_unknownObjectRelease(v7), v10))
    {
      objc_msgSend(v10, "captureTextFromCamera:", v4);
      swift_release(v4);

    }
    else
    {
      swift_release(v4);
    }
  }
}

double sub_10004B48C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  double result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  void (*v23)(uint64_t, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  _BYTE v32[24];

  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRIRemindersListNavigationBarEditingTarget(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v32, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v14 = Strong;
    v15 = swift_unknownObjectWeakLoadStrong(Strong + 32);
    if (v15)
    {
      v17 = v15;
      v18 = *(_QWORD *)(v14 + 40);
      v19 = *(_QWORD *)(v14 + 64);
      v20 = *(_QWORD *)(v19 + 48);
      if (v20)
      {
        v30 = *(_QWORD *)(v14 + 40);
        v21 = *(_QWORD *)(v19 + 56);
        ObjectType = swift_getObjectType(v20, v16);
        v31 = a3;
        v23 = *(void (**)(uint64_t, uint64_t, __n128))(v21 + 16);
        v24 = swift_unknownObjectRetain(v20);
        v25 = v21;
        v18 = v30;
        v23(ObjectType, v25, v24);
        a3 = v31;
        swift_unknownObjectRelease(v20);
        sub_10001F580((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v26 = 0;
      }
      else
      {
        v26 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, v26, 1, v5);
      v28 = swift_getObjectType(v17, v27);
      (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v18 + 104))(a3, v11, v28, v18);
      swift_unknownObjectRelease(v17);
      sub_10001F544((uint64_t)v11, type metadata accessor for TTRIRemindersListNavigationBarEditingTarget);
    }
    *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  }
  return result;
}

uint64_t sub_10004B644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRIRemindersListNavigationBarEditingTarget(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_shouldIgnoreCenterItemActions) & 1) == 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v1 + 32);
    if (Strong)
    {
      v12 = Strong;
      v13 = *(_QWORD *)(v1 + 40);
      v14 = *(_QWORD *)(v1 + 64);
      v15 = *(_QWORD *)(v14 + 48);
      if (v15)
      {
        v16 = *(_QWORD *)(v14 + 56);
        ObjectType = swift_getObjectType(*(_QWORD *)(v14 + 48), v11);
        v25 = v13;
        v18 = *(void (**)(uint64_t, uint64_t, __n128))(v16 + 16);
        v19 = swift_unknownObjectRetain(v15);
        v18(ObjectType, v16, v19);
        v13 = v25;
        swift_unknownObjectRelease(v15);
        sub_10001F580((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v20 = 0;
      }
      else
      {
        v20 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, v20, 1, v2);
      v22 = swift_getObjectType(v12, v21);
      v9 = (*(uint64_t (**)(uint64_t, _UNKNOWN **, char *, uint64_t, uint64_t))(v13 + 40))(v1, &off_1005EC008, v8, v22, v13);
      swift_unknownObjectRelease(v12);
      sub_10001F544((uint64_t)v8, type metadata accessor for TTRIRemindersListNavigationBarEditingTarget);
    }
    else
    {
      return 0;
    }
  }
  return v9;
}

uint64_t sub_10004B7EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRIRemindersListNavigationBarEditingTarget(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_shouldIgnoreCenterItemActions) & 1) == 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v1 + 32);
    if (Strong)
    {
      v12 = Strong;
      v13 = *(_QWORD *)(v1 + 40);
      v14 = *(_QWORD *)(v1 + 64);
      v15 = *(_QWORD *)(v14 + 48);
      if (v15)
      {
        v16 = *(_QWORD *)(v14 + 56);
        ObjectType = swift_getObjectType(*(_QWORD *)(v14 + 48), v11);
        v25 = v13;
        v18 = *(void (**)(uint64_t, uint64_t, __n128))(v16 + 16);
        v19 = swift_unknownObjectRetain(v15);
        v18(ObjectType, v16, v19);
        v13 = v25;
        swift_unknownObjectRelease(v15);
        sub_10001F580((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v20 = 0;
      }
      else
      {
        v20 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, v20, 1, v2);
      v22 = swift_getObjectType(v12, v21);
      v9 = (*(uint64_t (**)(uint64_t, _UNKNOWN **, char *, uint64_t, uint64_t))(v13 + 32))(v1, &off_1005EC008, v8, v22, v13);
      swift_unknownObjectRelease(v12);
      sub_10001F544((uint64_t)v8, type metadata accessor for TTRIRemindersListNavigationBarEditingTarget);
    }
    else
    {
      return 0;
    }
  }
  return v9;
}

void sub_10004B994()
{
  sub_10004B9CC((uint64_t)"Reminders Nav Bar Undo", (SEL *)&selRef_canUndo, (SEL *)&selRef_undo);
}

void sub_10004B9B0()
{
  sub_10004B9CC((uint64_t)"Reminders Nav Bar Redo", (SEL *)&selRef_canRedo, (SEL *)&selRef_redo);
}

void sub_10004B9CC(uint64_t a1, SEL *a2, SEL *a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  _BYTE v15[24];

  if (qword_10063D2B8 != -1)
    swift_once(&qword_10063D2B8, sub_10004A0D4);
  v7 = type metadata accessor for Logger(0);
  sub_100012DC4(v7, (uint64_t)qword_10063F420);
  v8 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4(a1, 22, 2, v8);
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(v3 + 64);
  swift_beginAccess(v9 + 72, v15, 0, 0);
  v10 = *(_QWORD *)(v9 + 96);
  if (v10)
  {
    v11 = *(_QWORD *)(*sub_10001413C((_QWORD *)(v9 + 72), v10) + 16);
    v12 = swift_retain(v11);
    CurrentValueSubject.value.getter(&v14, v12);
    swift_release(v11);
    v13 = v14;
    if (v14)
    {
      if (objc_msgSend(v14, *a2))
        objc_msgSend(v13, *a3);

    }
  }
}

uint64_t sub_10004BAEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(_QWORD *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, __n128);
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;

  v1 = v0;
  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRIRemindersListNavigationBarEditingTarget(0);
  result = __chkstk_darwin(v6);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_shouldIgnoreCenterItemActions) & 1) == 0)
  {
    v11 = *(_QWORD *)(v0 + 64);
    v12 = *(_QWORD *)(v11 + 48);
    if (v12)
    {
      v35 = v2;
      v13 = *(_QWORD *)(v11 + 56);
      ObjectType = swift_getObjectType(v12, v8);
      v15 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, __n128))(v13 + 32);
      v16 = swift_unknownObjectRetain(v12);
      v15(v36, ObjectType, v13, v16);
      v17 = v37;
      v18 = v38;
      sub_10001413C(v36, v37);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v18 + 192))(v39, v17, v18);
      v19 = v40;
      if (v40)
      {
        v20 = v41;
        sub_10001413C(v39, v40);
        v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
        swift_unknownObjectRelease(v12);
        sub_100027F10(v39);
        sub_100027F10(v36);
        LODWORD(v19) = v21 ^ 1;
      }
      else
      {
        swift_unknownObjectRelease(v12);
        sub_100027F10(v36);
        sub_1000073A0((uint64_t)v39, &qword_10063F590);
        LODWORD(v19) = 1;
      }
      v2 = v35;
    }
    else
    {
      LODWORD(v19) = 1;
    }
    result = swift_unknownObjectWeakLoadStrong(v1 + 32);
    if (result)
    {
      v23 = result;
      v24 = *(_QWORD *)(v1 + 40);
      v25 = *(_QWORD *)(v11 + 48);
      if (v25)
      {
        LODWORD(v35) = v19;
        v19 = *(_QWORD *)(v11 + 56);
        v26 = swift_getObjectType(v25, v22);
        v27 = v2;
        v28 = *(void (**)(uint64_t, uint64_t, __n128))(v19 + 16);
        v29 = swift_unknownObjectRetain(v25);
        v30 = v19;
        LOBYTE(v19) = v35;
        v28(v26, v30, v29);
        v2 = v27;
        swift_unknownObjectRelease(v25);
        sub_10001F580((uint64_t)v5, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v31 = 0;
      }
      else
      {
        v31 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v10, v31, 1, v2);
      v33 = swift_getObjectType(v23, v32);
      (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v24 + 88))(v19 & 1, v10, v33, v24);
      swift_unknownObjectRelease(v23);
      return sub_10001F544((uint64_t)v10, type metadata accessor for TTRIRemindersListNavigationBarEditingTarget);
    }
  }
  return result;
}

uint64_t sub_10004BD64(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[24];

  v3 = v2;
  v6 = sub_10002A750(&qword_10063F560);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v3 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_lastSetConfiguration;
  swift_beginAccess(v3 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_lastSetConfiguration, v24, 0, 0);
  sub_10000735C(v13, (uint64_t)v8, &qword_10063F560);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1000073A0((uint64_t)v8, &qword_10063F560);
  sub_10001F580((uint64_t)v8, (uint64_t)v12, type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration);
  if (qword_10063D2B8 != -1)
    swift_once(&qword_10063D2B8, sub_10004A0D4);
  v15 = type metadata accessor for Logger(0);
  sub_100012DC4(v15, (uint64_t)qword_10063F420);
  v16 = swift_bridgeObjectRetain_n(a2, 2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v23 = v20;
    *(_DWORD *)v19 = 136315138;
    swift_bridgeObjectRetain(a2);
    v22 = sub_100027E40(a1, a2, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v19 + 4, v19 + 12);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "TTRIRemindersListNavigationBarPresenter: update navigation bar {reason: %s}", v19, 0xCu);
    swift_arrayDestroy(v20, 1, &type metadata for Any[8]);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  sub_10004CA14((uint64_t)v12);
  return sub_10001F544((uint64_t)v12, type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration);
}

uint64_t sub_10004C010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  void *v8;
  void *v9;
  unsigned __int8 v10;
  char v11;
  int v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  char v23;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  _QWORD *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 32);
  if (Strong)
  {
    v4 = Strong;
    v5 = *(_QWORD *)(v1 + 40);
    ObjectType = swift_getObjectType(Strong, v3);
    v7 = (*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v5 + 8))(v1, &off_1005EC008, ObjectType, v5);
    v9 = v8;
    v11 = v10;
    v12 = v10;
    swift_unknownObjectRelease(v4);
    if (v11 < 0)
    {
      v25 = *(_QWORD **)(v1 + 64);
      v26 = v25[17];
      if (v26)
      {
        swift_retain(v25[17]);
        TTRDataViewMonitor.pause()();
        swift_release(v26);
        v27 = v25[17];
        v25[17] = 0;
        swift_release(v27);
      }
      v28 = (void *)v25[18];
      v25[18] = 1;
      sub_10004E08C(v28);
      v29 = (void *)v25[8];
      v25[8] = 0;

      v17 = v7 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      switch(v12)
      {
        case 0:
          goto LABEL_17;
        case 1:
          if (v9 - 1 >= 2)
          {
            if ((_BYTE)v9)
              v37 = 0;
            else
              v37 = (void *)v7;
            v38 = *(_QWORD *)(v1 + 64);
            v11 = 1;
            sub_10004DD24((id)v7, v9, 1);
            sub_10004DD38((id)v7, v9, 1);
            sub_10004DD38((id)v7, v9, 1);
            sub_1004ACDA0(v37);
            v39 = *(void **)(v38 + 64);
            v40 = v39;
            v17 = sub_10004C390(v39);
            sub_10004E09C(v37, 1u);

            sub_10004DD84((void *)v7, v9, 1);
          }
          else
          {
            sub_10004DD38((id)v7, v9, 1);
            sub_10004DD38((id)v7, v9, 1);
            v13 = (id)v7;
LABEL_26:
            v42 = *(_QWORD **)(v1 + 64);
            v43 = v42[17];
            v44 = v13;
            if (v43)
            {
              swift_retain(v43);
              TTRDataViewMonitor.pause()();
              swift_release(v43);
              v45 = v42[17];
              v42[17] = 0;
              swift_release(v45);
            }
            v46 = (void *)v42[18];
            v42[18] = 1;
            sub_10004E08C(v46);
            v47 = (void *)v42[8];
            v42[8] = 0;

            v48 = v13;
            v17 = sub_10004C390(v13);
            sub_10004E09C(v13, 0);

LABEL_29:
            sub_10004DD84((void *)v7, v9, v11);
          }
          break;
        case 2:
          if (v9)
          {
            sub_10004DD38((id)v7, v9, 2);
            v30 = v9;
            v13 = v9;
          }
          else
          {
            sub_10004DD38((id)v7, 0, 2);
            v13 = objc_msgSend((id)v7, "list");
            v30 = 0;
          }
          v41 = v30;
          goto LABEL_26;
        case 3:
          v31 = (id)v7;
LABEL_17:
          v32 = *(_QWORD **)(v1 + 64);
          v33 = v32[17];
          if (v33)
          {
            swift_retain(v32[17]);
            TTRDataViewMonitor.pause()();
            swift_release(v33);
            v34 = v32[17];
            v32[17] = 0;
            swift_release(v34);
          }
          v17 = 0x20202020202;
          v35 = (void *)v32[18];
          v32[18] = 1;
          sub_10004E08C(v35);
          v36 = (void *)v32[8];
          v32[8] = 0;

          goto LABEL_29;
        default:
          goto LABEL_7;
      }
    }
  }
  else
  {
    v7 = 0;
    v9 = 0;
    v11 = -4;
LABEL_7:
    v14 = *(_QWORD **)(v1 + 64);
    v15 = v14[17];
    if (v15)
    {
      swift_retain(v14[17]);
      TTRDataViewMonitor.pause()();
      swift_release(v15);
      v16 = v14[17];
      v14[17] = 0;
      swift_release(v16);
    }
    v17 = 0x20202020202;
    v18 = (void *)v14[18];
    v14[18] = 1;
    sub_10004E08C(v18);
    v19 = (void *)v14[8];
    v14[8] = 0;

  }
  v20 = v1 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_lastSetReminderEditingItemsInfoSource;
  v21 = *(void **)(v1
                 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_lastSetReminderEditingItemsInfoSource);
  v22 = *(void **)(v1
                 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_lastSetReminderEditingItemsInfoSource
                 + 8);
  *(_QWORD *)v20 = v7;
  *(_QWORD *)(v20 + 8) = v9;
  v23 = *(_BYTE *)(v20 + 16);
  *(_BYTE *)(v20 + 16) = v11;
  sub_10004DD84(v21, v22, v23);
  return v17 & 0xFFFFFFFFFFFFLL;
}

uint64_t sub_10004C390(void *a1)
{
  id v1;
  void *v2;
  unsigned int v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const mach_header_64 *v18;
  uint64_t v20;

  if (!a1)
    return 3;
  v1 = a1;
  v2 = (void *)((uint64_t (*)(void))REMList.accountCapabilities.getter)();
  v3 = objc_msgSend(v2, "supportsAssignments");

  if (v3 && (v4 = objc_msgSend(v1, "shareeContext")) != 0)
  {
    v5 = v4;
    v6 = sub_100005ED8(0, &qword_10063F598, REMListShareeContext_ptr);
    v7 = TTRListShareeContextProtocol.assignableSharees.getter(v6, &protocol witness table for REMListShareeContext);

    if ((unint64_t)v7 >> 62)
    {
      if (v7 < 0)
        v20 = v7;
      else
        v20 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v7);
      v8 = _CocoaArrayWrapper.endIndex.getter(v20);
      swift_bridgeObjectRelease(v7);
    }
    else
    {
      v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v4 = (id)swift_bridgeObjectRelease(v7);
    if (v8)
      v9 = 0x10000000000;
    else
      v9 = 0x20000000000;
  }
  else
  {
    v9 = 0x20000000000;
  }
  v10 = (void *)REMList.accountCapabilities.getter(v4);
  v11 = objc_msgSend(v10, "supportsLocation");
  v12 = objc_msgSend(v10, "supportsFlagged");
  v13 = objc_msgSend(v10, "supportsAttachments");
  v14 = objc_msgSend(v10, "supportsHashtags");

  v15 = 257;
  if (!v11)
    v15 = 1;
  v16 = 0x10000;
  if (!v12)
    v16 = 0;
  v17 = 0x1000000;
  if (!v13)
    v17 = 0;
  v18 = &_mh_execute_header;
  if (!v14)
    v18 = 0;
  return v15 | v9 | v16 | v17 | (unint64_t)v18;
}

void sub_10004C550(uint64_t a1)
{
  __asm { BR              X10 }
}

void sub_10004C584(uint64_t a1, char a2)
{
  uint64_t v2;
  int v3;

  if (a2 == 2)
    v3 = 512;
  else
    v3 = (a2 & 1) << 8;
  *(_WORD *)v2 = v3;
  *(_BYTE *)(v2 + 2) = BYTE2(v3);
}

void sub_10004C66C(uint64_t a1)
{
  __asm { BR              X10 }
}

void sub_10004C6AC()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 2) = 0;
  *(_WORD *)v0 = 256;
}

uint64_t sub_10004CA14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t (*v36)(_QWORD);
  uint64_t v37;
  char v38;
  _QWORD *v39;
  BOOL v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t ObjectType;
  uint64_t v51;
  _QWORD *(*v52)(_QWORD *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v53;
  _QWORD *v54;
  _BYTE *v55;
  _BOOL4 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  _BYTE *v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  _BYTE *v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  int v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  _BYTE *v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  unint64_t v110;
  unint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  char v114;
  unint64_t v115;
  unint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t Strong;
  uint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  int v125;
  _BOOL4 v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  _QWORD *v136;
  char *v137;
  uint64_t v138;
  _BYTE *v139;
  uint64_t v140;
  uint64_t v141;
  _BYTE *v142;
  uint64_t v143;
  _BYTE v144[24];
  _QWORD v145[6];

  v2 = v1;
  v4 = sub_10002A750(&qword_10063F560);
  __chkstk_darwin(v4);
  v6 = (char *)&v125 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_100653A00);
  __chkstk_darwin(v7);
  v138 = (uint64_t)&v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_100653A10);
  __chkstk_darwin(v9);
  v132 = (uint64_t)&v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = type metadata accessor for TTRSharedWithYouHighlight(0);
  v130 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v129 = (uint64_t)&v125 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750(&qword_10063F568);
  __chkstk_darwin(v12);
  v14 = (char *)&v125 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v139 = (char *)&v125 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem(0);
  v143 = *(_QWORD *)(v18 - 8);
  v19 = __chkstk_darwin(v18);
  v140 = (uint64_t)&v125 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v133 = (char *)&v125 - v22;
  v23 = __chkstk_darwin(v21);
  v135 = (char *)&v125 - v24;
  v25 = __chkstk_darwin(v23);
  v134 = (char *)&v125 - v26;
  v27 = __chkstk_darwin(v25);
  v128 = (uint64_t)&v125 - v28;
  __chkstk_darwin(v27);
  v30 = (char *)&v125 - v29;
  v141 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
  __chkstk_darwin(v141);
  v32 = (char *)&v125 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration.Mode(0);
  __chkstk_darwin(v33);
  v35 = (char *)&v125 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a1, (uint64_t)v35, v36);
  v37 = sub_10002A750(&qword_10063F570);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v35, 1, v37) == 1)
  {
    v38 = *(_BYTE *)(a1
                   + *(int *)(type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration(0) + 20));
    v39 = sub_10004D8A8();
    v40 = 0;
    v41 = &off_1005EA1C0;
    v42 = _swiftEmptyArrayStorage;
    v43 = _swiftEmptyArrayStorage;
    goto LABEL_76;
  }
  v127 = a1;
  v137 = v6;
  v125 = v35[*(int *)(v37 + 48)];
  v142 = v32;
  sub_10001F580((uint64_t)v35, (uint64_t)v32, type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo);
  v44 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v45 = objc_msgSend(v44, "userInterfaceIdiom");

  if (v45 == (id)1)
  {
    v47 = *(_QWORD *)(v2 + 64);
    v48 = *(_QWORD *)(v47 + 48);
    if (v48)
    {
      v49 = *(_QWORD *)(v47 + 56);
      ObjectType = swift_getObjectType(*(_QWORD *)(v47 + 48), v46);
      v51 = v2;
      v52 = *(_QWORD *(**)(_QWORD *__return_ptr, uint64_t, uint64_t, __n128))(v49 + 32);
      v53 = swift_unknownObjectRetain(v48);
      v54 = v52(v145, ObjectType, v49, v53);
      __chkstk_darwin(v54);
      *((_QWORD *)&v125 - 4) = v145;
      *((_QWORD *)&v125 - 3) = v48;
      v55 = v142;
      *((_QWORD *)&v125 - 2) = v49;
      *((_QWORD *)&v125 - 1) = v55;
      v136 = sub_100476320((void (*)(_QWORD *__return_ptr, _QWORD))sub_10004E04C, (uint64_t)(&v125 - 12), (uint64_t)&off_1005EA198);
      v2 = v51;
      sub_100027F10(v145);
      swift_unknownObjectRelease(v48);
      v56 = 0;
    }
    else
    {
      v57 = (uint64_t)v142;
      v58 = sub_10004C010();
      v136 = sub_10004DDE4(v58, v57);
      v56 = v58 == 3;
    }
  }
  else
  {
    v56 = 0;
    v136 = _swiftEmptyArrayStorage;
  }
  v145[0] = _swiftEmptyArrayStorage;
  v59 = OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_templatesItemVisibilityOverride;
  v60 = *(unsigned __int8 *)(v2
                           + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_templatesItemVisibilityOverride);
  v61 = v141;
  v126 = v56;
  if (v60 != 2)
  {
    if ((v60 & 1) != 0 && v142[*(int *)(v141 + 32)] == 1)
    {
      if (qword_10063D2B8 != -1)
        swift_once(&qword_10063D2B8, sub_10004A0D4);
      v62 = type metadata accessor for Logger(0);
      v63 = sub_100012DC4(v62, (uint64_t)qword_10063F420);
      v64 = Logger.logObject.getter(v63);
      v65 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v64, v65))
      {
        v66 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v66 = 0;
        _os_log_impl((void *)&_mh_execute_header, v64, v65, "TTRIRemindersListNavigationBarPresenter: reset templatesItemVisibilityOverride", v66, 2u);
        swift_slowDealloc(v66, -1, -1);
      }

      *(_BYTE *)(v2 + v59) = 2;
    }
    goto LABEL_18;
  }
  if ((v142[*(int *)(v141 + 32)] & 1) != 0)
  {
LABEL_18:
    v67 = sub_10002A750(&qword_10063F578);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v30, 1, 5, v67);
    v43 = (_QWORD *)sub_100455114(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
    v69 = v43[2];
    v68 = v43[3];
    if (v69 >= v68 >> 1)
      v43 = (_QWORD *)sub_100455114(v68 > 1, v69 + 1, 1, (unint64_t)v43);
    v6 = v137;
    v43[2] = v69 + 1;
    sub_10001F580((uint64_t)v30, (uint64_t)v43+ ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80))+ *(_QWORD *)(v143 + 72) * v69, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
    goto LABEL_21;
  }
  v43 = _swiftEmptyArrayStorage;
  v6 = v137;
LABEL_21:
  v70 = v142;
  sub_10000735C((uint64_t)&v142[*(int *)(v61 + 20)], (uint64_t)v14, &qword_10063F568);
  v71 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15);
  v72 = v61;
  a1 = v127;
  if (v71 == 1)
  {
    sub_1000073A0((uint64_t)v14, &qword_10063F568);
    v73 = (uint64_t)&v70[*(int *)(v72 + 24)];
    v74 = v138;
    sub_10000735C(v73, v138, (uint64_t *)&unk_100653A00);
    v75 = type metadata accessor for TTRTemplatePublicLinkData(0);
    v76 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 48))(v74, 1, v75);
    sub_1000073A0(v74, (uint64_t *)&unk_100653A00);
    if (v76 == 1)
    {
      v42 = v136;
    }
    else
    {
      v80 = sub_10002A750(&qword_10063F578);
      v81 = (uint64_t)v133;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v133, 4, 5, v80);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v43);
      v42 = v136;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v43 = (_QWORD *)sub_100455114(0, v43[2] + 1, 1, (unint64_t)v43);
      v84 = v43[2];
      v83 = v43[3];
      if (v84 >= v83 >> 1)
        v43 = (_QWORD *)sub_100455114(v83 > 1, v84 + 1, 1, (unint64_t)v43);
      v43[2] = v84 + 1;
      sub_10001F580(v81, (uint64_t)v43+ ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80))+ *(_QWORD *)(v143 + 72) * v84, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
    }
  }
  else
  {
    v77 = v139;
    sub_10001F580((uint64_t)v14, (uint64_t)v139, type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo);
    if (*v77 == 1)
    {
      v78 = v132;
      sub_10000735C((uint64_t)&v77[*(int *)(v15 + 28)], v132, &qword_100653A10);
      v79 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v130 + 48))(v78, 1, v131);
      v42 = v136;
      if (v79 == 1)
      {
        sub_1000073A0(v78, &qword_100653A10);
      }
      else
      {
        v85 = v78;
        v86 = v129;
        sub_10001F580(v85, v129, (uint64_t (*)(_QWORD))&type metadata accessor for TTRSharedWithYouHighlight);
        v87 = v128;
        sub_10002B1E8(v86, v128, (uint64_t (*)(_QWORD))&type metadata accessor for TTRSharedWithYouHighlight);
        v88 = sub_10002A750(&qword_10063F578);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v87, 0, 5, v88);
        if ((swift_isUniquelyReferenced_nonNull_native(v43) & 1) == 0)
          v43 = (_QWORD *)sub_100455114(0, v43[2] + 1, 1, (unint64_t)v43);
        v90 = v43[2];
        v89 = v43[3];
        if (v90 >= v89 >> 1)
          v43 = (_QWORD *)sub_100455114(v89 > 1, v90 + 1, 1, (unint64_t)v43);
        v43[2] = v90 + 1;
        sub_10001F580(v87, (uint64_t)v43+ ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80))+ *(_QWORD *)(v143 + 72) * v90, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
        sub_10001F544(v86, (uint64_t (*)(_QWORD))&type metadata accessor for TTRSharedWithYouHighlight);
        v77 = v139;
      }
    }
    else
    {
      v42 = v136;
    }
    if (v77[1] == 1)
    {
      v91 = v77[2];
      v92 = sub_10002A750(&qword_10063F578);
      v93 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56);
      if (v91 == 1)
      {
        v93(v134, 3, 5, v92);
        if ((swift_isUniquelyReferenced_nonNull_native(v43) & 1) == 0)
          v43 = (_QWORD *)sub_100455114(0, v43[2] + 1, 1, (unint64_t)v43);
        v95 = v43[2];
        v94 = v43[3];
        if (v95 >= v94 >> 1)
          v43 = (_QWORD *)sub_100455114(v94 > 1, v95 + 1, 1, (unint64_t)v43);
        v43[2] = v95 + 1;
        v96 = (uint64_t)v43
            + ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80))
            + *(_QWORD *)(v143 + 72) * v95;
        v97 = (uint64_t)v134;
      }
      else
      {
        v93(v135, 2, 5, v92);
        if ((swift_isUniquelyReferenced_nonNull_native(v43) & 1) == 0)
          v43 = (_QWORD *)sub_100455114(0, v43[2] + 1, 1, (unint64_t)v43);
        v100 = v43[2];
        v99 = v43[3];
        if (v100 >= v99 >> 1)
          v43 = (_QWORD *)sub_100455114(v99 > 1, v100 + 1, 1, (unint64_t)v43);
        v43[2] = v100 + 1;
        v96 = (uint64_t)v43
            + ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80))
            + *(_QWORD *)(v143 + 72) * v100;
        v97 = (uint64_t)v135;
      }
      sub_10001F580(v97, v96, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
      v98 = (uint64_t)v139;
    }
    else
    {
      v98 = (uint64_t)v77;
    }
    sub_10001F544(v98, type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo);
  }
  if (*v70 == 1)
  {
    v101 = sub_10002A750(&qword_10063F578);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v140, 5, 5, v101);
    if ((swift_isUniquelyReferenced_nonNull_native(v43) & 1) == 0)
      v43 = (_QWORD *)sub_100455114(0, v43[2] + 1, 1, (unint64_t)v43);
    v103 = v43[2];
    v102 = v43[3];
    if (v103 >= v102 >> 1)
      v43 = (_QWORD *)sub_100455114(v102 > 1, v103 + 1, 1, (unint64_t)v43);
    v43[2] = v103 + 1;
    sub_10001F580(v140, (uint64_t)v43+ ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80))+ *(_QWORD *)(v143 + 72) * v103, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
  }
  if (v125)
  {
    v41 = sub_100455008(0, 1, 1, _swiftEmptyArrayStorage);
    v105 = v41[2];
    v104 = v41[3];
    if (v105 >= v104 >> 1)
      v41 = sub_100455008((_QWORD *)(v104 > 1), v105 + 1, 1, v41);
    v41[2] = v105 + 1;
    *(_OWORD *)&v41[2 * v105 + 4] = xmmword_1005205B0;
  }
  else
  {
    v106 = &v70[*(int *)(v141 + 28)];
    v107 = *((_QWORD *)v106 + 1);
    if (v107 == 1)
    {
      v41 = _swiftEmptyArrayStorage;
    }
    else
    {
      v108 = *(_QWORD *)v106;
      v109 = v106[16];
      sub_10004E024(*(_QWORD *)v106, *((_QWORD *)v106 + 1));
      swift_bridgeObjectRetain(v107);
      v41 = sub_100455008(0, 1, 1, _swiftEmptyArrayStorage);
      v111 = v41[2];
      v110 = v41[3];
      if (v111 >= v110 >> 1)
        v41 = sub_100455008((_QWORD *)(v110 > 1), v111 + 1, 1, v41);
      v41[2] = v111 + 1;
      v112 = &v41[2 * v111];
      v112[4] = v108;
      v112[5] = v107;
      sub_10004E038(v108, v107);
      if ((v109 & 1) != 0)
      {
        v113 = (_QWORD *)v145[0];
        v114 = swift_isUniquelyReferenced_nonNull_native(v145[0]);
        v42 = v136;
        v6 = v137;
        if ((v114 & 1) == 0)
          v113 = sub_100454F00(0, v113[2] + 1, 1, v113);
        v116 = v113[2];
        v115 = v113[3];
        if (v116 >= v115 >> 1)
          v113 = sub_100454F00((_QWORD *)(v115 > 1), v116 + 1, 1, v113);
        v113[2] = v116 + 1;
        *((_WORD *)v113 + v116 + 16) = 2;
        v145[0] = v113;
      }
      else
      {
        v42 = v136;
        v6 = v137;
      }
      v70 = v142;
    }
  }
  v117 = sub_10004D8A8();
  sub_10045037C((uint64_t)v117);
  sub_10001F544((uint64_t)v70, type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo);
  v38 = *(_BYTE *)(a1
                 + *(int *)(type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration(0) + 20));
  v39 = (_QWORD *)v145[0];
  v40 = v126;
LABEL_76:
  *(_BYTE *)(v2 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_shouldIgnoreCenterItemActions) = v40;
  v118 = v2;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (Strong)
  {
    v120 = Strong;
    LOBYTE(v145[0]) = v38;
    v145[1] = v42;
    v145[2] = v43;
    v145[3] = v41;
    v145[4] = v39;
    v121 = sub_100084978((uint64_t)v145);
    swift_unknownObjectRelease(v120);
  }
  else
  {
    v121 = 0;
  }
  swift_bridgeObjectRelease(v39);
  swift_bridgeObjectRelease(v41);
  swift_bridgeObjectRelease(v43);
  swift_bridgeObjectRelease(v42);
  sub_10002B1E8(a1, (uint64_t)v6, type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration);
  v122 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 56))(v6, 0, 1, v122);
  v123 = v118 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_lastSetConfiguration;
  swift_beginAccess(v118 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_lastSetConfiguration, v144, 33, 0);
  sub_10004DFDC((uint64_t)v6, v123);
  swift_endAccess(v144);
  return v121 & 1;
}

_QWORD *sub_10004D8A8()
{
  uint64_t v0;
  uint64_t Strong;
  char v2;
  uint64_t v3;
  __int16 v4;
  int v5;
  _QWORD *result;
  uint64_t v7;
  __int16 v8;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    v2 = *(_BYTE *)(Strong + 16);
    swift_unknownObjectRelease(Strong);
    if ((v2 & 1) != 0)
      return _swiftEmptyArrayStorage;
  }
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(unsigned __int8 *)(v3 + 112);
  v5 = *(unsigned __int8 *)(v3 + 113);
  if ((v4 & 1) == 0 && !*(_BYTE *)(v3 + 113))
    return _swiftEmptyArrayStorage;
  v7 = sub_10002A750(&qword_10063F5A8);
  result = (_QWORD *)swift_allocObject(v7, 34, 7);
  *((_OWORD *)result + 1) = xmmword_100520250;
  if (v5)
    v8 = 256;
  else
    v8 = 0;
  *((_WORD *)result + 16) = v8 | v4;
  return result;
}

_QWORD *sub_10004D930()
{
  _QWORD *v0;

  sub_1000381C8((uint64_t)(v0 + 2));
  sub_1000381C8((uint64_t)(v0 + 4));
  sub_1000381C8((uint64_t)(v0 + 6));
  swift_unknownObjectRelease(v0[8]);
  sub_100027F10(v0 + 10);
  swift_release(v0[15]);
  swift_unknownObjectRelease(v0[16]);
  sub_1000073A0((uint64_t)v0 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_lastSetConfiguration, &qword_10063F560);
  sub_10004DD84(*(void **)((char *)v0+ OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_lastSetReminderEditingItemsInfoSource), *(void **)((char *)v0+ OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_lastSetReminderEditingItemsInfoSource+ 8), *((_BYTE *)v0+ OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_lastSetReminderEditingItemsInfoSource+ 16));
  return v0;
}

uint64_t sub_10004D9AC()
{
  uint64_t v0;

  sub_10004D930();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10004D9D0()
{
  return type metadata accessor for TTRIRemindersListNavigationBarPresenter(0);
}

uint64_t type metadata accessor for TTRIRemindersListNavigationBarPresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_10063F480;
  if (!qword_10063F480)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIRemindersListNavigationBarPresenter);
  return result;
}

void sub_10004DA14(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[11];

  v4[0] = &unk_1005206A8;
  v4[1] = &unk_1005206A8;
  v4[2] = &unk_1005206A8;
  v4[3] = &unk_1005206C0;
  v4[4] = &unk_1005206D8;
  v4[5] = &unk_1005206F0;
  v4[6] = &unk_1005206C0;
  sub_10004DACC(319);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(v2 - 8) + 64;
    v4[8] = &unk_100520708;
    v4[9] = &unk_100520720;
    v4[10] = &unk_100520738;
    swift_updateClassMetadata2(a1, 256, 11, v4, a1 + 80);
  }
}

void sub_10004DACC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10063F490)
  {
    v2 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10063F490);
  }
}

void sub_10004DB20()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void *v9;
  void *v10;
  void *v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  void *v14;
  void *v15;
  unsigned int v16;
  uint64_t v17;
  char v18;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v3 = objc_msgSend(v2, "userInterfaceIdiom");

  if (v3 != (id)1)
    return;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 32);
  if (!Strong)
  {
    v17 = v1 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_lastSetReminderEditingItemsInfoSource;
    v16 = *(unsigned __int8 *)(v1
                             + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_lastSetReminderEditingItemsInfoSource
                             + 16);
    if (v16 > 0xFB)
      return;
    v11 = 0;
    v9 = 0;
    v14 = *(void **)v17;
    v15 = *(void **)(v17 + 8);
    v13 = -4;
LABEL_12:
    sub_10004DD24(v14, v15, v16);
    sub_10004DD24(v9, v11, v13);
    sub_10004DD84(v14, v15, v16);
    sub_10004DD84(v9, v11, v13);
LABEL_13:
    sub_10004BD64(0xD000000000000015, 0x800000010055F880);
LABEL_14:
    sub_10004DD84(v9, v11, v13);
    return;
  }
  v6 = Strong;
  v7 = *(_QWORD *)(v1 + 40);
  ObjectType = swift_getObjectType(Strong, v5);
  v9 = (void *)(*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v7 + 8))(v1, &off_1005EC008, ObjectType, v7);
  v11 = v10;
  v13 = v12;
  swift_unknownObjectRelease(v6);
  v14 = *(void **)(v1
                 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_lastSetReminderEditingItemsInfoSource);
  v15 = *(void **)(v1
                 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_lastSetReminderEditingItemsInfoSource
                 + 8);
  v16 = *(unsigned __int8 *)(v1
                           + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_lastSetReminderEditingItemsInfoSource
                           + 16);
  if (v16 <= 0xFB)
  {
    if (v13 <= 0xFBu)
    {
      sub_10004DD24(*(id *)(v1+ OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_lastSetReminderEditingItemsInfoSource), *(void **)(v1+ OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_lastSetReminderEditingItemsInfoSource+ 8), *(_BYTE *)(v1+ OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_lastSetReminderEditingItemsInfoSource+ 16));
      sub_10004DD24(v9, v11, v13);
      v18 = sub_1004FDB38((uint64_t)v14, v15, v16, (unint64_t)v9, v11, v13);
      sub_10004DD84(v9, v11, v13);
      sub_10004DD84(v14, v15, v16);
      if ((v18 & 1) != 0)
        goto LABEL_14;
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v13 <= 0xFBu)
    goto LABEL_12;
}

id sub_10004DD24(id result, void *a2, char a3)
{
  if (a3 <= 0xFBu)
    return sub_10004DD38(result, a2, a3);
  return result;
}

id sub_10004DD38(id result, void *a2, char a3)
{
  if ((a3 & 0x80) == 0)
    return sub_10004DD44(result, a2, a3);
  return result;
}

id sub_10004DD44(id result, void *a2, char a3)
{
  id v4;
  id v5;

  if (a3 != 1 && a3 != 3)
  {
    if (a3 != 2)
      return result;
    v5 = result;
    v4 = a2;
    result = v5;
  }
  return result;
}

void sub_10004DD84(void *a1, void *a2, char a3)
{
  if (a3 <= 0xFBu)
    sub_10004DD98(a1, a2, a3);
}

void sub_10004DD98(void *a1, void *a2, char a3)
{
  if ((a3 & 0x80) == 0)
    sub_10004DDA4(a1, a2, a3);
}

void sub_10004DDA4(void *a1, void *a2, char a3)
{
  if (a3 != 1 && a3 != 3)
  {
    if (a3 != 2)
      return;

    a1 = a2;
  }

}

_QWORD *sub_10004DDE4(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  _BYTE v20[16];

  v4 = sub_10002A750(&qword_10063F568);
  __chkstk_darwin(v4);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
  __chkstk_darwin(v7);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002B1E8(a2, (uint64_t)v9, v10);
  if (a1 == 3)
  {
    sub_10000735C((uint64_t)&v9[*(int *)(v7 + 20)], (uint64_t)v6, &qword_10063F568);
    sub_10001F544((uint64_t)v9, type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo);
    v11 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11) == 1)
    {
      v12 = sub_1000073A0((uint64_t)v6, &qword_10063F568);
LABEL_7:
      a1 = 1;
      goto LABEL_8;
    }
    v13 = *v6;
    v12 = sub_10001F544((uint64_t)v6, type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo);
    if ((v13 & 1) == 0)
      goto LABEL_7;
    a1 = 1;
  }
  else
  {
    v12 = sub_10001F544((uint64_t)v9, type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo);
  }
LABEL_8:
  __chkstk_darwin(v12);
  v20[-16] = a1;
  v20[-15] = v14;
  v20[-14] = v15;
  v20[-13] = v16;
  v20[-12] = v17;
  v20[-11] = v18;
  *(_QWORD *)&v20[-8] = a2;
  return sub_100476320((void (*)(_QWORD *__return_ptr, _QWORD))sub_10004E068, (uint64_t)&v20[-32], (uint64_t)&off_1005EA198);
}

uint64_t sub_10004DFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_10063F560);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004E024(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t sub_10004E038(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease(a2);
  return result;
}

void sub_10004E04C(uint64_t a1)
{
  sub_10004C66C(a1);
}

void sub_10004E068(uint64_t a1)
{
  sub_10004C550(a1);
}

void sub_10004E08C(id a1)
{
  if (a1 != (id)1)

}

void sub_10004E09C(id a1, unsigned __int8 a2)
{
  if (a2 <= 1u)

}

uint64_t sub_10004E0B0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10004E0D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

double sub_10004E0F8(uint64_t a1)
{
  uint64_t v1;

  return sub_10004AA80(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

double sub_10004E104(uint64_t a1)
{
  uint64_t v1;

  return sub_10004AC4C(a1, v1);
}

double sub_10004E10C(uint64_t a1)
{
  uint64_t v1;

  return sub_10004B48C(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

void sub_10004E118(uint64_t a1)
{
  uint64_t v1;

  sub_10004B3CC(a1, v1);
}

uint64_t sub_10004E124(uint64_t a1)
{
  _QWORD v2[6];

  v2[0] = &unk_1005207E0;
  v2[1] = &unk_1005207F8;
  v2[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[3] = &unk_100520810;
  v2[4] = &unk_1005207F8;
  v2[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 0, 6, v2, a1 + 96);
}

uint64_t sub_10004E188(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t result;
  Swift::Int v30;
  void (*v31)(_BYTE *, _QWORD);
  void (*v32)(char *);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *);
  uint64_t v49;
  char *v50;
  Swift::Int v51;
  uint64_t v52;
  _BYTE v53[32];
  uint64_t v54;

  v40 = a5;
  v41 = a8;
  v48 = a1;
  v49 = a2;
  v39 = *(_QWORD *)(a5 - 8);
  __chkstk_darwin(a1);
  v50 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(v13 + 8), v14, &protocol requirements base descriptor for Sequence, &associated type descriptor for Sequence.Element);
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v17 = __chkstk_darwin(AssociatedTypeWitness);
  v19 = (char *)&v39 - v18;
  __chkstk_darwin(v17);
  v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = swift_getAssociatedTypeWitness(0, a6, a3, &protocol requirements base descriptor for Collection, &associated type descriptor for Collection.Index);
  v42 = *(_QWORD *)(v22 - 8);
  v43 = v22;
  __chkstk_darwin(v22);
  v24 = (char *)&v39 - v23;
  v25 = dispatch thunk of Collection.count.getter(a3, a6);
  if (!v25)
    return static Array._allocateUninitialized(_:)(0, a4);
  v46 = AssociatedTypeWitness;
  v26 = v8;
  v27 = a4;
  v28 = v25;
  v54 = ContiguousArray.init()(v27);
  v44 = type metadata accessor for ContiguousArray(0, v27);
  ContiguousArray.reserveCapacity(_:)(v28);
  v47 = v26;
  result = dispatch thunk of Collection.startIndex.getter(a3, a6);
  if ((v28 & 0x8000000000000000) == 0)
  {
    v30 = v28;
    v45 = v21;
    while (v30)
    {
      v51 = v30;
      v31 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read(v53, v24, a3, a6);
      v32 = *(void (**)(char *))(v16 + 16);
      v33 = v16;
      v34 = v46;
      v32(v19);
      v31(v53, 0);
      v35 = v24;
      v36 = v19;
      v37 = v45;
      v38 = v52;
      v48(v36, v50);
      if (v38)
      {
        (*(void (**)(char *, uint64_t))(v33 + 8))(v36, v34);
        (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v43);
        swift_release(v54);
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v41, v50, v40);
      }
      v52 = 0;
      (*(void (**)(char *, uint64_t))(v33 + 8))(v36, v34);
      ContiguousArray.append(_:)(v37, v44);
      result = dispatch thunk of Collection.formIndex(after:)(v35, a3, a6);
      v30 = v51 - 1;
      v16 = v33;
      v19 = v36;
      v24 = v35;
      if (v51 == 1)
      {
        (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v43);
        return v54;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10004E478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10063F5B0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10063F5B0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

BOOL sub_10004E508(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_10004E51C()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10004E560()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10004E588(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_10004E5C8()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 72) = 1;
}

uint64_t sub_10004E5D4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t WitnessTable;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v15;
  _BYTE v16[24];

  v1 = *v0;
  swift_beginAccess(v0 + 10, v16, 0, 0);
  v2 = v0[10];
  v4 = type metadata accessor for TTRITreeViewNode(0, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), v3);
  swift_bridgeObjectRetain(v2);
  WitnessTable = swift_getWitnessTable(&unk_1005276C0, v4);
  v6 = Dictionary.isEmpty.getter(v2, v4, &type metadata for NodeChange, WitnessTable);
  swift_bridgeObjectRelease(v2);
  if ((v6 & 1) != 0
    && (v7 = v0[11],
        swift_bridgeObjectRetain(v7),
        v9 = Dictionary.isEmpty.getter(v8, v4, &type metadata for NodeChange, WitnessTable),
        swift_bridgeObjectRelease(v7),
        (v9 & 1) != 0))
  {
    swift_beginAccess(v0 + 12, &v15, 0, 0);
    v10 = v0[12];
    swift_bridgeObjectRetain(v10);
    v11 = sub_10002A750(&qword_10063F660);
    v12 = Dictionary.isEmpty.getter(v10, v4, v11, WitnessTable);
    swift_bridgeObjectRelease(v10);
    v13 = v12 ^ 1;
  }
  else
  {
    v13 = 1;
  }
  return v13 & 1;
}

uint64_t sub_10004E700(uint64_t a1, char a2, uint64_t a3, char a4)
{
  return sub_10004E71C(0, a1, a2, a3, a4 & 1);
}

uint64_t sub_10004E71C(char a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t WitnessTable;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t inited;
  _BYTE v36[48];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[24];
  uint64_t v41;

  v6 = v5;
  v11 = *v6;
  if ((a1 & 1) != 0)
  {
    swift_beginAccess(v6 + 10, v40, 32, 0);
    v12 = v6[10];
    v37 = a2;
    v13 = *(_QWORD *)(v11 + 80);
    v14 = *(_QWORD *)(v11 + 88);
    v16 = type metadata accessor for TTRITreeViewNode(0, v13, v14, v15);
    swift_retain();
    WitnessTable = swift_getWitnessTable(&unk_1005276C0, v16);
    v18 = v12;
    v19 = v16;
  }
  else
  {
    swift_beginAccess(v6 + 10, v40, 32, 0);
    v20 = v6[11];
    v37 = a2;
    v13 = *(_QWORD *)(v11 + 80);
    v14 = *(_QWORD *)(v11 + 88);
    v22 = type metadata accessor for TTRITreeViewNode(0, v13, v14, v21);
    swift_retain();
    WitnessTable = swift_getWitnessTable(&unk_1005276C0, v22);
    v18 = v20;
    v19 = v22;
  }
  Dictionary.subscript.getter(&v38, &v37, v18, v19, &type metadata for NodeChange, WitnessTable);
  swift_release();
  v24 = v38;
  v23 = v39;
  swift_endAccess(v40);
  if (!v24)
  {
    if ((a5 & 1) != 0)
    {
      sub_100352F0C((uint64_t)_swiftEmptyArrayStorage);
    }
    else
    {
      v33 = sub_10002A750(qword_10063F670);
      inited = swift_initStackObject(v33, v36);
      *(_OWORD *)(inited + 16) = xmmword_100520250;
      *(_BYTE *)(inited + 32) = a3;
      *(_QWORD *)(inited + 40) = a4;
      sub_100352F0C(inited);
      swift_setDeallocating(inited);
    }
    __asm { BR              X11 }
  }
  v41 = v24;
  if ((a5 & 1) == 0)
    sub_10022BD50(a4, 0, a3);
  v25 = qword_100520AD0[a3] | v23;
  v38 = v41;
  v39 = v25;
  v41 = a2;
  swift_beginAccess(v6 + 10, v40, 33, 0);
  if ((a1 & 1) != 0)
  {
    v27 = type metadata accessor for TTRITreeViewNode(255, v13, v14, v26);
    swift_retain();
    v28 = swift_getWitnessTable(&unk_1005276C0, v27);
    v29 = type metadata accessor for Dictionary(0, v27, &type metadata for NodeChange, v28);
  }
  else
  {
    v30 = type metadata accessor for TTRITreeViewNode(255, v13, v14, v26);
    swift_retain();
    v31 = swift_getWitnessTable(&unk_1005276C0, v30);
    v29 = type metadata accessor for Dictionary(0, v30, &type metadata for NodeChange, v31);
  }
  Dictionary.subscript.setter(&v38, &v41, v29);
  return swift_endAccess(v40);
}

void sub_10004EA0C()
{
  JUMPOUT(0x10004E880);
}

void sub_10004EA14()
{
  JUMPOUT(0x10004E880);
}

void sub_10004EA1C()
{
  JUMPOUT(0x10004E880);
}

uint64_t sub_10004EA24(uint64_t a1, char a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  _BYTE *v17;
  uint64_t AssociatedConformanceWitness;
  uint64_t v19;
  char v20;
  _BYTE v22[12];
  int v23;
  uint64_t v24;
  uint64_t v25;

  v23 = a4;
  v11 = *(_QWORD *)(a5 - 8);
  __chkstk_darwin(a1);
  v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v14, a5, &protocol requirements base descriptor for Sequence, &associated type descriptor for Sequence.Iterator);
  v24 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v17 = &v22[-v16];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v13, a1, a5);
  dispatch thunk of Sequence.makeIterator()(a5);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a6, a5, AssociatedTypeWitness, &protocol requirements base descriptor for Sequence, &associated conformance descriptor for Sequence.Sequence.Iterator: IteratorProtocol);
  dispatch thunk of IteratorProtocol.next()(AssociatedTypeWitness, AssociatedConformanceWitness);
  v19 = v25;
  if (v25)
  {
    v20 = v23 & 1;
    do
    {
      sub_10004E71C(0, v19, a2, a3, v20);
      swift_release();
      dispatch thunk of IteratorProtocol.next()(AssociatedTypeWitness, AssociatedConformanceWitness);
      v19 = v25;
    }
    while (v25);
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v24 + 8))(v17, AssociatedTypeWitness);
}

uint64_t sub_10004EBC0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  return sub_10004E71C(1, a1, a3, a4, a5 & 1);
}

uint64_t sub_10004EBD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t *v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t WitnessTable;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)();
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)();
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)();
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t result;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104[16];
  uint64_t v105;
  uint64_t v106;
  uint64_t (*v107)(uint64_t);
  uint64_t v108;
  char v109[16];
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  char v120[16];
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  char v131[16];
  uint64_t (*v132)(uint64_t);
  uint64_t v133;
  char v134[16];
  uint64_t (*v135)();
  uint64_t v136;
  char v137[16];
  uint64_t (*v138)(uint64_t);
  uint64_t v139;
  char v140[16];
  uint64_t (*v141)(uint64_t);
  uint64_t v142;
  char v143[16];
  uint64_t (*v144)();
  uint64_t v145;
  char v146[16];
  uint64_t (*v147)(uint64_t);
  uint64_t v148;
  char v149[16];
  uint64_t (*v150)(uint64_t);
  uint64_t v151;
  char v152[16];
  uint64_t (*v153)();
  uint64_t v154;
  char v155[16];
  uint64_t (*v156)(uint64_t);
  uint64_t v157;
  uint64_t v158;
  char v159[24];
  char v160[24];
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166[5];
  _QWORD v167[2];
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;

  v11 = *v7;
  v13 = v7[2];
  v12 = v7[3];
  v14 = v7[4];
  v100 = *((_BYTE *)v7 + 40);
  swift_beginAccess(v7 + 10, v160, 0, 0);
  v15 = v7[10];
  v17 = *(_QWORD *)(v11 + 80);
  v16 = *(_QWORD *)(v11 + 88);
  swift_bridgeObjectRetain_n(v13, 2);
  swift_bridgeObjectRetain_n(v12, 2);
  swift_bridgeObjectRetain_n(v14, 2);
  swift_bridgeObjectRetain_n(a1, 2);
  swift_bridgeObjectRetain_n(a2, 2);
  swift_bridgeObjectRetain_n(a3, 2);
  swift_bridgeObjectRetain(v15);
  v102 = v16;
  LOBYTE(v70) = a4;
  sub_100051078(v18, v13, v12, v14, a1, a2, &v161, v70, v17, v16);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(a1);
  v19 = v98[11];
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(v19);
  LOBYTE(v71) = a4;
  sub_100051078(v20, v13, v12, v14, a1, a2, v166, v71, v17, v16);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(a1);
  swift_bridgeObjectRetain(v13);
  v90 = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  v89 = v13;
  v91 = a1;
  v92 = a2;
  sub_100051484(v166, &v161, v13, v12, v14, v100, a1, a2, (uint64_t)v167, a3, a4, v17, v16);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(a1);
  v180 = v166[0];
  sub_1000522B0(&v180);
  v179 = v166[1];
  sub_1000522B0(&v179);
  v178 = v166[2];
  sub_1000522B0(&v178);
  v177 = v166[3];
  sub_1000522B0(&v177);
  v176 = v166[4];
  sub_1000522B0(&v176);
  v21 = v168;
  v73 = v169;
  v75 = v167[1];
  v85 = v167[0];
  v87 = v168;
  v79 = v170;
  swift_beginAccess(v98 + 12, v159, 0, 0);
  v22 = v98[12];
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v22);
  v78 = sub_1000522D8(v23, (uint64_t)&v161, v17, v16);
  swift_bridgeObjectRelease(v22);
  v24 = v161;
  v174 = v161;
  v175 = v161;
  v25 = v98[10];
  v27 = type metadata accessor for TTRITreeViewNode(0, v17, v16, v26);
  WitnessTable = swift_getWitnessTable(&unk_1005276C0, v27);
  v29 = swift_allocObject(&unk_1005EC420, 41, 7);
  *(_QWORD *)(v29 + 16) = v27;
  *(_QWORD *)(v29 + 24) = WitnessTable;
  *(_QWORD *)(v29 + 32) = v25;
  *(_BYTE *)(v29 + 40) = 1;
  v156 = sub_10005266C;
  v157 = v29;
  swift_bridgeObjectRetain(v25);
  v153 = sub_10004FBC4(v89, v90, v14, v100);
  v154 = v30;
  v97 = v27;
  v31 = type metadata accessor for Set(0, v27, WitnessTable);
  swift_bridgeObjectRetain(v24);
  v94 = v31;
  v95 = swift_getWitnessTable(&protocol conformance descriptor for Set<A>, v31);
  v77 = sub_10004F8B4((uint64_t)&v174, (uint64_t)sub_10005237C, (uint64_t)v155, (uint64_t)sub_1000523AC, (uint64_t)v152, v17, v31, (uint64_t)&type metadata for Int, v16, v95, (uint64_t)&protocol witness table for Int);
  v32 = v174;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease(v32);
  v174 = v85;
  v33 = v98[11];
  v34 = swift_allocObject(&unk_1005EC420, 41, 7);
  *(_QWORD *)(v34 + 16) = v27;
  *(_QWORD *)(v34 + 24) = WitnessTable;
  *(_QWORD *)(v34 + 32) = v33;
  *(_BYTE *)(v34 + 40) = 1;
  v150 = sub_10005266C;
  v151 = v34;
  swift_bridgeObjectRetain(v33);
  v35 = sub_10004FC48(v89, v90, v14, v100);
  v37 = v36;
  v82 = type metadata accessor for IndexPath(0);
  v83 = sub_1000523B0();
  v76 = sub_10004F8B4((uint64_t)&v174, (uint64_t)sub_100052D6C, (uint64_t)v149, (uint64_t)v35, v37, v17, v31, v82, v16, v95, v83);
  v38 = v174;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease(v38);
  v39 = v164;
  v173 = v164;
  v174 = v164;
  v40 = v98[10];
  v41 = swift_allocObject(&unk_1005EC420, 41, 7);
  *(_QWORD *)(v41 + 16) = v27;
  *(_QWORD *)(v41 + 24) = WitnessTable;
  *(_QWORD *)(v41 + 32) = v40;
  *(_BYTE *)(v41 + 40) = 3;
  v147 = sub_10005266C;
  v148 = v41;
  swift_bridgeObjectRetain(v40);
  v144 = sub_10004FCCC(v89, v90, v14, v100);
  v145 = v42;
  swift_bridgeObjectRetain(v39);
  v86 = sub_10004F8B4((uint64_t)&v173, (uint64_t)sub_100052D6C, (uint64_t)v146, (uint64_t)sub_1000523AC, (uint64_t)v143, v17, v31, (uint64_t)&type metadata for Int, v16, v95, (uint64_t)&protocol witness table for Int);
  v43 = v173;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease(v43);
  v173 = v73;
  v44 = v98[11];
  v45 = swift_allocObject(&unk_1005EC420, 41, 7);
  *(_QWORD *)(v45 + 16) = v27;
  *(_QWORD *)(v45 + 24) = WitnessTable;
  *(_QWORD *)(v45 + 32) = v44;
  *(_BYTE *)(v45 + 40) = 3;
  v141 = sub_10005266C;
  v142 = v45;
  swift_bridgeObjectRetain(v44);
  v46 = sub_10004FD50(v89, v90, v14, v100);
  v74 = sub_10004F8B4((uint64_t)&v173, (uint64_t)sub_100052D6C, (uint64_t)v140, (uint64_t)v46, v47, v17, v31, v82, v16, v95, v83);
  v48 = v173;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease(v48);
  v49 = v162;
  v172 = v162;
  v173 = v162;
  v50 = v98[10];
  v51 = swift_allocObject(&unk_1005EC420, 41, 7);
  *(_QWORD *)(v51 + 16) = v27;
  *(_QWORD *)(v51 + 24) = WitnessTable;
  *(_QWORD *)(v51 + 32) = v50;
  *(_BYTE *)(v51 + 40) = 0;
  v138 = sub_10005266C;
  v139 = v51;
  swift_bridgeObjectRetain(v50);
  v135 = sub_10004FDD4(v91, v92, a3, a4);
  v136 = v52;
  swift_bridgeObjectRetain(v49);
  v72 = sub_10004F8B4((uint64_t)&v172, (uint64_t)sub_100052D6C, (uint64_t)v137, (uint64_t)sub_1000523AC, (uint64_t)v134, v17, v31, (uint64_t)&type metadata for Int, v16, v95, (uint64_t)&protocol witness table for Int);
  v53 = v172;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease(v53);
  v172 = v75;
  v54 = v98[11];
  v55 = swift_allocObject(&unk_1005EC420, 41, 7);
  *(_QWORD *)(v55 + 16) = v27;
  *(_QWORD *)(v55 + 24) = WitnessTable;
  *(_QWORD *)(v55 + 32) = v54;
  *(_BYTE *)(v55 + 40) = 0;
  v132 = sub_10005266C;
  v133 = v55;
  swift_bridgeObjectRetain(v54);
  v56 = sub_10004FE58(v91, v92, a3, a4);
  v99 = sub_10004F8B4((uint64_t)&v172, (uint64_t)sub_100052D6C, (uint64_t)v131, (uint64_t)v56, v57, v17, v31, v82, v102, v95, v83);
  v58 = v172;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease(v58);
  v172 = v163;
  v158 = v163;
  v121 = v17;
  v122 = v102;
  v123 = v89;
  v124 = v90;
  v125 = v14;
  v126 = v100;
  v127 = v91;
  v128 = v92;
  v129 = a3;
  v130 = a4;
  swift_bridgeObjectRetain(v163);
  v59 = sub_10002A750(&qword_10063F650);
  v84 = Sequence.compactMap<A>(_:)(sub_100052428, v120, v31, v59, v95);
  sub_1000522B0(&v175);
  sub_1000522B0(&v173);
  sub_1000522B0(&v172);
  sub_1000522B0(&v174);
  v171 = v165;
  sub_1000522B0(&v171);
  swift_bridgeObjectRelease(v158);
  v158 = v87;
  v110 = v17;
  v111 = v102;
  v112 = v89;
  v113 = v90;
  v114 = v14;
  v115 = v100;
  v116 = v91;
  v117 = v92;
  v118 = a3;
  v119 = a4;
  v60 = sub_10002A750(&qword_10063F658);
  v101 = Sequence.compactMap<A>(_:)(sub_10005247C, v109, v31, v60, v95);
  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(v92);
  swift_bridgeObjectRelease(v91);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v90);
  swift_bridgeObjectRelease(v89);
  swift_bridgeObjectRelease(v158);
  v61 = (_QWORD *)swift_allocObject(&unk_1005EC308, 40, 7);
  v61[2] = v97;
  v61[3] = WitnessTable;
  v61[4] = v78;
  v62 = swift_allocObject(&unk_1005EC2E0, 32, 7);
  *(_QWORD *)(v62 + 16) = sub_100052538;
  *(_QWORD *)(v62 + 24) = v61;
  swift_bridgeObjectRetain(v78);
  v63 = sub_10002A750(&qword_10063F660);
  v158 = v78;
  v105 = v17;
  v106 = v102;
  v107 = sub_100052D6C;
  v108 = v62;
  v64 = type metadata accessor for Dictionary.Keys(0, v97, v63, WitnessTable);
  v65 = sub_10002A750(&qword_10063F668);
  v66 = swift_getWitnessTable(&protocol conformance descriptor for [A : B].Keys, v64);
  v96 = sub_10004E188((void (*)(char *, char *))sub_1000524F4, (uint64_t)v104, v64, v65, (uint64_t)&type metadata for Never, v66, (uint64_t)&protocol witness table for Never, v67);
  swift_bridgeObjectRelease(v158);
  v158 = v79;
  swift_bridgeObjectRetain(v77);
  swift_bridgeObjectRetain(v86);
  swift_bridgeObjectRetain(v72);
  swift_bridgeObjectRetain(v84);
  swift_bridgeObjectRetain(v76);
  swift_bridgeObjectRetain(v74);
  swift_bridgeObjectRetain(v99);
  swift_bridgeObjectRetain(v101);
  swift_bridgeObjectRetain(v96);
  v68 = swift_bridgeObjectRetain(a6);
  v103 = Set.union<A>(_:)(&v158, v87, v97, v94, WitnessTable, v95, v68);
  swift_release();
  swift_bridgeObjectRetain(v72);
  swift_bridgeObjectRetain(v77);
  swift_bridgeObjectRetain(v86);
  swift_bridgeObjectRetain(v84);
  swift_bridgeObjectRetain(v99);
  swift_bridgeObjectRetain(v76);
  swift_bridgeObjectRetain(v74);
  swift_bridgeObjectRetain(v101);
  swift_bridgeObjectRelease(v96);
  swift_bridgeObjectRelease_n(v72, 2);
  swift_bridgeObjectRelease_n(v77, 2);
  swift_bridgeObjectRelease_n(v86, 2);
  swift_bridgeObjectRelease_n(v84, 2);
  swift_bridgeObjectRelease_n(v99, 2);
  swift_bridgeObjectRelease_n(v76, 2);
  swift_bridgeObjectRelease_n(v74, 2);
  result = swift_bridgeObjectRelease_n(v101, 2);
  *a7 = v72;
  a7[1] = v77;
  a7[2] = v86;
  a7[3] = v84;
  a7[4] = v99;
  a7[5] = v76;
  a7[6] = v74;
  a7[7] = v101;
  a7[8] = v96;
  a7[9] = a5;
  a7[10] = a6;
  a7[11] = v103;
  return result;
}

uint64_t sub_10004F8B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  _QWORD v14[14];

  v14[2] = a6;
  v14[3] = a7;
  v14[4] = a8;
  v14[5] = a9;
  v14[6] = a10;
  v14[7] = a11;
  v14[8] = a4;
  v14[9] = a5;
  v14[10] = a2;
  v14[11] = a3;
  v12 = type metadata accessor for TTRITreeViewTableUpdates.IndexAndAnimation(0, a8, a11, a4);
  return Sequence.compactMap<A>(_:)(sub_1000525B0, v14, a7, v12, a10);
}

uint64_t sub_10004F930@<X0>(uint64_t *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t (*a3)(uint64_t)@<X3>, uint64_t a4@<X4>, uint64_t a5@<X7>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  uint64_t (*v41)(uint64_t);
  void (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;

  v40[1] = a4;
  v41 = a3;
  v44 = a6;
  v42 = a2;
  v43 = a9;
  v11 = type metadata accessor for Optional(0, a5);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)v40 - v14;
  v16 = *(_QWORD *)(a5 - 8);
  v17 = __chkstk_darwin(v13);
  v19 = (char *)v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)v40 - v20;
  v22 = *a1;
  v42(v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a5) == 1)
  {
    v23 = v43;
    v24 = v44;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    if (qword_10063D2C0 != -1)
      swift_once(&qword_10063D2C0, sub_10004E478);
    v25 = type metadata accessor for Logger(0);
    v26 = sub_100012DC4(v25, (uint64_t)qword_10063F5B0);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.fault.getter(v27);
    v29 = v23;
    if (os_log_type_enabled(v27, v28))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Unable to look up index/indexPath", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }

    v32 = type metadata accessor for TTRITreeViewTableUpdates.IndexAndAnimation(0, a5, v29, v31);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v24, 1, 1, v32);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v15, a5);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, a5);
    v34 = v41(v22);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, a5);
    v35 = v44;
    v36 = v34;
    v37 = v43;
    sub_1004D358C((uint64_t)v19, v36, a5, v43, v44);
    v39 = type metadata accessor for TTRITreeViewTableUpdates.IndexAndAnimation(0, a5, v37, v38);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v35, 0, 1, v39);
  }
}

uint64_t (*sub_10004FBC4(uint64_t a1, uint64_t a2, uint64_t a3, char a4))()
{
  uint64_t v8;

  v8 = swift_allocObject(&unk_1005EC3F8, 41, 7);
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_BYTE *)(v8 + 40) = a4;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  return sub_100052590;
}

uint64_t (*sub_10004FC48(uint64_t a1, uint64_t a2, uint64_t a3, char a4))()
{
  uint64_t v8;

  v8 = swift_allocObject(&unk_1005EC3D0, 41, 7);
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_BYTE *)(v8 + 40) = a4;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  return sub_100052588;
}

uint64_t (*sub_10004FCCC(uint64_t a1, uint64_t a2, uint64_t a3, char a4))()
{
  uint64_t v8;

  v8 = swift_allocObject(&unk_1005EC3A8, 41, 7);
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_BYTE *)(v8 + 40) = a4;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  return sub_100052590;
}

uint64_t (*sub_10004FD50(uint64_t a1, uint64_t a2, uint64_t a3, char a4))()
{
  uint64_t v8;

  v8 = swift_allocObject(&unk_1005EC380, 41, 7);
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_BYTE *)(v8 + 40) = a4;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  return sub_100052588;
}

uint64_t (*sub_10004FDD4(uint64_t a1, uint64_t a2, uint64_t a3, char a4))()
{
  uint64_t v8;

  v8 = swift_allocObject(&unk_1005EC358, 41, 7);
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_BYTE *)(v8 + 40) = a4;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  return sub_100052590;
}

uint64_t (*sub_10004FE58(uint64_t a1, uint64_t a2, uint64_t a3, char a4))()
{
  uint64_t v8;

  v8 = swift_allocObject(&unk_1005EC330, 41, 7);
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_BYTE *)(v8 + 40) = a4;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  return sub_100052588;
}

void sub_10004FEDC(_QWORD **a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;

  v4 = a2[4];
  v5 = a2[5];
  v6 = a2[6];
  v7 = *a1;
  v8 = sub_1000BD8F4(*a1, *a2, a2[1], a2[2]);
  if ((v9 & 1) != 0 || (v10 = v8, v11 = sub_1000BD8F4(v7, v4, v5, v6), (v12 & 1) != 0))
  {
    if (qword_10063D2C0 != -1)
      swift_once(&qword_10063D2C0, sub_10004E478);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_100012DC4(v13, (uint64_t)qword_10063F5B0);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.fault.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Cannot lookup from, to for moved section", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_BYTE *)(a3 + 16) = 1;
  }
  else
  {
    *(_QWORD *)a3 = v10;
    *(_QWORD *)(a3 + 8) = v11;
    *(_BYTE *)(a3 + 16) = 0;
  }
}

uint64_t sub_100050028@<X0>(uint64_t **a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;

  v40 = a3;
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a2 + 24);
  v38 = *(_QWORD *)(a2 + 32);
  v39 = v4;
  v7 = *(_QWORD *)(a2 + 40);
  v36 = *(_QWORD *)(a2 + 48);
  v37 = v7;
  v35 = *(unsigned __int8 *)(a2 + 56);
  v8 = sub_10002A750(&qword_100646950);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v33 - v12;
  v14 = type metadata accessor for IndexPath(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v34 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v19 = (char *)&v33 - v18;
  v20 = *a1;
  sub_1000BD984(v20, v39, v5, v6, (uint64_t)v13);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v21(v13, 1, v14) == 1)
  {
    v11 = v13;
  }
  else
  {
    v22 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v22(v19, v13, v14);
    sub_1000BD984(v20, v38, v36, v35, (uint64_t)v11);
    if (v21(v11, 1, v14) != 1)
    {
      v30 = v34;
      v22(v34, v11, v14);
      v31 = v40;
      v22(v40, v19, v14);
      v32 = sub_10002A750(&qword_10063F658);
      v22(&v31[*(int *)(v32 + 36)], v30, v14);
      return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 0, 1, v32);
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
  }
  sub_100052544((uint64_t)v11);
  if (qword_10063D2C0 != -1)
    swift_once(&qword_10063D2C0, sub_10004E478);
  v23 = type metadata accessor for Logger(0);
  v24 = sub_100012DC4(v23, (uint64_t)qword_10063F5B0);
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.fault.getter(v25);
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v27 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Cannot lookup from, to for moved cell", v27, 2u);
    swift_slowDealloc(v27, -1, -1);
  }

  v28 = sub_10002A750(&qword_10063F658);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v40, 1, 1, v28);
}

double sub_100050328@<D0>(uint64_t *a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  double result;
  __int128 v18;
  uint64_t (*v19)(uint64_t);
  _OWORD v20[2];
  uint64_t v21;

  v19 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a4, a3, &unk_1005987EC, &unk_1005987FC);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = __chkstk_darwin(AssociatedTypeWitness);
  v13 = (char *)&v19 - v12;
  v14 = *a1;
  sub_100029148(v11);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a4, a3, AssociatedTypeWitness, &unk_1005987EC, &unk_1005987F4);
  _convertToAnyHashable<A>(_:)(v20, v13, AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, AssociatedTypeWitness);
  v16 = v19(v14);
  result = *(double *)v20;
  v18 = v20[1];
  *(_OWORD *)a5 = v20[0];
  *(_OWORD *)(a5 + 16) = v18;
  *(_QWORD *)(a5 + 32) = v21;
  *(_QWORD *)(a5 + 40) = v16;
  return result;
}

uint64_t sub_100050448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;

  v5 = *v4;
  v6 = type metadata accessor for TTRITreeViewNode(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  WitnessTable = swift_getWitnessTable(&unk_1005276C0, v6);
  if ((Set.isEmpty.getter(v5, v6, WitnessTable) & 1) != 0
    && (Set.isEmpty.getter(v4[1], v6, WitnessTable) & 1) != 0
    && (Set.isEmpty.getter(v4[2], v6, WitnessTable) & 1) != 0
    && (Set.isEmpty.getter(v4[3], v6, WitnessTable) & 1) != 0)
  {
    return Set.isEmpty.getter(v4[4], v6, WitnessTable);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_100050500(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;

  v5 = *a1;
  v6 = type metadata accessor for TTRITreeViewNode(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  WitnessTable = swift_getWitnessTable(&unk_1005276C0, v6);
  v8 = type metadata accessor for Set(0, v6, WitnessTable);
  Set.subtract(_:)(v5, v8);
  Set.subtract(_:)(a1[1], v8);
  Set.subtract(_:)(a1[2], v8);
  Set.subtract(_:)(a1[3], v8);
  return Set.subtract(_:)(a1[4], v8);
}

uint64_t sub_1000505B4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t WitnessTable;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v10 = *a1;
  v5 = type metadata accessor for TTRITreeViewNode(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  swift_bridgeObjectRetain(v10);
  WitnessTable = swift_getWitnessTable(&unk_1005276C0, v5);
  v7 = type metadata accessor for Set(0, v5, WitnessTable);
  v8 = swift_getWitnessTable(&protocol conformance descriptor for Set<A>, v7);
  Set.formUnion<A>(_:)(&v10, v7, v7, v8);
  v10 = a1[1];
  swift_bridgeObjectRetain(v10);
  Set.formUnion<A>(_:)(&v10, v7, v7, v8);
  v10 = a1[2];
  swift_bridgeObjectRetain(v10);
  Set.formUnion<A>(_:)(&v10, v7, v7, v8);
  v10 = a1[3];
  swift_bridgeObjectRetain(v10);
  Set.formUnion<A>(_:)(&v10, v7, v7, v8);
  v10 = a1[4];
  swift_bridgeObjectRetain(v10);
  return Set.formUnion<A>(_:)(&v10, v7, v7, v8);
}

uint64_t sub_1000506F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t WitnessTable;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v5 = type metadata accessor for TTRITreeViewNode(0, a1, a2, a3);
  WitnessTable = swift_getWitnessTable(&unk_1005276C0, v5);
  v7 = Set.init()(v5, WitnessTable);
  v8 = Set.init()(v5, WitnessTable);
  v9 = Set.init()(v5, WitnessTable);
  v10 = Set.init()(v5, WitnessTable);
  result = Set.init()(v5, WitnessTable);
  *a4 = v7;
  a4[1] = v8;
  a4[2] = v9;
  a4[3] = v10;
  a4[4] = result;
  return result;
}

uint64_t sub_1000507A4(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  result = sub_1000BDAC4(a1, *a3, a3[1], a3[2]);
  if (result)
  {
    v5 = result;
    swift_release();
    return v5 == a2;
  }
  return result;
}

BOOL sub_1000507E8(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1000BDAC4(a1, *a3, a3[1], a3[2]);
  if (!v4)
    return 1;
  v5 = v4;
  swift_release();
  return v5 != a2;
}

uint64_t sub_100050834(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  result = sub_1000BDAC4(a1, a3[4], a3[5], a3[6]);
  if (result)
  {
    v5 = result;
    swift_release();
    return v5 == a2;
  }
  return result;
}

uint64_t sub_100050878(uint64_t **a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t WitnessTable;
  uint64_t v16;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21[3];
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27[3];
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_BYTE *)(a2 + 56);
  v18 = *a3;
  v12 = *a1;
  v27[0] = *(_QWORD *)a2;
  v27[1] = v5;
  v27[2] = v6;
  v28 = v7;
  v29 = v9;
  v30 = v8;
  v31 = v10;
  v32 = v11;
  v19 = v12;
  if ((sub_100050834(v12, (uint64_t)a3, v27) & 1) == 0)
    return 0;
  v21[0] = v4;
  v21[1] = v5;
  v21[2] = v6;
  v22 = v7;
  v23 = v9;
  v24 = v8;
  v25 = v10;
  v26 = v11;
  if (!sub_1000507E8(v19, (uint64_t)a3, v21))
    return 0;
  v20 = v19;
  v14 = type metadata accessor for TTRITreeViewNode(255, *(_QWORD *)(v18 + 80), *(_QWORD *)(v18 + 88), v13);
  swift_retain();
  WitnessTable = swift_getWitnessTable(&unk_1005276C0, v14);
  v16 = type metadata accessor for Set(0, v14, WitnessTable);
  Set.insert(_:)(&v33, &v20, v16);
  swift_release();
  return 1;
}

uint64_t sub_1000509BC(uint64_t **a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  char v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t WitnessTable;
  uint64_t v19;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24[3];
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30[3];
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_BYTE *)(a2 + 56);
  v21 = *a3;
  v12 = *a1;
  v30[0] = *(_QWORD *)a2;
  v30[1] = v5;
  v30[2] = v6;
  v31 = v7;
  v32 = v9;
  v33 = v8;
  v34 = v10;
  v35 = v11;
  v22 = v12;
  v13 = sub_100050834(v12, (uint64_t)a3, v30);
  if ((v13 & 1) != 0)
  {
    v24[0] = v4;
    v24[1] = v5;
    v24[2] = v6;
    v25 = v7;
    v26 = v9;
    v27 = v8;
    v28 = v10;
    v29 = v11;
    v14 = v13;
    v15 = sub_1000507E8(v22, (uint64_t)a3, v24);
    v13 = v14;
    if (v15)
    {
      v23 = v22;
      v17 = type metadata accessor for TTRITreeViewNode(255, *(_QWORD *)(v21 + 80), *(_QWORD *)(v21 + 88), v16);
      swift_retain();
      WitnessTable = swift_getWitnessTable(&unk_1005276C0, v17);
      v19 = type metadata accessor for Set(0, v17, WitnessTable);
      Set.insert(_:)(&v36, &v23, v19);
      swift_release();
      v13 = v14;
    }
  }
  return v13 & 1;
}

uint64_t sub_100050AF8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v14;

  v6 = *a1;
  v7 = *a4;
  v14 = a1;
  v8 = type metadata accessor for TTRITreeViewNode(0, *(_QWORD *)(v6 + 80), *(_QWORD *)(v6 + 88), (uint64_t)a4);
  WitnessTable = swift_getWitnessTable(&unk_1005276C0, v8);
  if ((Set.contains(_:)(&v14, v7, v8, WitnessTable) & 1) != 0
    || (v10 = a4[1], v14 = a1, (Set.contains(_:)(&v14, v10, v8, WitnessTable) & 1) != 0))
  {
    v11 = 0;
  }
  else
  {
    v12 = a4[3];
    v14 = a1;
    v11 = Set.contains(_:)(&v14, v12, v8, WitnessTable) ^ 1;
  }
  return v11 & 1;
}

_QWORD *sub_100050BBC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[2];
  v2 = v0[3];
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v1);
  v3 = v0[6];
  swift_bridgeObjectRelease(v0[7]);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v0[8]);
  v4 = v0[10];
  swift_bridgeObjectRelease(v0[11]);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v0[12]);
  return v0;
}

uint64_t sub_100050C2C()
{
  uint64_t v0;

  sub_100050BBC();
  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t type metadata accessor for TTRITreeViewBatchUpdatesContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRITreeViewBatchUpdatesContext);
}

uint64_t *initializeBufferWithCopyOfBuffer for NodeChange(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for NodeChange(_QWORD *a1)
{
  return swift_bridgeObjectRelease(*a1);
}

uint64_t *assignWithCopy for NodeChange(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[1] = a2[1];
  return a1;
}

uint64_t *assignWithTake for NodeChange(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for NodeChange(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NodeChange(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NodeChange()
{
  return &type metadata for NodeChange;
}

uint64_t sub_100050DA8(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v11;

  Dictionary.subscript.getter(&v11, a1, a3, a4, &type metadata for NodeChange, a5);
  v6 = v11;
  if (!v11)
    return 100;
  if (*(_QWORD *)(v11 + 16) && (v7 = sub_1002AA3B8(a2), (v8 & 1) != 0))
    v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
  else
    v9 = 100;
  swift_bridgeObjectRelease(v6);
  return v9;
}

uint64_t sub_100050E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;

  v8 = sub_10002A750(&qword_10063F660);
  Dictionary.subscript.getter(&v10, a1, a2, a3, v8, a4);
  if ((v12 & 1) != 0 || (v11 & 1) != 0)
    return 100;
  else
    return v10;
}

uint64_t *sub_100050EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t WitnessTable;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v9 = *v6;
  v6[8] = (uint64_t)_swiftEmptyArrayStorage;
  *((_BYTE *)v6 + 72) = 0;
  v10 = type metadata accessor for TTRITreeViewNode(255, *(_QWORD *)(v9 + 80), *(_QWORD *)(v9 + 88), a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v10, &type metadata for NodeChange, 0, 0);
  v12 = static Array._allocateUninitialized(_:)(0, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&unk_1005276C0, v10);
  v14 = Dictionary.init(dictionaryLiteral:)(v12, v10, &type metadata for NodeChange, WitnessTable);
  v15 = static Array._allocateUninitialized(_:)(0, TupleTypeMetadata2);
  v16 = Dictionary.init(dictionaryLiteral:)(v15, v10, &type metadata for NodeChange, WitnessTable);
  v6[10] = v14;
  v6[11] = v16;
  v17 = sub_10002A750(&qword_10063F660);
  v6[12] = Dictionary.init()(v10, v17, WitnessTable);
  v6[2] = sub_1000BD8A4(a1, a2, a3);
  v6[3] = v18;
  v6[4] = v19;
  *((_BYTE *)v6 + 40) = v20 & 1;
  v6[6] = a5;
  v6[7] = a6;
  return v6;
}

uint64_t *sub_100051000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  swift_allocObject(v6, 104, 7);
  return sub_100050EA4(a1, a2, a3, a4, a5, a6);
}

void sub_100051078(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t *a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t WitnessTable;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v38;
  uint64_t v39;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[6];

  sub_1000506F0(a9, a10, a4, v51);
  v49 = v51[1];
  v50 = v51[0];
  v47 = v51[3];
  v48 = v51[2];
  v46 = v51[4];
  v39 = a1 + 64;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(a1 + 64);
  v38 = (unint64_t)(v11 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v14 = 0;
  if (v13)
    goto LABEL_7;
LABEL_8:
  while (2)
  {
    v20 = v14 + 1;
    if (!__OFADD__(v14, 1))
    {
      if (v20 < v38)
      {
        v21 = *(_QWORD *)(v39 + 8 * v20);
        ++v14;
        if (v21)
          goto LABEL_19;
        v14 = v20 + 1;
        if (v20 + 1 >= v38)
          goto LABEL_28;
        v21 = *(_QWORD *)(v39 + 8 * v14);
        if (v21)
        {
LABEL_19:
          v13 = (v21 - 1) & v21;
          for (i = __clz(__rbit64(v21)) + (v14 << 6); ; i = v18 | (v14 << 6))
          {
            v23 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * i);
            v24 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * i);
            v25 = *v24;
            v26 = v24[1];
            swift_retain();
            swift_bridgeObjectRetain(v25);
            v27 = sub_1000BD99C(v23, a2, a3);
            v28 = sub_1000BD99C(v23, a5, a6);
            swift_bridgeObjectRelease(v25);
            if ((v27 & 1) != 0)
              break;
            if ((v28 & 1) != 0)
              goto LABEL_5;
            swift_release();
            if (!v13)
              goto LABEL_8;
LABEL_7:
            v18 = __clz(__rbit64(v13));
            v13 &= v13 - 1;
          }
          if ((v28 & 1) == 0 || (~(_BYTE)v26 & 3) != 0)
          {
LABEL_5:
            v44 = v23;
            v15 = type metadata accessor for TTRITreeViewNode(255, a9, a10, v29);
            WitnessTable = swift_getWitnessTable(&unk_1005276C0, v15);
            v17 = type metadata accessor for Set(0, v15, WitnessTable);
          }
          else
          {
            v44 = v23;
            v30 = type metadata accessor for TTRITreeViewNode(255, a9, a10, v29);
            swift_retain();
            v31 = swift_getWitnessTable(&unk_1005276C0, v30);
            v32 = type metadata accessor for Set(0, v30, v31);
            Set.insert(_:)(&v45, &v44, v32);
            swift_release();
            v44 = v23;
            v17 = v32;
          }
          Set.insert(_:)(&v45, &v44, v17);
          swift_release();
          if (!v13)
            continue;
          goto LABEL_7;
        }
        v22 = v20 + 2;
        if (v22 < v38)
        {
          v21 = *(_QWORD *)(v39 + 8 * v22);
          if (v21)
          {
            v14 = v22;
            goto LABEL_19;
          }
          while (1)
          {
            v14 = v22 + 1;
            if (__OFADD__(v22, 1))
              goto LABEL_30;
            if (v14 >= v38)
              break;
            v21 = *(_QWORD *)(v39 + 8 * v14);
            ++v22;
            if (v21)
              goto LABEL_19;
          }
        }
      }
LABEL_28:
      swift_release();
      v33 = v49;
      v35 = v47;
      v34 = v48;
      v36 = v46;
      *a7 = v50;
      a7[1] = v33;
      a7[2] = v34;
      a7[3] = v35;
      a7[4] = v36;
      return;
    }
    break;
  }
  __break(1u);
LABEL_30:
  __break(1u);
}

void sub_100051484(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11, uint64_t a12, uint64_t a13)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t WitnessTable;
  _QWORD *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  int64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int64_t v79;
  unint64_t v80;
  int64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t *v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int64_t v111;
  unint64_t v112;
  int64_t v113;
  unint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  int64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  __int128 v154;
  __int128 v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char v160;
  uint64_t v161;
  __int128 v162;
  uint64_t v163;
  int64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  int64_t v179;
  int64_t v180;
  uint64_t v181;
  uint64_t *v182;
  uint64_t v183;
  uint64_t *v184;
  int64_t v185;
  uint64_t v186;
  uint64_t v187;
  int v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  int v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  int64_t v197;
  __int128 v198;
  __int128 v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _OWORD v206[2];
  uint64_t v207;
  _OWORD v208[2];
  uint64_t v209;
  _QWORD v210[5];
  _QWORD v211[5];
  _QWORD v212[5];
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  __int128 v218;
  __int128 v219;
  uint64_t v220;
  uint64_t v221[7];

  v193 = a4;
  v194 = a8;
  v189 = a7;
  v187 = a5;
  v196 = a3;
  v17 = a13;
  sub_1000506F0(a12, a13, a4, (uint64_t *)v206);
  v18 = *a1;
  v216 = a1[1];
  v217 = v18;
  v19 = a1[2];
  v214 = a1[3];
  v215 = v19;
  v213 = a1[4];
  v204 = v216;
  v205 = v18;
  v202 = v214;
  v203 = v19;
  v201 = v213;
  sub_10002DF4C(&v217);
  sub_10002DF4C(&v216);
  sub_10002DF4C(&v215);
  sub_10002DF4C(&v214);
  sub_10002DF4C(&v213);
  sub_10002DF4C(&v217);
  sub_10002DF4C(&v216);
  sub_10002DF4C(&v215);
  sub_10002DF4C(&v214);
  sub_10002DF4C(&v213);
  v190 = a12;
  v176 = type metadata accessor for TTRITreeViewBatchUpdatesContext.EffectiveChanges(0, a12, a13, v20);
  LOBYTE(a1) = sub_100050448(v176, v21, v22, v23);
  sub_1000522B0(&v217);
  sub_1000522B0(&v216);
  sub_1000522B0(&v215);
  sub_1000522B0(&v214);
  sub_1000522B0(&v213);
  if ((a1 & 1) != 0)
  {
    sub_1000522B0(&v217);
    sub_1000522B0(&v216);
    sub_1000522B0(&v215);
    sub_1000522B0(&v214);
    sub_1000522B0(&v213);
    goto LABEL_101;
  }
  v163 = a9;
  v25 = *a2;
  v26 = a2[1];
  v175 = *a2 & 0xC000000000000001;
  v172 = v26 & 0xC000000000000001;
  v27 = a2[3];
  v170 = v27 & 0xC000000000000001;
  v28 = v25 & 0xFFFFFFFFFFFFFF8;
  if (v25 < 0)
    v28 = v25;
  v169 = v28;
  v174 = v25;
  v166 = v25 + 56;
  v192 = a6 & 1;
  v195 = a10;
  v188 = a11 & 1;
  if (v26 < 0)
    v29 = v26;
  else
    v29 = v26 & 0xFFFFFFFFFFFFFF8;
  v173 = v26;
  v165 = v26 + 56;
  v30 = v27 & 0xFFFFFFFFFFFFFF8;
  if (v27 < 0)
    v30 = v27;
  v167 = v30;
  v168 = v29;
  v171 = v27;
  v164 = v27 + 56;
  v191 = a13;
  do
  {
    v31 = v190;
    sub_1000506F0(v190, v17, v24, (uint64_t *)v208);
    v198 = v208[0];
    v199 = v208[1];
    v200 = v209;
    if (v175)
    {
      swift_bridgeObjectRetain(v174);
      v32 = __CocoaSet.makeIterator()(v169);
      v34 = type metadata accessor for TTRITreeViewNode(0, v31, v17, v33);
      WitnessTable = swift_getWitnessTable(&unk_1005276C0, v34);
      v36 = Set.Iterator.init(_cocoa:)(v210, v32, v34, WitnessTable);
      v37 = v210[0];
      v186 = v210[1];
      v39 = v210[2];
      v38 = v210[3];
      v40 = v210[4];
    }
    else
    {
      v37 = v174;
      v41 = -1 << *(_BYTE *)(v174 + 32);
      v39 = ~v41;
      v42 = -v41;
      if (v42 < 64)
        v43 = ~(-1 << v42);
      else
        v43 = -1;
      v40 = v43 & *(_QWORD *)(v174 + 56);
      swift_bridgeObjectRetain(v174);
      v38 = 0;
      v186 = v166;
    }
    v184 = (uint64_t *)(v37 & 0x7FFFFFFFFFFFFFFFLL);
    v185 = (unint64_t)(v39 + 64) >> 6;
    if (v37 < 0)
    {
LABEL_18:
      v44 = __CocoaSet.Iterator.next()(v36);
      if (!v44)
        goto LABEL_39;
      v46 = v44;
      v47 = type metadata accessor for TTRITreeViewNode(0, v190, v191, v45);
      _forceBridgeFromObjectiveC<A>(_:_:)(&v197, v46, v47, v47);
      v48 = swift_unknownObjectRelease(v46);
      v49 = v197;
      v50 = v38;
      v51 = v40;
      if (!v197)
        goto LABEL_39;
      goto LABEL_37;
    }
    while (v40)
    {
      v51 = (v40 - 1) & v40;
      v52 = __clz(__rbit64(v40)) | (v38 << 6);
      v50 = v38;
LABEL_36:
      v49 = *(_QWORD *)(*(_QWORD *)(v37 + 48) + 8 * v52);
      v48 = swift_retain();
      if (!v49)
        goto LABEL_39;
LABEL_37:
      __chkstk_darwin(v48);
      v55 = v193;
      *(&v163 - 10) = v196;
      *(&v163 - 9) = v55;
      *(&v163 - 8) = v187;
      *((_BYTE *)&v163 - 56) = v192;
      v56 = v190;
      v57 = v194;
      *(&v163 - 6) = v189;
      *(&v163 - 5) = v57;
      *(&v163 - 4) = v195;
      *((_BYTE *)&v163 - 24) = v188;
      *(&v163 - 2) = v49;
      v59 = type metadata accessor for TTRITreeViewNode(255, v56, v191, v58);
      v60 = swift_getWitnessTable(&unk_1005276C0, v59);
      v61 = type metadata accessor for Set(0, v59, v60);
      Set.removeAll(where:)(sub_1000526D0, &v163 - 12, v61);
      swift_release();
      v38 = v50;
      v40 = v51;
      if (v37 < 0)
        goto LABEL_18;
    }
    v50 = v38 + 1;
    if (__OFADD__(v38, 1))
    {
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
      return;
    }
    if (v50 >= v185)
      goto LABEL_39;
    v53 = *(_QWORD *)(v186 + 8 * v50);
    if (v53)
      goto LABEL_35;
    if (v38 + 2 >= v185)
      goto LABEL_39;
    v53 = *(_QWORD *)(v186 + 8 * (v38 + 2));
    if (v53)
    {
      v50 = v38 + 2;
LABEL_35:
      v51 = (v53 - 1) & v53;
      v52 = __clz(__rbit64(v53)) + (v50 << 6);
      goto LABEL_36;
    }
    v50 = v38 + 3;
    if (v38 + 3 >= v185)
      goto LABEL_39;
    v53 = *(_QWORD *)(v186 + 8 * v50);
    if (v53)
      goto LABEL_35;
    v54 = v38 + 4;
    while (v185 != v54)
    {
      v53 = *(_QWORD *)(v186 + 8 * v54++);
      if (v53)
      {
        v50 = v54 - 1;
        goto LABEL_35;
      }
    }
LABEL_39:
    sub_10003E410(v37);
    if (v172)
    {
      swift_bridgeObjectRetain(v173);
      v62 = __CocoaSet.makeIterator()(v168);
      v64 = type metadata accessor for TTRITreeViewNode(0, v190, v191, v63);
      v65 = swift_getWitnessTable(&unk_1005276C0, v64);
      v66 = Set.Iterator.init(_cocoa:)(v211, v62, v64, v65);
      v67 = v211[0];
      v181 = v211[1];
      v69 = v211[2];
      v68 = v211[3];
      v70 = v211[4];
    }
    else
    {
      v67 = v173;
      v71 = -1 << *(_BYTE *)(v173 + 32);
      v69 = ~v71;
      v72 = -v71;
      if (v72 < 64)
        v73 = ~(-1 << v72);
      else
        v73 = -1;
      v70 = v73 & *(_QWORD *)(v173 + 56);
      swift_bridgeObjectRetain(v173);
      v68 = 0;
      v181 = v165;
    }
    v179 = v67 & 0x7FFFFFFFFFFFFFFFLL;
    v180 = (unint64_t)(v69 + 64) >> 6;
    v182 = (uint64_t *)v67;
    v183 = v69;
    if (v67 < 0)
    {
LABEL_46:
      v74 = __CocoaSet.Iterator.next()(v66);
      if (v74)
      {
        v76 = v74;
        v77 = type metadata accessor for TTRITreeViewNode(0, v190, v191, v75);
        _forceBridgeFromObjectiveC<A>(_:_:)(&v197, v76, v77, v77);
        v78 = swift_unknownObjectRelease(v76);
        v79 = v197;
        v185 = v70;
        v186 = v68;
        if (v197)
          goto LABEL_65;
      }
LABEL_67:
      v84 = v191;
      goto LABEL_68;
    }
    while (v70)
    {
      v185 = (v70 - 1) & v70;
      v186 = v68;
      v80 = __clz(__rbit64(v70)) | (v68 << 6);
LABEL_64:
      v79 = *(_QWORD *)(*(_QWORD *)(v67 + 48) + 8 * v80);
      v78 = swift_retain();
      if (!v79)
        goto LABEL_67;
LABEL_65:
      v184 = &v163;
      __chkstk_darwin(v78);
      v85 = v193;
      v86 = v194;
      *(&v163 - 10) = v196;
      *(&v163 - 9) = v85;
      v87 = v187;
      *(&v163 - 8) = v187;
      *((_BYTE *)&v163 - 56) = v192;
      v89 = v189;
      v88 = v190;
      *(&v163 - 6) = v189;
      *(&v163 - 5) = v86;
      *(&v163 - 4) = v195;
      *((_BYTE *)&v163 - 24) = v188;
      *(&v163 - 2) = v79;
      v91 = type metadata accessor for TTRITreeViewNode(255, v88, v191, v90);
      v92 = swift_getWitnessTable(&unk_1005276C0, v91);
      v93 = type metadata accessor for Set(0, v91, v92);
      v94 = Set.removeAll(where:)(sub_1000526F0, &v163 - 12, v93);
      __chkstk_darwin(v94);
      *(&v163 - 10) = v196;
      *(&v163 - 9) = v85;
      *(&v163 - 8) = v87;
      v67 = (uint64_t)v182;
      *((_BYTE *)&v163 - 56) = v192;
      *(&v163 - 6) = v89;
      *(&v163 - 5) = v86;
      *(&v163 - 4) = v195;
      *((_BYTE *)&v163 - 24) = v188;
      *(&v163 - 2) = v79;
      *(&v163 - 1) = (uint64_t)&v198;
      Set.removeAll(where:)(sub_100052730, &v163 - 12, v93);
      swift_release();
      v70 = v185;
      v68 = v186;
      if (v67 < 0)
        goto LABEL_46;
    }
    v81 = v68 + 1;
    if (__OFADD__(v68, 1))
      goto LABEL_103;
    if (v81 >= v180)
      goto LABEL_67;
    v82 = *(_QWORD *)(v181 + 8 * v81);
    if (v82)
      goto LABEL_63;
    if (v68 + 2 >= v180)
      goto LABEL_67;
    v82 = *(_QWORD *)(v181 + 8 * (v68 + 2));
    if (v82)
    {
      v81 = v68 + 2;
LABEL_63:
      v185 = (v82 - 1) & v82;
      v186 = v81;
      v80 = __clz(__rbit64(v82)) + (v81 << 6);
      goto LABEL_64;
    }
    v81 = v68 + 3;
    if (v68 + 3 >= v180)
      goto LABEL_67;
    v82 = *(_QWORD *)(v181 + 8 * v81);
    if (v82)
      goto LABEL_63;
    v83 = v68 + 4;
    v84 = v191;
    while (v180 != v83)
    {
      v82 = *(_QWORD *)(v181 + 8 * v83++);
      if (v82)
      {
        v81 = v83 - 1;
        goto LABEL_63;
      }
    }
LABEL_68:
    sub_10003E410(v67);
    if (v170)
    {
      swift_bridgeObjectRetain(v171);
      v95 = __CocoaSet.makeIterator()(v167);
      v97 = type metadata accessor for TTRITreeViewNode(0, v190, v84, v96);
      v98 = swift_getWitnessTable(&unk_1005276C0, v97);
      v99 = Set.Iterator.init(_cocoa:)(v212, v95, v97, v98);
      v100 = v212[0];
      v180 = v212[1];
      v101 = (uint64_t *)v212[3];
      v177 = v212[2];
      v102 = v212[4];
    }
    else
    {
      v100 = v171;
      v103 = -1 << *(_BYTE *)(v171 + 32);
      v177 = ~v103;
      v104 = -v103;
      if (v104 < 64)
        v105 = ~(-1 << v104);
      else
        v105 = -1;
      v102 = v105 & *(_QWORD *)(v171 + 56);
      swift_bridgeObjectRetain(v171);
      v101 = 0;
      v180 = v164;
    }
    v178 = v100 & 0x7FFFFFFFFFFFFFFFLL;
    v179 = (unint64_t)(v177 + 64) >> 6;
    v181 = v100;
    if (v100 < 0)
    {
LABEL_75:
      v106 = __CocoaSet.Iterator.next()(v99);
      if (v106)
      {
        v108 = v106;
        v109 = type metadata accessor for TTRITreeViewNode(0, v190, v191, v107);
        _forceBridgeFromObjectiveC<A>(_:_:)(&v197, v108, v109, v109);
        v110 = swift_unknownObjectRelease(v108);
        v111 = v197;
        v183 = v102;
        v184 = v101;
        if (v197)
          goto LABEL_94;
      }
LABEL_96:
      v17 = v191;
      goto LABEL_97;
    }
    while (v102)
    {
      v183 = (v102 - 1) & v102;
      v184 = v101;
      v112 = __clz(__rbit64(v102)) | ((_QWORD)v101 << 6);
LABEL_93:
      v111 = *(_QWORD *)(*(_QWORD *)(v100 + 48) + 8 * v112);
      v110 = swift_retain();
      if (!v111)
        goto LABEL_96;
LABEL_94:
      v182 = &v163;
      __chkstk_darwin(v110);
      v116 = v195;
      v117 = v193;
      *(&v163 - 10) = v196;
      *(&v163 - 9) = v117;
      v118 = v117;
      v119 = v187;
      *(&v163 - 8) = v187;
      *((_BYTE *)&v163 - 56) = v192;
      v121 = v189;
      v120 = v190;
      *(&v163 - 6) = v189;
      v122 = v121;
      *(&v163 - 5) = v194;
      *(&v163 - 4) = v116;
      v123 = v188;
      *((_BYTE *)&v163 - 24) = v188;
      *(&v163 - 2) = v111;
      v125 = type metadata accessor for TTRITreeViewNode(255, v120, v191, v124);
      v185 = v111;
      v126 = v125;
      v127 = swift_getWitnessTable(&unk_1005276C0, v125);
      v186 = type metadata accessor for Set(0, v126, v127);
      v128 = Set.removeAll(where:)(sub_1000526D0, &v163 - 12, v186);
      v182 = &v163;
      __chkstk_darwin(v128);
      v129 = v196;
      *(&v163 - 10) = v196;
      *(&v163 - 9) = v118;
      *(&v163 - 8) = v119;
      v130 = v192;
      *((_BYTE *)&v163 - 56) = v192;
      *(&v163 - 6) = v122;
      v131 = v194;
      *(&v163 - 5) = v194;
      *(&v163 - 4) = v116;
      *((_BYTE *)&v163 - 24) = v123;
      v133 = v185;
      v132 = v186;
      *(&v163 - 2) = v185;
      v134 = Set.removeAll(where:)(sub_1000526F0, &v163 - 12, v132);
      v182 = &v163;
      __chkstk_darwin(v134);
      *(&v163 - 10) = v129;
      *(&v163 - 9) = v118;
      *(&v163 - 8) = v119;
      LOBYTE(v118) = v130;
      *((_BYTE *)&v163 - 56) = v130;
      v135 = v189;
      *(&v163 - 6) = v189;
      *(&v163 - 5) = v131;
      v136 = v195;
      *(&v163 - 4) = v195;
      LOBYTE(v131) = v123;
      *((_BYTE *)&v163 - 24) = v123;
      *(&v163 - 2) = v133;
      v137 = v186;
      v138 = Set.removeAll(where:)(sub_1000526F0, &v163 - 12, v186);
      v182 = &v163;
      __chkstk_darwin(v138);
      v139 = v193;
      v140 = v194;
      *(&v163 - 10) = v196;
      *(&v163 - 9) = v139;
      *(&v163 - 8) = v119;
      *((_BYTE *)&v163 - 56) = v118;
      *(&v163 - 6) = v135;
      *(&v163 - 5) = v140;
      *(&v163 - 4) = v136;
      *((_BYTE *)&v163 - 24) = v131;
      v141 = v185;
      *(&v163 - 2) = v185;
      *(&v163 - 1) = (uint64_t)&v198;
      v142 = Set.removeAll(where:)(sub_100052710, &v163 - 12, v137);
      v182 = &v163;
      __chkstk_darwin(v142);
      v143 = v193;
      *(&v163 - 10) = v196;
      *(&v163 - 9) = v143;
      *(&v163 - 8) = v119;
      *((_BYTE *)&v163 - 56) = v118;
      *(&v163 - 6) = v135;
      *(&v163 - 5) = v140;
      v100 = v181;
      *(&v163 - 4) = v195;
      *((_BYTE *)&v163 - 24) = v131;
      *(&v163 - 2) = v141;
      Set.removeAll(where:)(sub_1000526F0, &v163 - 12, v137);
      swift_release();
      v102 = v183;
      v101 = v184;
      if (v100 < 0)
        goto LABEL_75;
    }
    v113 = (int64_t)v101 + 1;
    if (__OFADD__(v101, 1))
      goto LABEL_104;
    if (v113 >= v179)
      goto LABEL_96;
    v114 = *(_QWORD *)(v180 + 8 * v113);
    if (v114)
      goto LABEL_92;
    if ((uint64_t)v101 + 2 >= v179)
      goto LABEL_96;
    v114 = *(_QWORD *)(v180 + 8 * ((_QWORD)v101 + 2));
    if (v114)
    {
      v113 = (int64_t)v101 + 2;
LABEL_92:
      v183 = (v114 - 1) & v114;
      v184 = (uint64_t *)v113;
      v112 = __clz(__rbit64(v114)) + (v113 << 6);
      goto LABEL_93;
    }
    v113 = (int64_t)v101 + 3;
    if ((uint64_t)v101 + 3 >= v179)
      goto LABEL_96;
    v114 = *(_QWORD *)(v180 + 8 * v113);
    if (v114)
      goto LABEL_92;
    v115 = (char *)v101 + 4;
    v17 = v191;
    while ((char *)v179 != v115)
    {
      v114 = *(_QWORD *)(v180 + 8 * (_QWORD)v115++);
      if (v114)
      {
        v113 = (int64_t)(v115 - 1);
        goto LABEL_92;
      }
    }
LABEL_97:
    sub_10003E410(v100);
    v144 = v204;
    v145 = v205;
    v147 = v202;
    v146 = v203;
    v148 = v201;
    v221[0] = v205;
    v221[1] = v204;
    v221[2] = v203;
    v221[3] = v202;
    v221[4] = v201;
    swift_bridgeObjectRetain(v205);
    swift_bridgeObjectRetain(v144);
    swift_bridgeObjectRetain(v146);
    swift_bridgeObjectRetain(v147);
    swift_bridgeObjectRetain(v148);
    v149 = v176;
    sub_1000505B4(v221, v176, v150, v151);
    swift_bridgeObjectRelease(v148);
    swift_bridgeObjectRelease(v147);
    swift_bridgeObjectRelease(v146);
    swift_bridgeObjectRelease(v144);
    swift_bridgeObjectRelease(v145);
    sub_100050500(v221, v149, v152, v153);
    swift_bridgeObjectRelease(v148);
    swift_bridgeObjectRelease(v147);
    swift_bridgeObjectRelease(v146);
    swift_bridgeObjectRelease(v144);
    swift_bridgeObjectRelease(v145);
    v154 = v198;
    v155 = v199;
    v156 = v200;
    v204 = *((_QWORD *)&v198 + 1);
    v205 = v198;
    v202 = *((_QWORD *)&v199 + 1);
    v203 = v199;
    v201 = v200;
    v218 = v198;
    v219 = v199;
    v220 = v200;
    swift_bridgeObjectRetain(v198);
    swift_bridgeObjectRetain(*((_QWORD *)&v154 + 1));
    swift_bridgeObjectRetain(v155);
    swift_bridgeObjectRetain(*((_QWORD *)&v155 + 1));
    swift_bridgeObjectRetain(v156);
    v160 = sub_100050448(v149, v157, v158, v159);
    swift_bridgeObjectRelease(v156);
    swift_bridgeObjectRelease(*((_QWORD *)&v155 + 1));
    swift_bridgeObjectRelease(v155);
    swift_bridgeObjectRelease(*((_QWORD *)&v154 + 1));
    swift_bridgeObjectRelease(v154);
  }
  while ((v160 & 1) == 0);
  swift_bridgeObjectRelease(v156);
  swift_bridgeObjectRelease(*((_QWORD *)&v155 + 1));
  swift_bridgeObjectRelease(v155);
  swift_bridgeObjectRelease(*((_QWORD *)&v154 + 1));
  swift_bridgeObjectRelease(v154);
  a9 = v163;
LABEL_101:
  v161 = v207;
  v162 = v206[1];
  *(_OWORD *)a9 = v206[0];
  *(_OWORD *)(a9 + 16) = v162;
  *(_QWORD *)(a9 + 32) = v161;
}

_QWORD *sub_1000522B0(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return a1;
}

uint64_t sub_1000522D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  _QWORD v9[6];
  char v10;
  uint64_t v11;

  v11 = a2;
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = sub_10005267C;
  v9[5] = &v10;
  v5 = type metadata accessor for TTRITreeViewNode(0, a3, a4, a4);
  swift_bridgeObjectRetain(a1);
  v6 = sub_10002A750(&qword_10063F660);
  WitnessTable = swift_getWitnessTable(&unk_1005276C0, v5);
  return Dictionary.filter(_:)(sub_100052688, v9, a1, v5, v6, WitnessTable);
}

uint64_t sub_10005237C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

unint64_t sub_1000523B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10063F648;
  if (!qword_10063F648)
  {
    v1 = type metadata accessor for IndexPath(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for IndexPath, v1);
    atomic_store(result, (unint64_t *)&qword_10063F648);
  }
  return result;
}

uint64_t sub_1000523F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char v4;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v4 & 1;
  return result;
}

void sub_100052428(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  __int128 v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_BYTE *)(v2 + 56);
  v5 = *(_QWORD *)(v2 + 80);
  v6 = *(_BYTE *)(v2 + 88);
  v7 = *(_OWORD *)(v2 + 32);
  v8 = v3;
  v9 = v4;
  v10 = *(_OWORD *)(v2 + 64);
  v11 = v5;
  v12 = v6;
  sub_10004FEDC(a1, (uint64_t *)&v7, a2);
}

uint64_t sub_10005247C@<X0>(uint64_t **a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  __int128 v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  uint64_t v12;
  char v13;

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_BYTE *)(v2 + 56);
  v5 = *(_QWORD *)(v2 + 80);
  v6 = *(_BYTE *)(v2 + 88);
  v8 = *(_OWORD *)(v2 + 32);
  v9 = v3;
  v10 = v4;
  v11 = *(_OWORD *)(v2 + 64);
  v12 = v5;
  v13 = v6;
  return sub_100050028(a1, (uint64_t)&v8, a2);
}

uint64_t sub_1000524D0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_1000524F4@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100050328(a1, *(uint64_t (**)(uint64_t))(v2 + 32), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_100052514()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100052538(uint64_t a1)
{
  uint64_t *v1;

  return sub_100050E28(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_100052544(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750(&qword_100646950);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000525A0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1000BD984(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), a2);
}

uint64_t sub_1000525B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10004F930(a1, *(void (**)(uint64_t))(v2 + 64), *(uint64_t (**)(uint64_t))(v2 + 80), *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 32), a2, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_1000525F0()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_100052624(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1000BD8F4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100052648()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_10005266C(uint64_t a1)
{
  uint64_t v1;

  return sub_100050DA8(a1, *(_BYTE *)(v1 + 40), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10005267C(_QWORD *a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return sub_100050AF8(a1, a2, a3 & 1, *(uint64_t **)(v3 + 16));
}

uint64_t sub_100052688(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v2 + 32))(*a1, *(_QWORD *)a2, *(unsigned __int8 *)(a2 + 8)) & 1;
}

uint64_t type metadata accessor for TTRITreeViewBatchUpdatesContext.EffectiveChanges(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRITreeViewBatchUpdatesContext.EffectiveChanges);
}

uint64_t sub_1000526D0(uint64_t *a1)
{
  return sub_1000527AC(a1, (uint64_t (*)(uint64_t, uint64_t, __int128 *))sub_1000507A4) & 1;
}

uint64_t sub_1000526F0(uint64_t *a1)
{
  return sub_1000527AC(a1, (uint64_t (*)(uint64_t, uint64_t, __int128 *))sub_100050834) & 1;
}

uint64_t sub_100052710(uint64_t a1)
{
  return sub_100052750(a1, (uint64_t (*)(uint64_t, __int128 *, _QWORD, _QWORD))sub_1000509BC) & 1;
}

uint64_t sub_100052730(uint64_t a1)
{
  return sub_100052750(a1, (uint64_t (*)(uint64_t, __int128 *, _QWORD, _QWORD))sub_100050878) & 1;
}

uint64_t sub_100052750(uint64_t a1, uint64_t (*a2)(uint64_t, __int128 *, _QWORD, _QWORD))
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  __int128 v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  uint64_t v12;
  char v13;

  v3 = *(_QWORD *)(v2 + 32);
  v4 = *(_BYTE *)(v2 + 40);
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_BYTE *)(v2 + 72);
  v8 = *(_OWORD *)(v2 + 16);
  v9 = v3;
  v10 = v4;
  v11 = *(_OWORD *)(v2 + 48);
  v12 = v5;
  v13 = v6;
  return a2(a1, &v8, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88)) & 1;
}

uint64_t sub_1000527AC(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t, __int128 *))
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  uint64_t v15;
  char v16;

  v4 = *(_QWORD *)(v2 + 32);
  v5 = *(_BYTE *)(v2 + 40);
  v6 = *(_QWORD *)(v2 + 64);
  v7 = *(_BYTE *)(v2 + 72);
  v8 = *(_QWORD *)(v2 + 80);
  v9 = *a1;
  v11 = *(_OWORD *)(v2 + 16);
  v12 = v4;
  v13 = v5;
  v14 = *(_OWORD *)(v2 + 48);
  v15 = v6;
  v16 = v7;
  return a2(v9, v8, &v11) & 1;
}

uint64_t sub_10005281C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

uint64_t sub_100052824(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  swift_bridgeObjectRelease(a1[3]);
  return swift_bridgeObjectRelease(a1[4]);
}

uint64_t *sub_100052864(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  v7 = a2[4];
  a1[4] = v7;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  return a1;
}

uint64_t *sub_1000528D0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = a2[3];
  v11 = a1[3];
  a1[3] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = a2[4];
  v13 = a1[4];
  a1[4] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  return a1;
}

__n128 initializeWithTake for TTRIBoardColumnDraggingAnimationSource.FrameInView(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *sub_100052988(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v5);
  v6 = a1[4];
  a1[4] = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIBoardColumnDraggingAnimationCellBackgroundView.Shadow(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIBoardColumnDraggingAnimationCellBackgroundView.Shadow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ChangeHints()
{
  return &type metadata for ChangeHints;
}

_BYTE *initializeBufferWithCopyOfBuffer for TTRRemindersListEditingSessionState.SaveState(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TTRITreeViewUpdate(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRITreeViewUpdate(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100052B74 + 4 * byte_10052078A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100052BA8 + 4 * byte_100520785[v4]))();
}

uint64_t sub_100052BA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100052BB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100052BB8);
  return result;
}

uint64_t sub_100052BC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100052BCCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100052BD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100052BD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100052BE4(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_100052BEC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for TTRITreeViewUpdate()
{
  return &type metadata for TTRITreeViewUpdate;
}

unint64_t sub_100052C08()
{
  unint64_t result;

  result = qword_10063F6F8;
  if (!qword_10063F6F8)
  {
    result = swift_getWitnessTable(&unk_100520914, &type metadata for TTRITreeViewUpdate);
    atomic_store(result, (unint64_t *)&qword_10063F6F8);
  }
  return result;
}

unint64_t sub_100052C50()
{
  unint64_t result;

  result = qword_10063F700;
  if (!qword_10063F700)
  {
    result = swift_getWitnessTable(&unk_10052096C, &type metadata for ChangeHints);
    atomic_store(result, (unint64_t *)&qword_10063F700);
  }
  return result;
}

unint64_t sub_100052C98()
{
  unint64_t result;

  result = qword_10063F708;
  if (!qword_10063F708)
  {
    result = swift_getWitnessTable(&unk_10052093C, &type metadata for ChangeHints);
    atomic_store(result, (unint64_t *)&qword_10063F708);
  }
  return result;
}

unint64_t sub_100052CE0()
{
  unint64_t result;

  result = qword_10063F710;
  if (!qword_10063F710)
  {
    result = swift_getWitnessTable(&unk_100520994, &type metadata for ChangeHints);
    atomic_store(result, (unint64_t *)&qword_10063F710);
  }
  return result;
}

unint64_t sub_100052D28()
{
  unint64_t result;

  result = qword_10063F718;
  if (!qword_10063F718)
  {
    result = swift_getWitnessTable(&unk_1005209CC, &type metadata for ChangeHints);
    atomic_store(result, (unint64_t *)&qword_10063F718);
  }
  return result;
}

void sub_100052D74()
{
  _QWORD *v0;
  void *Strong;
  void *v2;
  void *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  id v22;
  id v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;

  Strong = (void *)swift_unknownObjectWeakLoadStrong((char *)v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_mainViewController);
  if (Strong)
  {
    v2 = Strong;
    v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_mainStackView);
    if (v3)
      v4 = v3;
    else
      v4 = sub_100053404(Strong, (uint64_t)v0);
    v37 = v4;

    v5 = v0[3];
    if (v5)
    {
      v6 = v0[2];
      v7 = v0[4];
      v8 = v0[5];
      v10 = v0[6];
      v9 = v0[7];
      v11 = v0[8];
      v12 = OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_completedHeaderView;
      v13 = *(char **)((char *)v0
                     + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_completedHeaderView);
      if (v13)
      {
        v14 = &v13[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration];
        v15 = *(_QWORD *)&v13[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration + 8];
        v33 = *(_QWORD *)&v13[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration + 24];
        v31 = *(_QWORD *)&v13[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration + 32];
        v36 = *(_QWORD *)&v13[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration + 40];
        v35 = *(_QWORD *)&v13[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration + 48];
        *(_QWORD *)v14 = v6;
        *((_QWORD *)v14 + 1) = v5;
        *((_WORD *)v14 + 8) = v7;
        v14[18] = BYTE2(v7) & 1;
        *((_QWORD *)v14 + 3) = v8;
        *((_QWORD *)v14 + 4) = v10;
        *((_QWORD *)v14 + 5) = v9;
        *((_QWORD *)v14 + 6) = v11;
        sub_100053E48(v6, v5, v7, v8, v10, v9, v11);
        sub_100053E48(v6, v5, v7, v8, v10, v9, v11);
        v16 = v13;
        swift_bridgeObjectRelease(v15);
        sub_1000381B8(v33, v31);
        v17 = sub_1000381B8(v36, v35);
        sub_1004DAFE0(v17, v18);
      }
      else
      {
        v22 = objc_allocWithZone((Class)type metadata accessor for TTRIRemindersBoardCompletedHeaderView());
        swift_bridgeObjectRetain(v5);
        sub_100053DE4(v8, v10);
        sub_100053DE4(v9, v11);
        v23 = objc_msgSend(v22, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
        v24 = *(void **)((char *)v0 + v12);
        *(_QWORD *)((char *)v0 + v12) = v23;
        v16 = (char *)v23;

        v25 = &v16[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration];
        v26 = *(_QWORD *)&v16[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration + 8];
        v27 = *(_QWORD *)&v16[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration + 24];
        v34 = *(_QWORD *)&v16[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration + 40];
        v30 = *(_QWORD *)&v16[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration + 32];
        v32 = *(_QWORD *)&v16[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration + 48];
        *(_QWORD *)v25 = v6;
        *((_QWORD *)v25 + 1) = v5;
        *((_WORD *)v25 + 8) = v7;
        v25[18] = (v7 & 0x10000) >> 16;
        *((_QWORD *)v25 + 3) = v8;
        *((_QWORD *)v25 + 4) = v10;
        *((_QWORD *)v25 + 5) = v9;
        *((_QWORD *)v25 + 6) = v11;
        swift_bridgeObjectRetain(v5);
        sub_100053DE4(v8, v10);
        sub_100053DE4(v9, v11);
        swift_bridgeObjectRetain(v5);
        sub_100053DE4(v8, v10);
        sub_100053DE4(v9, v11);
        swift_bridgeObjectRelease(v26);
        sub_1000381B8(v27, v30);
        v28 = sub_1000381B8(v34, v32);
        sub_1004DAFE0(v28, v29);
        sub_100053DF4(v6, v5, v7, v8, v10, v9, v11);
        objc_msgSend(v37, "addArrangedSubview:", v16);
      }
      sub_100053DF4(v6, v5, v7, v8, v10, v9, v11);

    }
    else
    {
      v19 = OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_completedHeaderView;
      v20 = *(void **)((char *)v0
                     + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_completedHeaderView);
      if (v20)
      {
        objc_msgSend(v20, "removeFromSuperview");

        v21 = *(char **)((char *)v0 + v19);
        *(_QWORD *)((char *)v0 + v19) = 0;
LABEL_14:

        return;
      }
    }
    v21 = v37;
    goto LABEL_14;
  }
}

void sub_1000530A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *Strong;
  void *v9;
  void *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  _QWORD aBlock[6];
  __int128 v21[2];

  v5 = sub_10002A750((uint64_t *)&unk_100657360);
  __chkstk_darwin(v5);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_mainViewController);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_mainStackView);
    if (v10)
      v11 = v10;
    else
      v11 = sub_100053404(Strong, v2);
    v12 = v11;

    sub_100053F0C(a1, (uint64_t)v7);
    v13 = type metadata accessor for TTRRemindersListTip(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 0, 1, v13);
    v14 = v2 + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_tip;
    swift_beginAccess(v2 + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_tip, aBlock, 33, 0);
    sub_100053F50((uint64_t)v7, v14);
    swift_endAccess(aBlock);
    sub_100010634(a2, (uint64_t)v21);
    v15 = swift_allocObject(&unk_1005EC6C8, 72, 7);
    *(_QWORD *)(v15 + 16) = v2;
    *(_QWORD *)(v15 + 24) = v12;
    sub_10002E37C(v21, v15 + 32);
    v16 = swift_allocObject(&unk_1005EC6F0, 32, 7);
    *(_QWORD *)(v16 + 16) = sub_100053FCC;
    *(_QWORD *)(v16 + 24) = v15;
    aBlock[4] = sub_10001B278;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001B258;
    aBlock[3] = &unk_1005EC708;
    v17 = _Block_copy(aBlock);
    swift_retain();
    v18 = v12;
    swift_retain();
    objc_msgSend(v18, "performBatchUpdates:", v17, swift_release().n128_f64[0]);

    _Block_release(v17);
    LOBYTE(v18) = swift_isEscapingClosureAtFileLocation(v16, "", 157, 50, 43, 1);
    swift_release();
    swift_release();
    if ((v18 & 1) != 0)
      __break(1u);
  }
}

void sub_1000532D8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  char *v6;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  _BYTE v13[40];
  _BYTE v14[40];

  v4 = OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_tipView;
  v5 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_tipView);
  if (v5)
  {
    v6 = *(char **)(a1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_tipView);
  }
  else
  {
    v9 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TTRIRemindersBoardTipHeaderView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v10 = *(void **)(a1 + v4);
    *(_QWORD *)(a1 + v4) = v9;
    v6 = (char *)v9;

    objc_msgSend(a2, "insertArrangedSubview:atIndex:", v6, 0);
    v5 = 0;
  }
  sub_100010634(a3, (uint64_t)v14);
  v11 = (uint64_t)&v6[OBJC_IVAR____TtC9Reminders31TTRIRemindersBoardTipHeaderView_contentConfiguration];
  swift_beginAccess(&v6[OBJC_IVAR____TtC9Reminders31TTRIRemindersBoardTipHeaderView_contentConfiguration], v13, 33, 0);
  v12 = v5;
  sub_100053FE8((uint64_t)v14, v11);
  swift_endAccess(v13);
  sub_100054030(v11, (uint64_t)v13);
  sub_1000DEAD8((uint64_t)v13);
  sub_1000073A0((uint64_t)v13, &qword_100654980);
  sub_1000073A0((uint64_t)v14, &qword_100654980);

}

char *sub_100053404(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *result;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  Class isa;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v4 = sub_10002A750(&qword_10063F860);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for HeaderStackView();
  v9 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8)), "init");
  objc_msgSend(v9, "setAxis:", 1);
  objc_msgSend(v9, "setAlignment:", 0);
  objc_msgSend(v9, "setDistribution:", 0);
  objc_msgSend(v9, "setSpacing:", 0.0);
  objc_msgSend(v9, "setDebugBoundingBoxesEnabled:", 0);
  objc_msgSend(v9, "setDirectionalLayoutMargins:", 8.0, 8.0, 8.0, 8.0);
  objc_msgSend(v9, "setEdgesPreservingSuperviewLayoutMargins:", 10);
  objc_msgSend(v9, "setLayoutMarginsRelativeArrangement:", 0);
  objc_msgSend(v9, "setInsetsLayoutMarginsFromSafeArea:", 0);
  result = (char *)objc_msgSend(a1, "view");
  if (result)
  {
    v11 = result;
    v37 = v5;
    v38 = v4;
    objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v11, "addSubview:", v9);
    v12 = UIView.constraintsEqualTo(_:edges:)(v9, 10);
    v13 = objc_msgSend(v11, "safeAreaLayoutGuide");
    v14 = objc_msgSend(v13, "topAnchor");

    v15 = objc_msgSend(v9, "bottomAnchor");
    v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

    v39 = v12;
    swift_bridgeObjectRetain(v12);
    v17 = v16;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
    v19 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v18 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v19 >= v18 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
    v20 = (void *)objc_opt_self(NSLayoutConstraint);
    v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
    specialized Array._endMutation()(v21);
    v22 = v39;
    swift_bridgeObjectRelease(v12);

    sub_100005ED8(0, (unint64_t *)&qword_10064BB60, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v22);
    objc_msgSend(v20, "activateConstraints:", isa);

    v39 = *(_QWORD *)&v9[OBJC_IVAR____TtC9RemindersP33_9720CD1AB887D176DDBBBD34D80FC8A015HeaderStackView_viewHeightSubject];
    v24 = sub_10002A750(&qword_10063F868);
    v25 = sub_100023FEC(&qword_10063F870, &qword_10063F868, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
    v26 = sub_100053E9C();
    Publisher<>.removeDuplicates()(v24, v25, v26);
    v27 = sub_100023FEC(&qword_10063F880, &qword_10063F860, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v28 = v38;
    v29 = Publisher.eraseToAnyPublisher()(v38, v27);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v28);
    v39 = v29;
    v30 = swift_allocObject(&unk_1005EC6A0, 24, 7);
    swift_weakInit(v30 + 16, a2);
    v31 = sub_10002A750(&qword_10063F888);
    v32 = sub_100023FEC(&qword_10063F890, &qword_10063F888, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v33 = Publisher<>.sink(receiveValue:)(sub_100053F04, v30, v31, v32);

    swift_release();
    swift_release();
    v34 = *(void **)(a2 + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_mainStackView);
    *(_QWORD *)(a2 + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_mainStackView) = v9;
    v35 = v9;

    *(_QWORD *)(a2
              + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_mainStackHeightDidChangeCancellable) = v33;
    swift_release();
    return v35;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100053864(double *a1, uint64_t a2)
{
  double v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  void *v6;
  void *v7;
  _BYTE v8[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_mainViewController);
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, "additionalSafeAreaInsets");
      objc_msgSend(v7, "setAdditionalSafeAreaInsets:", v2);
      swift_release(v5);

    }
    else
    {
      swift_release(v5);
    }
  }
}

uint64_t sub_100053908()
{
  uint64_t *v0;

  sub_100053DF4(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8]);
  sub_1000073A0((uint64_t)v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_tip, (uint64_t *)&unk_100657360);
  swift_unknownObjectWeakDestroy((char *)v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_mainViewController);

  swift_release(*(uint64_t *)((char *)v0
                           + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_mainStackHeightDidChangeCancellable));
  objc_release(*(id *)((char *)v0
                     + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_completedHeaderView));

  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1000539A4()
{
  return type metadata accessor for TTRIRemindersBoardHeaderViewController(0);
}

uint64_t type metadata accessor for TTRIRemindersBoardHeaderViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_10063F770;
  if (!qword_10063F770)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIRemindersBoardHeaderViewController);
  return result;
}

void sub_1000539E8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = "8";
  sub_100053A78(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_100520B50;
    v4[3] = &unk_100520B68;
    v4[4] = &unk_100520B68;
    v4[5] = &unk_100520B68;
    v4[6] = &unk_100520B68;
    swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
  }
}

void sub_100053A78(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10063F780)
  {
    v2 = type metadata accessor for TTRRemindersListTip(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10063F780);
  }
}

uint64_t type metadata accessor for HeaderStackView()
{
  return objc_opt_self(_TtC9RemindersP33_9720CD1AB887D176DDBBBD34D80FC8A015HeaderStackView);
}

uint64_t sub_100053DE4(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

uint64_t sub_100053DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    sub_1000381B8(a4, a5);
    return sub_1000381B8(a6, a7);
  }
  return result;
}

uint64_t sub_100053E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    sub_100053DE4(a4, a5);
    return sub_100053DE4(a6, a7);
  }
  return result;
}

unint64_t sub_100053E9C()
{
  unint64_t result;

  result = qword_10063F878;
  if (!qword_10063F878)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_10063F878);
  }
  return result;
}

uint64_t sub_100053EE0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100053F04(double *a1)
{
  uint64_t v1;

  sub_100053864(a1, v1);
}

uint64_t sub_100053F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRRemindersListTip(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100053F50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_100657360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100053F98()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  sub_100027F10((_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 72, 7);
}

void sub_100053FCC()
{
  uint64_t v0;

  sub_1000532D8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), v0 + 32);
}

uint64_t sub_100053FD8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100053FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100654980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100054030(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100654980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100054078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10063F898);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10063F898);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_100054108(void *a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  objc_super v14;
  __int128 v15;
  void *v16;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = &v2[OBJC_IVAR____TtC9Reminders33TTRIGroupMembershipViewController_viewModel];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v6 = v2;
  static TTRTypedController.currentArgument.getter(&v15, ObjectType, &off_10063F8F0);
  v7 = v16;
  v8 = v15;
  *(_OWORD *)&v6[OBJC_IVAR____TtC9Reminders33TTRIGroupMembershipViewController_presenter] = v15;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders33TTRIGroupMembershipViewController_localUndoManager] = v7;
  v9 = v8;
  swift_unknownObjectRetain(v8);
  v10 = v7;

  v14.receiver = v6;
  v14.super_class = ObjectType;
  v11 = objc_msgSendSuper2(&v14, "initWithCoder:", a1);

  v12 = v11;
  swift_unknownObjectRelease(v9);
  if (v12)

  return v12;
}

void sub_10005422C()
{
  char *v0;
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  _QWORD aBlock[5];
  uint64_t v20;

  v1 = v0;
  v2 = (uint64_t *)&v0[OBJC_IVAR____TtC9Reminders33TTRIGroupMembershipViewController_viewModel];
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders33TTRIGroupMembershipViewController_viewModel];
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders33TTRIGroupMembershipViewController_viewModel + 8];
  sub_1000569B8(v3, v4);
  v5 = sub_1003F3B74();
  v7 = v6;
  v8 = *v2;
  v9 = v2[1];
  *v2 = (uint64_t)v5;
  v2[1] = v6;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v7);
  sub_1000569E4(v8, v9);
  if (!v3)
  {
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v5);
    v17 = objc_msgSend(v1, "tableView");
    if (!v17)
    {
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
    v18 = v17;
    objc_msgSend(v17, "reloadData");
LABEL_9:

    return;
  }
  v10 = sub_1001EDC24(v3, v4, v5, v7);
  v11 = objc_msgSend(v1, "tableView");
  v18 = v11;
  if (v10)
  {
    if (v11)
    {
      v12 = swift_allocObject(&unk_1005EC780, 32, 7);
      *(_QWORD *)(v12 + 16) = v10;
      *(_QWORD *)(v12 + 24) = v1;
      v13 = swift_allocObject(&unk_1005EC7A8, 32, 7);
      *(_QWORD *)(v13 + 16) = sub_100056A3C;
      *(_QWORD *)(v13 + 24) = v12;
      aBlock[4] = sub_10001B278;
      v20 = v13;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10001B258;
      aBlock[3] = &unk_1005EC7C0;
      v14 = _Block_copy(aBlock);
      v15 = v20;
      v16 = v1;
      objc_msgSend(v18, "performBatchUpdates:completion:", v14, 0, swift_release(v15).n128_f64[0]);
      _Block_release(v14);
      swift_release(v12);

      return;
    }
    __break(1u);
    goto LABEL_11;
  }
  if (v11)
  {
    objc_msgSend(v11, "reloadData");
    goto LABEL_9;
  }
LABEL_12:
  __break(1u);
}

uint64_t sub_100054560@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char v13;

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders33TTRIGroupMembershipViewController_viewModel);
  if (!v4)
  {
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    goto LABEL_6;
  }
  v5 = result;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders33TTRIGroupMembershipViewController_viewModel + 8);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v6);
  sub_1001EC0FC((uint64_t)&off_1005EA5A0, v4, v6);
  v8 = v7;
  swift_arrayDestroy(&unk_1005EA5C0, 2, &type metadata for TTRIGroupMembershipViewModel.Item);
  swift_bridgeObjectRelease(v6);
  result = swift_bridgeObjectRelease(v4);
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(v8 + 16) > v5)
  {
    v9 = v8 + 40 * v5;
    v10 = *(_QWORD *)(v9 + 32);
    v4 = *(_QWORD *)(v9 + 40);
    v11 = *(_QWORD *)(v9 + 48);
    v12 = *(void **)(v9 + 56);
    v13 = *(_BYTE *)(v9 + 64);
    sub_100056A54(v10, v4, v11, v12);
    result = swift_bridgeObjectRelease(v8);
LABEL_6:
    *(_QWORD *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v4;
    *(_QWORD *)(a2 + 16) = v11;
    *(_QWORD *)(a2 + 24) = v12;
    *(_BYTE *)(a2 + 32) = v13;
    return result;
  }
  __break(1u);
  return result;
}

void sub_100054678(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  id v30;
  void *v31;
  void *v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t inited;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  int v71;
  unsigned int v72;
  void *v73;
  char v74[80];
  char v75[56];
  uint64_t v76;
  char v77[8];
  void *v78;
  void *v79;
  char v80[8];
  uint64_t v81;

  v69 = a2;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (uint64_t)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v61 = (char *)&v57 - v12;
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v57 - v14;
  v16 = IndexPath.section.getter(v13);
  sub_100054560(v16, (uint64_t)v77);
  v17 = (uint64_t *)(v2 + OBJC_IVAR____TtC9Reminders33TTRIGroupMembershipViewController_viewModel);
  v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders33TTRIGroupMembershipViewController_viewModel);
  if (!v18)
    goto LABEL_25;
  v3 = v78;
  v4 = v79;
  v10 = v17[1];
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v10);
  v20 = IndexPath.row.getter(v19);
  sub_100056B1C((uint64_t)v77, (uint64_t)v80);
  if (v81 == 1)
  {
    if ((v20 & 0x8000000000000000) == 0)
    {
      if (v20 < *(_QWORD *)(v10 + 16))
      {
        v21 = v10 + 40 * v20;
LABEL_10:
        v23 = *(_QWORD *)(v21 + 32);
        v22 = *(_QWORD *)(v21 + 40);
        v3 = (void *)*(unsigned __int8 *)(v21 + 48);
        v24 = *(void **)(v21 + 56);
        v72 = *(unsigned __int8 *)(v21 + 64);
        v73 = v24;
        v25 = v24;
        swift_bridgeObjectRetain(v22);
        swift_bridgeObjectRelease(v10);
        v59 = v6;
        v60 = a1;
        swift_bridgeObjectRelease(v18);
        v26 = *v17;
        if (!*v17)
        {
LABEL_17:
          if (qword_10063D2C8 != -1)
            swift_once(&qword_10063D2C8, sub_100054078);
          v35 = v59;
          v36 = sub_100012DC4(v59, (uint64_t)qword_10063F898);
          (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v61, v36, v35);
          v37 = sub_10002A750((uint64_t *)&unk_100640F20);
          inited = swift_initStackObject(v37, v75);
          *(_OWORD *)(inited + 16) = xmmword_100520250;
          *(_QWORD *)(inited + 32) = 48;
          *(_QWORD *)(inited + 40) = 0xE100000000000000;
          v39 = IndexPath.description.getter();
          *(_QWORD *)(inited + 72) = &type metadata for String;
          *(_QWORD *)(inited + 48) = v39;
          *(_QWORD *)(inited + 56) = v40;
          v41 = sub_10002D32C(inited);
          v42 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
          sub_1002EB23C((uint64_t)"Failed to get list for item {indexPath: %@}", 43, 2uLL, v41, v42);
          __break(1u);
LABEL_20:
          swift_bridgeObjectRelease(v64);
          swift_bridgeObjectRelease(v65);

          v43 = v68;
          swift_bridgeObjectRelease(v68);
          swift_bridgeObjectRelease_n(v62, 2);
          sub_100056A84(v67, v43, v66, v73);
          sub_100056B58((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100056A84);
          v44 = v69;
          *v69 = v70;
          v44[1] = v4;
          *((_BYTE *)v44 + 16) = v71;
          v44[3] = v3;
          *((_BYTE *)v44 + 32) = v10;
          return;
        }
        v66 = v3;
        v67 = v23;
        v58 = v7;
        v10 = v17[1];
        v76 = v26;
        swift_bridgeObjectRetain(v26);
        swift_bridgeObjectRetain(v10);
        v65 = v26;
        sub_1000569B8(v26, v10);
        v63 = v73;
        v68 = v22;
        swift_bridgeObjectRetain(v22);
        v64 = v10;
        sub_100450520(v10);
        v27 = v76;
        v28 = *(_QWORD *)(v76 + 16);
        v62 = v76;
        if (v28)
        {
          sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
          swift_bridgeObjectRetain(v27);
          v29 = (unsigned __int8 *)(v27 + 64);
          while (1)
          {
            v10 = *v29;
            v3 = (void *)*((_QWORD *)v29 - 1);
            v71 = *(v29 - 16);
            v4 = (void *)*((_QWORD *)v29 - 3);
            v70 = *((_QWORD *)v29 - 4);
            swift_bridgeObjectRetain(v4);
            v30 = v3;
            v31 = (void *)TTRListOrCustomSmartListChangeItem.objectID.getter(v3, v10);
            v32 = (void *)TTRListOrCustomSmartListChangeItem.objectID.getter(v73, v72);
            v33 = static NSObject.== infix(_:_:)(v31, v32);

            if ((v33 & 1) != 0)
              goto LABEL_20;

            swift_bridgeObjectRelease(v4);
            v29 += 40;
            if (!--v28)
            {
              swift_bridgeObjectRelease(v68);
              v34 = (uint64_t *)v77;
              goto LABEL_16;
            }
          }
        }
LABEL_28:
        v34 = &v81;
LABEL_16:
        swift_bridgeObjectRelease(*(v34 - 32));
        swift_bridgeObjectRelease(v62);
        swift_bridgeObjectRelease(v64);
        swift_bridgeObjectRelease(v65);

        v7 = v58;
        goto LABEL_17;
      }
      goto LABEL_23;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    if (qword_10063D2C8 != -1)
      swift_once(&qword_10063D2C8, sub_100054078);
    v45 = sub_100012DC4(v6, (uint64_t)qword_10063F898);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v10, v45, v6);
    v46 = sub_10002A750((uint64_t *)&unk_100640F20);
    v47 = swift_initStackObject(v46, v74);
    *(_OWORD *)(v47 + 16) = xmmword_100520250;
    *(_QWORD *)(v47 + 32) = 48;
    *(_QWORD *)(v47 + 40) = 0xE100000000000000;
    v48 = IndexPath.description.getter();
    *(_QWORD *)(v47 + 72) = &type metadata for String;
    *(_QWORD *)(v47 + 48) = v48;
    *(_QWORD *)(v47 + 56) = v49;
    v50 = sub_10002D32C(v47);
    v51 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    sub_1002EB23C((uint64_t)"Failed to get item for indexPath {indexPath: %@}", 48, 2uLL, v50, v51);
    __break(1u);
    goto LABEL_28;
  }
  if (!v81)
  {
    if ((v20 & 0x8000000000000000) == 0)
    {
      if (v20 < *(_QWORD *)(v18 + 16))
      {
        v21 = v18 + 40 * v20;
        goto LABEL_10;
      }
      goto LABEL_24;
    }
    goto LABEL_22;
  }
  sub_100056B58((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100056A54);
  v52 = qword_10063D4C0;
  swift_bridgeObjectRetain(v3);
  v53 = v4;
  if (v52 != -1)
    swift_once(&qword_10063D4C0, sub_1001EAEC4);
  v54 = sub_100012DC4(v6, (uint64_t)qword_10064C998);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v15, v54, v6);
  v55 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  v56 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1002EB23C((uint64_t)"Requested child of list", 23, 2uLL, v55, v56);
  __break(1u);
}

id sub_100054D70(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSString v5;
  Class isa;
  id v7;
  id v8;
  void *v9;
  NSString v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  __int128 v26;
  void *v27;
  unsigned __int8 v28;
  __int128 v29;

  v3 = v2;
  sub_100054678(a2, &v26);
  v5 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v7 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v5, isa);

  v8 = objc_msgSend(v7, "textLabel");
  if (v8)
  {
    v9 = v8;
    v10 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setText:", v10);

  }
  v11 = objc_msgSend(v7, "textLabel");
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    objc_msgSend(v12, "setTextColor:", v13);

  }
  v14 = v27;
  v15 = v28;
  v16 = v7;
  v17 = (void *)TTRListOrCustomSmartListChangeItem.objectID.getter(v14, v15);
  v18 = objc_msgSend(v17, "stringRepresentation");

  if (!v18)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v20 = v19;
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v20);
  }
  objc_msgSend(v16, "setAccessibilityIdentifier:", v18);

  v21 = type metadata accessor for TTRIGroupMembershipCell();
  v22 = swift_dynamicCastClass(v16, v21);
  if (v22)
  {
    v23 = v22 + OBJC_IVAR____TtC9Reminders23TTRIGroupMembershipCell_ttriAccessibilityDelegate;
    *(_QWORD *)(v23 + 8) = &off_1005EC730;
    swift_unknownObjectWeakAssign(v23, v3);
    v29 = v26;
    v24 = v16;
    sub_100056AB8((uint64_t)&v29);

  }
  else
  {
    v29 = v26;
    sub_100056AB8((uint64_t)&v29);
  }

  return v16;
}

uint64_t type metadata accessor for TTRIGroupMembershipViewController()
{
  return objc_opt_self(_TtC9Reminders33TTRIGroupMembershipViewController);
}

void sub_10005595C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned __int8 *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  char *v18;
  Class isa;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  Class v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  void *v44;
  char *v45;
  Class v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  Class v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  char *v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, char *, uint64_t);
  uint64_t v66;
  Class v67;
  id v68;
  void *v69;
  uint64_t v70;
  Class v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  void (*v78)(char *, uint64_t);
  void *v79;
  unint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  id v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  __int128 v100;
  char *v101;
  void *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  void *v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;

  v107 = a2;
  v3 = type metadata accessor for IndexPath(0);
  v4 = __chkstk_darwin(v3);
  v103 = (char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v104 = (char *)&v96 - v7;
  v8 = __chkstk_darwin(v6);
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
    return;
  v101 = (char *)&v96 - v9;
  v105 = v8;
  v106 = v10;
  swift_bridgeObjectRetain(a1);
  v97 = a1;
  v12 = (unsigned __int8 *)(a1 + 64);
  v100 = xmmword_100520250;
  while (1)
  {
    v30 = *((_QWORD *)v12 - 4);
    v31 = *((_QWORD *)v12 - 3);
    v33 = *((_QWORD *)v12 - 2);
    v32 = (void *)*((_QWORD *)v12 - 1);
    v34 = *v12;
    v35 = *((_QWORD *)v12 + 1);
    v114 = *((_QWORD *)v12 + 2);
    v36 = *((_QWORD *)v12 + 3);
    v37 = *((_QWORD *)v12 + 4);
    v38 = (void *)*((_QWORD *)v12 + 5);
    v113 = v12[48];
    v39 = (void *)*((_QWORD *)v12 + 7);
    v110 = v37;
    v111 = v30;
    v112 = v33;
    v109 = v11;
    if (v31)
      break;
    if (!v36)
    {
      v102 = v39;
      v13 = v32;
      sub_100056A54(v30, 0, v33, v32);
      sub_100056A54(v114, 0, v37, v38);
      v14 = objc_msgSend(v107, "tableView");
      if (!v14)
        goto LABEL_27;
      v15 = v14;
      v16 = v13;
      v17 = v38;
      v18 = v103;
      IndexPath.init(row:section:)(v35, 0);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v20 = v105;
      v21 = *(void (**)(char *, uint64_t))(v106 + 8);
      v21(v18, v105);
      IndexPath.init(row:section:)(v102, 0);
      v22 = IndexPath._bridgeToObjectiveC()().super.isa;
      v21(v18, v20);
      objc_msgSend(v15, "moveRowAtIndexPath:toIndexPath:", isa, v22);

      v24 = v111;
      v23 = v112;
      sub_100056A84(v111, 0, v112, v16);
      v25 = v114;
      v26 = v110;
      sub_100056A84(v114, 0, v110, v17);
      sub_100056A84(v24, 0, v23, v16);
      v27 = v25;
      v28 = v26;
      v29 = v17;
LABEL_5:
      sub_100056A84(v27, 0, v28, v29);
      goto LABEL_6;
    }
    if (v36 != 1)
      goto LABEL_19;
    v102 = v32;
    v99 = v34;
    sub_100056A54(v30, 0, v33, v32);
    v108 = v38;
    sub_100056A54(v114, 1uLL, v37, v38);
    v55 = v101;
    IndexPath.init(row:section:)(v35, 0);
    IndexPath.init(row:section:)(v39, 1);
    v56 = objc_msgSend(v107, "tableView");
    if (!v56)
      goto LABEL_28;
    v57 = v56;
    v58 = sub_10002A750((uint64_t *)&unk_100650540);
    v59 = v106;
    v60 = *(unsigned __int8 *)(v106 + 80);
    v61 = (v60 + 32) & ~v60;
    v62 = v61 + *(_QWORD *)(v106 + 72);
    v63 = v60 | 7;
    v98 = v58;
    v64 = swift_allocObject(v58, v62, v60 | 7);
    *(_OWORD *)(v64 + 16) = v100;
    v65 = *(void (**)(uint64_t, char *, uint64_t))(v59 + 16);
    v66 = v105;
    v65(v64 + v61, v55, v105);
    v67 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v64);
    objc_msgSend(v57, "deleteRowsAtIndexPaths:withRowAnimation:", v67, 100);

    v68 = objc_msgSend(v107, "tableView");
    if (!v68)
      goto LABEL_29;
    v69 = v68;
    v70 = swift_allocObject(v98, v62, v63);
    *(_OWORD *)(v70 + 16) = v100;
    v65(v70 + v61, v104, v66);
    v71 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v70);
    objc_msgSend(v69, "insertRowsAtIndexPaths:withRowAnimation:", v71, 0);

    v73 = v111;
    v72 = v112;
    v74 = v102;
    sub_100056A84(v111, 0, v112, v102);
    v75 = v114;
    v76 = v110;
    v77 = v108;
    sub_100056A84(v114, 1uLL, v110, v108);
    sub_100056A84(v73, 0, v72, v74);
    sub_100056A84(v75, 1uLL, v76, v77);
    v78 = *(void (**)(char *, uint64_t))(v106 + 8);
    v78(v104, v66);
    v78(v101, v66);
LABEL_6:
    v12 += 96;
    v11 = v109 - 1;
    if (v109 == 1)
    {
      swift_bridgeObjectRelease(v97);
      return;
    }
  }
  if (v31 == 1)
  {
    if (v36)
      goto LABEL_19;
    v40 = v30;
    v41 = v32;
    sub_100056A54(v40, 1uLL, v33, v32);
    v108 = v38;
    sub_100056A54(v114, 0, v37, v38);
    v42 = objc_msgSend(v107, "tableView");
    if (!v42)
    {
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v43 = v42;
    v44 = v41;
    v45 = v103;
    IndexPath.init(row:section:)(v35, 1);
    v46 = IndexPath._bridgeToObjectiveC()().super.isa;
    v47 = v105;
    v48 = *(void (**)(char *, uint64_t))(v106 + 8);
    v48(v45, v105);
    IndexPath.init(row:section:)(v39, 0);
    v49 = IndexPath._bridgeToObjectiveC()().super.isa;
    v48(v45, v47);
    objc_msgSend(v43, "moveRowAtIndexPath:toIndexPath:", v46, v49);

    v51 = v111;
    v50 = v112;
    sub_100056A84(v111, 1uLL, v112, v44);
    v52 = v114;
    v53 = v110;
    v54 = v108;
    sub_100056A84(v114, 0, v110, v108);
    sub_100056A84(v51, 1uLL, v50, v44);
    v27 = v52;
    v28 = v53;
    v29 = v54;
    goto LABEL_5;
  }
  v79 = v32;
  v80 = v36;
  v81 = v32;
  swift_bridgeObjectRetain(v31);
  v36 = v80;
  v32 = v79;
LABEL_19:
  v82 = v30;
  v83 = v30;
  v84 = v36;
  v85 = v33;
  v86 = v33;
  v87 = v32;
  sub_100056A54(v83, v31, v86, v32);
  v88 = v114;
  sub_100056A54(v114, v84, v37, v38);
  sub_100056A54(v88, v84, v37, v38);
  v102 = v87;
  sub_100056A84(v82, v31, v85, v87);
  v109 = v84;
  sub_100056A84(v88, v84, v37, v38);
  if (qword_10063D2C8 != -1)
    swift_once(&qword_10063D2C8, sub_100054078);
  v89 = type metadata accessor for Logger(0);
  v90 = sub_100012DC4(v89, (uint64_t)qword_10063F898);
  v91 = Logger.logObject.getter(v90);
  v92 = static os_log_type_t.fault.getter(v91);
  if (os_log_type_enabled(v91, v92))
  {
    v93 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v93 = 0;
    _os_log_impl((void *)&_mh_execute_header, v91, v92, "Unexpected move in groupMembership view controller", v93, 2u);
    swift_slowDealloc(v93, -1, -1);
  }

  v94 = objc_msgSend(v107, "tableView");
  if (v94)
  {
    v95 = v94;
    swift_bridgeObjectRelease(v97);
    objc_msgSend(v95, "reloadData");

    sub_100056A84(v111, v31, v112, v102);
    sub_100056A84(v114, v109, v37, v38);
    return;
  }
LABEL_30:
  __break(1u);
}

id sub_100056158(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id result;
  void *v15;
  id v16;
  void (*v17)(char *, char *, uint64_t);
  void *v18;
  _BOOL8 v19;
  uint64_t v20;
  __int128 v21;
  char v22;
  uint64_t v23;
  id v24[2];
  __int128 v25;

  v3 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v20 - v12;
  result = objc_msgSend(v1, "tableView", v11);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v15 = result;
  v16 = objc_msgSend(result, "indexPathForCell:", a1);

  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_7;
  }
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v16);

  v17 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v17(v5, v9, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_7:
    sub_100052544((uint64_t)v5);
    return 0;
  }
  v17(v13, v5, v6);
  result = objc_msgSend(v1, "tableView");
  if (result)
  {
    v18 = result;
    sub_100054678((uint64_t)v13, &v21);
    v25 = v21;
    sub_100056AB8((uint64_t)&v25);
    sub_100056AE0((uint64_t)&v23, (uint64_t)v24);
    sub_100037F50(v24);

    v19 = (v22 & 1) == 0;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    return (id)v19;
  }
LABEL_10:
  __break(1u);
  return result;
}

id sub_100056378(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id result;
  void *v15;
  id v16;
  void (*v17)(char *, char *, uint64_t);
  void *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  char v22;
  uint64_t v23;
  id v24[2];
  __int128 v25;

  v3 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v20 - v12;
  result = objc_msgSend(v1, "tableView", v11);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v15 = result;
  v16 = objc_msgSend(result, "indexPathForCell:", a1);

  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_7;
  }
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v16);

  v17 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v17(v5, v9, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_7:
    sub_100052544((uint64_t)v5);
    return 0;
  }
  v17(v13, v5, v6);
  result = objc_msgSend(v1, "tableView");
  if (result)
  {
    v18 = result;
    sub_100054678((uint64_t)v13, &v21);
    v25 = v21;
    sub_100056AB8((uint64_t)&v25);
    sub_100056AE0((uint64_t)&v23, (uint64_t)v24);
    sub_100037F50(v24);

    v19 = v22 & 1;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    return (id)v19;
  }
LABEL_10:
  __break(1u);
  return result;
}

id sub_100056594(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id result;
  void *v15;
  id v16;
  void (*v17)(char *, char *, uint64_t);
  void *v18;
  char v19;
  char v20;
  uint64_t v21;

  v3 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v21 - v12;
  result = objc_msgSend(v1, "tableView", v11);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v15 = result;
  v16 = objc_msgSend(result, "indexPathForCell:", a1);

  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_7;
  }
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v16);

  v17 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v17(v5, v9, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_7:
    sub_100052544((uint64_t)v5);
    v20 = 0;
    return (id)(v20 & 1);
  }
  v17(v13, v5, v6);
  result = objc_msgSend(v1, "tableView");
  if (result)
  {
    v18 = result;
    sub_100056F00();
    v20 = v19;

    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    return (id)(v20 & 1);
  }
LABEL_10:
  __break(1u);
  return result;
}

id sub_100056780(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id result;
  void *v14;
  id v15;
  void (*v16)(char *, char *, uint64_t);
  void *v17;
  uint64_t v18;
  __int128 v19;
  char v20;
  uint64_t v21;
  id v22[2];
  __int128 v23;

  v3 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v18 - v11;
  result = objc_msgSend(v1, "tableView");
  if (!result)
  {
    __break(1u);
    goto LABEL_13;
  }
  v14 = result;
  v15 = objc_msgSend(result, "indexPathForCell:", a1);

  if (!v15)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    return (id)sub_100052544((uint64_t)v5);
  }
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v15);

  v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v16(v5, v10, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    return (id)sub_100052544((uint64_t)v5);
  v16(v12, v5, v6);
  result = objc_msgSend(v1, "tableView");
  if (!result)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  v17 = result;
  sub_100054678((uint64_t)v12, &v19);
  if ((v20 & 1) != 0)
    sub_1003F40E0(&v19);
  else
    sub_1003F3DB0(&v19);
  v23 = v19;
  sub_100056AB8((uint64_t)&v23);
  sub_100056AE0((uint64_t)&v21, (uint64_t)v22);
  sub_100037F50(v22);

  return (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
}

uint64_t sub_1000569B8(uint64_t result, uint64_t a2)
{
  if (result)
  {
    swift_bridgeObjectRetain(result);
    return swift_bridgeObjectRetain(a2);
  }
  return result;
}

uint64_t sub_1000569E4(uint64_t result, uint64_t a2)
{
  if (result)
  {
    swift_bridgeObjectRelease(result);
    return swift_bridgeObjectRelease(a2);
  }
  return result;
}

uint64_t sub_100056A10()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100056A3C()
{
  uint64_t v0;

  sub_10005595C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100056A44()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100056A54(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  id v5;
  uint64_t result;

  if (a2 >= 2)
  {
    v5 = a4;
    return swift_bridgeObjectRetain(a2);
  }
  return result;
}

void sub_100056A84(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  if (a2 >= 2)
  {
    swift_bridgeObjectRelease(a2);

  }
}

uint64_t sub_100056AB8(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_100056AE0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for TTRListOrCustomSmartListChangeItem - 1) + 32))(a2, a1);
  return a2;
}

uint64_t sub_100056B1C(uint64_t a1, uint64_t a2)
{
  initializeWithTake for TTRIGroupMembershipViewModel.List(a2, a1);
  return a2;
}

uint64_t sub_100056B58(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  return a1;
}

uint64_t sub_100056B90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[40];
  _BYTE v8[8];
  uint64_t v9;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders33TTRIGroupMembershipViewController_viewModel);
  if (!v2)
    return 0;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders33TTRIGroupMembershipViewController_viewModel + 8);
  swift_bridgeObjectRetain(*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders33TTRIGroupMembershipViewController_viewModel));
  swift_bridgeObjectRetain(v4);
  sub_100054560(a1, (uint64_t)v7);
  sub_100056B1C((uint64_t)v7, (uint64_t)v8);
  if (v9 == 1)
  {
    v5 = *(_QWORD *)(v4 + 16);
  }
  else if (v9)
  {
    sub_100056B58((uint64_t)v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100056A84);
    v5 = 0;
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 16);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v2);
  return v5;
}

uint64_t sub_100056C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders33TTRIGroupMembershipViewController_viewModel);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders33TTRIGroupMembershipViewController_viewModel + 8);
    swift_bridgeObjectRetain(v1);
    swift_bridgeObjectRetain(v2);
    sub_1001EC0FC((uint64_t)&off_1005EA610, v1, v2);
    v4 = v3;
    swift_arrayDestroy(&unk_1005EA630, 2, &type metadata for TTRIGroupMembershipViewModel.Item);
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(v1);
    v1 = *(_QWORD *)(v4 + 16);
    swift_bridgeObjectRelease(v4);
  }
  return v1;
}

uint64_t sub_100056CF0(unint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD *v9;
  uint64_t countAndFlagsBits;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders33TTRIGroupMembershipViewController_viewModel);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders33TTRIGroupMembershipViewController_viewModel);
  if (!v3)
  {
    v11 = 0;
    v12 = 0;
    countAndFlagsBits = 0;
    goto LABEL_9;
  }
  v5 = v2[1];
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v5);
  sub_1001EC0FC((uint64_t)&off_1005EA680, v3, v5);
  v7 = v6;
  swift_arrayDestroy(&unk_1005EA6A0, 2, &type metadata for TTRIGroupMembershipViewModel.Item);
  swift_bridgeObjectRelease(v5);
  result = swift_bridgeObjectRelease(v3);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(v7 + 16) > a1)
  {
    v9 = (_QWORD *)(v7 + 40 * a1);
    countAndFlagsBits = v9[4];
    v3 = v9[5];
    v12 = v9[6];
    v11 = (void *)v9[7];
    sub_100056A54(countAndFlagsBits, v3, v12, v11);
    swift_bridgeObjectRelease(v7);
    v13 = *v2;
    if (*v2)
    {
      v14 = v2[1];
      v15 = *v2;
      if (v3)
      {
        if (v3 != 1)
        {
          sub_1000569B8(v15, v2[1]);
          swift_bridgeObjectRetain(v3);
          sub_100056A84(countAndFlagsBits, v3, v12, v11);
          goto LABEL_13;
        }
        swift_bridgeObjectRetain(v15);
        swift_bridgeObjectRetain(v14);
        v16 = 0xD000000000000038;
        v17 = 0x800000010055FE90;
        v18 = 0x53494C2045524F4DLL;
        v19 = 0xEA00000000005354;
      }
      else
      {
        swift_bridgeObjectRetain(v15);
        swift_bridgeObjectRetain(v14);
        v17 = 0x800000010055FED0;
        v18 = 0x4544554C434E49;
        v19 = 0xE700000000000000;
        v16 = 0xD000000000000034;
      }
      countAndFlagsBits = TTRLocalizedString(_:comment:)(*(Swift::String *)&v18, *(Swift::String *)&v16)._countAndFlagsBits;
LABEL_13:
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v13);
      return countAndFlagsBits;
    }
LABEL_9:
    sub_100056A84(countAndFlagsBits, v3, v12, v11);
    return 0;
  }
  __break(1u);
  return result;
}

void sub_100056F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = IndexPath.section.getter(v4);
  v8 = v0 + OBJC_IVAR____TtC9Reminders33TTRIGroupMembershipViewController_viewModel;
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders33TTRIGroupMembershipViewController_viewModel);
  if (!v9)
    return;
  v10 = v7;
  v11 = *(_QWORD *)(v8 + 8);
  swift_bridgeObjectRetain(*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders33TTRIGroupMembershipViewController_viewModel));
  swift_bridgeObjectRetain(v11);
  sub_1001EC0FC((uint64_t)&off_1005EA6F0, v9, v11);
  v13 = v12;
  swift_arrayDestroy(&unk_1005EA710, 2, &type metadata for TTRIGroupMembershipViewModel.Item);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v9);
  if ((v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v10 < *(_QWORD *)(v13 + 16))
  {
    v14 = v13 + 40 * v10;
    v15 = *(_QWORD *)(v14 + 40);
    sub_100056A54(*(_QWORD *)(v14 + 32), v15, *(_QWORD *)(v14 + 48), *(void **)(v14 + 56));
    swift_bridgeObjectRelease(v13);
    if (!v15 || v15 == 1)
      return;
    goto LABEL_10;
  }
  __break(1u);
LABEL_10:
  if (qword_10063D2C8 != -1)
    swift_once(&qword_10063D2C8, sub_100054078);
  v16 = sub_100012DC4(v2, (uint64_t)qword_10063F898);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v16, v2);
  v17 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  v18 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1002EB23C((uint64_t)"Unexpected item", 15, 2uLL, v17, v18);
  __break(1u);
}

void sub_1000570C8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BYTE v22[40];
  _BYTE v23[40];
  __int128 v24;
  uint64_t v25;
  _BYTE v26[8];
  uint64_t v27;
  _BYTE v28[8];
  uint64_t v29;
  id v30[2];
  __int128 v31;

  v2 = (_QWORD *)type metadata accessor for Logger(0);
  v3 = *(v2 - 1);
  v4 = __chkstk_darwin(v2);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = __chkstk_darwin(v4);
  v9 = &v22[-v8 - 8];
  v10 = IndexPath.section.getter(v7);
  sub_100054560(v10, (uint64_t)v22);
  v11 = sub_100056B1C((uint64_t)v22, (uint64_t)v28);
  if (v29)
  {
    if (qword_10063D2C8 != -1)
      swift_once(&qword_10063D2C8, sub_100054078);
    v15 = sub_100012DC4((uint64_t)v2, (uint64_t)qword_10063F898);
    (*(void (**)(_BYTE *, uint64_t, _QWORD *))(v3 + 16))(v6, v15, v2);
    v2 = _swiftEmptyArrayStorage;
    v16 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    v17 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    sub_1002EB23C((uint64_t)"Attempted to move list from non-member section in group", 55, 2uLL, v16, v17);
    __break(1u);
  }
  else
  {
    v12 = IndexPath.section.getter(v11);
    sub_100054560(v12, (uint64_t)v23);
    sub_100056B1C((uint64_t)v23, (uint64_t)v26);
    if (!v27)
    {
      sub_100054678(a1, &v24);
      v14 = IndexPath.row.getter(v13);
      sub_1003F44A0(&v24, v14);
      v31 = v24;
      sub_100056AB8((uint64_t)&v31);
      sub_100056AE0((uint64_t)&v25, (uint64_t)v30);
      sub_100037F50(v30);
      return;
    }
  }
  if (qword_10063D2C8 != -1)
    swift_once(&qword_10063D2C8, sub_100054078);
  v18 = sub_100012DC4((uint64_t)v2, (uint64_t)qword_10063F898);
  (*(void (**)(_BYTE *, uint64_t, _QWORD *))(v3 + 16))(v9, v18, v2);
  v19 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  v20 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1002EB23C((uint64_t)"Attempted to move list to non-member section in group", 53, 2uLL, v19, v20);
  __break(1u);
}

uint64_t initializeBufferWithCopyOfBuffer for TTRIGroupMembershipViewController.Argument(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  void *v4;
  id v5;

  v3 = *a2;
  *(_OWORD *)a1 = *a2;
  v4 = (void *)*((_QWORD *)a2 + 2);
  *(_QWORD *)(a1 + 16) = v4;
  swift_unknownObjectRetain(v3);
  v5 = v4;
  return a1;
}

void destroy for TTRIGroupMembershipViewController.Argument(uint64_t a1)
{
  swift_unknownObjectRelease(*(_QWORD *)a1);

}

uint64_t *assignWithCopy for TTRIGroupMembershipViewController.Argument(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *a2;
  v5 = a2[1];
  v6 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v4);
  swift_unknownObjectRelease(v6);
  a1[1] = v5;
  v7 = (void *)a2[2];
  v8 = (void *)a1[2];
  a1[2] = (uint64_t)v7;
  v9 = v7;

  return a1;
}

__n128 initializeWithTake for TTRIGroupMembershipViewController.Argument(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

_QWORD *assignWithTake for TTRIGroupMembershipViewController.Argument(_QWORD *a1, uint64_t a2)
{
  void *v4;

  swift_unknownObjectRelease(*a1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = (void *)a1[2];
  a1[2] = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIGroupMembershipViewController.Argument(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIGroupMembershipViewController.Argument(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIGroupMembershipViewController.Argument()
{
  return &type metadata for TTRIGroupMembershipViewController.Argument;
}

uint64_t sub_1000574D8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for TTRIWhatsNewRouter()
{
  return objc_opt_self(_TtC9Reminders18TTRIWhatsNewRouter);
}

uint64_t sub_10005751C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10063F9B0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10063F9B0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t type metadata accessor for TTRIListDetailContainerRouter()
{
  return objc_opt_self(_TtC9Reminders29TTRIListDetailContainerRouter);
}

uint64_t sub_1000575CC()
{
  uint64_t v0;

  return swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource));
}

uint64_t sub_1000575DC()
{
  uint64_t v0;

  v0 = sub_10014866C();
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10005761C()
{
  return type metadata accessor for TTRIShowGroupPresenter(0);
}

uint64_t type metadata accessor for TTRIShowGroupPresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_10063FA98;
  if (!qword_10063FA98)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIShowGroupPresenter);
  return result;
}

uint64_t sub_100057660(uint64_t a1)
{
  void *v2;

  v2 = &unk_100520CB8;
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 2296);
}

ValueMetadata *type metadata accessor for TTRShowRemindersInListDragAndDropREMListTarget()
{
  return &type metadata for TTRShowRemindersInListDragAndDropREMListTarget;
}

id sub_1000576B0()
{
  id *v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(*v0, "account");
  v2 = objc_msgSend(v1, "capabilities");

  v3 = objc_msgSend(v2, "supportsSubtasks");
  return v3;
}

id sub_10005771C()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void *sub_10005774C(void *a1)
{
  id v2;

  v2 = a1;
  return a1;
}

BOOL sub_10005777C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  type metadata accessor for TTRListEditor(0);
  return (static TTRListEditor.actualOperation(forChangingParentListOf:to:)(a1, v3) & 0xFE) == 4;
}

BOOL sub_1000577C4(uint64_t a1, void *a2)
{
  void **v2;
  void *v5;
  id v6;
  id v7;
  id v8;
  char v9;

  v5 = *v2;
  sub_10005789C();
  v6 = objc_msgSend(a2, "list");
  v7 = objc_msgSend(v6, "objectID");

  v8 = objc_msgSend(v5, "objectID");
  v9 = static NSObject.== infix(_:_:)(v7, v8);

  if ((v9 & 1) == 0)
    return 0;
  type metadata accessor for TTRListEditor(0);
  return (static TTRListEditor.actualOperation(forChangingParentListOf:to:)(a1, v5) & 0xFE) == 4;
}

unint64_t sub_10005789C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100649E10;
  if (!qword_100649E10)
  {
    v1 = objc_opt_self(NSObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100649E10);
  }
  return result;
}

uint64_t sub_1000578D8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  id v24;

  v1 = *(void **)(v0 + 32);
  v24 = 0;
  v2 = objc_msgSend(v1, "fetchAccountsWithError:", &v24);
  v3 = v24;
  if (v2)
  {
    v4 = v2;
    v5 = sub_100005ED8(0, (unint64_t *)&unk_1006404A0, REMAccount_ptr);
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);
    v7 = v3;

  }
  else
  {
    v8 = v24;
    v9 = _convertNSErrorToError(_:)(v3);

    swift_willThrow(v10);
    if (qword_10063D2D8 != -1)
      swift_once(&qword_10063D2D8, sub_10000902C);
    v11 = type metadata accessor for Logger(0);
    sub_100012DC4(v11, (uint64_t)qword_1006403C8);
    swift_errorRetain(v9);
    v12 = swift_errorRetain(v9);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(12, -1);
      v16 = (void *)swift_slowAlloc(32, -1);
      v24 = v16;
      *(_DWORD *)v15 = 136446210;
      v22 = v9;
      swift_errorRetain(v9);
      v17 = sub_10002A750((uint64_t *)&unk_100649C60);
      v18 = String.init<A>(describing:)(&v22, v17);
      v20 = v19;
      v22 = sub_100027E40(v18, v19, (uint64_t *)&v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v15 + 4, v15 + 12);
      swift_bridgeObjectRelease(v20);
      swift_errorRelease(v9);
      swift_errorRelease(v9);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Error fetching accounts in root interactor {error: %{public}s}", v15, 0xCu);
      swift_arrayDestroy(v16, 1, &type metadata for Any[8]);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);

      swift_errorRelease(v9);
    }
    else
    {
      swift_errorRelease(v9);
      swift_errorRelease(v9);
      swift_errorRelease(v9);

    }
    return 0;
  }
  return v6;
}

uint64_t sub_100057B64()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);

  return swift_deallocClassInstance(v0, 49, 7);
}

id sub_100057B98()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 32);
}

id sub_100057BA4()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 40);
}

NSObject *sub_100057BD0(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;
  id v7;
  NSObject *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  id v14;
  void *v15;
  NSObject *v16;
  uint64_t v17;
  NSObject *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  NSObject **v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  const char *v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  os_log_type_t v34;
  uint8_t *v35;
  NSObject *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  NSObject **v47;
  NSObject *v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  NSObject **v58;
  NSObject *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  os_log_type_t v72;
  uint8_t *v73;
  NSObject **v74;
  NSObject *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  uint64_t v80;

  if (!a1)
  {
    if (qword_10063D2D8 == -1)
    {
LABEL_21:
      v25 = type metadata accessor for Logger(0);
      v26 = sub_100012DC4(v25, (uint64_t)qword_1006403C8);
      v5 = Logger.logObject.getter(v26);
      v27 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v5, v27))
        goto LABEL_58;
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      v29 = "Nil accounts. Returning nil postWelcomeScreen list";
LABEL_57:
      _os_log_impl((void *)&_mh_execute_header, v5, v27, v29, v28, 2u);
      swift_slowDealloc(v28, -1, -1);
      goto LABEL_58;
    }
LABEL_64:
    swift_once(&qword_10063D2D8, sub_10000902C);
    goto LABEL_21;
  }
  v2 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v3)
      goto LABEL_4;
LABEL_53:
    swift_bridgeObjectRelease(a1);
    if (qword_10063D2D8 != -1)
      swift_once(&qword_10063D2D8, sub_10000902C);
    v62 = type metadata accessor for Logger(0);
    v63 = sub_100012DC4(v62, (uint64_t)qword_1006403C8);
    v5 = Logger.logObject.getter(v63);
    v27 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v5, v27))
      goto LABEL_58;
    v28 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v28 = 0;
    v29 = "No Account. Returning nil postWelcomeScreen list";
    goto LABEL_57;
  }
  if (a1 < 0)
    v61 = a1;
  else
    v61 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  if (!_CocoaArrayWrapper.endIndex.getter(v61))
    goto LABEL_53;
LABEL_4:
  if ((a1 & 0xC000000000000001) == 0)
  {
    v4 = a1 & 0xFFFFFFFFFFFFFF8;
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      v5 = *(id *)(a1 + 32);
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_64;
  }
  v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  if (!v2)
  {
    v4 = a1 & 0xFFFFFFFFFFFFFF8;
LABEL_7:
    v6 = *(NSObject **)(v4 + 16);
    if (v6 == 1)
      goto LABEL_8;
LABEL_69:
    if (qword_10063D2D8 != -1)
      swift_once(&qword_10063D2D8, sub_10000902C);
    v66 = type metadata accessor for Logger(0);
    sub_100012DC4(v66, (uint64_t)qword_1006403C8);
    v67 = swift_bridgeObjectRetain(a1);
    v44 = Logger.logObject.getter(v67);
    v68 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v44, v68))
    {

      v50 = a1;
      goto LABEL_75;
    }
    v69 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v69 = 134217984;
    swift_bridgeObjectRelease(a1);
    v79 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80, v69 + 4, v69 + 12);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v44, v68, "Store has more than 1 account. Returning nil postWelcomeScreen {accounts.count: %ld}", v69, 0xCu);
    swift_slowDealloc(v69, -1, -1);

LABEL_73:
    return 0;
  }
  if (a1 < 0)
    v65 = a1;
  else
    v65 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v6 = _CocoaArrayWrapper.endIndex.getter(v65);
  swift_bridgeObjectRelease(a1);
  if (v6 != 1)
    goto LABEL_69;
LABEL_8:
  swift_bridgeObjectRelease(a1);
  v79 = 0;
  v7 = -[NSObject fetchListsWithError:](v5, "fetchListsWithError:", &v79);
  v8 = v79;
  if (!v7)
  {
    v30 = v79;
    v11 = _convertNSErrorToError(_:)(v8);

    swift_willThrow(v31);
    if (qword_10063D2D8 == -1)
    {
LABEL_24:
      v32 = type metadata accessor for Logger(0);
      sub_100012DC4(v32, (uint64_t)qword_1006403C8);
      swift_errorRetain(v11);
      v33 = swift_errorRetain(v11);
      v5 = Logger.logObject.getter(v33);
      v34 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v5, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc(12, -1);
        v36 = swift_slowAlloc(32, -1);
        v79 = v36;
        *(_DWORD *)v35 = 136446210;
        v77 = v11;
        swift_errorRetain(v11);
        v37 = sub_10002A750((uint64_t *)&unk_100649C60);
        v38 = String.init<A>(describing:)(&v77, v37);
        v40 = v39;
        v77 = sub_100027E40(v38, v39, (uint64_t *)&v79);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78, v35 + 4, v35 + 12);
        swift_bridgeObjectRelease(v40);
        swift_errorRelease(v11);
        swift_errorRelease(v11);
        _os_log_impl((void *)&_mh_execute_header, v5, v34, "Failed to fetchPostWelcomeScreenNewReminderList {error: %{public}s}", v35, 0xCu);
        swift_arrayDestroy(v36, 1, &type metadata for Any[8]);
        swift_slowDealloc(v36, -1, -1);
        swift_slowDealloc(v35, -1, -1);

        swift_errorRelease(v11);
        return 0;
      }
      swift_errorRelease(v11);
      swift_errorRelease(v11);
      swift_errorRelease(v11);
LABEL_58:

      return 0;
    }
LABEL_87:
    swift_once(&qword_10063D2D8, sub_10000902C);
    goto LABEL_24;
  }
  v9 = v7;
  v10 = sub_100005ED8(0, (unint64_t *)&qword_100640498, REMList_ptr);
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);
  v12 = v8;

  if (!((unint64_t)v11 >> 62))
  {
    v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v11);
    if (v13)
      goto LABEL_11;
LABEL_80:
    swift_bridgeObjectRelease_n(v11, 2);
    if (qword_10063D2D8 != -1)
      swift_once(&qword_10063D2D8, sub_10000902C);
    v71 = type metadata accessor for Logger(0);
    sub_100012DC4(v71, (uint64_t)qword_1006403C8);
    v43 = v5;
    v5 = Logger.logObject.getter(v43);
    v72 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v72))
    {
      v73 = (uint8_t *)swift_slowAlloc(12, -1);
      v74 = (NSObject **)swift_slowAlloc(8, -1);
      *(_DWORD *)v73 = 138543362;
      v79 = v43;
      v75 = v43;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80, v73 + 4, v73 + 12);
      *v74 = v43;

      _os_log_impl((void *)&_mh_execute_header, v5, v72, "Account has no lists. Returning nil postWelcomeScreen list {account: %{public}@}", v73, 0xCu);
      v76 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v74, 1, v76);
      swift_slowDealloc(v74, -1, -1);
      swift_slowDealloc(v73, -1, -1);

      goto LABEL_58;
    }
LABEL_84:

    return 0;
  }
  if (v11 < 0)
    v70 = v11;
  else
    v70 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v11);
  if (!_CocoaArrayWrapper.endIndex.getter(v70))
    goto LABEL_80;
LABEL_11:
  if ((v11 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v14 = *(id *)(v11 + 32);
      goto LABEL_14;
    }
    __break(1u);
    goto LABEL_87;
  }
  v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v11);
LABEL_14:
  v15 = v14;
  swift_bridgeObjectRelease(v11);
  if ((unint64_t)v11 >> 62)
  {
    if (v11 < 0)
      v41 = v11;
    else
      v41 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v11);
    v16 = _CocoaArrayWrapper.endIndex.getter(v41);
    swift_bridgeObjectRelease(v11);
    if (v16 != 1)
    {
LABEL_16:
      if (qword_10063D2D8 != -1)
        swift_once(&qword_10063D2D8, sub_10000902C);
      v17 = type metadata accessor for Logger(0);
      sub_100012DC4(v17, (uint64_t)qword_1006403C8);
      v18 = v5;
      swift_bridgeObjectRetain(v11);
      v19 = v18;
      v5 = Logger.logObject.getter(v19);
      v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v5, v20))
      {
        v21 = swift_slowAlloc(22, -1);
        v22 = (NSObject **)swift_slowAlloc(8, -1);
        *(_DWORD *)v21 = 134218242;
        swift_bridgeObjectRelease(v11);
        v79 = v16;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80, v21 + 4, v21 + 12);
        swift_bridgeObjectRelease(v11);
        *(_WORD *)(v21 + 12) = 2114;
        v79 = v19;
        v23 = v19;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80, v21 + 14, v21 + 22);
        *v22 = v19;

        _os_log_impl((void *)&_mh_execute_header, v5, v20, "Account has more than 1 list. Returning nil postWelcomeScreen list {lists.count: %ld, account: %{public}@}", (uint8_t *)v21, 0x16u);
        v24 = sub_10002A750(&qword_100642D60);
        swift_arrayDestroy(v22, 1, v24);
        swift_slowDealloc(v22, -1, -1);
        swift_slowDealloc(v21, -1, -1);

        goto LABEL_58;
      }

      v50 = v11;
LABEL_75:
      swift_bridgeObjectRelease_n(v50, 2);
      return 0;
    }
  }
  else
  {
    v16 = *(NSObject **)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v16 != 1)
      goto LABEL_16;
  }
  swift_bridgeObjectRelease(v11);
  if ((objc_msgSend(v15, "isGroup") & 1) != 0)
  {
    if (qword_10063D2D8 != -1)
      swift_once(&qword_10063D2D8, sub_10000902C);
    v42 = type metadata accessor for Logger(0);
    sub_100012DC4(v42, (uint64_t)qword_1006403C8);
    v43 = v15;
    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc(12, -1);
      v47 = (NSObject **)swift_slowAlloc(8, -1);
      *(_DWORD *)v46 = 138543362;
      v79 = v43;
      v48 = v43;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80, v46 + 4, v46 + 12);
      *v47 = v43;

      v49 = "The list is a group. Returning nil postWelcomeScreen list {list: %{public}@}";
LABEL_42:
      _os_log_impl((void *)&_mh_execute_header, v44, v45, v49, v46, 0xCu);
      v52 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v47, 1, v52);
      swift_slowDealloc(v47, -1, -1);
      swift_slowDealloc(v46, -1, -1);

      goto LABEL_73;
    }
LABEL_43:

    goto LABEL_84;
  }
  if (objc_msgSend(v15, "sharingStatus"))
  {
    if (qword_10063D2D8 != -1)
      swift_once(&qword_10063D2D8, sub_10000902C);
    v51 = type metadata accessor for Logger(0);
    sub_100012DC4(v51, (uint64_t)qword_1006403C8);
    v43 = v15;
    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc(12, -1);
      v47 = (NSObject **)swift_slowAlloc(8, -1);
      *(_DWORD *)v46 = 138543362;
      v79 = v43;
      v48 = v43;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80, v46 + 4, v46 + 12);
      *v47 = v43;

      v49 = "The list is shared. Returning nil postWelcomeScreen list {list: %{public}@}";
      goto LABEL_42;
    }
    goto LABEL_43;
  }
  if (qword_10063D2D8 != -1)
    swift_once(&qword_10063D2D8, sub_10000902C);
  v53 = type metadata accessor for Logger(0);
  sub_100012DC4(v53, (uint64_t)qword_1006403C8);
  v54 = v15;
  v55 = Logger.logObject.getter(v54);
  v56 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v55, v56))
  {
    v57 = (uint8_t *)swift_slowAlloc(12, -1);
    v58 = (NSObject **)swift_slowAlloc(8, -1);
    *(_DWORD *)v57 = 138543362;
    v79 = v54;
    v59 = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80, v57 + 4, v57 + 12);
    *v58 = v54;

    _os_log_impl((void *)&_mh_execute_header, v55, v56, "Returning postWelcomeScreen list {list: %{public}@}", v57, 0xCu);
    v60 = sub_10002A750(&qword_100642D60);
    swift_arrayDestroy(v58, 1, v60);
    swift_slowDealloc(v58, -1, -1);
    swift_slowDealloc(v57, -1, -1);

  }
  else
  {

  }
  return v54;
}

uint64_t sub_1000588E0(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD **v9;
  _QWORD *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t (*v14)@<X0>(uint64_t@<X8>);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22[24];
  objc_super v23;

  v3 = v2;
  v23.receiver = v2;
  v23.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v23, "prepareLayout");
  v4 = objc_msgSend(v2, "collectionView");
  if (v4 && (v5 = v4, v6 = objc_msgSend(v4, "dataSource"), v5, v6))
  {
    v7 = type metadata accessor for TTRBoardColumnDiffableDataSource(0);
    v8 = swift_dynamicCastClass(v6, v7);
    if (v8)
    {
      v9 = (_QWORD **)(v8 + direct field offset for TTRBoardColumnDiffableDataSource.clusters);
      swift_beginAccess(v8 + direct field offset for TTRBoardColumnDiffableDataSource.clusters, &v21, 0, 0);
      v10 = *v9;
      swift_bridgeObjectRetain(v10);
    }
    else
    {
      v10 = _swiftEmptyArrayStorage;
    }
    swift_unknownObjectRelease(v6);
  }
  else
  {
    v10 = _swiftEmptyArrayStorage;
  }
  v11 = objc_msgSend(v3, "collectionView");
  if (!v11)
    goto LABEL_13;
  v12 = v11;
  if ((objc_msgSend(v11, "hasActiveDrag") & 1) == 0 && !objc_msgSend(v12, "hasActiveDrop"))
  {

LABEL_13:
    v14 = 0;
    v13 = 0;
    goto LABEL_14;
  }
  v13 = swift_allocObject(&unk_1005ECA88, 24, 7);
  *(_QWORD *)(v13 + 16) = v12;
  v14 = sub_10005972C;
LABEL_14:
  v15 = type metadata accessor for TTRBoardColumnItemClusterAdjuster(0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v16 = TTRBoardColumnItemClusterAdjuster.init(presentationToDataSource:)(v14, v13);
  v17 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders35TTRIBoardColumnCollectionViewLayout_helper];
  sub_100053DE4((uint64_t)v14, v13);
  v18 = TTRBoardColumnItemClusterAdjuster.adjust(_:)(v10);
  swift_bridgeObjectRelease(v10);
  sub_1000381B8((uint64_t)v14, v13);
  swift_release(v16);
  swift_beginAccess(v17 + 16, v22, 1, 0);
  v19 = *(_QWORD *)(v17 + 16);
  *(_QWORD *)(v17 + 16) = v18;
  return swift_bridgeObjectRelease(v19);
}

uint64_t sub_100058AD4@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  Class isa;
  id v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v5 = objc_msgSend(a1, "dataSourceIndexPathForPresentationIndexPath:", isa);

  if (v5)
  {
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v5);

    v6 = type metadata accessor for IndexPath(0);
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a2;
    v9 = 0;
  }
  else
  {
    v6 = type metadata accessor for IndexPath(0);
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a2;
    v9 = 1;
  }
  return v7(v8, v9, 1, v6);
}

uint64_t sub_100058D50(void *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  id v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  objc_super v15;

  v15.receiver = a1;
  v15.super_class = (Class)swift_getObjectType(a1, a2);
  v10 = objc_msgSendSuper2(&v15, "layoutAttributesForElementsInRect:", a3, a4, a5, a6);
  if (!v10)
    return 0;
  v11 = v10;
  v12 = sub_1000596CC();
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

  return v13;
}

id sub_100059178(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  double v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  double v14;
  id v15;
  objc_super v17;
  _QWORD aBlock[5];
  uint64_t v19;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v6 = OBJC_IVAR____TtC9Reminders35TTRIBoardColumnCollectionViewLayout_helper;
  v7 = qword_10063D8A8;
  v8 = v2;
  if (v7 != -1)
    swift_once(&qword_10063D8A8, sub_1005016B0);
  v9 = *(double *)&qword_100673A58;
  if (qword_10063D8B0 != -1)
    swift_once(&qword_10063D8B0, sub_1005016C0);
  v10 = *(double *)&qword_100673A60;
  v11 = type metadata accessor for TTRBoardColumnCollectionViewLayoutHelper(0);
  swift_allocObject(v11, 40, 7);
  *(_QWORD *)&v8[v6] = TTRBoardColumnCollectionViewLayoutHelper.init(topLevelItemSpacing:subtaskSpacing:)(v9, v10);

  aBlock[4] = a1;
  v19 = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100369AA8;
  aBlock[3] = &unk_1005ECA50;
  v12 = _Block_copy(aBlock);
  v13 = v19;
  swift_retain(a2);
  *(_QWORD *)&v14 = swift_release(v13).n128_u64[0];
  v17.receiver = v8;
  v17.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v17, "initWithSectionProvider:", v12, v14);
  swift_release(a2);
  _Block_release(v12);
  return v15;
}

id sub_100059338(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  objc_class *ObjectType;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double v11;
  double v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  double v16;
  id v17;
  objc_super v19;
  _QWORD aBlock[5];
  uint64_t v21;

  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  v8 = OBJC_IVAR____TtC9Reminders35TTRIBoardColumnCollectionViewLayout_helper;
  v9 = qword_10063D8A8;
  v10 = v3;
  if (v9 != -1)
    swift_once(&qword_10063D8A8, sub_1005016B0);
  v11 = *(double *)&qword_100673A58;
  if (qword_10063D8B0 != -1)
    swift_once(&qword_10063D8B0, sub_1005016C0);
  v12 = *(double *)&qword_100673A60;
  v13 = type metadata accessor for TTRBoardColumnCollectionViewLayoutHelper(0);
  swift_allocObject(v13, 40, 7);
  *(_QWORD *)&v10[v8] = TTRBoardColumnCollectionViewLayoutHelper.init(topLevelItemSpacing:subtaskSpacing:)(v11, v12);

  aBlock[4] = a1;
  v21 = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100369AA8;
  aBlock[3] = &unk_1005ECA00;
  v14 = _Block_copy(aBlock);
  v15 = v21;
  swift_retain(a2);
  *(_QWORD *)&v16 = swift_release(v15).n128_u64[0];
  v19.receiver = v10;
  v19.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v19, "initWithSectionProvider:configuration:", v14, a3, v16);
  swift_release(a2);

  _Block_release(v14);
  return v17;
}

id sub_10005951C(void *a1, uint64_t a2)
{
  void *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  uint64_t v10;
  id v11;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = OBJC_IVAR____TtC9Reminders35TTRIBoardColumnCollectionViewLayout_helper;
  v6 = qword_10063D8A8;
  v7 = v2;
  if (v6 != -1)
    swift_once(&qword_10063D8A8, sub_1005016B0);
  v8 = *(double *)&qword_100673A58;
  if (qword_10063D8B0 != -1)
    swift_once(&qword_10063D8B0, sub_1005016C0);
  v9 = *(double *)&qword_100673A60;
  v10 = type metadata accessor for TTRBoardColumnCollectionViewLayoutHelper(0);
  swift_allocObject(v10, 40, 7);
  *(_QWORD *)&v7[v5] = TTRBoardColumnCollectionViewLayoutHelper.init(topLevelItemSpacing:subtaskSpacing:)(v8, v9);

  v13.receiver = v7;
  v13.super_class = ObjectType;
  v11 = objc_msgSendSuper2(&v13, "initWithCoder:", a1);

  return v11;
}

uint64_t type metadata accessor for TTRIBoardColumnCollectionViewLayout()
{
  return objc_opt_self(_TtC9Reminders35TTRIBoardColumnCollectionViewLayout);
}

uint64_t sub_100059678()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_10005969C()
{
  uint64_t v0;

  return (id)(*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1000596C4(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return sub_100058D50(*(void **)(v6 + 16), a6, a1, a2, a3, a4);
}

unint64_t sub_1000596CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100640540;
  if (!qword_100640540)
  {
    v1 = objc_opt_self(UICollectionViewLayoutAttributes);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100640540);
  }
  return result;
}

uint64_t sub_100059708()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10005972C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100058AD4(*(void **)(v1 + 16), a1);
}

uint64_t sub_100059748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100640550);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100640550);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_1000597D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  NSObject *oslog;

  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_100059924();
    v5 = static HLPHelpViewController.viewController(forShowing:)(a1);
    if (v5)
    {
      oslog = v5;
      objc_msgSend(v4, "presentViewController:animated:completion:");

      goto LABEL_9;
    }

  }
  if (qword_10063D2E0 != -1)
    swift_once(&qword_10063D2E0, sub_100059748);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100012DC4(v6, (uint64_t)qword_100640550);
  oslog = Logger.logObject.getter(v7);
  v8 = static os_log_type_t.fault.getter(oslog);
  if (os_log_type_enabled(oslog, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v8, "Attempted to open help with an empty view controller or HLPHelpViewController", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }
LABEL_9:

}

uint64_t type metadata accessor for TTRILearnMoreRouter()
{
  return objc_opt_self(_TtC9Reminders19TTRILearnMoreRouter);
}

unint64_t sub_100059924()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100640608;
  if (!qword_100640608)
  {
    v1 = objc_opt_self(HLPHelpViewController);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100640608);
  }
  return result;
}

id sub_100059960(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  objc_super v15;
  __int128 v16;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_tagsView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_tagsStackView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_whyTagsExampleBodyTextView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_usingTagsAndListsTogetherBodyTextView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_smartListsBodyTextView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_tagsSummaryTextView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_tagsCreatingTextView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_tagsAddingTextView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_tagsBrowserTextView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_tagsTapTextView], 0);
  v6 = &v3[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_learnMoreEllipsisPlaceholder];
  *(_QWORD *)v6 = 0xD000000000000024;
  *((_QWORD *)v6 + 1) = 0x80000001005606F0;
  v7 = &v3[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_howToPlaceholder];
  *(_QWORD *)v7 = 0xD000000000000017;
  *((_QWORD *)v7 + 1) = 0x8000000100560720;
  v8 = &v3[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_learnMoreTagsPlaceholder];
  *(_QWORD *)v8 = 0xD000000000000029;
  *((_QWORD *)v8 + 1) = 0x8000000100560740;
  v9 = v3;
  static TTRTypedController.currentArgument.getter(&v16, ObjectType, &off_1006406A8);
  v10 = v16;
  *(_OWORD *)&v9[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_presenter] = v16;
  v11 = v10;
  swift_unknownObjectRetain(v10);

  v15.receiver = v9;
  v15.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v15, "initWithCoder:", a1);

  v13 = v12;
  swift_unknownObjectRelease(v11);
  if (v13)

  return v13;
}

void sub_100059B70()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  char v39[64];
  uint64_t v40;

  v1 = v0;
  v2 = sub_10002A750(&qword_1006406D0);
  v3 = swift_allocObject(v2, 88, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100520EB0;
  *(_QWORD *)(v3 + 32) = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_tagsSummaryTextView]);
  *(_QWORD *)(v3 + 40) = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_tagsCreatingTextView]);
  *(_QWORD *)(v3 + 48) = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_tagsAddingTextView]);
  *(_QWORD *)(v3 + 56) = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_tagsBrowserTextView]);
  *(_QWORD *)(v3 + 64) = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_tagsTapTextView]);
  v4 = &v1[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_whyTagsExampleBodyTextView];
  *(_QWORD *)(v3 + 72) = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_whyTagsExampleBodyTextView]);
  v5 = &v1[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_usingTagsAndListsTogetherBodyTextView];
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_usingTagsAndListsTogetherBodyTextView]);
  *(_QWORD *)(v3 + 80) = Strong;
  specialized Array._endMutation()(Strong);
  v7 = v3;
  v8 = sub_10002A750(&qword_1006406D8);
  v9 = sub_100005ED8(0, (unint64_t *)&unk_1006406C0, UITextView_ptr);
  v10 = sub_10005AC64();
  v11 = Sequence.removingNils<A>()(v8, v9, v10);
  swift_bridgeObjectRelease(v7);
  sub_100234B68(v11);
  swift_bridgeObjectRelease(v11);
  sub_10005A2AC();
  v12 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v12 + 16) = xmmword_1005201E0;
  *(_QWORD *)(v12 + 32) = swift_unknownObjectWeakLoadStrong(v4);
  v13 = swift_unknownObjectWeakLoadStrong(v5);
  *(_QWORD *)(v12 + 40) = v13;
  v40 = v12;
  specialized Array._endMutation()(v13);
  v14 = v12;
  v15 = Sequence.removingNils<A>()(v8, v9, v10);
  swift_bridgeObjectRelease(v14);
  sub_100234B6C(v15);
  swift_bridgeObjectRelease(v15);
  v16 = sub_10002A750(&qword_1006406E8);
  inited = swift_initStackObject(v16, v39);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  v18 = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_smartListsBodyTextView]);
  if (!v18)
  {
    __break(1u);
    goto LABEL_25;
  }
  v20 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_learnMoreEllipsisPlaceholder];
  v19 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_learnMoreEllipsisPlaceholder + 8];
  *(_QWORD *)(inited + 32) = v18;
  *(_QWORD *)(inited + 40) = v20;
  *(_QWORD *)(inited + 48) = v19;
  *(_BYTE *)(inited + 56) = 1;
  swift_bridgeObjectRetain(v19);
  sub_10005A74C(inited, (uint64_t)v1);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for TextViewAction);
  v21 = objc_msgSend(v1, "view");
  if (!v21)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v22 = v21;
  v23 = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_tagsStackView]);
  if (!v23)
  {
LABEL_26:
    __break(1u);
    return;
  }
  v24 = v23;
  objc_msgSend(v23, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  objc_msgSend(v24, "setEdgesPreservingSuperviewLayoutMargins:", 10);
  objc_msgSend(v24, "setLayoutMarginsRelativeArrangement:", 1);
  if (objc_msgSend(v22, "effectiveUserInterfaceLayoutDirection") == (id)1)
  {
    v38 = v22;
    v25 = objc_msgSend(v24, "arrangedSubviews");
    v26 = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
    v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v26);

    if ((unint64_t)v27 >> 62)
      goto LABEL_18;
    v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v27);
    for (; v28; v28 = _CocoaArrayWrapper.endIndex.getter(v37))
    {
      v29 = 4;
      v30 = 0;
      if ((v27 & 0xC000000000000001) != 0)
      {
LABEL_8:
        v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v27);
        goto LABEL_10;
      }
      while (1)
      {
        v31 = *(id *)(v27 + 8 * v29);
LABEL_10:
        v32 = v31;
        v33 = v30 + 1;
        if (__OFADD__(v30, 1))
          break;
        v34 = objc_opt_self(UIImageView);
        v35 = (void *)swift_dynamicCastObjCClass(v32, v34);
        if (v35)
        {
          v36 = v35;
          if (objc_msgSend(v35, "contentMode") == (id)7)
            objc_msgSend(v36, "setContentMode:", 8);
        }

        if (v33 == v28)
          goto LABEL_22;
        v30 = ++v29 - 4;
        if ((v27 & 0xC000000000000001) != 0)
          goto LABEL_8;
      }
      __break(1u);
LABEL_18:
      if (v27 < 0)
        v37 = v27;
      else
        v37 = v27 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v27);
    }
LABEL_22:
    swift_bridgeObjectRelease_n(v27, 2);
    v22 = v38;
  }

}

void sub_10005A2AC()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  NSString v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  NSString v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_tagsSummaryTextView);
  if (!Strong)
  {
    __break(1u);
    goto LABEL_11;
  }
  v2 = (void *)Strong;
  static TTRLocalizableStrings.LearnMore.tagsSummary.getter();
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  objc_msgSend(v2, "setText:", v5);

  v6 = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_whyTagsExampleBodyTextView);
  if (!v6)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v7 = (void *)v6;
  static TTRLocalizableStrings.LearnMore.whyTags.getter();
  v9 = v8;
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  objc_msgSend(v7, "setText:", v10);

  v11 = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_tagsCreatingTextView);
  if (!v11)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v12 = (void *)v11;
  static TTRLocalizableStrings.LearnMore.tagsCreating.getter();
  v14 = v13;
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  objc_msgSend(v12, "setText:", v15);

  v16 = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_usingTagsAndListsTogetherBodyTextView);
  if (!v16)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v17 = (void *)v16;
  static TTRLocalizableStrings.LearnMore.usingTagsBody.getter();
  v19 = v18;
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  objc_msgSend(v17, "setText:", v20);

  v21 = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_tagsAddingTextView);
  if (!v21)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v22 = (void *)v21;
  static TTRLocalizableStrings.LearnMore.tagsAdding.getter();
  v24 = v23;
  v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v24);
  objc_msgSend(v22, "setText:", v25);

  v26 = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_tagsBrowserTextView);
  if (!v26)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v27 = (void *)v26;
  static TTRLocalizableStrings.LearnMore.tagsBrowser.getter();
  v29 = v28;
  v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v29);
  objc_msgSend(v27, "setText:", v30);

  v31 = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_tagsTapTextView);
  if (!v31)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v32 = (void *)v31;
  static TTRLocalizableStrings.LearnMore.tagsTap.getter();
  v34 = v33;
  v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v34);
  objc_msgSend(v32, "setText:", v35);

  v36 = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_smartListsBodyTextView);
  if (v36)
  {
    v37 = (void *)v36;
    static TTRLocalizableStrings.LearnMore.smartListsBody.getter();
    v39 = v38;
    v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v39);
    objc_msgSend(v37, "setText:", v40);

    return;
  }
LABEL_17:
  __break(1u);
}

uint64_t type metadata accessor for TTRILearnMoreTagsViewController()
{
  return objc_opt_self(_TtC9Reminders31TTRILearnMoreTagsViewController);
}

void sub_10005A74C(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  unsigned __int8 *i;
  uint64_t v6;
  uint64_t v7;
  int v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void *object;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v27;
  _QWORD v28[4];

  sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
  v3 = (void *)static UIColor.ttrLinkColor.getter();
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v27 = v3;
    swift_bridgeObjectRetain(a1);
    v25 = a1;
    for (i = (unsigned __int8 *)(a1 + 56); ; i += 32)
    {
      v6 = *((_QWORD *)i - 2);
      v7 = *((_QWORD *)i - 1);
      v8 = *i;
      v9 = *((id *)i - 3);
      swift_bridgeObjectRetain_n(v7, 2);
      v10 = v9;
      v11 = objc_msgSend(v10, "text");
      if (!v11)
        break;
      v12 = v11;
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v15 = v14;

      v28[2] = v13;
      v28[3] = v15;
      v28[0] = v6;
      v28[1] = v7;
      v16 = sub_10001D7FC();
      LOBYTE(v12) = StringProtocol.contains<A>(_:)(v28, &type metadata for String, &type metadata for String, v16, v16);
      swift_bridgeObjectRelease(v15);
      if ((v12 & 1) != 0)
      {
        if (v8)
        {
          if (v8 == 1)
          {
            v17 = 0x1000000000000051;
            v18 = 0x6F4D206E7261654CLL;
            v19 = 0xAD0000A680E26572;
            v20 = 0x80000001005605B0;
          }
          else
          {
            v17 = 0x100000000000005CLL;
            v18 = 0x1000000000000018;
            v20 = 0x8000000100560630;
            v19 = 0x8000000100560610;
          }
        }
        else
        {
          v18 = 0x41206F542D776F48;
          v19 = 0xEE00656C63697472;
          v17 = 0xD000000000000052;
          v20 = 0x8000000100560690;
        }
        object = TTRLocalizedString(_:comment:)(*(Swift::String *)&v18, *(Swift::String *)&v17)._object;
        objc_msgSend(v10, "setSelectable:", 1);
        objc_msgSend(v10, "_setInteractiveTextSelectionDisabled:", 1);
        objc_msgSend(v10, "setDelegate:", a2);
        v22 = objc_msgSend(v10, "attributedText");
        if (!v22)
          goto LABEL_17;
        v23 = v22;
        __chkstk_darwin(v22);
        v24 = (void *)NSAttributedString.withMutations(_:)(sub_10005ACB0);

        swift_bridgeObjectRelease(object);
        swift_bridgeObjectRelease(v7);
        objc_msgSend(v10, "setAttributedText:", v24);

        swift_bridgeObjectRelease(v7);
      }
      else
      {

        swift_bridgeObjectRelease_n(v7, 2);
      }
      if (!--v4)
      {

        swift_bridgeObjectRelease(v25);
        return;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {

  }
}

uint64_t sub_10005AA74(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v5;
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  NSObject *v12;
  NSObject *v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;

  v2 = v1;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_smartListsBodyTextView);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100005ED8(0, (unint64_t *)&unk_1006406C0, UITextView_ptr);
    v6 = a1;
    v7 = static NSObject.== infix(_:_:)(v6, v5);

    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRILearnMoreTagsViewController_presenter);
      if (qword_10063D3C0 != -1)
        swift_once(&qword_10063D3C0, sub_1000DE698);
      v9 = type metadata accessor for Logger(0);
      sub_100012DC4(v9, (uint64_t)qword_100645C40);
      v10 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
      sub_1000143B4((uint64_t)"Learn More open other learn more", 32, 2, v10);
      swift_bridgeObjectRelease(v10);
      v11 = (uint64_t *)*sub_10001413C((_QWORD *)(v8 + 48), *(_QWORD *)(v8 + 72));
      v12 = swift_unknownObjectWeakLoadStrong(v11 + 2);
      if (v12)
      {
        v13 = v12;
        sub_10043721C(0, v12, v11);
      }
      else
      {
        if (qword_10063D2E0 != -1)
          swift_once(&qword_10063D2E0, sub_100059748);
        v14 = sub_100012DC4(v9, (uint64_t)qword_100640550);
        v13 = Logger.logObject.getter(v14);
        v15 = static os_log_type_t.fault.getter(v13);
        if (os_log_type_enabled(v13, v15))
        {
          v16 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v16 = 0;
          _os_log_impl((void *)&_mh_execute_header, v13, v15, "Attempted to open learn more with empty navigation controller", v16, 2u);
          swift_slowDealloc(v16, -1, -1);
        }
      }

    }
  }
  return 0;
}

unint64_t sub_10005AC64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006406E0;
  if (!qword_1006406E0)
  {
    v1 = sub_10002CA5C(&qword_1006406D8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1006406E0);
  }
  return result;
}

id sub_10005ACB0(void *a1)
{
  uint64_t *v1;

  return sub_1000BAD20(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

__int128 *initializeBufferWithCopyOfBuffer for TTRILearnMoreTagsViewController.Argument(__int128 *a1, __int128 *a2)
{
  __int128 v3;

  v3 = *a2;
  *a1 = *a2;
  swift_unknownObjectRetain(v3);
  return a1;
}

uint64_t destroy for TTRILearnMoreTagsViewController.Argument(_QWORD *a1)
{
  return swift_unknownObjectRelease(*a1);
}

uint64_t *assignWithCopy for TTRILearnMoreTagsViewController.Argument(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v3);
  swift_unknownObjectRelease(v5);
  a1[1] = v4;
  return a1;
}

_QWORD *assignWithTake for TTRILearnMoreTagsViewController.Argument(_QWORD *a1, _OWORD *a2)
{
  swift_unknownObjectRelease(*a1);
  *(_OWORD *)a1 = *a2;
  return a1;
}

ValueMetadata *type metadata accessor for TTRILearnMoreTagsViewController.Argument()
{
  return &type metadata for TTRILearnMoreTagsViewController.Argument;
}

uint64_t destroy for TTRRemindersListNavigationItemOptions(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

uint64_t _s9Reminders37TTRRemindersListNavigationItemOptionsVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for TTRRemindersListNavigationItemOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for TTRRemindersListTreeViewModel.AuxiliaryData(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TTRRemindersListNavigationItemOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRRemindersListNavigationItemOptions(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRRemindersListNavigationItemOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersListNavigationItemOptions()
{
  return &type metadata for TTRRemindersListNavigationItemOptions;
}

uint64_t sub_10005AF30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100640738);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100640738);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_10005AFC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void *v8;
  int v9;
  int v10;
  int v11;
  id v12;

  v1 = v0;
  if (qword_10063D2E8 != -1)
    swift_once(&qword_10063D2E8, sub_10005AF30);
  v2 = type metadata accessor for Logger(0);
  sub_100012DC4(v2, (uint64_t)qword_100640738);
  v3 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Template Sharing show preview", 29, 2, v3);
  objc_msgSend(*(id *)(v0 + 152), "removeAllActions", swift_bridgeObjectRelease(v3).n128_f64[0]);
  v4 = sub_10001413C((_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 112));
  v5 = *(_QWORD *)(v0 + 80);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + 72), v6);
  v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5);
  if (*(_BYTE *)(v1 + 65))
    v9 = 256;
  else
    v9 = 0;
  v10 = v9 | *(unsigned __int8 *)(v1 + 64);
  if (*(_BYTE *)(v1 + 66))
    v11 = 0x10000;
  else
    v11 = 0;
  v12 = (id)TTRTemplateSharingViewModel.makePublicLinkConfiguration()(*(unsigned __int8 *)(v1 + 48), *(_QWORD *)(v1 + 56), v10 | v11);
  sub_100060098(v8, (uint64_t)v12, *(_BYTE *)(v1 + 48), v1, *v4);

}

uint64_t sub_10005B0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[3] = v5;
  v4[4] = static MainActor.shared.getter(v5);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v6);
  v4[5] = v7;
  v4[6] = v8;
  return swift_task_switch(sub_10005B164, v7, v8);
}

uint64_t sub_10005B164()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[3];
  v2 = sub_10001413C((_QWORD *)(v0[2] + 88), *(_QWORD *)(v0[2] + 112));
  v0[7] = *v2;
  v0[8] = static MainActor.shared.getter(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v3);
  v0[9] = v4;
  v0[10] = v5;
  return swift_task_switch(sub_10005B1D8, v4, v5);
}

uint64_t sub_10005B1D8()
{
  _QWORD *v0;
  uint64_t Strong;
  _QWORD *v2;

  Strong = swift_unknownObjectWeakLoadStrong(v0[7] + 64);
  v0[11] = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc(async function pointer to UIViewController.dismissAndWait(animated:)[1]);
    v0[12] = v2;
    *v2 = v0;
    v2[1] = sub_10005B260;
    return UIViewController.dismissAndWait(animated:)(1);
  }
  else
  {
    swift_release();
    return swift_task_switch(sub_10005B2E8, v0[5], v0[6]);
  }
}

uint64_t sub_10005B260()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 88);
  swift_task_dealloc(*(_QWORD *)(*v0 + 96));

  return swift_task_switch(sub_10005B2B0, *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
}

uint64_t sub_10005B2B0()
{
  uint64_t v0;

  swift_release();
  return swift_task_switch(sub_10005B2E8, *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_10005B2E8()
{
  uint64_t v0;

  swift_release();
  sub_10005B324(1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005B324(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _BYTE v25[24];
  _BYTE v26[24];

  v3 = sub_10002A750(&qword_100640878);
  v4 = __chkstk_darwin(v3);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v25[-v7];
  v9 = sub_10002A750((uint64_t *)&unk_100640798);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = v1 + OBJC_IVAR____TtC9Reminders28TTRITemplateSharingPresenter_continuationForPerformAction;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders28TTRITemplateSharingPresenter_continuationForPerformAction, v26, 0, 0);
  sub_10000735C(v13, (uint64_t)v8, &qword_100640878);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1000073A0((uint64_t)v8, &qword_100640878);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
  if (!a1)
  {
    if (qword_10063D2E8 != -1)
      swift_once(&qword_10063D2E8, sub_10005AF30);
    v20 = type metadata accessor for Logger(0);
    v21 = sub_100012DC4(v20, (uint64_t)qword_100640738);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "TTRITemplateSharingPresenter: action performed; resume continuationForPerformAction",
        v24,
        2u);
      swift_slowDealloc(v24, -1, -1);
    }

    v25[0] = 1;
    goto LABEL_15;
  }
  if (a1 == 1)
  {
    if (qword_10063D2E8 != -1)
      swift_once(&qword_10063D2E8, sub_10005AF30);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100012DC4(v15, (uint64_t)qword_100640738);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "TTRITemplateSharingPresenter: action canceled; resume continuationForPerformAction",
        v19,
        2u);
      swift_slowDealloc(v19, -1, -1);
    }

    v25[0] = 0;
LABEL_15:
    CheckedContinuation.resume(returning:)(v25, v9);
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v6, 1, 1, v9);
    swift_beginAccess(v13, v25, 33, 0);
    sub_10005FE50((uint64_t)v6, v13);
    return swift_endAccess(v25);
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_10005B65C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  _QWORD *v7;

  v4[2] = a4;
  v6 = type metadata accessor for MainActor(0);
  v4[3] = v6;
  v4[4] = static MainActor.shared.getter(v6);
  v7 = (_QWORD *)swift_task_alloc(dword_100640874);
  v4[5] = v7;
  *v7 = v4;
  v7[1] = sub_10005B6C4;
  return sub_10005B77C(a4);
}

uint64_t sub_10005B6C4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_BYTE *)(*(_QWORD *)v1 + 48) = a1;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor, v4);
  return swift_task_switch(sub_10005B73C, v5, v6);
}

uint64_t sub_10005B73C()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 48);
  swift_release();
  sub_10005B324(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005B77C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v1[2] = a1;
  v2 = type metadata accessor for URL(0);
  v1[3] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[4] = v3;
  v1[5] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_10002A750((uint64_t *)&unk_100640EE0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[6] = swift_task_alloc(v4);
  v1[7] = swift_task_alloc(v4);
  v1[8] = swift_task_alloc(v4);
  v5 = type metadata accessor for MainActor(0);
  v1[9] = static MainActor.shared.getter(v5);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v6);
  v1[10] = v7;
  v1[11] = v8;
  return swift_task_switch(sub_10005B850, v7, v8);
}

uint64_t sub_10005B850()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t (*v19)(char);
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;

  v1 = v0[2];
  v0[12] = *(_QWORD *)(v1 + 128);
  if (*(_BYTE *)(v1 + 65))
    v2 = 256;
  else
    v2 = 0;
  v3 = v2 | *(unsigned __int8 *)(v1 + 64);
  if (*(_BYTE *)(v1 + 66))
    v4 = 0x10000;
  else
    v4 = 0;
  v5 = TTRTemplateSharingPresenterCapability.alertNeededForCommittingLink(viewModel:)(*(unsigned __int8 *)(v1 + 48), *(_QWORD *)(v1 + 56), v3 | v4);
  v0[13] = v5;
  if (v5)
  {
    if (v5 == 1)
    {
      v7 = v0[8];
      v8 = v0[3];
      v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[4] + 56);
      v0[21] = v9;
      v9(v7, 1, 1, v8);
      v10 = (_QWORD *)swift_task_alloc(dword_10064088C);
      v0[22] = v10;
      *v10 = v0;
      v10[1] = sub_10005BC8C;
      return sub_10005C318(v0[7]);
    }
    v0[14] = v6;
    v12 = static TTRLocalizableStrings.Templates.PublicTemplateIncludePropertiesAlert.title.getter();
    v14 = v20;
    v0[15] = v20;
    if (*(_BYTE *)(v1 + 65))
      v21 = 256;
    else
      v21 = 0;
    v22 = v21 | *(unsigned __int8 *)(v1 + 64);
    if (*(_BYTE *)(v1 + 66))
      v23 = 0x10000;
    else
      v23 = 0;
    v15 = TTRTemplateSharingViewModel.localizedMessageForIncludePropertiesAlert.getter(*(unsigned __int8 *)(v1 + 48), *(_QWORD *)(v1 + 56), v22 | v23);
    v17 = v24;
    v0[16] = v24;
    v18 = (_QWORD *)swift_task_alloc(dword_100640884);
    v0[17] = v18;
    v19 = sub_10005BA08;
  }
  else
  {
    v12 = static TTRLocalizableStrings.Templates.publicTemplateIncludeLocationsAlertTitle.getter();
    v14 = v13;
    v0[18] = v13;
    v15 = static TTRLocalizableStrings.Templates.publicTemplateIncludeLocationsAlertMessage.getter();
    v17 = v16;
    v0[19] = v16;
    v18 = (_QWORD *)swift_task_alloc(dword_100640884);
    v0[20] = v18;
    v19 = sub_10005BB54;
  }
  *v18 = v0;
  v18[1] = v19;
  return sub_10005C028(v12, v14, v15, v17, 0, 0);
}

uint64_t sub_10005BA08(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 128);
  v3 = *(_QWORD *)(*v1 + 136);
  v5 = *(_QWORD *)(*v1 + 120);
  *(_BYTE *)(*v1 + 200) = a1;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v5);
  return swift_task_switch(sub_10005BA7C, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_10005BA7C()
{
  uint64_t v0;
  char v1;
  void (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_BYTE *)(v0 + 200);
  v2 = *(void (**)(void))(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v2();
  sub_10005FEE0((uint64_t)v2, v3);
  if ((v1 & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 64);
    v5 = *(_QWORD *)(v0 + 24);
    v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 32) + 56);
    *(_QWORD *)(v0 + 168) = v6;
    v6(v4, 1, 1, v5);
    v7 = (_QWORD *)swift_task_alloc(dword_10064088C);
    *(_QWORD *)(v0 + 176) = v7;
    *v7 = v0;
    v7[1] = sub_10005BC8C;
    return sub_10005C318(*(_QWORD *)(v0 + 56));
  }
  else
  {
    swift_release();
    v9 = *(_QWORD *)(v0 + 56);
    v11 = *(_QWORD *)(v0 + 40);
    v10 = *(_QWORD *)(v0 + 48);
    swift_task_dealloc(*(_QWORD *)(v0 + 64));
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
}

uint64_t sub_10005BB54(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 152);
  v3 = *(_QWORD *)(*v1 + 160);
  v5 = *(_QWORD *)(*v1 + 144);
  *(_BYTE *)(*v1 + 201) = a1;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v5);
  return swift_task_switch(sub_10005BBC8, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_10005BBC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((*(_BYTE *)(v0 + 201) & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 64);
    v2 = *(_QWORD *)(v0 + 24);
    v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 32) + 56);
    *(_QWORD *)(v0 + 168) = v3;
    v3(v1, 1, 1, v2);
    v4 = (_QWORD *)swift_task_alloc(dword_10064088C);
    *(_QWORD *)(v0 + 176) = v4;
    *v4 = v0;
    v4[1] = sub_10005BC8C;
    return sub_10005C318(*(_QWORD *)(v0 + 56));
  }
  else
  {
    swift_release();
    v6 = *(_QWORD *)(v0 + 56);
    v8 = *(_QWORD *)(v0 + 40);
    v7 = *(_QWORD *)(v0 + 48);
    swift_task_dealloc(*(_QWORD *)(v0 + 64));
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
}

uint64_t sub_10005BC8C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10005BE54;
  else
    v4 = sub_10005BCEC;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_10005BCEC()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Class isa;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 168);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 24);
  swift_release();
  sub_1000073A0(v2, (uint64_t *)&unk_100640EE0);
  v1(v3, 0, 1, v4);
  sub_10005FE98(v3, v2);
  if (*(_BYTE *)(*(_QWORD *)(v0 + 16) + 160) == 1)
  {
    v5 = *(_QWORD *)(v0 + 48);
    v6 = *(_QWORD *)(v0 + 24);
    v7 = *(_QWORD *)(v0 + 32);
    sub_10000735C(*(_QWORD *)(v0 + 64), v5, (uint64_t *)&unk_100640EE0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_1000073A0(*(_QWORD *)(v0 + 48), (uint64_t *)&unk_100640EE0);
    }
    else
    {
      v8 = *(_QWORD *)(v0 + 40);
      v9 = *(_QWORD *)(v0 + 24);
      v10 = *(_QWORD *)(v0 + 32);
      v11 = *(_QWORD *)(v0 + 16);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 32))(v8, *(_QWORD *)(v0 + 48), v9);
      isa = TTRTemplateSharingPresenterCapability.templateLinkMetadataForShareSheet()().super.isa;
      sub_10001413C((_QWORD *)(v11 + 88), *(_QWORD *)(v11 + 112));
      sub_1001D63C4(v8, isa);

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
  }
  sub_1000073A0(*(_QWORD *)(v0 + 64), (uint64_t *)&unk_100640EE0);
  v13 = *(_QWORD *)(v0 + 56);
  v15 = *(_QWORD *)(v0 + 40);
  v14 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_10005BE54()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_100640894);
  *(_QWORD *)(v0 + 192) = v1;
  *v1 = v0;
  v1[1] = sub_10005BEA4;
  return sub_10005CA44(*(_QWORD *)(v0 + 184));
}

uint64_t sub_10005BEA4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 192));
  return swift_task_switch(sub_10005BEF0, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t sub_10005BEF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Class isa;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 184);
  swift_release();
  swift_errorRelease(v1);
  if (*(_BYTE *)(*(_QWORD *)(v0 + 16) + 160) == 1)
  {
    v2 = *(_QWORD *)(v0 + 48);
    v3 = *(_QWORD *)(v0 + 24);
    v4 = *(_QWORD *)(v0 + 32);
    sub_10000735C(*(_QWORD *)(v0 + 64), v2, (uint64_t *)&unk_100640EE0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    {
      sub_1000073A0(*(_QWORD *)(v0 + 48), (uint64_t *)&unk_100640EE0);
    }
    else
    {
      v5 = *(_QWORD *)(v0 + 40);
      v6 = *(_QWORD *)(v0 + 24);
      v7 = *(_QWORD *)(v0 + 32);
      v8 = *(_QWORD *)(v0 + 16);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 32))(v5, *(_QWORD *)(v0 + 48), v6);
      isa = TTRTemplateSharingPresenterCapability.templateLinkMetadataForShareSheet()().super.isa;
      sub_10001413C((_QWORD *)(v8 + 88), *(_QWORD *)(v8 + 112));
      sub_1001D63C4(v5, isa);

      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
  }
  sub_1000073A0(*(_QWORD *)(v0 + 64), (uint64_t *)&unk_100640EE0);
  v10 = *(_QWORD *)(v0 + 56);
  v12 = *(_QWORD *)(v0 + 40);
  v11 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_10005C028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v7[12] = a6;
  v7[13] = v6;
  v7[10] = a4;
  v7[11] = a5;
  v7[8] = a2;
  v7[9] = a3;
  v7[7] = a1;
  v8 = type metadata accessor for MainActor(0);
  v7[14] = static MainActor.shared.getter(v8);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor, v9);
  v7[15] = v10;
  v7[16] = v11;
  return swift_task_switch(sub_10005C0A0, v10, v11);
}

uint64_t sub_10005C0A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSString v3;
  NSString v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t (*v18)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRetain(v2);
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  if (v1)
  {
    v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    v4 = 0;
  }
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v7 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v3, v4, 1);
  *(_QWORD *)(v0 + 136) = v7;

  sub_100010634(v6 + 88, v0 + 16);
  sub_10001413C((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  v8 = sub_10002A750(&qword_100649EF0);
  v9 = swift_allocObject(v8, 96, 7);
  *(_QWORD *)(v0 + 144) = v9;
  *(_OWORD *)(v9 + 16) = xmmword_1005201E0;
  v10 = *(_QWORD *)(v0 + 96);
  if (v5)
  {
    v11 = *(_QWORD *)(v0 + 88);
    v12 = *(_QWORD *)(v0 + 96);
  }
  else
  {
    v11 = static TTRLocalizableStrings.Common.continueButton.getter();
  }
  *(_BYTE *)(v0 + 160) = 1;
  TTRIValueBasedAlertAction.init(title:style:value:)(v11, v12, 0, v0 + 160, &type metadata for Bool);
  v13 = swift_bridgeObjectRetain(v10);
  v14 = static TTRLocalizableStrings.Common.alertCancelButton.getter(v13);
  *(_BYTE *)(v0 + 161) = 0;
  TTRIValueBasedAlertAction.init(title:style:value:)(v14, v15, 1, v0 + 161, &type metadata for Bool);
  v18 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100640898 + dword_100640898);
  v16 = (_QWORD *)swift_task_alloc(unk_10064089C);
  *(_QWORD *)(v0 + 152) = v16;
  *v16 = v0;
  v16[1] = sub_10005C260;
  return v18((uint64_t)v7, v9);
}

uint64_t sub_10005C260(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 144);
  v3 = *(_QWORD *)(*v1 + 152);
  *(_BYTE *)(*v1 + 162) = a1;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v4);
  return swift_task_switch(sub_10005C2C0, *(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 128));
}

uint64_t sub_10005C2C0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(v0 + 162);
  v2 = *(_QWORD *)(v0 + 112);

  swift_release(v2);
  sub_100027F10((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v1 & 1);
}

uint64_t sub_10005C318(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v2[10] = a1;
  v2[11] = v1;
  v3 = sub_10002A750(&qword_1006408A0);
  v2[12] = v3;
  v4 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[13] = swift_task_alloc(v4);
  v2[14] = swift_task_alloc(v4);
  v5 = type metadata accessor for MainActor(0);
  v2[15] = v5;
  v2[16] = static MainActor.shared.getter(v5);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v6);
  v2[17] = v7;
  v2[18] = v8;
  return swift_task_switch(sub_10005C3C0, v7, v8);
}

uint64_t sub_10005C3C0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t updated;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  _QWORD *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(unsigned __int8 *)(v1 + 48);
  *(_BYTE *)(v0 + 272) = v2;
  if (v2 == 1)
  {
    updated = static TTRLocalizableStrings.Templates.publicTemplateUpdateLinkAlertTitle.getter();
    v5 = v4;
    *(_QWORD *)(v0 + 152) = v4;
    v6 = static TTRLocalizableStrings.Templates.publicTemplateUpdateLinkAlertMessage.getter();
    v8 = v7;
    *(_QWORD *)(v0 + 160) = v7;
    v9 = static TTRLocalizableStrings.Common.updateButton.getter();
    v11 = v10;
    *(_QWORD *)(v0 + 168) = v10;
    v12 = (_QWORD *)swift_task_alloc(dword_100640884);
    *(_QWORD *)(v0 + 176) = v12;
    *v12 = v0;
    v12[1] = sub_10005C4E8;
    return sub_10005C028(updated, v5, v6, v8, v9, v11);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 120);
    v15 = sub_10001413C((_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 112));
    *(_QWORD *)(v0 + 184) = *v15;
    *(_QWORD *)(v0 + 192) = static MainActor.shared.getter(v15);
    v17 = dispatch thunk of Actor.unownedExecutor.getter(v14, &protocol witness table for MainActor, v16);
    *(_QWORD *)(v0 + 200) = v17;
    *(_QWORD *)(v0 + 208) = v18;
    return swift_task_switch(sub_10005C648, v17, v18);
  }
}

uint64_t sub_10005C4E8(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 168);
  v3 = *(_QWORD *)(*v1 + 176);
  v6 = *(_QWORD *)(*v1 + 152);
  v5 = *(_QWORD *)(*v1 + 160);
  *(_BYTE *)(*v1 + 273) = a1;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);
  return swift_task_switch(sub_10005C564, *(_QWORD *)(v2 + 136), *(_QWORD *)(v2 + 144));
}

uint64_t sub_10005C564()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  id v7;
  uint64_t v8;

  if ((*(_BYTE *)(v0 + 273) & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 120);
    v2 = sub_10001413C((_QWORD *)(*(_QWORD *)(v0 + 88) + 88), *(_QWORD *)(*(_QWORD *)(v0 + 88) + 112));
    *(_QWORD *)(v0 + 184) = *v2;
    *(_QWORD *)(v0 + 192) = static MainActor.shared.getter(v2);
    v4 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v3);
    *(_QWORD *)(v0 + 200) = v4;
    *(_QWORD *)(v0 + 208) = v5;
    return swift_task_switch(sub_10005C648, v4, v5);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 128));
    v7 = objc_msgSend((id)objc_opt_self(REMError), "cancelledError");
    swift_willThrow(v7);
    v8 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 112));
    swift_task_dealloc(v8);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10005C648()
{
  _QWORD *v0;
  uint64_t Strong;
  _QWORD *v2;

  Strong = swift_unknownObjectWeakLoadStrong(v0[23] + 64);
  v0[27] = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to UIViewController.dismissAndWait(animated:)
                                    + 1));
    v0[28] = v2;
    *v2 = v0;
    v2[1] = sub_10005C6D0;
    return UIViewController.dismissAndWait(animated:)(1);
  }
  else
  {
    swift_release(v0[24]);
    return swift_task_switch(sub_10005C758, v0[17], v0[18]);
  }
}

uint64_t sub_10005C6D0()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 216);
  swift_task_dealloc(*(_QWORD *)(*v0 + 224));

  return swift_task_switch(sub_10005C720, *(_QWORD *)(v1 + 200), *(_QWORD *)(v1 + 208));
}

uint64_t sub_10005C720()
{
  _QWORD *v0;

  swift_release(v0[24]);
  return swift_task_switch(sub_10005C758, v0[17], v0[18]);
}

uint64_t sub_10005C758()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = *(_BYTE *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = swift_allocObject(&unk_1005ECCF0, 24, 7);
  swift_weakInit(v3 + 16, v2);
  v4 = swift_allocObject(&unk_1005ECD18, 25, 7);
  *(_QWORD *)(v4 + 16) = v3;
  *(_BYTE *)(v4 + 24) = (v1 & 1) == 0;
  v5 = swift_allocObject(&unk_1005ECCF0, 24, 7);
  swift_weakInit(v5 + 16, v2);
  v6 = type metadata accessor for TTRPotentiallyLongOperationPerformer(0);
  *(_QWORD *)(v0 + 232) = swift_initStackObject(v6, v0 + 16);
  *(_QWORD *)(v0 + 240) = TTRPotentiallyLongOperationPerformer.init(longOperationDurationThreshold:debugForceShowActivityUI:showActivityUI:hideActivityUI:)(0, sub_10005FF38, v4, &unk_1006408B0, v5, 2.0);
  if (*(_BYTE *)(v2 + 65))
    v7 = 256;
  else
    v7 = 0;
  v8 = v7 | *(unsigned __int8 *)(v2 + 64);
  if (*(_BYTE *)(v2 + 66))
    v9 = 0x10000;
  else
    v9 = 0;
  v10 = TTRTemplateSharingViewModel.makePublicLinkConfiguration()(*(unsigned __int8 *)(v2 + 48), *(_QWORD *)(v2 + 56), v8 | v9);
  *(_QWORD *)(v0 + 248) = v10;
  v11 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 256) = v11;
  *(_QWORD *)(v11 + 16) = v2;
  *(_QWORD *)(v11 + 24) = v10;
  v12 = (_QWORD *)swift_task_alloc(async function pointer to TTRPotentiallyLongOperationPerformer.perform<A>(_:)[1]);
  *(_QWORD *)(v0 + 264) = v12;
  *v12 = v0;
  v12[1] = sub_10005C8DC;
  return TTRPotentiallyLongOperationPerformer.perform<A>(_:)(*(_QWORD *)(v0 + 112), &unk_1006408C0, v11, *(_QWORD *)(v0 + 96));
}

uint64_t sub_10005C8DC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 256);
  swift_task_dealloc(*(_QWORD *)(*v0 + 264));
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10005C930, *(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 144));
}

uint64_t sub_10005C930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t EnumCaseMultiPayload;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 128));
  sub_10000735C(v2, v1, &qword_1006408A0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v1, v3);
  v5 = *(_QWORD *)(v0 + 240);
  v6 = *(void **)(v0 + 248);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 112);
  if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    swift_willThrow(EnumCaseMultiPayload);

    swift_release(v5);
    sub_1000073A0(v8, &qword_1006408A0);
    v7 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 112));
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 80);
    sub_1000073A0(*(_QWORD *)(v0 + 112), &qword_1006408A0);

    swift_release(v5);
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, v7, v10);
    swift_task_dealloc(v8);
  }
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005CA44(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v2[13] = a1;
  v2[14] = v1;
  v2[15] = *v1;
  v3 = type metadata accessor for MainActor(0);
  v2[16] = v3;
  v2[17] = static MainActor.shared.getter(v3);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor, v4);
  v2[18] = v5;
  v2[19] = v6;
  return swift_task_switch(sub_10005CABC, v5, v6);
}

uint64_t sub_10005CABC()
{
  uint64_t v0;
  _QWORD *v1;
  __n128 v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t MetatypeMetadata;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = (_QWORD *)(v0 + 104);
  swift_getErrorValue(*(_QWORD *)(v0 + 104), v0 + 64, v0 + 40);
  if ((Error.isREMError(withErrorCode:)(-1001, *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56)) & 1) != 0)
  {
    v2 = swift_release(*(_QWORD *)(v0 + 136));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
  }
  else
  {
    if (qword_10063D2E8 != -1)
      swift_once(&qword_10063D2E8, sub_10005AF30);
    v4 = *v1;
    v5 = type metadata accessor for Logger(0);
    sub_100012DC4(v5, (uint64_t)qword_100640738);
    swift_errorRetain(v4);
    v6 = swift_errorRetain(v4);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = *(_QWORD *)(v0 + 120);
      v10 = *(_QWORD *)(v0 + 104);
      v11 = swift_slowAlloc(22, -1);
      v27 = swift_slowAlloc(64, -1);
      v28 = v27;
      *(_DWORD *)v11 = 136446466;
      *(_QWORD *)(v0 + 88) = v9;
      MetatypeMetadata = swift_getMetatypeMetadata(v9);
      v13 = String.init<A>(describing:)(v0 + 88, MetatypeMetadata);
      v15 = v14;
      *(_QWORD *)(v0 + 72) = sub_100027E40(v13, v14, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80, v11 + 4, v11 + 12);
      swift_bridgeObjectRelease(v15);
      *(_WORD *)(v11 + 12) = 2082;
      swift_getErrorValue(v10, v0 + 80, v0 + 16);
      v16 = Error.rem_errorDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
      v18 = v17;
      *(_QWORD *)(v0 + 96) = sub_100027E40(v16, v17, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 104, v11 + 14, v11 + 22);
      swift_bridgeObjectRelease(v18);
      swift_errorRelease(v10);
      swift_errorRelease(v10);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "%{public}s: failed to create or update public link {error: %{public}s}", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy(v27, 2, &type metadata for Any[8]);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v11, -1, -1);
    }
    else
    {
      v19 = *v1;
      swift_errorRelease(*v1);
      swift_errorRelease(v19);
    }

    v20 = *(_QWORD *)(v0 + 128);
    *(_QWORD *)(v0 + 160) = static TTRLocalizableStrings.Templates.publicTemplateSharingErrorAlertTitle.getter();
    *(_QWORD *)(v0 + 168) = v21;
    v22 = static TTRLocalizableStrings.Templates.publicTemplateSharingRetryLaterErrorAlertMessage.getter();
    *(_QWORD *)(v0 + 176) = v22;
    *(_QWORD *)(v0 + 184) = v23;
    *(_QWORD *)(v0 + 192) = static MainActor.shared.getter(v22);
    v25 = dispatch thunk of Actor.unownedExecutor.getter(v20, &protocol witness table for MainActor, v24);
    *(_QWORD *)(v0 + 200) = v25;
    *(_QWORD *)(v0 + 208) = v26;
    return swift_task_switch(sub_10005CD90, v25, v26);
  }
}

uint64_t sub_10005CD90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(id, uint64_t);

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v1);
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v1);
  v6 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v4, v5, 1);
  *(_QWORD *)(v0 + 216) = v6;

  sub_10001413C((_QWORD *)(v3 + 88), *(_QWORD *)(v3 + 112));
  v7 = sub_10002A750(&qword_100649EF0);
  v8 = swift_allocObject(v7, 64, 7);
  *(_QWORD *)(v0 + 224) = v8;
  *(_OWORD *)(v8 + 16) = xmmword_100520250;
  v9 = static TTRLocalizableStrings.Common.alertOKButton.getter();
  *(_BYTE *)(v0 + 240) = 0;
  TTRIValueBasedAlertAction.init(title:style:value:)(v9, v10, 0, v0 + 240, &type metadata for Bool);
  v13 = (uint64_t (*)(id, uint64_t))((char *)&dword_100640898 + dword_100640898);
  v11 = (_QWORD *)swift_task_alloc(unk_10064089C);
  *(_QWORD *)(v0 + 232) = v11;
  *v11 = v0;
  v11[1] = sub_10005CEF0;
  return v13(v6, v8);
}

uint64_t sub_10005CEF0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 224);
  swift_task_dealloc(*(_QWORD *)(*v0 + 232));
  swift_bridgeObjectRelease(v2);
  return swift_task_switch(sub_10005CF44, *(_QWORD *)(v1 + 200), *(_QWORD *)(v1 + 208));
}

uint64_t sub_10005CF44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 168);

  swift_release(v2);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v3);
  return swift_task_switch(sub_10005CFA4, *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
}

uint64_t sub_10005CFA4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 136));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005CFD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[3] = v5;
  v4[4] = static MainActor.shared.getter(v5);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v6);
  v4[5] = v7;
  v4[6] = v8;
  return swift_task_switch(sub_10005D044, v7, v8);
}

uint64_t sub_10005D044()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[3];
  v2 = sub_10001413C((_QWORD *)(v0[2] + 88), *(_QWORD *)(v0[2] + 112));
  v0[7] = *v2;
  v0[8] = static MainActor.shared.getter(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v3);
  v0[9] = v4;
  v0[10] = v5;
  return swift_task_switch(sub_10005D0B8, v4, v5);
}

uint64_t sub_10005D0B8()
{
  _QWORD *v0;
  uint64_t Strong;
  _QWORD *v2;

  Strong = swift_unknownObjectWeakLoadStrong(v0[7] + 72);
  v0[11] = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc(async function pointer to UIViewController.dismissAndWait(animated:)[1]);
    v0[12] = v2;
    *v2 = v0;
    v2[1] = sub_10005D140;
    return UIViewController.dismissAndWait(animated:)(1);
  }
  else
  {
    swift_release();
    return swift_task_switch(sub_100060848, v0[5], v0[6]);
  }
}

uint64_t sub_10005D140()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 88);
  swift_task_dealloc(*(_QWORD *)(*v0 + 96));

  return swift_task_switch(sub_10005D190, *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
}

uint64_t sub_10005D190()
{
  _QWORD *v0;

  swift_release(v0[8]);
  return swift_task_switch(sub_100060848, v0[5], v0[6]);
}

uint64_t sub_10005D1C8(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *Strong;
  void *v13;
  id v14;
  _QWORD v15[5];
  _BYTE v16[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v16, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    sub_100010634(result + 88, (uint64_t)v15);
    swift_release(v5);
    v6 = sub_10001413C(v15, v15[3]);
    if ((a2 & 1) != 0)
      v7 = static TTRLocalizableStrings.Templates.publicTemplateCreating.getter();
    else
      v7 = static TTRLocalizableStrings.Templates.publicTemplateUpdating.getter();
    v9 = v7;
    v10 = v8;
    v11 = *v6;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(*v6 + 64);
    if (Strong)
    {
      v13 = Strong;
      v14 = objc_msgSend(Strong, "presentingViewController");

      if (v14)
      {
LABEL_9:
        sub_100375364(v9, v10, v13);
        swift_bridgeObjectRelease(v10);

        return sub_100027F10(v15);
      }

    }
    v13 = (void *)swift_unknownObjectWeakLoadStrong(v11 + 24);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_10005D2CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1[10] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[11] = v2;
  v1[12] = static MainActor.shared.getter(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor, v3);
  v1[13] = v4;
  v1[14] = v5;
  return swift_task_switch(sub_10005D33C, v4, v5);
}

uint64_t sub_10005D33C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v10;

  v1 = *(_QWORD *)(v0 + 80) + 16;
  swift_beginAccess(v1, v0 + 56, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(_QWORD *)(v0 + 88);
    sub_100010634(Strong + 88, v0 + 16);
    swift_release(v3);
    v5 = sub_10001413C((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    *(_QWORD *)(v0 + 120) = *v5;
    *(_QWORD *)(v0 + 128) = static MainActor.shared.getter(v5);
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v6);
    *(_QWORD *)(v0 + 136) = v7;
    *(_QWORD *)(v0 + 144) = v8;
    return swift_task_switch(sub_10005D41C, v7, v8);
  }
  else
  {
    v10 = swift_release(*(_QWORD *)(v0 + 96));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v10);
  }
}

uint64_t sub_10005D41C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 152) = *(_QWORD *)(*(_QWORD *)(v0 + 120) + 56);
  return swift_task_switch(sub_10005D43C, 0, 0);
}

uint64_t sub_10005D43C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(void **)(v0[19] + 16);
  v0[20] = v1;
  if (!v1)
    return swift_task_switch(sub_10005D55C, v0[17], v0[18]);
  v2 = async function pointer to UIViewController.dismissAndWait(animated:)[1];
  v1;
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[21] = v3;
  *v3 = v0;
  v3[1] = sub_10005D4C4;
  return UIViewController.dismissAndWait(animated:)(1);
}

uint64_t sub_10005D4C4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 168));
  return swift_task_switch(sub_10005D518, 0, 0);
}

uint64_t sub_10005D518()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 152);

  v2 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = 0;

  return swift_task_switch(sub_10005D55C, *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
}

uint64_t sub_10005D55C()
{
  _QWORD *v0;

  swift_release(v0[16]);
  return swift_task_switch(sub_100060840, v0[13], v0[14]);
}

uint64_t sub_10005D594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = type metadata accessor for URL(0);
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[6] = v5;
  v3[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v3[8] = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  v3[9] = v8;
  v3[10] = v9;
  return swift_task_switch(sub_10005D62C, v8, v9);
}

uint64_t sub_10005D62C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  int *v6;
  _QWORD *v7;
  int *v9;

  v3 = v2[3];
  v4 = *(_QWORD *)(v3 + 80);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 72), a2);
  v6 = *(int **)(v4 + 24);
  v9 = (int *)((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc(v6[1]);
  v2[11] = v7;
  *v7 = v2;
  v7[1] = sub_10005D6B0;
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))v9)(v2[7], v2[4], ObjectType, v4);
}

uint64_t sub_10005D6B0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 88);
  *(_QWORD *)(*v1 + 96) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10005D788;
  else
    v4 = sub_10005D710;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80));
}

uint64_t sub_10005D710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = swift_release(*(_QWORD *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 32))(v4, v1, v2, v5);
  v6 = sub_10002A750(&qword_1006408A0);
  swift_storeEnumTagMultiPayload(v4, v6, 0);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005D788()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 64));
  *v2 = v1;
  v3 = sub_10002A750(&qword_1006408A0);
  swift_storeEnumTagMultiPayload(v2, v3, 1);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005D7E8()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);
  sub_1000381C8(v0 + 32);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 72));
  sub_100027F10((_QWORD *)(v0 + 88));
  swift_release(*(_QWORD *)(v0 + 128));

  swift_release(*(_QWORD *)(v0 + 144));
  sub_1000073A0(v0 + OBJC_IVAR____TtC9Reminders28TTRITemplateSharingPresenter_continuationForPerformAction, &qword_100640878);
  return v0;
}

uint64_t sub_10005D854()
{
  uint64_t v0;

  sub_10005D7E8();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10005D878()
{
  return type metadata accessor for TTRITemplateSharingPresenter(0);
}

uint64_t type metadata accessor for TTRITemplateSharingPresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_100640780;
  if (!qword_100640780)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRITemplateSharingPresenter);
  return result;
}

void sub_10005D8BC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[11];

  v4[0] = &unk_100521050;
  v4[1] = &unk_100521050;
  v4[2] = &unk_100521068;
  v4[3] = &unk_100521080;
  v4[4] = &unk_100521098;
  v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[9] = &unk_1005210B0;
  sub_10005D97C(319);
  if (v3 <= 0x3F)
  {
    v4[10] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 11, v4, a1 + 80);
  }
}

void sub_10005D97C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100640790)
  {
    v2 = sub_10002CA5C((uint64_t *)&unk_100640798);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100640790);
  }
}

double sub_10005D9D4(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  _BYTE v28[24];

  v8 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v8);
  v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = sub_10002A750(&qword_100640878);
  __chkstk_darwin(v11);
  v13 = &v28[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = sub_10002A750((uint64_t *)&unk_100640798);
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 16))(v13, a1, v14);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  v16 = a2 + OBJC_IVAR____TtC9Reminders28TTRITemplateSharingPresenter_continuationForPerformAction;
  swift_beginAccess(a2 + OBJC_IVAR____TtC9Reminders28TTRITemplateSharingPresenter_continuationForPerformAction, v28, 33, 0);
  sub_10005FE50((uint64_t)v13, v16);
  swift_endAccess(v28);
  if (qword_10063D2E8 != -1)
    swift_once(&qword_10063D2E8, sub_10005AF30);
  v17 = type metadata accessor for Logger(0);
  v18 = sub_100012DC4(v17, (uint64_t)qword_100640738);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "TTRITemplateSharingPresenter: continuationForPerformAction is set", v21, 2u);
    swift_slowDealloc(v21, -1, -1);
  }

  *(_BYTE *)(a2 + 160) = a3 & 1;
  v22 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v10, 1, 1, v22);
  type metadata accessor for MainActor(0);
  v23 = swift_retain();
  v24 = static MainActor.shared.getter(v23);
  v25 = swift_allocObject(&unk_1005ECD40, 48, 7);
  *(_QWORD *)(v25 + 16) = v24;
  *(_QWORD *)(v25 + 24) = &protocol witness table for MainActor;
  *(_BYTE *)(v25 + 32) = a4;
  *(_QWORD *)(v25 + 40) = a2;
  sub_100148368((uint64_t)v10, (uint64_t)&unk_1006408D0, v25);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10005DC34(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v5 + 16) = a5;
  *(_BYTE *)(v5 + 64) = a4;
  v6 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 24) = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  *(_QWORD *)(v5 + 32) = v8;
  *(_QWORD *)(v5 + 40) = v9;
  return swift_task_switch(sub_10005DCA4, v8, v9);
}

uint64_t sub_10005DCA4()
{
  uint64_t v0;
  unsigned int v1;
  _QWORD *v2;
  char v4;
  _QWORD *v5;

  v1 = *(unsigned __int8 *)(v0 + 64);
  if (v1 >= 2)
  {
    if (v1 == 2)
    {
      swift_release(*(_QWORD *)(v0 + 24));
      v4 = sub_10005DE80();
      sub_10005B324(v4);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    else
    {
      v5 = (_QWORD *)swift_task_alloc(dword_1006408DC);
      *(_QWORD *)(v0 + 56) = v5;
      *v5 = v0;
      v5[1] = sub_10005DDEC;
      return sub_10005E274();
    }
  }
  else
  {
    v2 = (_QWORD *)swift_task_alloc(dword_1006408E4);
    *(_QWORD *)(v0 + 48) = v2;
    *v2 = v0;
    v2[1] = sub_10005DD58;
    return sub_10005EBE4();
  }
}

uint64_t sub_10005DD58(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 48);
  *(_BYTE *)(*v1 + 65) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_10005DDB0, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_10005DDB0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  sub_10005B324(*(_BYTE *)(v0 + 65));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005DDEC(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 56);
  *(_BYTE *)(*v1 + 66) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_10005DE44, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_10005DE44()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  sub_10005B324(*(_BYTE *)(v0 + 66));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005DE80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void *v18;
  int v19;
  id v20;
  id v21;
  uint64_t v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  Class isa;
  uint64_t result;
  char *v34;
  id v35;
  uint64_t v36;

  v1 = v0;
  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v34 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750((uint64_t *)&unk_100640EE0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v34 - v9;
  v11 = type metadata accessor for REMTemplate.PublicLinkStatus(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (id *)((char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(_QWORD *)(v0 + 80);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + 72), v16);
  v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(ObjectType, v15);
  REMTemplate.publicLinkStatus.getter();
  v19 = (*(uint64_t (**)(id *, uint64_t))(v12 + 88))(v14, v11);
  if (v19 == enum case for REMTemplate.PublicLinkStatus.created(_:))
  {
    (*(void (**)(id *, uint64_t))(v12 + 96))(v14, v11);
    v20 = *v14;
    v21 = objc_msgSend(*v14, "url");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v21);

    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v10, 0, 1, v2);
    sub_10000735C((uint64_t)v10, (uint64_t)v8, (uint64_t *)&unk_100640EE0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
    {
      sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100640EE0);
    }
    else
    {
      v31 = (uint64_t)v34;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v34, v8, v2);
      isa = TTRTemplateSharingPresenterCapability.templateLinkMetadataForShareSheet()().super.isa;
      sub_10001413C((_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 112));
      sub_1001D63C4(v31, isa);

      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v31, v2);
    }

    sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100640EE0);
  }
  else
  {
    if (v19 != enum case for REMTemplate.PublicLinkStatus.notRequested(_:)
      && v19 != enum case for REMTemplate.PublicLinkStatus.pendingCreation(_:))
    {
      result = _diagnoseUnexpectedEnumCase<A>(type:)(v11, v11);
      __break(1u);
      return result;
    }
    if (qword_10063D2E8 != -1)
      swift_once(&qword_10063D2E8, sub_10005AF30);
    v23 = type metadata accessor for Logger(0);
    sub_100012DC4(v23, (uint64_t)qword_100640738);
    v24 = v18;
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(12, -1);
      v28 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v27 = 138412290;
      v29 = objc_msgSend(v24, "objectID");
      v35 = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v27 + 4, v27 + 12);
      *v28 = v29;

      _os_log_impl((void *)&_mh_execute_header, v25, v26, "TTRITemplateSharingPresenter: unable to show share sheet; publicLinkURL is not available {templateID: %@}",
        v27,
        0xCu);
      v30 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v28, 1, v30);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);

    }
    else
    {

    }
  }
  return 0;
}

uint64_t sub_10005E274()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1[19] = v0;
  v1[20] = *v0;
  v2 = type metadata accessor for MainActor(0);
  v1[21] = v2;
  v1[22] = static MainActor.shared.getter(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor, v3);
  v1[23] = v4;
  v1[24] = v5;
  return swift_task_switch(sub_10005E2EC, v4, v5);
}

uint64_t sub_10005E2EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  NSString v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 152);
  static TTRLocalizableStrings.Templates.publicTemplateStopSharingAlertTitle.getter();
  v3 = v2;
  static TTRLocalizableStrings.Templates.publicTemplateStopSharingAlertMessage.getter();
  v5 = v4;
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  v8 = (void *)objc_opt_self(UIAlertController);
  *(_QWORD *)(v0 + 200) = v8;
  v9 = objc_msgSend(v8, "alertControllerWithTitle:message:preferredStyle:", v6, v7, 1);
  *(_QWORD *)(v0 + 208) = v9;

  sub_10001413C((_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 112));
  v10 = sub_10002A750(&qword_100649EF0);
  *(_QWORD *)(v0 + 216) = v10;
  v11 = swift_allocObject(v10, 96, 7);
  *(_QWORD *)(v0 + 224) = v11;
  *(_OWORD *)(v11 + 16) = xmmword_1005201E0;
  v12 = static TTRLocalizableStrings.Templates.publicTemplateStopSharingAlertStopSharingButton.getter();
  *(_BYTE *)(v0 + 113) = 1;
  TTRIValueBasedAlertAction.init(title:style:value:)(v12, v13, 2, v0 + 113, &type metadata for Bool);
  v15 = static TTRLocalizableStrings.Common.alertCancelButton.getter(v14);
  *(_BYTE *)(v0 + 114) = 0;
  TTRIValueBasedAlertAction.init(title:style:value:)(v15, v16, 1, v0 + 114, &type metadata for Bool);
  v19 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100640898 + dword_100640898);
  v17 = (_QWORD *)swift_task_alloc(unk_10064089C);
  *(_QWORD *)(v0 + 232) = v17;
  *v17 = v0;
  v17[1] = sub_10005E480;
  return v19((uint64_t)v9, v11);
}

uint64_t sub_10005E480(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 224);
  v3 = *(_QWORD *)(*v1 + 232);
  *(_BYTE *)(*v1 + 116) = a1;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v4);
  return swift_task_switch(sub_10005E4E0, *(_QWORD *)(v2 + 184), *(_QWORD *)(v2 + 192));
}

uint64_t sub_10005E4E0()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  if ((*(_BYTE *)(v0 + 116) & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 152);
    v5 = swift_allocObject(&unk_1005ECCF0, 24, 7);
    swift_weakInit(v5 + 16, v4);
    v6 = swift_allocObject(&unk_1005ECCF0, 24, 7);
    swift_weakInit(v6 + 16, v4);
    v7 = type metadata accessor for TTRPotentiallyLongOperationPerformer(0);
    *(_QWORD *)(v0 + 240) = swift_initStackObject(v7, v0 + 16);
    *(_QWORD *)(v0 + 248) = TTRPotentiallyLongOperationPerformer.init(longOperationDurationThreshold:debugForceShowActivityUI:showActivityUI:hideActivityUI:)(0, sub_100060740, v5, &unk_1006408F0, v6, 2.0);
    v8 = (_QWORD *)swift_task_alloc(async function pointer to TTRPotentiallyLongOperationPerformer.perform<A>(_:)[1]);
    *(_QWORD *)(v0 + 256) = v8;
    v9 = sub_10002A750(&qword_100640908);
    *v8 = v0;
    v8[1] = sub_10005E630;
    return TTRPotentiallyLongOperationPerformer.perform<A>(_:)(v0 + 104, &unk_100640900, *(_QWORD *)(v0 + 152), v9);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 176);

    v2 = swift_release(v1);
    return (*(uint64_t (**)(uint64_t, __n128))(v0 + 8))(1, v2);
  }
}

uint64_t sub_10005E630()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 256));
  return swift_task_switch(sub_10005E67C, *(_QWORD *)(v1 + 184), *(_QWORD *)(v1 + 192));
}

uint64_t sub_10005E67C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t MetatypeMetadata;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 264) = v1;
  if (*(_BYTE *)(v0 + 112) == 1)
  {
    swift_errorRetain(v1);
    if (qword_10063D2E8 != -1)
      swift_once(&qword_10063D2E8, sub_10005AF30);
    v2 = type metadata accessor for Logger(0);
    sub_100012DC4(v2, (uint64_t)qword_100640738);
    swift_errorRetain(v1);
    v3 = swift_errorRetain(v1);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = *(_QWORD *)(v0 + 160);
      v7 = swift_slowAlloc(22, -1);
      v26 = swift_slowAlloc(64, -1);
      v27 = v26;
      *(_DWORD *)v7 = 136446466;
      *(_QWORD *)(v0 + 144) = v6;
      MetatypeMetadata = swift_getMetatypeMetadata(v6);
      v9 = String.init<A>(describing:)(v0 + 144, MetatypeMetadata);
      v11 = v10;
      *(_QWORD *)(v0 + 128) = sub_100027E40(v9, v10, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 128, v0 + 136, v7 + 4, v7 + 12);
      swift_bridgeObjectRelease(v11);
      *(_WORD *)(v7 + 12) = 2082;
      swift_getErrorValue(v1, v0 + 136, v0 + 80);
      v12 = Error.rem_errorDescription.getter(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
      v14 = v13;
      *(_QWORD *)(v0 + 120) = sub_100027E40(v12, v13, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 120, v0 + 128, v7 + 14, v7 + 22);
      swift_bridgeObjectRelease(v14);
      sub_1000607E4(v1, 1);
      sub_1000607E4(v1, 1);
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "%{public}s: failed to stop sharing public link {error: %{public}s}", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy(v26, 2, &type metadata for Any[8]);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v7, -1, -1);
    }
    else
    {
      sub_1000607E4(v1, 1);
      sub_1000607E4(v1, 1);
    }

    v19 = *(_QWORD *)(v0 + 168);
    *(_QWORD *)(v0 + 272) = static TTRLocalizableStrings.Templates.publicTemplateStopSharingErrorAlertTitle.getter();
    *(_QWORD *)(v0 + 280) = v20;
    v21 = static TTRLocalizableStrings.Templates.publicTemplateStopSharingErrorAlertMessage.getter();
    *(_QWORD *)(v0 + 288) = v21;
    *(_QWORD *)(v0 + 296) = v22;
    *(_QWORD *)(v0 + 304) = static MainActor.shared.getter(v21);
    v24 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor, v23);
    *(_QWORD *)(v0 + 312) = v24;
    *(_QWORD *)(v0 + 320) = v25;
    return swift_task_switch(sub_10005E960, v24, v25);
  }
  else
  {
    v15 = *(void **)(v0 + 208);
    v16 = *(_QWORD *)(v0 + 176);
    swift_release(*(_QWORD *)(v0 + 248));

    v17 = swift_release(v16);
    return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(0, v17);
  }
}

uint64_t sub_10005E960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(id, uint64_t);

  v1 = *(_QWORD *)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 216);
  v4 = *(void **)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 152);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v1);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v1);
  v8 = objc_msgSend(v4, "alertControllerWithTitle:message:preferredStyle:", v6, v7, 1);
  *(_QWORD *)(v0 + 328) = v8;

  sub_10001413C((_QWORD *)(v5 + 88), *(_QWORD *)(v5 + 112));
  v9 = swift_allocObject(v3, 64, 7);
  *(_QWORD *)(v0 + 336) = v9;
  *(_OWORD *)(v9 + 16) = xmmword_100520250;
  v10 = static TTRLocalizableStrings.Common.alertOKButton.getter();
  *(_BYTE *)(v0 + 115) = 0;
  TTRIValueBasedAlertAction.init(title:style:value:)(v10, v11, 0, v0 + 115, &type metadata for Bool);
  v14 = (uint64_t (*)(id, uint64_t))((char *)&dword_100640898 + dword_100640898);
  v12 = (_QWORD *)swift_task_alloc(unk_10064089C);
  *(_QWORD *)(v0 + 344) = v12;
  *v12 = v0;
  v12[1] = sub_10005EAC4;
  return v14(v8, v9);
}

uint64_t sub_10005EAC4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 336);
  swift_task_dealloc(*(_QWORD *)(*v0 + 344));
  swift_bridgeObjectRelease(v2);
  return swift_task_switch(sub_10005EB18, *(_QWORD *)(v1 + 312), *(_QWORD *)(v1 + 320));
}

uint64_t sub_10005EB18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 280);

  swift_release(v2);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v3);
  return swift_task_switch(sub_10005EB78, *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
}

uint64_t sub_10005EB78()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(void **)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 176);
  swift_release(*(_QWORD *)(v0 + 248));

  swift_release(v3);
  sub_1000607E4(v1, 1);
  sub_1000607E4(v1, 1);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_10005EBE4()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v1[6] = v0;
  v2 = (*(_QWORD *)(*(_QWORD *)(sub_10002A750((uint64_t *)&unk_100640EE0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[7] = swift_task_alloc(v2);
  v1[8] = swift_task_alloc(v2);
  v3 = type metadata accessor for URL(0);
  v1[9] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[10] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[11] = swift_task_alloc(v5);
  v1[12] = swift_task_alloc(v5);
  v6 = type metadata accessor for MainActor(0);
  v1[13] = v6;
  v1[14] = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  v1[15] = v8;
  v1[16] = v9;
  return swift_task_switch(sub_10005ECC0, v8, v9);
}

uint64_t sub_10005ECC0()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[17] = *(_QWORD *)(v0[6] + 128);
  v1 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to TTRTemplateSharingPresenterCapability.prepareToStartOrManageSharing()
                                  + 1));
  v0[18] = v1;
  *v1 = v0;
  v1[1] = sub_10005ED14;
  return TTRTemplateSharingPresenterCapability.prepareToStartOrManageSharing()();
}

uint64_t sub_10005ED14(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *v3;
  *(_DWORD *)(v4 + 40) = a3;
  *(_QWORD *)(v4 + 24) = a1;
  *(_QWORD *)(v4 + 32) = a2;
  *(_QWORD *)(v4 + 16) = v3;
  v5 = *(_QWORD *)(v4 + 144);
  *(_QWORD *)(v4 + 152) = a1;
  swift_task_dealloc(v5);
  return swift_task_switch(sub_10005ED78, *(_QWORD *)(v4 + 120), *(_QWORD *)(v4 + 128));
}

uint64_t sub_10005ED78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  BOOL v14;
  Swift::String v15;

  v1 = *(unsigned __int8 *)(v0 + 152);
  if (v1 != 2)
  {
    v6 = *(_QWORD *)(v0 + 32);
    v7 = *(_DWORD *)(v0 + 40);
    v8 = *(_QWORD *)(v0 + 48);
    v9 = *(unsigned __int8 *)(v8 + 48);
    v10 = *(_QWORD *)(v8 + 56);
    v11 = *(unsigned __int8 *)(v8 + 64);
    v12 = *(unsigned __int8 *)(v8 + 65);
    v13 = *(unsigned __int8 *)(v8 + 66);
    *(_BYTE *)(v8 + 48) = v1 & 1;
    *(_QWORD *)(v8 + 56) = v6;
    *(_BYTE *)(v8 + 64) = v7 & 1;
    *(_BYTE *)(v8 + 65) = (unsigned __int16)(v7 & 0x100) >> 8;
    *(_BYTE *)(v8 + 66) = (v7 & 0x10000u) >> 16;
    v14 = ((v1 & 1) == 0) != v9 && v6 == v10;
    if (!v14
      || ((((v7 & 1) == 0) ^ v11) & 1) == 0
      || ((((v7 & 0x100) == 0) ^ v12) & 1) == 0
      || ((((v7 & 0x10000) == 0) ^ v13) & 1) == 0)
    {
      v15._object = (void *)0x8000000100560820;
      v15._countAndFlagsBits = 0xD000000000000011;
      TTRMainActorDeferredAction.scheduleNextRunLoop(reason:)(v15);
    }
    __asm { BR              X10 }
  }
  swift_release(*(_QWORD *)(v0 + 112));
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_10005EEAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0[13];
  v0[20] = ((uint64_t (*)(void))static TTRLocalizableStrings.Templates.publicTemplateSharingMaxReminderCountExceededAlertTitle.getter)();
  v0[21] = v2;
  v3 = ((uint64_t (*)(void))static TTRLocalizableStrings.Templates.publicTemplateSharingMaxReminderCountExceededAlertMessage.getter)();
  v0[22] = v3;
  v0[23] = v4;
  v0[24] = static MainActor.shared.getter(v3);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v5);
  v0[25] = v6;
  v0[26] = v7;
  return swift_task_switch(sub_10005F004, v6, v7);
}

void sub_10005EF0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 112));
  v2 = sub_10001413C((_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 112));
  sub_100060334(v1, *v2);
  JUMPOUT(0x10005EDA8);
}

void sub_10005EF38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 112));
  v2 = sub_10001413C((_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 112));
  sub_10006049C(v1, *v2);
  JUMPOUT(0x10005EDA8);
}

uint64_t sub_10005EF64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = static TTRLocalizableStrings.Templates.publicTemplateContainsNoImagesText.getter();
  v3 = v2;
  *(_QWORD *)(v0 + 240) = v2;
  v4 = (_QWORD *)swift_task_alloc(dword_100640884);
  *(_QWORD *)(v0 + 248) = v4;
  *v4 = v0;
  v4[1] = sub_10005F27C;
  return sub_10005C028(v1, v3, 0, 0, 0, 0);
}

uint64_t sub_10005EFC4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10064088C);
  *(_QWORD *)(v0 + 256) = v1;
  *v1 = v0;
  v1[1] = sub_10005F384;
  return sub_10005C318(*(_QWORD *)(v0 + 96));
}

uint64_t sub_10005F004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(id, uint64_t);

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v1);
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v1);
  v6 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v4, v5, 1);
  *(_QWORD *)(v0 + 216) = v6;

  sub_10001413C((_QWORD *)(v3 + 88), *(_QWORD *)(v3 + 112));
  v7 = sub_10002A750(&qword_100649EF0);
  v8 = swift_allocObject(v7, 64, 7);
  *(_QWORD *)(v0 + 224) = v8;
  *(_OWORD *)(v8 + 16) = xmmword_100520250;
  v9 = static TTRLocalizableStrings.Common.alertOKButton.getter();
  *(_BYTE *)(v0 + 280) = 0;
  TTRIValueBasedAlertAction.init(title:style:value:)(v9, v10, 0, v0 + 280, &type metadata for Bool);
  v13 = (uint64_t (*)(id, uint64_t))((char *)&dword_100640898 + dword_100640898);
  v11 = (_QWORD *)swift_task_alloc(unk_10064089C);
  *(_QWORD *)(v0 + 232) = v11;
  *v11 = v0;
  v11[1] = sub_10005F168;
  return v13(v6, v8);
}

uint64_t sub_10005F168()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 224);
  swift_task_dealloc(*(_QWORD *)(*v0 + 232));
  swift_bridgeObjectRelease(v2);
  return swift_task_switch(sub_10005F1BC, *(_QWORD *)(v1 + 200), *(_QWORD *)(v1 + 208));
}

uint64_t sub_10005F1BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 168);

  swift_release(v2);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v3);
  return swift_task_switch(sub_10005F21C, *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
}

uint64_t sub_10005F21C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_release(*(_QWORD *)(v0 + 112));
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_10005F27C(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 240);
  v3 = *(_QWORD *)(*v1 + 248);
  *(_BYTE *)(*v1 + 281) = a1;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v4);
  return swift_task_switch(sub_10005F2DC, *(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 128));
}

uint64_t sub_10005F2DC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if ((*(_BYTE *)(v0 + 281) & 1) != 0)
  {
    v1 = (_QWORD *)swift_task_alloc(dword_10064088C);
    *(_QWORD *)(v0 + 256) = v1;
    *v1 = v0;
    v1[1] = sub_10005F384;
    return sub_10005C318(*(_QWORD *)(v0 + 96));
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 112));
    v3 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 56);
    v4 = *(_QWORD *)(v0 + 64);
    swift_task_dealloc(*(_QWORD *)(v0 + 96));
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
}

uint64_t sub_10005F384()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 256);
  *(_QWORD *)(*v1 + 264) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10005F55C;
  else
    v4 = sub_10005F3E4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 128));
}

uint64_t sub_10005F3E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Class isa;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = swift_release(*(_QWORD *)(v0 + 112));
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 16))(v4, v1, v2, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v4, 0, 1, v2);
  if (*(_BYTE *)(v5 + 160) == 1)
  {
    v7 = *(_QWORD *)(v0 + 72);
    v8 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v0 + 56);
    sub_10000735C(*(_QWORD *)(v0 + 64), v9, (uint64_t *)&unk_100640EE0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7) == 1)
    {
      sub_1000073A0(*(_QWORD *)(v0 + 56), (uint64_t *)&unk_100640EE0);
    }
    else
    {
      v11 = *(_QWORD *)(v0 + 80);
      v10 = *(_QWORD *)(v0 + 88);
      v12 = *(_QWORD *)(v0 + 72);
      v13 = *(_QWORD *)(v0 + 48);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 32))(v10, *(_QWORD *)(v0 + 56), v12);
      isa = TTRTemplateSharingPresenterCapability.templateLinkMetadataForShareSheet()().super.isa;
      sub_10001413C((_QWORD *)(v13 + 88), *(_QWORD *)(v13 + 112));
      sub_1001D63C4(v10, isa);

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    }
  }
  v15 = *(_QWORD *)(v0 + 96);
  v16 = *(_QWORD *)(v0 + 72);
  v17 = *(_QWORD *)(v0 + 80);
  sub_1000073A0(*(_QWORD *)(v0 + 64), (uint64_t *)&unk_100640EE0);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  v18 = *(_QWORD *)(v0 + 88);
  v20 = *(_QWORD *)(v0 + 56);
  v19 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_10005F55C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_100640894);
  *(_QWORD *)(v0 + 272) = v1;
  *v1 = v0;
  v1[1] = sub_10005F5AC;
  return sub_10005CA44(*(_QWORD *)(v0 + 264));
}

uint64_t sub_10005F5AC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 272));
  return swift_task_switch(sub_10005F5F8, *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128));
}

uint64_t sub_10005F5F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 264);
  swift_release(*(_QWORD *)(v0 + 112));
  swift_errorRelease(v1);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_10005F664(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *Strong;
  void *v10;
  id v11;
  _QWORD v12[5];
  _BYTE v13[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    sub_100010634(result + 88, (uint64_t)v12);
    swift_release(v3);
    v4 = sub_10001413C(v12, v12[3]);
    v5 = static TTRLocalizableStrings.Templates.publicTemplateDeleting.getter();
    v7 = v6;
    v8 = *v4;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(*v4 + 64);
    if (Strong)
    {
      v10 = Strong;
      v11 = objc_msgSend(Strong, "presentingViewController");

      if (v11)
      {
LABEL_6:
        sub_100375364(v5, v7, v10);
        swift_bridgeObjectRelease(v7);

        return sub_100027F10(v12);
      }

    }
    v10 = (void *)swift_unknownObjectWeakLoadStrong(v8 + 24);
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_10005F758(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1[10] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[11] = v2;
  v1[12] = static MainActor.shared.getter(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor, v3);
  v1[13] = v4;
  v1[14] = v5;
  return swift_task_switch(sub_10005F7C8, v4, v5);
}

uint64_t sub_10005F7C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v10;

  v1 = *(_QWORD *)(v0 + 80) + 16;
  swift_beginAccess(v1, v0 + 56, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(_QWORD *)(v0 + 88);
    sub_100010634(Strong + 88, v0 + 16);
    swift_release(v3);
    v5 = sub_10001413C((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    *(_QWORD *)(v0 + 120) = *v5;
    *(_QWORD *)(v0 + 128) = static MainActor.shared.getter(v5);
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v6);
    *(_QWORD *)(v0 + 136) = v7;
    *(_QWORD *)(v0 + 144) = v8;
    return swift_task_switch(sub_10005F8A8, v7, v8);
  }
  else
  {
    v10 = swift_release(*(_QWORD *)(v0 + 96));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v10);
  }
}

uint64_t sub_10005F8A8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 152) = *(_QWORD *)(*(_QWORD *)(v0 + 120) + 56);
  return swift_task_switch(sub_10005F8C8, 0, 0);
}

uint64_t sub_10005F8C8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(void **)(v0[19] + 16);
  v0[20] = v1;
  if (!v1)
    return swift_task_switch(sub_10005F9E8, v0[17], v0[18]);
  v2 = async function pointer to UIViewController.dismissAndWait(animated:)[1];
  v1;
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[21] = v3;
  *v3 = v0;
  v3[1] = sub_10005F950;
  return UIViewController.dismissAndWait(animated:)(1);
}

uint64_t sub_10005F950()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 168));
  return swift_task_switch(sub_10005F9A4, 0, 0);
}

uint64_t sub_10005F9A4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 152);

  v2 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = 0;

  return swift_task_switch(sub_10005F9E8, *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
}

uint64_t sub_10005F9E8()
{
  _QWORD *v0;

  swift_release(v0[16]);
  return swift_task_switch(sub_10005FA20, v0[13], v0[14]);
}

uint64_t sub_10005FA20()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 96));
  sub_100027F10((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005FA5C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor, v4);
  v2[5] = v5;
  v2[6] = v6;
  return swift_task_switch(sub_10005FAC8, v5, v6);
}

uint64_t sub_10005FAC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(v2 + 24);
  v4 = *(_QWORD *)(v3 + 80);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 72), a2);
  v6 = *(int **)(v4 + 32);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc(v6[1]);
  *(_QWORD *)(v2 + 56) = v7;
  *v7 = v2;
  v7[1] = sub_10005FB40;
  return v9(ObjectType, v4);
}

uint64_t sub_10005FB40()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 56);
  *(_QWORD *)(*v1 + 64) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10005FBE8;
  else
    v4 = sub_10005FBA0;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_10005FBA0()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;

  swift_release(*(_QWORD *)(v0 + 32));
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 64) != 0;
  *(_QWORD *)v1 = 0;
  *(_BYTE *)(v1 + 8) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005FBE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 32));
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 64) != 0;
  *(_QWORD *)v2 = v1;
  *(_BYTE *)(v2 + 8) = v3;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005FC34()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (result)
  {
    v2 = result;
    sub_1001E174C();
    return swift_unknownObjectRelease(v2);
  }
  return result;
}

id sub_10005FC70()
{
  uint64_t v0;

  return *(id *)(v0 + 152);
}

uint64_t sub_10005FC78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[5] = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  v3[6] = v6;
  v3[7] = v7;
  return swift_task_switch(sub_10005FCE8, v6, v7);
}

uint64_t sub_10005FCE8()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  id v3;
  _QWORD *v4;
  __n128 v6;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 32) + 64);
  if (Strong)
  {
    v2 = Strong;
    v3 = objc_msgSend(Strong, "presentingViewController");

    if (v3)
    {
LABEL_5:
      *(_QWORD *)(v0 + 64) = v2;
      v4 = (_QWORD *)swift_task_alloc(async function pointer to UIViewController.present<A>(alert:actions:didPresent:animated:)[1]);
      *(_QWORD *)(v0 + 72) = v4;
      *v4 = v0;
      v4[1] = sub_10005FDC4;
      return UIViewController.present<A>(alert:actions:didPresent:animated:)(v0 + 80, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), 0, 0, 1, &type metadata for Bool);
    }

  }
  v2 = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 32) + 24);
  if (v2)
    goto LABEL_5;
  v6 = swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(uint64_t, __n128))(v0 + 8))(2, v6);
}

uint64_t sub_10005FDC4()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*v0 + 72));

  *(_BYTE *)(v1 + 81) = *(_BYTE *)(v1 + 80);
  return swift_task_switch(sub_10005FE1C, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_10005FE1C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 81));
}

uint64_t sub_10005FE50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100640878);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005FE98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_100640EE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005FEE0(uint64_t result, uint64_t a2)
{
  if (result != 1)
    return sub_1000381B8(result, a2);
  return result;
}

uint64_t sub_10005FEF0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10005FF14()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_10005FF38()
{
  uint64_t v0;

  return sub_10005D1C8(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_10005FF44()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1006408AC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006083C;
  return sub_10005D2CC(v0);
}

uint64_t sub_10005FF8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1006408BC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006083C;
  return sub_10005D594(a1, v5, v4);
}

uint64_t sub_10005FFF0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10006001C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(_BYTE *)(v1 + 32);
  v8 = (_QWORD *)swift_task_alloc(dword_1006408CC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006083C;
  return sub_10005DC34(a1, v4, v5, v7, v6);
}

void sub_100060098(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSObject *oslog;
  uint64_t v25;
  uint64_t v26;

  v5 = *(_QWORD *)a5;
  if (*(_BYTE *)(a5 + 80) == 1)
  {
    if (qword_10063D480 != -1)
      swift_once(&qword_10063D480, sub_1001D5A84);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100012DC4(v6, (uint64_t)qword_10064B6D0);
    oslog = Logger.logObject.getter(v7);
    v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v10 = swift_slowAlloc(32, -1);
      v26 = v10;
      *(_DWORD *)v9 = 136315138;
      v11 = sub_1001D5B14(v5);
      v13 = v12;
      v25 = sub_100027E40(v11, v12, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v9 + 4, v9 + 12);
      swift_bridgeObjectRelease(v13);
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, "%s Ignore request to show public template preview. Preview creation in progress.", v9, 0xCu);
      swift_arrayDestroy(v10, 1, &type metadata for Any[8]);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    v18 = a3 & 1;
    *(_BYTE *)(a5 + 80) = 1;
    v19 = sub_10002CDD8();
    v20 = (void *)static OS_dispatch_queue.main.getter(v19);
    v21 = swift_allocObject(&unk_1005ECD68, 24, 7);
    swift_weakInit(v21 + 16, a5);
    v22 = swift_allocObject(&unk_1005ECD90, 64, 7);
    *(_QWORD *)(v22 + 16) = v21;
    *(_QWORD *)(v22 + 24) = a1;
    *(_BYTE *)(v22 + 32) = v18;
    *(_QWORD *)(v22 + 40) = a4;
    *(_QWORD *)(v22 + 48) = &off_1005ECC30;
    *(_QWORD *)(v22 + 56) = v5;
    swift_retain();
    v23 = a1;
    swift_retain();
    REMStore.createPublicContentPreview(of:with:completionHandlerQueue:completion:)(v23, a2, v20, sub_100060824, v22);

    swift_release();
    swift_release();
  }
}

void sub_100060334(uint64_t a1, uint64_t a2)
{
  void *Strong;
  void *v5;
  id v6;
  objc_class *v7;
  char *v8;
  char *v9;
  double v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  objc_super v16;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2 + 64);
  if (!Strong)
  {
LABEL_4:
    v5 = (void *)swift_unknownObjectWeakLoadStrong(a2 + 24);
    if (!v5)
      return;
    goto LABEL_5;
  }
  v5 = Strong;
  v6 = objc_msgSend(Strong, "presentingViewController");

  if (!v6)
  {

    goto LABEL_4;
  }
LABEL_5:
  v7 = (objc_class *)type metadata accessor for TTRITemplateSharingOffineViewController();
  v8 = (char *)objc_allocWithZone(v7);
  v9 = &v8[OBJC_IVAR____TtC9Reminders39TTRITemplateSharingOffineViewController_presenter];
  *(_QWORD *)v9 = a1;
  *((_QWORD *)v9 + 1) = &off_1005ECC70;
  v16.receiver = v8;
  v16.super_class = v7;
  *(_QWORD *)&v10 = swift_unknownObjectRetain(a1).n128_u64[0];
  v11 = objc_msgSendSuper2(&v16, "initWithNibName:bundle:", 0, 0, v10);
  v12 = objc_allocWithZone((Class)UINavigationController);
  v13 = objc_msgSend(v12, "initWithRootViewController:", v11, v16.receiver, v16.super_class);
  objc_msgSend(v13, "setModalPresentationStyle:", 2);
  v14 = objc_msgSend(v13, "presentationController");
  if (v14)
  {
    v15 = v14;
    objc_msgSend(v14, "setDelegate:", v11);

  }
  swift_unknownObjectWeakAssign(a2 + 72, v13);
  objc_msgSend(v5, "presentViewController:animated:completion:", v13, 1, 0);

}

void sub_10006049C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *Strong;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  _BYTE *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;

  v4 = a2 + 64;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2 + 64);
  if (!Strong
    || (v6 = Strong,
        v7 = objc_msgSend(Strong, "presentingViewController"),
        v7,
        v6,
        !v7))
  {
    v8 = swift_unknownObjectWeakLoadStrong(a2 + 24);
    if (v8)
    {
      v9 = (void *)v8;
      v10 = *(void **)(a2 + 48);
      v11 = objc_allocWithZone((Class)type metadata accessor for TTRITemplateSharingConfigurationViewController());
      swift_retain(a1);
      v12 = sub_100060634(a1, (uint64_t)v10, v11);
      *(_QWORD *)(a1 + 24) = &off_1005F64C8;
      swift_unknownObjectWeakAssign(a1 + 16, v12);
      v16 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v12);
      v13 = objc_msgSend(v16, "navigationBar");
      objc_msgSend(v13, "setPrefersLargeTitles:", 1);

      v14 = objc_msgSend(v16, "presentationController");
      if (v14)
      {
        v15 = v14;
        objc_msgSend(v14, "setDelegate:", v12);

      }
      swift_unknownObjectWeakAssign(v4, v16);
      objc_msgSend(v9, "presentViewController:animated:completion:", v16, 1, 0);

    }
  }
}

id sub_100060634(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  objc_class *ObjectType;
  _QWORD *v7;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType(a3, a2);
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_tableView] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_cancelButton] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_commitButton] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_tableDataController] = 0;
  a3[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_needsTableCellResize] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___dateAndTimeCell] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___tagsCell] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___locationsCell] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___dateAndTimeSection] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___tagsSection] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___locationsSection] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___imageSection] = 0;
  v7 = &a3[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_presenter];
  *v7 = a1;
  v7[1] = &off_1005ECC70;
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_localUndoManager] = a2;
  v9.receiver = a3;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, "initWithNibName:bundle:", 0, 0);
}

uint64_t sub_100060740()
{
  uint64_t v0;

  return sub_10005F664(v0);
}

uint64_t sub_100060748()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1006408EC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006083C;
  return sub_10005F758(v0);
}

uint64_t sub_100060790(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_1006408FC);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10004A08C;
  return sub_10005FA5C(a1, v1);
}

uint64_t sub_1000607E4(uint64_t result, char a2)
{
  if ((a2 & 1) != 0)
    return swift_errorRelease(result);
  return result;
}

uint64_t sub_1000607F0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 64, 7);
}

void sub_100060824(void *a1, char a2)
{
  uint64_t v2;

  sub_1001D5B40(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(_BYTE *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

id sub_10006095C(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  objc_super v20;
  __int128 v21;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v6 = &v2[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchSelection];
  v7 = type metadata accessor for TTRIAccountsListsSelection(0);
  v8 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  v9 = OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel;
  v10 = type metadata accessor for TTRAccountsListsViewModel(0);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  v11 = v3;
  *(_QWORD *)&v3[v9] = TTRAccountsListsViewModel.init()();
  v11[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_currentEditModeTransition] = 2;
  *(_QWORD *)&v11[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchController] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchResultContainerViewController] = 0;
  v12 = &v11[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_pendingSearchTerm];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController____lazy_storage___addListButton] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController____lazy_storage___addReminderButton] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController____lazy_storage___addGroupButton] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController____lazy_storage___editButton] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController____lazy_storage___actionMenuButton] = 0;
  v11[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_needsWorkaround51600172] = 1;
  *(_QWORD *)&v11[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_accountSpinnerVisibleByAccountID] = &_swiftEmptyDictionarySingleton;
  *(_WORD *)&v11[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_currentBarButtonItemConfiguration] = -258;
  v13 = OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_dropExceedsMaximumNumberOfPinnedListsTracker;
  v14 = type metadata accessor for TTRIAccountsListsDropExceedsMaximumNumberOfPinnedListsTracker();
  v15 = swift_allocObject(v14, 17, 7);
  *(_BYTE *)(v15 + 16) = 0;
  *(_QWORD *)&v11[v13] = v15;
  v8(&v11[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_lastAppliedSelection], 1, 1, v7);
  v11[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_isInExpandedSplitViewSnapshot] = 2;
  static TTRTypedController.currentArgument.getter(&v21, ObjectType, &off_100640DD0);
  *(_OWORD *)&v11[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_presenter] = v21;

  v20.receiver = v11;
  v20.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v20, "initWithCoder:", a1);
  v17 = v16;
  if (v16)
  {
    v18 = v16;
    sub_10000ED98();

  }
  return v17;
}

id sub_100060B90(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  objc_super v12;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = objc_msgSend(v2, "view");
  if (v5)
  {
    v6 = v5;
    v7 = type metadata accessor for TTRIAccountsListsTreeView(0);
    v8 = swift_dynamicCastClass(v6, v7);
    if (v8)
    {
      v9 = *(void **)(v8 + qword_10065D8E0);
      if (v9)
      {
        v10 = v9;
        sub_1002BB8C0();

        v6 = v10;
      }
    }

  }
  v12.receiver = v3;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, "dealloc");
}

uint64_t sub_100060D70()
{
  return type metadata accessor for TTRIAccountsListsViewController(0);
}

uint64_t sub_100060D78(char a1, uint64_t a2)
{
  char *v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t result;
  objc_super v17;

  v17.receiver = v2;
  v17.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v17, "viewWillDisappear:", a1 & 1);
  v4 = objc_msgSend(v2, "view");
  if (v4)
  {
    v5 = v4;
    v6 = type metadata accessor for TTRIAccountsListsTreeView(0);
    v7 = swift_dynamicCastClass(v5, v6);
    if (v7)
    {
      v8 = *(void **)(v7 + qword_10065D8D8);
      if (v8)
      {
        v9 = objc_msgSend(v8, "contextMenuInteraction");

        objc_msgSend(v9, "dismissMenu");
        v10 = *(_QWORD **)&v2[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_presenter];
        v11 = v10[6];
        swift_retain(v11);
        TTRModuleState.viewWillDisappear()();
        swift_release(v11);
        v13 = v10[8];
        v12 = v10[9];
        ObjectType = swift_getObjectType(v13, v14);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 248))(ObjectType, v12);
      }
      __break(1u);
    }

  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
  __break(1u);
  return result;
}

uint64_t sub_100060F0C(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_class *ObjectType;
  id v6;
  void *v7;
  id v8;
  id v9;
  unsigned __int8 v10;
  uint64_t v12;
  id receiver;
  id v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  objc_super v30[2];
  objc_super v31;
  _QWORD v32[3];
  uint64_t v33;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v6 = objc_msgSend(v2, "splitViewController");
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, "displayMode");

    if (v8 == (id)1)
      goto LABEL_4;
  }
  v9 = objc_msgSend(v2, "presentedViewController");

  if (v9)
    goto LABEL_4;
  if ((static Selector.== infix(_:_:)("beginSearchAction:", a1) & 1) != 0)
  {
    v10 = objc_msgSend(v2, "isEditing") ^ 1;
    return v10 & 1;
  }
  if ((static Selector.== infix(_:_:)("showListAction:", a1) & 1) != 0)
  {
    if ((objc_msgSend(v2, "isEditing") & 1) == 0)
    {
      sub_10000735C(a2, (uint64_t)v32, &qword_100640E50);
      if (!v33)
        goto LABEL_26;
      v12 = sub_100005ED8(0, &qword_100640F50, UIKeyCommand_ptr);
      if ((swift_dynamicCast(v30, v32, &type metadata for Any[8], v12, 6) & 1) != 0)
      {
        receiver = v30[0].receiver;
        v14 = objc_msgSend(v30[0].receiver, "propertyList");
        if (v14)
        {
          v15 = v14;
          _bridgeAnyObjectToAny(_:)(v30);
          swift_unknownObjectRelease(v15);
        }
        else
        {
          memset(v30, 0, sizeof(v30));
        }
        sub_10000F614((uint64_t)v30, (uint64_t)v32, &qword_100640E50);
        if (v33)
        {
          v22 = sub_10002A750(&qword_100640F58);
          if ((swift_dynamicCast(&v29, v32, &type metadata for Any[8], v22, 6) & 1) != 0 && (sub_1004FF4F8(v29), v23))
          {
            v26 = v23;
            v27 = (void *)v24;
            if ((v25 & 1) != 0)
            {
              swift_bridgeObjectRelease(v23);

              v10 = 1;
              sub_100076D1C(v27, 1);
            }
            else
            {
              v10 = sub_10033B2B0(v24);

              swift_bridgeObjectRelease(v26);
            }
          }
          else
          {

            v10 = 0;
          }
          return v10 & 1;
        }

LABEL_26:
        sub_1000073A0((uint64_t)v32, &qword_100640E50);
        v10 = 0;
        return v10 & 1;
      }
    }
LABEL_4:
    v10 = 0;
    return v10 & 1;
  }
  sub_10000735C(a2, (uint64_t)v32, &qword_100640E50);
  v16 = v33;
  if (v33)
  {
    v17 = sub_10001413C(v32, v33);
    v18 = *(_QWORD *)(v16 - 8);
    __chkstk_darwin(v17);
    v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v18 + 16))(v20);
    v21 = _bridgeAnythingToObjectiveC<A>(_:)(v20, v16);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v16);
    sub_100027F10(v32);
  }
  else
  {
    v21 = 0;
  }
  v31.receiver = v2;
  v31.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v31, "canPerformAction:withSender:", a1, v21);
  swift_unknownObjectRelease(v21);
  return v10 & 1;
}

void sub_1000612D0(char a1, uint64_t a2)
{
  char *v2;
  char *v3;
  char v4;
  objc_class *ObjectType;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unsigned __int8 v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  void *v29;
  id v30;
  id v31;
  UIAccessibilityTraits v32;
  unint64_t v33;
  UIAccessibilityTraits v34;
  unint64_t v35;
  id v36;
  UIAccessibilityTraits v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;
  objc_super v42;

  v3 = v2;
  v4 = a2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  sub_100345280(a1);
  v42.receiver = v2;
  v42.super_class = ObjectType;
  objc_msgSendSuper2(&v42, "setEditing:animated:", a1 & 1, v4 & 1);
  v7 = objc_msgSend(v2, "view");
  if (!v7)
    goto LABEL_34;
  v8 = v7;
  v9 = type metadata accessor for TTRIAccountsListsTreeView(0);
  v10 = swift_dynamicCastClass(v8, v9);
  if (!v10)
    goto LABEL_33;
  v11 = *(void **)(v10 + qword_10065D8D8);
  if (!v11)
  {
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  objc_msgSend(v11, "setEditing:animated:", a1 & 1, v4 & 1);

  v12 = objc_msgSend(v3, "isEditing");
  v13 = objc_msgSend(v3, "view");
  v8 = v13;
  if ((v12 & 1) != 0)
  {
    if (v13)
    {
      v14 = swift_dynamicCastClass(v13, v9);
      if (v14)
      {
        v40[2] = v3;
        v15 = *(void **)(__chkstk_darwin(v14) + qword_10065D8E0);
        if (!v15)
        {
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
        v16 = v15;
        sub_10006D5CC((uint64_t)sub_1000762DC, (uint64_t)v40);

        goto LABEL_13;
      }
      goto LABEL_33;
    }
  }
  else if (v13)
  {
    v17 = swift_dynamicCastClass(v13, v9);
    if (v17)
    {
      v18 = *(void **)(v17 + qword_10065D8E0);
      if (!v18)
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      v19 = v18;
      sub_10006E804();

LABEL_13:
      sub_10001A818();
      v20 = OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchController;
      v21 = *(void **)&v3[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchController];
      if (v21)
      {
        v22 = objc_msgSend(v21, "searchBar");
        v23 = objc_msgSend(v22, "searchTextField");

        v41 = (uint64_t)_swiftEmptyArrayStorage;
        v8 = v23;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
        v25 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v24 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v25 >= v24 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
        v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v8);
        specialized Array._endMutation()(v26);
        v27 = v41;

        sub_10000A06C(v27, a1 & 1, v4 & 1);
        swift_bridgeObjectRelease(v27);
        v28 = objc_msgSend(v3, "isEditing");
        v29 = *(void **)&v3[v20];
        if (!v28)
        {
          if (v29)
          {
            v36 = objc_msgSend(v29, "searchBar");
            v31 = objc_msgSend(v36, "searchTextField");

            v37 = UIAccessibilityTraitNotEnabled;
            v38 = (unint64_t)objc_msgSend(v31, "accessibilityTraits");
            v39 = -1;
            if ((v38 & v37) != 0)
              v39 = ~v37;
            v35 = v39 & v38;
            goto LABEL_26;
          }
          goto LABEL_32;
        }
        if (v29)
        {
          v30 = objc_msgSend(v29, "searchBar");
          v31 = objc_msgSend(v30, "searchTextField");

          v32 = UIAccessibilityTraitNotEnabled;
          v33 = (unint64_t)objc_msgSend(v31, "accessibilityTraits");
          if ((v32 & ~v33) != 0)
            v34 = v32;
          else
            v34 = 0;
          v35 = v34 | v33;
LABEL_26:
          objc_msgSend(v31, "setAccessibilityTraits:", v35);

          return;
        }
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      goto LABEL_28;
    }
LABEL_33:

  }
LABEL_34:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
  __break(1u);
}

uint64_t sub_1000616AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v16;

  v4 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a2 + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel);
  swift_retain(v11);
  TTRAccountsListsViewModel.item(with:)(a1);
  swift_release(v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100640E00);
  }
  else
  {
    sub_10002B1E8((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v7, v4) == 6)
    {
      v12 = v7[1];
      v13 = v7[4];
      v14 = (void *)v7[6];
      sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);

      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v12);
      return 1;
    }
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  }
  return 0;
}

uint64_t sub_100061874@<X0>(_QWORD *a1@<X8>)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t result;
  int EnumCaseMultiPayload;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  _OWORD v40[12];
  _OWORD v41[2];

  v2 = v1;
  v4 = type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
  __chkstk_darwin(v4);
  v6 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  __chkstk_darwin(v7);
  v9 = (_OWORD *)((char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_10002A750(&qword_100640E90);
  __chkstk_darwin(v10);
  v12 = (_QWORD *)((char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = objc_msgSend(v1, "view");
  if (!v13)
    goto LABEL_24;
  v14 = v13;
  v15 = type metadata accessor for TTRIAccountsListsTreeView(0);
  if (!swift_dynamicCastClass(v14, v15))
  {
LABEL_23:

LABEL_24:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
    __break(1u);
    return result;
  }
  sub_10000F88C(v12);

  v16 = type metadata accessor for TTRIAccountsListsTreeView.ExtendedSelection(0);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v12, 1, v16) != 1)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v16);
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        v23 = sub_10002A750((uint64_t *)&unk_100640EA0);
        sub_10001F580((uint64_t)v12 + *(int *)(v23 + 48), (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
        if (swift_getEnumCaseMultiPayload(v9, v7) == 1)
        {
          v24 = v9[11];
          v40[10] = v9[10];
          v40[11] = v24;
          v41[0] = v9[12];
          *(_OWORD *)((char *)v41 + 10) = *(_OWORD *)((char *)v9 + 202);
          v25 = v9[7];
          v40[6] = v9[6];
          v40[7] = v25;
          v26 = v9[9];
          v40[8] = v9[8];
          v40[9] = v26;
          v27 = v9[3];
          v40[2] = v9[2];
          v28 = v9[4];
          v29 = v9[5];
          v40[3] = v27;
          v40[4] = v28;
          v40[5] = v29;
          v30 = v9[1];
          v40[0] = *v9;
          v40[1] = v30;
          sub_10007636C((uint64_t)v40);
        }
        else
        {
          sub_10001F580((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
          v39 = v6[*(int *)(v4 + 20)];
          sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
          LOBYTE(v40[0]) = v39;
          sub_1000763A4((uint64_t)v40);
        }
        sub_100075CE8((uint64_t)v40, (uint64_t)a1);
        v34 = type metadata accessor for TTRIAccountsListsSelection(0);
        v35 = a1;
        v36 = v34;
        v37 = 1;
      }
      else
      {
        v32 = (char *)v12 + *(int *)(sub_10002A750(&qword_100640E98) + 48);
        v33 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(a1, v32, v33);
        v34 = type metadata accessor for TTRIAccountsListsSelection(0);
        v35 = a1;
        v36 = v34;
        v37 = 2;
      }
      swift_storeEnumTagMultiPayload(v35, v36, v37);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(a1, 0, 1, v34);
      return sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    }
    else
    {
      *a1 = *v12;
      v31 = type metadata accessor for TTRIAccountsListsSelection(0);
      swift_storeEnumTagMultiPayload(a1, v31, 0);
      return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(a1, 0, 1, v31);
    }
  }
  v17 = OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchController;
  v18 = *(void **)&v2[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchController];
  if (!v18)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if ((objc_msgSend(v18, "isActive") & 1) != 0)
  {
LABEL_8:
    v20 = (uint64_t)&v2[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchSelection];
    swift_beginAccess(&v2[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchSelection], v40, 0, 0);
    return sub_10000735C(v20, (uint64_t)a1, (uint64_t *)&unk_1006549F0);
  }
  v19 = *(void **)&v2[v17];
  if (!v19)
    goto LABEL_22;
  if (objc_msgSend(v19, "isBeingPresented"))
    goto LABEL_8;
  v38 = type metadata accessor for TTRIAccountsListsSelection(0);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(a1, 1, 1, v38);
}

uint64_t sub_100061CA0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;

  v1 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v1);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(*(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel]+ direct field offset for TTRAccountsListsViewModel.hashtagsItem, (uint64_t)v3, (uint64_t *)&unk_100640E00);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1000073A0((uint64_t)v3, (uint64_t *)&unk_100640E00);
    return 0;
  }
  sub_10001F580((uint64_t)v3, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  v8 = objc_msgSend(v0, "view");
  if (!v8)
  {
LABEL_13:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
    __break(1u);
    return result;
  }
  v9 = v8;
  v10 = type metadata accessor for TTRIAccountsListsTreeView(0);
  v11 = swift_dynamicCastClass(v9, v10);
  if (!v11)
  {
LABEL_12:

    goto LABEL_13;
  }
  v12 = *(void **)(v11 + qword_10065D8E0);
  if (!v12)
  {
    __break(1u);
    goto LABEL_12;
  }
  v13 = v12;
  v14 = sub_10006B64C();
  v16 = v15;
  v18 = v17;
  v20 = (void *)sub_100070670((uint64_t)v7, v14, v15, v17, v19 & 1);

  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v14);
  sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  if (v20)
  {
    v21 = type metadata accessor for TTRIHashtagCollectionCell(0);
    result = swift_dynamicCastClass(v20, v21);
    if (result)
      return result;

  }
  return 0;
}

Class sub_100061EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  Class v9;
  uint64_t v11;
  _BYTE v12[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (!Strong)
    return 0;
  v5 = (void *)Strong;
  v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_presenter);
  swift_unknownObjectRetain(v6);

  v7 = swift_allocObject(&unk_1005ED088, 24, 7);
  swift_beginAccess(v3, &v11, 0, 0);
  v8 = (void *)swift_unknownObjectWeakLoadStrong(v3);
  swift_unknownObjectWeakInit(v7 + 16, v8);

  swift_retain(v7);
  v9 = sub_1003301BC((uint64_t)sub_1000762D4, v7);
  swift_unknownObjectRelease(v6);
  swift_release_n(v7, 2);
  return v9;
}

void sub_100061FD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_1000612D0(1, 1);

  }
}

BOOL sub_100062028(unsigned __int16 *a1, unsigned __int16 *a2)
{
  unsigned int v2;
  unsigned int v3;
  char v4;
  int v5;

  v2 = *a1;
  v3 = *a2;
  if (!(v2 >> 14))
  {
    if (v3 < 0x4000)
      return (((v2 & 1) == 0) ^ v3) & 1;
    return 0;
  }
  if (v2 >> 14 != 1)
    return v3 == 0x8000;
  if ((v3 & 0xC000) != 0x4000)
    return 0;
  v4 = ((v2 & 1) == 0) ^ v3;
  v5 = ((v2 & 0x100) == 0) ^ ((unsigned __int16)(v3 & 0x100) >> 8);
  if ((v4 & 1) == 0)
    LOBYTE(v5) = 0;
  return v5 & 1;
}

void sub_1000620B0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t (*v44)(_QWORD);
  char *v45;
  _QWORD v46[6];
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  int v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v70 = a1;
  v56 = a3;
  v63 = a2;
  v47 = sub_10002A750((uint64_t *)&unk_100640DF0);
  __chkstk_darwin(v47);
  v51 = (char *)v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for TTRListType(0);
  __chkstk_darwin(v58);
  v59 = (char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v61 = *(_QWORD *)(v5 - 8);
  v62 = v5;
  __chkstk_darwin(v5);
  v60 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  v46[2] = *(_QWORD *)(v7 - 8);
  v46[3] = v7;
  v8 = __chkstk_darwin(v7);
  v46[0] = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v46[1] = (char *)v46 - v10;
  v65 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v68 = *(_QWORD *)(v65 - 8);
  v11 = __chkstk_darwin(v65);
  v53 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v50 = (char *)v46 - v14;
  v15 = __chkstk_darwin(v13);
  v48 = (char *)v46 - v16;
  v17 = __chkstk_darwin(v15);
  v46[4] = (char *)v46 - v18;
  v19 = __chkstk_darwin(v17);
  v46[5] = (char *)v46 - v20;
  v21 = __chkstk_darwin(v19);
  v52 = (char *)v46 - v22;
  v23 = __chkstk_darwin(v21);
  v54 = (char *)v46 - v24;
  __chkstk_darwin(v23);
  v55 = (char *)v46 - v25;
  v26 = sub_10002A750((uint64_t *)&unk_1006549F0);
  v27 = __chkstk_darwin(v26);
  v49 = (char *)v46 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v27);
  v30 = __chkstk_darwin(v29);
  v31 = __chkstk_darwin(v30);
  v64 = (char *)v46 - v32;
  __chkstk_darwin(v31);
  v66 = (char *)v46 - v33;
  v34 = sub_10002A750((uint64_t *)&unk_100640E00);
  v35 = __chkstk_darwin(v34);
  v36 = __chkstk_darwin(v35);
  v37 = __chkstk_darwin(v36);
  v38 = __chkstk_darwin(v37);
  v39 = __chkstk_darwin(v38);
  v57 = (char *)v46 - v40;
  __chkstk_darwin(v39);
  v41 = type metadata accessor for TTRIAccountsListsSelection(0);
  v69 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v43 = (char *)v46 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(v70, (uint64_t)v43, v44);
  v67 = v41;
  v45 = (char *)&loc_1000624FC + *((int *)qword_100063618 + swift_getEnumCaseMultiPayload(v43, v41));
  __asm { BR              X10 }
}

uint64_t sub_10006250C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  unint64_t v30;
  _OWORD *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _OWORD *v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;

  v3 = *v1;
  v4 = *(char **)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 176);
  if ((v6 & 1) != 0)
    goto LABEL_12;
  v7 = objc_msgSend(*(id *)(v0 + 240), "view");
  if (!v7)
    goto LABEL_34;
  v8 = v7;
  v9 = type metadata accessor for TTRIAccountsListsTreeView(0);
  if (!swift_dynamicCastClass(v8, v9))
  {

    goto LABEL_34;
  }
  if (*(_QWORD *)(v3 + 16))
  {
    v10 = *(_QWORD *)(v0 + 216);
    sub_10002B1E8(v3 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v11 = 0;
  }
  else
  {
    v11 = 1;
    v10 = *(_QWORD *)(v0 + 216);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v2, v11, 1, v5);
  sub_10022C0F8(v2, 1, 0);

  sub_1000073A0(v2, (uint64_t *)&unk_100640E00);
  if ((v6 & 8) != 0)
    goto LABEL_12;
  v12 = objc_msgSend(v4, "view");
  if (!v12)
  {
LABEL_34:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
    __break(1u);
    goto LABEL_35;
  }
  v13 = v12;
  v14 = swift_dynamicCastClass(v12, v9);
  if (!v14)
  {

    goto LABEL_34;
  }
  v15 = *(void **)(v14 + qword_10065D8D8);
  if (!v15)
  {
    __break(1u);
    JUMPOUT(0x1000634D0);
  }
  objc_msgSend(v15, "scrollToNearestSelectedRowAtScrollPosition:animated:", 0, 1);

LABEL_12:
  v16 = 1;
  v17 = *(_QWORD *)(v0 + 200);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 224) + 56))(v17, 1, 1, *(_QWORD *)(v0 + 208));
  v18 = (uint64_t)&v4[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchSelection];
  swift_beginAccess(&v4[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchSelection], v0 + 720, 33, 0);
  sub_100041F2C(v17, v18, (uint64_t *)&unk_1006549F0);
  swift_endAccess(v0 + 720);
  v19 = *(_QWORD *)(v0 + 216);
  v20 = *(_QWORD *)(v0 + 128);
  if (*(_QWORD *)(v3 + 16))
  {
    sub_10002B1E8(v3 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80)), *(_QWORD *)(v0 + 128), (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v16 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v20, v16, 1, v5);
  swift_bridgeObjectRelease(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v20, 1, v5) == 1)
    return sub_1000073A0(v20, (uint64_t *)&unk_100640E00);
  v22 = *(_QWORD *)(v0 + 112);
  sub_10001F580(v20, v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  v23 = *(_OWORD **)(v0 + 104);
  sub_10002B1E8(v22, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v23, v5) == 4)
  {
    v24 = v23[11];
    *(_OWORD *)(v0 + 880) = v23[10];
    *(_OWORD *)(v0 + 896) = v24;
    *(_OWORD *)(v0 + 912) = v23[12];
    *(_OWORD *)(v0 + 922) = *(_OWORD *)((char *)v23 + 202);
    v25 = v23[7];
    *(_OWORD *)(v0 + 816) = v23[6];
    *(_OWORD *)(v0 + 832) = v25;
    v26 = v23[9];
    *(_OWORD *)(v0 + 848) = v23[8];
    *(_OWORD *)(v0 + 864) = v26;
    v27 = v23[3];
    *(_OWORD *)(v0 + 752) = v23[2];
    *(_OWORD *)(v0 + 768) = v27;
    v28 = v23[5];
    *(_OWORD *)(v0 + 784) = v23[4];
    *(_OWORD *)(v0 + 800) = v28;
    v29 = v23[1];
    *(_OWORD *)(v0 + 720) = *v23;
    *(_OWORD *)(v0 + 736) = v29;
    v30 = *(_QWORD *)(v0 + 872);
    if (v30 < 3 || v30 == 4)
    {
      sub_10032D3FC((void **)(v0 + 720), *(_DWORD *)(v0 + 124) & 1);
      goto LABEL_28;
    }
    if (v30 == 3)
    {
      sub_10032CD40(v0 + 720);
      goto LABEL_28;
    }
LABEL_35:
    if (qword_10063D680 != -1)
      swift_once(&qword_10063D680, sub_1000074FC);
    v45 = *(_QWORD *)(v0 + 24);
    v46 = sub_100012DC4(v45, (uint64_t)qword_100655F30);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 16) + 16))(*(_QWORD *)(v0 + 8), v46, v45);
    v47 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    v48 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    sub_1002EB23C((uint64_t)"unknown sharing status", 22, 2uLL, v47, v48);
    __break(1u);
    JUMPOUT(0x100063618);
  }
  sub_10001F544((uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  v31 = *(_OWORD **)(v0 + 88);
  sub_10002B1E8(v22, (uint64_t)v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v31, v5) != 5)
  {
    sub_10001F544((uint64_t)v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v38 = *(_OWORD **)(v0 + 40);
    sub_10002B1E8(v22, (uint64_t)v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v38, v5) == 6)
    {
      v39 = v38[1];
      *(_OWORD *)(v0 + 720) = *v38;
      *(_OWORD *)(v0 + 736) = v39;
      v40 = v38[3];
      *(_OWORD *)(v0 + 752) = v38[2];
      *(_OWORD *)(v0 + 768) = v40;
      sub_10032DDCC((_QWORD *)(v0 + 720));
      sub_100075FA0(v0 + 720);
    }
    else
    {
      sub_10001F544((uint64_t)v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      v41 = *(_QWORD *)(v0 + 32);
      sub_10002B1E8(v22, v41, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      if (swift_getEnumCaseMultiPayload(v41, v5) == 13)
      {
        v42 = *(_QWORD *)(v41 + 16);
        v43 = *(id *)v41;
        sub_10032E13C((uint64_t)v43);
        v44 = v42;
        v22 = *(_QWORD *)(v0 + 112);
        swift_bridgeObjectRelease(v44);

      }
      else
      {
        sub_10001F544(v41, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      }
    }
    return sub_10001F544(v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  }
  v32 = v31[11];
  *(_OWORD *)(v0 + 880) = v31[10];
  *(_OWORD *)(v0 + 896) = v32;
  *(_OWORD *)(v0 + 912) = v31[12];
  *(_OWORD *)(v0 + 922) = *(_OWORD *)((char *)v31 + 202);
  v33 = v31[7];
  *(_OWORD *)(v0 + 816) = v31[6];
  *(_OWORD *)(v0 + 832) = v33;
  v34 = v31[9];
  *(_OWORD *)(v0 + 848) = v31[8];
  *(_OWORD *)(v0 + 864) = v34;
  v35 = v31[3];
  *(_OWORD *)(v0 + 752) = v31[2];
  *(_OWORD *)(v0 + 768) = v35;
  v36 = v31[5];
  *(_OWORD *)(v0 + 784) = v31[4];
  *(_OWORD *)(v0 + 800) = v36;
  v37 = v31[1];
  *(_OWORD *)(v0 + 720) = *v31;
  *(_OWORD *)(v0 + 736) = v37;
  sub_10032D774((void **)(v0 + 720));
LABEL_28:
  sub_100075FE8(v0 + 720);
  return sub_10001F544(v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
}

void sub_10006377C(void *a1, uint64_t a2, void *a3, void (*a4)(void))
{
  id v6;
  id v7;

  v6 = a3;
  v7 = a1;
  a4();

}

uint64_t sub_100063884()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const mach_header_64 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  void *v27;

  v1 = sub_10001AD68();
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_presenter);
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v3 = type metadata accessor for Logger(0);
  sub_100012DC4(v3, (uint64_t)qword_100655F30);
  v4 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Add New List", 12, 2, v4);
  swift_bridgeObjectRelease(v4);
  v5 = *(_QWORD *)(v2 + 184);
  v6 = swift_retain(v5);
  v7 = TTRAccountsListsViewModel.accounts.getter(v6);
  swift_release(v5);
  if (*(_QWORD *)(v7 + 16))
  {
    v8 = *(_QWORD *)(v7 + 40);
    v26 = *(_QWORD *)(v7 + 32);
    v27 = v1;
    v9 = *(void **)(v7 + 48);
    v10 = *(unsigned __int8 *)(v7 + 56);
    v11 = *(unsigned __int8 *)(v7 + 57);
    v12 = *(unsigned __int8 *)(v7 + 58);
    v13 = *(unsigned __int8 *)(v7 + 59);
    v14 = *(unsigned __int8 *)(v7 + 60);
    v15 = *(unsigned __int8 *)(v7 + 61);
    swift_bridgeObjectRetain(v8);
    v16 = v9;
    swift_bridgeObjectRelease(v7);
    v17 = 256;
    if (!v11)
      v17 = 0;
    v18 = v17 | v10;
    v19 = 0x10000;
    if (!v12)
      v19 = 0;
    v20 = 0x1000000;
    if (!v13)
      v20 = 0;
    v21 = v18 | v19 | v20;
    v22 = &_mh_execute_header;
    if (!v14)
      v22 = 0;
    v23 = 0x10000000000;
    if (!v15)
      v23 = 0;
    sub_10032F308(v26, v8, v16, v21 | (unint64_t)v22 | v23, 0, 0, 3);

    v24 = v8;
  }
  else
  {

    v24 = v7;
  }
  return swift_bridgeObjectRelease(v24);
}

void sub_100063B50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _OWORD v18[12];
  _OWORD v19[2];
  _BYTE v20[224];
  uint64_t v21[28];
  id v22[28];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD v35[2];

  v2 = v1;
  v4 = type metadata accessor for TTRIAccountsListsSelection(0);
  __chkstk_darwin(v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(a1, (uint64_t)&v23, &qword_100640E50);
  if (!*((_QWORD *)&v24 + 1))
    goto LABEL_13;
  v7 = sub_100005ED8(0, &qword_100640F50, UIKeyCommand_ptr);
  if ((swift_dynamicCast(v22, &v23, &type metadata for Any[8], v7, 6) & 1) == 0)
    return;
  v8 = v22[0];
  v9 = objc_msgSend(v22[0], "propertyList");
  if (v9)
  {
    v10 = v9;
    _bridgeAnyObjectToAny(_:)(v22);
    swift_unknownObjectRelease(v10);
  }
  else
  {
    memset(v22, 0, 32);
  }
  sub_10000F614((uint64_t)v22, (uint64_t)&v23, &qword_100640E50);
  if (!*((_QWORD *)&v24 + 1))
  {

LABEL_13:
    sub_1000073A0((uint64_t)&v23, &qword_100640E50);
    return;
  }
  v11 = sub_10002A750(&qword_100640F58);
  if ((swift_dynamicCast(v21, &v23, &type metadata for Any[8], v11, 6) & 1) == 0 || (sub_1004FF4F8(v21[0]), !v12))
  {

    return;
  }
  v15 = v12;
  v16 = v13;
  if ((v14 & 1) != 0)
  {
    v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel);
    swift_retain(v17);
    sub_100076D78(v16, 1);
    TTRAccountsListsViewModel.pinnedListInnerList(with:)(v22);
    sub_10000F614((uint64_t)v22, (uint64_t)v21, &qword_100640F68);
    swift_release(v17);
    sub_10000F614((uint64_t)v22, (uint64_t)&v23, &qword_100640F68);
    if (sub_100076D84((uint64_t *)&v23) == 1)
    {
      sub_100076D1C(v16, 1);
      swift_bridgeObjectRelease(v15);
      sub_100076D1C(v16, 1);

      return;
    }
    v18[10] = v33;
    v18[11] = v34;
    v19[0] = v35[0];
    *(_OWORD *)((char *)v19 + 10) = *(_OWORD *)((char *)v35 + 10);
    v18[6] = v29;
    v18[7] = v30;
    v18[8] = v31;
    v18[9] = v32;
    v18[2] = v25;
    v18[3] = v26;
    v18[4] = v27;
    v18[5] = v28;
    v18[0] = v23;
    v18[1] = v24;
    sub_10007636C((uint64_t)v18);
    sub_100075CE8((uint64_t)v18, (uint64_t)v6);
    swift_storeEnumTagMultiPayload(v6, v4, 1);
    sub_10000F614((uint64_t)v21, (uint64_t)v20, &qword_100640F68);
    sub_100076C08((uint64_t)v20);
    sub_1000620B0((uint64_t)v6, 0, 0);

    sub_100076D1C(v16, 1);
    swift_bridgeObjectRelease(v15);
    sub_100076D1C(v16, 1);
    sub_100076D9C((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100076E18);
  }
  else
  {
    LOBYTE(v23) = (_BYTE)v13;
    sub_1000763A4((uint64_t)&v23);
    sub_100075CE8((uint64_t)&v23, (uint64_t)v6);
    swift_storeEnumTagMultiPayload(v6, v4, 1);
    sub_1000620B0((uint64_t)v6, 0, 0);
    swift_bridgeObjectRelease(v15);

  }
  sub_10001F544((uint64_t)v6, type metadata accessor for TTRIAccountsListsSelection);
}

uint64_t sub_100063F20(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;

  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease(a1);
  }
  if (a1 < 0)
    v9 = a1;
  else
    v9 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  result = _CocoaArrayWrapper.endIndex.getter(v9);
  v4 = result;
  if (!result)
    return swift_bridgeObjectRelease(a1);
LABEL_3:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v7 = *(id *)(a1 + 8 * i + 32);
      v8 = v7;
      objc_msgSend(v7, "setAlpha:", a2);

    }
    return swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

void sub_100063FF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  _BYTE v7[224];

  v2 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002B1E8(a1, (uint64_t)v4, v5);
  v6 = (char *)&loc_10006407C + *((int *)qword_1000642C0 + swift_getEnumCaseMultiPayload(v4, v2));
  __asm { BR              X10 }
}

uint64_t sub_10006408C()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  return 0;
}

void sub_100064328(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[18];

  sub_1000643F8(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100521210;
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[3] = &unk_100521228;
    v4[4] = &unk_100521240;
    v4[5] = &unk_100521240;
    v4[6] = &unk_100521258;
    v4[7] = &unk_100521240;
    v4[8] = &unk_100521240;
    v4[9] = &unk_100521240;
    v4[10] = &unk_100521240;
    v4[11] = &unk_100521240;
    v4[12] = &unk_100521270;
    v4[13] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[14] = &unk_100521288;
    v4[15] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[16] = v4[0];
    v4[17] = &unk_100521228;
    swift_updateClassMetadata2(a1, 256, 18, v4, a1 + 80);
  }
}

void sub_1000643F8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100640A30)
  {
    v2 = type metadata accessor for TTRIAccountsListsSelection(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100640A30);
  }
}

void sub_100064484(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  _BYTE v9[256];

  v3 = type metadata accessor for TTRIAccountsListsSelection(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v4);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002B1E8(a2, (uint64_t)v6, v7);
  v8 = (char *)&loc_100064548 + *((int *)qword_100064760 + swift_getEnumCaseMultiPayload(v6, v4));
  __asm { BR              X10 }
}

uint64_t sub_100064558()
{
  uint64_t v0;

  return sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
}

uint64_t sub_100064798(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t))
{
  uint64_t v9;
  uint64_t result;
  void *v11;
  uint64_t v12;
  _BYTE v13[24];

  v9 = a5 + 16;
  a3(0);
  swift_beginAccess(v9, v13, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v9);
  if (result)
  {
    v11 = (void *)result;
    v12 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_presenter);
    swift_unknownObjectRetain(v12);

    a7(a6);
    return swift_unknownObjectRelease(v12);
  }
  return result;
}

void sub_100064828(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v2 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a1, (uint64_t)v4, v5);
  v6 = (char *)sub_1000648B0 + 4 * byte_100521160[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_1000648B0()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  return 0;
}

void sub_100064938(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  _BYTE v7[224];

  v2 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002B1E8(a1, (uint64_t)v4, v5);
  v6 = (char *)sub_1000649D0 + 4 * byte_10052116E[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_1000649D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  result = sub_10001F544(v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  *(_OWORD *)v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_QWORD *)(v0 + 32) = 0;
  return result;
}

void sub_100064B64(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_10001A818();

  }
}

_QWORD *sub_100064BB4@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *result;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  __int16 v16;
  char v17;
  _QWORD v18[3];
  unsigned __int8 v19;
  char v20;

  v4 = *a1;
  v5 = *(unsigned __int8 *)(a2
                          + *(int *)(type metadata accessor for TTRAccountsListsViewModel.HashtagFilterOperation(0)
                                   + 24));
  v6 = (v5 == 2) | (((v4 ^ ((v5 & 1) == 0)) & 1) == 0);
  if (v4 == 1)
  {
    v7 = TTRAccountsListsViewModel.HashtagFilterOperation.Option.localizedOptionString.getter(1);
    v9 = v8;
    v17 = 1;
  }
  else
  {
    v7 = TTRAccountsListsViewModel.HashtagFilterOperation.Option.localizedOptionString.getter(0);
    v9 = v10;
    v17 = 0;
  }
  v11 = sub_1000771DC();
  result = TTRValueBasedMenuItem.init(title:image:state:value:)(v18, v7, v9, 0, v6, &v17, &type metadata for TTRAccountsListsViewModel.HashtagFilterOperation.Option, v11);
  v13 = v18[1];
  v14 = v18[2];
  v15 = v19;
  if (v20)
    v16 = 256;
  else
    v16 = 0;
  *(_QWORD *)a3 = v18[0];
  *(_QWORD *)(a3 + 8) = v13;
  *(_QWORD *)(a3 + 16) = v14;
  *(_WORD *)(a3 + 24) = v16 | v15;
  return result;
}

void sub_100064CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  _QWORD v28[13];
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v40 = a1;
  v4 = sub_10002A750(&qword_100641000);
  v42 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v6 = __chkstk_darwin(v5);
  v36 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = sub_10002A750(&qword_100646950);
  v9 = __chkstk_darwin(v8);
  v32 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v34 = (char *)v28 - v11;
  v39 = type metadata accessor for IndexPath(0);
  v35 = *(_QWORD *)(v39 - 8);
  v12 = __chkstk_darwin(v39);
  v28[6] = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v28[7] = (char *)v28 - v14;
  v44 = sub_10002A750(&qword_100641008);
  v15 = __chkstk_darwin(v44);
  v33 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v17);
  v30 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v43 = *(_QWORD *)(v29 - 8);
  v19 = __chkstk_darwin(v29);
  v20 = __chkstk_darwin(v19);
  v41 = (char *)v28 - v21;
  v22 = __chkstk_darwin(v20);
  __chkstk_darwin(v22);
  v37 = (char *)v28 - v23;
  v24 = sub_10002A750((uint64_t *)&unk_100640FE0);
  __chkstk_darwin(v24);
  v26 = (char *)v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v2;
  *(_BYTE *)(*(_QWORD *)(v2
                       + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_dropExceedsMaximumNumberOfPinnedListsTracker)
           + 16) = 0;
  v38 = a2;
  sub_1002B4D94((uint64_t)v26);
  v27 = (char *)&loc_10006501C + *((int *)qword_100066B98 + swift_getEnumCaseMultiPayload(v26, v24));
  __asm { BR              X10 }
}

uint64_t sub_10006502C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;

  v3 = *(_QWORD *)(v0 + *(int *)(sub_10002A750(&qword_100640FF8) + 48));
  sub_10001F580(v0, v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  v4 = sub_1002B8574(1);
  v5 = v4[2];
  if (v5)
  {
    if (v5 == 1)
    {
      if (qword_10063D2F0 != -1)
        swift_once(&qword_10063D2F0, sub_1000073DC);
      v6 = type metadata accessor for Logger(0);
      v7 = sub_100012DC4(v6, (uint64_t)qword_100640920);
      v8 = Logger.logObject.getter(v7);
      v9 = static os_log_type_t.fault.getter(v8);
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Unexpected: handling single item move in treeView(_:performDropWith:)", v10, 2u);
        swift_slowDealloc(v10, -1, -1);
      }

    }
    v11 = *(_QWORD *)(v2 - 400);
    sub_10002B1E8(v1, v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v2 - 288) + 56))(v11, 0, 1, *(_QWORD *)(v2 - 408));
    sub_1003382F4((uint64_t)v4, v11, v3, 0, 0);
    swift_bridgeObjectRelease(v4);
    sub_1000073A0(v11, (uint64_t *)&unk_100640E00);
    return sub_10001F544(v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  }
  else
  {
    sub_10001F544(v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    return swift_bridgeObjectRelease(v4);
  }
}

void sub_100066BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  _QWORD v12[18];

  v12[1] = a3;
  v12[2] = a4;
  v5 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v5);
  v6 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  v8 = sub_10002A750((uint64_t *)&unk_100640FE0);
  __chkstk_darwin(v8);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(a1, (uint64_t)v10, (uint64_t *)&unk_100640FE0);
  v11 = (char *)sub_100066CDC + 4 * byte_10052117C[swift_getEnumCaseMultiPayload(v10, v8)];
  __asm { BR              X10 }
}

uint64_t sub_100066CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;

  v6 = *(_QWORD *)(v4 + *(int *)(sub_10002A750(&qword_100640FF8) + 48));
  sub_10001F580(v4, v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  v7 = sub_10010755C();
  v8 = v7;
  if ((v9 & 1) != 0)
  {
    swift_bridgeObjectRelease(v7);
    sub_10001F544(v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v13 = 0;
  }
  else
  {
    v10 = *(_QWORD *)(*(_QWORD *)(v5 - 208) + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_presenter);
    sub_10002B1E8(v1, v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v0, 0, 1, v3);
    v11 = TTRAccountsListsPresenterCapability.paramsForMoving(_:into:atUnadjustedIndex:containerIsInEditMode:)(v8, v0, v6, 0, *(unsigned __int8 *)(v10 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_isEditing));
    if (v11)
    {
      v12 = v11;
      swift_beginAccess(v11 + 24, v5 - 120, 0, 0);
      v13 = *(_BYTE *)(v12 + 24) ^ 1;
      swift_beginAccess(v12 + 25, v5 - 160, 0, 0);
      v14 = *(_BYTE *)(v12 + 25);
      swift_bridgeObjectRelease(v8);
      swift_release(v12);
    }
    else
    {
      swift_bridgeObjectRelease(v8);
      v13 = 0;
      v14 = 0;
    }
    sub_1000073A0(v0, (uint64_t *)&unk_100640E00);
    sub_10001F544(v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    **(_BYTE **)(v5 - 216) = v14;
  }
  return v13 & 1;
}

void sub_100066F04(uint64_t a1, unint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  NSString v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = type metadata accessor for TTRIAccountsListsSelection(0);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!objc_msgSend(v2, "isViewLoaded"))
  {
    v19 = &v2[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_pendingSearchTerm];
    v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_pendingSearchTerm + 8];
    *(_QWORD *)v19 = a1;
    *((_QWORD *)v19 + 1) = a2;
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRelease(v20);
    return;
  }
  if (a2)
  {
    v8 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0)
      v8 = a1 & 0xFFFFFFFFFFFFLL;
    if (v8)
    {
      v9 = OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchController;
      v10 = *(void **)&v2[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchController];
      if (v10)
      {
        v11 = objc_msgSend(v10, "searchBar");
        v12 = String._bridgeToObjectiveC()();
        objc_msgSend(v11, "setText:", v12);

        v13 = *(void **)&v2[v9];
        if (v13)
        {
          v14 = objc_msgSend(v13, "searchBar");
          v15 = objc_msgSend(v14, "text");

          if (v15)
          {

            v16 = sub_10002A750((uint64_t *)&unk_100640DF0);
            v17 = swift_allocBox(v16);
            sub_100061874(v18);
            *v7 = v17;
            swift_storeEnumTagMultiPayload(v7, v5, 3);
            sub_1000620B0((uint64_t)v7, 4, 0);
            sub_10001F544((uint64_t)v7, type metadata accessor for TTRIAccountsListsSelection);
          }
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
  }
}

uint64_t sub_1000670CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel) = a2;
  swift_retain(a2);
  return swift_release(v2);
}

void sub_100067100(uint64_t a1)
{
  char *v1;
  char *v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;

  v2 = v1;
  if (objc_msgSend(v2, "isViewLoaded"))
  {
    v4 = objc_msgSend(v2, "view");
    if (v4)
    {
      v5 = v4;
      v6 = type metadata accessor for TTRIAccountsListsTreeView(0);
      v7 = swift_dynamicCastClass(v5, v6);
      if (v7)
      {
        v8 = *(void **)(__chkstk_darwin(v7) + qword_10065D8E0);
        if (v8)
        {
          v9 = v8;
          sub_1000FE74C(0, 0, 0, 0, (uint64_t)v9, (void (*)(uint64_t))sub_1000771AC);

          return;
        }
        __break(1u);
      }

    }
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
    __break(1u);
  }
  else
  {
    v10 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel];
    *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel] = a1;
    swift_retain(a1);
    swift_release(v10);
  }
}

uint64_t sub_100067284(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t (*v20)(_QWORD);
  BOOL v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t (*v33)(_QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  id v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v46 = sub_10002A750(&qword_100641018);
  v6 = __chkstk_darwin(v46);
  v50 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v49 = (uint64_t)&v42 - v8;
  v9 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v9);
  v51 = (uint64_t)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750(&qword_100641020);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v42 - v15;
  v17 = *(void **)&a1[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel];
  v47 = a1;
  *(_QWORD *)&a1[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel] = a2;
  swift_retain(a2);
  swift_release(v17);
  v18 = *(_QWORD *)(a3 + 16);
  v43 = a3;
  swift_bridgeObjectRetain(a3);
  v19 = 0;
  v20 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item;
  v44 = v18;
  v45 = v16;
  v21 = v18 == 0;
  if (v18)
    goto LABEL_3;
LABEL_2:
  v22 = sub_10002A750(&qword_100641028);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v14, 1, 1, v22);
  v23 = v18;
  while (1)
  {
    sub_10000F614((uint64_t)v14, (uint64_t)v16, &qword_100641020);
    v26 = sub_10002A750(&qword_100641028);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v16, 1, v26) == 1)
      return swift_bridgeObjectRelease(v43);
    v27 = (uint64_t)&v16[*(int *)(v26 + 48)];
    v28 = (uint64_t)&v16[*(int *)(v26 + 64)];
    sub_10001F580((uint64_t)v16, v51, v20);
    sub_10000F614(v27, v49, &qword_100641018);
    sub_10000F614(v28, v50, &qword_100641018);
    v29 = objc_msgSend(v47, "view");
    if (!v29)
      break;
    v17 = v29;
    v30 = type metadata accessor for TTRIAccountsListsTreeView(0);
    v31 = swift_dynamicCastClass(v17, v30);
    if (!v31)
      goto LABEL_14;
    v48 = v23;
    v32 = *(void **)(v31 + qword_10065D8E0);
    if (!v32)
      goto LABEL_13;
    v33 = v20;
    v34 = *(int *)(v46 + 36);
    v35 = v49;
    v36 = v50;
    v37 = *(_QWORD *)(v50 + v34);
    v38 = *(_QWORD *)(v49 + v34);
    v39 = v32;
    v40 = v51;
    sub_100311DA0(v51, v38, v35, v37, v36);

    sub_1000073A0(v36, &qword_100641018);
    sub_1000073A0(v35, &qword_100641018);
    v20 = v33;
    sub_10001F544(v40, v33);
    v18 = v44;
    v16 = v45;
    v19 = v48;
    v21 = v48 >= v44;
    if (v48 == v44)
      goto LABEL_2;
LABEL_3:
    if (v21)
    {
      __break(1u);
LABEL_13:
      __break(1u);
LABEL_14:

      break;
    }
    v24 = sub_10002A750(&qword_100641028);
    v25 = *(_QWORD *)(v24 - 8);
    sub_10000735C(v43+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(_QWORD *)(v25 + 72) * v19, (uint64_t)v14, &qword_100641028);
    v23 = v19 + 1;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v14, 0, 1, v24);
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
  __break(1u);
  return result;
}

uint64_t sub_100067654(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v25 = a1;
  v3 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750((uint64_t *)&unk_1006549F0);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100061874(v12);
  v17 = type metadata accessor for TTRIAccountsListsSelection(0);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v12, 1, v17) == 1)
    return sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_1006549F0);
  if (swift_getEnumCaseMultiPayload(v12, v17) != 2)
    return sub_10001F544((uint64_t)v12, type metadata accessor for TTRIAccountsListsSelection);
  (*(void (**)(char *, _QWORD *, uint64_t))(v14 + 32))(v16, v12, v13);
  v19 = sub_1000175C8((unint64_t *)&qword_100640E30, (uint64_t (*)(uint64_t))&type metadata accessor for REMHashtagLabelSpecifier, (uint64_t)&protocol conformance descriptor for REMHashtagLabelSpecifier);
  v20 = v25;
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v16, v25, v13, v19) & 1) != 0)
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_10000735C(*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_viewModel]+ direct field offset for TTRAccountsListsViewModel.hashtagsItem, (uint64_t)v5, (uint64_t *)&unk_100640E00);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_100640E00);
  }
  sub_10001F580((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  v21 = objc_msgSend(v2, "view");
  if (!v21)
  {
LABEL_14:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
    __break(1u);
    return result;
  }
  v22 = v21;
  v23 = type metadata accessor for TTRIAccountsListsTreeView(0);
  if (!swift_dynamicCastClass(v22, v23))
  {

    goto LABEL_14;
  }
  sub_10022CF6C((uint64_t)v9, v20, 0, 0);

  sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

void sub_100067988()
{
  void *v0;
  NSString v1;
  NSString v2;
  id v3;
  NSString v4;
  void *v5;
  void *v6;
  id v7;
  NSString v8;
  void *v9;
  id v10;
  void **v11;
  uint64_t v12;
  void (*v13)(uint64_t, void *);
  void *v14;
  void *v15;
  uint64_t v16;

  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v1, v2, 1);

  v4 = String._bridgeToObjectiveC()();
  v15 = sub_100067BC0;
  v16 = 0;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_1000D4884;
  v14 = &unk_1005ED140;
  v5 = _Block_copy(&v11);
  swift_release();
  v6 = (void *)objc_opt_self(UIAlertAction);
  v7 = objc_msgSend(v6, "actionWithTitle:style:handler:", v4, 1, v5);
  _Block_release(v5);

  v8 = String._bridgeToObjectiveC()();
  v15 = sub_100067C44;
  v16 = 0;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_1000D4884;
  v14 = &unk_1005ED168;
  v9 = _Block_copy(&v11);
  v10 = objc_msgSend(v6, "actionWithTitle:style:handler:", v8, 0, v9, swift_release().n128_f64[0]);
  _Block_release(v9);

  objc_msgSend(v3, "addAction:", v10);
  objc_msgSend(v3, "addAction:", v7);
  objc_msgSend(v0, "presentViewController:animated:completion:", v3, 1, 0);

}

double sub_100067BC0()
{
  uint64_t v0;
  unint64_t v1;
  double result;

  if (qword_10063D2F0 != -1)
    swift_once(&qword_10063D2F0, sub_1000073DC);
  v0 = type metadata accessor for Logger(0);
  sub_100012DC4(v0, (uint64_t)qword_100640920);
  v1 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"User tapped OK at migration fail prompt.", 40, 2, v1);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v1).n128_u64[0];
  return result;
}

uint64_t sub_100067C44()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  id v8;
  void *v9;
  uint64_t v10;

  v0 = sub_10002A750((uint64_t *)&unk_100640EE0);
  __chkstk_darwin(v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(0xD0000000000000A1, 0x8000000100560D50);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    v8 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
    if (v8)
    {
      v9 = v8;
      LSApplicationWorkspace.open(universalLink:)(v6);

    }
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

void sub_100067D70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  void *v8;
  id v9;
  unsigned int v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _BYTE v19[24];

  v2 = type metadata accessor for TTRIAccountsListsSelection(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)&v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (!Strong)
    return;
  v6 = (char *)Strong;
  v7 = OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchController;
  v8 = *(void **)(Strong + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchController);
  if (!v8)
  {
    __break(1u);
    goto LABEL_12;
  }
  v9 = objc_msgSend(v8, "searchBar");
  v10 = objc_msgSend(v9, "isFirstResponder");

  v11 = *(void **)&v6[v7];
  if (!v11)
  {
LABEL_12:
    __break(1u);
    return;
  }
  v12 = objc_msgSend(v11, "searchBar");
  v13 = objc_msgSend(v12, "text");

  if (v13)
  {

    v14 = sub_10002A750((uint64_t *)&unk_100640DF0);
    v15 = swift_allocBox(v14);
    sub_100061874(v16);
    *v4 = v15;
    swift_storeEnumTagMultiPayload(v4, v2, 3);
    if (v10)
      v17 = 0;
    else
      v17 = 4;
    sub_1000620B0((uint64_t)v4, v17, 0);
    sub_10001F544((uint64_t)v4, type metadata accessor for TTRIAccountsListsSelection);
  }

}

uint64_t sub_100067EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v3 = type metadata accessor for TTRIAccountsListsSelection(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for REMHashtagLabelSpecifier(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v5, a2, v6);
  swift_storeEnumTagMultiPayload(v5, v3, 2);
  sub_1000620B0((uint64_t)v5, 16, 0);
  return sub_10001F544((uint64_t)v5, type metadata accessor for TTRIAccountsListsSelection);
}

uint64_t sub_100067FA8(uint64_t a1, void *a2)
{
  return sub_100345F54(a2);
}

uint64_t sub_100067FB0(int a1, id a2)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = objc_msgSend(a2, "items");
  v3 = sub_100005ED8(0, (unint64_t *)&qword_100650570, UIDragItem_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  type metadata accessor for TTRIAccountsListsPresenter(0);
  v5 = sub_10033E9AC(v4);
  swift_bridgeObjectRelease(v4);
  return v5 & 1;
}

uint64_t sub_100068070(int a1, id a2, uint64_t a3, uint64_t a4)
{
  id v6;
  uint64_t v7;
  uint64_t v8;

  v6 = objc_msgSend(a2, "items");
  v7 = sub_100005ED8(0, (unint64_t *)&qword_100650570, UIDragItem_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  sub_10033911C(v8, a3, a4);
  return swift_bridgeObjectRelease(v8);
}

id sub_100068108(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  return sub_10033A91C(a2, a3, a4);
}

void **sub_10006813C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  return sub_10033C03C(a2, a3, a4);
}

void sub_100068170(void *a1)
{
  char v2;
  uint64_t v3;
  uint64_t v4;

  if ((objc_msgSend(a1, "isBeingDismissed") & 1) != 0)
  {
    v2 = 1;
  }
  else
  {
    v3 = type metadata accessor for TTRISearchController();
    v4 = swift_dynamicCastClass(a1, v3);
    if (v4)
      v2 = *(_BYTE *)(v4
                    + OBJC_IVAR____TtC9RemindersP33_6BFE23A799CB20D2DB7CA4EA96508B8A20TTRISearchController_ttri_isBeingDismissed);
    else
      v2 = 0;
  }
  if (objc_msgSend(a1, "isActive"))
  {
    if ((v2 & 1) == 0)
      sub_100068204(0);
  }
}

void sub_100068204(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t Strong;
  uint64_t v7;
  BOOL v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  v3 = type metadata accessor for TTRIAccountsListsSelection(0);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v1
                                                       + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_presenter) + 32);
  if (Strong)
  {
    v7 = Strong;
    v8 = sub_10001408C(Strong);
    swift_unknownObjectRelease(v7);
    if (v8)
    {
      v9 = *(void **)(v1
                    + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchResultContainerViewController);
      if (v9)
      {
        v10 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchController);
        if (v10)
        {
          v11 = v9;
          v12 = objc_msgSend(v10, "searchBar");
          v13 = objc_msgSend(v12, "text");

          if (v13)
          {
            v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
            v16 = v15;

          }
          else
          {
            v14 = 0;
            v16 = 0;
          }
          sub_1004356D4(v14, v16, a1 & 1);

          swift_bridgeObjectRelease(v16);
          return;
        }
LABEL_18:
        __break(1u);
        return;
      }
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
  }
  v17 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchController);
  if (!v17)
  {
    __break(1u);
    goto LABEL_17;
  }
  v18 = objc_msgSend(v17, "searchBar");
  v19 = objc_msgSend(v18, "text");

  if (v19)
  {

    v20 = sub_10002A750((uint64_t *)&unk_100640DF0);
    v21 = swift_allocBox(v20);
    sub_100061874(v22);
    *v5 = v21;
    swift_storeEnumTagMultiPayload(v5, v3, 3);
    if ((a1 & 1) != 0)
      v23 = 4;
    else
      v23 = 0;
    sub_1000620B0((uint64_t)v5, v23, 0);
    sub_10001F544((uint64_t)v5, type metadata accessor for TTRIAccountsListsSelection);
  }
}

uint64_t sub_100068454(void *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  BOOL v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  result = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v1
                                                       + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_presenter) + 32);
  if (result)
  {
    v4 = result;
    v5 = sub_10001408C(result);
    result = swift_unknownObjectRelease(v4);
    if (v5)
    {
      v6 = *(void **)(v1
                    + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchResultContainerViewController);
      if (v6)
      {
        v7 = v6;
        v8 = objc_msgSend(a1, "searchBar");
        v9 = objc_msgSend(v8, "text");

        if (v9)
        {
          v10 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
          v12 = v11;

        }
        else
        {
          v10 = 0;
          v12 = 0;
        }
        sub_100434DD4(v10, v12, 2u);

        return swift_bridgeObjectRelease(v12);
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t sub_100068610(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t Strong;
  uint64_t v30;
  BOOL v31;
  uint64_t result;
  unsigned int (*v33)(uint64_t *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  _BYTE v52[24];

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_100640DF0);
  __chkstk_darwin(v4);
  v51 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750((uint64_t *)&unk_1006549F0);
  v7 = __chkstk_darwin(v6);
  v50 = (uint64_t *)((char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __chkstk_darwin(v7);
  v48 = (uint64_t)&v47 - v10;
  v11 = __chkstk_darwin(v9);
  v13 = (uint64_t *)((char *)&v47 - v12);
  v14 = __chkstk_darwin(v11);
  v47 = (uint64_t)&v47 - v15;
  __chkstk_darwin(v14);
  v17 = (uint64_t *)((char *)&v47 - v16);
  v18 = type metadata accessor for TTRIAccountsListsSelection(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v49 = (uint64_t)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v20);
  v24 = (uint64_t *)((char *)&v47 - v23);
  __chkstk_darwin(v22);
  v26 = (char *)&v47 - v25;
  v27 = type metadata accessor for TTRISearchController();
  v28 = swift_dynamicCastClass(a1, v27);
  if (v28)
    *(_BYTE *)(v28
             + OBJC_IVAR____TtC9RemindersP33_6BFE23A799CB20D2DB7CA4EA96508B8A20TTRISearchController_ttri_isBeingDismissed) = 1;
  sub_10000F29C(0, 1);
  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v2
                                                       + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_presenter) + 32);
  if (!Strong || (v30 = Strong, v31 = sub_10001408C(Strong), result = swift_unknownObjectRelease(v30), !v31))
  {
    sub_100061874(v17);
    v33 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v19 + 48);
    if (v33(v17, 1, v18) == 1)
      return sub_1000073A0((uint64_t)v17, (uint64_t *)&unk_1006549F0);
    sub_10001F580((uint64_t)v17, (uint64_t)v26, type metadata accessor for TTRIAccountsListsSelection);
    sub_10002B1E8((uint64_t)v26, (uint64_t)v24, type metadata accessor for TTRIAccountsListsSelection);
    if (swift_getEnumCaseMultiPayload(v24, v18) != 3)
    {
      sub_10001F544((uint64_t)v26, type metadata accessor for TTRIAccountsListsSelection);
      v39 = (uint64_t)v24;
      return sub_10001F544(v39, type metadata accessor for TTRIAccountsListsSelection);
    }
    v34 = *v24;
    v35 = swift_projectBox(*v24);
    v36 = v51;
    sub_10000735C(v35, v51, (uint64_t *)&unk_1006549F0);
    sub_1000073A0(v36, (uint64_t *)&unk_1006549F0);
    swift_release(v34);
    v37 = v2 + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchSelection;
    swift_beginAccess(v2 + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_searchSelection, v52, 0, 0);
    sub_10000735C(v37, (uint64_t)v13, (uint64_t *)&unk_1006549F0);
    if (v33(v13, 1, v18) == 1)
    {
      v38 = (uint64_t)v13;
    }
    else
    {
      if (swift_getEnumCaseMultiPayload(v13, v18) != 3)
      {
        sub_10001F544((uint64_t)v13, type metadata accessor for TTRIAccountsListsSelection);
        goto LABEL_16;
      }
      v40 = *v13;
      v41 = swift_projectBox(*v13);
      sub_10000735C(v41, v36, (uint64_t *)&unk_1006549F0);
      v42 = v36;
      v43 = v47;
      sub_10000F614(v42, v47, (uint64_t *)&unk_1006549F0);
      swift_release(v40);
      v44 = v48;
      sub_10000F614(v43, v48, (uint64_t *)&unk_1006549F0);
      if (v33((uint64_t *)v44, 1, v18) != 1)
      {
LABEL_19:
        v46 = v49;
        sub_10001F580(v44, v49, type metadata accessor for TTRIAccountsListsSelection);
        sub_1000620B0(v46, 0, 0);
        sub_10001F544(v46, type metadata accessor for TTRIAccountsListsSelection);
        v39 = (uint64_t)v26;
        return sub_10001F544(v39, type metadata accessor for TTRIAccountsListsSelection);
      }
      v38 = v44;
    }
    sub_1000073A0(v38, (uint64_t *)&unk_1006549F0);
LABEL_16:
    v45 = v50;
    sub_100005804(v50);
    if (v33(v45, 1, v18) == 1)
    {
      sub_10001F544((uint64_t)v26, type metadata accessor for TTRIAccountsListsSelection);
      return sub_1000073A0((uint64_t)v45, (uint64_t *)&unk_1006549F0);
    }
    v44 = (uint64_t)v45;
    goto LABEL_19;
  }
  return result;
}

_WORD *initializeBufferWithCopyOfBuffer for TTRIAccountsListsViewController.BarButtonItemConfiguration(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TTRIAccountsListsViewController.BarButtonItemConfiguration(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x3FFE)
    goto LABEL_17;
  if (a2 + 49154 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 49154 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 49154;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 49154;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 49154;
  }
LABEL_17:
  v6 = (*a1 & 0x3E00 | (*a1 >> 14) & 0xFFFFFE03 | (4 * (*a1 >> 1))) ^ 0x3FFF;
  if (v6 >= 0x3FFD)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for TTRIAccountsListsViewController.BarButtonItemConfiguration(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;
  uint64_t v5;

  if (a3 + 49154 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 49154 < 0xFF0000)
    v4 = 1;
  else
    v4 = v3;
  if (a3 >= 0x3FFE)
    v5 = v4;
  else
    v5 = 0;
  if (a2 <= 0x3FFD)
    return ((uint64_t (*)(void))((char *)&loc_100068CC8 + 4 * byte_100521185[v5]))();
  *a1 = a2 - 16382;
  return ((uint64_t (*)(void))((char *)sub_100068D00 + 4 * byte_100521180[v5]))();
}

uint64_t sub_100068D00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_100068D08(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x100068D10);
  return result;
}

uint64_t sub_100068D30(uint64_t result, int a2)
{
  unsigned int v2;

  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x100068D38);
  v2 = ((-a2 >> 2) & 0xFFF) - (a2 << 12);
  *(_WORD *)result = (4 * v2) & 0xFE00 | (2 * (v2 & 0x7F));
  return result;
}

uint64_t sub_100068D3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_100068D44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_100068D50(unsigned __int16 *a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;

  v1 = *a1;
  v2 = (__int16)v1;
  v3 = v1 >> 14;
  v4 = (v1 & 1 | (2 * ((v1 >> 8) & 1))) + 2;
  if (v2 >= 0)
    return v3;
  else
    return v4;
}

_WORD *sub_100068D78(_WORD *result)
{
  *result &= 0x3FFFu;
  return result;
}

_WORD *sub_100068D88(_WORD *result, unsigned int a2)
{
  if (a2 < 2)
    *result = *result & 0x101 | ((_WORD)a2 << 14);
  else
    *result = (a2 & 1 | (((a2 >> 1) & 1) << 8)) ^ 0x8100;
  return result;
}

ValueMetadata *type metadata accessor for TTRIAccountsListsViewController.BarButtonItemConfiguration()
{
  return &type metadata for TTRIAccountsListsViewController.BarButtonItemConfiguration;
}

uint64_t sub_100068DD0(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t result;
  uint64_t v18;

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(v2, "view");
  if (!v11)
    goto LABEL_10;
  v12 = v11;
  v13 = type metadata accessor for TTRIAccountsListsTreeView(0);
  v14 = swift_dynamicCastClass(v12, v13);
  if (!v14)
  {
LABEL_9:

LABEL_10:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
    __break(1u);
    return result;
  }
  v15 = *(void **)(v14 + qword_10065D8E0);
  if (!v15)
  {
    __break(1u);
    goto LABEL_9;
  }
  v16 = v15;
  sub_100123BB0(a1, (uint64_t)v6);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640E00);
  sub_10001F580((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  sub_100332BF4((uint64_t)v10);
  return sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
}

uint64_t sub_100068FA8(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t result;
  uint64_t v19;

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(v2, "view", v9);
  if (!v12)
    goto LABEL_10;
  v13 = v12;
  v14 = type metadata accessor for TTRIAccountsListsTreeView(0);
  v15 = swift_dynamicCastClass(v13, v14);
  if (!v15)
  {
LABEL_9:

LABEL_10:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
    __break(1u);
    return result;
  }
  v16 = *(void **)(v15 + qword_10065D8E0);
  if (!v16)
  {
    __break(1u);
    goto LABEL_9;
  }
  v17 = v16;
  sub_100123BB0(a1, (uint64_t)v6);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640E00);
  sub_10001F580((uint64_t)v6, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  sub_100333AA0((uint64_t)v11);
  return sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
}

uint64_t sub_100069184(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v24 - v13;
  v15 = objc_msgSend(v2, "view", v12);
  if (!v15)
    goto LABEL_13;
  v16 = v15;
  v17 = type metadata accessor for TTRIAccountsListsTreeView(0);
  v18 = swift_dynamicCastClass(v16, v17);
  if (!v18)
  {
LABEL_12:

LABEL_13:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
    __break(1u);
    return result;
  }
  v19 = *(void **)(v18 + qword_10065D8E0);
  if (!v19)
  {
    __break(1u);
    goto LABEL_12;
  }
  v20 = v19;
  sub_100123BB0(a1, (uint64_t)v6);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640E00);
  }
  else
  {
    sub_10001F580((uint64_t)v6, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_10002B1E8((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v10, v7) == 13)
    {
      v21 = *(void **)v10;
      v22 = *((_QWORD *)v10 + 2);
      sub_100335000(*(void **)v10, *((_QWORD *)v10 + 3));
      swift_bridgeObjectRelease(v22);

      sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      return 1;
    }
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  }
  return 0;
}

void sub_1000693E8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_100076108(a3);
}

uint64_t sub_1000693F4()
{
  return sub_1000175C8(&qword_100640B58, (uint64_t (*)(uint64_t))&type metadata accessor for TTRAccountsListsViewModel.Item, (uint64_t)&unk_1005375FC);
}

uint64_t sub_100069420(uint64_t a1)
{
  uint64_t result;

  result = sub_1000175C8(&qword_100640C10, type metadata accessor for TTRIAccountsListsViewController, (uint64_t)&unk_100521404);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10006945C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  int v20;
  void (*v21)(__int128 *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  unsigned int *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  void (*v35)(char *, uint64_t);
  __int128 v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unsigned __int8 v43;
  _BYTE v44[32];

  v2 = type metadata accessor for TTRIAccountsListsSelection(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v39 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for REMHashtagLabelSpecifier.Operation(0);
  v42 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v41 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750((uint64_t *)&unk_1006549F0);
  __chkstk_darwin(v6);
  v8 = (_QWORD *)((char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (__int128 *)((char *)&v36 - v14);
  __chkstk_darwin(v16);
  v18 = (char *)&v36 - v17;
  sub_100028CFC(a1, (uint64_t)v44);
  result = swift_dynamicCast(&v43, v44, &type metadata for Any[8], &type metadata for TTRAccountsListsViewModel.HashtagFilterOperation.Option, 6);
  if ((result & 1) != 0)
  {
    v20 = v43;
    sub_100061874(v8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
    {
      return sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_1006549F0);
    }
    else if (swift_getEnumCaseMultiPayload(v8, v2) == 2)
    {
      (*(void (**)(char *, _QWORD *, uint64_t))(v10 + 32))(v18, v8, v9);
      v21 = *(void (**)(__int128 *, char *, uint64_t))(v10 + 16);
      v21(v15, v18, v9);
      v22 = (*(uint64_t (**)(__int128 *, uint64_t))(v10 + 88))(v15, v9);
      v23 = v22;
      if ((_DWORD)v22 == enum case for REMHashtagLabelSpecifier.labels(_:))
      {
        (*(void (**)(__int128 *, uint64_t))(v10 + 96))(v15, v9);
        v24 = *(void (**)(char *, uint64_t))(v42 + 104);
        v25 = (unsigned int *)&enum case for REMHashtagLabelSpecifier.Operation.and(_:);
        if (!v20)
          v25 = (unsigned int *)&enum case for REMHashtagLabelSpecifier.Operation.or(_:);
        v26 = *v25;
        v36 = *v15;
        v27 = v41;
        v37 = (void (*)(char *, char *, uint64_t))v21;
        v28 = v40;
        v24(v41, v26);
        v29 = *(int *)(sub_10002A750((uint64_t *)&unk_1006651D0) + 64);
        v38 = (char *)v15 + v29;
        *(_OWORD *)v12 = v36;
        v30 = v42;
        v31 = v27;
        v32 = v28;
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(&v12[v29], v31, v28);
        (*(void (**)(char *, uint64_t, uint64_t))(v10 + 104))(v12, v23, v9);
        v33 = (uint64_t)v39;
        v37(v39, v12, v9);
        swift_storeEnumTagMultiPayload(v33, v2, 2);
        sub_1000620B0(v33, 16, 0);
        sub_10001F544(v33, type metadata accessor for TTRIAccountsListsSelection);
        v34 = *(void (**)(char *, uint64_t))(v10 + 8);
        v34(v12, v9);
        v35 = *(void (**)(char *, uint64_t))(v30 + 8);
        v35(v41, v32);
        v34(v18, v9);
        return ((uint64_t (*)(char *, uint64_t))v35)(v38, v32);
      }
      else if ((_DWORD)v22 == enum case for REMHashtagLabelSpecifier.allLabels(_:)
             || (_DWORD)v22 == enum case for REMHashtagLabelSpecifier.noLabels(_:))
      {
        return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v18, v9);
      }
      else
      {
        result = _diagnoseUnexpectedEnumCase<A>(type:)(v9, v9);
        __break(1u);
      }
    }
    else
    {
      return sub_10001F544((uint64_t)v8, type metadata accessor for TTRIAccountsListsSelection);
    }
  }
  return result;
}

void *sub_100069818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *result;
  _BYTE v6[24];

  v4 = a4 + 16;
  swift_beginAccess(a4 + 16, v6, 0, 0);
  result = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (result)
  {

    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100069868(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t i;

  v3 = v2;
  v5 = *(_QWORD *)(v2 + 16);
  v39 = v5 + 64;
  v6 = 1 << *(_BYTE *)(v5 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(v5 + 64);
  v38 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain(v5);
  v10 = 0;
  for (i = v9; ; v9 = i)
  {
    do
    {
      if (v8)
      {
        v12 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v13 = v12 | (v10 << 6);
      }
      else
      {
        v14 = v10 + 1;
        if (__OFADD__(v10, 1))
          goto LABEL_36;
        if (v14 >= v38)
        {
LABEL_33:
          swift_release();
          return;
        }
        v15 = *(_QWORD *)(v39 + 8 * v14);
        ++v10;
        if (!v15)
        {
          v10 = v14 + 1;
          if (v14 + 1 >= v38)
            goto LABEL_33;
          v15 = *(_QWORD *)(v39 + 8 * v10);
          if (!v15)
          {
            v16 = v14 + 2;
            if (v16 >= v38)
              goto LABEL_33;
            v15 = *(_QWORD *)(v39 + 8 * v16);
            if (!v15)
            {
              while (1)
              {
                v10 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_37;
                if (v10 >= v38)
                  goto LABEL_33;
                v15 = *(_QWORD *)(v39 + 8 * v10);
                ++v16;
                if (v15)
                  goto LABEL_19;
              }
            }
            v10 = v16;
          }
        }
LABEL_19:
        v8 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      v17 = 8 * v13;
      v18 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + v17);
    }
    while (v18 < a1);
    v19 = v18 + a2;
    if (__OFADD__(v18, a2))
      break;
    v20 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + v17);
    swift_retain_n(v20, 2);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v3 + 16));
    v22 = *(_QWORD **)(v3 + 16);
    v23 = v3;
    *(_QWORD *)(v3 + 16) = 0x8000000000000000;
    v25 = sub_1002AA398(v20);
    v26 = v22[2];
    v27 = (v24 & 1) == 0;
    v28 = v26 + v27;
    if (__OFADD__(v26, v27))
      goto LABEL_35;
    v29 = v24;
    if (v22[3] >= v28)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v32 = v22;
        if ((v24 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1002AE404();
        v32 = v22;
        if ((v29 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_10045762C(v28, isUniquelyReferenced_nonNull_native);
      v30 = sub_1002AA398(v20);
      if ((v29 & 1) != (v31 & 1))
        goto LABEL_39;
      v25 = v30;
      v32 = v22;
      if ((v29 & 1) != 0)
      {
LABEL_4:
        *(_QWORD *)(v32[7] + 8 * v25) = v19;
        goto LABEL_5;
      }
    }
    v32[(v25 >> 6) + 8] |= 1 << v25;
    v33 = 8 * v25;
    *(_QWORD *)(v32[6] + v33) = v20;
    *(_QWORD *)(v32[7] + v33) = v19;
    v34 = v32[2];
    v35 = __OFADD__(v34, 1);
    v36 = v34 + 1;
    if (v35)
      goto LABEL_38;
    v32[2] = v36;
    swift_retain();
LABEL_5:
    v3 = v23;
    v11 = *(_QWORD *)(v23 + 16);
    *(_QWORD *)(v23 + 16) = v32;
    swift_release_n(v20, 2);
    swift_bridgeObjectRelease(v11);
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  v37 = sub_10002A750(&qword_1006463D0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v37);
  __break(1u);
}

uint64_t sub_100069B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100069E44(a1, a2, a3, sub_1002AA398, (void (*)(uint64_t))sub_10045762C, &qword_1006463D0, (void (*)(uint64_t))sub_1002AE404);
}

uint64_t sub_100069B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v41;
  int64_t v42;
  int64_t v43;

  v3 = v2;
  v5 = *(_QWORD *)(v2 + 16);
  v41 = v5 + 64;
  v6 = 1 << *(_BYTE *)(v5 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(v5 + 64);
  v42 = (unint64_t)(v6 + 63) >> 6;
  v9 = swift_bridgeObjectRetain(v5);
  v10 = 0;
  while (v8)
  {
    v12 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v13 = v12 | (v10 << 6);
LABEL_22:
    v17 = 8 * v13;
    v18 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + v17);
    if (v18 >= a1)
    {
      v19 = v18 + a2;
      if (__OFADD__(v18, a2))
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      v43 = v10;
      v20 = v9;
      v21 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + v17);
      swift_retain(v21);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v3 + 16));
      v23 = *(_QWORD **)(v3 + 16);
      v24 = v3;
      *(_QWORD *)(v3 + 16) = 0x8000000000000000;
      v26 = sub_1002AA398(v21);
      v27 = v23[2];
      v28 = (v25 & 1) == 0;
      v29 = v27 + v28;
      if (__OFADD__(v27, v28))
        goto LABEL_37;
      v30 = v25;
      if (v23[3] >= v29)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v33 = v23;
          if ((v25 & 1) != 0)
            goto LABEL_4;
        }
        else
        {
          sub_1002AF55C();
          v33 = v23;
          if ((v30 & 1) != 0)
            goto LABEL_4;
        }
      }
      else
      {
        sub_1004592B0(v29, isUniquelyReferenced_nonNull_native);
        v31 = sub_1002AA398(v21);
        if ((v30 & 1) != (v32 & 1))
          goto LABEL_41;
        v26 = v31;
        v33 = v23;
        if ((v30 & 1) != 0)
        {
LABEL_4:
          *(_QWORD *)(v33[7] + 8 * v26) = v19;
          goto LABEL_5;
        }
      }
      v33[(v26 >> 6) + 8] |= 1 << v26;
      v34 = 8 * v26;
      *(_QWORD *)(v33[6] + v34) = v21;
      *(_QWORD *)(v33[7] + v34) = v19;
      v35 = v33[2];
      v36 = __OFADD__(v35, 1);
      v37 = v35 + 1;
      if (v36)
        goto LABEL_39;
      v33[2] = v37;
      swift_retain(v21);
LABEL_5:
      v3 = v24;
      v11 = *(_QWORD *)(v24 + 16);
      *(_QWORD *)(v24 + 16) = v33;
      swift_release(v21);
      swift_bridgeObjectRelease(v11);
      v9 = v20;
      v10 = v43;
    }
  }
  v14 = v10 + 1;
  if (__OFADD__(v10, 1))
    goto LABEL_38;
  if (v14 >= v42)
    return swift_release(v9);
  v15 = *(_QWORD *)(v41 + 8 * v14);
  ++v10;
  if (v15)
    goto LABEL_21;
  v10 = v14 + 1;
  if (v14 + 1 >= v42)
    return swift_release(v9);
  v15 = *(_QWORD *)(v41 + 8 * v10);
  if (v15)
    goto LABEL_21;
  v10 = v14 + 2;
  if (v14 + 2 >= v42)
    return swift_release(v9);
  v15 = *(_QWORD *)(v41 + 8 * v10);
  if (v15)
  {
LABEL_21:
    v8 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
    goto LABEL_22;
  }
  v16 = v14 + 3;
  if (v16 >= v42)
    return swift_release(v9);
  v15 = *(_QWORD *)(v41 + 8 * v16);
  if (v15)
  {
    v10 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v42)
      return swift_release(v9);
    v15 = *(_QWORD *)(v41 + 8 * v10);
    ++v16;
    if (v15)
      goto LABEL_21;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  v39 = sub_10002A750((uint64_t *)&unk_100640E20);
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v39);
  __break(1u);
  return result;
}

uint64_t sub_100069E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100069E44(a1, a2, a3, sub_1002AA398, (void (*)(uint64_t))sub_1004592B0, (uint64_t *)&unk_100640E20, (void (*)(uint64_t))sub_1002AF55C);
}

uint64_t sub_100069E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), void (*a5)(uint64_t), uint64_t *a6, void (*a7)(uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v50;
  uint64_t v52;
  int64_t v53;
  int64_t v55;

  v8 = v7;
  v11 = *(_QWORD *)(v8 + 16);
  v52 = v11 + 64;
  v12 = 1 << *(_BYTE *)(v11 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v11 + 64);
  v53 = (unint64_t)(v12 + 63) >> 6;
  v15 = swift_bridgeObjectRetain(v11);
  v16 = 0;
  v50 = a1;
  while (v14)
  {
    v18 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v19 = v18 | (v16 << 6);
LABEL_22:
    v23 = 8 * v19;
    v24 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + v23);
    if (v24 >= a1 && v24 <= a2)
    {
      v26 = v24 + a3;
      if (__OFADD__(v24, a3))
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      v55 = v16;
      v27 = v15;
      v28 = *(_QWORD *)(*(_QWORD *)(v15 + 48) + v23);
      swift_retain(v28);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v8 + 16));
      v30 = *(_QWORD **)(v8 + 16);
      v31 = v8;
      *(_QWORD *)(v8 + 16) = 0x8000000000000000;
      v33 = a4(v28);
      v34 = v30[2];
      v35 = (v32 & 1) == 0;
      v36 = v34 + v35;
      if (__OFADD__(v34, v35))
        goto LABEL_41;
      v37 = v32;
      if (v30[3] >= v36)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v40 = v30;
          if ((v32 & 1) != 0)
            goto LABEL_4;
        }
        else
        {
          a7(v36);
          v40 = v30;
          if ((v37 & 1) != 0)
            goto LABEL_4;
        }
      }
      else
      {
        a5(v36);
        v38 = a4(v28);
        if ((v37 & 1) != (v39 & 1))
          goto LABEL_45;
        v33 = v38;
        v40 = v30;
        if ((v37 & 1) != 0)
        {
LABEL_4:
          *(_QWORD *)(v40[7] + 8 * v33) = v26;
          goto LABEL_5;
        }
      }
      v40[(v33 >> 6) + 8] |= 1 << v33;
      v41 = 8 * v33;
      *(_QWORD *)(v40[6] + v41) = v28;
      *(_QWORD *)(v40[7] + v41) = v26;
      v42 = v40[2];
      v43 = __OFADD__(v42, 1);
      v44 = v42 + 1;
      if (v43)
        goto LABEL_43;
      v40[2] = v44;
      swift_retain(v28);
LABEL_5:
      v8 = v31;
      v17 = *(_QWORD *)(v31 + 16);
      *(_QWORD *)(v31 + 16) = v40;
      swift_release(v28);
      swift_bridgeObjectRelease(v17);
      v15 = v27;
      a1 = v50;
      v16 = v55;
    }
  }
  v20 = v16 + 1;
  if (__OFADD__(v16, 1))
    goto LABEL_42;
  if (v20 >= v53)
    return swift_release(v15);
  v21 = *(_QWORD *)(v52 + 8 * v20);
  ++v16;
  if (v21)
    goto LABEL_21;
  v16 = v20 + 1;
  if (v20 + 1 >= v53)
    return swift_release(v15);
  v21 = *(_QWORD *)(v52 + 8 * v16);
  if (v21)
    goto LABEL_21;
  v16 = v20 + 2;
  if (v20 + 2 >= v53)
    return swift_release(v15);
  v21 = *(_QWORD *)(v52 + 8 * v16);
  if (v21)
  {
LABEL_21:
    v14 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v16 << 6);
    goto LABEL_22;
  }
  v22 = v20 + 3;
  if (v22 >= v53)
    return swift_release(v15);
  v21 = *(_QWORD *)(v52 + 8 * v22);
  if (v21)
  {
    v16 = v22;
    goto LABEL_21;
  }
  while (1)
  {
    v16 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v16 >= v53)
      return swift_release(v15);
    v21 = *(_QWORD *)(v52 + 8 * v16);
    ++v22;
    if (v21)
      goto LABEL_21;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  v46 = sub_10002A750(a6);
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v46);
  __break(1u);
  return result;
}

void sub_10006A14C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  char v41[24];

  v3 = v2;
  v37 = a2;
  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v5);
  v39 = (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v7);
  v38 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
  {
LABEL_26:
    if (a1 < 0)
      v34 = a1;
    else
      v34 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v9 = _CocoaArrayWrapper.endIndex.getter(v34);
    if (v9)
      goto LABEL_3;
LABEL_30:
    swift_bridgeObjectRelease(a1);
    return;
  }
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v9)
    goto LABEL_30;
LABEL_3:
  v36 = a1 & 0xC000000000000001;
  v10 = 4;
  while (1)
  {
    v12 = v10 - 4;
    if (v36)
    {
      v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10 - 4, a1);
      v14 = v10 - 3;
      if (__OFADD__(v12, 1))
        goto LABEL_23;
    }
    else
    {
      v13 = *(_QWORD *)(a1 + 8 * v10);
      swift_retain();
      v14 = v10 - 3;
      if (__OFADD__(v12, 1))
      {
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
    }
    v15 = v13 + *(_QWORD *)(*(_QWORD *)v13 + 144);
    swift_beginAccess(v15, v41, 0, 0);
    v16 = v39;
    v17 = sub_10002B1E8(v15, v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v18 = (uint64_t)v38;
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v17);
    sub_10001F544(v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10006AD10(v18, v13);
    sub_10001F544(v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v3 + 16));
    v40 = *(_QWORD **)(v3 + 16);
    v20 = v40;
    *(_QWORD *)(v3 + 16) = 0x8000000000000000;
    v22 = sub_1002AA398(v13);
    v23 = v20[2];
    v24 = (v21 & 1) == 0;
    v25 = v23 + v24;
    if (__OFADD__(v23, v24))
      goto LABEL_24;
    v26 = v21;
    if (v20[3] < v25)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v29 = v40;
      if ((v21 & 1) != 0)
        goto LABEL_4;
    }
    else
    {
      sub_1002AE404();
      v29 = v40;
      if ((v26 & 1) != 0)
      {
LABEL_4:
        *(_QWORD *)(v29[7] + 8 * v22) = v37;
        goto LABEL_5;
      }
    }
LABEL_18:
    v29[(v22 >> 6) + 8] |= 1 << v22;
    v30 = 8 * v22;
    *(_QWORD *)(v29[6] + v30) = v13;
    *(_QWORD *)(v29[7] + v30) = v37;
    v31 = v29[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_25;
    v29[2] = v33;
    swift_retain();
LABEL_5:
    v11 = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(v3 + 16) = v29;
    swift_release_n(v13, 2);
    swift_bridgeObjectRelease(v11);
    ++v10;
    if (v14 == v9)
      goto LABEL_30;
  }
  sub_10045762C(v25, isUniquelyReferenced_nonNull_native);
  v27 = sub_1002AA398(v13);
  if ((v26 & 1) == (v28 & 1))
  {
    v22 = v27;
    v29 = v40;
    if ((v26 & 1) != 0)
      goto LABEL_4;
    goto LABEL_18;
  }
  v35 = sub_10002A750(&qword_1006463D0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v35);
  __break(1u);
}

void sub_10006A484(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char v43[24];

  v6 = v5;
  v39 = a5;
  v41 = a2;
  v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v10);
  v40 = (uint64_t)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a4 >> 1;
  if (a4 >> 1 == a3)
    return;
  swift_unknownObjectRetain(a1);
  while (a3 < v15)
  {
    v17 = *(_QWORD *)(v41 + 8 * a3);
    v18 = v17 + *(_QWORD *)(*(_QWORD *)v17 + 144);
    swift_beginAccess(v18, v43, 0, 0);
    v19 = v18;
    v20 = v40;
    sub_10002B1E8(v19, v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v21 = swift_retain();
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v21);
    sub_10001F544(v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10006AD10((uint64_t)v14, v17);
    sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v6 + 16));
    v42 = *(_QWORD **)(v6 + 16);
    v23 = v42;
    *(_QWORD *)(v6 + 16) = 0x8000000000000000;
    v25 = sub_1002AA398(v17);
    v26 = v23[2];
    v27 = (v24 & 1) == 0;
    v28 = v26 + v27;
    if (__OFADD__(v26, v27))
      goto LABEL_20;
    v29 = v24;
    if (v23[3] >= v28)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v32 = v42;
        if ((v24 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1002AE404();
        v32 = v42;
        if ((v29 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_10045762C(v28, isUniquelyReferenced_nonNull_native);
      v30 = sub_1002AA398(v17);
      if ((v29 & 1) != (v31 & 1))
        goto LABEL_22;
      v25 = v30;
      v32 = v42;
      if ((v29 & 1) != 0)
      {
LABEL_3:
        *(_QWORD *)(v32[7] + 8 * v25) = v39;
        goto LABEL_4;
      }
    }
    v32[(v25 >> 6) + 8] |= 1 << v25;
    v33 = 8 * v25;
    *(_QWORD *)(v32[6] + v33) = v17;
    *(_QWORD *)(v32[7] + v33) = v39;
    v34 = v32[2];
    v35 = __OFADD__(v34, 1);
    v36 = v34 + 1;
    if (v35)
      goto LABEL_21;
    v32[2] = v36;
    swift_retain();
LABEL_4:
    ++a3;
    v16 = *(_QWORD *)(v6 + 16);
    *(_QWORD *)(v6 + 16) = v32;
    swift_release();
    swift_bridgeObjectRelease(v16);
    if (v15 == a3)
    {
      swift_unknownObjectRelease(a1);
      return;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  v37 = sub_10002A750(&qword_1006463D0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v37);
  __break(1u);
}

uint64_t sub_10006A734(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  char v42[24];

  v3 = v2;
  v38 = a2;
  v5 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v5);
  v40 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  __chkstk_darwin(v7);
  v39 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
  {
LABEL_26:
    if (a1 < 0)
      v34 = a1;
    else
      v34 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v9 = _CocoaArrayWrapper.endIndex.getter(v34);
    if (v9)
      goto LABEL_3;
    return swift_bridgeObjectRelease(a1);
  }
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v9)
    return swift_bridgeObjectRelease(a1);
LABEL_3:
  v37 = a1 & 0xC000000000000001;
  for (i = 4; ; ++i)
  {
    v12 = i - 4;
    if (v37)
    {
      v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1);
      v14 = i - 3;
      if (__OFADD__(v12, 1))
        goto LABEL_23;
    }
    else
    {
      v13 = *(_QWORD *)(a1 + 8 * i);
      swift_retain(v13);
      v14 = i - 3;
      if (__OFADD__(v12, 1))
      {
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
    }
    v15 = v13 + *(_QWORD *)(*(_QWORD *)v13 + 144);
    swift_beginAccess(v15, v42, 0, 0);
    v16 = v40;
    v17 = sub_10002B1E8(v15, v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v18 = (uint64_t)v39;
    TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v17);
    sub_10001F544(v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_10006B068(v18, v13);
    sub_10001F544(v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v3 + 16));
    v41 = *(_QWORD **)(v3 + 16);
    v20 = v41;
    *(_QWORD *)(v3 + 16) = 0x8000000000000000;
    v22 = sub_1002AA398(v13);
    v23 = v20[2];
    v24 = (v21 & 1) == 0;
    v25 = v23 + v24;
    if (__OFADD__(v23, v24))
      goto LABEL_24;
    v26 = v21;
    if (v20[3] < v25)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v29 = v41;
      if ((v21 & 1) != 0)
        goto LABEL_4;
    }
    else
    {
      sub_1002AF55C();
      v29 = v41;
      if ((v26 & 1) != 0)
      {
LABEL_4:
        *(_QWORD *)(v29[7] + 8 * v22) = v38;
        goto LABEL_5;
      }
    }
LABEL_18:
    v29[(v22 >> 6) + 8] |= 1 << v22;
    v30 = 8 * v22;
    *(_QWORD *)(v29[6] + v30) = v13;
    *(_QWORD *)(v29[7] + v30) = v38;
    v31 = v29[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_25;
    v29[2] = v33;
    swift_retain(v13);
LABEL_5:
    v11 = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(v3 + 16) = v29;
    swift_release(v13);
    swift_bridgeObjectRelease(v11);
    if (v14 == v9)
      return swift_bridgeObjectRelease(a1);
  }
  sub_1004592B0(v25, isUniquelyReferenced_nonNull_native);
  v27 = sub_1002AA398(v13);
  if ((v26 & 1) == (v28 & 1))
  {
    v22 = v27;
    v29 = v41;
    if ((v26 & 1) != 0)
      goto LABEL_4;
    goto LABEL_18;
  }
  v36 = sub_10002A750((uint64_t *)&unk_100640E20);
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v36);
  __break(1u);
  return result;
}

uint64_t sub_10006AA60(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char v44[24];

  v6 = v5;
  v40 = a5;
  v42 = a2;
  v10 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v10);
  v41 = (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  result = __chkstk_darwin(v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a4 >> 1;
  if (a4 >> 1 == a3)
    return result;
  swift_unknownObjectRetain(a1);
  while (a3 < v16)
  {
    v18 = *(_QWORD *)(v42 + 8 * a3);
    v19 = v18 + *(_QWORD *)(*(_QWORD *)v18 + 144);
    swift_beginAccess(v19, v44, 0, 0);
    v20 = v19;
    v21 = v41;
    sub_10002B1E8(v20, v41, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v22 = swift_retain(v18);
    TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v22);
    sub_10001F544(v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_10006B068((uint64_t)v15, v18);
    sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v6 + 16));
    v43 = *(_QWORD **)(v6 + 16);
    v24 = v43;
    *(_QWORD *)(v6 + 16) = 0x8000000000000000;
    v26 = sub_1002AA398(v18);
    v27 = v24[2];
    v28 = (v25 & 1) == 0;
    v29 = v27 + v28;
    if (__OFADD__(v27, v28))
      goto LABEL_20;
    v30 = v25;
    if (v24[3] >= v29)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v33 = v43;
        if ((v25 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1002AF55C();
        v33 = v43;
        if ((v30 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1004592B0(v29, isUniquelyReferenced_nonNull_native);
      v31 = sub_1002AA398(v18);
      if ((v30 & 1) != (v32 & 1))
        goto LABEL_22;
      v26 = v31;
      v33 = v43;
      if ((v30 & 1) != 0)
      {
LABEL_3:
        *(_QWORD *)(v33[7] + 8 * v26) = v40;
        goto LABEL_4;
      }
    }
    v33[(v26 >> 6) + 8] |= 1 << v26;
    v34 = 8 * v26;
    *(_QWORD *)(v33[6] + v34) = v18;
    *(_QWORD *)(v33[7] + v34) = v40;
    v35 = v33[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
      goto LABEL_21;
    v33[2] = v37;
    swift_retain(v18);
LABEL_4:
    ++a3;
    v17 = *(_QWORD *)(v6 + 16);
    *(_QWORD *)(v6 + 16) = v33;
    swift_release(v18);
    swift_bridgeObjectRelease(v17);
    if (v16 == a3)
      return swift_unknownObjectRelease(a1);
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  v38 = sub_10002A750((uint64_t *)&unk_100640E20);
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v38);
  __break(1u);
  return result;
}

uint64_t sub_10006AD10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t inited;
  Swift::Int v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _BYTE v42[40];

  v3 = v2;
  v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v39 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v39 - v16;
  if (!*(_QWORD *)(*(_QWORD *)(v2 + 8) + 16) || (sub_1002AA39C(a1), (v18 & 1) == 0))
  {
    sub_10002B1E8(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v28 = sub_10002A750((uint64_t *)&unk_1006415A0);
    inited = swift_initStackObject(v28, v42);
    *(_OWORD *)(inited + 16) = xmmword_100521140;
    *(_QWORD *)(inited + 32) = a2;
    v41 = inited;
    specialized Array._endMutation()(inited);
    v30 = v41;
    if (v41 >> 62)
    {
      if ((v41 & 0x8000000000000000) != 0)
        v34 = v41;
      else
        v34 = v41 & 0xFFFFFFFFFFFFFF8;
      swift_retain();
      swift_bridgeObjectRetain(v30);
      v35 = _CocoaArrayWrapper.endIndex.getter(v34);
      swift_bridgeObjectRelease(v30);
      if (v35)
        goto LABEL_10;
    }
    else
    {
      v31 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      if (v31)
      {
LABEL_10:
        v32 = (void *)sub_10048D1A8(v30);
LABEL_19:
        swift_bridgeObjectRelease(v30);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v3 + 8));
        v41 = *(_QWORD *)(v3 + 8);
        *(_QWORD *)(v3 + 8) = 0x8000000000000000;
        sub_100096D98((uint64_t)v32, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
        v37 = *(_QWORD *)(v3 + 8);
        *(_QWORD *)(v3 + 8) = v41;
        swift_bridgeObjectRelease(v37);
        v33 = (uint64_t)v8;
        return sub_10001F544(v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      }
    }
    v32 = &_swiftEmptySetSingleton;
    goto LABEL_19;
  }
  sub_10002B1E8(a1, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  sub_10002B1E8((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  swift_retain();
  v19 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v2 + 8));
  sub_10002B1E8((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v40 = *(_QWORD *)(v2 + 8);
  v20 = v40;
  *(_QWORD *)(v3 + 8) = 0x8000000000000000;
  v22 = sub_1002AA39C((uint64_t)v11);
  v23 = *(_QWORD *)(v20 + 16);
  v24 = (v21 & 1) == 0;
  v25 = v23 + v24;
  if (__OFADD__(v23, v24))
  {
    __break(1u);
    goto LABEL_22;
  }
  LOBYTE(a1) = v21;
  if (*(_QWORD *)(v20 + 24) >= v25)
  {
    if ((v19 & 1) != 0)
    {
      if ((v21 & 1) != 0)
      {
LABEL_13:
        v39 = *(_QWORD *)(*(_QWORD *)(v40 + 56) + 8 * v22);
        sub_100480BE8((uint64_t *)&v41, a2);
        swift_release();
        sub_1000721AC(&v39, 1, &v40, v22, (uint64_t)v11);
        swift_bridgeObjectRelease(v39);
        sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        *(_QWORD *)(v3 + 8) = v40;
        sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        v33 = (uint64_t)v17;
        return sub_10001F544(v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
LABEL_22:
    sub_1002AE58C();
    if ((a1 & 1) != 0)
      goto LABEL_13;
    goto LABEL_23;
  }
  sub_1004578F4(v25, v19);
  v26 = sub_1002AA39C((uint64_t)v11);
  if ((a1 & 1) == (v27 & 1))
  {
    v22 = v26;
    if ((a1 & 1) == 0)
      goto LABEL_23;
    goto LABEL_13;
  }
LABEL_24:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

uint64_t sub_10006B068(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t inited;
  Swift::Int v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _BYTE v42[40];

  v3 = v2;
  v6 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v39 - v11;
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v39 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v39 - v16;
  if (!*(_QWORD *)(*(_QWORD *)(v2 + 8) + 16) || (sub_1002AA6DC(a1), (v18 & 1) == 0))
  {
    sub_10002B1E8(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    v28 = sub_10002A750((uint64_t *)&unk_1006415A0);
    inited = swift_initStackObject(v28, v42);
    *(_OWORD *)(inited + 16) = xmmword_100521140;
    *(_QWORD *)(inited + 32) = a2;
    v41 = inited;
    specialized Array._endMutation()(inited);
    v30 = v41;
    if (v41 >> 62)
    {
      if ((v41 & 0x8000000000000000) != 0)
        v34 = v41;
      else
        v34 = v41 & 0xFFFFFFFFFFFFFF8;
      swift_retain(a2);
      swift_bridgeObjectRetain(v30);
      v35 = _CocoaArrayWrapper.endIndex.getter(v34);
      swift_bridgeObjectRelease(v30);
      if (v35)
        goto LABEL_10;
    }
    else
    {
      v31 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain(a2);
      if (v31)
      {
LABEL_10:
        v32 = (void *)sub_10048D19C(v30);
LABEL_19:
        swift_bridgeObjectRelease(v30);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v3 + 8));
        v41 = *(_QWORD *)(v3 + 8);
        *(_QWORD *)(v3 + 8) = 0x8000000000000000;
        sub_100097724((uint64_t)v32, (uint64_t)v9, isUniquelyReferenced_nonNull_native);
        v37 = *(_QWORD *)(v3 + 8);
        *(_QWORD *)(v3 + 8) = v41;
        swift_bridgeObjectRelease(v37);
        v33 = (uint64_t)v9;
        return sub_10001F544(v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      }
    }
    v32 = &_swiftEmptySetSingleton;
    goto LABEL_19;
  }
  sub_10002B1E8(a1, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  sub_10002B1E8((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  swift_retain(a2);
  v19 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v2 + 8));
  sub_10002B1E8((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  v40 = *(_QWORD *)(v2 + 8);
  v20 = v40;
  *(_QWORD *)(v3 + 8) = 0x8000000000000000;
  v22 = sub_1002AA6DC((uint64_t)v12);
  v23 = *(_QWORD *)(v20 + 16);
  v24 = (v21 & 1) == 0;
  v25 = v23 + v24;
  if (__OFADD__(v23, v24))
  {
    __break(1u);
    goto LABEL_22;
  }
  LOBYTE(a1) = v21;
  if (*(_QWORD *)(v20 + 24) >= v25)
  {
    if ((v19 & 1) != 0)
    {
      if ((v21 & 1) != 0)
      {
LABEL_13:
        v39 = *(_QWORD *)(*(_QWORD *)(v40 + 56) + 8 * v22);
        sub_100481988((uint64_t *)&v41, a2);
        swift_release(v41);
        sub_10007229C(&v39, 1, &v40, v22, (uint64_t)v12);
        swift_bridgeObjectRelease(v39);
        sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        *(_QWORD *)(v3 + 8) = v40;
        sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        v33 = (uint64_t)v17;
        return sub_10001F544(v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
LABEL_22:
    sub_1002AF6FC();
    if ((a1 & 1) != 0)
      goto LABEL_13;
    goto LABEL_23;
  }
  sub_100459584(v25, v19);
  v26 = sub_1002AA6DC((uint64_t)v12);
  if ((a1 & 1) == (v27 & 1))
  {
    v22 = v26;
    if ((a1 & 1) == 0)
      goto LABEL_23;
    goto LABEL_13;
  }
LABEL_24:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

void sub_10006B3C0()
{
  sub_1000076E0((uint64_t)&unk_100640ED8, &qword_100640EC8, &qword_100640ED0);
}

uint64_t sub_10006B3DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];

  v1 = v0;
  if (*(_BYTE *)(v0 + qword_100645F38) == 1)
  {
    if (qword_10063D3C8 != -1)
      swift_once(&qword_10063D3C8, sub_1000E35C8);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100012DC4(v2, (uint64_t)qword_100645EC0);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.fault.getter(v4);
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Attempting to read sectionMetadata while it is being modified", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }

  }
  v7 = v1 + qword_100645F30;
  v8 = *(_QWORD *)(v1 + qword_100645F30);
  v9 = *(_QWORD *)(v1 + qword_100645F30 + 8);
  v10 = *(_QWORD *)(v1 + qword_100645F30 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    return v8;
  }
  v28 = *(_QWORD *)(v1 + qword_100645F30 + 8);
  v11 = sub_10002A750((uint64_t *)&unk_100646400);
  v12 = swift_allocObject(v11, 24, 7);
  *(_QWORD *)(v12 + 16) = sub_100071630((uint64_t)_swiftEmptyArrayStorage);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0
    || (result = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage)) == 0)
  {
LABEL_10:
    sub_100070B1C(v12);
    v8 = v13;
    v15 = v14;
    v17 = v16;
    v19 = v18;
    swift_release();
    v20 = *(_QWORD *)v7;
    v21 = *(_QWORD *)(v7 + 8);
    v22 = *(_QWORD *)(v7 + 16);
    *(_QWORD *)v7 = v8;
    *(_QWORD *)(v7 + 8) = v15;
    *(_QWORD *)(v7 + 16) = v17;
    *(_BYTE *)(v7 + 24) = v19 & 1;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v17);
    sub_1000072F0(v20, v21, v22);
    sub_1000072F0(0, v28, v10);
    return v8;
  }
  v24 = result;
  if (result >= 1)
  {
    v25 = &_swiftEmptyArrayStorage[4];
    do
    {
      v26 = *v25++;
      swift_weakAssign(v26 + 56, 0);
      swift_beginAccess(v26 + 64, v29, 1, 0);
      v27 = *(_QWORD *)(v26 + 64);
      *(_QWORD *)(v26 + 64) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v27);
      --v24;
    }
    while (v24);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10006B64C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];
  _BYTE v32[24];

  v1 = v0;
  if (*(_BYTE *)(v0 + qword_100645F38) == 1)
  {
    if (qword_10063D3C8 != -1)
      swift_once(&qword_10063D3C8, sub_1000E35C8);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100012DC4(v2, (uint64_t)qword_100645EC0);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Attempting to read sectionMetadata while it is being modified", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }

  }
  v7 = v1 + qword_100645F30;
  v9 = *(_QWORD *)(v1 + qword_100645F30);
  v8 = *(_QWORD *)(v1 + qword_100645F30 + 8);
  v10 = *(_QWORD *)(v1 + qword_100645F30 + 16);
  if (v9)
  {
    v11 = *(_QWORD *)(v1 + qword_100645F30);
LABEL_11:
    sub_10002340C(v9, v8, v10);
    return v11;
  }
  v29 = *(_QWORD *)(v1 + qword_100645F30 + 16);
  v30 = *(_QWORD *)(v1 + qword_100645F30 + 8);
  v12 = sub_10002A750((uint64_t *)&unk_100640E10);
  inited = swift_initStackObject(v12, v32);
  *(_QWORD *)(inited + 16) = sub_1000719F4((unint64_t)_swiftEmptyArrayStorage);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0
    || (result = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage)) == 0)
  {
LABEL_10:
    sub_100070F40(inited);
    v11 = v14;
    v16 = v15;
    v18 = v17;
    v20 = v19;
    swift_setDeallocating(inited);
    swift_bridgeObjectRelease(*(_QWORD *)(inited + 16));
    v21 = *(_QWORD *)v7;
    v22 = *(_QWORD *)(v7 + 8);
    v23 = *(_QWORD *)(v7 + 16);
    *(_QWORD *)v7 = v11;
    *(_QWORD *)(v7 + 8) = v16;
    *(_QWORD *)(v7 + 16) = v18;
    *(_BYTE *)(v7 + 24) = v20 & 1;
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRetain(v18);
    sub_1000072F0(v21, v22, v23);
    v10 = v29;
    v8 = v30;
    goto LABEL_11;
  }
  v25 = result;
  if (result >= 1)
  {
    v26 = &_swiftEmptyArrayStorage[4];
    do
    {
      v27 = *v26++;
      swift_weakAssign(v27 + 56, 0);
      swift_beginAccess(v27 + 64, v31, 1, 0);
      v28 = *(_QWORD *)(v27 + 64);
      *(_QWORD *)(v27 + 64) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v28);
      --v25;
    }
    while (v25);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10006B8AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), void (*a7)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  __int128 v24;
  uint64_t v25;
  char v26;

  *(_QWORD *)&v24 = a6();
  *((_QWORD *)&v24 + 1) = v13;
  v25 = v14;
  v26 = v15 & 1;
  v16 = qword_100645F38;
  *(_BYTE *)(a2 + qword_100645F38) = 1;
  a7(&v24, a2, a3, a4, a1, a5);
  v17 = v25;
  v18 = v26;
  v19 = a2 + qword_100645F30;
  v20 = *(_QWORD *)(a2 + qword_100645F30);
  v21 = *(_QWORD *)(a2 + qword_100645F30 + 8);
  v22 = *(_QWORD *)(a2 + qword_100645F30 + 16);
  *(_OWORD *)v19 = v24;
  *(_QWORD *)(v19 + 16) = v17;
  *(_BYTE *)(v19 + 24) = v18;
  result = sub_1000072F0(v20, v21, v22);
  *(_BYTE *)(a2 + v16) = 0;
  return result;
}

uint64_t sub_10006B974(unint64_t *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t Strong;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v44;
  uint64_t v45;
  _BOOL8 v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _BOOL8 v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  _QWORD *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t result;
  uint64_t v78;
  unint64_t *v79;
  uint64_t v80;
  unint64_t v81;
  char v83[24];
  _QWORD *v84;
  uint64_t v85[3];
  char v86[24];

  v10 = sub_10002A750((uint64_t *)&unk_100646400);
  v11 = swift_allocObject(v10, 24, 7);
  v12 = (uint64_t)_swiftEmptyArrayStorage;
  *(_QWORD *)(v11 + 16) = sub_100071630((uint64_t)_swiftEmptyArrayStorage);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    goto LABEL_65;
  do
  {
LABEL_2:
    v13 = (uint64_t)sub_10006C5BC(a3, v11);
    swift_release();
    swift_beginAccess(a3 + 64, v86, 1, 0);
    v14 = *(_QWORD *)(a3 + 64);
    if ((unint64_t)v14 >> 62)
    {
      if (v14 < 0)
        v74 = *(_QWORD *)(a3 + 64);
      else
        v74 = v14 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(a3 + 64));
      v75 = _CocoaArrayWrapper.endIndex.getter(v74);
      swift_bridgeObjectRelease(v14);
      v15 = (_QWORD *)&unk_10063D000;
      if (!v75)
        goto LABEL_9;
    }
    else
    {
      v15 = &unk_10063D000;
      if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_9;
    }
    if (v15[129] != -1)
      swift_once(&qword_10063D408, sub_10019D650);
    v16 = type metadata accessor for Logger(0);
    v17 = sub_100012DC4(v16, (uint64_t)qword_10064A340);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.fault.getter(v18);
    if (os_log_type_enabled(v18, v19))
    {
      v11 = swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Expand should begin with no child nodes", (uint8_t *)v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

LABEL_9:
    if (*(_BYTE *)(a3 + 72) != 1)
    {
      if (v15[129] != -1)
        goto LABEL_84;
      goto LABEL_11;
    }
    while (1)
    {
      *(_BYTE *)(a3 + 72) = 2;
      v24 = *(_QWORD *)(a3 + 64);
      *(_QWORD *)(a3 + 64) = v13;
      swift_bridgeObjectRetain(v13);
      swift_bridgeObjectRelease(v24);
      v85[0] = (uint64_t)_swiftEmptyArrayStorage;
      sub_10006FCF8(v85);
      Strong = swift_weakLoadStrong(a3 + 56);
      if (Strong)
      {
        v26 = Strong;
        do
        {
          *(_QWORD *)(v26 + 40) = 0;
          *(_BYTE *)(v26 + 48) = 1;
          v27 = swift_weakLoadStrong(v26 + 56);
          swift_release();
          v26 = v27;
        }
        while (v27);
      }
      swift_bridgeObjectRelease(v13);
      v13 = v85[0];
      if ((*(_BYTE *)(a2 + qword_100645F58) & 1) != 0)
      {
        swift_beginAccess(a2 + qword_100645F48, v85, 33, 0);
        sub_10030A52C((unsigned __int8 *)a3);
        v28 = swift_endAccess(v85);
      }
      v29 = IndexPath.section.getter(v28);
      swift_bridgeObjectRetain(v13);
      v31 = IndexPath.row.getter(v30);
      a2 = *a1;
      if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) != 0)
      {
        if ((v29 & 0x8000000000000000) != 0)
          goto LABEL_76;
      }
      else
      {
        a2 = (unint64_t)sub_1002B375C((_QWORD *)a2);
        if ((v29 & 0x8000000000000000) != 0)
        {
LABEL_76:
          __break(1u);
LABEL_77:
          __break(1u);
          goto LABEL_78;
        }
      }
      if (v29 >= *(_QWORD *)(a2 + 16))
        goto LABEL_77;
      v32 = sub_1004381E0(v31, v31, v13);
      *a1 = a2;
      v33 = IndexPath.section.getter(v32);
      sub_10006A14C(v13, v33);
      sub_100307A44(0, a3, 4, 0, 1);
      if (!((unint64_t)v13 >> 62))
      {
        v12 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v13);
        if (!v12)
          return swift_bridgeObjectRelease_n(v13, 2);
        goto LABEL_24;
      }
LABEL_78:
      if (v13 < 0)
        v76 = v13;
      else
        v76 = v13 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v13);
      v12 = _CocoaArrayWrapper.endIndex.getter(v76);
      if (!v12)
        return swift_bridgeObjectRelease_n(v13, 2);
LABEL_24:
      if (v12 >= 1)
        break;
      __break(1u);
LABEL_84:
      swift_once(&qword_10063D408, sub_10019D650);
LABEL_11:
      v20 = type metadata accessor for Logger(0);
      v21 = sub_100012DC4(v20, (uint64_t)qword_10064A340);
      v22 = Logger.logObject.getter(v21);
      v23 = static os_log_type_t.fault.getter(v22);
      if (os_log_type_enabled(v22, v23))
      {
        v11 = swift_slowAlloc(2, -1);
        *(_WORD *)v11 = 0;
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "Expand should begin with collapsed state", (uint8_t *)v11, 2u);
        swift_slowDealloc(v11, -1, -1);
      }

    }
    a1 = 0;
    v80 = v13;
    v81 = v13 & 0xC000000000000001;
    v79 = (unint64_t *)v12;
    while (1)
    {
      if (v81)
      {
        v36 = specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v13);
      }
      else
      {
        v36 = *(_QWORD *)(v13 + 8 * (_QWORD)a1 + 32);
        swift_retain();
      }
      swift_beginAccess(a5 + 80, v85, 32, 0);
      v37 = *(_QWORD *)(a5 + 88);
      if (*(_QWORD *)(v37 + 16))
      {
        v38 = sub_1002AA398(v36);
        if ((v39 & 1) != 0)
        {
          v40 = (uint64_t *)(*(_QWORD *)(v37 + 56) + 16 * v38);
          v41 = *v40;
          a3 = v40[1];
          swift_endAccess(v85);
          swift_bridgeObjectRetain(v41);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v42);
          v85[0] = v41;
          a2 = sub_1002AA3B8(0);
          v45 = *(_QWORD *)(v41 + 16);
          v46 = (v44 & 1) == 0;
          v47 = v45 + v46;
          if (__OFADD__(v45, v46))
            goto LABEL_63;
          v12 = v44;
          if (*(_QWORD *)(v41 + 24) < v47)
          {
            sub_100457F24(v47, isUniquelyReferenced_nonNull_native);
            v48 = sub_1002AA3B8(0);
            if ((v12 & 1) != (v49 & 1))
              goto LABEL_87;
            a2 = v48;
            v11 = v85[0];
            if ((v12 & 1) == 0)
              goto LABEL_45;
LABEL_43:
            *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * a2) = a6;
LABEL_47:
            swift_bridgeObjectRelease(0x8000000000000000);
            goto LABEL_48;
          }
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v11 = v85[0];
            if ((v44 & 1) != 0)
              goto LABEL_43;
          }
          else
          {
            sub_1002AE948();
            v11 = v85[0];
            if ((v12 & 1) != 0)
              goto LABEL_43;
          }
LABEL_45:
          *(_QWORD *)(v11 + 8 * (a2 >> 6) + 64) |= 1 << a2;
          *(_BYTE *)(*(_QWORD *)(v11 + 48) + a2) = 0;
          *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * a2) = a6;
          v55 = *(_QWORD *)(v11 + 16);
          v53 = __OFADD__(v55, 1);
          v56 = v55 + 1;
          if (v53)
            goto LABEL_64;
          *(_QWORD *)(v11 + 16) = v56;
          goto LABEL_47;
        }
      }
      swift_endAccess(v85);
      sub_10002A750(&qword_100640EC0);
      v11 = static _DictionaryStorage.allocate(capacity:)(1);
      v50 = sub_1002AA3B8(0);
      if ((v51 & 1) != 0)
        goto LABEL_60;
      *(_QWORD *)(v11 + 8 * (v50 >> 6) + 64) |= 1 << v50;
      *(_BYTE *)(*(_QWORD *)(v11 + 48) + v50) = 0;
      *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v50) = a6;
      v52 = *(_QWORD *)(v11 + 16);
      v53 = __OFADD__(v52, 1);
      v54 = v52 + 1;
      if (v53)
        goto LABEL_61;
      a3 = 0;
      *(_QWORD *)(v11 + 16) = v54;
LABEL_48:
      swift_beginAccess(a5 + 80, v85, 33, 0);
      swift_retain();
      v57 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(a5 + 88));
      v84 = *(_QWORD **)(a5 + 88);
      v58 = v84;
      *(_QWORD *)(a5 + 88) = 0x8000000000000000;
      a2 = sub_1002AA398(v36);
      v60 = v58[2];
      v61 = (v59 & 1) == 0;
      v62 = v60 + v61;
      if (__OFADD__(v60, v61))
        break;
      v12 = v59;
      if (v58[3] >= v62)
      {
        if ((v57 & 1) != 0)
        {
          v65 = v84;
          if ((v59 & 1) != 0)
            goto LABEL_26;
        }
        else
        {
          sub_1002AE7AC();
          v65 = v84;
          if ((v12 & 1) != 0)
            goto LABEL_26;
        }
      }
      else
      {
        sub_100457C50(v62, v57);
        v63 = sub_1002AA398(v36);
        if ((v12 & 1) != (v64 & 1))
          goto LABEL_86;
        a2 = v63;
        v65 = v84;
        if ((v12 & 1) != 0)
        {
LABEL_26:
          v34 = (uint64_t *)(v65[7] + 16 * a2);
          v35 = *v34;
          *v34 = v11;
          v34[1] = a3;
          swift_bridgeObjectRelease(v35);
          goto LABEL_27;
        }
      }
      v65[(a2 >> 6) + 8] |= 1 << a2;
      *(_QWORD *)(v65[6] + 8 * a2) = v36;
      v66 = (uint64_t *)(v65[7] + 16 * a2);
      *v66 = v11;
      v66[1] = a3;
      v67 = v65[2];
      v53 = __OFADD__(v67, 1);
      v68 = v67 + 1;
      if (v53)
        goto LABEL_62;
      v65[2] = v68;
      swift_retain();
LABEL_27:
      a1 = (unint64_t *)((char *)a1 + 1);
      v12 = *(_QWORD *)(a5 + 88);
      *(_QWORD *)(a5 + 88) = v65;
      swift_release();
      swift_bridgeObjectRelease(v12);
      swift_endAccess(v85);
      swift_release();
      v13 = v80;
      if (v79 == a1)
        return swift_bridgeObjectRelease_n(v13, 2);
    }
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    v69 = _CocoaArrayWrapper.endIndex.getter(v12);
  }
  while (!v69);
  v70 = v69;
  if (v69 >= 1)
  {
    v71 = (uint64_t *)(v12 + 32);
    do
    {
      v72 = *v71++;
      swift_weakAssign(v72 + 56, 0);
      swift_beginAccess(v72 + 64, v83, 1, 0);
      v73 = *(_QWORD *)(v72 + 64);
      *(_QWORD *)(v72 + 64) = v12;
      swift_bridgeObjectRelease(v73);
      --v70;
    }
    while (v70);
    goto LABEL_2;
  }
  __break(1u);
LABEL_86:
  v78 = sub_10002A750(&qword_1006463D0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v78);
  __break(1u);
LABEL_87:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for TTRITreeViewUpdate);
  __break(1u);
  return result;
}

uint64_t sub_10006C178(_QWORD *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t inited;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v42[24];
  uint64_t v43[3];
  _BYTE v44[24];
  _BYTE v45[24];

  v9 = sub_10002A750((uint64_t *)&unk_100640E10);
  inited = swift_initStackObject(v9, v45);
  v11 = _swiftEmptyArrayStorage;
  *(_QWORD *)(inited + 16) = sub_1000719F4((unint64_t)_swiftEmptyArrayStorage);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0
    || (result = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage)) == 0)
  {
LABEL_2:
    v12 = sub_10006C8BC(a3, inited);
    swift_setDeallocating(inited);
    swift_bridgeObjectRelease(*(_QWORD *)(inited + 16));
    swift_beginAccess(a3 + 64, v44, 1, 0);
    v13 = *(_QWORD *)(a3 + 64);
    if ((unint64_t)v13 >> 62)
    {
      if (v13 < 0)
        v39 = *(_QWORD *)(a3 + 64);
      else
        v39 = v13 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(a3 + 64));
      v40 = _CocoaArrayWrapper.endIndex.getter(v39);
      swift_bridgeObjectRelease(v13);
      v14 = 0x10063D000;
      if (!v40)
        goto LABEL_8;
    }
    else
    {
      v14 = (uint64_t)&unk_10063D000;
      if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_8;
    }
    if (*(_QWORD *)(v14 + 1032) != -1)
      goto LABEL_36;
    while (1)
    {
      v15 = type metadata accessor for Logger(0);
      v16 = sub_100012DC4(v15, (uint64_t)qword_10064A340);
      v17 = Logger.logObject.getter(v16);
      v18 = static os_log_type_t.fault.getter(v17);
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v19 = 0;
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "Expand should begin with no child nodes", v19, 2u);
        swift_slowDealloc(v19, -1, -1);
      }

LABEL_8:
      if (*(_BYTE *)(a3 + 72) != 1)
      {
        if (*(_QWORD *)(v14 + 1032) != -1)
          swift_once(&qword_10063D408, sub_10019D650);
        v20 = type metadata accessor for Logger(0);
        v21 = sub_100012DC4(v20, (uint64_t)qword_10064A340);
        v22 = Logger.logObject.getter(v21);
        v23 = static os_log_type_t.fault.getter(v22);
        if (os_log_type_enabled(v22, v23))
        {
          v24 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v24 = 0;
          _os_log_impl((void *)&_mh_execute_header, v22, v23, "Expand should begin with collapsed state", v24, 2u);
          swift_slowDealloc(v24, -1, -1);
        }

      }
      *(_BYTE *)(a3 + 72) = 2;
      v25 = *(_QWORD *)(a3 + 64);
      *(_QWORD *)(a3 + 64) = v12;
      swift_bridgeObjectRetain(v12);
      swift_bridgeObjectRelease(v25);
      v43[0] = (uint64_t)v11;
      sub_10006FCF8(v43);
      Strong = swift_weakLoadStrong(a3 + 56);
      if (Strong)
      {
        v27 = Strong;
        v14 = 1;
        do
        {
          *(_QWORD *)(v27 + 40) = 0;
          *(_BYTE *)(v27 + 48) = 1;
          v28 = swift_weakLoadStrong(v27 + 56);
          swift_release(v27);
          v27 = v28;
        }
        while (v28);
      }
      v29 = swift_bridgeObjectRelease(v12);
      v11 = (_QWORD *)v43[0];
      if ((*(_BYTE *)(a2 + qword_100645F58) & 1) != 0)
      {
        swift_beginAccess(a2 + qword_100645F48, v43, 33, 0);
        sub_10030A704((unsigned __int8 *)a3);
        v29 = swift_endAccess(v43);
      }
      a2 = IndexPath.section.getter(v29);
      v30 = swift_bridgeObjectRetain(v11);
      v31 = IndexPath.row.getter(v30);
      v12 = (_QWORD *)*a1;
      if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) != 0)
      {
        if ((a2 & 0x8000000000000000) != 0)
          goto LABEL_34;
      }
      else
      {
        v12 = sub_1002B37D4(v12);
        if ((a2 & 0x8000000000000000) != 0)
        {
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
      }
      if (a2 < v12[2])
      {
        v32 = sub_100438AA0(v31, v31, (uint64_t)v11);
        *a1 = v12;
        v33 = IndexPath.section.getter(v32);
        sub_10006A734((uint64_t)v11, v33);
        sub_100307CB4(0, a3, 4, 0, 1);
        sub_100308358((unint64_t)v11, 0, a6, 0);
        return swift_bridgeObjectRelease(v11);
      }
LABEL_35:
      __break(1u);
LABEL_36:
      swift_once(&qword_10063D408, sub_10019D650);
    }
  }
  v35 = result;
  if (result >= 1)
  {
    v36 = &_swiftEmptyArrayStorage[4];
    do
    {
      v37 = *v36++;
      swift_weakAssign(v37 + 56, 0);
      swift_beginAccess(v37 + 64, v42, 1, 0);
      v38 = *(_QWORD *)(v37 + 64);
      *(_QWORD *)(v37 + 64) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v38);
      --v35;
    }
    while (v35);
    goto LABEL_2;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10006C5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  void *Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v29)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _BYTE v36[24];

  v32 = a2;
  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - v11;
  v13 = *(_QWORD *)(*(_QWORD *)a1 + 144);
  v31 = a1;
  v14 = a1 + v13;
  swift_beginAccess(v14, v36, 0, 0);
  sub_10002B1E8(v14, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v34 = v2;
  v15 = *(_QWORD *)(v2 + qword_100645F10);
  if (!v15)
    goto LABEL_10;
  v16 = *(uint64_t (**)(uint64_t))(v15 + 16);
  v17 = swift_retain();
  if ((v16(v17) & 1) == 0)
    goto LABEL_9;
  v30 = v34 + qword_100645EF8;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v34 + qword_100645EF8);
  sub_10002B1E8(v14, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56);
  v29(v6, 0, 1, v33);
  v19 = (*(uint64_t (**)(void *, char *))(v15 + 32))(Strong, v6);

  sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
  if (v19 <= 0)
  {
LABEL_9:
    swift_release();
LABEL_10:
    sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return _swiftEmptyArrayStorage;
  }
  v35 = (unint64_t)_swiftEmptyArrayStorage;
  v20 = sub_1000720F0(v19, 0);
  specialized Array._endMutation()(v20);
  v21 = 0;
  do
  {
    v22 = (void *)swift_unknownObjectUnownedLoadStrong(v30);
    sub_10002B1E8((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v29(v6, 0, 1, v33);
    (*(void (**)(void *, uint64_t, char *))(v15 + 48))(v22, v21, v6);

    sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
    v23 = sub_10006F808(v9, v31, v32);
    v24 = swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
    v26 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v25 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v26 >= v25 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1);
    ++v21;
    v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v23);
    specialized Array._endMutation()(v27);
    swift_release();
    sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  while (v19 != v21);
  sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_release();
  return (_QWORD *)v35;
}

_QWORD *sub_10006C8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  void *Strong;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  void *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  unsigned __int8 v46;
  uint64_t v47;
  _QWORD *result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char v85[24];
  _BYTE v86[24];
  char v87[24];
  char v88[24];
  unint64_t v89;
  char v90[32];

  v76 = a2;
  v4 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v5 = __chkstk_darwin(v4);
  v71 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v75 = (uint64_t)&v70 - v7;
  v8 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v8);
  v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v70 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v70 - v19;
  v21 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 144);
  swift_beginAccess(v21, v90, 0, 0);
  v83 = v20;
  sub_10002B1E8(v21, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  v81 = qword_100645F10;
  v82 = v2;
  v22 = *(_QWORD *)(v2 + qword_100645F10);
  if (!v22)
    goto LABEL_46;
  v80 = v11;
  v23 = *(uint64_t (**)(uint64_t))(v22 + 16);
  v24 = swift_retain(v22);
  if ((v23(v24) & 1) == 0)
    goto LABEL_45;
  v25 = v82;
  v84 = v82 + qword_100645EF8;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v82 + qword_100645EF8);
  sub_10002B1E8(v21, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  v79 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56);
  v79(v10, 0, 1, v80);
  v27 = (*(uint64_t (**)(void *, char *))(v22 + 32))(Strong, v10);

  sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100640E00);
  if (v27 <= 0)
  {
LABEL_45:
    swift_release(v22);
LABEL_46:
    sub_10001F544((uint64_t)v83, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    return _swiftEmptyArrayStorage;
  }
  v74 = v15;
  v78 = a1;
  v89 = (unint64_t)_swiftEmptyArrayStorage;
  v28 = sub_1000720F0(v27, 0);
  specialized Array._endMutation()(v28);
  v29 = (uint64_t *)(v76 + 16);
  v70 = (uint64_t *)(v25 + qword_100645F48);
  swift_beginAccess(v25 + qword_100645F48, v88, 0, 0);
  swift_beginAccess(v29, v87, 0, 0);
  v30 = 0;
  v31 = v25;
  v73 = v10;
  v77 = v27;
  v72 = v22;
  while (1)
  {
    v32 = (void *)swift_unknownObjectUnownedLoadStrong(v84);
    sub_10002B1E8((uint64_t)v83, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v79(v10, 0, 1, v80);
    (*(void (**)(void *, uint64_t, char *))(v22 + 48))(v32, v30, v10);

    sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100640E00);
    v33 = *(_QWORD *)(v31 + v81);
    if (v33)
    {
      v34 = *(uint64_t (**)(uint64_t))(v33 + 16);
      v35 = swift_retain(v33);
      if ((v34(v35) & 1) != 0)
      {
        v36 = (void *)swift_unknownObjectUnownedLoadStrong(v84);
        v37 = (*(uint64_t (**)(void *, char *))(v33 + 64))(v36, v18);
        swift_release(v33);

        if ((v37 & 1) != 0)
        {
          v39 = *v70;
          v38 = v70[1];
          swift_bridgeObjectRetain(*v70);
          v40 = swift_bridgeObjectRetain(v38);
          v41 = v75;
          TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v40);
          v42 = sub_10037B6FC(v41, v39);
          v43 = v41;
          v44 = v71;
          sub_10002B1E8(v43, v71, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
          v45 = (v42 & 1) != 0 ? sub_10037B6FC(v44, v38) ^ 1 : 0;
          sub_10001F544(v44, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
          swift_bridgeObjectRelease(v38);
          swift_bridgeObjectRelease(v39);
          sub_10001F544(v75, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
          v46 = (v45 & 1) != 0 ? 1 : 2;
        }
        else
        {
          v46 = 0;
        }
      }
      else
      {
        swift_release(v33);
        v46 = 0;
      }
    }
    else
    {
      v46 = 0;
    }
    v47 = *v29;
    if ((unint64_t)*v29 >> 62)
    {
      if (v47 < 0)
        v55 = *v29;
      else
        v55 = v47 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v29);
      v56 = _CocoaArrayWrapper.endIndex.getter(v55);
      swift_bridgeObjectRelease(v47);
      if (!v56)
      {
LABEL_31:
        v57 = (uint64_t)v74;
        sub_10002B1E8((uint64_t)v18, (uint64_t)v74, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v58 = sub_10002A750((uint64_t *)&unk_100640E20);
        v53 = swift_allocObject(v58, *(unsigned int *)(v58 + 48), *(unsigned __int16 *)(v58 + 52));
        *(_QWORD *)(v53 + 24) = 0;
        *(_BYTE *)(v53 + 32) = 1;
        *(_QWORD *)(v53 + 40) = 0;
        *(_BYTE *)(v53 + 48) = 1;
        swift_weakInit(v53 + 56, 0);
        *(_QWORD *)(v53 + 64) = _swiftEmptyArrayStorage;
        v59 = qword_10063D410;
        v60 = v78;
        swift_retain(v78);
        if (v59 != -1)
          swift_once(&qword_10063D410, sub_100007280);
        *(_QWORD *)(v53 + 16) = TTRCounterBasedIdentifierGenerator.allocID()();
        swift_weakAssign(v53 + 56, v60);
        swift_release(v60);
        sub_10001F580(v57, v53 + *(_QWORD *)(*(_QWORD *)v53 + 144), (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        *(_BYTE *)(v53 + 72) = v46;
        v22 = v72;
        v10 = v73;
        goto LABEL_34;
      }
    }
    else if (!*(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_31;
    }
    result = (_QWORD *)swift_beginAccess(v29, v86, 33, 0);
    v49 = *v29;
    if ((unint64_t)*v29 >> 62)
    {
      if (v49 < 0)
        v68 = *v29;
      else
        v68 = v49 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v29);
      v69 = _CocoaArrayWrapper.endIndex.getter(v68);
      result = (_QWORD *)swift_bridgeObjectRelease(v49);
      if (!v69)
        goto LABEL_48;
    }
    else if (!*(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_48;
    }
    v50 = *v29;
    result = (_QWORD *)swift_isUniquelyReferenced_nonNull_bridgeObject(*v29);
    *v29 = v50;
    if (!(_DWORD)result || v50 < 0 || (v50 & 0x4000000000000000) != 0)
    {
      result = (_QWORD *)sub_1002B3758(v50);
      v50 = (uint64_t)result;
      *v29 = (uint64_t)result;
    }
    v51 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v51)
      break;
    v52 = v51 - 1;
    v53 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 8 * v52 + 0x20);
    *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10) = v52;
    specialized Array._endMutation()(result);
    swift_endAccess(v86);
    swift_weakAssign(v53 + 56, v78);
    v54 = v53 + *(_QWORD *)(*(_QWORD *)v53 + 144);
    swift_beginAccess(v54, v86, 33, 0);
    swift_retain(v53);
    sub_1000763D8((uint64_t)v18, v54, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    swift_endAccess(v86);
    *(_BYTE *)(v53 + 72) = v46;
    swift_release(v53);
LABEL_34:
    v61 = v46;
    v62 = _swiftEmptyArrayStorage;
    v31 = v82;
    if (v61 == 2)
      v62 = (_QWORD *)sub_10006C8BC(v53, v76);
    swift_beginAccess(v53 + 64, v85, 1, 0);
    v63 = *(_QWORD *)(v53 + 64);
    *(_QWORD *)(v53 + 64) = v62;
    v64 = swift_bridgeObjectRelease(v63);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v64);
    v66 = *(_QWORD *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v65 = *(_QWORD *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v66 >= v65 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v65 > 1, v66 + 1, 1);
    ++v30;
    v67 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v66, v53);
    specialized Array._endMutation()(v67);
    sub_10001F544((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    if (v77 == v30)
    {
      sub_10001F544((uint64_t)v83, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      swift_release(v22);
      return (_QWORD *)v89;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_10006D074(uint64_t a1, uint64_t a2, uint64_t a3, Swift::Int a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  __int128 v38;
  uint64_t v39;
  char v40;
  _BYTE v41[24];

  if (*(_BYTE *)(a2 + 72) != 2)
  {
    if (qword_10063D408 != -1)
      swift_once(&qword_10063D408, sub_10019D650);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100012DC4(v9, (uint64_t)qword_10064A340);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.fault.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Collapse should begin with expanded state", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

  }
  if (*(_BYTE *)(a2 + 48) == 1)
  {
    *(_QWORD *)&v38 = 0;
    sub_10019D874(a2, &v38);
    v14 = v38;
    *(_QWORD *)(a2 + 40) = v38;
    *(_BYTE *)(a2 + 48) = 0;
  }
  else
  {
    v14 = *(_QWORD *)(a2 + 40);
  }
  *(_BYTE *)(a2 + 72) = 1;
  swift_beginAccess(a2 + 64, v41, 1, 0);
  v15 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a2 + 64) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v15);
  *(_QWORD *)(a2 + 40) = 0;
  *(_BYTE *)(a2 + 48) = 0;
  Strong = swift_weakLoadStrong(a2 + 56);
  if (Strong)
  {
    v17 = Strong;
    do
    {
      *(_QWORD *)(v17 + 40) = 0;
      *(_BYTE *)(v17 + 48) = 1;
      v18 = swift_weakLoadStrong(v17 + 56);
      swift_release();
      v17 = v18;
    }
    while (v18);
  }
  if ((*(_BYTE *)(a3 + qword_100645F58) & 1) != 0)
  {
    swift_beginAccess(a3 + qword_100645F48, &v38, 33, 0);
    sub_10030A52C((unsigned __int8 *)a2);
    swift_endAccess(&v38);
  }
  *(_QWORD *)&v38 = sub_10006B3DC();
  *((_QWORD *)&v38 + 1) = v19;
  v39 = v20;
  v40 = v21 & 1;
  v22 = qword_100645F38;
  *(_BYTE *)(a3 + qword_100645F38) = 1;
  sub_100308C80(a4, v14);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  sub_100307A44(0, a2, 4, 0, 1);
  sub_100307F24(v24, v26, v28, v30, 1, a5, 0);
  swift_unknownObjectRelease(v24);
  v31 = v39;
  v32 = v40;
  v33 = a3 + qword_100645F30;
  v34 = *(_QWORD *)(a3 + qword_100645F30);
  v35 = *(_QWORD *)(a3 + qword_100645F30 + 8);
  v36 = *(_QWORD *)(a3 + qword_100645F30 + 16);
  *(_OWORD *)v33 = v38;
  *(_QWORD *)(v33 + 16) = v31;
  *(_BYTE *)(v33 + 24) = v32;
  result = sub_1000072F0(v34, v35, v36);
  *(_BYTE *)(a3 + v22) = 0;
  return result;
}

uint64_t sub_10006D320(uint64_t a1, uint64_t a2, uint64_t a3, Swift::Int a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  __int128 v37;
  uint64_t v38;
  char v39;
  _BYTE v40[24];

  if (*(_BYTE *)(a2 + 72) != 2)
  {
    if (qword_10063D408 != -1)
      swift_once(&qword_10063D408, sub_10019D650);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100012DC4(v9, (uint64_t)qword_10064A340);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.fault.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Collapse should begin with expanded state", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

  }
  if (*(_BYTE *)(a2 + 48) == 1)
  {
    *(_QWORD *)&v37 = 0;
    sub_10019D874(a2, &v37);
    v14 = v37;
    *(_QWORD *)(a2 + 40) = v37;
    *(_BYTE *)(a2 + 48) = 0;
  }
  else
  {
    v14 = *(_QWORD *)(a2 + 40);
  }
  *(_BYTE *)(a2 + 72) = 1;
  swift_beginAccess(a2 + 64, v40, 1, 0);
  v15 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a2 + 64) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v15);
  *(_QWORD *)(a2 + 40) = 0;
  *(_BYTE *)(a2 + 48) = 0;
  Strong = swift_weakLoadStrong(a2 + 56);
  if (Strong)
  {
    v17 = Strong;
    do
    {
      *(_QWORD *)(v17 + 40) = 0;
      *(_BYTE *)(v17 + 48) = 1;
      v18 = swift_weakLoadStrong(v17 + 56);
      swift_release(v17);
      v17 = v18;
    }
    while (v18);
  }
  if ((*(_BYTE *)(a3 + qword_100645F58) & 1) != 0)
  {
    swift_beginAccess(a3 + qword_100645F48, &v37, 33, 0);
    sub_10030A704((unsigned __int8 *)a2);
    swift_endAccess(&v37);
  }
  *(_QWORD *)&v37 = sub_10006B64C();
  *((_QWORD *)&v37 + 1) = v19;
  v38 = v20;
  v39 = v21 & 1;
  v22 = qword_100645F38;
  *(_BYTE *)(a3 + qword_100645F38) = 1;
  v23 = sub_1003090C0(a4, v14);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  sub_100307CB4(0, a2, 4, 0, 1);
  sub_10030884C(v23, v25, v27, v29, 1, a5, 0);
  swift_unknownObjectRelease(v23);
  v30 = v38;
  v31 = v39;
  v32 = a3 + qword_100645F30;
  v33 = *(_QWORD *)(a3 + qword_100645F30);
  v34 = *(_QWORD *)(a3 + qword_100645F30 + 8);
  v35 = *(_QWORD *)(a3 + qword_100645F30 + 16);
  *(_OWORD *)v32 = v37;
  *(_QWORD *)(v32 + 16) = v30;
  *(_BYTE *)(v32 + 24) = v31;
  result = sub_1000072F0(v33, v34, v35);
  *(_BYTE *)(a3 + v22) = 0;
  return result;
}

uint64_t sub_10006D5CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t inited;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD v90[2];
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  int64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int64_t v104;
  uint64_t v105;
  unint64_t v106;
  char v107[16];
  uint64_t v108;
  uint64_t v109;
  char v110[24];
  uint64_t v111[3];
  char v112[32];
  char v113[8];

  v3 = v2;
  v6 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v7 = __chkstk_darwin(v6);
  v93 = (uint64_t)v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v92 = (uint64_t)v90 - v9;
  v10 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v101 = (uint64_t)v90 - v15;
  v91 = qword_100645F58;
  *(_BYTE *)(v3 + qword_100645F58) = 0;
  v16 = (uint64_t *)(v3 + qword_100645F48);
  swift_beginAccess(v3 + qword_100645F48, v113, 1, 0);
  v111[0] = *v16;
  v108 = a1;
  v109 = a2;
  swift_bridgeObjectRetain(v111[0]);
  v17 = sub_10002A750(&qword_100640E78);
  v18 = sub_100023FEC(&qword_100640E80, &qword_100640E78, (uint64_t)&protocol conformance descriptor for Set<A>);
  v19 = sub_1000175C8(&qword_100640E88, (uint64_t (*)(uint64_t))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (uint64_t)&protocol conformance descriptor for TTRAccountsListsViewModel.ItemIdentifier);
  v20 = Sequence.compactMapToSet<A>(_:)(sub_1000762E4, v107, v17, v10, v18, v19);
  swift_bridgeObjectRelease(v111[0]);
  v21 = v16[1];
  v16[1] = v20;
  swift_bridgeObjectRetain(v20);
  result = swift_bridgeObjectRelease(v21);
  v104 = 0;
  v23 = *(_QWORD *)(v20 + 56);
  v98 = v20 + 56;
  v24 = -1;
  v102 = v20;
  v25 = -1 << *(_BYTE *)(v20 + 32);
  if (-v25 < 64)
    v24 = ~(-1 << -(char)v25);
  v26 = v24 & v23;
  v100 = qword_100645F38;
  v103 = v3 + qword_100645F30;
  v90[1] = v25;
  v97 = (unint64_t)(63 - v25) >> 6;
  v95 = v14;
  v96 = v11;
  v94 = v3;
  while (1)
  {
    if (v26)
    {
      v28 = __clz(__rbit64(v26));
      v29 = (v26 - 1) & v26;
      v30 = v28 | (v104 << 6);
      goto LABEL_23;
    }
    v31 = v104 + 1;
    if (__OFADD__(v104, 1))
    {
      __break(1u);
      goto LABEL_66;
    }
    if (v31 >= v97)
      goto LABEL_64;
    v32 = *(_QWORD *)(v98 + 8 * v31);
    v33 = v104 + 1;
    if (!v32)
    {
      v33 = v104 + 2;
      if (v104 + 2 >= v97)
        goto LABEL_64;
      v32 = *(_QWORD *)(v98 + 8 * v33);
      if (!v32)
      {
        v33 = v104 + 3;
        if (v104 + 3 >= v97)
          goto LABEL_64;
        v32 = *(_QWORD *)(v98 + 8 * v33);
        if (!v32)
          break;
      }
    }
LABEL_22:
    v29 = (v32 - 1) & v32;
    v30 = __clz(__rbit64(v32)) + (v33 << 6);
    v104 = v33;
LABEL_23:
    v35 = v101;
    sub_10002B1E8(*(_QWORD *)(v102 + 48) + *(_QWORD *)(v11 + 72) * v30, v101, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    sub_10001F580(v35, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    if (*(_BYTE *)(v3 + v100) == 1)
    {
      if (qword_10063D3C8 != -1)
        swift_once(&qword_10063D3C8, sub_1000E35C8);
      v36 = type metadata accessor for Logger(0);
      v37 = sub_100012DC4(v36, (uint64_t)qword_100645EC0);
      v38 = Logger.logObject.getter(v37);
      v39 = static os_log_type_t.fault.getter(v38);
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v40 = 0;
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "Attempting to read sectionMetadata while it is being modified", v40, 2u);
        swift_slowDealloc(v40, -1, -1);
      }

    }
    v106 = v29;
    v42 = *(_QWORD *)v103;
    v41 = *(_QWORD *)(v103 + 8);
    v43 = *(_QWORD *)(v103 + 16);
    if (*(_QWORD *)v103)
    {
      v105 = *(_QWORD *)v103;
      v44 = v41;
      v45 = v43;
    }
    else
    {
      v99 = *(unsigned __int8 *)(v103 + 24);
      v46 = sub_10002A750((uint64_t *)&unk_100640E10);
      inited = swift_initStackObject(v46, v112);
      *(_QWORD *)(inited + 16) = sub_1000719F4((unint64_t)_swiftEmptyArrayStorage);
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      {
        result = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage);
        if (result)
        {
          v86 = result;
          if (result < 1)
            goto LABEL_67;
          v87 = &_swiftEmptyArrayStorage[4];
          do
          {
            v88 = *v87++;
            swift_weakAssign(v88 + 56, 0);
            swift_beginAccess(v88 + 64, v110, 1, 0);
            v89 = *(_QWORD *)(v88 + 64);
            *(_QWORD *)(v88 + 64) = _swiftEmptyArrayStorage;
            swift_bridgeObjectRelease(v89);
            --v86;
          }
          while (v86);
        }
      }
      sub_100070F40(inited);
      v49 = v48;
      v44 = v50;
      v45 = v51;
      v53 = v52;
      swift_setDeallocating(inited);
      swift_bridgeObjectRelease(*(_QWORD *)(inited + 16));
      v54 = v53 & 1;
      v55 = v103;
      v56 = *(_QWORD *)v103;
      v57 = *(_QWORD *)(v103 + 8);
      v58 = *(_QWORD *)(v103 + 16);
      *(_QWORD *)v103 = v49;
      *(_QWORD *)(v55 + 8) = v44;
      *(_QWORD *)(v55 + 16) = v45;
      *(_BYTE *)(v55 + 24) = v54;
      v105 = v49;
      swift_bridgeObjectRetain(v49);
      swift_bridgeObjectRetain(v44);
      swift_bridgeObjectRetain(v45);
      v59 = v56;
      v3 = v94;
      sub_1000072F0(v59, v57, v58);
      v11 = v96;
      v14 = v95;
    }
    v60 = *(_QWORD *)(v44 + 16);
    sub_10002340C(v42, v41, v43);
    if (!v60 || (v61 = sub_1002AA6DC((uint64_t)v14), (v62 & 1) == 0))
    {
      swift_bridgeObjectRelease(v44);
      v27 = v105;
      goto LABEL_5;
    }
    v63 = v45;
    v27 = *(_QWORD *)(*(_QWORD *)(v44 + 56) + 8 * v61);
    v64 = v27 & 0xC000000000000001;
    if ((v27 & 0xC000000000000001) != 0)
    {
      if (v27 < 0)
        v65 = *(_QWORD *)(*(_QWORD *)(v44 + 56) + 8 * v61);
      else
        v65 = v27 & 0xFFFFFFFFFFFFFF8;
      v66 = __CocoaSet.startIndex.getter(v65);
      v68 = v67;
      v69 = __CocoaSet.endIndex.getter(v65);
      v71 = static __CocoaSet.Index.== infix(_:_:)(v66, v68, v69, v70);
      swift_bridgeObjectRetain(v27);
      swift_bridgeObjectRelease(v69);
      v72 = v66;
      if ((v71 & 1) != 0)
        goto LABEL_58;
    }
    else
    {
      v73 = *(_BYTE *)(v27 + 32);
      v66 = 1 << v73;
      v74 = *(_QWORD *)(v27 + 56);
      if (v74)
      {
        v75 = 0;
      }
      else
      {
        v82 = v73 & 0x3F;
        if (v82 < 7)
          goto LABEL_57;
        v74 = *(_QWORD *)(v27 + 64);
        if (v74)
        {
          v75 = 1;
        }
        else
        {
          if (v82 < 8)
            goto LABEL_57;
          v74 = *(_QWORD *)(v27 + 72);
          if (!v74)
          {
            v83 = 0;
            v84 = (unint64_t)(v66 + 63) >> 6;
            if (v84 <= 3)
              v84 = 3;
            v85 = v84 - 3;
            while (v85 != v83)
            {
              v74 = *(_QWORD *)(v27 + 80 + 8 * v83++);
              if (v74)
              {
                v75 = v83 + 2;
                goto LABEL_43;
              }
            }
LABEL_57:
            v68 = *(unsigned int *)(v27 + 36);
            swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v44 + 56) + 8 * v61));
LABEL_58:
            sub_10003E0E0(v66, v68, v64 != 0);
            swift_bridgeObjectRelease(v44);
            swift_bridgeObjectRelease(v105);
            v14 = v95;
            v45 = v63;
            v11 = v96;
LABEL_5:
            swift_bridgeObjectRelease(v27);
            swift_bridgeObjectRelease(v45);
            v26 = v106;
            goto LABEL_6;
          }
          v75 = 2;
        }
      }
LABEL_43:
      v72 = __clz(__rbit64(v74)) + (v75 << 6);
      v68 = *(unsigned int *)(v27 + 36);
      swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v44 + 56) + 8 * v61));
      if (v72 == v66)
        goto LABEL_58;
    }
    v76 = sub_1004786DC(v72, v68, v64 != 0, v27);
    sub_10003E0E0(v72, v68, v64 != 0);
    swift_bridgeObjectRelease(v63);
    swift_bridgeObjectRelease(v44);
    swift_bridgeObjectRelease(v105);
    swift_bridgeObjectRelease(v27);
    v77 = v76 + *(_QWORD *)(*(_QWORD *)v76 + 144);
    swift_beginAccess(v77, v111, 0, 0);
    v78 = v77;
    v79 = v93;
    sub_10002B1E8(v78, v93, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    swift_release(v76);
    v80 = v79;
    v81 = v92;
    sub_10001F580(v80, v92, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_100073440(v81, 5);
    sub_10001F544(v81, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v14 = v95;
    v26 = v106;
    v11 = v96;
LABEL_6:
    result = sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  }
  v34 = v104 + 4;
  if (v104 + 4 >= v97)
  {
LABEL_64:
    result = sub_10003E410(v102);
    *(_BYTE *)(v3 + v91) = 1;
    return result;
  }
  v32 = *(_QWORD *)(v98 + 8 * v34);
  if (v32)
  {
    v33 = v104 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    v33 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v33 >= v97)
      goto LABEL_64;
    v32 = *(_QWORD *)(v98 + 8 * v33);
    ++v34;
    if (v32)
      goto LABEL_22;
  }
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
  return result;
}

void sub_10006DE94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  char *v94;
  int64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105[16];
  uint64_t v106;
  uint64_t v107;
  char v108[24];
  uint64_t v109[4];
  char v110[32];

  v3 = v2;
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v6);
  v92 = (uint64_t)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v91 = (uint64_t)&v89 - v9;
  v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v102 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v101 = (uint64_t)&v89 - v14;
  v90 = qword_100645F58;
  *(_BYTE *)(v3 + qword_100645F58) = 0;
  v15 = (uint64_t *)(v3 + qword_100645F48);
  swift_beginAccess(v3 + qword_100645F48, v110, 1, 0);
  v109[0] = *v15;
  v106 = a1;
  v107 = a2;
  swift_bridgeObjectRetain(v109[0]);
  v16 = sub_10002A750((uint64_t *)&unk_100646F30);
  v17 = sub_100023FEC((unint64_t *)&unk_100640F10, (uint64_t *)&unk_100646F30, (uint64_t)&protocol conformance descriptor for Set<A>);
  v18 = sub_1000175C8((unint64_t *)&qword_100644970, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.ItemID, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.ItemID);
  v19 = Sequence.compactMapToSet<A>(_:)(sub_100076BE8, v105, v16, v10, v17, v18);
  swift_bridgeObjectRelease(v109[0]);
  v20 = v15[1];
  v15[1] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  v21 = 0;
  v22 = *(_QWORD *)(v19 + 56);
  v96 = v19 + 56;
  v23 = -1;
  v103 = v19;
  v104 = v3;
  v24 = -1 << *(_BYTE *)(v19 + 32);
  if (-v24 < 64)
    v23 = ~(-1 << -(char)v24);
  v25 = v23 & v22;
  v100 = qword_100645F38;
  v26 = (uint64_t *)(v3 + qword_100645F30);
  v89 = v24;
  v95 = (unint64_t)(63 - v24) >> 6;
  v94 = v12;
  v93 = (uint64_t *)(v3 + qword_100645F30);
  while (1)
  {
    if (v25)
    {
      v28 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      v29 = v28 | (v21 << 6);
      goto LABEL_23;
    }
    v30 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_66;
    }
    if (v30 >= v95)
      goto LABEL_64;
    v31 = *(_QWORD *)(v96 + 8 * v30);
    v32 = v21 + 1;
    if (!v31)
    {
      v32 = v21 + 2;
      if (v21 + 2 >= v95)
        goto LABEL_64;
      v31 = *(_QWORD *)(v96 + 8 * v32);
      if (!v31)
      {
        v32 = v21 + 3;
        if (v21 + 3 >= v95)
          goto LABEL_64;
        v31 = *(_QWORD *)(v96 + 8 * v32);
        if (!v31)
          break;
      }
    }
LABEL_22:
    v25 = (v31 - 1) & v31;
    v29 = __clz(__rbit64(v31)) + (v32 << 6);
    v21 = v32;
LABEL_23:
    v34 = v101;
    sub_10002B1E8(*(_QWORD *)(v103 + 48) + *(_QWORD *)(v102 + 72) * v29, v101, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10001F580(v34, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    if (*(_BYTE *)(v104 + v100) == 1)
    {
      if (qword_10063D3C8 != -1)
        swift_once(&qword_10063D3C8, sub_1000E35C8);
      v35 = type metadata accessor for Logger(0);
      v36 = sub_100012DC4(v35, (uint64_t)qword_100645EC0);
      v37 = Logger.logObject.getter(v36);
      v38 = static os_log_type_t.fault.getter(v37);
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v39 = 0;
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "Attempting to read sectionMetadata while it is being modified", v39, 2u);
        v40 = v39;
        v26 = v93;
        swift_slowDealloc(v40, -1, -1);
      }

    }
    v41 = *v26;
    v42 = v26[1];
    v43 = v26[2];
    if (*v26)
    {
      swift_bridgeObjectRetain(*v26);
      swift_bridgeObjectRetain(v42);
      swift_bridgeObjectRetain(v43);
      if (!*(_QWORD *)(v42 + 16))
        goto LABEL_4;
    }
    else
    {
      v98 = v26[2];
      v99 = v42;
      v97 = *((unsigned __int8 *)v26 + 24);
      v44 = sub_10002A750((uint64_t *)&unk_100646400);
      v45 = swift_allocObject(v44, 24, 7);
      *(_QWORD *)(v45 + 16) = sub_100071630((uint64_t)_swiftEmptyArrayStorage);
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      {
        v84 = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage);
        if (v84)
        {
          v85 = v84;
          if (v84 < 1)
            goto LABEL_67;
          v86 = &_swiftEmptyArrayStorage[4];
          v26 = v93;
          do
          {
            v87 = *v86++;
            swift_weakAssign(v87 + 56, 0);
            swift_beginAccess(v87 + 64, v108, 1, 0);
            v88 = *(_QWORD *)(v87 + 64);
            *(_QWORD *)(v87 + 64) = _swiftEmptyArrayStorage;
            swift_bridgeObjectRelease(v88);
            --v85;
          }
          while (v85);
        }
      }
      sub_100070B1C(v45);
      v47 = v46;
      v42 = v48;
      v43 = v49;
      v51 = v50;
      swift_release();
      v52 = v51 & 1;
      v53 = *v26;
      v54 = v26[1];
      v55 = v25;
      v56 = v21;
      v57 = v26[2];
      *v26 = v47;
      v26[1] = v42;
      v26[2] = v43;
      *((_BYTE *)v26 + 24) = v52;
      swift_bridgeObjectRetain(v47);
      swift_bridgeObjectRetain(v42);
      swift_bridgeObjectRetain(v43);
      v58 = v53;
      v41 = v47;
      v59 = v57;
      v21 = v56;
      v25 = v55;
      sub_1000072F0(v58, v54, v59);
      sub_1000072F0(0, v99, v98);
      v12 = v94;
      if (!*(_QWORD *)(v42 + 16))
      {
LABEL_4:
        swift_bridgeObjectRelease(v42);
        v27 = v41;
        goto LABEL_5;
      }
    }
    v60 = sub_1002AA39C((uint64_t)v12);
    if ((v61 & 1) == 0)
      goto LABEL_4;
    v99 = v21;
    v27 = *(_QWORD *)(*(_QWORD *)(v42 + 56) + 8 * v60);
    v62 = v27 & 0xC000000000000001;
    v98 = v41;
    if ((v27 & 0xC000000000000001) != 0)
    {
      if (v27 < 0)
        v63 = v27;
      else
        v63 = v27 & 0xFFFFFFFFFFFFFF8;
      v64 = __CocoaSet.startIndex.getter(v63);
      v66 = v65;
      v67 = __CocoaSet.endIndex.getter(v63);
      v69 = static __CocoaSet.Index.== infix(_:_:)(v64, v66, v67, v68);
      swift_bridgeObjectRetain(v27);
      swift_bridgeObjectRelease(v67);
      v70 = v64;
      if ((v69 & 1) != 0)
        goto LABEL_58;
    }
    else
    {
      v71 = *(_BYTE *)(v27 + 32);
      v64 = 1 << v71;
      v72 = *(_QWORD *)(v27 + 56);
      if (v72)
      {
        v73 = 0;
      }
      else
      {
        v80 = v71 & 0x3F;
        if (v80 < 7)
          goto LABEL_57;
        v72 = *(_QWORD *)(v27 + 64);
        if (v72)
        {
          v73 = 1;
        }
        else
        {
          if (v80 < 8)
            goto LABEL_57;
          v72 = *(_QWORD *)(v27 + 72);
          if (!v72)
          {
            v81 = 0;
            v82 = (unint64_t)(v64 + 63) >> 6;
            if (v82 <= 3)
              v82 = 3;
            v83 = v82 - 3;
            while (v83 != v81)
            {
              v72 = *(_QWORD *)(v27 + 80 + 8 * v81++);
              if (v72)
              {
                v73 = v81 + 2;
                goto LABEL_43;
              }
            }
LABEL_57:
            v66 = *(unsigned int *)(v27 + 36);
            swift_bridgeObjectRetain(v27);
LABEL_58:
            sub_10003E0E0(v64, v66, v62 != 0);
            swift_bridgeObjectRelease(v42);
            swift_bridgeObjectRelease(v98);
            v12 = v94;
            v21 = v99;
LABEL_5:
            swift_bridgeObjectRelease(v27);
            swift_bridgeObjectRelease(v43);
            goto LABEL_6;
          }
          v73 = 2;
        }
      }
LABEL_43:
      v70 = __clz(__rbit64(v72)) + (v73 << 6);
      v66 = *(unsigned int *)(v27 + 36);
      swift_bridgeObjectRetain(v27);
      if (v70 == v64)
        goto LABEL_58;
    }
    v74 = sub_100478468(v70, v66, v62 != 0, v27);
    sub_10003E0E0(v70, v66, v62 != 0);
    swift_bridgeObjectRelease(v43);
    swift_bridgeObjectRelease(v42);
    swift_bridgeObjectRelease(v98);
    swift_bridgeObjectRelease(v27);
    v75 = v74 + *(_QWORD *)(*(_QWORD *)v74 + 144);
    swift_beginAccess(v75, v109, 0, 0);
    v76 = v75;
    v77 = v92;
    sub_10002B1E8(v76, v92, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_release();
    v78 = v77;
    v79 = v91;
    sub_10001F580(v78, v91, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10007641C(v79, 5);
    sub_10001F544(v79, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v12 = v94;
    v21 = v99;
LABEL_6:
    sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  }
  v33 = v21 + 4;
  if (v21 + 4 >= v95)
  {
LABEL_64:
    sub_10003E410(v103);
    *(_BYTE *)(v104 + v90) = 1;
    return;
  }
  v31 = *(_QWORD *)(v96 + 8 * v33);
  if (v31)
  {
    v32 = v21 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    v32 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v32 >= v95)
      goto LABEL_64;
    v31 = *(_QWORD *)(v96 + 8 * v32);
    ++v33;
    if (v31)
      goto LABEL_22;
  }
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
}

uint64_t sub_10006E768@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(_QWORD)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v9;

  if ((a2() & 1) != 0)
  {
    sub_10002B1E8(a1, a4, a3);
    v7 = a3(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a4, 0, 1, v7);
  }
  else
  {
    v9 = a3(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a4, 1, 1, v9);
  }
}

uint64_t sub_10006E804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t inited;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  int64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99[24];
  char v100[24];
  _BYTE v101[24];
  char v102[32];

  v1 = v0;
  v2 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v3 = __chkstk_darwin(v2);
  v85 = (uint64_t)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v84 = (uint64_t)&v82 - v5;
  v6 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v93 = (uint64_t)&v82 - v11;
  v83 = qword_100645F58;
  *(_BYTE *)(v0 + qword_100645F58) = 0;
  v12 = v0 + qword_100645F48;
  swift_beginAccess(v12, v102, 0, 0);
  v13 = *(_QWORD *)(v12 + 8);
  swift_beginAccess(v12, v101, 33, 0);
  swift_bridgeObjectRetain_n(v13, 2);
  sub_100477D88(v13);
  v14 = *(_QWORD *)(v12 + 8);
  *(_QWORD *)(v12 + 8) = &_swiftEmptySetSingleton;
  swift_endAccess(v101);
  result = swift_bridgeObjectRelease(v14);
  v16 = *(_QWORD *)(v13 + 56);
  v90 = v13 + 56;
  v17 = -1;
  v94 = v13;
  v18 = -1 << *(_BYTE *)(v13 + 32);
  if (-v18 < 64)
    v17 = ~(-1 << -(char)v18);
  v19 = v17 & v16;
  v92 = qword_100645F38;
  v95 = v1 + qword_100645F30;
  v96 = 0;
  v82 = v18;
  v89 = (unint64_t)(63 - v18) >> 6;
  v88 = v1;
  v87 = v10;
  v86 = v7;
  while (1)
  {
    if (v19)
    {
      v98 = (v19 - 1) & v19;
      v21 = __clz(__rbit64(v19)) | (v96 << 6);
      goto LABEL_23;
    }
    v22 = v96 + 1;
    if (__OFADD__(v96, 1))
    {
      __break(1u);
      goto LABEL_66;
    }
    if (v22 >= v89)
      goto LABEL_64;
    v23 = *(_QWORD *)(v90 + 8 * v22);
    v24 = v96 + 1;
    if (!v23)
    {
      v24 = v96 + 2;
      if (v96 + 2 >= v89)
        goto LABEL_64;
      v23 = *(_QWORD *)(v90 + 8 * v24);
      if (!v23)
      {
        v24 = v96 + 3;
        if (v96 + 3 >= v89)
          goto LABEL_64;
        v23 = *(_QWORD *)(v90 + 8 * v24);
        if (!v23)
          break;
      }
    }
LABEL_22:
    v98 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v24 << 6);
    v96 = v24;
LABEL_23:
    v26 = v93;
    sub_10002B1E8(*(_QWORD *)(v94 + 48) + *(_QWORD *)(v7 + 72) * v21, v93, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    sub_10001F580(v26, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    if (*(_BYTE *)(v1 + v92) == 1)
    {
      if (qword_10063D3C8 != -1)
        swift_once(&qword_10063D3C8, sub_1000E35C8);
      v27 = type metadata accessor for Logger(0);
      v28 = sub_100012DC4(v27, (uint64_t)qword_100645EC0);
      v29 = Logger.logObject.getter(v28);
      v30 = static os_log_type_t.fault.getter(v29);
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v31 = 0;
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "Attempting to read sectionMetadata while it is being modified", v31, 2u);
        swift_slowDealloc(v31, -1, -1);
      }

    }
    v32 = *(_QWORD *)v95;
    v33 = *(_QWORD *)(v95 + 8);
    v34 = *(_QWORD *)(v95 + 16);
    if (*(_QWORD *)v95)
    {
      v35 = *(_QWORD *)v95;
      v36 = *(_QWORD *)(v95 + 8);
      v97 = *(_QWORD *)(v95 + 16);
    }
    else
    {
      v91 = *(unsigned __int8 *)(v95 + 24);
      v37 = sub_10002A750((uint64_t *)&unk_100640E10);
      inited = swift_initStackObject(v37, v100);
      *(_QWORD *)(inited + 16) = sub_1000719F4((unint64_t)_swiftEmptyArrayStorage);
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      {
        result = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage);
        if (result)
        {
          v78 = result;
          if (result < 1)
            goto LABEL_67;
          v79 = &_swiftEmptyArrayStorage[4];
          do
          {
            v80 = *v79++;
            swift_weakAssign(v80 + 56, 0);
            swift_beginAccess(v80 + 64, v99, 1, 0);
            v81 = *(_QWORD *)(v80 + 64);
            *(_QWORD *)(v80 + 64) = _swiftEmptyArrayStorage;
            swift_bridgeObjectRelease(v81);
            --v78;
          }
          while (v78);
        }
      }
      sub_100070F40(inited);
      v40 = v39;
      v36 = v41;
      v43 = v42;
      v45 = v44;
      swift_setDeallocating(inited);
      swift_bridgeObjectRelease(*(_QWORD *)(inited + 16));
      v46 = v45 & 1;
      v47 = v95;
      v48 = *(_QWORD *)v95;
      v49 = *(_QWORD *)(v95 + 8);
      v50 = *(_QWORD *)(v95 + 16);
      *(_QWORD *)v95 = v40;
      *(_QWORD *)(v47 + 8) = v36;
      *(_QWORD *)(v47 + 16) = v43;
      *(_BYTE *)(v47 + 24) = v46;
      swift_bridgeObjectRetain(v40);
      swift_bridgeObjectRetain(v36);
      v97 = v43;
      v51 = v43;
      v35 = v40;
      swift_bridgeObjectRetain(v51);
      v52 = v48;
      v1 = v88;
      sub_1000072F0(v52, v49, v50);
      v7 = v86;
      v10 = v87;
    }
    v53 = *(_QWORD *)(v36 + 16);
    sub_10002340C(v32, v33, v34);
    if (!v53 || (v54 = sub_1002AA6DC((uint64_t)v10), (v55 & 1) == 0))
    {
      swift_bridgeObjectRelease(v36);
      v20 = v35;
      goto LABEL_5;
    }
    v20 = *(_QWORD *)(*(_QWORD *)(v36 + 56) + 8 * v54);
    v56 = v20 & 0xC000000000000001;
    if ((v20 & 0xC000000000000001) != 0)
    {
      if (v20 < 0)
        v57 = *(_QWORD *)(*(_QWORD *)(v36 + 56) + 8 * v54);
      else
        v57 = v20 & 0xFFFFFFFFFFFFFF8;
      v58 = __CocoaSet.startIndex.getter(v57);
      v60 = v59;
      v61 = __CocoaSet.endIndex.getter(v57);
      v63 = static __CocoaSet.Index.== infix(_:_:)(v58, v60, v61, v62);
      swift_bridgeObjectRetain(v20);
      swift_bridgeObjectRelease(v61);
      v64 = v58;
      if ((v63 & 1) != 0)
        goto LABEL_58;
    }
    else
    {
      v65 = *(_BYTE *)(v20 + 32);
      v58 = 1 << v65;
      v66 = *(_QWORD *)(v20 + 56);
      if (v66)
      {
        v67 = 0;
      }
      else
      {
        v74 = v65 & 0x3F;
        if (v74 < 7)
          goto LABEL_57;
        v66 = *(_QWORD *)(v20 + 64);
        if (v66)
        {
          v67 = 1;
        }
        else
        {
          if (v74 < 8)
            goto LABEL_57;
          v66 = *(_QWORD *)(v20 + 72);
          if (!v66)
          {
            v75 = 0;
            v76 = (unint64_t)(v58 + 63) >> 6;
            if (v76 <= 3)
              v76 = 3;
            v77 = v76 - 3;
            while (v77 != v75)
            {
              v66 = *(_QWORD *)(v20 + 80 + 8 * v75++);
              if (v66)
              {
                v67 = v75 + 2;
                goto LABEL_43;
              }
            }
LABEL_57:
            v60 = *(unsigned int *)(v20 + 36);
            swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v36 + 56) + 8 * v54));
LABEL_58:
            sub_10003E0E0(v58, v60, v56 != 0);
            swift_bridgeObjectRelease(v36);
            swift_bridgeObjectRelease(v35);
            v1 = v88;
            v10 = v87;
LABEL_5:
            swift_bridgeObjectRelease(v20);
            swift_bridgeObjectRelease(v97);
            goto LABEL_6;
          }
          v67 = 2;
        }
      }
LABEL_43:
      v64 = __clz(__rbit64(v66)) + (v67 << 6);
      v60 = *(unsigned int *)(v20 + 36);
      swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v36 + 56) + 8 * v54));
      if (v64 == v58)
        goto LABEL_58;
    }
    v68 = sub_1004786DC(v64, v60, v56 != 0, v20);
    sub_10003E0E0(v64, v60, v56 != 0);
    swift_bridgeObjectRelease(v97);
    swift_bridgeObjectRelease(v36);
    swift_bridgeObjectRelease(v35);
    swift_bridgeObjectRelease(v20);
    v69 = v68 + *(_QWORD *)(*(_QWORD *)v68 + 144);
    swift_beginAccess(v69, v101, 0, 0);
    v70 = v69;
    v71 = v85;
    sub_10002B1E8(v70, v85, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    swift_release(v68);
    v72 = v71;
    v73 = v84;
    sub_10001F580(v72, v84, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v1 = v88;
    sub_10007399C(v73, 5);
    sub_10001F544(v73, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v10 = v87;
LABEL_6:
    v19 = v98;
    result = sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  }
  v25 = v96 + 4;
  if (v96 + 4 >= v89)
  {
LABEL_64:
    result = sub_10003E410(v94);
    *(_BYTE *)(v1 + v83) = 1;
    return result;
  }
  v23 = *(_QWORD *)(v90 + 8 * v25);
  if (v23)
  {
    v24 = v96 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    v24 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v24 >= v89)
      goto LABEL_64;
    v23 = *(_QWORD *)(v90 + 8 * v24);
    ++v25;
    if (v23)
      goto LABEL_22;
  }
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
  return result;
}

void sub_10006F01C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  int64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int64_t v94;
  unint64_t v95;
  char v96[24];
  _BYTE v97[24];
  char v98[32];

  v1 = v0;
  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v2);
  v83 = (uint64_t)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v82 = (uint64_t)&v80 - v5;
  v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v92 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v91 = (uint64_t)&v80 - v10;
  v81 = qword_100645F58;
  *(_BYTE *)(v0 + qword_100645F58) = 0;
  v11 = v0 + qword_100645F48;
  swift_beginAccess(v11, v98, 0, 0);
  v12 = *(_QWORD *)(v11 + 8);
  swift_beginAccess(v11, v97, 33, 0);
  swift_bridgeObjectRetain_n(v12, 2);
  sub_100477FC0(v12);
  v13 = *(_QWORD *)(v11 + 8);
  *(_QWORD *)(v11 + 8) = &_swiftEmptySetSingleton;
  swift_endAccess(v97);
  swift_bridgeObjectRelease(v13);
  v14 = 0;
  v15 = *(_QWORD *)(v12 + 56);
  v88 = v12 + 56;
  v16 = -1;
  v93 = v12;
  v17 = -1 << *(_BYTE *)(v12 + 32);
  if (-v17 < 64)
    v16 = ~(-1 << -(char)v17);
  v18 = v16 & v15;
  v90 = qword_100645F38;
  v19 = v1 + qword_100645F30;
  v80 = v17;
  v87 = (unint64_t)(63 - v17) >> 6;
  v85 = v8;
  v86 = v1;
  v84 = v1 + qword_100645F30;
  while (1)
  {
    if (v18)
    {
      v21 = __clz(__rbit64(v18));
      v22 = (v18 - 1) & v18;
      v23 = v21 | (v14 << 6);
      goto LABEL_23;
    }
    v24 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_66;
    }
    if (v24 >= v87)
      goto LABEL_64;
    v25 = *(_QWORD *)(v88 + 8 * v24);
    v26 = v14 + 1;
    if (!v25)
    {
      v26 = v14 + 2;
      if (v14 + 2 >= v87)
        goto LABEL_64;
      v25 = *(_QWORD *)(v88 + 8 * v26);
      if (!v25)
      {
        v26 = v14 + 3;
        if (v14 + 3 >= v87)
          goto LABEL_64;
        v25 = *(_QWORD *)(v88 + 8 * v26);
        if (!v25)
          break;
      }
    }
LABEL_22:
    v22 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v26 << 6);
    v14 = v26;
LABEL_23:
    v28 = v91;
    sub_10002B1E8(*(_QWORD *)(v93 + 48) + *(_QWORD *)(v92 + 72) * v23, v91, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10001F580(v28, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    if (*(_BYTE *)(v1 + v90) == 1)
    {
      if (qword_10063D3C8 != -1)
        swift_once(&qword_10063D3C8, sub_1000E35C8);
      v29 = type metadata accessor for Logger(0);
      v30 = sub_100012DC4(v29, (uint64_t)qword_100645EC0);
      v31 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.fault.getter(v31);
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v33 = 0;
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Attempting to read sectionMetadata while it is being modified", v33, 2u);
        swift_slowDealloc(v33, -1, -1);
      }

    }
    v35 = *(_QWORD *)v19;
    v34 = *(_QWORD *)(v19 + 8);
    v36 = *(_QWORD *)(v19 + 16);
    v95 = v22;
    if (v35)
    {
      swift_bridgeObjectRetain(v35);
      swift_bridgeObjectRetain(v34);
      swift_bridgeObjectRetain(v36);
      v37 = v34;
      v38 = v36;
      if (!*(_QWORD *)(v34 + 16))
        goto LABEL_4;
    }
    else
    {
      v94 = v14;
      v89 = *(unsigned __int8 *)(v19 + 24);
      v39 = sub_10002A750((uint64_t *)&unk_100646400);
      v40 = swift_allocObject(v39, 24, 7);
      *(_QWORD *)(v40 + 16) = sub_100071630((uint64_t)_swiftEmptyArrayStorage);
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      {
        v75 = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage);
        if (v75)
        {
          v76 = v75;
          if (v75 < 1)
            goto LABEL_67;
          v77 = &_swiftEmptyArrayStorage[4];
          v19 = v84;
          do
          {
            v78 = *v77++;
            swift_weakAssign(v78 + 56, 0);
            swift_beginAccess(v78 + 64, v96, 1, 0);
            v79 = *(_QWORD *)(v78 + 64);
            *(_QWORD *)(v78 + 64) = _swiftEmptyArrayStorage;
            swift_bridgeObjectRelease(v79);
            --v76;
          }
          while (v76);
        }
      }
      sub_100070B1C(v40);
      v35 = v41;
      v37 = v42;
      v38 = v43;
      v45 = v44;
      swift_release();
      v46 = v45 & 1;
      v47 = *(_QWORD *)v19;
      v48 = *(_QWORD *)(v19 + 8);
      v49 = *(_QWORD *)(v19 + 16);
      *(_QWORD *)v19 = v35;
      *(_QWORD *)(v19 + 8) = v37;
      *(_QWORD *)(v19 + 16) = v38;
      *(_BYTE *)(v19 + 24) = v46;
      swift_bridgeObjectRetain(v35);
      swift_bridgeObjectRetain(v37);
      swift_bridgeObjectRetain(v38);
      v50 = v48;
      v1 = v86;
      sub_1000072F0(v47, v50, v49);
      sub_1000072F0(0, v34, v36);
      v8 = v85;
      v14 = v94;
      if (!*(_QWORD *)(v37 + 16))
      {
LABEL_4:
        swift_bridgeObjectRelease(v37);
        v20 = v35;
        goto LABEL_5;
      }
    }
    v51 = sub_1002AA39C((uint64_t)v8);
    if ((v52 & 1) == 0)
      goto LABEL_4;
    v20 = *(_QWORD *)(*(_QWORD *)(v37 + 56) + 8 * v51);
    v53 = v20 & 0xC000000000000001;
    v94 = v14;
    if ((v20 & 0xC000000000000001) != 0)
    {
      if (v20 < 0)
        v54 = v20;
      else
        v54 = v20 & 0xFFFFFFFFFFFFFF8;
      v55 = __CocoaSet.startIndex.getter(v54);
      v57 = v56;
      v58 = __CocoaSet.endIndex.getter(v54);
      v60 = static __CocoaSet.Index.== infix(_:_:)(v55, v57, v58, v59);
      swift_bridgeObjectRetain(v20);
      swift_bridgeObjectRelease(v58);
      v61 = v55;
      if ((v60 & 1) != 0)
        goto LABEL_58;
    }
    else
    {
      v62 = *(_BYTE *)(v20 + 32);
      v55 = 1 << v62;
      v63 = *(_QWORD *)(v20 + 56);
      if (v63)
      {
        v64 = 0;
      }
      else
      {
        v71 = v62 & 0x3F;
        if (v71 < 7)
          goto LABEL_57;
        v63 = *(_QWORD *)(v20 + 64);
        if (v63)
        {
          v64 = 1;
        }
        else
        {
          if (v71 < 8)
            goto LABEL_57;
          v63 = *(_QWORD *)(v20 + 72);
          if (!v63)
          {
            v72 = 0;
            v73 = (unint64_t)(v55 + 63) >> 6;
            if (v73 <= 3)
              v73 = 3;
            v74 = v73 - 3;
            while (v74 != v72)
            {
              v63 = *(_QWORD *)(v20 + 80 + 8 * v72++);
              if (v63)
              {
                v64 = v72 + 2;
                goto LABEL_43;
              }
            }
LABEL_57:
            v57 = *(unsigned int *)(v20 + 36);
            swift_bridgeObjectRetain(v20);
LABEL_58:
            sub_10003E0E0(v55, v57, v53 != 0);
            swift_bridgeObjectRelease(v37);
            swift_bridgeObjectRelease(v35);
            v8 = v85;
            v1 = v86;
            v14 = v94;
            v19 = v84;
LABEL_5:
            swift_bridgeObjectRelease(v20);
            swift_bridgeObjectRelease(v38);
            goto LABEL_6;
          }
          v64 = 2;
        }
      }
LABEL_43:
      v61 = __clz(__rbit64(v63)) + (v64 << 6);
      v57 = *(unsigned int *)(v20 + 36);
      swift_bridgeObjectRetain(v20);
      if (v61 == v55)
        goto LABEL_58;
    }
    v65 = sub_100478468(v61, v57, v53 != 0, v20);
    sub_10003E0E0(v61, v57, v53 != 0);
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v37);
    swift_bridgeObjectRelease(v35);
    swift_bridgeObjectRelease(v20);
    v66 = v65 + *(_QWORD *)(*(_QWORD *)v65 + 144);
    swift_beginAccess(v66, v97, 0, 0);
    v67 = v66;
    v68 = v83;
    sub_10002B1E8(v67, v83, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_release();
    v69 = v68;
    v70 = v82;
    sub_10001F580(v69, v82, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v1 = v86;
    sub_1000768B8(v70, 5);
    sub_10001F544(v70, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v19 = v84;
    v8 = v85;
    v14 = v94;
LABEL_6:
    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v18 = v95;
  }
  v27 = v14 + 4;
  if (v14 + 4 >= v87)
  {
LABEL_64:
    sub_10003E410(v93);
    *(_BYTE *)(v1 + v81) = 1;
    return;
  }
  v25 = *(_QWORD *)(v88 + 8 * v27);
  if (v25)
  {
    v26 = v14 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    v26 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v26 >= v87)
      goto LABEL_64;
    v25 = *(_QWORD *)(v88 + 8 * v26);
    ++v27;
    if (v25)
      goto LABEL_22;
  }
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
}

uint64_t sub_10006F808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  void *Strong;
  char v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  _BYTE v29[24];
  _BYTE v30[24];

  v4 = v3;
  v8 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v8);
  v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v29[-v12];
  v14 = *(_QWORD *)(v3 + qword_100645F10);
  if (!v14)
    goto LABEL_9;
  v15 = *(uint64_t (**)(uint64_t))(v14 + 16);
  v16 = swift_retain();
  if ((v15(v16) & 1) == 0)
  {
    swift_release();
    goto LABEL_9;
  }
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v3 + qword_100645EF8);
  v18 = (*(uint64_t (**)(void *, uint64_t))(v14 + 64))(Strong, a1);
  swift_release();

  if ((v18 & 1) == 0)
  {
LABEL_9:
    v24 = sub_100071344(a1, a2, 0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item, &qword_1006463D0, (uint64_t)sub_1002B3758, (uint64_t (*)(void))sub_1002FE2F8);
    goto LABEL_10;
  }
  v19 = (uint64_t *)(v4 + qword_100645F48);
  swift_beginAccess(v4 + qword_100645F48, v29, 0, 0);
  v20 = *v19;
  v21 = v19[1];
  swift_bridgeObjectRetain(*v19);
  swift_bridgeObjectRetain(v21);
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v22);
  LOBYTE(v19) = sub_10037B2B4((uint64_t)v13, v20);
  sub_10002B1E8((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  if ((v19 & 1) != 0)
  {
    if ((sub_10037B2B4((uint64_t)v10, v21) & 1) != 0)
      v23 = 2;
    else
      v23 = 1;
  }
  else
  {
    v23 = 2;
  }
  sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v20);
  sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v28 = sub_100071344(a1, a2, v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item, &qword_1006463D0, (uint64_t)sub_1002B3758, (uint64_t (*)(void))sub_1002FE2F8);
  v24 = v28;
  if (v23 == 2)
  {
    v25 = sub_10006C5BC(v28, a3);
    goto LABEL_11;
  }
LABEL_10:
  v25 = _swiftEmptyArrayStorage;
LABEL_11:
  swift_beginAccess(v24 + 64, v30, 1, 0);
  v26 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v25;
  swift_bridgeObjectRelease(v26);
  return v24;
}

uint64_t sub_10006FA80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  void *Strong;
  char v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  _BYTE v29[24];
  _BYTE v30[24];

  v4 = v3;
  v8 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v9 = __chkstk_darwin(v8);
  v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v13 = &v29[-v12];
  v14 = *(_QWORD *)(v3 + qword_100645F10);
  if (!v14)
    goto LABEL_9;
  v15 = *(uint64_t (**)(uint64_t))(v14 + 16);
  v16 = swift_retain(v14);
  if ((v15(v16) & 1) == 0)
  {
    swift_release(v14);
    goto LABEL_9;
  }
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v3 + qword_100645EF8);
  v18 = (*(uint64_t (**)(void *, uint64_t))(v14 + 64))(Strong, a1);
  swift_release(v14);

  if ((v18 & 1) == 0)
  {
LABEL_9:
    v24 = sub_100071344(a1, a2, 0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item, (uint64_t *)&unk_100640E20, (uint64_t)sub_1002B3758, (uint64_t (*)(void))sub_1002FE4C8);
    goto LABEL_10;
  }
  v19 = (uint64_t *)(v4 + qword_100645F48);
  swift_beginAccess(v4 + qword_100645F48, v29, 0, 0);
  v20 = *v19;
  v21 = v19[1];
  swift_bridgeObjectRetain(*v19);
  v22 = swift_bridgeObjectRetain(v21);
  TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v22);
  LOBYTE(v19) = sub_10037B6FC((uint64_t)v13, v20);
  sub_10002B1E8((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  if ((v19 & 1) != 0)
  {
    if ((sub_10037B6FC((uint64_t)v11, v21) & 1) != 0)
      v23 = 2;
    else
      v23 = 1;
  }
  else
  {
    v23 = 2;
  }
  sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v20);
  sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  v28 = sub_100071344(a1, a2, v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item, (uint64_t *)&unk_100640E20, (uint64_t)sub_1002B3758, (uint64_t (*)(void))sub_1002FE4C8);
  v24 = v28;
  if (v23 == 2)
  {
    v25 = sub_10006C8BC(v28, a3);
    goto LABEL_11;
  }
LABEL_10:
  v25 = _swiftEmptyArrayStorage;
LABEL_11:
  swift_beginAccess(v24 + 64, v30, 1, 0);
  v26 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v25;
  swift_bridgeObjectRelease(v26);
  return v24;
}

uint64_t *sub_10006FCF8(uint64_t *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24[24];

  v3 = v1;
  v4 = result;
  v5 = *result;
  if ((unint64_t)*result >> 62)
  {
    if (v5 < 0)
      v16 = *result;
    else
      v16 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*result);
    v6 = _CocoaArrayWrapper.endIndex.getter(v16);
    result = (uint64_t *)swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = *(_QWORD *)(v3 + 24);
  if (*(_BYTE *)(v3 + 32))
    v7 = -1;
  v8 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (*(_BYTE *)(v3 + 72) == 2)
  {
    swift_beginAccess(v3 + 64, v24, 0, 0);
    v2 = *(_QWORD *)(v3 + 64);
    v23 = v6;
    if (!((unint64_t)v2 >> 62))
    {
      v9 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = (uint64_t *)swift_bridgeObjectRetain(v2);
      if (v9)
      {
LABEL_9:
        if (v9 < 1)
          goto LABEL_37;
        v10 = 0;
        do
        {
          if ((v2 & 0xC000000000000001) != 0)
          {
            v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v2);
          }
          else
          {
            v11 = *(_QWORD *)(v2 + 8 * v10 + 32);
            swift_retain(v11);
          }
          *(_QWORD *)(v11 + 24) = v8;
          *(_BYTE *)(v11 + 32) = 0;
          v12 = swift_retain(v11);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
          v14 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v13 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v14 >= v13 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
          ++v10;
          v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v11);
          specialized Array._endMutation()(v15);
          sub_10006FCF8(v4);
          swift_release(v11);
        }
        while (v9 != v10);
      }
LABEL_27:
      result = (uint64_t *)swift_bridgeObjectRelease(v2);
      v6 = v23;
      goto LABEL_28;
    }
LABEL_23:
    if (v2 < 0)
      v17 = v2;
    else
      v17 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    result = (uint64_t *)_CocoaArrayWrapper.endIndex.getter(v17);
    v9 = (uint64_t)result;
    if (result)
      goto LABEL_9;
    goto LABEL_27;
  }
LABEL_28:
  v18 = *v4;
  if ((unint64_t)*v4 >> 62)
  {
    if (v18 < 0)
      v21 = *v4;
    else
      v21 = v18 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v18);
    v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    result = (uint64_t *)swift_bridgeObjectRelease(v18);
    v20 = v22 - v6;
    if (!__OFSUB__(v22, v6))
      goto LABEL_30;
  }
  else
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    v20 = v19 - v6;
    if (!__OFSUB__(v19, v6))
    {
LABEL_30:
      *(_QWORD *)(v3 + 40) = v20;
      *(_BYTE *)(v3 + 48) = 0;
      return result;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

void sub_10006FF24(uint64_t a1, uint64_t a2)
{
  sub_10006FF6C(a1, a2, (uint64_t *)&unk_100640EB0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item, (void (*)(char *, _QWORD, uint64_t))sub_10006F808, (void (*)(_QWORD **))sub_1000778C0);
}

void sub_10006FF48(uint64_t a1, uint64_t a2)
{
  sub_10006FF6C(a1, a2, (uint64_t *)&unk_100640E00, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item, (void (*)(char *, _QWORD, uint64_t))sub_10006FA80, (void (*)(_QWORD **))sub_10006FCF8);
}

void sub_10006FF6C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD), void (*a5)(char *, _QWORD, uint64_t), void (*a6)(_QWORD **))
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  void *Strong;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, _QWORD, uint64_t);
  void (*v32)(_QWORD **);
  _QWORD *v33;

  v31 = a5;
  v32 = a6;
  v29 = a1;
  v30 = a2;
  v9 = type metadata accessor for Logger(0);
  v26 = *(_QWORD *)(v9 - 8);
  v27 = v9;
  __chkstk_darwin(v9);
  v28 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750(a3);
  __chkstk_darwin(v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a4(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v26 - v16;
  v18 = *(_QWORD *)(v6 + qword_100645F10);
  if (v18)
  {
    v19 = *(uint64_t (**)(uint64_t))(v18 + 16);
    v20 = swift_retain(v18);
    if ((v19(v20) & 1) != 0)
    {
      Strong = (void *)swift_unknownObjectUnownedLoadStrong(v6 + qword_100645EF8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
      (*(void (**)(void *, uint64_t, char *))(v18 + 48))(Strong, v29, v13);

      sub_1000073A0((uint64_t)v13, a3);
      v31(v17, 0, v30);
      v33 = _swiftEmptyArrayStorage;
      v32(&v33);
      swift_release(v18);
      sub_10001F544((uint64_t)v17, a4);
      return;
    }
    swift_release(v18);
  }
  if (qword_10063D3C8 != -1)
    swift_once(&qword_10063D3C8, sub_1000E35C8);
  v22 = v27;
  v23 = sub_100012DC4(v27, (uint64_t)qword_100645EC0);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v28, v23, v22);
  v24 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  v25 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1002EB23C((uint64_t)"Need non-nil dataSource here", 28, 2uLL, v24, v25);
  __break(1u);
}

void sub_1000701C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  __n128 v42;
  char *v43;
  id v44;
  uint64_t v45;
  Class isa;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char v55[32];

  v10 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v10);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v52 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10007335C(a1, a3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID, (void (*)(uint64_t))&TTRRemindersListViewModel.Item.treeItemIdentifier.getter, (uint64_t (*)(char *))sub_1002AA39C, sub_1000CE5E4);
  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
LABEL_50:
    sub_1000073A0((uint64_t)v12, &qword_100646950);
    return;
  }
  v17 = v16;
  if (!*(_QWORD *)(a4 + 16))
    goto LABEL_48;
  v18 = sub_1002AA398(v16);
  if ((v19 & 1) == 0)
    goto LABEL_48;
  v20 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v18);
  if ((a5 & 1) != 0)
  {
    v47 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v18);
    v48 = v14;
    v49 = v13;
    Strong = swift_weakLoadStrong(v17 + 56);
    swift_retain();
    v22 = 0;
    if (Strong)
    {
      v23 = v17;
      v50 = v17;
      v51 = v12;
      do
      {
        v24 = __OFADD__(v22++, 1);
        if (v24)
        {
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
          goto LABEL_59;
        }
        v25 = Strong;
        swift_beginAccess(Strong + 64, v55, 0, 0);
        v26 = *(_QWORD *)(Strong + 64);
        if ((unint64_t)v26 >> 62)
        {
          if (v26 < 0)
            v34 = *(_QWORD *)(Strong + 64);
          else
            v34 = v26 & 0xFFFFFFFFFFFFFF8;
          swift_retain();
          swift_bridgeObjectRetain(v26);
          v27 = _CocoaArrayWrapper.endIndex.getter(v34);
          if (!v27)
          {
LABEL_7:
            swift_release();
            swift_bridgeObjectRelease(v26);
            goto LABEL_8;
          }
        }
        else
        {
          v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_retain();
          swift_bridgeObjectRetain(v26);
          if (!v27)
            goto LABEL_7;
        }
        if ((v26 & 0xC000000000000001) != 0)
        {
          v28 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v26);
          if (v28 != v23)
            goto LABEL_15;
        }
        else
        {
          if (!*(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_57;
          v28 = *(_QWORD *)(v26 + 32);
          swift_retain();
          if (v28 != v23)
          {
LABEL_15:
            v29 = 0;
            v30 = v27 - 1;
            while (1)
            {
              v31 = v22 + 1;
              if (__OFADD__(v22, 1))
                break;
              if ((*(_BYTE *)(v28 + 48) & 1) != 0)
              {
                v54 = 0;
                sub_10019D874(v28, &v54);
                v32 = v54;
                *(_QWORD *)(v28 + 40) = v54;
                *(_BYTE *)(v28 + 48) = 0;
              }
              else
              {
                v32 = *(_QWORD *)(v28 + 40);
              }
              swift_release();
              v24 = __OFADD__(v31, v32);
              v22 = v31 + v32;
              if (v24)
                goto LABEL_53;
              if (v30 == v29)
              {
                swift_release();
                swift_bridgeObjectRelease(v26);
                goto LABEL_31;
              }
              v33 = v29 + 1;
              if ((v26 & 0xC000000000000001) != 0)
              {
                v28 = specialized _ArrayBuffer._getElementSlowPath(_:)(v29 + 1, v26);
                if (__OFADD__(v33, 1))
                  goto LABEL_54;
              }
              else
              {
                if (v33 >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_55;
                v28 = *(_QWORD *)(v26 + 8 * v29 + 40);
                swift_retain();
                if (__OFADD__(v33, 1))
                  goto LABEL_54;
              }
              ++v29;
              if (v28 == v23)
                goto LABEL_29;
            }
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
            goto LABEL_56;
          }
        }
LABEL_29:
        swift_bridgeObjectRelease(v26);
        swift_release_n(v23, 2);
LABEL_31:
        v12 = v51;
LABEL_8:
        Strong = swift_weakLoadStrong(v25 + 56);
        swift_release();
        v23 = v25;
      }
      while (Strong);
    }
    swift_release();
    v40 = v22 - 1;
    if (!__OFSUB__(v22, 1))
    {
      v14 = v48;
      v13 = v49;
      if ((v40 & 0x8000000000000000) == 0)
      {
        v41 = v47;
        goto LABEL_47;
      }
LABEL_48:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
      goto LABEL_49;
    }
LABEL_60:
    __break(1u);
    return;
  }
  if ((v20 & 0x8000000000000000) != 0)
    goto LABEL_58;
  if (v20 >= *(_QWORD *)(a2 + 16))
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  v35 = *(_QWORD *)(a2 + 16 * v20 + 40);
  swift_bridgeObjectRetain(v35);
  v37 = sub_10007324C(v36, v17);
  v39 = v38;
  swift_bridgeObjectRelease(v35);
  if ((v39 & 1) != 0)
    goto LABEL_48;
  v40 = v37;
  v41 = v20;
LABEL_47:
  IndexPath.init(row:section:)(v40, v41);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
LABEL_49:
  v42 = swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v14 + 48))(v12, 1, v13, v42) == 1)
    goto LABEL_50;
  v43 = v52;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v52, v12, v13);
  v44 = *(id *)(v53 + qword_100645F00);
  v45 = v14;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v44, "cellForRowAtIndexPath:", isa);

  (*(void (**)(char *, uint64_t))(v45 + 8))(v43, v13);
}

uint64_t sub_100070670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  char v19;
  unint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  unint64_t v40;
  id v41;
  char *v42;
  id v43;
  uint64_t v44;
  Class isa;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char v54[32];

  v10 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v10);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v51 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10007335C(a1, a3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (void (*)(uint64_t))&TTRAccountsListsViewModel.Item.treeItemIdentifier.getter, (uint64_t (*)(char *))sub_1002AA6DC, sub_1000CE774);
  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    goto LABEL_51;
  }
  v17 = v16;
  if (!*(_QWORD *)(a4 + 16))
    goto LABEL_49;
  result = sub_1002AA398(v16);
  if ((v19 & 1) == 0)
    goto LABEL_49;
  v20 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * result);
  if ((a5 & 1) != 0)
  {
    v46 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * result);
    v47 = v14;
    v48 = v13;
    Strong = swift_weakLoadStrong(v17 + 56);
    result = swift_retain(v17);
    v22 = 0;
    if (Strong)
    {
      v23 = v17;
      v49 = v17;
      v50 = v12;
      while (1)
      {
        v24 = __OFADD__(v22++, 1);
        if (v24)
        {
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
        v25 = Strong;
        swift_beginAccess(Strong + 64, v54, 0, 0);
        v26 = *(_QWORD *)(Strong + 64);
        if ((unint64_t)v26 >> 62)
        {
          if (v26 < 0)
            v34 = *(_QWORD *)(Strong + 64);
          else
            v34 = v26 & 0xFFFFFFFFFFFFFF8;
          swift_retain(v25);
          swift_bridgeObjectRetain(v26);
          result = _CocoaArrayWrapper.endIndex.getter(v34);
          v27 = result;
          if (!result)
          {
LABEL_7:
            swift_release(v23);
            swift_bridgeObjectRelease(v26);
            goto LABEL_8;
          }
        }
        else
        {
          v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_retain(v25);
          result = swift_bridgeObjectRetain(v26);
          if (!v27)
            goto LABEL_7;
        }
        if ((v26 & 0xC000000000000001) != 0)
        {
          result = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v26);
          v28 = result;
          if (result != v23)
            goto LABEL_15;
        }
        else
        {
          if (!*(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_59;
          v28 = *(_QWORD *)(v26 + 32);
          result = swift_retain(v28);
          if (v28 != v23)
          {
LABEL_15:
            v29 = 0;
            v30 = v27 - 1;
            while (1)
            {
              v31 = v22 + 1;
              if (__OFADD__(v22, 1))
                break;
              if ((*(_BYTE *)(v28 + 48) & 1) != 0)
              {
                v53 = 0;
                sub_10019D874(v28, &v53);
                v32 = v53;
                *(_QWORD *)(v28 + 40) = v53;
                *(_BYTE *)(v28 + 48) = 0;
              }
              else
              {
                v32 = *(_QWORD *)(v28 + 40);
              }
              result = swift_release(v28);
              v24 = __OFADD__(v31, v32);
              v22 = v31 + v32;
              if (v24)
                goto LABEL_55;
              if (v30 == v29)
              {
                swift_release(v23);
                swift_bridgeObjectRelease(v26);
                goto LABEL_31;
              }
              v33 = v29 + 1;
              if ((v26 & 0xC000000000000001) != 0)
              {
                result = specialized _ArrayBuffer._getElementSlowPath(_:)(v29 + 1, v26);
                v28 = result;
                if (__OFADD__(v33, 1))
                  goto LABEL_56;
              }
              else
              {
                if (v33 >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_57;
                v28 = *(_QWORD *)(v26 + 8 * v29 + 40);
                result = swift_retain(v28);
                if (__OFADD__(v33, 1))
                  goto LABEL_56;
              }
              ++v29;
              if (v28 == v23)
                goto LABEL_29;
            }
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
            goto LABEL_58;
          }
        }
LABEL_29:
        swift_bridgeObjectRelease(v26);
        swift_release_n(v23, 2);
LABEL_31:
        v17 = v49;
        v12 = v50;
LABEL_8:
        Strong = swift_weakLoadStrong(v25 + 56);
        result = swift_release(v25);
        v23 = v25;
        if (!Strong)
          goto LABEL_45;
      }
    }
    v25 = v17;
LABEL_45:
    swift_release(v25);
    result = v22 - 1;
    if (!__OFSUB__(v22, 1))
    {
      v14 = v47;
      v13 = v48;
      if ((result & 0x8000000000000000) == 0)
      {
        v40 = v46;
        goto LABEL_48;
      }
      goto LABEL_49;
    }
  }
  else
  {
    if ((v20 & 0x8000000000000000) != 0)
      goto LABEL_60;
    if (v20 < *(_QWORD *)(a2 + 16))
    {
      v35 = *(_QWORD *)(a2 + 16 * v20 + 40);
      v36 = swift_bridgeObjectRetain(v35);
      v37 = sub_10007324C(v36, v17);
      v39 = v38;
      swift_bridgeObjectRelease(v35);
      if ((v39 & 1) == 0)
      {
        result = v37;
        v40 = v20;
LABEL_48:
        IndexPath.init(row:section:)(result, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
        goto LABEL_50;
      }
LABEL_49:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
LABEL_50:
      swift_release(v17);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
      {
        v42 = v51;
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v51, v12, v13);
        v43 = *(id *)(v52 + qword_100645F00);
        v44 = v14;
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v41 = objc_msgSend(v43, "cellForRowAtIndexPath:", isa);

        (*(void (**)(char *, uint64_t))(v44 + 8))(v42, v13);
        return (uint64_t)v41;
      }
LABEL_51:
      sub_1000073A0((uint64_t)v12, &qword_100646950);
      return 0;
    }
LABEL_61:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100070B1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  void *Strong;
  uint64_t (*v17)(void *, char *);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *inited;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[40];
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  char v50;

  v2 = v1;
  v43 = a1;
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v10);
  v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = _swiftEmptyArrayStorage;
  v48 = _swiftEmptyDictionarySingleton;
  v49 = _swiftEmptyDictionarySingleton;
  v50 = 1;
  v42 = qword_100645F10;
  v13 = *(_QWORD *)(v2 + qword_100645F10);
  if (v13)
  {
    v37 = v4;
    v38 = v3;
    v14 = *(uint64_t (**)(uint64_t))(v13 + 16);
    v15 = swift_retain();
    if ((v14(v15) & 1) != 0)
    {
      v41 = v2 + qword_100645EF8;
      Strong = (void *)swift_unknownObjectUnownedLoadStrong(v2 + qword_100645EF8);
      v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v40(v12, 1, 1, v44);
      v17 = *(uint64_t (**)(void *, char *))(v13 + 32);
      v36[1] = v13;
      v18 = v17(Strong, v12);

      sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_100640EB0);
      if ((v18 & 0x8000000000000000) == 0)
      {
        v36[0] = v6;
        if (!v18)
        {
LABEL_10:
          swift_release();
          return;
        }
        v19 = 0;
        v39 = xmmword_100521140;
        while (v18 != v19)
        {
          v20 = *(_QWORD *)(v2 + v42);
          if (!v20)
            goto LABEL_16;
          v21 = *(uint64_t (**)(uint64_t))(v20 + 16);
          v22 = swift_retain();
          if ((v21(v22) & 1) == 0)
            goto LABEL_15;
          v23 = v19 + 1;
          v24 = (void *)swift_unknownObjectUnownedLoadStrong(v41);
          v40(v12, 1, 1, v44);
          (*(void (**)(void *, uint64_t, char *))(v20 + 48))(v24, v19, v12);

          sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_100640EB0);
          v25 = sub_10006F808((uint64_t)v9, 0, v43);
          v46 = _swiftEmptyArrayStorage;
          sub_10006FCF8((uint64_t *)&v46);
          swift_release();
          sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v26 = (uint64_t)v46;
          v27 = v47[2];
          swift_retain();
          swift_bridgeObjectRetain(v26);
          sub_1004397B4(v27, v27, v25, v26);
          swift_bridgeObjectRelease(v26);
          swift_release();
          sub_100069868(v27, 1);
          v28 = sub_10002A750((uint64_t *)&unk_1006415A0);
          inited = (_QWORD *)swift_initStackObject(v28, v45);
          *((_OWORD *)inited + 1) = v39;
          inited[4] = v25;
          v46 = inited;
          specialized Array._endMutation()(inited);
          v30 = (uint64_t)v46;
          swift_retain();
          sub_10006A14C(v30, v27);
          swift_bridgeObjectRelease(v30);
          swift_bridgeObjectRetain(v26);
          sub_10006A14C(v31, v27);
          swift_release();
          swift_bridgeObjectRelease_n(v26, 2);
          v19 = v23;
          if (v18 == v23)
            goto LABEL_10;
        }
        __break(1u);
      }
      __break(1u);
LABEL_15:
      swift_release();
LABEL_16:
      if (qword_10063D3C8 != -1)
        swift_once(&qword_10063D3C8, sub_1000E35C8);
      v32 = v38;
      v33 = sub_100012DC4(v38, (uint64_t)qword_100645EC0);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v37 + 16))(v36[0], v33, v32);
      v34 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
      v35 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
      sub_1002EB23C((uint64_t)"Need non-nil dataSource here", 28, 2uLL, v34, v35);
      __break(1u);
    }
    else
    {
      swift_release();
    }
  }
}

void sub_100070F40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *inited;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  __int128 v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44[40];
  _QWORD *v45;
  _QWORD *v46;
  void *v47;
  void *v48;
  char v49;

  v2 = v1;
  v42 = a1;
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v7 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = _swiftEmptyArrayStorage;
  v47 = &_swiftEmptyDictionarySingleton;
  v48 = &_swiftEmptyDictionarySingleton;
  v49 = 1;
  v41 = qword_100645F10;
  v13 = *(_QWORD *)(v1 + qword_100645F10);
  if (v13)
  {
    v14 = *(uint64_t (**)(uint64_t))(v13 + 16);
    v15 = swift_retain(v13);
    if ((v14(v15) & 1) != 0)
    {
      v40 = v1 + qword_100645EF8;
      v16 = v13;
      Strong = swift_unknownObjectUnownedLoadStrong(v2 + qword_100645EF8);
      v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v39(v12, 1, 1, v43);
      v37 = v16;
      v18 = (*(uint64_t (**)(uint64_t, char *))(v16 + 32))(Strong, v12);

      sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_100640E00);
      if (v18 < 0)
      {
        __break(1u);
LABEL_13:
        swift_release(Strong);
      }
      else
      {
        v34 = v4;
        v35 = v3;
        v36 = v6;
        if (!v18)
        {
LABEL_9:
          swift_release(v37);
          return;
        }
        v19 = 0;
        v38 = xmmword_100521140;
        while (1)
        {
          Strong = *(_QWORD *)(v2 + v41);
          if (!Strong)
            break;
          v20 = *(uint64_t (**)(uint64_t))(Strong + 16);
          v21 = swift_retain(*(_QWORD *)(v2 + v41));
          if ((v20(v21) & 1) == 0)
            goto LABEL_13;
          v22 = v19 + 1;
          v23 = (void *)swift_unknownObjectUnownedLoadStrong(v40);
          v39(v12, 1, 1, v43);
          (*(void (**)(void *, uint64_t, char *))(Strong + 48))(v23, v19, v12);

          sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_100640E00);
          v24 = sub_10006FA80((uint64_t)v9, 0, v42);
          v45 = _swiftEmptyArrayStorage;
          sub_10006FCF8((uint64_t *)&v45);
          swift_release(Strong);
          sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          v25 = (uint64_t)v45;
          v26 = v46[2];
          swift_retain(v24);
          swift_bridgeObjectRetain(v25);
          sub_100438918(v26, v26, v24, v25);
          sub_100069B3C(v26, 1);
          v27 = sub_10002A750((uint64_t *)&unk_1006415A0);
          inited = (_QWORD *)swift_initStackObject(v27, v44);
          *((_OWORD *)inited + 1) = v38;
          inited[4] = v24;
          v45 = inited;
          specialized Array._endMutation()(inited);
          v29 = (uint64_t)v45;
          swift_retain(v24);
          sub_10006A734(v29, v26);
          swift_bridgeObjectRelease(v29);
          sub_10006A734(v25, v26);
          swift_bridgeObjectRelease(v25);
          swift_release(v24);
          v19 = v22;
          if (v18 == v22)
            goto LABEL_9;
        }
      }
      if (qword_10063D3C8 != -1)
        swift_once(&qword_10063D3C8, sub_1000E35C8);
      v30 = v35;
      v31 = sub_100012DC4(v35, (uint64_t)qword_100645EC0);
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v36, v31, v30);
      v32 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
      v33 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
      sub_1002EB23C((uint64_t)"Need non-nil dataSource here", 28, 2uLL, v32, v33);
      __break(1u);
    }
    else
    {
      swift_release(v13);
    }
  }
}

uint64_t sub_100071344(uint64_t a1, uint64_t a2, int a3, uint64_t (*a4)(_QWORD), uint64_t *a5, uint64_t a6, uint64_t (*a7)(void))
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(void);
  int v32;
  _BYTE v33[24];
  _BYTE v34[24];

  v31 = a7;
  v32 = a3;
  v13 = a4(0);
  __chkstk_darwin(v13);
  v15 = (uint64_t)&v31 - v14;
  v16 = (uint64_t *)(v7 + 16);
  swift_beginAccess(v7 + 16, v34, 0, 0);
  v17 = *(_QWORD *)(v7 + 16);
  if (!((unint64_t)v17 >> 62))
  {
    if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_14:
    sub_10002B1E8(a1, v15, a4);
    v25 = sub_10002A750(a5);
    a6 = swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
    *(_QWORD *)(a6 + 24) = 0;
    *(_BYTE *)(a6 + 32) = 1;
    *(_QWORD *)(a6 + 40) = 0;
    *(_BYTE *)(a6 + 48) = 1;
    a1 = a6 + 56;
    swift_weakInit(a6 + 56, 0);
    *(_QWORD *)(a6 + 64) = _swiftEmptyArrayStorage;
    v26 = qword_10063D410;
    swift_retain(a2);
    if (v26 == -1)
    {
LABEL_15:
      *(_QWORD *)(a6 + 16) = TTRCounterBasedIdentifierGenerator.allocID()();
      swift_weakAssign(a1, a2);
      swift_release(a2);
      sub_10001F580(v15, a6 + *(_QWORD *)(*(_QWORD *)a6 + 144), a4);
      *(_BYTE *)(a6 + 72) = v32;
      return a6;
    }
LABEL_22:
    swift_once(&qword_10063D410, sub_100007280);
    goto LABEL_15;
  }
  if (v17 < 0)
    v23 = *(_QWORD *)(v7 + 16);
  else
    v23 = v17 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v7 + 16));
  v24 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(v17);
  if (!v24)
    goto LABEL_14;
LABEL_3:
  swift_beginAccess(v7 + 16, v33, 33, 0);
  v15 = *v16;
  if (!((unint64_t)*v16 >> 62))
  {
    if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
    goto LABEL_21;
  }
  if (v15 < 0)
    v27 = *v16;
  else
    v27 = v15 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v16);
  v28 = _CocoaArrayWrapper.endIndex.getter(v27);
  swift_bridgeObjectRelease(v15);
  if (!v28)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
LABEL_5:
  v18 = sub_1000725E0((uint64_t (*)(uint64_t))a6);
  if (v18)
  {
LABEL_9:
    a6 = v18;
    swift_endAccess(v33);
    swift_weakAssign(a6 + 56, a2);
    v22 = a6 + *(_QWORD *)(*(_QWORD *)a6 + 144);
    swift_beginAccess(v22, v33, 33, 0);
    swift_retain(a6);
    sub_1000763D8(a1, v22, a4);
    swift_endAccess(v33);
    *(_BYTE *)(a6 + 72) = v32;
    swift_release(a6);
    return a6;
  }
  v19 = *v16;
  if ((unint64_t)*v16 >> 62)
  {
    if (v19 < 0)
      v29 = *v16;
    else
      v29 = v19 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v16);
    v30 = _CocoaArrayWrapper.endIndex.getter(v29);
    swift_bridgeObjectRelease(v19);
    result = v30 - 1;
    if (!__OFSUB__(v30, 1))
      goto LABEL_8;
  }
  else
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = v20 - 1;
    if (!__OFSUB__(v20, 1))
    {
LABEL_8:
      v18 = v31();
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100071630(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = a1;
  if (a1 < 0 || (a1 & 0x4000000000000000) != 0)
    goto LABEL_39;
  v2 = a1 & 0xFFFFFFFFFFFFFF8;
  v17 = a1 & 0xFFFFFFFFFFFFFF8;
LABEL_4:
  if ((v2 & 0x4000000000000000) == 0)
  {
    v1 = *(_QWORD *)(v2 + 16);
    v3 = (unint64_t)v1 >> 1;
    goto LABEL_6;
  }
  while (1)
  {
    v15 = swift_retain();
    v1 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_release();
    v16 = v1 >= 0 ? v1 : v1 + 1;
    if (v1 < -1)
      __break(1u);
    v3 = v16 >> 1;
LABEL_6:
    if ((unint64_t)(v1 + 1) < 3)
      return v2;
    v4 = 0;
    while (1)
    {
      v6 = v4 + 1;
      v7 = v1 - (v4 + 1);
      if (__OFSUB__(v1, v4 + 1))
        break;
      if (v4 != v7)
      {
        v8 = v17;
        if ((v17 & 0xC000000000000001) != 0)
        {
          v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v17);
          v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v1 - (v4 + 1), v17);
        }
        else
        {
          if ((v4 & 0x8000000000000000) != 0)
            goto LABEL_33;
          v9 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v4 >= v9)
            goto LABEL_34;
          v10 = *(_QWORD *)(v17 + 8 * v4 + 32);
          swift_retain();
          if ((v7 & 0x8000000000000000) != 0)
            goto LABEL_35;
          if (v7 >= v9)
            goto LABEL_37;
          v11 = *(_QWORD *)(v17 + 32 + 8 * v7);
          swift_retain();
        }
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v17)
          || v17 < 0
          || (v17 & 0x4000000000000000) != 0)
        {
          v8 = sub_1002B3758(v17);
          v17 = v8;
        }
        *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v11;
        swift_release();
        specialized Array._endMutation()(v12);
        v13 = v17;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v17)
          || v17 < 0
          || (v17 & 0x4000000000000000) != 0)
        {
          v13 = sub_1002B3758(v17);
          v17 = v13;
        }
        if ((v7 & 0x8000000000000000) != 0)
          goto LABEL_36;
        if (v7 >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_38;
        *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20) = v10;
        swift_release();
        specialized Array._endMutation()(v5);
      }
      v4 = v6;
      if (v3 == v6)
        return v17;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    v2 = (uint64_t)sub_1002ABEA4(v1);
    swift_bridgeObjectRelease(v1);
    v17 = v2;
    if ((v2 & 0x8000000000000000) == 0)
      goto LABEL_4;
  }
}

unint64_t sub_10007183C(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_100071C24(a1, a2, a3, a4, (uint64_t)sub_1002ABEBC, (uint64_t (*)(unint64_t))sub_1002B3758);
}

uint64_t sub_100071850(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = sub_10002A750(&qword_100654870);
  v17 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v3);
  v18 = (uint64_t)&v15 - v7;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8 < 2)
    return a1;
  v9 = 0;
  v10 = v8 >> 1;
  v11 = v8 - 1;
  v16 = v8 >> 1;
  while (1)
  {
    if (v9 == v11)
      goto LABEL_4;
    v12 = *(_QWORD *)(a1 + 16);
    if (v9 >= v12)
      break;
    v13 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v14 = *(_QWORD *)(v17 + 72);
    result = sub_10000735C(a1 + v13 + v14 * v9, v18, &qword_100654870);
    if (v11 >= v12)
      goto LABEL_14;
    sub_10000735C(a1 + v13 + v14 * v11, (uint64_t)v5, &qword_100654870);
    result = swift_isUniquelyReferenced_nonNull_native(a1);
    if ((result & 1) == 0)
    {
      result = sub_1002B37AC(a1);
      a1 = result;
    }
    if (v9 >= *(_QWORD *)(a1 + 16))
      goto LABEL_15;
    result = sub_100041F2C((uint64_t)v5, a1 + v13 + v14 * v9, &qword_100654870);
    if (v11 >= *(_QWORD *)(a1 + 16))
      goto LABEL_16;
    result = sub_100041F2C(v18, a1 + v13 + v14 * v11, &qword_100654870);
    v10 = v16;
LABEL_4:
    ++v9;
    --v11;
    if (v10 == v9)
      return a1;
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1000719F4(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0)
    goto LABEL_39;
  v2 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v19 = v1 & 0xFFFFFFFFFFFFFF8;
LABEL_4:
  if ((v2 & 0x4000000000000000) == 0)
  {
    v3 = *(_QWORD *)(v2 + 16);
    swift_bridgeObjectRelease(v1);
    v4 = (unint64_t)v3 >> 1;
    goto LABEL_6;
  }
  while (1)
  {
    v17 = swift_retain(v2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(v1);
    swift_release(v2);
    v18 = v3 >= 0 ? v3 : v3 + 1;
    if (v3 < -1)
      __break(1u);
    v4 = v18 >> 1;
LABEL_6:
    if ((unint64_t)(v3 + 1) < 3)
      return v2;
    v5 = 0;
    while (1)
    {
      v8 = v5 + 1;
      v1 = v3 - (v5 + 1);
      if (__OFSUB__(v3, v5 + 1))
        break;
      if (v5 != v1)
      {
        v9 = v19;
        if ((v19 & 0xC000000000000001) != 0)
        {
          v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v19);
          v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - (v5 + 1), v19);
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0)
            goto LABEL_33;
          v10 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v5 >= v10)
            goto LABEL_34;
          v11 = *(_QWORD *)(v19 + 8 * v5 + 32);
          swift_retain(v11);
          if ((v1 & 0x8000000000000000) != 0)
            goto LABEL_35;
          if (v1 >= v10)
            goto LABEL_37;
          v12 = *(_QWORD *)(v19 + 32 + 8 * v1);
          swift_retain(v12);
        }
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v19)
          || v19 < 0
          || (v19 & 0x4000000000000000) != 0)
        {
          v9 = sub_1002B3758(v19);
          v19 = v9;
        }
        v13 = (v9 & 0xFFFFFFFFFFFFFF8) + 8 * v5;
        v14 = swift_release(*(_QWORD *)(v13 + 32));
        *(_QWORD *)(v13 + 32) = v12;
        specialized Array._endMutation()(v14);
        v15 = v19;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v19)
          || v19 < 0
          || (v19 & 0x4000000000000000) != 0)
        {
          v15 = sub_1002B3758(v19);
          v19 = v15;
        }
        if ((v1 & 0x8000000000000000) != 0)
          goto LABEL_36;
        if (v1 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_38;
        v6 = (v15 & 0xFFFFFFFFFFFFFF8) + 8 * v1;
        v7 = swift_release(*(_QWORD *)(v6 + 32));
        *(_QWORD *)(v6 + 32) = v11;
        specialized Array._endMutation()(v7);
      }
      v5 = v8;
      if (v4 == v8)
        return v19;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    v2 = (uint64_t)sub_1002AC234(v1);
    v19 = v2;
    if ((v2 & 0x8000000000000000) == 0)
      goto LABEL_4;
  }
}

unint64_t sub_100071C10(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_100071C24(a1, a2, a3, a4, (uint64_t)sub_1002AC240, (uint64_t (*)(unint64_t))sub_1002B3758);
}

unint64_t sub_100071C24(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t (*a6)(unint64_t))
{
  unint64_t v8;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  v8 = a4;
  if ((a4 & 1) == 0)
    goto LABEL_2;
  v12 = type metadata accessor for __ContiguousArrayStorageBase(0);
  v13 = swift_unknownObjectRetain_n(a1, 2);
  v14 = (_QWORD *)swift_dynamicCastClass(v13, v12);
  if (!v14)
  {
    swift_unknownObjectRelease(a1);
    v14 = &_swiftEmptyArrayStorage;
  }
  v15 = v14[2];
  v16 = swift_release(v14);
  if (!__OFSUB__(v8 >> 1, a3))
  {
    v16 = a1;
    if (v15 == (v8 >> 1) - a3)
    {
      v8 = swift_dynamicCastClass(a1, v12);
      if (!v8)
      {
        swift_unknownObjectRelease(a1);
        v8 = (unint64_t)&_swiftEmptyArrayStorage;
      }
      goto LABEL_9;
    }
    goto LABEL_51;
  }
LABEL_50:
  __break(1u);
LABEL_51:
  swift_unknownObjectRelease(v16);
LABEL_2:
  v8 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t, unint64_t))a5)(a1, a2, a3, v8);
LABEL_9:
  v28 = v8;
  if ((v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
  {
    a5 = *(_QWORD *)(v8 + 16);
    swift_unknownObjectRelease(a1);
    v17 = (unint64_t)a5 >> 1;
    goto LABEL_12;
  }
  while (1)
  {
    v26 = swift_retain(v8);
    a5 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_unknownObjectRelease(a1);
    v16 = swift_release(v8);
    if (a5 >= 0)
      v27 = a5;
    else
      v27 = a5 + 1;
    if (a5 < -1)
    {
      __break(1u);
      goto LABEL_50;
    }
    v17 = v27 >> 1;
LABEL_12:
    if ((unint64_t)(a5 + 1) < 3)
      return v8;
    a1 = 0;
    while (1)
    {
      v20 = a1 + 1;
      v8 = a5 - (a1 + 1);
      if (__OFSUB__(a5, a1 + 1))
        break;
      if (a1 != v8)
      {
        a2 = v28;
        if ((v28 & 0xC000000000000001) != 0)
        {
          a3 = specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v28);
          v22 = specialized _ArrayBuffer._getElementSlowPath(_:)(a5 - (a1 + 1), v28);
        }
        else
        {
          if ((a1 & 0x8000000000000000) != 0)
            goto LABEL_39;
          v21 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (a1 >= v21)
            goto LABEL_40;
          a3 = *(_QWORD *)(v28 + 8 * a1 + 32);
          swift_retain(a3);
          if ((v8 & 0x8000000000000000) != 0)
            goto LABEL_41;
          if (v8 >= v21)
            goto LABEL_43;
          v22 = *(_QWORD *)(v28 + 32 + 8 * v8);
          swift_retain(v22);
        }
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v28)
          || (v28 & 0x8000000000000000) != 0
          || (v28 & 0x4000000000000000) != 0)
        {
          a2 = a6(v28);
          v28 = a2;
        }
        v23 = (a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1;
        v24 = swift_release(*(_QWORD *)(v23 + 32));
        *(_QWORD *)(v23 + 32) = v22;
        specialized Array._endMutation()(v24);
        a1 = v28;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v28)
          || (v28 & 0x8000000000000000) != 0
          || (v28 & 0x4000000000000000) != 0)
        {
          a1 = a6(v28);
          v28 = a1;
        }
        if ((v8 & 0x8000000000000000) != 0)
          goto LABEL_42;
        if (v8 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_44;
        v18 = (a1 & 0xFFFFFFFFFFFFFF8) + 8 * v8;
        v19 = swift_release(*(_QWORD *)(v18 + 32));
        *(_QWORD *)(v18 + 32) = a3;
        specialized Array._endMutation()(v19);
      }
      a1 = v20;
      if (v17 == v20)
        return v28;
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
  }
}

uint64_t sub_100071ED4(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0)
    goto LABEL_39;
  v2 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v21 = v1 & 0xFFFFFFFFFFFFFF8;
LABEL_4:
  if ((v2 & 0x4000000000000000) == 0)
  {
    v3 = *(_QWORD *)(v2 + 16);
    swift_bridgeObjectRelease(v1);
    v4 = (unint64_t)v3 >> 1;
    goto LABEL_6;
  }
  while (1)
  {
    v19 = swift_retain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v1);
    swift_release();
    v20 = v3 >= 0 ? v3 : v3 + 1;
    if (v3 < -1)
      __break(1u);
    v4 = v20 >> 1;
LABEL_6:
    if ((unint64_t)(v3 + 1) < 3)
      return v2;
    v5 = 0;
    while (1)
    {
      v8 = v5 + 1;
      v1 = v3 - (v5 + 1);
      if (__OFSUB__(v3, v5 + 1))
        break;
      if (v5 != v1)
      {
        v9 = v21;
        if ((v21 & 0xC000000000000001) != 0)
        {
          v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v21);
          v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - (v5 + 1), v21);
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0)
            goto LABEL_33;
          v10 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v5 >= v10)
            goto LABEL_34;
          v11 = *(id *)(v21 + 8 * v5 + 32);
          if ((v1 & 0x8000000000000000) != 0)
            goto LABEL_35;
          if (v1 >= v10)
            goto LABEL_37;
          v12 = (uint64_t)v11;
          v13 = *(id *)(v21 + 32 + 8 * v1);
        }
        v14 = v13;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v21)
          || v21 < 0
          || (v21 & 0x4000000000000000) != 0)
        {
          v9 = sub_1002B3758(v21);
          v21 = v9;
        }
        v15 = (v9 & 0xFFFFFFFFFFFFFF8) + 8 * v5;

        *(_QWORD *)(v15 + 32) = v14;
        specialized Array._endMutation()(v16);
        v17 = v21;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v21)
          || v21 < 0
          || (v21 & 0x4000000000000000) != 0)
        {
          v17 = sub_1002B3758(v21);
          v21 = v17;
        }
        if ((v1 & 0x8000000000000000) != 0)
          goto LABEL_36;
        if (v1 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_38;
        v6 = (v17 & 0xFFFFFFFFFFFFFF8) + 8 * v1;

        *(_QWORD *)(v6 + 32) = v12;
        specialized Array._endMutation()(v7);
      }
      v5 = v8;
      if (v4 == v8)
        return v21;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    v2 = (uint64_t)sub_1002AC5B0(v1);
    v21 = v2;
    if ((v2 & 0x8000000000000000) == 0)
      goto LABEL_4;
  }
}

uint64_t sub_1000720F0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v10 = v5;
    else
      v10 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v8 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

double sub_1000721AC(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  double result;
  uint64_t v19;

  v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v10);
  v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  v15 = (char *)&v19 - v14;
  v16 = *a1;
  if (v16)
  {
    v17 = (_QWORD *)*a3;
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(v17[7] + 8 * a4) = v16;
    }
    else
    {
      sub_10002B1E8(a5, (uint64_t)&v19 - v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_10045DF34(a4, (uint64_t)v15, v16, v17);
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy(*(_QWORD *)(*a3 + 48) + *(_QWORD *)(v12 + 72) * a4, 1, v11);
    sub_1002AD020(a4, *a3);
  }
  *(_QWORD *)&result = swift_bridgeObjectRetain(v16).n128_u64[0];
  return result;
}

uint64_t sub_10007229C(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;

  v10 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  __chkstk_darwin(v10);
  v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  v15 = (char *)&v19 - v14;
  v16 = *a1;
  if (v16)
  {
    v17 = (_QWORD *)*a3;
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(v17[7] + 8 * a4) = v16;
    }
    else
    {
      sub_10002B1E8(a5, (uint64_t)&v19 - v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      sub_10045E068(a4, (uint64_t)v15, v16, v17);
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy(*(_QWORD *)(*a3 + 48) + *(_QWORD *)(v12 + 72) * a4, 1, v11);
    sub_1002AD704(a4, *a3);
  }
  return swift_bridgeObjectRetain(v16);
}

void sub_10007238C(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v15;
  _QWORD v16[4];
  _BYTE v17[32];

  v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(a1, (uint64_t)v16, (uint64_t *)&unk_100640F00);
  if (v16[0] == 1 && v16[1] == 1)
  {
    sub_1000073A0((uint64_t)v16, (uint64_t *)&unk_100640F00);
    if ((a2 & 1) != 0)
    {
      swift_arrayDestroy(*(_QWORD *)(*a3 + 48) + *(_QWORD *)(v11 + 72) * a4, 1, v10);
      sub_1002AE144(a4, *a3);
    }
  }
  else
  {
    sub_100076BAC((uint64_t)v16, (uint64_t)v17);
    v15 = (_QWORD *)*a3;
    if ((a2 & 1) != 0)
    {
      sub_100076BAC((uint64_t)v17, v15[7] + 32 * a4);
    }
    else
    {
      sub_10002B1E8(a5, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_100076BAC((uint64_t)v17, (uint64_t)v16);
      sub_10045E388(a4, (uint64_t)v13, (uint64_t)v16, v15);
    }
  }
}

id sub_1000724D0(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  v8 = *a1;
  v9 = a1[1];
  v10 = a1[2];
  v11 = a1[3];
  v12 = a1[4];
  v13 = (void *)a1[5];
  v14 = a1[6];
  if (v10)
  {
    *(_QWORD *)&v19 = *a1;
    *((_QWORD *)&v19 + 1) = v9;
    *(_QWORD *)&v20 = v10;
    *((_QWORD *)&v20 + 1) = v11;
    *(_QWORD *)&v21 = v12;
    *((_QWORD *)&v21 + 1) = v13;
    v22 = v14;
    if ((a2 & 1) != 0)
    {
      v15 = *(_QWORD *)(*a3 + 56) + 56 * a4;
      v16 = v20;
      *(_OWORD *)v15 = v19;
      *(_OWORD *)(v15 + 16) = v16;
      *(_OWORD *)(v15 + 32) = v21;
      *(_QWORD *)(v15 + 48) = v22;
    }
    else
    {
      sub_10045E1D8(a4, a5, a6, (uint64_t)&v19, (_QWORD *)*a3);
      swift_bridgeObjectRetain(a6);
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy(*(_QWORD *)(*a3 + 48) + 16 * a4, 1, &type metadata for String);
    sub_1002ADC80(a4, *a3);
  }
  return sub_100076D28(v8, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_1000725E0(uint64_t (*a1)(uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v3;
  if (!(_DWORD)result || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    result = a1(v3);
    v3 = result;
    *v1 = result;
  }
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    v7 = v6 - 1;
    v8 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20);
    *(_QWORD *)(v5 + 16) = v7;
    specialized Array._endMutation()(result);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100072658(char *a1, uint64_t a2, char a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  void **v16;
  void *Strong;
  void *v18;
  id v19;
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char v31;
  char *v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  void *v53;
  void *v54;
  id v55;
  id v56;
  __int128 v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  _BYTE v63[24];
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;

  v58 = a2;
  v11 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v11);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v14);
  v16 = (void **)((char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess(a6 + 96, v63, 0, 0);
  sub_10000AC28(a6 + 96, (uint64_t)&v59);
  if (v62 != 9)
  {
    v32 = a1;
    sub_10000AEA4(&v59);
    if ((a3 & 1) == 0)
      goto LABEL_15;
LABEL_17:
    v37 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v13, 1, 1, v37);
    v38 = *(void **)(a6 + 56);
    sub_10000735C((uint64_t)v13, (uint64_t)v16 + v14[5], (uint64_t *)&unk_1006463C0);
    *v16 = a4;
    *(void **)((char *)v16 + v14[6]) = v38;
    v39 = v14[7];
    v57 = *(_OWORD *)(a6 + 64);
    *(_OWORD *)((char *)v16 + v39) = v57;
    *((_BYTE *)v16 + v14[8]) = 0;
    swift_retain(v38);
    v40 = a4;
    swift_unknownObjectRetain(v57);
    sub_1000073A0((uint64_t)v13, (uint64_t *)&unk_1006463C0);
    type metadata accessor for TTRIShowSearchResultAssembly();
    v41 = (void *)sub_100289DFC(v64, v16, v32, v58, a5, (uint64_t)&off_1005F9F78);
    *(_BYTE *)(*sub_10001413C(v64, v65)
             + OBJC_IVAR____TtC9Reminders29TTRIShowSearchResultPresenter_didFinalizeSearchQuery) = a3 & 1;
    sub_100010634((uint64_t)v64, (uint64_t)&v59);
    v62 = 9;
    sub_10029CB74(&v59, v41);

    sub_10000AEA4(&v59);
    sub_10001F544((uint64_t)v16, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
LABEL_29:
    sub_100027F10(v64);
    return;
  }
  sub_10002E37C(&v59, (uint64_t)v64);
  *(_QWORD *)&v57 = a6 + 48;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a6 + 48);
  if (Strong)
  {
    v18 = Strong;
    v19 = objc_msgSend(Strong, "detailViewController");

    if (v19)
    {
      v20 = v19;
      v21 = (_QWORD *)(*sub_10001413C(v64, v65)
                     + OBJC_IVAR____TtC9Reminders29TTRIShowSearchResultPresenter_dataModelSource);
      v22 = v21[1];
      ObjectType = swift_getObjectType(*v21, v23);
      v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 16))(ObjectType, v22);
      if (v26)
      {
        v27 = v26;
        v28 = v58;
        if (v58)
        {
          if ((char *)v25 == a1 && v26 == v58)
          {
            v30 = (uint64_t)a1;
            swift_bridgeObjectRelease(v26);
            goto LABEL_24;
          }
          v30 = (uint64_t)a1;
          v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v26, a1, v58, 0);
          swift_bridgeObjectRelease(v27);
          if ((v31 & 1) != 0)
          {
LABEL_24:
            sub_10001413C(v64, v65);
            sub_100433B94(v30, v28);
            *(_BYTE *)(*sub_10001413C(v64, v65)
                     + OBJC_IVAR____TtC9Reminders29TTRIShowSearchResultPresenter_didFinalizeSearchQuery) = a3 & 1;
            if ((a3 & 1) != 0)
            {
              v48 = v65;
              v49 = v66;
              v50 = sub_10001413C(v64, v65);
              v60 = v48;
              v51 = *(_QWORD *)(v49 + 8);
              v61 = v51;
              v52 = sub_100028D70(&v59);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v52, v50, v48);
              sub_10029FACC((uint64_t)v52, a6, v48, v51);
              sub_100027F10(&v59);
              v53 = (void *)swift_unknownObjectWeakLoadStrong(v57);
              if (!v53
                || (v54 = v53,
                    v55 = objc_msgSend(v53, "traitCollection"),
                    v54,
                    v56 = objc_msgSend(v55, "horizontalSizeClass"),
                    v55,
                    v56 != (id)1))
              {
                objc_msgSend(v20, "becomeFirstResponder");
              }
            }

            goto LABEL_29;
          }
        }
        else
        {
          v30 = (uint64_t)a1;
          swift_bridgeObjectRelease(v26);
        }
      }
      else
      {
        v30 = (uint64_t)a1;
        v28 = v58;
        if (!v58)
          goto LABEL_24;
      }
      v42 = swift_unknownObjectWeakLoadStrong(a6 + 16);
      if (v42)
      {
        v43 = v42;
        v44 = v65;
        v45 = v66;
        v46 = sub_10001413C(v64, v65);
        v60 = v44;
        v61 = *(_QWORD *)(v45 + 8);
        v47 = sub_100028D70(&v59);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v47, v46, v44);
        swift_retain(a6);
        swift_unknownObjectRelease(v43);
        sub_100027F10(&v59);
        swift_release(a6);
      }
      goto LABEL_24;
    }
  }
  v32 = a1;
  sub_100027F10(v64);
  if ((a3 & 1) != 0)
    goto LABEL_17;
LABEL_15:
  v33 = (void *)swift_unknownObjectWeakLoadStrong(a6 + 48);
  if (!v33)
    goto LABEL_17;
  v34 = v33;
  v35 = objc_msgSend(v33, "traitCollection");

  v36 = objc_msgSend(v35, "horizontalSizeClass");
  if (v36 != (id)1)
    goto LABEL_17;
}

uint64_t sub_100072B40(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t Strong;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char v46;
  char *v47;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  id v53;
  void *v54;
  void *v55;
  id v56;
  void *v57;
  id v58;
  void *v59;
  __int128 v60;
  void *v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66[24];
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;

  v61 = a2;
  v7 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v7);
  v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v10);
  v12 = (_QWORD *)((char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a4 + 96, v66, 0, 0);
  sub_10000AC28(a4 + 96, (uint64_t)&v62);
  if (v65 == 10)
  {
    sub_10002E37C(&v62, (uint64_t)v67);
    v17 = (_QWORD *)(*sub_10001413C(v67, v68) + OBJC_IVAR____TtC9Reminders23TTRIShowTaggedPresenter_dataModelSource);
    v18 = v17[1];
    ObjectType = swift_getObjectType(*v17, v19);
    v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(ObjectType, v18);
    v23 = v22;
    v24 = swift_getObjectType(v21, v22);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v23);
    swift_unknownObjectRelease(v21);
    v25 = sub_1000175C8((unint64_t *)&qword_100640E30, (uint64_t (*)(uint64_t))&type metadata accessor for REMHashtagLabelSpecifier, (uint64_t)&protocol conformance descriptor for REMHashtagLabelSpecifier);
    LOBYTE(v21) = dispatch thunk of static Equatable.== infix(_:_:)(v16, a1, v13, v25);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v26 = v14;
    if ((v21 & 1) == 0)
    {
      Strong = swift_unknownObjectWeakLoadStrong(a4 + 16);
      if (Strong)
      {
        v28 = Strong;
        v29 = v68;
        v30 = v69;
        v31 = sub_10001413C(v67, v68);
        v63 = v29;
        v64 = *(_QWORD *)(v30 + 8);
        v32 = sub_100028D70(&v62);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v32, v31, v29);
        swift_retain(a4);
        swift_unknownObjectRelease(v28);
        sub_100027F10(&v62);
        swift_release(a4);
      }
    }
    v34 = v68;
    v33 = v69;
    sub_10001413C(v67, v68);
    (*(void (**)(uint64_t))(*(_QWORD *)(v33 + 8) + 24))(v34);
    v35 = (_QWORD *)(*sub_10001413C(v67, v68) + OBJC_IVAR____TtC9Reminders23TTRIShowTaggedPresenter_dataModelSource);
    v36 = v35[1];
    v38 = swift_getObjectType(*v35, v37);
    v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 16))(v38, v36);
    v41 = v40;
    v42 = swift_getObjectType(v39, v40);
    (*(void (**)(char *, void *, uint64_t))(v26 + 16))(v16, a1, v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v16, v42, v41);
    swift_unknownObjectRelease(v39);
    v43 = swift_unknownObjectWeakLoadStrong(a4 + 48);
    if (!v43)
      return sub_100027F10(v67);
    v44 = (char *)v43;
    sub_10023C05C(1);
    sub_10001413C((_QWORD *)(*(_QWORD *)&v44[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter] + 48), *(_QWORD *)(*(_QWORD *)&v44[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter] + 72));
    v45 = sub_10029ECC0();
    if (v46 != -1)
    {
      v47 = v45;
      if ((v46 & 1) == 0)
      {
LABEL_10:
        sub_10023C2C8(v47);

        return sub_100027F10(v67);
      }
      sub_1000760F4(v45, v46);
    }
    v47 = 0;
    goto LABEL_10;
  }
  sub_10000AEA4(&v62);
  v49 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v9, 1, 1, v49);
  v50 = *(_QWORD *)(a4 + 56);
  sub_10000735C((uint64_t)v9, (uint64_t)v12 + v10[5], (uint64_t *)&unk_1006463C0);
  v51 = v61;
  *v12 = v61;
  *(_QWORD *)((char *)v12 + v10[6]) = v50;
  v52 = v10[7];
  v60 = *(_OWORD *)(a4 + 64);
  *(_OWORD *)((char *)v12 + v52) = v60;
  *((_BYTE *)v12 + v10[8]) = 0;
  swift_retain(v50);
  v53 = v51;
  swift_unknownObjectRetain(v60);
  sub_1000073A0((uint64_t)v9, (uint64_t *)&unk_1006463C0);
  v54 = (void *)swift_unknownObjectWeakLoadStrong(a4 + 48);
  if (v54)
  {
    v55 = v54;
    LODWORD(v56) = objc_msgSend(v54, "isCollapsed");

  }
  else
  {
    v57 = (void *)swift_unknownObjectWeakLoadStrong(a4 + 48);
    v56 = v57;
    if (v57)
    {
      v58 = objc_msgSend(v57, "traitCollection");

      v56 = objc_msgSend(v58, "horizontalSizeClass");
      LODWORD(v56) = v56 == (id)1;
    }
  }
  type metadata accessor for TTRIShowTaggedAssembly();
  v59 = (void *)sub_100436424(v67, (uint64_t)v12, a1, v56 ^ 1, a3);
  sub_100010634((uint64_t)v67, (uint64_t)&v62);
  v65 = 10;
  sub_10029CB74(&v62, v59);

  sub_10000AEA4(&v62);
  sub_100027F10(v67);
  return sub_10001F544((uint64_t)v12, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
}

uint64_t sub_10007302C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v3 = v2;
  v19 = a2;
  v5 = sub_10002A750(&qword_100641000);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v10 = _swiftEmptyArrayStorage;
    if (!v9)
      return (uint64_t)v10;
    v20 = _swiftEmptyArrayStorage;
    result = sub_1003D834C(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0)
      break;
    v12 = 0;
    v10 = v20;
    v18 = a1 & 0xC000000000000001;
    while (v9 != v12)
    {
      if (v18)
      {
        v13 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, a1);
      }
      else
      {
        v13 = *(void **)(a1 + 8 * v12 + 32);
        swift_unknownObjectRetain(v13);
      }
      sub_1002C13C0(v13, v19, v8);
      if (v3)
      {
        swift_release(v10);
        swift_unknownObjectRelease(v13);
        return (uint64_t)v10;
      }
      v3 = 0;
      swift_unknownObjectRelease(v13);
      v20 = v10;
      v15 = v10[2];
      v14 = v10[3];
      if (v15 >= v14 >> 1)
      {
        sub_1003D834C(v14 > 1, v15 + 1, 1);
        v10 = v20;
      }
      ++v12;
      v10[2] = v15 + 1;
      sub_10000F614((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v15, &qword_100641000);
      if (v9 == v12)
        return (uint64_t)v10;
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v9 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_100073214(uint64_t a1, uint64_t a2)
{
  return sub_10007324C(a1, a2);
}

uint64_t sub_100073228(uint64_t a1, uint64_t a2)
{
  return sub_10007335C(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID, (void (*)(uint64_t))&TTRRemindersListViewModel.Item.treeItemIdentifier.getter, (uint64_t (*)(char *))sub_1002AA39C, sub_1000CE5E4);
}

uint64_t sub_10007324C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  if ((unint64_t)a1 >> 62)
    goto LABEL_13;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
        swift_unknownObjectRelease(v6);
        if (v6 == a2)
          return v5;
      }
      else if (*(_QWORD *)(a1 + 8 * v5 + 32) == a2)
      {
        return v5;
      }
      if (__OFADD__(v5, 1))
        break;
      if (++v5 == v4)
        return 0;
    }
    __break(1u);
LABEL_13:
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease(a1);
  }
  return 0;
}

uint64_t sub_100073338(uint64_t a1, uint64_t a2)
{
  return sub_10007335C(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (void (*)(uint64_t))&TTRAccountsListsViewModel.Item.treeItemIdentifier.getter, (uint64_t (*)(char *))sub_1002AA6DC, sub_1000CE774);
}

uint64_t sub_10007335C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(uint64_t), uint64_t (*a5)(char *), uint64_t (*a6)(uint64_t))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v11 = a3(0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v20 - v13;
  a4(v12);
  if (*(_QWORD *)(a2 + 16) && (v15 = a5(v14), (v16 & 1) != 0))
  {
    v17 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v15);
    swift_bridgeObjectRetain(v17);
    sub_10001F544((uint64_t)v14, a3);
    v18 = a6(v17);
    swift_bridgeObjectRelease(v17);
  }
  else
  {
    sub_10001F544((uint64_t)v14, a3);
    return 0;
  }
  return v18;
}

void sub_100073440(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  uint64_t v39;
  void *Strong;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45[24];

  v3 = v2;
  v6 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v6);
  v8 = &v45[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v45[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = sub_10006B64C();
  v15 = v14;
  v17 = v16;
  v44 = a1;
  v18 = sub_10007335C(a1, v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (void (*)(uint64_t))&TTRAccountsListsViewModel.Item.treeItemIdentifier.getter, (uint64_t (*)(char *))sub_1002AA6DC, sub_1000CE774);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v13);
  if (!v18)
    return;
  if (*(_BYTE *)(v18 + 72) != 1)
  {
    swift_release(v18);
    return;
  }
  v19 = sub_10006B64C();
  v21 = v20;
  v23 = v22;
  sub_100309FE0(v18, v19, v22, v24 & 1, (uint64_t)v8);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    v30 = swift_beginAccess(v18 + 64, v45, 0, 0);
    v31 = *(_QWORD *)(v18 + 64);
    if ((unint64_t)v31 >> 62)
    {
      if (v31 < 0)
        v42 = *(_QWORD *)(v18 + 64);
      else
        v42 = v31 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v18 + 64));
      v43 = _CocoaArrayWrapper.endIndex.getter(v42);
      v30 = swift_bridgeObjectRelease(v31);
      if (!v43)
        goto LABEL_16;
    }
    else if (!*(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_16;
    }
    if (qword_10063D3C8 != -1)
      swift_once(&qword_10063D3C8, sub_1000E35C8);
    v32 = type metadata accessor for Logger(0);
    v33 = sub_100012DC4(v32, (uint64_t)qword_100645EC0);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.fault.getter(v34);
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Collapsed node should have no child nodes", v36, 2u);
      swift_slowDealloc(v36, -1, -1);
    }

LABEL_16:
    __chkstk_darwin(v30);
    *(&v44 - 4) = v3;
    *(&v44 - 3) = v18;
    *(&v44 - 2) = (uint64_t)v12;
    *(&v44 - 1) = a2;
    sub_10030B054((void (*)(uint64_t))sub_100076304, (uint64_t)(&v44 - 6), 0, 0, 0, 0);
    v37 = *(_QWORD *)(v3 + qword_100645F28);
    if (v37)
    {
      v38 = *(uint64_t (**)(uint64_t))(v37 + 16);
      v39 = swift_retain(*(_QWORD *)(v3 + qword_100645F28));
      if ((v38(v39) & 1) != 0)
      {
        Strong = (void *)swift_unknownObjectUnownedLoadStrong(v3 + qword_100645EF8);
        (*(void (**)(void *, uint64_t))(v37 + 240))(Strong, v44);
        swift_release(v18);
        swift_release(v37);

LABEL_23:
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        return;
      }
      swift_release(v18);
      v41 = v37;
    }
    else
    {
      v41 = v18;
    }
    swift_release(v41);
    goto LABEL_23;
  }
  sub_1000073A0((uint64_t)v8, &qword_100646950);
  if (qword_10063D3C8 != -1)
    swift_once(&qword_10063D3C8, sub_1000E35C8);
  v25 = type metadata accessor for Logger(0);
  v26 = sub_100012DC4(v25, (uint64_t)qword_100645EC0);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.fault.getter(v27);
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "Unable to find index path", v29, 2u);
    swift_slowDealloc(v29, -1, -1);
    swift_release(v18);

  }
  else
  {

    swift_release(v18);
  }
}

void sub_1000738B0(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v1 = objc_msgSend(a1, "view");
  if (v1)
  {
    v2 = v1;
    v3 = type metadata accessor for TTRIAccountsListsTreeView(0);
    v4 = swift_dynamicCastClass(v2, v3);
    if (v4)
    {
      v5 = *(void **)(v4 + qword_10065D8E0);
      if (v5)
      {
        v6 = v5;
        sub_1000076E0((uint64_t)&unk_100640E58, (uint64_t *)&unk_100646A20, (uint64_t *)&unk_100640E40);

        return;
      }
      __break(1u);
    }

  }
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
  __break(1u);
}

void sub_10007399C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;

  v5 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10006B64C();
  v14 = v13;
  v16 = v15;
  v17 = sub_10007335C(a1, v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (void (*)(uint64_t))&TTRAccountsListsViewModel.Item.treeItemIdentifier.getter, (uint64_t (*)(char *))sub_1002AA6DC, sub_1000CE774);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v12);
  if (v17)
  {
    if (*(_BYTE *)(v17 + 72) == 2)
    {
      v18 = sub_10006B64C();
      v20 = v19;
      v22 = v21;
      sub_100309FE0(v17, v18, v21, v23 & 1, (uint64_t)v7);
      swift_bridgeObjectRelease(v22);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v18);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
      {
        sub_1000073A0((uint64_t)v7, &qword_100646950);
        if (qword_10063D3C8 != -1)
          swift_once(&qword_10063D3C8, sub_1000E35C8);
        v24 = type metadata accessor for Logger(0);
        v25 = sub_100012DC4(v24, (uint64_t)qword_100645EC0);
        v26 = Logger.logObject.getter(v25);
        v27 = static os_log_type_t.fault.getter(v26);
        if (os_log_type_enabled(v26, v27))
        {
          v28 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v28 = 0;
          _os_log_impl((void *)&_mh_execute_header, v26, v27, "Unable to find index path", v28, 2u);
          swift_slowDealloc(v28, -1, -1);
          swift_release(v17);

        }
        else
        {

          swift_release(v17);
        }
      }
      else
      {
        v29 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
        __chkstk_darwin(v29);
        *(&v30 - 4) = v17;
        *(&v30 - 3) = v2;
        *(&v30 - 2) = (uint64_t)v11;
        *(&v30 - 1) = a2;
        sub_10030B054((void (*)(uint64_t))sub_100076360, (uint64_t)(&v30 - 6), 0, 0, 0, 0);
        swift_release(v17);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      }
    }
    else
    {
      swift_release(v17);
    }
  }
}

void sub_100073CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *oslog;

  if (a1 == 1)
  {
    sub_100331128(a2);
  }
  else
  {
    if (qword_10063D2F0 != -1)
      swift_once(&qword_10063D2F0, sub_1000073DC);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100012DC4(v2, (uint64_t)qword_100640920);
    oslog = Logger.logObject.getter(v3);
    v4 = static os_log_type_t.fault.getter(oslog);
    if (os_log_type_enabled(oslog, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v4, "table tried to do something we don't understand", v5, 2u);
      swift_slowDealloc(v5, -1, -1);
    }

  }
}

uint64_t sub_100073DB4(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  _QWORD v9[36];

  v3 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v4 = __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  v6 = (char *)v9 - v5;
  if ((objc_msgSend(v1, "isEditing") & 1) == 0)
  {
    v9[35] = _swiftEmptyArrayStorage;
    sub_10002B1E8(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v7 = (char *)&loc_100073E88 + *((int *)qword_100074398 + swift_getEnumCaseMultiPayload(v6, v3));
    __asm { BR              X10 }
  }
  return 0;
}

id sub_1000743D0(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  NSString v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  Swift::String v23;
  Swift::String v24;
  void *object;
  void *v26;
  NSString v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  id v37;
  id v38;
  id v39;
  NSString v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void **v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void **v56;
  Class isa;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void **aBlock;
  uint64_t v68;
  void (*v69)(uint64_t, void *, void *, void *);
  void *v70;
  uint64_t (*v71)(uint64_t, uint64_t, void (*)(_QWORD), uint64_t);
  uint64_t v72;
  Swift::String v73;

  v2 = v1;
  v4 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = 0;
  if ((objc_msgSend(v2, "isEditing") & 1) == 0)
  {
    v8 = swift_allocObject(&unk_1005ED088, 24, 7);
    swift_unknownObjectWeakInit(v8 + 16, v2);
    v65 = a1;
    sub_10002B1E8(a1, (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v9 = *(unsigned __int8 *)(v5 + 80);
    v10 = (v9 + 24) & ~v9;
    v64 = v10 + v6;
    v66 = v9 | 7;
    v11 = swift_allocObject(&unk_1005ED240, v10 + v6, v9 | 7);
    *(_QWORD *)(v11 + 16) = v8;
    sub_10001F580((uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v71 = sub_10007722C;
    v72 = v11;
    aBlock = _NSConcreteStackBlock;
    v68 = 1107296256;
    v69 = sub_1002B4CE4;
    v70 = &unk_1005ED258;
    v12 = _Block_copy(&aBlock);
    v13 = (void *)objc_opt_self(UIContextualAction);
    swift_retain(v8);
    v14 = objc_msgSend(v13, "contextualActionWithStyle:title:handler:", 1, 0, v12);
    _Block_release(v12);
    v15 = v72;
    swift_release(v8);
    swift_release(v15);
    v16 = String._bridgeToObjectiveC()();
    v61 = (id)objc_opt_self(UIImage);
    v17 = objc_msgSend(v61, "_systemImageNamed:", v16);

    v63 = v13;
    if (v17
      && (v18 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:scale:", UIFontTextStyleBody, 3), v19 = objc_msgSend(v17, "imageWithConfiguration:", v18), v17, v18, v19))
    {
      v20 = (void *)objc_opt_self(NSBundle);
      v21 = v19;
      v22 = objc_msgSend(v20, "mainBundle");
      v73._countAndFlagsBits = 0xD00000000000002CLL;
      v73._object = (void *)0x8000000100561170;
      v23._countAndFlagsBits = 0x6574656C6544;
      v23._object = (void *)0xE600000000000000;
      v24._countAndFlagsBits = 0;
      v24._object = (void *)0xE000000000000000;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, v73)._object;

      v26 = v21;
      v27 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(object);
      objc_msgSend(v21, "setAccessibilityLabel:", v27);

    }
    else
    {
      v26 = 0;
    }
    v60 = v14;
    v62 = v26;
    objc_msgSend(v14, "setImage:", v26);
    v28 = swift_allocObject(&unk_1005ED088, 24, 7);
    swift_unknownObjectWeakInit(v28 + 16, v2);
    v29 = v65;
    sub_10002B1E8(v65, (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v30 = swift_allocObject(&unk_1005ED290, v64, v66);
    *(_QWORD *)(v30 + 16) = v28;
    sub_10001F580((uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v30 + v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v71 = sub_10007723C;
    v72 = v30;
    aBlock = _NSConcreteStackBlock;
    v68 = 1107296256;
    v69 = sub_1002B4CE4;
    v70 = &unk_1005ED2A8;
    v31 = _Block_copy(&aBlock);
    swift_retain(v28);
    v32 = objc_msgSend(v63, "contextualActionWithStyle:title:handler:", 0, 0, v31);
    _Block_release(v31);
    v33 = v72;
    swift_release(v28);
    swift_release(v33);
    sub_100064828(v29);
    v35 = v34;
    v36 = String._bridgeToObjectiveC()();
    v37 = objc_msgSend(v61, "_systemImageNamed:", v36);

    if (v37)
    {
      v38 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:scale:", UIFontTextStyleBody, 3);
      v39 = objc_msgSend(v37, "imageWithConfiguration:", v38);

      if (v39)
      {
        v37 = v39;
        v40 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v35);
        objc_msgSend(v37, "setAccessibilityLabel:", v40);

      }
      else
      {
        swift_bridgeObjectRelease(v35);
        v37 = 0;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v35);
    }
    v41 = v65;
    v42 = v60;
    objc_msgSend(v32, "setImage:", v37);
    v43 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
    objc_msgSend(v32, "setBackgroundColor:", v43);

    sub_10002B1E8(v41, (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v44 = (v9 + 16) & ~v9;
    v45 = swift_allocObject(&unk_1005ED2E0, v44 + v6, v66);
    sub_10001F580((uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v45 + v44, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v46 = static TTRDebugMenuUtilities.objectIDContextualActions(provideObjectID:)(sub_100077560, v45);
    swift_release(v45);
    v47 = sub_10002A750(&qword_100641048);
    v48 = swift_allocObject(v47, 48, 7);
    *(_OWORD *)(v48 + 16) = xmmword_1005201E0;
    *(_QWORD *)(v48 + 32) = v42;
    *(_QWORD *)(v48 + 40) = v32;
    aBlock = (void **)v48;
    specialized Array._endMutation()(v48);
    v49 = aBlock;
    v50 = v42;
    v51 = v32;
    v52 = sub_10002A750((uint64_t *)&unk_100641050);
    v53 = sub_100005ED8(0, (unint64_t *)&unk_100654960, UIContextualAction_ptr);
    v54 = sub_100023FEC((unint64_t *)&unk_100641060, (uint64_t *)&unk_100641050, (uint64_t)&protocol conformance descriptor for [A]);
    v55 = Sequence.removingNils<A>()(v52, v53, v54);
    swift_bridgeObjectRelease(v49);
    aBlock = (void **)v55;
    sub_100450B70(v46);
    v56 = aBlock;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v56);
    v7 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", isa);

  }
  return v7;
}

uint64_t sub_100074B1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v19 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter(v9);
  v11 = swift_allocObject(&unk_1005ED088, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v1);
  aBlock[4] = sub_100077220;
  v21 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100006378;
  aBlock[3] = &unk_1005ED208;
  v12 = _Block_copy(aBlock);
  swift_release(v21);
  static DispatchQoS.unspecified.getter(v13);
  aBlock[0] = _swiftEmptyArrayStorage;
  v14 = sub_1000175C8((unint64_t *)&qword_1006447D0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_10002A750((uint64_t *)&unk_100640F40);
  v16 = sub_100023FEC((unint64_t *)&qword_1006447E0, (uint64_t *)&unk_100640F40, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v15, v16, v2, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_100074D6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  _BYTE v8[224];

  v2 = type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v3);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002B1E8(a1, (uint64_t)v5, v6);
  v7 = (char *)sub_100074E3C + 4 * byte_10052118A[swift_getEnumCaseMultiPayload(v5, v3)];
  __asm { BR              X10 }
}

uint64_t sub_100074E3C()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  return 0;
}

void sub_100074E78()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v3 = v0[11];
  *(_OWORD *)(v2 - 128) = v0[10];
  *(_OWORD *)(v2 - 112) = v3;
  *(_OWORD *)(v2 - 96) = v0[12];
  *(_OWORD *)(v1 + 202) = *(_OWORD *)((char *)v0 + 202);
  v4 = v0[7];
  *(_OWORD *)(v2 - 192) = v0[6];
  *(_OWORD *)(v2 - 176) = v4;
  v5 = v0[9];
  *(_OWORD *)(v2 - 160) = v0[8];
  *(_OWORD *)(v2 - 144) = v5;
  v6 = v0[3];
  *(_OWORD *)(v2 - 256) = v0[2];
  *(_OWORD *)(v2 - 240) = v6;
  v7 = v0[5];
  *(_OWORD *)(v2 - 224) = v0[4];
  *(_OWORD *)(v2 - 208) = v7;
  v8 = v0[1];
  *(_OWORD *)(v2 - 288) = *v0;
  *(_OWORD *)(v2 - 272) = v8;
  swift_bridgeObjectRetain(*(_QWORD *)(v2 - 272));
  sub_100075FE8(v2 - 288);
  JUMPOUT(0x100074E54);
}

void sub_100074EE8()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(void **)v0;
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = *(void **)(v0 + 48);
  if (*(_BYTE *)(v0 + 88))
  {
    if (*(_BYTE *)(v0 + 88) != 1)
    {
      sub_100076F38(v1, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(void **)(v0 + 24), v3, v2, v4, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(void **)(v0 + 80), 2);
      JUMPOUT(0x100074E4CLL);
    }
    sub_100077044(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
  }
  else
  {

    swift_bridgeObjectRelease(v3);
    sub_100077044(v2, v4);
  }
  JUMPOUT(0x100074E54);
}

void sub_10007508C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  _BYTE v7[224];

  v2 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002B1E8(a1, (uint64_t)v4, v5);
  v6 = (char *)sub_100075120 + 4 * byte_100521198[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_100075120()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  return 0;
}

void sub_1000752D4(uint64_t a1, void *a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  id v14;
  unint64_t v15;
  __n128 v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t *v19;
  _BYTE v20[80];

  v4 = v3;
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10063D2F0 != -1)
    swift_once(&qword_10063D2F0, sub_1000073DC);
  v11 = sub_100012DC4(v7, (uint64_t)qword_100640920);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v12, v20);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x49746E756F636361;
  *(_QWORD *)(inited + 40) = 0xE900000000000044;
  *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 48) = a2;
  v14 = a2;
  v15 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"User tapped migrate button. Presenting CK migration prompt to user. {accountID: %@}", 83, 2, v15);
  v16 = swift_bridgeObjectRelease(v15);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v8 + 8))(v10, v7, v16);
  if ((a3 & 1) != 0)
  {
    sub_100345D08();
  }
  else
  {
    Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v4
                                                         + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_presenter) + 32);
    if (Strong)
    {
      v18 = Strong;
      v19 = sub_10001413C((_QWORD *)(Strong + 48), *(_QWORD *)(Strong + 72));
      sub_100343930(1, v14, v18, *v19);
      swift_unknownObjectRelease(v18);
    }
    TTRITipKitSignal.donate(signalContext:)((Swift::String_optional)0);
  }
}

uint64_t sub_1000754A0(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t result;
  void (*v23)(uint64_t *, _BYTE *, uint64_t);
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _BYTE *v28;
  uint64_t v29;
  unsigned int *v30;
  _BYTE *v31;
  uint64_t v32;
  void (*v33)(_BYTE *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(_BYTE *, uint64_t);
  void (*v38)(_BYTE *, uint64_t);
  _BYTE v39[4];
  unsigned int v40;
  void (*v41)(_BYTE *, _QWORD *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  int v46;
  _BYTE *v47;
  uint64_t v48;
  _BYTE *v49;

  v46 = a1;
  v2 = type metadata accessor for TTRIAccountsListsSelection(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v44 = &v39[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for REMHashtagLabelSpecifier.Operation(0);
  v48 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v47 = &v39[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v49 = &v39[-v8];
  v9 = sub_10002A750((uint64_t *)&unk_1006549F0);
  __chkstk_darwin(v9);
  v11 = &v39[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = &v39[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = __chkstk_darwin(v14);
  v19 = (uint64_t *)&v39[-v18];
  __chkstk_darwin(v17);
  v21 = &v39[-v20];
  v45 = v1;
  sub_100061874(v11);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1)
    return sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_1006549F0);
  if (swift_getEnumCaseMultiPayload(v11, v2) != 2)
    return sub_10001F544((uint64_t)v11, type metadata accessor for TTRIAccountsListsSelection);
  (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v13 + 32))(v21, v11, v12);
  v23 = *(void (**)(uint64_t *, _BYTE *, uint64_t))(v13 + 16);
  v23(v19, v21, v12);
  v24 = (*(uint64_t (**)(uint64_t *, uint64_t))(v13 + 88))(v19, v12);
  if (v24 == enum case for REMHashtagLabelSpecifier.labels(_:))
  {
    v40 = v24;
    v41 = (void (*)(_BYTE *, _QWORD *, uint64_t))v23;
    (*(void (**)(uint64_t *, uint64_t))(v13 + 96))(v19, v12);
    v25 = *v19;
    v42 = v19[1];
    v43 = v25;
    v26 = sub_10002A750((uint64_t *)&unk_1006651D0);
    v27 = (char *)v19 + *(int *)(v26 + 64);
    v29 = v48;
    v28 = v49;
    (*(void (**)(_BYTE *, char *, uint64_t))(v48 + 32))(v49, v27, v5);
    v30 = (unsigned int *)&enum case for REMHashtagLabelSpecifier.Operation.or(_:);
    if ((v46 & 1) != 0)
      v30 = (unsigned int *)&enum case for REMHashtagLabelSpecifier.Operation.and(_:);
    v31 = v47;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v29 + 104))(v47, *v30, v5);
    v32 = sub_1000175C8(&qword_100640F60, (uint64_t (*)(uint64_t))&type metadata accessor for REMHashtagLabelSpecifier.Operation, (uint64_t)&protocol conformance descriptor for REMHashtagLabelSpecifier.Operation);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(v28, v31, v5, v32) & 1) != 0)
    {
      swift_bridgeObjectRelease(v42);
      swift_bridgeObjectRelease(v43);
      v33 = *(void (**)(_BYTE *, uint64_t))(v29 + 8);
      v33(v31, v5);
      v33(v49, v5);
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v13 + 8))(v21, v12);
    }
    v34 = (char *)v16 + *(int *)(v26 + 64);
    v35 = v42;
    *v16 = v43;
    v16[1] = v35;
    (*(void (**)(char *, _BYTE *, uint64_t))(v29 + 16))(v34, v31, v5);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v16, v40, v12);
    v36 = (uint64_t)v44;
    v41(v44, v16, v12);
    swift_storeEnumTagMultiPayload(v36, v2, 2);
    sub_1000620B0(v36, 16, 0);
    sub_10001F544(v36, type metadata accessor for TTRIAccountsListsSelection);
    v37 = *(uint64_t (**)(_BYTE *, uint64_t))(v13 + 8);
    v37(v16, v12);
    v38 = *(void (**)(_BYTE *, uint64_t))(v29 + 8);
    v38(v31, v5);
    v38(v49, v5);
    return v37(v21, v12);
  }
  else
  {
    if (v24 == enum case for REMHashtagLabelSpecifier.allLabels(_:)
      || v24 == enum case for REMHashtagLabelSpecifier.noLabels(_:))
    {
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v13 + 8))(v21, v12);
    }
    result = _diagnoseUnexpectedEnumCase<A>(type:)(v12, v12);
    __break(1u);
  }
  return result;
}

void sub_1000758CC(void (*a1)(void))
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  NSObject *v8;

  v3 = objc_msgSend(v1, "contentScrollView");
  if (v3)
  {
    v8 = v3;
    a1();

  }
  else
  {
    if (qword_10063D2F0 != -1)
      swift_once(&qword_10063D2F0, sub_1000073DC);
    v4 = type metadata accessor for Logger(0);
    v5 = sub_100012DC4(v4, (uint64_t)qword_100640920);
    v8 = Logger.logObject.getter(v5);
    v6 = static os_log_type_t.error.getter(v8);
    if (os_log_type_enabled(v8, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v6, "ppt_execute(_ scrollTest: @escaping (UIScrollView) failed because contentScrollView is nil", v7, 2u);
      swift_slowDealloc(v7, -1, -1);
    }
  }

}

uint64_t sub_1000759D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t (*v11)(_QWORD);
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  _OWORD v27[2];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _OWORD v38[2];
  _OWORD v39[12];
  _OWORD v40[2];

  v2 = type metadata accessor for TTRIAccountsListsSelection(0);
  __chkstk_darwin(v2);
  v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
  __chkstk_darwin(v5);
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  __chkstk_darwin(v8);
  v10 = (_OWORD *)((char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002B1E8(a1, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload(v10, v8) == 1)
  {
    v12 = v10[11];
    v13 = v10[9];
    v36 = v10[10];
    v37 = v12;
    v14 = v10[11];
    v38[0] = v10[12];
    *(_OWORD *)((char *)v38 + 10) = *(_OWORD *)((char *)v10 + 202);
    v15 = v10[7];
    v16 = v10[5];
    v32 = v10[6];
    v33 = v15;
    v17 = v10[7];
    v18 = v10[9];
    v34 = v10[8];
    v35 = v18;
    v19 = v10[3];
    v20 = v10[1];
    v28 = v10[2];
    v29 = v19;
    v21 = v10[3];
    v22 = v10[5];
    v30 = v10[4];
    v31 = v22;
    v23 = v10[1];
    v27[0] = *v10;
    v27[1] = v23;
    v39[10] = v36;
    v39[11] = v14;
    v40[0] = v10[12];
    *(_OWORD *)((char *)v40 + 10) = *(_OWORD *)((char *)v10 + 202);
    v39[6] = v32;
    v39[7] = v17;
    v39[8] = v34;
    v39[9] = v13;
    v39[2] = v28;
    v39[3] = v21;
    v39[4] = v30;
    v39[5] = v16;
    v39[0] = v27[0];
    v39[1] = v20;
    sub_10007636C((uint64_t)v39);
    sub_100075CE8((uint64_t)v39, (uint64_t)v4);
    swift_storeEnumTagMultiPayload(v4, v2, 1);
    sub_100076C08((uint64_t)v27);
    sub_1000620B0((uint64_t)v4, 2, 0);
    sub_100075FE8((uint64_t)v27);
    v24 = type metadata accessor for TTRIAccountsListsSelection;
    v25 = (uint64_t)v4;
  }
  else
  {
    sub_10001F580((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
    LOBYTE(v39[0]) = v7[*(int *)(v5 + 20)];
    sub_1000763A4((uint64_t)v39);
    sub_100075CE8((uint64_t)v39, (uint64_t)v4);
    swift_storeEnumTagMultiPayload(v4, v2, 1);
    sub_1000620B0((uint64_t)v4, 2, 0);
    sub_10001F544((uint64_t)v4, type metadata accessor for TTRIAccountsListsSelection);
    v25 = (uint64_t)v7;
    v24 = (uint64_t (*)(uint64_t))&type metadata accessor for TTRAccountsListsViewModel.SmartList;
  }
  return sub_10001F544(v25, v24);
}

double sub_100075C3C(uint64_t a1, id a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  double result;

  v3 = objc_msgSend(a2, "items");
  v4 = sub_100005ED8(0, (unint64_t *)&qword_100650570, UIDragItem_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((sub_1003E5908(v5) & 1) != 0)
    v6 = sub_1003396B4(v5, a1);
  else
    v6 = sub_10033969C(v5, a1);
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

uint64_t sub_100075CE8(uint64_t a1, uint64_t a2)
{
  initializeWithTake for TTRIAccountsListsSelection.PinnedListSelection(a2, a1);
  return a2;
}

uint64_t sub_100075D24(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 216) >> 15;
}

uint64_t sub_100075D30(uint64_t result)
{
  *(_WORD *)(result + 216) &= ~0x8000u;
  return result;
}

id sub_100075D40(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, void *a17, void *a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,__int16 a28)
{
  void *v30;
  id v31;

  if (a28 < 0)
  {
    v30 = result;
    swift_bridgeObjectRetain(a9);
    v31 = v30;
    swift_bridgeObjectRetain(a3);
    swift_bridgeObjectRetain(a7);
    sub_10002B764(a10, a11, a12, a13, a14, a15, a16 & 1);
    sub_10002B7A0(a17, a18, a19 & 1);
    swift_bridgeObjectRetain(a27);
    swift_bridgeObjectRetain(a22);
    swift_bridgeObjectRetain(a23);
    swift_bridgeObjectRetain(a24);
    return a25;
  }
  return result;
}

void *sub_100075E70(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, void *a17, void *a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,__int16 a28)
{
  if (a28 < 0)
  {

    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(a7);
    swift_bridgeObjectRelease(a9);
    sub_10002B328(a10, a11, a12, a13, a14, a15, a16 & 1);
    sub_10002B318(a17, a18, a19 & 1);
    swift_bridgeObjectRelease(a22);
    swift_bridgeObjectRelease(a23);
    swift_bridgeObjectRelease(a24);

    return (void *)swift_bridgeObjectRelease(a27);
  }
  return result;
}

uint64_t sub_100075FA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 32);

  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_100075FE8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void *v12;
  char v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 64);
  v12 = *(void **)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(_QWORD *)(a1 + 96);
  v8 = *(_QWORD *)(a1 + 104);
  v9 = *(_QWORD *)(a1 + 112);
  v10 = *(_BYTE *)(a1 + 120);
  v14 = *(void **)(a1 + 136);
  v15 = *(void **)(a1 + 128);
  v13 = *(_BYTE *)(a1 + 144);
  v16 = *(_QWORD *)(a1 + 168);
  v17 = *(_QWORD *)(a1 + 176);
  v18 = *(_QWORD *)(a1 + 184);
  v19 = *(void **)(a1 + 192);
  v20 = *(_QWORD *)(a1 + 208);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
  swift_bridgeObjectRelease(v3);

  swift_bridgeObjectRelease(v4);
  sub_10002B328(v12, v5, v6, v7, v8, v9, v10);
  sub_10002B318(v15, v14, v13);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v18);

  swift_bridgeObjectRelease(v20);
  return a1;
}

void sub_1000760F4(id a1, char a2)
{
  if (a2 != -1)

}

void sub_100076108(unint64_t a1)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  sub_10033BB5C(a1);
  if (a1 >> 61 == 4)
  {
    v3 = objc_msgSend(v1, "view");
    if (v3)
    {
      v4 = v3;
      v5 = type metadata accessor for TTRIAccountsListsTreeView(0);
      v6 = swift_dynamicCastClass(v4, v5);
      if (v6)
      {
        v7 = *(void **)(v6 + qword_10065D8E0);
        if (v7)
        {
          v8 = v7;
          sub_1000076E0((uint64_t)&unk_100640E58, (uint64_t *)&unk_100646A20, (uint64_t *)&unk_100640E40);

          return;
        }
        __break(1u);
      }

    }
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
    __break(1u);
  }
}

uint64_t sub_100076238(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRITreeViewDropProposal(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007627C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000762A0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 74, 7);
}

Class sub_1000762CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100061EE0(a1, a2, v2);
}

void sub_1000762D4()
{
  uint64_t v0;

  sub_100061FD0(v0);
}

uint64_t sub_1000762DC(uint64_t a1)
{
  uint64_t v1;

  return sub_1000616AC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1000762E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10006E768(a1, *(uint64_t (**)(void))(v2 + 16), (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, a2);
}

uint64_t sub_100076304(uint64_t a1)
{
  uint64_t *v1;

  return sub_10006B8AC(a1, v1[2], v1[3], v1[4], v1[5], sub_10006B64C, (void (*)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10006C178);
}

uint64_t sub_100076330()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100076354()
{
  uint64_t v0;

  return sub_100063F20(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_100076360(uint64_t a1)
{
  uint64_t *v1;

  return sub_10006D320(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_10007636C(uint64_t result)
{
  uint64_t v1;
  __int16 v2;

  v1 = *(_QWORD *)(result + 144) & 0x101FF0101;
  v2 = *(_WORD *)(result + 216) & 0x101 | 0x8000;
  *(_QWORD *)(result + 120) &= 1uLL;
  *(_QWORD *)(result + 144) = v1;
  *(_WORD *)(result + 216) = v2;
  return result;
}

uint64_t sub_1000763A4(uint64_t result)
{
  uint64_t v1;
  __int16 v2;

  v1 = *(_QWORD *)(result + 144) & 0x101FF0101;
  v2 = *(_WORD *)(result + 216) & 0x101;
  *(_QWORD *)(result + 120) &= 1uLL;
  *(_QWORD *)(result + 144) = v1;
  *(_WORD *)(result + 216) = v2;
  return result;
}

uint64_t sub_1000763D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

void sub_10007641C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  void *Strong;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46[24];

  v3 = v2;
  v6 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v6);
  v8 = &v46[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v46[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = sub_10006B3DC();
  v15 = v14;
  v17 = v16;
  v45 = a1;
  v18 = sub_10007335C(a1, v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID, (void (*)(uint64_t))&TTRRemindersListViewModel.Item.treeItemIdentifier.getter, (uint64_t (*)(char *))sub_1002AA39C, sub_1000CE5E4);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v13);
  if (!v18)
    return;
  if (*(_BYTE *)(v18 + 72) != 1)
  {
    swift_release();
    return;
  }
  v19 = sub_10006B3DC();
  v21 = v20;
  v23 = v22;
  sub_100309FE0(v18, v19, v22, v24 & 1, (uint64_t)v8);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v21);
  v25 = swift_bridgeObjectRelease(v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48))(v8, 1, v9, v25) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    swift_beginAccess(v18 + 64, v46, 0, 0);
    v32 = *(_QWORD *)(v18 + 64);
    if ((unint64_t)v32 >> 62)
    {
      if (v32 < 0)
        v43 = *(_QWORD *)(v18 + 64);
      else
        v43 = v32 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v18 + 64));
      v44 = _CocoaArrayWrapper.endIndex.getter(v43);
      swift_bridgeObjectRelease(v32);
      if (!v44)
        goto LABEL_16;
    }
    else if (!*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_16;
    }
    if (qword_10063D3C8 != -1)
      swift_once(&qword_10063D3C8, sub_1000E35C8);
    v33 = type metadata accessor for Logger(0);
    v34 = sub_100012DC4(v33, (uint64_t)qword_100645EC0);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.fault.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Collapsed node should have no child nodes", v37, 2u);
      swift_slowDealloc(v37, -1, -1);
    }

LABEL_16:
    __chkstk_darwin(v31);
    *(&v45 - 4) = v3;
    *(&v45 - 3) = v18;
    *(&v45 - 2) = (uint64_t)v12;
    *(&v45 - 1) = a2;
    sub_10030A8DC((void (*)(uint64_t))sub_10007688C, (uint64_t)(&v45 - 6), 0, 0, 0, 0);
    v38 = *(_QWORD *)(v3 + qword_100645F28);
    if (v38)
    {
      v39 = *(uint64_t (**)(uint64_t))(v38 + 16);
      v40 = swift_retain();
      if ((v39(v40) & 1) != 0)
      {
        Strong = (void *)swift_unknownObjectUnownedLoadStrong(v3 + qword_100645EF8);
        (*(void (**)(void *, uint64_t))(v38 + 240))(Strong, v45);
        swift_release();
        swift_release();

LABEL_23:
        (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v42);
        return;
      }
      swift_release();
    }
    v42 = swift_release();
    goto LABEL_23;
  }
  sub_1000073A0((uint64_t)v8, &qword_100646950);
  if (qword_10063D3C8 != -1)
    swift_once(&qword_10063D3C8, sub_1000E35C8);
  v26 = type metadata accessor for Logger(0);
  v27 = sub_100012DC4(v26, (uint64_t)qword_100645EC0);
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.fault.getter(v28);
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Unable to find index path", v30, 2u);
    swift_slowDealloc(v30, -1, -1);
    swift_release();

  }
  else
  {

    swift_release();
  }
}

uint64_t sub_10007688C(uint64_t a1)
{
  uint64_t *v1;

  return sub_10006B8AC(a1, v1[2], v1[3], v1[4], v1[5], sub_10006B3DC, (void (*)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10006B974);
}

double sub_1000768B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;

  v5 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10006B3DC();
  v14 = v13;
  v16 = v15;
  v17 = sub_10007335C(a1, v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID, (void (*)(uint64_t))&TTRRemindersListViewModel.Item.treeItemIdentifier.getter, (uint64_t (*)(char *))sub_1002AA39C, sub_1000CE5E4);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v14);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  if (v17)
  {
    if (*(_BYTE *)(v17 + 72) == 2)
    {
      v19 = sub_10006B3DC();
      v21 = v20;
      v23 = v22;
      sub_100309FE0(v17, v19, v22, v24 & 1, (uint64_t)v7);
      swift_bridgeObjectRelease(v23);
      swift_bridgeObjectRelease(v21);
      v25 = swift_bridgeObjectRelease(v19);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v9 + 48))(v7, 1, v8, v25) == 1)
      {
        sub_1000073A0((uint64_t)v7, &qword_100646950);
        if (qword_10063D3C8 != -1)
          swift_once(&qword_10063D3C8, sub_1000E35C8);
        v26 = type metadata accessor for Logger(0);
        v27 = sub_100012DC4(v26, (uint64_t)qword_100645EC0);
        v28 = Logger.logObject.getter(v27);
        v29 = static os_log_type_t.fault.getter(v28);
        if (os_log_type_enabled(v28, v29))
        {
          v30 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v30 = 0;
          _os_log_impl((void *)&_mh_execute_header, v28, v29, "Unable to find index path", v30, 2u);
          swift_slowDealloc(v30, -1, -1);
          swift_release();

        }
        else
        {

          *(_QWORD *)&result = swift_release().n128_u64[0];
        }
      }
      else
      {
        v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
        __chkstk_darwin(v31);
        *(&v33 - 4) = v17;
        *(&v33 - 3) = v2;
        *(&v33 - 2) = (uint64_t)v11;
        *(&v33 - 1) = a2;
        sub_10030A8DC((void (*)(uint64_t))sub_100076BA0, (uint64_t)(&v33 - 6), 0, 0, 0, 0);
        v32 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v32);
      }
    }
    else
    {
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_100076BA0(uint64_t a1)
{
  uint64_t *v1;

  return sub_10006D074(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_100076BAC(uint64_t a1, uint64_t a2)
{
  initializeWithTake for TTRIRemindersBoardChromelessBarsController.ColumnState(a2, a1);
  return a2;
}

uint64_t sub_100076BE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10006E768(a1, *(uint64_t (**)(void))(v2 + 16), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID, a2);
}

uint64_t sub_100076C08(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  id v12;
  void *v14;
  uint64_t v15;
  char v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 80);
  v14 = *(void **)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(_QWORD *)(a1 + 96);
  v8 = *(_QWORD *)(a1 + 104);
  v9 = *(_QWORD *)(a1 + 112);
  v10 = *(_BYTE *)(a1 + 120);
  v17 = *(void **)(a1 + 136);
  v18 = *(void **)(a1 + 128);
  v16 = *(_BYTE *)(a1 + 144);
  v19 = *(_QWORD *)(a1 + 168);
  v20 = *(_QWORD *)(a1 + 176);
  v21 = *(_QWORD *)(a1 + 184);
  v22 = *(void **)(a1 + 192);
  v15 = *(_QWORD *)(a1 + 208);
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 64));
  v11 = v2;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  sub_10002B764(v14, v5, v6, v7, v8, v9, v10);
  sub_10002B7A0(v18, v17, v16);
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v21);
  v12 = v22;
  return a1;
}

void sub_100076D14()
{
  uint64_t v0;

  sub_100067D70(v0);
}

void sub_100076D1C(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

id sub_100076D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  id result;

  if (a3)
  {
    swift_bridgeObjectRetain(a7);
    swift_bridgeObjectRetain(a3);
    swift_bridgeObjectRetain(a5);
    return a6;
  }
  return result;
}

id sub_100076D78(id result, char a2)
{
  if ((a2 & 1) != 0)
    return result;
  return result;
}

uint64_t sub_100076D84(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_100076D9C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))
{
  __int16 v4;

  v4 = *(_WORD *)(a1 + 216);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    v4);
  return a1;
}

void *sub_100076E18(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, void *a17, void *a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27)
{
  if (result)
  {

    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(a7);
    swift_bridgeObjectRelease(a9);
    sub_10002B328(a10, a11, a12, a13, a14, a15, a16 & 1);
    sub_10002B318(a17, a18, a19 & 1);
    swift_bridgeObjectRelease(a22);
    swift_bridgeObjectRelease(a23);
    swift_bridgeObjectRelease(a24);

    return (void *)swift_bridgeObjectRelease(a27);
  }
  return result;
}

BOOL sub_100076F28()
{
  uint64_t v0;

  return sub_1002C12B4(v0);
}

void sub_100076F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1002C12B8(a1, a2, a3, v3);
}

void sub_100076F38(void *a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5, unint64_t a6, void *a7, uint64_t a8, uint64_t a9, unint64_t a10, void *a11, char a12)
{
  switch(a12)
  {
    case 2:
      swift_bridgeObjectRelease(a3);

      swift_bridgeObjectRelease(a5);
      sub_100077044(a6, a7);
      sub_10007706C(a8, a9, a10, a11);
      break;
    case 1:
      swift_bridgeObjectRelease(a2);
      sub_100077044(a3, a4);
      break;
    case 0:
      swift_bridgeObjectRelease(a3);

      swift_bridgeObjectRelease(a5);
      sub_100077044(a6, a7);
      break;
  }
}

void sub_100077044(unint64_t a1, void *a2)
{
  if (a1 >> 2 != 0xFFFFFFFF)
    sub_100077058(a1, a2);
}

void sub_100077058(unint64_t a1, void *a2)
{
  if (a1 >> 61 == 3)

}

void sub_10007706C(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    sub_100077044(a3, a4);
  }
}

unint64_t sub_1000770A4()
{
  unint64_t result;

  result = qword_100649CD0;
  if (!qword_100649CD0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_100649CD0);
  }
  return result;
}

uint64_t sub_1000770E8(uint64_t a1)
{
  sub_10007711C(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

void *sub_10007711C(void *result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != -1)
    return sub_100077130(result, a2, a3, a4, a5);
  return result;
}

void *sub_100077130(void *result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != 2)
  {
    if (a5 == 1)
    {

      swift_bridgeObjectRelease(a2);
      a2 = a3;
      a3 = a4;
    }
    else
    {
      if (a5)
        return result;

    }
  }
  swift_bridgeObjectRelease(a2);
  return (void *)swift_bridgeObjectRelease(a3);
}

uint64_t sub_1000771AC()
{
  uint64_t v0;

  return sub_100067284(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void *sub_1000771B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100069818(a1, a2, a3, v3);
}

_QWORD *sub_1000771C0@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100064BB4(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_1000771DC()
{
  unint64_t result;

  result = qword_100641040;
  if (!qword_100641040)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRAccountsListsViewModel.HashtagFilterOperation.Option, &type metadata for TTRAccountsListsViewModel.HashtagFilterOperation.Option);
    atomic_store(result, (unint64_t *)&qword_100641040);
  }
  return result;
}

void sub_100077220()
{
  uint64_t v0;

  sub_100064B64(v0);
}

uint64_t sub_10007722C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4)
{
  return sub_100077248(a1, a2, a3, a4, sub_100331128);
}

uint64_t sub_10007723C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4)
{
  return sub_100077248(a1, a2, a3, a4, sub_100332BF4);
}

uint64_t sub_100077248(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v11;

  v11 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRAccountsListsViewModel.Item(0) - 8) + 80);
  return sub_100064798(a1, a2, a3, a4, *(_QWORD *)(v5 + 16), v5 + ((v11 + 24) & ~v11), a5);
}

uint64_t sub_1000772BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
    case 7u:
    case 9u:
      v7 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v4, v7);
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 1u:
      v9 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
      v10 = type metadata accessor for TTRAccountsListsViewModel.PinnedLists(0);
      goto LABEL_13;
    case 2u:
      v11 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v4, v11);
      v12 = type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + *(int *)(v12 + 28) + 8));
      v8 = *(_QWORD *)(v6 + *(int *)(v12 + 40) + 8);
      goto LABEL_15;
    case 3u:
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 8));

      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 4u:
    case 5u:

      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 16));
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 48));
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 64));
      sub_10002B328(*(void **)(v6 + 72), *(_QWORD *)(v6 + 80), *(_QWORD *)(v6 + 88), *(_QWORD *)(v6 + 96), *(_QWORD *)(v6 + 104), *(_QWORD *)(v6 + 112), *(_BYTE *)(v6 + 120));
      sub_10002B318(*(void **)(v6 + 128), *(id *)(v6 + 136), *(_BYTE *)(v6 + 144));
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 168));
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 176));
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 184));

      v8 = *(_QWORD *)(v6 + 208);
      goto LABEL_15;
    case 6u:
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 32));

      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 8u:
      sub_100076F38(*(void **)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(void **)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), *(void **)(v6 + 48), *(_QWORD *)(v6 + 56), *(_QWORD *)(v6 + 64), *(_QWORD *)(v6 + 72), *(void **)(v6 + 80), *(_BYTE *)(v6 + 88));
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 0xAu:
      v8 = *(_QWORD *)(v6 + 8);
      goto LABEL_15;
    case 0xBu:
      v13 = type metadata accessor for UUID(0);
      v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
      v14(v0 + v4, v13);
      v15 = v6 + *(int *)(type metadata accessor for TTRAccountsListsViewModel.HashtagsSection(0) + 20);
      v16 = type metadata accessor for TTRAccountsListsViewModel.HashtagFilterOperation(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
      v14(v15, v13);
      v8 = *(_QWORD *)(v15 + *(int *)(v16 + 20));
LABEL_15:
      swift_bridgeObjectRelease(v8);
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 0xCu:
      v17 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v0 + v4, v17);
      v10 = type metadata accessor for TTRAccountsListsViewModel.Hashtags(0);
LABEL_13:
      v8 = *(_QWORD *)(v6 + *(int *)(v10 + 20));
      goto LABEL_15;
    case 0xDu:

      v8 = *(_QWORD *)(v6 + 16);
      goto LABEL_15;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }
}

void sub_100077560()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRAccountsListsViewModel.Item(0) - 8) + 80);
  sub_100064938(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1000775A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = v0 + v4;
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
    case 7u:
    case 9u:
      v7 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v4, v7);
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 1u:
      v9 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
      v10 = type metadata accessor for TTRAccountsListsViewModel.PinnedLists(0);
      goto LABEL_13;
    case 2u:
      v11 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v4, v11);
      v12 = type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + *(int *)(v12 + 28) + 8));
      v8 = *(_QWORD *)(v6 + *(int *)(v12 + 40) + 8);
      goto LABEL_15;
    case 3u:
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 8));

      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 4u:
    case 5u:

      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 16));
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 48));
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 64));
      sub_10002B328(*(void **)(v6 + 72), *(_QWORD *)(v6 + 80), *(_QWORD *)(v6 + 88), *(_QWORD *)(v6 + 96), *(_QWORD *)(v6 + 104), *(_QWORD *)(v6 + 112), *(_BYTE *)(v6 + 120));
      sub_10002B318(*(void **)(v6 + 128), *(id *)(v6 + 136), *(_BYTE *)(v6 + 144));
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 168));
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 176));
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 184));

      v8 = *(_QWORD *)(v6 + 208);
      goto LABEL_15;
    case 6u:
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 32));

      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 8u:
      sub_100076F38(*(void **)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(void **)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), *(void **)(v6 + 48), *(_QWORD *)(v6 + 56), *(_QWORD *)(v6 + 64), *(_QWORD *)(v6 + 72), *(void **)(v6 + 80), *(_BYTE *)(v6 + 88));
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 0xAu:
      v8 = *(_QWORD *)(v6 + 8);
      goto LABEL_15;
    case 0xBu:
      v13 = type metadata accessor for UUID(0);
      v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
      v14(v0 + v4, v13);
      v15 = v6 + *(int *)(type metadata accessor for TTRAccountsListsViewModel.HashtagsSection(0) + 20);
      v16 = type metadata accessor for TTRAccountsListsViewModel.HashtagFilterOperation(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
      v14(v15, v13);
      v8 = *(_QWORD *)(v15 + *(int *)(v16 + 20));
LABEL_15:
      swift_bridgeObjectRelease(v8);
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 0xCu:
      v17 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v0 + v4, v17);
      v10 = type metadata accessor for TTRAccountsListsViewModel.Hashtags(0);
LABEL_13:
      v8 = *(_QWORD *)(v6 + *(int *)(v10 + 20));
      goto LABEL_15;
    case 0xDu:

      v8 = *(_QWORD *)(v6 + 16);
      goto LABEL_15;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }
}

uint64_t sub_100077850(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4)
{
  return sub_100077248(a1, a2, a3, a4, sub_1003307B4);
}

uint64_t sub_10007785C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100077880()
{
  uint64_t v0;

  return sub_10032E41C(v0);
}

unint64_t sub_100077888(unint64_t result, void *a2)
{
  if (result >> 2 != 0xFFFFFFFF)
    return sub_10007789C(result, a2);
  return result;
}

unint64_t sub_10007789C(unint64_t result, void *a2)
{
  if (result >> 61 == 3)
    return (unint64_t)a2;
  return result;
}

ValueMetadata *type metadata accessor for TTRIAccountsListsViewController.Argument()
{
  return &type metadata for TTRIAccountsListsViewController.Argument;
}

uint64_t sub_100077900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_1006410D0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_1006410D0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_100077990(void *a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  objc_super v14;
  __int128 v15;
  char v16;
  void *v17;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders29TTRIListSharingViewController_doneButton] = 0;
  v5 = v2;
  static TTRTypedController.currentArgument.getter(&v15, ObjectType, &off_100641138);
  v6 = v16;
  v7 = v17;
  v8 = v15;
  *(_OWORD *)&v5[OBJC_IVAR____TtC9Reminders29TTRIListSharingViewController_presenter] = v15;
  v5[OBJC_IVAR____TtC9Reminders29TTRIListSharingViewController_style] = v6;
  *(_QWORD *)&v5[OBJC_IVAR____TtC9Reminders29TTRIListSharingViewController_localUndoManager] = v7;
  v5[OBJC_IVAR____TtC9Reminders29TTRIListSharingViewController_allowsEditing] = v6 ^ 1;
  v9 = v8;
  swift_unknownObjectRetain(v8);
  v10 = v7;

  v14.receiver = v5;
  v14.super_class = ObjectType;
  v11 = objc_msgSendSuper2(&v14, "initWithCoder:", a1);

  v12 = v11;
  swift_unknownObjectRelease(v9);
  if (v12)

  return v12;
}

void sub_100077AD0(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  NSString v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t ObjCClassFromMetadata;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *object;
  id v24;
  NSString v25;
  id v26;
  id v27;
  objc_super v28;

  v3 = v2;
  v28.receiver = v2;
  v28.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v28, "viewDidLoad");
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend((id)objc_opt_self(UINib), "nibWithNibName:bundle:", v4, 0);

  v6 = objc_msgSend(v3, "tableView");
  if (!v6)
  {
    __break(1u);
    goto LABEL_10;
  }
  v7 = v6;
  type metadata accessor for TTRIListSharingParticipantCell();
  v8 = v5;
  static UITableViewCell.tableViewCellIdentifier.getter();
  v10 = v9;
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  objc_msgSend(v7, "registerNib:forCellReuseIdentifier:", v8, v11);

  v12 = objc_msgSend(v3, "tableView");
  if (!v12)
  {
LABEL_10:
    __break(1u);
    return;
  }
  v13 = v12;
  v14 = sub_100005ED8(0, (unint64_t *)&qword_1006462D0, UITableViewCell_ptr);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v14);
  static UITableViewCell.tableViewCellIdentifier.getter();
  v17 = v16;
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  objc_msgSend(v13, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v18);

  if ((*((_BYTE *)v3 + OBJC_IVAR____TtC9Reminders29TTRIListSharingViewController_style) & 1) != 0)
  {
    v19 = 0xD000000000000058;
    v20 = 0x8000000100561400;
    v21 = 0x7720646572616853;
    v22 = 0xEB00000000687469;
  }
  else
  {
    v19 = 0xD000000000000049;
    v20 = 0x8000000100561460;
    v21 = 0x6977206572616853;
    v22 = 0xAD0000A680E26874;
  }
  object = TTRLocalizedString(_:comment:)(*(Swift::String *)&v21, *(Swift::String *)&v19)._object;
  v24 = objc_msgSend(v3, "navigationItem");
  v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v24, "setTitle:", v25);

  if (*((_BYTE *)v3 + OBJC_IVAR____TtC9Reminders29TTRIListSharingViewController_allowsEditing) == 1)
  {
    v26 = objc_msgSend(v3, "navigationItem");
    v27 = objc_msgSend(v3, "editButtonItem");
    objc_msgSend(v26, "setRightBarButtonItem:", v27);

  }
}

uint64_t sub_100077F50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;

  v2 = IndexPath.row.getter(a1);
  result = IndexPath.section.getter(v2);
  if (result != 1)
  {
    v4 = IndexPath.section.getter(result);
    result = 0;
    if (!v4 && (v2 & 0x8000000000000000) == 0)
    {
      v5 = sub_1002F4154();
      v6 = v5[2];
      result = swift_bridgeObjectRelease(v5);
      v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9Reminders29TTRIListSharingViewController_allowsEditing);
      v8 = __OFADD__(v6, v7);
      v9 = v6 + v7;
      if (v8)
      {
        __break(1u);
      }
      else if (v2 >= v9)
      {
        return 0;
      }
      else
      {
        v10 = sub_1002F4154();
        v11 = v10[2];
        swift_bridgeObjectRelease(v10);
        if (v2 < v11)
          return v2;
        else
          return 0;
      }
    }
  }
  return result;
}

_QWORD *sub_100078024(unint64_t a1, char a2)
{
  uint64_t v2;
  _QWORD *result;
  int v6;

  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC9Reminders29TTRIListSharingViewController_allowsEditing) != 1 || (a2 & 1) != 0)
    return 0;
  result = sub_1002F4154();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result[2] > a1)
  {
    v6 = LOBYTE(result[14 * a1 + 17]);
    swift_bridgeObjectRelease(result);
    return (_QWORD *)(v6 != 4);
  }
  __break(1u);
  return result;
}

void sub_1000780A4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __int16 v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  Class *v29;
  Class isa;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t inited;
  id v35;
  unint64_t v36;
  uint64_t v37;
  Class v38;
  _BYTE v39[80];
  _OWORD v40[5];
  _BYTE v41[25];

  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100077F50(a2);
  if ((v14 & 0x100) != 0)
  {
    if (qword_10063D2F8 != -1)
      swift_once(&qword_10063D2F8, sub_100077900);
    sub_100012DC4(v9, (uint64_t)qword_1006410D0);
    v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.fault.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(12, -1);
      v29 = (Class *)swift_slowAlloc(8, -1);
      *(_DWORD *)v28 = 138412290;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v40[0] = isa;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v40, (char *)v40 + 8, v28 + 4, v28 + 12);
      *v29 = isa;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Unexpected index path for list sharing view {indexPath: %@}", v28, 0xCu);
      v31 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v29, 1, v31);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v28, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    goto LABEL_14;
  }
  v15 = v13;
  if ((v14 & 1) == 0)
  {
    v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders29TTRIListSharingViewController_presenter);
    v17 = sub_1002F4154();
    if ((v15 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v18 = v17;
      if (v15 < v17[2])
      {
        v19 = &v17[14 * v15];
        v20 = v19[2];
        v21 = v19[4];
        v40[1] = v19[3];
        v40[2] = v21;
        v40[0] = v20;
        v22 = v19[5];
        v23 = v19[6];
        v24 = v19[7];
        *(_OWORD *)&v41[9] = *(_OWORD *)((char *)v19 + 121);
        v40[4] = v23;
        *(_OWORD *)v41 = v24;
        v40[3] = v22;
        sub_100079688((uint64_t)v40);
        swift_bridgeObjectRelease(v18);
        sub_1002F41B8((uint64_t *)v40);
        sub_10007970C((uint64_t)v40);
        return;
      }
    }
    __break(1u);
    goto LABEL_18;
  }
  v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders29TTRIListSharingViewController_presenter);
  if (v13)
  {
    if (qword_10063D640 == -1)
    {
LABEL_12:
      v32 = sub_100012DC4(v9, (uint64_t)qword_100655160);
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v32, v9);
      v33 = sub_10002A750((uint64_t *)&unk_100640F20);
      inited = swift_initStackObject(v33, v39);
      *(_OWORD *)(inited + 16) = xmmword_100520250;
      *(_QWORD *)(inited + 32) = 0x44497473696CLL;
      *(_QWORD *)(inited + 40) = 0xE600000000000000;
      v35 = objc_msgSend(*(id *)(*(_QWORD *)(v16 + 56) + 32), "objectID");
      *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
      *(_QWORD *)(inited + 48) = v35;
      v36 = sub_10002D32C(inited);
      sub_1000143B4((uint64_t)"List sharing stop sharing {listID: %@}", 38, 2, v36);
      swift_bridgeObjectRelease(v36);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      sub_10032157C();
      v26 = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(a1, "deselectRowAtIndexPath:animated:", v26, 1);
LABEL_14:

      return;
    }
LABEL_18:
    swift_once(&qword_10063D640, sub_1002F40C4);
    goto LABEL_12;
  }
  sub_1002F44DC();
  v38 = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "deselectRowAtIndexPath:animated:", v38, 1);

}

void sub_100078674(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int16 v13;
  unint64_t v14;
  int v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  _QWORD aBlock[5];
  uint64_t v43;
  _OWORD v44[5];
  _BYTE v45[25];

  v40 = a1;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v39 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v39);
  v38 = a3;
  v41 = v3;
  v12 = sub_100077F50(a3);
  if ((v13 & 0x100) == 0)
  {
    v14 = v12;
    v15 = v13 & 1;
    if ((sub_100078024(v12, v13 & 1) & 1) != 0 && !v15 && a2 && a2 != 2)
    {
      if (a2 == 1)
      {
        v16 = (char *)sub_1002F4154();
        if ((v14 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else
        {
          v9 = v16;
          if (v14 < *((_QWORD *)v16 + 2))
          {
            v17 = &v16[112 * v14];
            v18 = *((_OWORD *)v17 + 2);
            v19 = *((_OWORD *)v17 + 4);
            v44[1] = *((_OWORD *)v17 + 3);
            v44[2] = v19;
            v44[0] = v18;
            v20 = *((_OWORD *)v17 + 5);
            v21 = *((_OWORD *)v17 + 6);
            v22 = *((_OWORD *)v17 + 7);
            *(_OWORD *)&v45[9] = *(_OWORD *)(v17 + 121);
            v44[4] = v21;
            *(_OWORD *)v45 = v22;
            v44[3] = v20;
            sub_100079688((uint64_t)v44);
            swift_bridgeObjectRelease(v9);
            sub_1002F48BC((uint64_t)v44);
            v23 = v39;
            (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v38, v39);
            v24 = *(unsigned __int8 *)(v10 + 80);
            v25 = (v24 + 24) & ~v24;
            v26 = (v11 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
            v27 = swift_allocObject(&unk_1005ED4B8, v26 + 8, v24 | 7);
            v28 = v40;
            *(_QWORD *)(v27 + 16) = v40;
            (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v27 + v25, (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v23);
            v29 = v41;
            *(_QWORD *)(v27 + v26) = v41;
            v30 = swift_allocObject(&unk_1005ED4E0, 32, 7);
            *(_QWORD *)(v30 + 16) = sub_100079824;
            *(_QWORD *)(v30 + 24) = v27;
            aBlock[4] = sub_10001B278;
            v43 = v30;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_10001B258;
            aBlock[3] = &unk_1005ED4F8;
            v31 = _Block_copy(aBlock);
            v32 = v43;
            v33 = v28;
            v34 = v29;
            objc_msgSend(v33, "performBatchUpdates:completion:", v31, 0, swift_release(v32).n128_f64[0]);
            _Block_release(v31);
            sub_10007970C((uint64_t)v44);
            swift_release(v27);
            return;
          }
        }
        __break(1u);
      }
      if (qword_10063D2F8 != -1)
        swift_once(&qword_10063D2F8, sub_100077900);
      v35 = sub_100012DC4(v6, (uint64_t)qword_1006410D0);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v35, v6);
      v36 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
      v37 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
      sub_1002EB23C((uint64_t)"unknown editing style", 21, 2uLL, v36, v37);
      __break(1u);
    }
  }
}

void sub_1000789B4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Class isa;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  NSIndexSet *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  _UNKNOWN **v24;

  v4 = type metadata accessor for IndexSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750((uint64_t *)&unk_100650540);
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject(v8, v12 + *(_QWORD *)(v10 + 72), v11 | 7);
  *(_OWORD *)(v13 + 16) = xmmword_100520250;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v13 + v12, a2, v9);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v13);
  objc_msgSend(a1, "deleteRowsAtIndexPaths:withRowAnimation:", isa, 100);

  v15 = sub_1002F4154();
  v16 = v15[2];
  swift_bridgeObjectRelease(v15);
  if (!v16 && objc_msgSend(a1, "numberOfSections") == (id)2)
  {
    v24 = &off_1005EA878;
    v17 = sub_100079878();
    v18 = sub_10002A750(&qword_100641150);
    v19 = sub_1000798C0();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v18, v19, v4, v17);
    IndexSet._bridgeToObjectiveC()(v20);
    v22 = v21;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    objc_msgSend(a1, "deleteSections:withRowAnimation:", v22, 100);

  }
}

char *sub_100078F74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __int16 v9;
  unint64_t v10;
  char *result;
  char *v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  NSString v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint8_t *v29;
  Class *v30;
  Class isa;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  void *object;
  NSString v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  _QWORD v61[2];
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  _BYTE v67[25];

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100077F50(a2);
  if ((v9 & 0x100) != 0)
  {
    if (qword_10063D2F8 != -1)
      swift_once(&qword_10063D2F8, sub_100077900);
    v24 = type metadata accessor for Logger(0);
    sub_100012DC4(v24, (uint64_t)qword_1006410D0);
    v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.fault.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v61[1] = a1;
      v28 = swift_slowAlloc(12, -1);
      v61[0] = a2;
      v29 = (uint8_t *)v28;
      v30 = (Class *)swift_slowAlloc(8, -1);
      *(_DWORD *)v29 = 138412290;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v62 = isa;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, (char *)&v62 + 8, v29 + 4, v29 + 12);
      *v30 = isa;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Unexpected index path for list sharing view {indexPath: %@}", v29, 0xCu);
      v32 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v30, 1, v32);
      swift_slowDealloc(v30, -1, -1);
      v33 = v29;
      a2 = v61[0];
      swift_slowDealloc(v33, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }

    v46 = sub_100005ED8(0, (unint64_t *)&qword_1006462D0, UITableViewCell_ptr);
    return (char *)UITableView.dequeueReusableCell<A>(_:indexPath:)(v46, a2, v46);
  }
  v10 = v8;
  if ((v9 & 1) != 0)
  {
    v34 = sub_100005ED8(0, (unint64_t *)&qword_1006462D0, UITableViewCell_ptr);
    v21 = (char *)UITableView.dequeueReusableCell<A>(_:indexPath:)(v34, a2, v34);
    v35 = objc_msgSend(v21, "textLabel");
    v36 = v35;
    if (v10)
    {
      if (v35)
      {
        v37 = objc_msgSend((id)objc_opt_self(UIColor), "ttr_systemRedColor");
        objc_msgSend(v36, "setTextColor:", v37);

      }
      v38 = objc_msgSend(v21, "textLabel");
      if (v38)
      {
        v39 = v38;
        objc_msgSend(v38, "setTextAlignment:", 1);

      }
      v40 = objc_msgSend(v21, "textLabel");
      if (!v40)
        return v21;
      v41 = v40;
      v42 = 0xD000000000000033;
      v43 = 0x80000001005612E0;
      v44 = 0x61685320706F7453;
      v45 = 0xEC000000676E6972;
    }
    else
    {
      if (v35)
      {
        v47 = objc_msgSend(v21, "tintColor");
        objc_msgSend(v36, "setTextColor:", v47);

      }
      v48 = objc_msgSend(v21, "textLabel");
      if (v48)
      {
        v49 = v48;
        objc_msgSend(v48, "setTextAlignment:", 4);

      }
      v50 = objc_msgSend(v21, "textLabel");
      if (!v50)
        return v21;
      v41 = v50;
      v43 = 0x8000000100561320;
      v44 = 0x7372657020646441;
      v45 = 0xAD0000A680E26E6FLL;
      v42 = 0xD000000000000031;
    }
    object = TTRLocalizedString(_:comment:)(*(Swift::String *)&v44, *(Swift::String *)&v42)._object;
    v52 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v41, "setText:", v52);

    return v21;
  }
  result = (char *)sub_1002F4154();
  if ((v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_36;
  }
  v12 = result;
  if (v10 >= *((_QWORD *)result + 2))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v13 = &result[112 * v10];
  v15 = *((_OWORD *)v13 + 3);
  v14 = *((_OWORD *)v13 + 4);
  v62 = *((_OWORD *)v13 + 2);
  v63 = v15;
  v64 = v14;
  v16 = *((_OWORD *)v13 + 5);
  v17 = *((_OWORD *)v13 + 6);
  v18 = *((_OWORD *)v13 + 7);
  *(_OWORD *)&v67[9] = *(_OWORD *)(v13 + 121);
  v66 = v17;
  *(_OWORD *)v67 = v18;
  v65 = v16;
  v19 = v63;
  sub_100079688((uint64_t)&v62);
  swift_bridgeObjectRelease(v12);
  v20 = type metadata accessor for TTRIListSharingParticipantCell();
  v21 = (char *)UITableView.dequeueReusableCell<A>(_:indexPath:)(v20, a2, v20);
  result = (char *)swift_unknownObjectWeakLoadStrong(&v21[OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_mainLabel]);
  if (result)
  {
    v22 = result;
    if (v19)
    {
      swift_bridgeObjectRetain(v19);
      v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v19);
    }
    else
    {
      v23 = 0;
    }
    v53 = *(_QWORD *)&v67[8];
    v54 = *(_QWORD *)&v67[16];
    v55 = *((_QWORD *)&v66 + 1);
    v56 = *(_QWORD *)v67;
    v57 = v67[24];
    objc_msgSend(v22, "setText:", v23);

    sub_1002DD22C(v57);
    sub_100466D50(v58, v59);
    if (v56 | v54)
    {
      v60 = (void *)sub_10035A038(v55, v56, v53, v54);
      if (!v60)
        v60 = sub_10035A380((uint64_t)&v62);
    }
    else
    {
      v60 = 0;
    }
    sub_100466E44(v60);
    sub_10007970C((uint64_t)&v62);
    return v21;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for TTRIListSharingViewController()
{
  return objc_opt_self(_TtC9Reminders29TTRIListSharingViewController);
}

uint64_t sub_100079688(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 80);
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 96));
  v8 = v2;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  return a1;
}

uint64_t sub_10007970C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 96);

  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t sub_100079794()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_100079824()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  sub_1000789B4(*(void **)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_100079868()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100079878()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100646370;
  if (!qword_100646370)
  {
    v1 = type metadata accessor for IndexSet(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for IndexSet, v1);
    atomic_store(result, (unint64_t *)&qword_100646370);
  }
  return result;
}

unint64_t sub_1000798C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100646380;
  if (!qword_100646380)
  {
    v1 = sub_10002CA5C(&qword_100641150);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100646380);
  }
  return result;
}

void destroy for TTRIListSharingViewController.Argument(uint64_t a1)
{
  swift_unknownObjectRelease(*(_QWORD *)a1);

}

uint64_t initializeWithCopy for TTRIListSharingViewController.Argument(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  void *v4;
  id v5;

  v3 = *a2;
  *(_OWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  v4 = (void *)*((_QWORD *)a2 + 3);
  *(_QWORD *)(a1 + 24) = v4;
  swift_unknownObjectRetain(v3);
  v5 = v4;
  return a1;
}

uint64_t *assignWithCopy for TTRIListSharingViewController.Argument(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *a2;
  v5 = a2[1];
  v6 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v4);
  swift_unknownObjectRelease(v6);
  a1[1] = v5;
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  v7 = (void *)a2[3];
  v8 = (void *)a1[3];
  a1[3] = (uint64_t)v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for TTRIListSharingViewController.Argument(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_unknownObjectRelease(*(_QWORD *)a1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIListSharingViewController.Argument(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIListSharingViewController.Argument(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIListSharingViewController.Argument()
{
  return &type metadata for TTRIListSharingViewController.Argument;
}

_QWORD *sub_100079AC0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;

  v5 = sub_10007CFB4(a1, a2, a3, a4);

  swift_release();
  return v5;
}

_QWORD *sub_100079B1C()
{
  uint64_t v0;
  _QWORD *result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  void *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  _BYTE v64[280];
  _OWORD __src[18];
  uint64_t v66;
  _OWORD v67[7];
  _BYTE v68[280];
  _QWORD v69[4];
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  _QWORD v93[4];
  void *v94;
  void *v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  void *v102;
  uint64_t v103;
  _BYTE __dst[280];
  _QWORD v105[15];
  _BYTE v106[280];
  _QWORD v107[4];
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  __int128 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  uint64_t v130;

  sub_10000F614(v0 + 32, (uint64_t)v106, &qword_100641248);
  sub_10000F614((uint64_t)v106, (uint64_t)v107, &qword_100641248);
  if (sub_10007BC2C((uint64_t)v107) != 1)
  {
    v27 = v130;
    v30 = v116;
    v42 = v107[0];
    v43 = v107[1];
    v40 = v107[2];
    v41 = v107[3];
    v39 = v108;
    v17 = v109;
    v37 = v110;
    v38 = v111;
    v35 = v112;
    v36 = v113;
    v33 = v114;
    v34 = v115;
    v29 = v128;
    v32 = v129;
    v18 = v117;
    v19 = v118;
    v20 = v119;
    v21 = v120;
    v31 = v121;
    v22 = v122;
    v23 = v123;
    v24 = v124;
    v25 = v125;
    v26 = v126;
    v28 = v127;
    goto LABEL_6;
  }
  sub_10007AED0(v67);
  result = (_QWORD *)sub_10000F614((uint64_t)v67, (uint64_t)v93, &qword_100641250);
  v2 = v94;
  if (v94)
  {
    v3 = v93[0];
    v4 = v93[1];
    v5 = v93[2];
    v6 = v93[3];
    v60 = v96;
    v62 = v95;
    v7 = v97;
    v8 = v98;
    v9 = v99;
    v10 = v100;
    v56 = v102;
    v58 = v101;
    v11 = v103;
    v12 = objc_msgSend(*(id *)(v0 + 24), "indexPathsForVisibleItems");
    v13 = type metadata accessor for IndexPath(0);
    v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

    v66 = v14;
    swift_bridgeObjectRetain(v14);
    sub_10007BC44(&v66);
    swift_bridgeObjectRelease(v14);
    v15 = v66;
    swift_retain();
    v16 = sub_10007D18C(v15, v0);
    swift_release();
    swift_release();
    v105[0] = v3;
    v105[1] = v4;
    v105[2] = v5;
    v105[3] = v6;
    v105[4] = v2;
    v105[5] = v62;
    v105[6] = v60;
    v105[7] = v7;
    v105[8] = v8;
    v105[9] = v9;
    v105[10] = v10;
    v105[11] = v58;
    v105[12] = v56;
    v105[13] = v11;
    v105[14] = v16;
    sub_100079F68(v105, (uint64_t)v68);
    sub_10000F614((uint64_t)v68, (uint64_t)__dst, &qword_100641248);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v11);

    sub_10000F614((uint64_t)v68, (uint64_t)v69, &qword_100641248);
    result = (_QWORD *)sub_10007BC2C((uint64_t)v69);
    if ((_DWORD)result != 1)
    {
      v61 = v69[1];
      v63 = v69[0];
      v57 = v69[3];
      v59 = v69[2];
      v55 = v70;
      v17 = v71;
      v53 = v73;
      v54 = v72;
      v51 = v75;
      v52 = v74;
      v49 = v77;
      v50 = v76;
      v18 = v79;
      v19 = v80;
      v20 = v81;
      v21 = v82;
      v47 = v83;
      v48 = v78;
      v22 = v84;
      v23 = v85;
      v24 = v86;
      v25 = v87;
      v26 = v88;
      v45 = v90;
      v46 = v89;
      v44 = v91;
      v27 = v92;
      sub_10000F614(v0 + 32, (uint64_t)v64, &qword_100641248);
      sub_10000F614((uint64_t)v68, v0 + 32, &qword_100641248);
      sub_10000F614((uint64_t)__dst, (uint64_t)__src, &qword_100641248);
      sub_10007D72C((uint64_t)__src);
      sub_10007D948((uint64_t)v64, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007D838);
      v29 = v45;
      v28 = v46;
      v31 = v47;
      v30 = v48;
      v32 = v44;
      v34 = v49;
      v33 = v50;
      v36 = v51;
      v35 = v52;
      v38 = v53;
      v37 = v54;
      v39 = v55;
      v41 = v57;
      v40 = v59;
      v43 = v61;
      v42 = v63;
LABEL_6:
      *(_QWORD *)&__src[0] = v42;
      *((_QWORD *)&__src[0] + 1) = v43;
      *(_QWORD *)&__src[1] = v40;
      *((_QWORD *)&__src[1] + 1) = v41;
      __src[2] = v39;
      *(_QWORD *)&__src[3] = v17;
      *((_QWORD *)&__src[3] + 1) = v37;
      *(_QWORD *)&__src[4] = v38;
      *((_QWORD *)&__src[4] + 1) = v35;
      *(_QWORD *)&__src[5] = v36;
      *(_OWORD *)((char *)&__src[5] + 8) = v33;
      *(_OWORD *)((char *)&__src[6] + 8) = v34;
      *(_OWORD *)((char *)&__src[7] + 8) = v30;
      *((_QWORD *)&__src[8] + 1) = v18;
      *(_QWORD *)&__src[9] = v19;
      *((_QWORD *)&__src[9] + 1) = v20;
      *(_QWORD *)&__src[10] = v21;
      *(_OWORD *)((char *)&__src[10] + 8) = v31;
      *((_QWORD *)&__src[11] + 1) = v22;
      *(_QWORD *)&__src[12] = v23;
      *((_QWORD *)&__src[12] + 1) = v24;
      *(_QWORD *)&__src[13] = v25;
      *((_QWORD *)&__src[13] + 1) = v26;
      __src[14] = v28;
      __src[15] = v29;
      __src[16] = v32;
      *(_QWORD *)&__src[17] = v27;
      memcpy(__dst, __src, sizeof(__dst));
      sub_10007D948((uint64_t)v106, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007D9CC);
      sub_10007A7A4(__dst);
      return sub_10007DADC(__src);
    }
  }
  return result;
}

uint64_t sub_100079F68@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  void *v3;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  void *v13;
  char **v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  CGFloat MinY;
  double v32;
  double v33;
  double v34;
  double v35;
  id v36;
  id v37;
  id v38;
  double v39;
  double v40;
  double v41;
  double v42;
  id v43;
  char **v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  double v71;
  uint64_t v72;
  void *v73;
  id v74;
  double v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  _QWORD *v105;
  _QWORD v106[17];
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  _QWORD *v115;
  char **v116;
  _OWORD v117[2];
  __int128 v118;
  _BYTE v119[48];
  __int128 v120;
  _OWORD v121[2];
  uint64_t v122;
  _QWORD v123[17];
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  _QWORD *v132;
  char **v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  _QWORD *v142;
  CGRect v143;

  v78 = *v2;
  v85 = a1[1];
  v86 = *a1;
  v83 = a1[3];
  v84 = a1[2];
  v94 = a1[5];
  v95 = a1[4];
  v81 = a1[8];
  v82 = a1[7];
  v79 = a1[10];
  v80 = a1[9];
  v92 = a1[11];
  v93 = a1[6];
  v91 = a1[12];
  v96 = a1[13];
  v87 = a1[14];
  v3 = (void *)v2[2];
  objc_msgSend(v3, "bounds");
  v9 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v5, v6, v7, v8);
  objc_msgSend(v9, "setAutoresizingMask:", 18);
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 1);
  v10 = *((_OWORD *)a1 + 1);
  v117[0] = *(_OWORD *)a1;
  v117[1] = v10;
  v11 = *((_OWORD *)a1 + 3);
  v118 = *((_OWORD *)a1 + 2);
  *(_OWORD *)v119 = v11;
  v12 = *((_OWORD *)a1 + 5);
  *(_OWORD *)&v119[16] = *((_OWORD *)a1 + 4);
  *(_OWORD *)&v119[32] = v12;
  v88 = (uint64_t)a1;
  v120 = *((_OWORD *)a1 + 6);
  v13 = (void *)v118;
  v14 = &selRef_contact;
  v77 = *(double *)v117;
  objc_msgSend(v3, "convertRect:fromCoordinateSpace:", (_QWORD)v118);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  objc_msgSend(v9, "bounds");
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v143.origin.x = v16;
  v143.origin.y = v18;
  v143.size.width = v20;
  v143.size.height = v22;
  MinY = CGRectGetMinY(v143);
  v32 = sub_100038048(v24, v26, v28, v30, MinY + 5.0, -30.0);
  v36 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v32, v33, v34, v35);
  objc_msgSend(v36, "setClipsToBounds:", 1);
  objc_msgSend(v9, "addSubview:", v36);
  v89 = v9;
  objc_msgSend(v3, "addSubview:", v9);
  v37 = objc_allocWithZone((Class)UIView);
  sub_10007EBB4((uint64_t)v117);
  v38 = objc_msgSend(v37, "initWithFrame:", v16, v18, v20, v22);
  objc_msgSend(v38, "bounds");
  v43 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v39, v40, v41, v42);
  v44 = &selRef_contact;
  v45 = objc_msgSend(v43, "layer");
  objc_msgSend(v45, "setCornerCurve:", kCACornerCurveContinuous);

  v46 = objc_msgSend(v43, "layer");
  v47 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  v48 = objc_msgSend(v47, "CGColor");

  objc_msgSend(v46, "setShadowColor:", v48);
  v49 = objc_msgSend(v43, "layer");
  if (qword_10063D320 != -1)
    goto LABEL_11;
  while (1)
  {
    objc_msgSend(v49, "setShadowOffset:", 0.0, *(double *)&qword_100641190);

    v50 = objc_msgSend(v43, v44[471]);
    if (qword_10063D318 != -1)
      swift_once(&qword_10063D318, sub_10007AEB0);
    objc_msgSend(v50, "setShadowRadius:", *(double *)&qword_100641188);

    objc_msgSend(v38, "addSubview:", v43);
    v121[0] = *(_OWORD *)&v119[8];
    v121[1] = *(_OWORD *)&v119[24];
    v51 = *(_QWORD *)&v119[40];
    v122 = *(_QWORD *)&v119[40];
    v52 = *(_OWORD *)&v119[8];
    v53 = *(_OWORD *)&v119[24];
    v49 = *(id *)v119;
    sub_10007ECE4((uint64_t)v121);
    objc_msgSend(v13, v14[451], v51, v52, v53);
    v55 = v54;
    v57 = v56;
    v60 = sub_10007ED0C(v58, v59, v77);
    v62 = v61;
    sub_10007ED18((uint64_t)v121);
    objc_msgSend(v49, "setFrame:", v60, v62, v55, v57);
    objc_msgSend(v38, "addSubview:", v49);
    v63 = *((_QWORD *)&v120 + 1);
    sub_10007EBB4((uint64_t)v117);
    v14 = (char **)v90;
    swift_retain();
    v38 = v38;
    swift_bridgeObjectRetain(v63);
    v65 = sub_10007CE38(v64, (double *)v117, v38);
    swift_release();

    sub_10007EC10(v117);
    swift_bridgeObjectRelease(v63);
    *(_QWORD *)&v134 = v86;
    *((_QWORD *)&v134 + 1) = v85;
    *(_QWORD *)&v135 = v84;
    *((_QWORD *)&v135 + 1) = v83;
    *(_QWORD *)&v136 = v95;
    *((_QWORD *)&v136 + 1) = v94;
    *(_QWORD *)&v137 = v93;
    *((_QWORD *)&v137 + 1) = v82;
    *(_QWORD *)&v138 = v81;
    *((_QWORD *)&v138 + 1) = v80;
    *(_QWORD *)&v139 = v79;
    *((_QWORD *)&v139 + 1) = v92;
    *(_QWORD *)&v140 = v91;
    *((_QWORD *)&v140 + 1) = v96;
    *(_QWORD *)&v141 = v38;
    *((_QWORD *)&v141 + 1) = v43;
    v142 = v65;
    sub_10007EBB4((uint64_t)v117);
    v66 = v38;
    v67 = v43;
    sub_10007EB34((uint64_t)&v134);
    objc_msgSend(v89, "addSubview:", v66);

    sub_10007EC10(v117);
    v68 = *(_QWORD *)(v88 + 112);
    v36 = v36;
    swift_retain();
    swift_bridgeObjectRetain(v68);
    v44 = (char **)sub_100079AC0(v69, v36, v90, v78);
    swift_bridgeObjectRelease(v68);
    v70 = (uint64_t)v44[2];
    if (!v70)
      break;
    *(_QWORD *)&v71 = swift_bridgeObjectRetain(v44).n128_u64[0];
    v72 = 136 * v70 + 8;
    while (v70 <= (uint64_t)v44[2])
    {
      --v70;
      objc_msgSend(v36, "addSubview:", *(char **)((char *)v44 + v72), v71);
      v72 -= 136;
      if (!v70)
      {
        swift_bridgeObjectRelease(v44);
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_11:
    swift_once(&qword_10063D320, sub_10007AEC0);
  }
LABEL_9:
  v103 = v140;
  v104 = v141;
  v99 = v136;
  v100 = v137;
  v101 = v138;
  v102 = v139;
  v97 = v134;
  v98 = v135;
  v131 = v141;
  v130 = v140;
  v129 = v139;
  v128 = v138;
  v127 = v137;
  v126 = v136;
  v125 = v135;
  v105 = v142;
  v123[0] = v86;
  v123[1] = v85;
  v123[2] = v84;
  v123[3] = v83;
  v123[4] = v95;
  v123[5] = v94;
  v123[6] = v93;
  v123[7] = v82;
  v123[8] = v81;
  v123[9] = v80;
  v123[10] = v79;
  v123[11] = v92;
  v123[12] = v91;
  v123[13] = v96;
  v123[14] = v87;
  v123[15] = v89;
  v123[16] = v36;
  v124 = v134;
  v132 = v142;
  v133 = v44;
  v73 = *(void **)(v90 + 24);
  sub_10007ED40(v88);
  v74 = v89;
  objc_msgSend(v73, "setHidden:", 1);
  sub_10007DC20(0, (uint64_t)v123);
  sub_10007E2E8(0, (uint64_t)v123);
  sub_10007EC68(&v134);

  v106[0] = v86;
  v106[1] = v85;
  v106[2] = v84;
  v106[3] = v83;
  v106[4] = v95;
  v106[5] = v94;
  v106[6] = v93;
  v106[7] = v82;
  v106[8] = v81;
  v106[9] = v80;
  v106[10] = v79;
  v106[11] = v92;
  v106[12] = v91;
  v106[13] = v96;
  v106[14] = v87;
  v106[15] = v74;
  v106[16] = v36;
  v114 = v104;
  v113 = v103;
  v112 = v102;
  v111 = v101;
  v110 = v100;
  v109 = v99;
  v108 = v98;
  v107 = v97;
  v115 = v105;
  v116 = v44;
  TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v106);
  return sub_10000F614((uint64_t)v106, a2, &qword_100641248);
}

void sub_10007A7A4(const void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  Class isa;
  id v7;
  uint64_t v8;
  void *v9;
  _QWORD aBlock[6];
  _BYTE v11[24];

  v2 = v1;
  v4 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 300.0, 200.0, 0.0, 0.0);
  v5 = type metadata accessor for TTRIAnimationSlowMode(0);
  *(_BYTE *)(swift_initStackObject(v5, v11) + 16) = 0;
  isa = TTRIAnimationSlowMode.adjust(_:)((UISpringTimingParameters)v4).super.isa;
  v7 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", isa, 0.0);

  v8 = swift_allocObject(&unk_1005ED658, 304, 7);
  *(_QWORD *)(v8 + 16) = v2;
  memcpy((void *)(v8 + 24), a1, 0x118uLL);
  aBlock[4] = sub_10007DBF0;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100006378;
  aBlock[3] = &unk_1005ED670;
  v9 = _Block_copy(aBlock);
  swift_retain();
  sub_10007D72C((uint64_t)a1);
  objc_msgSend(v7, "addAnimations:", v9, swift_release().n128_f64[0]);
  _Block_release(v9);
  objc_msgSend(v7, "startAnimation");

}

void sub_10007A924(const void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  Class isa;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void **aBlock;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  char v17[24];

  v2 = v1;
  v4 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 500.0, 300.0, 0.0, 0.0);
  v5 = type metadata accessor for TTRIAnimationSlowMode(0);
  *(_BYTE *)(swift_initStackObject(v5, v17) + 16) = 0;
  isa = TTRIAnimationSlowMode.adjust(_:)((UISpringTimingParameters)v4).super.isa;
  v7 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", isa, 0.0);

  v8 = swift_allocObject(&unk_1005ED6A8, 304, 7);
  *(_QWORD *)(v8 + 16) = v2;
  memcpy((void *)(v8 + 24), a1, 0x118uLL);
  v15 = sub_10007EE90;
  v16 = v8;
  aBlock = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_100006378;
  v14 = &unk_1005ED6C0;
  v9 = _Block_copy(&aBlock);
  swift_retain();
  sub_10007D72C((uint64_t)a1);
  objc_msgSend(v7, "addAnimations:", v9, swift_release().n128_f64[0]);
  _Block_release(v9);
  v15 = sub_10007EEC0;
  v16 = v2;
  aBlock = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_1000D3A2C;
  v14 = &unk_1005ED6E8;
  v10 = _Block_copy(&aBlock);
  swift_retain();
  objc_msgSend(v7, "addCompletion:", v10, swift_release().n128_f64[0]);
  _Block_release(v10);
  objc_msgSend(v7, "startAnimation");

}

id sub_10007AB1C()
{
  uint64_t v0;
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  void *v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  _BYTE v48[280];
  _BYTE v49[288];

  sub_10000F614(v0 + 32, (uint64_t)v48, &qword_100641248);
  sub_10000F614((uint64_t)v48, (uint64_t)v49, &qword_100641248);
  if (sub_10007BC2C((uint64_t)v49) == 1)
    return 0;
  v2 = *(double *)(v0 + 168);
  v3 = *(double *)(v0 + 176);
  v4 = *(double *)(v0 + 184);
  v5 = *(double *)(v0 + 192);
  v6 = *(void **)(v0 + 208);
  v7 = *(void **)(v0 + 216);
  v8 = *(double *)(v0 + 224);
  v9 = *(double *)(v0 + 240);
  v10 = *(double *)(v0 + 248);
  v11 = *(void **)(v0 + 256);
  v12 = *(void **)(v0 + 264);
  v13 = *(_QWORD *)(v0 + 272);
  v14 = *(id *)(v0 + 200);
  v15 = v6;
  v16 = v7;
  v17 = v11;
  v18 = v12;
  swift_bridgeObjectRetain(v13);
  v19 = v17;
  objc_msgSend(v19, "convertRect:fromCoordinateSpace:", v14, v2, v3, v4, v5);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;

  v28 = sub_10007ED0C(v21, v23, v8);
  v30 = v29;
  if (qword_10063D300 != -1)
    swift_once(&qword_10063D300, sub_10007AE50);
  v31 = sub_100038048(v28, v30, v25, v27, *(double *)&xmmword_100641158, *((double *)&xmmword_100641158 + 1));
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v38 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v18);
  objc_msgSend(v38, "setFrame:", 0.0, 0.0, v9, v10);
  v39 = objc_msgSend(objc_allocWithZone((Class)UIDragPreviewParameters), "init");
  v40 = qword_10063D310;
  v41 = v39;
  if (v40 != -1)
    swift_once(&qword_10063D310, sub_10007AEA0);
  v42 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v31, v33, v35, v37, *(double *)&qword_100641180);
  objc_msgSend(v41, "setVisiblePath:", v42);

  v43 = qword_10063D308;
  v44 = v41;
  if (v43 != -1)
    swift_once(&qword_10063D308, sub_10007AE68);
  objc_msgSend(v44, "setBackgroundColor:", qword_100641178);

  v45 = objc_allocWithZone((Class)UIDragPreview);
  v46 = v38;
  v1 = objc_msgSend(v45, "initWithView:parameters:", v46, v44);
  swift_bridgeObjectRelease(v13);

  return v1;
}

double sub_10007AE50()
{
  double result;

  result = 0.0;
  xmmword_100641158 = xmmword_1005214F0;
  *(_OWORD *)&qword_100641168 = xmmword_1005214F0;
  return result;
}

id sub_10007AE68()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemGroupedBackgroundColor");
  qword_100641178 = (uint64_t)result;
  return result;
}

void sub_10007AEA0()
{
  qword_100641180 = 0x4030000000000000;
}

void sub_10007AEB0()
{
  qword_100641188 = 0x4028000000000000;
}

void sub_10007AEC0()
{
  qword_100641190 = 0x4020000000000000;
}

void sub_10007AED0(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  NSString *v8;
  Class isa;
  id v10;
  uint64_t v11;
  uint64_t ObjectType;
  id v13;
  id v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _OWORD v29[7];

  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)(v1 + 24);
  v8 = UICollectionElementKindSectionHeader;
  IndexPath.init(item:section:)(0, 0);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v10 = objc_msgSend(v7, "supplementaryViewForElementKind:atIndexPath:", v8, isa);

  if (v10)
  {
    ObjectType = swift_getObjectType(v10, v11);
    if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIBoardColumnDraggingAnimationHeaderSourceProviding))
    {
      v13 = v10;
    }
    else
    {
      v13 = 0;
    }
    if (v13)
    {
      v14 = v10;
      sub_100509A0C(v29);
      v27 = v29[1];
      v28 = v29[0];
      v25 = v29[3];
      v26 = v29[2];
      v24 = v29[4];
      v23 = v29[5];
      v22 = v29[6];

    }
    else
    {
      v27 = 0u;
      v28 = 0u;
      v25 = 0u;
      v26 = 0u;
      v24 = 0u;
      v23 = 0u;
      v22 = 0u;
    }

    v16 = v27;
    v15 = v28;
    v18 = v25;
    v17 = v26;
    v19 = v24;
    v20 = v23;
    v21 = v22;
  }
  else
  {
    v15 = 0uLL;
    v16 = 0uLL;
    v17 = 0uLL;
    v18 = 0uLL;
    v19 = 0uLL;
    v20 = 0uLL;
    v21 = 0uLL;
  }
  *a1 = v15;
  a1[1] = v16;
  a1[2] = v17;
  a1[3] = v18;
  a1[4] = v19;
  a1[5] = v20;
  a1[6] = v21;
}

id sub_10007B098@<X0>(id a1@<X1>, double *a2@<X0>, double *a3@<X8>)
{
  double v4;
  double v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  _BYTE *v18;
  void *v19;
  id v20;
  _QWORD *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void *v30;
  id v31;
  int v32;
  id v33;
  double v34;
  double v35;
  id v36;
  id v37;
  id v38;
  void *v40;
  uint64_t v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49[6];

  v4 = *a2;
  v5 = a2[1];
  v6 = (void *)*((_QWORD *)a2 + 5);
  v40 = (void *)*((_QWORD *)a2 + 8);
  v41 = *((_QWORD *)a2 + 7);
  v43 = a2[9];
  v44 = *((_QWORD *)a2 + 6);
  v7 = a2[11];
  v42 = a2[10];
  v8 = a2[12];
  v47 = (void *)*((_QWORD *)a2 + 4);
  v48 = (void *)*((_QWORD *)a2 + 13);
  v45 = *((_QWORD *)a2 + 3);
  v46 = *((_QWORD *)a2 + 2);
  objc_msgSend(a1, "convertRect:fromCoordinateSpace:", *a2, v5);
  v13 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v9, v10, v11, v12);
  objc_msgSend(v13, "bounds");
  v18 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TTRIBoardColumnDraggingAnimationCellBackgroundView()), "initWithFrame:", v14, v15, v16, v17);
  v19 = (void *)objc_opt_self(UIColor);
  v20 = objc_msgSend(v19, "systemBackgroundColor");
  v21 = &v18[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_fill];
  v22 = *(void **)&v18[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_fill];
  v23 = *(void **)&v18[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_fill + 8];
  *v21 = v20;
  v21[1] = v6;
  v24 = v6;
  sub_10007EDAC(v22, v23);
  v25 = v20;
  sub_10007EDD8(v22, v23);
  sub_10023D43C(v22, v23);

  sub_10007EDD8(v22, v23);
  v26 = objc_msgSend(v19, "blackColor");
  if (qword_10063D320 != -1)
    swift_once(&qword_10063D320, sub_10007AEC0);
  v27 = qword_100641190;
  if (qword_10063D318 != -1)
    swift_once(&qword_10063D318, sub_10007AEB0);
  v28 = qword_100641188;
  v29 = &v18[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_shadow];
  sub_10000F614((uint64_t)&v18[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_shadow], (uint64_t)v49, &qword_100641260);
  v30 = *(void **)v29;
  *(_QWORD *)v29 = v26;
  *((_QWORD *)v29 + 1) = 0;
  *((_QWORD *)v29 + 2) = v27;
  *((_QWORD *)v29 + 3) = v28;
  *((_QWORD *)v29 + 4) = 0;
  sub_100037F78(v49);
  v31 = v26;

  sub_10023DB84(v49);
  sub_100037F50(v49);
  v32 = v18[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_debugShowsBoundingBox];
  v18[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_debugShowsBoundingBox] = 0;
  if (v32 == 1)
    sub_10023DD78();
  v33 = v40;
  objc_msgSend(v47, "convertRect:fromCoordinateSpace:", v48, v43, v42, v7, v8);
  objc_msgSend(v33, "setFrame:", sub_10007ED0C(v34, v35, v4));
  objc_msgSend(v13, "addSubview:", v18);
  objc_msgSend(v13, "addSubview:", v33);
  *a3 = v4;
  a3[1] = v5;
  *((_QWORD *)a3 + 2) = v46;
  *((_QWORD *)a3 + 3) = v45;
  *((_QWORD *)a3 + 4) = v47;
  *((_QWORD *)a3 + 5) = v24;
  *((_QWORD *)a3 + 6) = v44;
  *((_QWORD *)a3 + 7) = v41;
  *((_QWORD *)a3 + 8) = v33;
  a3[9] = v43;
  a3[10] = v42;
  a3[11] = v7;
  a3[12] = v8;
  *((_QWORD *)a3 + 13) = v48;
  *((_QWORD *)a3 + 14) = v13;
  *((_QWORD *)a3 + 15) = v18;
  *((_QWORD *)a3 + 16) = v33;
  v36 = v47;
  v37 = v24;
  v38 = v33;
  return v48;
}

uint64_t sub_10007B430(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _BYTE v6[280];
  _BYTE v7[280];
  _BYTE v8[280];
  _BYTE v9[280];
  _BYTE v10[120];
  id v11;
  uint64_t v12;
  uint64_t v13;

  if (!result)
  {
    v12 = v2;
    v13 = v3;
    v5 = a2 + 32;
    sub_10000F614(a2 + 32, (uint64_t)v9, &qword_100641248);
    sub_10000F614((uint64_t)v9, (uint64_t)v10, &qword_100641248);
    result = sub_10007BC2C((uint64_t)v10);
    if ((_DWORD)result != 1)
    {
      sub_10007EEC8((uint64_t)v6);
      sub_10000F614(v5, (uint64_t)v7, &qword_100641248);
      sub_10000F614((uint64_t)v6, v5, &qword_100641248);
      sub_10000F614((uint64_t)v9, (uint64_t)v8, &qword_100641248);
      sub_10007D72C((uint64_t)v8);
      sub_10007D948((uint64_t)v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007D838);
      objc_msgSend(v11, "removeFromSuperview");
      objc_msgSend(*(id *)(a2 + 24), "setHidden:", 0);
      return sub_10007D948((uint64_t)v9, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007D838);
    }
  }
  return result;
}

uint64_t sub_10007B524()
{
  uint64_t v0;
  _BYTE v2[280];

  sub_10000F614(v0 + 32, (uint64_t)v2, &qword_100641248);
  sub_10007D948((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007D838);
  return swift_deallocClassInstance(v0, 312, 7);
}

uint64_t type metadata accessor for TTRIBoardColumnDraggingAnimator()
{
  return objc_opt_self(_TtC9Reminders31TTRIBoardColumnDraggingAnimator);
}

uint64_t destroy for TTRIBoardColumnDraggingAnimator.AnimationState(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 104));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 112));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 240));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 264));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 272));
}

uint64_t initializeWithCopy for TTRIBoardColumnDraggingAnimator.AnimationState(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  __int128 v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(void **)(a2 + 32);
  v5 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v7 = *(void **)(a2 + 88);
  v8 = *(void **)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = v8;
  v10 = *(_QWORD *)(a2 + 104);
  v9 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v10;
  *(_QWORD *)(a1 + 112) = v9;
  v11 = *(void **)(a2 + 120);
  v33 = *(void **)(a2 + 128);
  *(_QWORD *)(a1 + 120) = v11;
  *(_QWORD *)(a1 + 128) = v33;
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  v12 = *(void **)(a2 + 168);
  v32 = *(void **)(a2 + 176);
  *(_QWORD *)(a1 + 168) = v12;
  *(_QWORD *)(a1 + 176) = v32;
  v36 = *(void **)(a2 + 184);
  *(_QWORD *)(a1 + 184) = v36;
  v13 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v13;
  v15 = *(void **)(a2 + 224);
  v14 = *(void **)(a2 + 232);
  *(_QWORD *)(a1 + 224) = v15;
  *(_QWORD *)(a1 + 232) = v14;
  v34 = *(_QWORD *)(a2 + 240);
  v35 = v14;
  v16 = *(void **)(a2 + 248);
  *(_QWORD *)(a1 + 240) = v34;
  *(_QWORD *)(a1 + 248) = v16;
  v37 = v16;
  v38 = *(void **)(a2 + 256);
  v39 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = v38;
  *(_QWORD *)(a1 + 264) = v39;
  v40 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 272) = v40;
  v17 = v4;
  v18 = v5;
  v19 = v6;
  v20 = v7;
  v21 = v8;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v9);
  v22 = v11;
  v23 = v33;
  v24 = v12;
  v25 = v32;
  v26 = v36;
  v27 = v15;
  v28 = v35;
  swift_bridgeObjectRetain(v34);
  v29 = v37;
  v30 = v38;
  swift_bridgeObjectRetain(v39);
  swift_bridgeObjectRetain(v40);
  return a1;
}

_QWORD *assignWithCopy for TTRIBoardColumnDraggingAnimator.AnimationState(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  void *v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v4 = (void *)a2[4];
  v5 = (void *)a1[4];
  a1[4] = v4;
  v6 = v4;

  v7 = (void *)a2[5];
  v8 = (void *)a1[5];
  a1[5] = v7;
  v9 = v7;

  v10 = (void *)a2[6];
  v11 = (void *)a1[6];
  a1[6] = v10;
  v12 = v10;

  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  v13 = (void *)a2[11];
  v14 = (void *)a1[11];
  a1[11] = v13;
  v15 = v13;

  v16 = (void *)a2[12];
  v17 = (void *)a1[12];
  a1[12] = v16;
  v18 = v16;

  v19 = a2[13];
  v20 = a1[13];
  a1[13] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  v21 = a2[14];
  v22 = a1[14];
  a1[14] = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease(v22);
  v23 = (void *)a2[15];
  v24 = (void *)a1[15];
  a1[15] = v23;
  v25 = v23;

  v26 = (void *)a2[16];
  v27 = (void *)a1[16];
  a1[16] = v26;
  v28 = v26;

  a1[17] = a2[17];
  a1[18] = a2[18];
  a1[19] = a2[19];
  a1[20] = a2[20];
  v29 = (void *)a2[21];
  v30 = (void *)a1[21];
  a1[21] = v29;
  v31 = v29;

  v32 = (void *)a2[22];
  v33 = (void *)a1[22];
  a1[22] = v32;
  v34 = v32;

  v35 = (void *)a2[23];
  v36 = (void *)a1[23];
  a1[23] = v35;
  v37 = v35;

  a1[24] = a2[24];
  a1[25] = a2[25];
  a1[26] = a2[26];
  a1[27] = a2[27];
  v38 = (void *)a2[28];
  v39 = (void *)a1[28];
  a1[28] = v38;
  v40 = v38;

  v41 = (void *)a2[29];
  v42 = (void *)a1[29];
  a1[29] = v41;
  v43 = v41;

  v44 = a2[30];
  v45 = a1[30];
  a1[30] = v44;
  swift_bridgeObjectRetain(v44);
  swift_bridgeObjectRelease(v45);
  v46 = (void *)a2[31];
  v47 = (void *)a1[31];
  a1[31] = v46;
  v48 = v46;

  v49 = (void *)a2[32];
  v50 = (void *)a1[32];
  a1[32] = v49;
  v51 = v49;

  v52 = a2[33];
  v53 = a1[33];
  a1[33] = v52;
  swift_bridgeObjectRetain(v52);
  swift_bridgeObjectRelease(v53);
  v54 = a2[34];
  v55 = a1[34];
  a1[34] = v54;
  swift_bridgeObjectRetain(v54);
  swift_bridgeObjectRelease(v55);
  return a1;
}

void *initializeWithTake for TTRIBoardColumnDraggingAnimator.AnimationState(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x118uLL);
}

uint64_t assignWithTake for TTRIBoardColumnDraggingAnimator.AnimationState(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  __int128 v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;

  v5 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  v6 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  v7 = *(void **)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 104));
  v8 = *(_QWORD *)(a1 + 112);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_bridgeObjectRelease(v8);

  v9 = *(void **)(a1 + 128);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);

  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);

  v10 = *(void **)(a1 + 176);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);

  v11 = *(void **)(a1 + 184);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);

  v12 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v12;

  v13 = *(void **)(a1 + 232);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 240));
  v14 = *(void **)(a1 + 248);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);

  v15 = *(_QWORD *)(a1 + 264);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  swift_bridgeObjectRelease(v15);
  v16 = *(_QWORD *)(a1 + 272);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_bridgeObjectRelease(v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIBoardColumnDraggingAnimator.AnimationState(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 280))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIBoardColumnDraggingAnimator.AnimationState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 280) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 280) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIBoardColumnDraggingAnimator.AnimationState()
{
  return &type metadata for TTRIBoardColumnDraggingAnimator.AnimationState;
}

uint64_t sub_10007BC2C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 32);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

void sub_10007BC44(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD v5[2];

  v2 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_1003932E0(v3);
  v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_10007BCC4(v5);
  *a1 = v3;
}

void sub_10007BCC4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  Swift::Int v19;
  unint64_t v20;
  Swift::Int v21;
  Swift::Int v22;
  uint64_t v23;
  uint64_t v24;
  Swift::Int v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::Int v36;
  char *v37;
  uint64_t v38;
  char *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Swift::Int v45;
  Swift::Int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  Swift::Int v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  Swift::Int v57;
  uint64_t v58;
  uint64_t v59;
  Swift::Int v60;
  uint64_t v61;
  Swift::Int v62;
  char *v63;
  void (*v64)(char *, uint64_t, uint64_t);
  _QWORD *v65;
  char *v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  char *v70;
  void (*v71)(char *, uint64_t, uint64_t);
  Swift::Int v72;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  char *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  char v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  BOOL v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  char *v125;
  _QWORD *v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  unint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  _QWORD *v137;
  Swift::Int v138;
  char *v139;
  char *v140;
  char *v141;
  Swift::Int v142;
  unint64_t v143;
  uint64_t v144;
  void (*v145)(char *, uint64_t, uint64_t);
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  char *v150;
  _QWORD *v151;
  uint64_t v152;
  char *v153;
  Swift::Int v154;
  uint64_t v155;
  uint64_t v156;

  v3 = type metadata accessor for IndexPath(0);
  v156 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v141 = (char *)&v136 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v153 = (char *)&v136 - v6;
  __chkstk_darwin(v7);
  v149 = (char *)&v136 - v8;
  __chkstk_darwin(v9);
  v148 = (char *)&v136 - v10;
  v11 = a1[1];
  v12 = _minimumMergeRunLength(_:)(v11);
  if (v12 >= v11)
  {
    if ((v11 & 0x8000000000000000) == 0)
    {
      if (v11)
        sub_10007C710(0, v11, 1, a1);
      return;
    }
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  if (v11 >= 0)
    v13 = v11;
  else
    v13 = v11 + 1;
  if (v11 < -1)
    goto LABEL_149;
  v14 = v12;
  v152 = v3;
  v144 = v1;
  if (v11 < 2)
  {
    v18 = (char *)_swiftEmptyArrayStorage;
    v143 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v156 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v156 + 80));
    v137 = _swiftEmptyArrayStorage;
    if (v11 != 1)
    {
      v20 = _swiftEmptyArrayStorage[2];
LABEL_106:
      if (v20 < 2)
      {
LABEL_117:
        swift_bridgeObjectRelease(v18);
        v135 = v137;
        v137[2] = 0;
        swift_bridgeObjectRelease(v135);
        return;
      }
      v127 = *a1;
      while (1)
      {
        v128 = v20 - 2;
        if (v20 < 2)
          goto LABEL_136;
        v129 = v144;
        if (!v127)
          goto LABEL_148;
        v130 = v18;
        v131 = *(_QWORD *)&v18[16 * v128 + 32];
        v132 = *(_QWORD *)&v18[16 * v20 + 24];
        sub_10007C964(v127 + *(_QWORD *)(v156 + 72) * v131, v127 + *(_QWORD *)(v156 + 72) * *(_QWORD *)&v18[16 * v20 + 16], v127 + *(_QWORD *)(v156 + 72) * v132, v143);
        if (v129)
        {
          v125 = v18;
          goto LABEL_104;
        }
        if (v132 < v131)
          goto LABEL_137;
        if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
          v130 = sub_100392EE4((uint64_t)v18);
        if (v128 >= *((_QWORD *)v130 + 2))
          goto LABEL_138;
        v133 = &v130[16 * v128 + 32];
        *(_QWORD *)v133 = v131;
        *((_QWORD *)v133 + 1) = v132;
        v134 = *((_QWORD *)v130 + 2);
        if (v20 > v134)
          goto LABEL_139;
        v18 = v130;
        memmove(&v130[16 * v20 + 16], &v130[16 * v20 + 32], 16 * (v134 - v20));
        *((_QWORD *)v130 + 2) = v134 - 1;
        v20 = v134 - 1;
        v144 = 0;
        if (v134 <= 2)
          goto LABEL_117;
      }
    }
  }
  else
  {
    v15 = v13 >> 1;
    v16 = static Array._allocateBufferUninitialized(minimumCapacity:)(v13 >> 1, v3);
    *(_QWORD *)(v16 + 16) = v15;
    v17 = *(unsigned __int8 *)(v156 + 80);
    v137 = (_QWORD *)v16;
    v143 = v16 + ((v17 + 32) & ~v17);
  }
  v19 = 0;
  v18 = (char *)_swiftEmptyArrayStorage;
  v151 = a1;
  v138 = v14;
  while (1)
  {
    v21 = v19;
    v22 = v19 + 1;
    v139 = v18;
    if (v19 + 1 >= v11)
    {
      ++v19;
      v42 = v144;
    }
    else
    {
      v23 = *a1;
      v24 = v156;
      v25 = v19;
      v26 = *(_QWORD *)(v156 + 72);
      v27 = *a1 + v26 * v22;
      v28 = *(void (**)(char *, uint64_t, uint64_t))(v156 + 16);
      v29 = v148;
      v154 = v11;
      v30 = v152;
      v28(v148, v27, v152);
      v31 = v149;
      v28(v149, v23 + v26 * v25, v30);
      LODWORD(v150) = static IndexPath.< infix(_:_:)(v29, v31);
      v32 = *(void (**)(char *, uint64_t))(v24 + 8);
      v32(v31, v30);
      v33 = v30;
      v11 = v154;
      v32(v29, v33);
      v19 = v25 + 2;
      v146 = v23;
      v155 = v26;
      if (v25 + 2 >= v11)
      {
        a1 = v151;
        v42 = v144;
        v41 = v26;
        v21 = v25;
        v14 = v138;
      }
      else
      {
        v142 = v25;
        v147 = v26 * v22;
        v34 = v23;
        v35 = v26 * v19;
        while (1)
        {
          v36 = v19;
          v37 = v148;
          v38 = v152;
          v28(v148, v34 + v35, v152);
          v39 = v149;
          v28(v149, v34 + v147, v38);
          v40 = static IndexPath.< infix(_:_:)(v37, v39);
          v32(v39, v38);
          v32(v37, v38);
          if (((v150 ^ v40) & 1) != 0)
            break;
          v19 = v36 + 1;
          v41 = v155;
          v34 += v155;
          if (v154 == v36 + 1)
          {
            v11 = v154;
            v19 = v154;
            a1 = v151;
            v42 = v144;
            v14 = v138;
            v21 = v142;
            goto LABEL_24;
          }
        }
        a1 = v151;
        v42 = v144;
        v14 = v138;
        v19 = v36;
        v21 = v142;
        v11 = v154;
        v41 = v155;
      }
LABEL_24:
      v18 = v139;
      if ((v150 & 1) != 0)
      {
        if (v19 < v21)
          goto LABEL_142;
        if (v21 < v19)
        {
          v43 = 0;
          v44 = v41 * (v19 - 1);
          v45 = v19 * v41;
          v46 = v21;
          v142 = v21;
          v47 = v21 * v41;
          do
          {
            if (v46 != v19 + v43 - 1)
            {
              v144 = v42;
              v51 = v146;
              if (!v146)
                goto LABEL_147;
              v52 = v146 + v47;
              v53 = v146 + v44;
              v150 = *(char **)(v156 + 32);
              ((void (*)(char *, uint64_t, uint64_t))v150)(v141, v146 + v47, v152);
              if (v47 < v44 || v52 >= v51 + v45)
              {
                v48 = v51 + v47;
                v49 = v51 + v44;
                v50 = v152;
                swift_arrayInitWithTakeFrontToBack(v48, v49, 1, v152);
              }
              else
              {
                v50 = v152;
                if (v47 != v44)
                  swift_arrayInitWithTakeBackToFront(v52, v53);
              }
              ((void (*)(uint64_t, char *, uint64_t))v150)(v53, v141, v50);
              a1 = v151;
              v18 = v139;
              v42 = v144;
              v41 = v155;
            }
            ++v46;
            --v43;
            v44 -= v41;
            v45 -= v41;
            v47 += v41;
          }
          while (v46 < v19 + v43);
          v14 = v138;
          v11 = v154;
          v21 = v142;
        }
      }
    }
    if (v19 < v11)
    {
      if (__OFSUB__(v19, v21))
        goto LABEL_140;
      if (v19 - v21 < v14)
      {
        if (__OFADD__(v21, v14))
          goto LABEL_143;
        if (v21 + v14 >= v11)
          v54 = v11;
        else
          v54 = v21 + v14;
        if (v54 < v21)
          goto LABEL_144;
        if (v19 != v54)
        {
          v142 = v21;
          v55 = *(_QWORD *)(v156 + 72);
          v56 = *(void (**)(char *, uint64_t, uint64_t))(v156 + 16);
          v144 = v42;
          v145 = v56;
          v155 = v55 * (v19 - 1);
          v150 = (char *)v19;
          v146 = v55;
          v57 = v19 * v55;
          v58 = v152;
          v140 = (char *)v54;
          do
          {
            v59 = 0;
            v60 = v142;
            v147 = v57;
            while (1)
            {
              v154 = v60;
              v61 = *a1;
              v62 = v57 + v59 + *a1;
              v63 = v148;
              v64 = v145;
              v145(v148, v62, v58);
              v65 = a1;
              v66 = v149;
              v64(v149, v155 + v59 + v61, v58);
              LOBYTE(v64) = static IndexPath.< infix(_:_:)(v63, v66);
              v67 = *(void (**)(char *, uint64_t))(v156 + 8);
              v67(v66, v58);
              v67(v63, v58);
              if ((v64 & 1) == 0)
                break;
              v68 = *v65;
              if (!*v65)
                goto LABEL_145;
              v57 = v147;
              v69 = v68 + v147 + v59;
              v70 = (char *)(v68 + v155 + v59);
              v71 = *(void (**)(char *, uint64_t, uint64_t))(v156 + 32);
              v58 = v152;
              v71(v153, v69, v152);
              swift_arrayInitWithTakeFrontToBack(v69, v70, 1, v58);
              v71(v70, (uint64_t)v153, v58);
              v59 -= v146;
              v60 = v154 + 1;
              a1 = v151;
              if (v150 == (char *)(v154 + 1))
                goto LABEL_49;
            }
            v58 = v152;
            a1 = v65;
            v57 = v147;
LABEL_49:
            v155 += v146;
            v57 += v146;
            ++v150;
          }
          while (v150 != v140);
          v19 = (Swift::Int)v140;
          v42 = v144;
          v18 = v139;
          v21 = v142;
        }
      }
    }
    if (v19 < v21)
    {
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
      goto LABEL_141;
    }
    v72 = v21;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
    v144 = v42;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v18 = sub_100392A60(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
    v75 = *((_QWORD *)v18 + 2);
    v74 = *((_QWORD *)v18 + 3);
    v20 = v75 + 1;
    if (v75 >= v74 >> 1)
      v18 = sub_100392A60((char *)(v74 > 1), v75 + 1, 1, v18);
    *((_QWORD *)v18 + 2) = v20;
    v76 = v18 + 32;
    v77 = &v18[16 * v75 + 32];
    *(_QWORD *)v77 = v72;
    *((_QWORD *)v77 + 1) = v19;
    if (v75)
      break;
    v20 = 1;
LABEL_14:
    v11 = a1[1];
    v14 = v138;
    if (v19 >= v11)
      goto LABEL_106;
  }
  while (1)
  {
    v78 = v20 - 1;
    if (v20 >= 4)
    {
      v83 = &v76[16 * v20];
      v84 = *((_QWORD *)v83 - 8);
      v85 = *((_QWORD *)v83 - 7);
      v89 = __OFSUB__(v85, v84);
      v86 = v85 - v84;
      if (v89)
        goto LABEL_124;
      v88 = *((_QWORD *)v83 - 6);
      v87 = *((_QWORD *)v83 - 5);
      v89 = __OFSUB__(v87, v88);
      v81 = v87 - v88;
      v82 = v89;
      if (v89)
        goto LABEL_125;
      v90 = v20 - 2;
      v91 = &v76[16 * v20 - 32];
      v93 = *(_QWORD *)v91;
      v92 = *((_QWORD *)v91 + 1);
      v89 = __OFSUB__(v92, v93);
      v94 = v92 - v93;
      if (v89)
        goto LABEL_127;
      v89 = __OFADD__(v81, v94);
      v95 = v81 + v94;
      if (v89)
        goto LABEL_130;
      if (v95 >= v86)
      {
        v113 = &v76[16 * v78];
        v115 = *(_QWORD *)v113;
        v114 = *((_QWORD *)v113 + 1);
        v89 = __OFSUB__(v114, v115);
        v116 = v114 - v115;
        if (v89)
          goto LABEL_134;
        v106 = v81 < v116;
        goto LABEL_93;
      }
    }
    else
    {
      if (v20 != 3)
      {
        v107 = *((_QWORD *)v18 + 4);
        v108 = *((_QWORD *)v18 + 5);
        v89 = __OFSUB__(v108, v107);
        v100 = v108 - v107;
        v101 = v89;
        goto LABEL_87;
      }
      v80 = *((_QWORD *)v18 + 4);
      v79 = *((_QWORD *)v18 + 5);
      v89 = __OFSUB__(v79, v80);
      v81 = v79 - v80;
      v82 = v89;
    }
    if ((v82 & 1) != 0)
      goto LABEL_126;
    v90 = v20 - 2;
    v96 = &v76[16 * v20 - 32];
    v98 = *(_QWORD *)v96;
    v97 = *((_QWORD *)v96 + 1);
    v99 = __OFSUB__(v97, v98);
    v100 = v97 - v98;
    v101 = v99;
    if (v99)
      goto LABEL_129;
    v102 = &v76[16 * v78];
    v104 = *(_QWORD *)v102;
    v103 = *((_QWORD *)v102 + 1);
    v89 = __OFSUB__(v103, v104);
    v105 = v103 - v104;
    if (v89)
      goto LABEL_132;
    if (__OFADD__(v100, v105))
      goto LABEL_133;
    if (v100 + v105 >= v81)
    {
      v106 = v81 < v105;
LABEL_93:
      if (v106)
        v78 = v90;
      goto LABEL_95;
    }
LABEL_87:
    if ((v101 & 1) != 0)
      goto LABEL_128;
    v109 = &v76[16 * v78];
    v111 = *(_QWORD *)v109;
    v110 = *((_QWORD *)v109 + 1);
    v89 = __OFSUB__(v110, v111);
    v112 = v110 - v111;
    if (v89)
      goto LABEL_131;
    if (v112 < v100)
      goto LABEL_14;
LABEL_95:
    v117 = v78 - 1;
    if (v78 - 1 >= v20)
    {
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
      goto LABEL_135;
    }
    v118 = *a1;
    if (!*a1)
      goto LABEL_146;
    v119 = &v76[16 * v117];
    v120 = *(_QWORD *)v119;
    v121 = &v76[16 * v78];
    v122 = *((_QWORD *)v121 + 1);
    v123 = v144;
    sub_10007C964(v118 + *(_QWORD *)(v156 + 72) * *(_QWORD *)v119, v118 + *(_QWORD *)(v156 + 72) * *(_QWORD *)v121, v118 + *(_QWORD *)(v156 + 72) * v122, v143);
    v144 = v123;
    if (v123)
      break;
    if (v122 < v120)
      goto LABEL_121;
    if (v78 > *((_QWORD *)v18 + 2))
      goto LABEL_122;
    *(_QWORD *)v119 = v120;
    *(_QWORD *)&v76[16 * v117 + 8] = v122;
    v124 = *((_QWORD *)v18 + 2);
    if (v78 >= v124)
      goto LABEL_123;
    v20 = v124 - 1;
    memmove(&v76[16 * v78], v121 + 16, 16 * (v124 - 1 - v78));
    *((_QWORD *)v18 + 2) = v124 - 1;
    a1 = v151;
    if (v124 <= 2)
      goto LABEL_14;
  }
  v125 = v18;
LABEL_104:
  swift_bridgeObjectRelease(v125);
  v126 = v137;
  v137[2] = 0;
  swift_bridgeObjectRelease(v126);
}

uint64_t sub_10007C710(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  _QWORD *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;

  v29 = a1;
  v7 = type metadata accessor for IndexPath(0);
  v37 = *(_QWORD **)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v36 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v33 = (char *)&v27 - v11;
  result = __chkstk_darwin(v10);
  v32 = (char *)&v27 - v13;
  v35 = a3;
  v28 = a2;
  if (a3 != a2)
  {
    v14 = v37[9];
    v30 = (void (*)(char *, uint64_t, uint64_t))v37[2];
    v31 = a4;
    v39 = v14 * (v35 - 1);
    v34 = v14;
    v38 = v14 * v35;
LABEL_5:
    v15 = 0;
    v16 = v29;
    while (1)
    {
      v17 = *a4;
      v18 = v32;
      v19 = v30;
      v30(v32, v38 + v15 + *a4, v7);
      v20 = v33;
      v19(v33, v39 + v15 + v17, v7);
      LOBYTE(v17) = static IndexPath.< infix(_:_:)(v18, v20);
      v21 = (void (*)(char *, uint64_t))v37[1];
      v22 = v20;
      a4 = v31;
      v21(v22, v7);
      result = ((uint64_t (*)(char *, uint64_t))v21)(v18, v7);
      if ((v17 & 1) == 0)
      {
LABEL_4:
        v39 += v34;
        v38 += v34;
        if (++v35 == v28)
          return result;
        goto LABEL_5;
      }
      v23 = *a4;
      if (!*a4)
        break;
      v24 = v23 + v38 + v15;
      v25 = v23 + v39 + v15;
      v26 = (void (*)(char *, uint64_t, uint64_t))v37[4];
      v26(v36, v24, v7);
      swift_arrayInitWithTakeFrontToBack(v24, v25, 1, v7);
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v26)(v25, v36, v7);
      v15 -= v34;
      if (v35 == ++v16)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10007C964(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v20)(char *, unint64_t, uint64_t);
  unint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, unint64_t, uint64_t);
  unint64_t v35;
  char *v36;
  char v37;
  void (*v38)(char *, uint64_t);
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t result;
  uint64_t v45;
  void (*v46)(char *, unint64_t, uint64_t);
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;

  v8 = type metadata accessor for IndexPath(0);
  __chkstk_darwin(v8);
  v51 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v50 = (char *)&v45 - v11;
  v52 = v12;
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_62;
  v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_63;
  v15 = (uint64_t)(a2 - a1) / v13;
  v55 = a1;
  v54 = a4;
  v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2, v16, v8);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4, a2);
      }
      v30 = a4 + v18;
      v53 = a4 + v18;
      v55 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        v32 = -v13;
        v46 = *(void (**)(char *, unint64_t, uint64_t))(v52 + 16);
        v47 = a1;
        v48 = a4;
        v33 = v50;
        do
        {
          v49 = a3 + v32;
          v34 = v46;
          v46(v33, v30 + v32, v8);
          v35 = a2 + v32;
          v36 = v51;
          v34(v51, a2 + v32, v8);
          v37 = static IndexPath.< infix(_:_:)(v33, v36);
          v38 = *(void (**)(char *, uint64_t))(v52 + 8);
          v38(v36, v8);
          v38(v33, v8);
          if ((v37 & 1) != 0)
          {
            v39 = v49;
            if (a3 < a2 || v49 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v49, a2 + v32, 1, v8);
              v41 = v47;
              v40 = v48;
            }
            else
            {
              v41 = v47;
              v40 = v48;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront(v49, a2 + v32);
            }
            v55 += v32;
          }
          else
          {
            v42 = v53;
            v43 = v53 + v32;
            v53 += v32;
            v39 = v49;
            if (a3 < v42 || v49 >= v42)
            {
              swift_arrayInitWithTakeFrontToBack(v49, v43, 1, v8);
              v35 = a2;
              v41 = v47;
              v40 = v48;
            }
            else
            {
              v41 = v47;
              v40 = v48;
              if (a3 != v42)
                swift_arrayInitWithTakeBackToFront(v49, v43);
              v35 = a2;
            }
          }
          v30 = v53;
          if (v53 <= v40)
            break;
          a2 = v35;
          a3 = v39;
        }
        while (v35 > v41);
      }
      goto LABEL_60;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1, v15, v8);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4, a1);
    }
    v49 = a4 + v17;
    v53 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      v20 = *(void (**)(char *, unint64_t, uint64_t))(v52 + 16);
      do
      {
        v21 = a3;
        v22 = a4;
        v23 = v50;
        v20(v50, a2, v8);
        v24 = v51;
        v20(v51, v22, v8);
        v25 = static IndexPath.< infix(_:_:)(v23, v24);
        v26 = *(void (**)(char *, uint64_t))(v52 + 8);
        v26(v24, v8);
        v26(v23, v8);
        v27 = v55;
        if ((v25 & 1) != 0)
        {
          v28 = a2 + v13;
          if (v55 < a2 || v55 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack(v55, a2, 1, v8);
          }
          else if (v55 == a2)
          {
            v27 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront(v55, a2);
          }
        }
        else
        {
          v29 = v54 + v13;
          if (v55 < v54 || v55 >= v29)
          {
            swift_arrayInitWithTakeFrontToBack(v55, v54, 1, v8);
          }
          else if (v55 != v54)
          {
            swift_arrayInitWithTakeBackToFront(v55, v54);
          }
          v54 = v29;
          v28 = a2;
        }
        v55 = v27 + v13;
        a4 = v54;
        if (v54 >= v49)
          break;
        a3 = v21;
        a2 = v28;
      }
      while (v28 < v21);
    }
LABEL_60:
    sub_100392B58(&v55, &v54, (uint64_t *)&v53);
    return 1;
  }
LABEL_64:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

_QWORD *sub_10007CE38(uint64_t a1, double *a2, void *a3)
{
  uint64_t v4;
  _QWORD *result;
  double v8;
  void **v9;
  void *v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  void *v16;
  id v17;
  id v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v4)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v4);
    v8 = *a2;
    v9 = (void **)(a1 + 72);
    v10 = (void *)*((_QWORD *)a2 + 4);
    do
    {
      v11 = *(v9 - 5);
      v12 = *((double *)v9 - 4);
      v13 = *((double *)v9 - 3);
      v14 = *((double *)v9 - 2);
      v15 = *((double *)v9 - 1);
      v16 = *v9;
      v9 += 7;
      v17 = v11;
      v18 = v16;
      objc_msgSend(v10, "convertRect:fromCoordinateSpace:", v18, v12, v13, v14, v15);
      objc_msgSend(v17, "setFrame:", sub_10007ED0C(v19, v20, v8));
      objc_msgSend(a3, "addSubview:", v17);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v21);
      v22 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v22);
      v23 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v17);
      specialized ContiguousArray._endMutation()(v23);
      --v4;
    }
    while (v4);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_10007CFB4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  _QWORD *v7;
  uint64_t i;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  __int128 v16;
  __int128 v17;
  id v18;
  id v19;
  id v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  __int128 v42;
  __int128 v43;
  void *v44;
  _OWORD v45[8];
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;

  v5 = v4;
  v48 = a4;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    v47 = _swiftEmptyArrayStorage;
    sub_1003D8394(0, v6, 0);
    v7 = _swiftEmptyArrayStorage;
    for (i = a1 + 72; ; i += 112)
    {
      v10 = *(void **)(i - 8);
      v11 = *(void **)i;
      v12 = *(_QWORD *)(i + 8);
      v13 = *(_QWORD *)(i + 16);
      v14 = *(void **)(i + 24);
      v15 = *(void **)(i + 64);
      v16 = *(_OWORD *)(i - 24);
      v36[0] = *(_OWORD *)(i - 40);
      v36[1] = v16;
      v37 = v10;
      v38 = v11;
      v39 = v12;
      v40 = v13;
      v41 = v14;
      v17 = *(_OWORD *)(i + 48);
      v42 = *(_OWORD *)(i + 32);
      v43 = v17;
      v44 = v15;
      v18 = v10;
      v19 = v11;
      v20 = v14;
      v21 = v15;
      sub_10007B098(a2, (double *)v36, (double *)v45);
      if (v5)
        break;
      v5 = 0;

      v29 = v45[2];
      v30 = v45[3];
      v35 = v46;
      v33 = v45[6];
      v34 = v45[7];
      v31 = v45[4];
      v32 = v45[5];
      v27 = v45[0];
      v28 = v45[1];
      v23 = v7[2];
      v22 = v7[3];
      v47 = v7;
      if (v23 >= v22 >> 1)
      {
        sub_1003D8394(v22 > 1, v23 + 1, 1);
        v7 = v47;
      }
      v7[2] = v23 + 1;
      v24 = &v7[17 * v23];
      *((_OWORD *)v24 + 2) = v27;
      *((_OWORD *)v24 + 5) = v30;
      *((_OWORD *)v24 + 6) = v31;
      *((_OWORD *)v24 + 3) = v28;
      *((_OWORD *)v24 + 4) = v29;
      v24[20] = v35;
      *((_OWORD *)v24 + 8) = v33;
      *((_OWORD *)v24 + 9) = v34;
      *((_OWORD *)v24 + 7) = v32;
      if (!--v6)
        return v7;
    }
    swift_release();

  }
  return v7;
}

_QWORD *sub_10007D18C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, __n128);
  __n128 v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t, __n128);
  void *v23;
  Class isa;
  id v25;
  uint64_t v26;
  uint64_t ObjectType;
  void *v28;
  id v29;
  id v30;
  id v31;
  double v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char *v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  double *v63;
  id v64;
  id v65;
  void (*v66)(char *, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  id v78;
  id v79;
  uint64_t (*v80)(uint64_t, uint64_t, uint64_t);
  unint64_t v81;
  uint64_t v82;
  id v83;
  _QWORD *v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t, uint64_t, __n128);
  char *v87;
  char *v88;

  v5 = sub_10002A750(&qword_100641268);
  __chkstk_darwin(v5);
  v74 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v69 - v8;
  __chkstk_darwin(v10);
  v82 = (uint64_t)&v69 - v11;
  v12 = type metadata accessor for IndexPath(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v88 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v15);
  v87 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v72 = v9;
    v71 = v2;
    v18 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v19 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16);
    v85 = *(_QWORD *)(v13 + 72);
    v86 = v19;
    v70 = a1;
    v20 = swift_bridgeObjectRetain(a1);
    v84 = _swiftEmptyArrayStorage;
    v21 = v87;
    v73 = a2;
    v76 = v13;
    while (1)
    {
      v86(v21, v18, v12, v20);
      v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v22)(v21, 0, 1, v12);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v21, 1, v12) == 1)
      {
        a1 = v70;
        goto LABEL_30;
      }
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v88, v21, v12);
      v23 = *(void **)(a2 + 24);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v25 = objc_msgSend(v23, "cellForItemAtIndexPath:", isa);

      if (v25)
      {
        ObjectType = swift_getObjectType(v25, v26);
        if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIBoardColumnDraggingAnimationCellSourceProviding))
        {
          v28 = v25;
        }
        else
        {
          v28 = 0;
        }
        if (v28)
        {
          v29 = v25;
          v30 = objc_msgSend(v28, "contentView");
          v31 = objc_msgSend(v30, "snapshotViewAfterScreenUpdates:", 0);

          v83 = v31;
          if (v31)
          {
            v79 = v29;
            v33 = v82;
            UICollectionViewCell.backgroundConfiguration.getter(v32);
            objc_msgSend(v28, "bounds");
            v81 = v34;
            v36 = v35;
            v38 = v37;
            v40 = v39;
            v41 = (uint64_t)v72;
            sub_10007EE04(v33, (uint64_t)v72);
            v42 = type metadata accessor for UIBackgroundConfiguration(0);
            v43 = *(_QWORD *)(v42 - 8);
            v80 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
            v44 = v80(v41, 1, v42);
            v77 = v28;
            v75 = v43;
            if (v44 == 1)
            {
              sub_10007EE4C(v41);
              v45 = (uint64_t)v74;
              goto LABEL_18;
            }
            v46 = UIBackgroundConfiguration.backgroundColor.getter();
            (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
            v45 = (uint64_t)v74;
            if (v46)
              v78 = (id)v46;
            else
LABEL_18:
              v78 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
            v47 = v82;
            v48 = v79;
            v49 = v77;
            sub_10007EE04(v82, v45);
            if (v80(v45, 1, v42) == 1)
            {
              sub_10007EE4C(v45);
              v50 = 0.0;
            }
            else
            {
              v50 = UIBackgroundConfiguration.cornerRadius.getter();
              (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v45, v42);
            }
            v51 = *(_QWORD *)&v49[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_roundedCorners];
            objc_msgSend(v49, "bounds");
            v53 = v52;
            v55 = v54;
            v57 = v56;
            v59 = v58;
            sub_10007EE4C(v47);

            v13 = v76;
            (*(void (**)(char *, uint64_t))(v76 + 8))(v88, v12);
            if ((swift_isUniquelyReferenced_nonNull_native(v84) & 1) == 0)
              v84 = sub_100456694(0, v84[2] + 1, 1, v84);
            v61 = v84[2];
            v60 = v84[3];
            if (v61 >= v60 >> 1)
              v84 = sub_100456694((_QWORD *)(v60 > 1), v61 + 1, 1, v84);
            v62 = v84;
            v84[2] = v61 + 1;
            v63 = (double *)&v62[14 * v61];
            v20.n128_u64[0] = v81;
            *((_QWORD *)v63 + 4) = v81;
            *((_QWORD *)v63 + 5) = v36;
            *((_QWORD *)v63 + 6) = v38;
            *((_QWORD *)v63 + 7) = v40;
            v64 = v78;
            *((_QWORD *)v63 + 8) = v49;
            *((_QWORD *)v63 + 9) = v64;
            v63[10] = v50;
            v65 = v83;
            *((_QWORD *)v63 + 11) = v51;
            *((_QWORD *)v63 + 12) = v65;
            *((_QWORD *)v63 + 13) = v53;
            *((_QWORD *)v63 + 14) = v55;
            *((_QWORD *)v63 + 15) = v57;
            *((_QWORD *)v63 + 16) = v59;
            *((_QWORD *)v63 + 17) = v49;
            a2 = v73;
            goto LABEL_5;
          }

          v13 = v76;
        }
        else
        {

        }
      }
      (*(void (**)(char *, uint64_t))(v13 + 8))(v88, v12);
LABEL_5:
      v21 = v87;
      v18 += v85;
      if (!--v17)
      {
        a1 = v70;
        v22(v87, 1, 1, v12, v20);
        goto LABEL_30;
      }
    }
  }
  v66 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56);
  v67 = swift_bridgeObjectRetain(a1);
  v84 = _swiftEmptyArrayStorage;
  v66(v87, 1, 1, v12, v67);
LABEL_30:
  swift_bridgeObjectRelease(a1);
  return v84;
}

uint64_t sub_10007D72C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;

  v2 = *(void **)(a1 + 40);
  v3 = *(void **)(a1 + 48);
  v5 = *(void **)(a1 + 88);
  v4 = *(void **)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  v7 = *(_QWORD *)(a1 + 112);
  v8 = *(void **)(a1 + 120);
  v9 = *(void **)(a1 + 128);
  v10 = *(void **)(a1 + 168);
  v26 = *(void **)(a1 + 176);
  v27 = *(void **)(a1 + 184);
  v28 = *(void **)(a1 + 224);
  v29 = *(void **)(a1 + 232);
  v30 = *(_QWORD *)(a1 + 240);
  v31 = *(void **)(a1 + 248);
  v32 = *(void **)(a1 + 256);
  v33 = *(_QWORD *)(a1 + 264);
  v34 = *(_QWORD *)(a1 + 272);
  v11 = *(id *)(a1 + 32);
  v12 = v2;
  v13 = v3;
  v14 = v5;
  v15 = v4;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  v16 = v8;
  v17 = v9;
  v18 = v10;
  v19 = v26;
  v20 = v27;
  v21 = v28;
  v22 = v29;
  swift_bridgeObjectRetain(v30);
  v23 = v31;
  v24 = v32;
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRetain(v34);
  return a1;
}

uint64_t sub_10007D838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, uint64_t a14, uint64_t a15, void *a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,void *a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,void *a30,uint64_t a31,void *a32,void *a33,uint64_t a34,uint64_t a35)
{
  uint64_t result;

  if (a5)
  {

    swift_bridgeObjectRelease(a14);
    swift_bridgeObjectRelease(a15);

    swift_bridgeObjectRelease(a31);
    swift_bridgeObjectRelease(a34);
    return swift_bridgeObjectRelease(a35);
  }
  return result;
}

uint64_t sub_10007D948(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a1 + 240);
  v5 = *(_OWORD *)(a1 + 256);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v4,
    *((_QWORD *)&v4 + 1),
    v5,
    *((_QWORD *)&v5 + 1),
    *(_QWORD *)(a1 + 272));
  return a1;
}

uint64_t sub_10007D9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, uint64_t a14, uint64_t a15, void *a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,void *a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,void *a30,uint64_t a31,void *a32,void *a33,uint64_t a34,uint64_t a35)
{
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t result;

  if (a5)
  {
    v37 = a5;
    v38 = a6;
    v39 = a7;
    v40 = a12;
    v41 = a13;
    swift_bridgeObjectRetain(a14);
    swift_bridgeObjectRetain(a15);
    v42 = a16;
    v43 = a17;
    v44 = a22;
    v45 = a23;
    v46 = a24;
    v47 = a29;
    v48 = a30;
    swift_bridgeObjectRetain(a31);
    v49 = a32;
    v50 = a33;
    swift_bridgeObjectRetain(a34);
    return swift_bridgeObjectRetain(a35);
  }
  return result;
}

_QWORD *sub_10007DADC(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  v19 = (void *)a1[5];
  v20 = (void *)a1[4];
  v17 = (void *)a1[11];
  v18 = (void *)a1[6];
  v15 = a1[13];
  v16 = (void *)a1[12];
  v13 = (void *)a1[15];
  v14 = a1[14];
  v12 = (void *)a1[16];
  v2 = (void *)a1[21];
  v3 = (void *)a1[22];
  v4 = (void *)a1[23];
  v5 = (void *)a1[28];
  v6 = (void *)a1[29];
  v7 = a1[30];
  v8 = (void *)a1[31];
  v10 = (void *)a1[32];
  v9 = a1[33];
  swift_bridgeObjectRelease(a1[34]);
  swift_bridgeObjectRelease(v9);

  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v15);

  return a1;
}

_QWORD *sub_10007DBF0()
{
  uint64_t v0;

  sub_10007DC20(1u, v0 + 24);
  return sub_10007E2E8(1, v0 + 24);
}

_QWORD *sub_10007DC20(unsigned __int8 a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  _BYTE *v14;
  double top;
  double left;
  id *v17;
  _BYTE *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t *v23;
  id v24;
  double v25;
  int v26;
  id v27;
  double v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  double v36;
  unint64_t v37;
  uint64_t v39;
  void *v40;
  void *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  unint64_t v50;
  unint64_t v51;
  _OWORD v52[2];
  _OWORD v53[4];
  __int128 v54;
  _QWORD v55[2];

  v3 = *(_OWORD *)(a2 + 248);
  v4 = *(_OWORD *)(a2 + 216);
  v48 = *(_OWORD *)(a2 + 232);
  v49 = v3;
  v50 = *(_QWORD *)(a2 + 264);
  v5 = *(_OWORD *)(a2 + 152);
  v6 = *(_OWORD *)(a2 + 184);
  v44 = *(_OWORD *)(a2 + 168);
  v45 = v6;
  v46 = *(_OWORD *)(a2 + 200);
  v47 = v4;
  v42 = *(_OWORD *)(a2 + 136);
  v43 = v5;
  v7 = *(_OWORD *)(a2 + 184);
  v8 = *(_OWORD *)(a2 + 216);
  v53[2] = *(_OWORD *)(a2 + 200);
  v53[3] = v8;
  v54 = *(_OWORD *)(a2 + 232);
  v9 = *(_OWORD *)(a2 + 152);
  v52[0] = *(_OWORD *)(a2 + 136);
  v52[1] = v9;
  v53[0] = *(_OWORD *)(a2 + 168);
  v53[1] = v7;
  v10 = (_BYTE *)*((_QWORD *)&v49 + 1);
  v11 = v49;
  if ((a1 & 1) == 0)
  {
    top = UIEdgeInsetsZero.top;
    left = UIEdgeInsetsZero.left;
    sub_10007EB34((uint64_t)&v42);
    sub_10007EBB4((uint64_t)v52);
    v17 = (id *)(id)v11;
    v18 = v10;
    goto LABEL_5;
  }
  sub_10007EB34((uint64_t)&v42);
  sub_10007EBB4((uint64_t)v52);
  v12 = qword_10063D300;
  v13 = (id *)(id)v11;
  v14 = v10;
  if (v12 != -1)
    goto LABEL_41;
  while (1)
  {
    left = *((double *)&xmmword_100641158 + 1);
    top = *(double *)&xmmword_100641158;
LABEL_5:
    objc_msgSend((id)v11, "bounds");
    objc_msgSend(v10, "setBounds:", sub_100038048(v19, v20, v21, v22, top, left));
    if ((a1 & 1) != 0)
    {
      if (qword_10063D308 != -1)
        swift_once(&qword_10063D308, sub_10007AE68);
      v23 = &qword_100641178;
    }
    else
    {
      v23 = (uint64_t *)v53 + 1;
    }
    objc_msgSend(v10, "setBackgroundColor:", *v23, v11, v41, v42, v43, v44, v45, v46, v47, v48);
    v24 = objc_msgSend(v10, "layer");
    if ((a1 & 1) != 0)
    {
      if (qword_10063D310 != -1)
        swift_once(&qword_10063D310, sub_10007AEA0);
      v25 = *(double *)&qword_100641180;
      v26 = 1042536202;
    }
    else
    {
      v25 = 0.0;
      v26 = 0;
    }
    objc_msgSend(v24, "setCornerRadius:", v25);

    v27 = objc_msgSend(v10, "layer");
    LODWORD(v28) = v26;
    objc_msgSend(v27, "setShadowOpacity:", v28);

    v11 = v50;
    v51 = v50;
    v55[0] = *((_QWORD *)&v54 + 1);
    v41 = v10;
    if (v50 >> 62)
    {
LABEL_34:
      if (v11 >= 0)
        v39 = v11 & 0xFFFFFFFFFFFFFF8;
      else
        v39 = v11;
      sub_10002DF4C(&v51);
      sub_10002DF4C(v55);
      v29 = _CocoaArrayWrapper.endIndex.getter(v39);
      if (!v29)
        goto LABEL_32;
    }
    else
    {
      v29 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
      sub_10002DF4C(&v51);
      sub_10002DF4C(v55);
      if (!v29)
        goto LABEL_32;
    }
    if ((v11 & 0xC000000000000001) != 0)
      break;
    if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      v30 = *(id *)(v11 + 32);
      goto LABEL_20;
    }
    __break(1u);
LABEL_41:
    swift_once(&qword_10063D300, sub_10007AE50);
  }
  v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v11);
LABEL_20:
  v31 = v30;
  v32 = *(_QWORD *)(v55[0] + 16);
  if (v32)
  {
    v33 = 0;
    v10 = (_BYTE *)(v55[0] + 80);
    v34 = v29 - 1;
    while (1)
    {
      v36 = (a1 & *v10 & 1) != 0 ? 0.0 : 1.0;
      objc_msgSend(v31, "setAlpha:", v36);

      if (v34 == v33)
        break;
      v37 = v33 + 1;
      if ((v11 & 0xC000000000000001) != 0)
      {
        v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v37, v11);
      }
      else
      {
        if (v37 >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_34;
        }
        v35 = *(id *)(v11 + 8 * v33 + 40);
      }
      v31 = v35;
      v10 += 56;
      if (v32 == ++v33)
        goto LABEL_31;
    }
  }
  else
  {
LABEL_31:

  }
LABEL_32:
  sub_1000522B0(&v51);
  sub_1000522B0(v55);

  sub_10007EC10(v52);
  return sub_10007EC68(&v42);
}

unint64_t sub_10007DFEC@<X0>(unint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, double *a4@<X8>, double a5@<D0>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  double v37;
  double v38;
  long double v39;
  long double v40;
  double v41;
  __n128 v42;
  __n128 v43;
  __n128 v44;
  __n128 v45;
  uint64_t v46;
  double v47;
  double v48;
  CGFloat v49;
  CGFloat v50;
  CGFloat v51;
  CGFloat v52;
  double v53;
  double v54;
  CGFloat tx;
  CGFloat a;
  CGFloat ty;
  CGFloat b;
  CGFloat c;
  CGFloat d;
  double v61;
  double v62;
  double v63;
  CGAffineTransform v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  CGRect v74;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  v5 = result;
  v7 = *(_QWORD *)(a3 + 272);
  if (*(_QWORD *)(v7 + 16) <= result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v10 = v7 + 136 * result;
  v65 = *(_OWORD *)(v10 + 32);
  v11 = *(_OWORD *)(v10 + 48);
  v12 = *(_OWORD *)(v10 + 64);
  v13 = *(_OWORD *)(v10 + 96);
  v68 = *(_OWORD *)(v10 + 80);
  v69 = v13;
  v66 = v11;
  v67 = v12;
  v14 = *(_OWORD *)(v10 + 112);
  v15 = *(_OWORD *)(v10 + 128);
  v16 = *(_OWORD *)(v10 + 144);
  v73 = *(_QWORD *)(v10 + 160);
  v71 = v15;
  v72 = v16;
  v70 = v14;
  v17 = v65;
  v18 = v66;
  v19 = v67;
  v20 = (void *)v13;
  v21 = (void *)*((_QWORD *)&v15 + 1);
  v22 = *(void **)(a3 + 128);
  sub_10007EA28((uint64_t)&v65);
  v23 = (id)v19;
  v24 = *((id *)&v19 + 1);
  v25 = v20;
  v26 = v21;
  v27 = v22;
  v28 = objc_msgSend(v27, "convertRect:fromCoordinateSpace:", v23, v17, v18);
  v33 = v29.n128_f64[0];
  v34 = v30.n128_f64[0];
  v35 = v31.n128_f64[0];
  v36 = v32.n128_f64[0];
  if ((a2 & 1) != 0)
  {
    v61 = a5;
    v37 = pow(0.85, (double)v5);
    CGAffineTransformMakeScale(&v64, v37, v37);
    b = v64.b;
    c = v64.c;
    d = v64.d;
    v38 = 0.0;
    v39 = 0.0;
    tx = v64.tx;
    a = v64.a;
    ty = v64.ty;
    if ((unint64_t)v5 <= 1)
    {
      v39 = pow(0.9, (double)v5);
      v38 = pow(0.714285714, (double)v5) * 0.7 * 0.16;
    }
    v62 = v38;
    v63 = v39;
    v40 = (1.0 - pow(0.533333333, (double)v5 + 1.0)) * 15.0 / 0.466666667;
    v74.origin.x = v33;
    v74.origin.y = v34;
    v74.size.width = v35;
    v74.size.height = v36;
    v41 = v40 + v61 + v37 * CGRectGetHeight(v74) * -0.5;
    v42.n128_f64[0] = v33;
    v43.n128_f64[0] = v34;
    v44.n128_f64[0] = v35;
    v45.n128_f64[0] = v36;
    v47 = CGRect.center.getter(v46, v42, v43, v44, v45);

    v49 = c;
    v48 = d;
    v51 = ty;
    v50 = b;
    v52 = tx;
    v53 = a;
  }
  else
  {
    v47 = CGRect.center.getter(v28, v29, v30, v31, v32);
    v41 = v54;

    v62 = 0.0;
    v63 = 1.0;
    v51 = 0.0;
    v52 = 0.0;
    v48 = 1.0;
    v49 = 0.0;
    v50 = 0.0;
    v53 = 1.0;
  }
  result = sub_10007EAD0((uint64_t)&v65);
  *a4 = v47;
  a4[1] = v41;
  a4[2] = v53;
  a4[3] = v50;
  a4[4] = v49;
  a4[5] = v48;
  a4[6] = v52;
  a4[7] = v51;
  a4[8] = v63;
  a4[9] = v62;
  return result;
}

_QWORD *sub_10007E2E8(char a1, uint64_t a2)
{
  double MaxY;
  _QWORD *result;
  uint64_t v5;
  double v6;
  _QWORD *v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  void *v15;
  void *v16;
  void *v17;
  __int128 v18;
  uint64_t v19;
  void *v20;
  double v21;
  void *v22;
  id v23;
  _BYTE *v24;
  id v25;
  id v26;
  double *v27;
  uint64_t v28;
  double v29;
  char v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v39;
  double v40;
  double v41;
  id v42;
  char v43;
  uint64_t v44;
  CGFloat *v45;
  id v46;
  char *v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  char v54;
  id v55;
  double v56;
  double v57;
  double v58;
  double v59;
  id v60;
  double v61;
  double v62;
  unint64_t v63;
  double v64;
  double v65;
  double v66;
  double v67;
  BOOL v68;
  uint64_t v69;
  double v70;
  uint64_t v71;
  double MinY;
  double v73;
  double MinX;
  double MidX;
  float64x2_t v76;
  double v77;
  float64x2_t v78;
  double v79;
  float64x2_t v80;
  double MaxX;
  float64x2_t v82;
  uint64_t v83;
  uint64_t v85;
  _QWORD *v86;
  id v87;
  id v88;
  id v89;
  id v90;
  unint64_t v91;
  uint64_t v92;
  _OWORD v93[3];
  _OWORD v94[2];
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  void *v101;
  double v102[2];
  __int128 v103;
  __int128 v104;
  __int128 v105;
  double v106;
  uint64_t v107;
  _QWORD *v108;
  CGRect v109;
  CGRect v110;
  CGRect v111;
  CGRect v112;
  CGRect v113;
  CGRect v114;
  CGRect v115;
  CGRect v116;
  CGRect v117;
  CGRect v118;
  CGRect v119;

  objc_msgSend(*(id *)(a2 + 128), "convertRect:fromCoordinateSpace:", *(_QWORD *)(a2 + 168), *(double *)(a2 + 136), *(double *)(a2 + 144), *(double *)(a2 + 152), *(double *)(a2 + 160));
  MaxY = CGRectGetMaxY(v109);
  v85 = a2;
  result = *(_QWORD **)(a2 + 272);
  v108 = result;
  v5 = result[2];
  if (v5)
  {
    v6 = MaxY;
    v7 = result + 4;
    swift_bridgeObjectRetain(result);
    v8 = 0;
    v83 = v5 - 1;
    v70 = v6;
    while (1)
    {
      v94[0] = *(_OWORD *)v7;
      v9 = *((_OWORD *)v7 + 1);
      v10 = *((_OWORD *)v7 + 2);
      v11 = *((_OWORD *)v7 + 4);
      v96 = *((_OWORD *)v7 + 3);
      v97 = v11;
      v94[1] = v9;
      v95 = v10;
      v12 = *((_OWORD *)v7 + 5);
      v13 = *((_OWORD *)v7 + 6);
      v14 = *((_OWORD *)v7 + 7);
      v86 = v7;
      v101 = (void *)v7[16];
      v99 = v13;
      v100 = v14;
      v98 = v12;
      v15 = v101;
      v16 = (void *)*((_QWORD *)&v14 + 1);
      v17 = (void *)v14;
      v18 = v95;
      v19 = *((_QWORD *)&v96 + 1);
      v21 = *(double *)&v96;
      v20 = (void *)v11;
      v22 = (void *)*((_QWORD *)&v13 + 1);
      sub_10007EA28((uint64_t)v94);
      v91 = v8;
      sub_10007DFEC(v8, a1 & 1, v85, v102, v6);
      v90 = (id)v18;
      v89 = *((id *)&v18 + 1);
      v88 = v20;
      v87 = v22;
      v23 = v17;
      v24 = v16;
      v25 = v15;
      v93[0] = v103;
      v93[1] = v104;
      v93[2] = v105;
      objc_msgSend(v23, "setTransform:", v93);
      v26 = objc_msgSend(v23, "setCenter:", v102[0], v102[1]);
      if ((a1 & 1) != 0)
        v19 = *(_QWORD *)TTRRectCorners.allCorners.unsafeMutableAddressor(v26);
      v27 = (double *)&v24[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_shape];
      v28 = *(_QWORD *)&v24[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_shape];
      v29 = *(double *)&v24[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_shape + 8];
      v30 = v24[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_shape + 16];
      *(_QWORD *)v27 = v19;
      v27[1] = v21;
      *((_BYTE *)v27 + 16) = 0;
      if ((v30 & 1) != 0 || v19 != v28 || v21 != v29)
      {
        v31 = objc_msgSend(v24, "layer", v29, *(_QWORD *)&v70);
        v32 = objc_opt_self(CAShapeLayer);
        v33 = swift_dynamicCastObjCClass(v31, v32);
        if (v33)
        {
          v34 = (void *)v33;
          objc_msgSend(v24, "bounds");
          x = v110.origin.x;
          y = v110.origin.y;
          width = v110.size.width;
          height = v110.size.height;
          MidX = CGRectGetMidX(v110);
          v111.origin.x = x;
          v111.origin.y = y;
          v111.size.width = width;
          v111.size.height = height;
          MinY = CGRectGetMinY(v111);
          v112.origin.x = x;
          v112.origin.y = y;
          v112.size.width = width;
          v112.size.height = height;
          MaxX = CGRectGetMaxX(v112);
          v113.origin.x = x;
          v113.origin.y = y;
          v113.size.width = width;
          v113.size.height = height;
          v77 = CGRectGetMinY(v113);
          v114.origin.x = x;
          v114.origin.y = y;
          v114.size.width = width;
          v114.size.height = height;
          v79 = CGRectGetMaxX(v114);
          v115.origin.x = x;
          v115.origin.y = y;
          v115.size.width = width;
          v115.size.height = height;
          v73 = CGRectGetMaxY(v115);
          v116.origin.x = x;
          v116.origin.y = y;
          v116.size.width = width;
          v116.size.height = height;
          MinX = CGRectGetMinX(v116);
          v117.origin.x = x;
          v117.origin.y = y;
          v117.size.width = width;
          v117.size.height = height;
          v39 = CGRectGetMaxY(v117);
          v118.origin.x = x;
          v118.origin.y = y;
          v118.size.width = width;
          v118.size.height = height;
          v40 = CGRectGetMinX(v118);
          v119.origin.x = x;
          v119.origin.y = y;
          v119.size.width = width;
          v119.size.height = height;
          v41 = CGRectGetMinY(v119);
          v42 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
          objc_msgSend(v42, "moveToPoint:", MidX, MinY);
          v43 = TTRRectCorners.cornerMask(layoutDirection:isFlipped:)((UIUserInterfaceLayoutDirection)objc_msgSend(v24, "effectiveUserInterfaceLayoutDirection"), 1);
          v44 = sub_10023E224(v43);
          sub_10023E270(2, 0, v44, v42, MaxX, v77, v21);
          sub_10023E270(8, 0, v44, v42, v79, v73, v21);
          sub_10023E270(4, 0, v44, v42, MinX, v39, v21);
          sub_10023E270(1, 0, v44, v42, v40, v41, v21);
          objc_msgSend(v42, "closePath");
          v45 = (CGFloat *)&v24[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_boundsUsedForShapePath];
          *v45 = x;
          v45[1] = y;
          v45[2] = width;
          v45[3] = height;
          v6 = v70;
          *((_BYTE *)v45 + 32) = 0;
          v46 = objc_msgSend(v42, "CGPath");
          objc_msgSend(v34, "setPath:", v46);
          objc_msgSend(v34, "setShadowPath:", v46);

          v31 = v46;
        }

      }
      v47 = &v24[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_shadow];
      v48 = *(void **)&v24[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_shadow];
      if (v48)
      {
        v49 = v25;
        v80 = *(float64x2_t *)(v47 + 24);
        v82 = *(float64x2_t *)(v47 + 8);
        *((_QWORD *)v47 + 4) = v107;
        v50 = *(id *)v47;
        v51 = v48;
        if (!v50)
          goto LABEL_36;
        sub_10005789C();
        v52 = v51;
        v53 = v50;
        v76 = *(float64x2_t *)(v47 + 24);
        v78 = *(float64x2_t *)(v47 + 8);
        v54 = static NSObject.== infix(_:_:)(v53, v52);

        if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v78, v82), (int32x4_t)vceqq_f64(v76, v80))), 0xFuLL))) & 1) == 0|| (v55 = v52, (v54 & 1) == 0))
        {
LABEL_36:
          if (*(_QWORD *)v47)
          {
            v56 = *((double *)v47 + 3);
            v57 = *((double *)v47 + 4);
            v59 = *((double *)v47 + 1);
            v58 = *((double *)v47 + 2);
            v52 = *(id *)v47;
            v55 = objc_msgSend(v24, "layer");
            v60 = objc_msgSend(v52, "CGColor");
            objc_msgSend(v55, "setShadowColor:", v60);

            objc_msgSend(v55, "setShadowOffset:", v59, v58);
            objc_msgSend(v55, "setShadowRadius:", v56);
            *(float *)&v61 = v57;
            objc_msgSend(v55, "setShadowOpacity:", v61);

          }
          else
          {
            v52 = v51;
            v55 = v51;
          }
        }

        v25 = v49;
      }
      v62 = v106;
      v92 = 0x3E50000000000000;
      *(_QWORD *)&v93[0] = 0x3FF0000000000000;
      if ((~*(_QWORD *)&v106 & 0x7FF0000000000000) != 0)
      {
        v64 = fabs(v106);
        v65 = 1.0;
        if (v64 > 1.0)
          v65 = v64;
        v66 = v65 * 0.0000000149011612;
        v67 = fabs(v106 + -1.0);
        v68 = v65 > 2.22507386e-308;
        v69 = 0x4000000;
        if (v68)
          *(double *)&v69 = v66;
        if (v67 < *(double *)&v69)
        {
LABEL_29:
          objc_msgSend(v23, "setAlpha:", v62, *(_QWORD *)&v70);
          objc_msgSend(v25, "setAlpha:", 1.0, v71);
          goto LABEL_31;
        }
      }
      else
      {
        v63 = sub_10007EA8C();
        if ((FloatingPoint.rescaledAlmostEqual(to:tolerance:)(v93, &v92, &type metadata for CGFloat, v63) & 1) != 0)
          goto LABEL_29;
        v64 = fabs(v62);
      }
      if (v64 < 0.0000000149011612)
        goto LABEL_29;
      objc_msgSend(v23, "setAlpha:", 1.0);
      objc_msgSend(v25, "setAlpha:", v62, *(_QWORD *)&v70);
LABEL_31:

      sub_10007EAD0((uint64_t)v94);
      if (v83 == v91)
        return sub_1000522B0(&v108);
      v7 = v86 + 17;
      v8 = v91 + 1;
    }
  }
  return result;
}

uint64_t sub_10007EA28(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v2 = *(void **)(a1 + 40);
  v3 = *(void **)(a1 + 64);
  v4 = *(void **)(a1 + 104);
  v5 = *(void **)(a1 + 112);
  v6 = *(void **)(a1 + 120);
  v7 = *(void **)(a1 + 128);
  v8 = *(id *)(a1 + 32);
  v9 = v2;
  v10 = v3;
  v11 = v4;
  v12 = v5;
  v13 = v6;
  v14 = v7;
  return a1;
}

unint64_t sub_10007EA8C()
{
  unint64_t result;

  result = qword_100641258;
  if (!qword_100641258)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_100641258);
  }
  return result;
}

uint64_t sub_10007EAD0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v2 = *(void **)(a1 + 32);
  v3 = *(void **)(a1 + 40);
  v4 = *(void **)(a1 + 64);
  v5 = *(void **)(a1 + 104);
  v6 = *(void **)(a1 + 112);
  v7 = *(void **)(a1 + 120);

  return a1;
}

uint64_t sub_10007EB34(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;

  v2 = *(void **)(a1 + 40);
  v3 = *(void **)(a1 + 48);
  v4 = *(void **)(a1 + 88);
  v5 = *(void **)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  v7 = *(void **)(a1 + 112);
  v9 = *(void **)(a1 + 120);
  v8 = *(_QWORD *)(a1 + 128);
  v10 = *(id *)(a1 + 32);
  v11 = v2;
  v12 = v3;
  v13 = v4;
  v14 = v5;
  swift_bridgeObjectRetain(v6);
  v15 = v7;
  v16 = v9;
  swift_bridgeObjectRetain(v8);
  return a1;
}

uint64_t sub_10007EBB4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v2 = *(void **)(a1 + 40);
  v3 = *(void **)(a1 + 48);
  v4 = *(void **)(a1 + 88);
  v5 = *(void **)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  v7 = *(id *)(a1 + 32);
  v8 = v2;
  v9 = v3;
  v10 = v4;
  v11 = v5;
  swift_bridgeObjectRetain(v6);
  return a1;
}

_QWORD *sub_10007EC10(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v2 = (void *)a1[4];
  v3 = (void *)a1[5];
  v4 = (void *)a1[6];
  v5 = (void *)a1[11];
  v6 = (void *)a1[12];
  swift_bridgeObjectRelease(a1[13]);

  return a1;
}

_QWORD *sub_10007EC68(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;

  v2 = (void *)a1[4];
  v3 = (void *)a1[5];
  v4 = (void *)a1[6];
  v5 = (void *)a1[11];
  v6 = (void *)a1[12];
  v7 = a1[13];
  v8 = (void *)a1[14];
  v9 = (void *)a1[15];
  swift_bridgeObjectRelease(a1[16]);

  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t sub_10007ECE4(uint64_t a1)
{
  id v2;

  v2 = *(id *)(a1 + 32);
  return a1;
}

double sub_10007ED0C(double a1, double a2, double a3)
{
  return a1 - a3;
}

uint64_t sub_10007ED18(uint64_t a1)
{

  return a1;
}

uint64_t sub_10007ED40(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v2 = *(void **)(a1 + 40);
  v3 = *(void **)(a1 + 48);
  v4 = *(void **)(a1 + 88);
  v5 = *(void **)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  v7 = *(_QWORD *)(a1 + 112);
  v8 = *(id *)(a1 + 32);
  v9 = v2;
  v10 = v3;
  v11 = v4;
  v12 = v5;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  return a1;
}

id sub_10007EDAC(id result, void *a2)
{
  id v2;
  id v3;

  if (result)
  {
    v3 = result;
    v2 = a2;
    return v3;
  }
  return result;
}

void sub_10007EDD8(void *a1, void *a2)
{
  if (a1)
  {

  }
}

uint64_t sub_10007EE04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100641268);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007EE4C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750(&qword_100641268);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_10007EE90()
{
  uint64_t v0;

  sub_10007DC20(0, v0 + 24);
  return sub_10007E2E8(0, v0 + 24);
}

uint64_t sub_10007EEC0(uint64_t a1)
{
  uint64_t v1;

  return sub_10007B430(a1, v1);
}

double sub_10007EEC8(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 272) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

void destroy for TTRIBoardColumnDraggingAnimationSource.AccessorySnapshot(id *a1)
{

}

uint64_t initializeWithCopy for TTRIBoardColumnDraggingAnimationSource.AccessorySnapshot(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for TTRIBoardColumnDraggingAnimationSource.AccessorySnapshot(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(void **)(a2 + 40);
  v8 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v7;
  v9 = v7;

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

__n128 initializeWithTake for TTRIBoardColumnDraggingAnimationSource.AccessorySnapshot(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TTRIBoardColumnDraggingAnimationSource.AccessorySnapshot(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v5 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIBoardColumnDraggingAnimationSource.AccessorySnapshot(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIBoardColumnDraggingAnimationSource.AccessorySnapshot(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIBoardColumnDraggingAnimationSource.AccessorySnapshot()
{
  return &type metadata for TTRIBoardColumnDraggingAnimationSource.AccessorySnapshot;
}

void destroy for TTRIBoardColumnDraggingAnimationSource.Cell(id *a1)
{

}

uint64_t initializeWithCopy for TTRIBoardColumnDraggingAnimationSource.Cell(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(void **)(a2 + 32);
  v5 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v6 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v7 = *(void **)(a2 + 104);
  *(_QWORD *)(a1 + 104) = v7;
  v8 = v4;
  v9 = v5;
  v10 = v6;
  v11 = v7;
  return a1;
}

_QWORD *assignWithCopy for TTRIBoardColumnDraggingAnimationSource.Cell(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v4 = (void *)a2[4];
  v5 = (void *)a1[4];
  a1[4] = v4;
  v6 = v4;

  v7 = (void *)a2[5];
  v8 = (void *)a1[5];
  a1[5] = v7;
  v9 = v7;

  a1[6] = a2[6];
  a1[7] = a2[7];
  v10 = (void *)a2[8];
  v11 = (void *)a1[8];
  a1[8] = v10;
  v12 = v10;

  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  v13 = (void *)a2[13];
  v14 = (void *)a1[13];
  a1[13] = v13;
  v15 = v13;

  return a1;
}

__n128 initializeWithTake for TTRIBoardColumnDraggingAnimationSource.Header(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for TTRIBoardColumnDraggingAnimationSource.Cell(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;

  v5 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  v7 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;

  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v8 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);

  return a1;
}

ValueMetadata *type metadata accessor for TTRIBoardColumnDraggingAnimationSource.Cell()
{
  return &type metadata for TTRIBoardColumnDraggingAnimationSource.Cell;
}

uint64_t destroy for TTRIBoardColumnDraggingAnimationSource.Header(uint64_t a1)
{

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 104));
}

uint64_t initializeWithCopy for TTRIBoardColumnDraggingAnimationSource.Header(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(void **)(a2 + 32);
  v5 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v7 = *(void **)(a2 + 88);
  v8 = *(void **)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = v8;
  v9 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 104) = v9;
  v10 = v4;
  v11 = v5;
  v12 = v6;
  v13 = v7;
  v14 = v8;
  swift_bridgeObjectRetain(v9);
  return a1;
}

_QWORD *assignWithCopy for TTRIBoardColumnDraggingAnimationSource.Header(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v4 = (void *)a2[4];
  v5 = (void *)a1[4];
  a1[4] = v4;
  v6 = v4;

  v7 = (void *)a2[5];
  v8 = (void *)a1[5];
  a1[5] = v7;
  v9 = v7;

  v10 = (void *)a2[6];
  v11 = (void *)a1[6];
  a1[6] = v10;
  v12 = v10;

  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  v13 = (void *)a2[11];
  v14 = (void *)a1[11];
  a1[11] = v13;
  v15 = v13;

  v16 = (void *)a2[12];
  v17 = (void *)a1[12];
  a1[12] = v16;
  v18 = v16;

  v19 = a2[13];
  v20 = a1[13];
  a1[13] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  return a1;
}

uint64_t assignWithTake for TTRIBoardColumnDraggingAnimationSource.Header(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;

  v5 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  v6 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  v7 = *(void **)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);

  v8 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t _s9Reminders38TTRIBoardColumnDraggingAnimationSourceV6HeaderVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_10007F5C0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIBoardColumnDraggingAnimationSource.Header()
{
  return &type metadata for TTRIBoardColumnDraggingAnimationSource.Header;
}

void destroy for TTRIBoardColumnDraggingAnimator.AnimationState.Cell(id *a1)
{

}

uint64_t initializeWithCopy for TTRIBoardColumnDraggingAnimator.AnimationState.Cell(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(void **)(a2 + 32);
  v5 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v6 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v7 = *(void **)(a2 + 104);
  v8 = *(void **)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v7;
  *(_QWORD *)(a1 + 112) = v8;
  v9 = *(void **)(a2 + 120);
  v10 = *(void **)(a2 + 128);
  *(_QWORD *)(a1 + 120) = v9;
  *(_QWORD *)(a1 + 128) = v10;
  v11 = v4;
  v12 = v5;
  v13 = v6;
  v14 = v7;
  v15 = v8;
  v16 = v9;
  v17 = v10;
  return a1;
}

_QWORD *assignWithCopy for TTRIBoardColumnDraggingAnimator.AnimationState.Cell(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v4 = (void *)a2[4];
  v5 = (void *)a1[4];
  a1[4] = v4;
  v6 = v4;

  v7 = (void *)a2[5];
  v8 = (void *)a1[5];
  a1[5] = v7;
  v9 = v7;

  a1[6] = a2[6];
  a1[7] = a2[7];
  v10 = (void *)a2[8];
  v11 = (void *)a1[8];
  a1[8] = v10;
  v12 = v10;

  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  v13 = (void *)a2[13];
  v14 = (void *)a1[13];
  a1[13] = v13;
  v15 = v13;

  v16 = (void *)a2[14];
  v17 = (void *)a1[14];
  a1[14] = v16;
  v18 = v16;

  v19 = (void *)a2[15];
  v20 = (void *)a1[15];
  a1[15] = v19;
  v21 = v19;

  v22 = (void *)a2[16];
  v23 = (void *)a1[16];
  a1[16] = v22;
  v24 = v22;

  return a1;
}

__n128 initializeWithTake for TTRIBoardColumnDraggingAnimator.AnimationState.Header(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for TTRIBoardColumnDraggingAnimator.AnimationState.Cell(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;

  v5 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  v7 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;

  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);

  v8 = *(void **)(a1 + 112);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);

  v9 = *(void **)(a1 + 128);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);

  return a1;
}

ValueMetadata *type metadata accessor for TTRIBoardColumnDraggingAnimator.AnimationState.Cell()
{
  return &type metadata for TTRIBoardColumnDraggingAnimator.AnimationState.Cell;
}

uint64_t destroy for TTRIBoardColumnDraggingAnimator.AnimationState.Header(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 104));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 128));
}

uint64_t initializeWithCopy for TTRIBoardColumnDraggingAnimator.AnimationState.Header(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(void **)(a2 + 32);
  v5 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v7 = *(void **)(a2 + 88);
  v8 = *(void **)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = v8;
  v9 = *(_QWORD *)(a2 + 104);
  v10 = *(void **)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v9;
  *(_QWORD *)(a1 + 112) = v10;
  v12 = *(void **)(a2 + 120);
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = v12;
  *(_QWORD *)(a1 + 128) = v11;
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v16 = v7;
  v17 = v8;
  swift_bridgeObjectRetain(v9);
  v18 = v10;
  v19 = v12;
  swift_bridgeObjectRetain(v11);
  return a1;
}

_QWORD *assignWithCopy for TTRIBoardColumnDraggingAnimator.AnimationState.Header(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v4 = (void *)a2[4];
  v5 = (void *)a1[4];
  a1[4] = v4;
  v6 = v4;

  v7 = (void *)a2[5];
  v8 = (void *)a1[5];
  a1[5] = v7;
  v9 = v7;

  v10 = (void *)a2[6];
  v11 = (void *)a1[6];
  a1[6] = v10;
  v12 = v10;

  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  v13 = (void *)a2[11];
  v14 = (void *)a1[11];
  a1[11] = v13;
  v15 = v13;

  v16 = (void *)a2[12];
  v17 = (void *)a1[12];
  a1[12] = v16;
  v18 = v16;

  v19 = a2[13];
  v20 = a1[13];
  a1[13] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  v21 = (void *)a2[14];
  v22 = (void *)a1[14];
  a1[14] = v21;
  v23 = v21;

  v24 = (void *)a2[15];
  v25 = (void *)a1[15];
  a1[15] = v24;
  v26 = v24;

  v27 = a2[16];
  v28 = a1[16];
  a1[16] = v27;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease(v28);
  return a1;
}

uint64_t assignWithTake for TTRIBoardColumnDraggingAnimator.AnimationState.Header(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;

  v5 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  v6 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  v7 = *(void **)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 104));
  v8 = *(void **)(a1 + 112);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);

  v9 = *(_QWORD *)(a1 + 128);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t _s9Reminders31TTRIBoardColumnDraggingAnimatorC14AnimationStateV6HeaderVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 136))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_10007FC28(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIBoardColumnDraggingAnimator.AnimationState.Header()
{
  return &type metadata for TTRIBoardColumnDraggingAnimator.AnimationState.Header;
}

uint64_t destroy for TTRIBoardColumnDraggingAnimationSource(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 104));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 112));
}

uint64_t initializeWithCopy for TTRIBoardColumnDraggingAnimationSource(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(void **)(a2 + 32);
  v5 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v7 = *(void **)(a2 + 88);
  v8 = *(void **)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = v8;
  v9 = *(_QWORD *)(a2 + 104);
  v10 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v9;
  *(_QWORD *)(a1 + 112) = v10;
  v11 = v4;
  v12 = v5;
  v13 = v6;
  v14 = v7;
  v15 = v8;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  return a1;
}

_QWORD *assignWithCopy for TTRIBoardColumnDraggingAnimationSource(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v4 = (void *)a2[4];
  v5 = (void *)a1[4];
  a1[4] = v4;
  v6 = v4;

  v7 = (void *)a2[5];
  v8 = (void *)a1[5];
  a1[5] = v7;
  v9 = v7;

  v10 = (void *)a2[6];
  v11 = (void *)a1[6];
  a1[6] = v10;
  v12 = v10;

  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  v13 = (void *)a2[11];
  v14 = (void *)a1[11];
  a1[11] = v13;
  v15 = v13;

  v16 = (void *)a2[12];
  v17 = (void *)a1[12];
  a1[12] = v16;
  v18 = v16;

  v19 = a2[13];
  v20 = a1[13];
  a1[13] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  v21 = a2[14];
  v22 = a1[14];
  a1[14] = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease(v22);
  return a1;
}

__n128 initializeWithTake for TTRIBoardColumnDraggingAnimationSource(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for TTRIBoardColumnDraggingAnimationSource(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;

  v5 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  v6 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  v7 = *(void **)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 104));
  v8 = *(_QWORD *)(a1 + 112);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIBoardColumnDraggingAnimationSource(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIBoardColumnDraggingAnimationSource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIBoardColumnDraggingAnimationSource()
{
  return &type metadata for TTRIBoardColumnDraggingAnimationSource;
}

uint64_t initializeBufferWithCopyOfBuffer for TTRIBoardColumnDraggingAnimationSource.Background(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for TTRIBoardColumnDraggingAnimationSource.Background(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for TTRIBoardColumnDraggingAnimationSource.Background(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for TTRIBoardColumnDraggingAnimationSource.Background()
{
  return &type metadata for TTRIBoardColumnDraggingAnimationSource.Background;
}

uint64_t initializeWithCopy for TTRIBoardColumnDraggingAnimationSource.Snapshot(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for TTRIBoardColumnDraggingAnimationSource.Snapshot(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(void **)(a2 + 40);
  v8 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v7;
  v9 = v7;

  return a1;
}

__n128 initializeWithTake for TTRIBoardColumnDraggingAnimationSource.Snapshot(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TTRIBoardColumnDraggingAnimationSource.Snapshot(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v5 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIBoardColumnDraggingAnimationSource.Snapshot(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIBoardColumnDraggingAnimationSource.Snapshot(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIBoardColumnDraggingAnimationSource.Snapshot()
{
  return &type metadata for TTRIBoardColumnDraggingAnimationSource.Snapshot;
}

void destroy for TTRIBoardColumnDraggingAnimationSource.FrameInView(uint64_t a1)
{

}

uint64_t initializeWithCopy for TTRIBoardColumnDraggingAnimationSource.FrameInView(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  id v5;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for TTRIBoardColumnDraggingAnimationSource.FrameInView(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v3 = (void *)a2[4];
  v4 = (void *)a1[4];
  a1[4] = v3;
  v5 = v3;

  return a1;
}

uint64_t assignWithTake for TTRIBoardColumnDraggingAnimationSource.FrameInView(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIBoardColumnDraggingAnimationSource.FrameInView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIBoardColumnDraggingAnimationSource.FrameInView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIBoardColumnDraggingAnimationSource.FrameInView()
{
  return &type metadata for TTRIBoardColumnDraggingAnimationSource.FrameInView;
}

id sub_100080410(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void **v27;
  void (*v28)(char *, char *, uint64_t);
  void *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t ObjectType;
  uint64_t (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  id v87;
  void *v88;
  void (*v89)(void *, _UNKNOWN **, uint64_t, uint64_t);
  id v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(uint64_t, _UNKNOWN **);
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(uint64_t, _UNKNOWN **, uint64_t, _QWORD, __n128);
  __n128 v104;
  uint64_t v105;
  id v106;
  id v107;
  id v108;
  id v109;
  void *v110;
  uint64_t Strong;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v118;
  void **v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t *v127;
  char *v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD v133[4];
  __int128 v134;
  __int128 v135;
  _QWORD v136[16];
  uint64_t v137;
  __int128 v138;
  __int128 v139;
  uint64_t v140;
  __int128 v141;

  v129 = a6;
  v130 = a3;
  v126 = a5;
  v127 = a1;
  v121 = a4;
  v119 = (void **)a2;
  v6 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  v7 = __chkstk_darwin(v6);
  v128 = (char *)&v118 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v120 = (uint64_t)&v118 - v9;
  v122 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v122);
  v11 = (char *)&v118 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v12);
  v14 = (void **)((char *)&v118 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v118 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v118 - v20;
  v22 = sub_10002A750(&qword_100641270);
  v23 = swift_allocObject(v22, ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72), *(unsigned __int8 *)(v16 + 80) | 7);
  *(_OWORD *)(v23 + 16) = xmmword_100520250;
  static REMSuggestedAttributesElector.ExcludedAttributes.lists.getter();
  v136[0] = v23;
  v24 = sub_100080C90();
  v25 = sub_10002A750(&qword_100641278);
  v26 = sub_100080CD8();
  dispatch thunk of SetAlgebra.init<A>(_:)(v136, v25, v26, v15, v24);
  v27 = v119;
  sub_10002B1E8((uint64_t)v119, (uint64_t)v14, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  v123 = v21;
  v124 = v16;
  v28 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v125 = v15;
  v28(v19, v21, v15);
  sub_100041F70(v14, (uint64_t)v19, 0, (uint64_t)v136);
  v29 = *v27;
  v30 = (uint64_t)v27;
  v31 = v126;
  v32 = TTRPublicTemplateFallbackProperties.init(listName:listColor:)(v121, v126, 0);
  v34 = v33;
  v36 = v35;
  v37 = type metadata accessor for TTRShowPublicTemplateDataModelSource(0);
  swift_allocObject(v37, *(unsigned int *)(v37 + 48), *(unsigned __int16 *)(v37 + 52));
  v38 = v130;
  v39 = TTRShowPublicTemplateDataModelSource.init(store:publicTemplateObjectID:fallbackProperties:)(v29, v130, v32, v34, v36);
  v40 = (void *)v136[0];
  v41 = type metadata accessor for TTRShowPublicTemplateViewModelSource(0);
  v42 = swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
  swift_bridgeObjectRetain(v31);
  v43 = v29;
  v44 = v38;
  swift_retain(v39);
  v45 = v40;
  v46 = sub_100080D24(0, v39, v45, v42);
  swift_release(v39);

  sub_10002B1E8(v30, (uint64_t)v14, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  sub_100043000((uint64_t)v136, (uint64_t)v133);
  swift_retain(v46);
  v130 = (void *)v46;
  sub_100042A94((uint64_t)v14, (uint64_t)v133, v46, (uint64_t)&off_100609110, (uint64_t)v11);
  v47 = v120;
  v126 = v11;
  sub_100042C0C(v120);
  v48 = type metadata accessor for TTRIShowPublicTemplatePresenter(0);
  v49 = *(unsigned int *)(v48 + 48);
  v50 = *(unsigned __int16 *)(v48 + 52);
  v121 = v48;
  v51 = swift_allocObject(v48, v49, v50);
  v52 = (uint64_t *)(v51 + OBJC_IVAR____TtC9Reminders31TTRIShowPublicTemplatePresenter_dataModelSource);
  *v52 = v39;
  v52[1] = (uint64_t)&protocol witness table for TTRShowPublicTemplateDataModelSource;
  v53 = (uint64_t)v128;
  sub_10002B1E8(v47, (uint64_t)v128, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  swift_retain(v39);
  v54 = v129;
  swift_unknownObjectRetain(v129);
  v55 = sub_1002A70CC(v53, v54, v51);
  sub_10001F544(v47, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  v56 = *(_QWORD *)(v55 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v55 + 136), v57);
  v59 = *(uint64_t (**)(uint64_t, uint64_t))(v56 + 104);
  swift_retain(v55);
  v60 = v59(ObjectType, v56);
  if (v60)
  {
    v62 = v60;
    v63 = v61;
    v64 = swift_getObjectType(v60, v61);
    LOBYTE(v63) = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 16))(v64, v63);
    swift_release(v55);
    swift_unknownObjectRelease(v62);
    v65 = v63 & 1;
  }
  else
  {
    swift_release(v55);
    v65 = 0;
  }
  v66 = sub_100172EB4(v65, v55);
  v68 = v67;
  v70 = v69;
  v72 = v71;
  v120 = swift_getObjectType(v69, v67);
  *(_QWORD *)(v55 + 24) = *(_QWORD *)(v72 + 8);
  v119 = (void **)(v55 + 16);
  v129 = v70;
  swift_unknownObjectWeakAssign(v55 + 16, v70);
  v73 = *(_QWORD *)(v55 + 144);
  v75 = swift_getObjectType(*(_QWORD *)(v55 + 136), v74);
  v76 = *(uint64_t (**)(uint64_t, uint64_t))(v73 + 104);
  swift_retain_n(v55, 2);
  v128 = v66;
  v77 = v76(v75, v73);
  v79 = v77;
  if (v77)
  {
    v80 = v78;
    v81 = swift_getObjectType(v77, v78);
    LOBYTE(v80) = (*(uint64_t (**)(uint64_t, uint64_t))(v80 + 16))(v81, v80);
    swift_release(v55);
    v82 = swift_unknownObjectRelease(v79);
    v79 = v80 & 1;
  }
  else
  {
    v82 = swift_release(v55);
  }
  v83 = static TTRLocalizableStrings.Templates.addListFromPublicTemplateButton.getter(v82);
  v85 = v84;
  v86 = objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController(0));
  v87 = v128;
  v88 = (void *)sub_1002A8974(v55, v128, v68, v79, v83, v85, 1, v86);
  swift_release(v55);

  v89 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v72 + 32);
  v90 = v88;
  v89(v88, &off_1005FCD60, v120, v72);
  v91 = v136[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess(v136[0] + direct field offset for TTRRemindersListInteractor.delegate, &v132, 1, 0);
  *(_QWORD *)(v91 + 8) = &off_1005F3190;
  swift_unknownObjectWeakAssign(v91, v55);
  v92 = v136[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate;
  swift_beginAccess(v136[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate, &v131, 1, 0);
  *(_QWORD *)(v92 + 8) = &protocol witness table for TTRShowPublicTemplateDataModelSource;
  swift_unknownObjectWeakAssign(v92, v39);
  swift_unknownObjectWeakAssign(v136[3] + 16, v90);
  v93 = *(void (**)(uint64_t, _UNKNOWN **))(*(_QWORD *)v39 + 384);
  v94 = v130;
  v95 = swift_retain(v130);
  v93(v95, &off_1005FCA38);
  swift_retain(v94);
  v96 = swift_retain(v55);
  sub_10048D4EC(v96, (uint64_t)&off_1005F30C0);
  swift_release(v94);
  swift_release(v55);
  v97 = (uint64_t)v126;
  v98 = *(_QWORD *)&v126[*(int *)(v122 + 28)];
  *(_QWORD *)(v98 + 24) = &off_1005F3260;
  swift_unknownObjectWeakAssign(v98 + 16, v55);
  sub_100028CFC((uint64_t)&v137, (uint64_t)v133);
  v134 = v138;
  v135 = v139;
  v99 = v138 + 32;
  *(_QWORD *)(v138 + 40) = &off_1005F3040;
  swift_unknownObjectWeakAssign(v99, v55);
  sub_100027F10(v133);
  sub_100028CFC((uint64_t)&v140, (uint64_t)v133);
  v100 = v141;
  v134 = v141;
  v102 = swift_getObjectType(v141, v101);
  v103 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, _QWORD, __n128))(*((_QWORD *)&v100 + 1) + 48);
  swift_retain(v55);
  v104 = swift_unknownObjectRetain(v100);
  v103(v55, &off_1005F2FF0, v102, *((_QWORD *)&v100 + 1), v104);
  swift_unknownObjectRelease(v100);
  v105 = sub_100027F10(v133);
  (*(void (**)(uint64_t))(*(_QWORD *)v39 + 432))(v105);
  v106 = objc_allocWithZone((Class)UINavigationController);
  swift_retain_n(v55, 2);
  v107 = objc_msgSend(v106, "initWithRootViewController:", v90);
  v108 = objc_msgSend(v107, "navigationBar");
  objc_msgSend(v108, "setPrefersLargeTitles:", 1);

  v109 = objc_msgSend(v107, "presentationController");
  if (v109)
  {
    v110 = v109;
    Strong = swift_unknownObjectWeakLoadStrong(v119);
    if (Strong)
    {
      v113 = Strong;
      v114 = *(_QWORD *)(v55 + 24);
      v115 = swift_getObjectType(Strong, v112);
      (*(void (**)(void *, uint64_t, uint64_t))(v114 + 96))(v110, v115, v114);
      swift_unknownObjectRelease(v113);
    }
    *(_BYTE *)(v55 + 504) = 1;
    swift_release_n(v55, 2);

  }
  else
  {
    swift_release_n(v55, 2);
  }
  v116 = v127;
  v127[3] = v121;
  v116[4] = (uint64_t)&off_100608B88;
  *v116 = v55;
  swift_release(v39);
  swift_release(v130);

  swift_unknownObjectRelease(v129);
  sub_10001F544(v97, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  sub_100043844((uint64_t)v136);
  (*(void (**)(char *, uint64_t))(v124 + 8))(v123, v125);
  return v107;
}

unint64_t sub_100080C90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10063F288;
  if (!qword_10063F288)
  {
    v1 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for REMSuggestedAttributesElector.ExcludedAttributes, v1);
    atomic_store(result, (unint64_t *)&qword_10063F288);
  }
  return result;
}

unint64_t sub_100080CD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100641280;
  if (!qword_100641280)
  {
    v1 = sub_10002CA5C(&qword_100641278);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100641280);
  }
  return result;
}

uint64_t sub_100080D24(char a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v8 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(a4 + OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_listRepresentation) = 0;
  v14 = a4 + OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_remindersCount;
  *(_QWORD *)v14 = 0;
  *(_QWORD *)(v14 + 8) = 0;
  *(_BYTE *)(v14 + 16) = 1;
  *(_BYTE *)(a4 + OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_isPreview) = a1;
  v15 = (uint64_t *)(a4 + OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_publicTemplateDataModelSource);
  *v15 = a2;
  v15[1] = (uint64_t)&protocol witness table for TTRShowPublicTemplateDataModelSource;
  v16 = enum case for REMRemindersListDataView.SortingStyle.default(_:);
  v17 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v13, v16, v17);
  swift_storeEnumTagMultiPayload(v13, v11, 0);
  swift_retain_n(a2, 2);
  v18 = sub_1002A8704(a2, (uint64_t)a3, (uint64_t)v13, a4);
  swift_retain(v18);
  sub_10028B348((uint64_t)v10);
  sub_10046ADD4((uint64_t)v10);
  swift_release(v18);
  sub_100080EAC((uint64_t)v10);
  return v18;
}

uint64_t sub_100080EAC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750(&qword_100649CA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_100080EEC(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *object;
  NSString v16;
  NSString v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  id v25;
  _QWORD v27[3];
  char v28[8];
  _QWORD v29[3];
  char v30[8];

  swift_getErrorValue(a1, v30, v29);
  if ((Error.isREMError(withErrorCode:)(-3007, v29[1], v29[2]) & 1) != 0)
  {
    static TTRLocalizableStrings.Templates.publicTemplateNotSupportedAlertTitle.getter();
    v5 = v4;
    if ((a2 & 1) != 0)
    {
      v6 = 0xD000000000000030;
      v7 = 0xD00000000000003ALL;
      v8 = 0xD00000000000009ELL;
      v9 = 0x80000001005616D0;
      v10 = 0x8000000100561710;
      v11 = 0x80000001005617B0;
    }
    else
    {
      v7 = 0xD00000000000003CLL;
      v8 = 0xD00000000000009DLL;
      v9 = 0x80000001005615C0;
      v10 = 0x80000001005615F0;
      v11 = 0x8000000100561690;
      v6 = 0xD00000000000002DLL;
    }
    object = TTRLocalizedString(_:value:comment:)(*(Swift::String *)&v6, *(Swift::String *)&v8, *(Swift::String *)&v7)._object;
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
    v17 = String._bridgeToObjectiveC()();
    v18 = object;
  }
  else
  {
    swift_getErrorValue(a1, v28, v27);
    if ((Error.isREMError(withErrorCode:)(-1007, v27[1], v27[2]) & 1) != 0)
    {
      static TTRLocalizableStrings.Templates.publicTemplateCannotOpenDueToNetworkFailureAlertTitle.getter();
      v13 = v12;
      static TTRLocalizableStrings.Templates.publicTemplateCannotOpenDueToNetworkFailureAlertMessage.getter();
    }
    else
    {
      static TTRLocalizableStrings.Templates.publicTemplateNotAvailableAlertTitle.getter();
      v13 = v19;
      static TTRLocalizableStrings.Templates.publicTemplateNotAvailableAlertMessage.getter();
    }
    v20 = v14;
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
    v17 = String._bridgeToObjectiveC()();
    v18 = v20;
  }
  swift_bridgeObjectRelease(v18);
  v21 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v16, v17, 1);

  static TTRLocalizableStrings.Common.alertOKButton.getter();
  v23 = v22;
  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v23);
  v25 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v24, 1, 0);

  objc_msgSend(v21, "addAction:", v25);
  return v21;
}

id sub_10008112C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  NSString v6;
  id v7;
  id v8;
  objc_super v10;

  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders34TTRIHashtagSuggestionTableViewCell____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders34TTRIHashtagSuggestionTableViewCell____lazy_storage___leadingImageView] = 0;
  if (a3)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v6 = 0;
  }
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for TTRIHashtagSuggestionTableViewCell();
  v7 = objc_msgSendSuper2(&v10, "initWithStyle:reuseIdentifier:", a1, v6);

  v8 = v7;
  sub_10008153C();

  return v8;
}

id sub_10008129C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC9Reminders34TTRIHashtagSuggestionTableViewCell____lazy_storage___titleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders34TTRIHashtagSuggestionTableViewCell____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders34TTRIHashtagSuggestionTableViewCell____lazy_storage___titleLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
    sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
    v6 = (void *)static UIFont.roundedSystemFont.getter();
    objc_msgSend(v5, "setFont:", v6);

    v7 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_100081350()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC9Reminders34TTRIHashtagSuggestionTableViewCell____lazy_storage___leadingImageView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders34TTRIHashtagSuggestionTableViewCell____lazy_storage___leadingImageView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders34TTRIHashtagSuggestionTableViewCell____lazy_storage___leadingImageView);
  }
  else
  {
    v4 = sub_1000813AC();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1000813AC()
{
  id v0;
  id v1;
  Class isa;
  Class v3;
  id v4;
  NSString v5;
  id v6;
  id v7;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  objc_msgSend(v0, "setAdjustsImageSizeForAccessibilityContentSizeCategory:", 0);
  objc_msgSend(v0, "setContentMode:", 4);
  v1 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  isa = UIFont.withRoundedDesign()().super.isa;

  v3 = UIFont.withBoldTrait()().super.isa;
  v4 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v3, 1);
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:withConfiguration:", v5, v4);

  objc_msgSend(v0, "setImage:", v6);
  v7 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v0, "setTintColor:", v7);

  return v0;
}

void sub_10008153C()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  Class isa;

  v1 = sub_100081350();
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v2 = sub_10008129C();
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v3 = sub_100081350();
  objc_msgSend(v0, "addSubview:", v3);

  v4 = sub_10008129C();
  objc_msgSend(v0, "addSubview:", v4);

  v5 = (void *)objc_opt_self(NSLayoutConstraint);
  v6 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v7 = swift_allocObject(v6, 96, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100521690;
  v8 = sub_100081350();
  v9 = objc_msgSend(v8, "heightAnchor");

  v10 = objc_msgSend(v9, "constraintEqualToConstant:", 24.0);
  *(_QWORD *)(v7 + 32) = v10;
  v11 = sub_100081350();
  v12 = objc_msgSend(v11, "widthAnchor");

  v13 = objc_msgSend(v12, "constraintEqualToConstant:", 24.0);
  *(_QWORD *)(v7 + 40) = v13;
  v14 = sub_100081350();
  v15 = objc_msgSend(v14, "leadingAnchor");

  v16 = objc_msgSend(v0, "leadingAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v16, 12.0);

  *(_QWORD *)(v7 + 48) = v17;
  v18 = sub_10008129C();
  v19 = objc_msgSend(v18, "leadingAnchor");

  v20 = sub_100081350();
  v21 = objc_msgSend(v20, "trailingAnchor");

  v22 = objc_msgSend(v19, "constraintEqualToAnchor:constant:", v21, 4.0);
  *(_QWORD *)(v7 + 56) = v22;
  v23 = objc_msgSend(v0, "trailingAnchor");
  v24 = sub_10008129C();
  v25 = objc_msgSend(v24, "trailingAnchor");

  v26 = objc_msgSend(v23, "constraintEqualToAnchor:constant:", v25, 12.0);
  *(_QWORD *)(v7 + 64) = v26;
  v27 = sub_10008129C();
  v28 = objc_msgSend(v27, "topAnchor");

  v29 = objc_msgSend(v0, "topAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:", v29);

  *(_QWORD *)(v7 + 72) = v30;
  v31 = objc_msgSend(v0, "bottomAnchor");
  v32 = sub_10008129C();
  v33 = objc_msgSend(v32, "bottomAnchor");

  v34 = objc_msgSend(v31, "constraintEqualToAnchor:", v33);
  *(_QWORD *)(v7 + 80) = v34;
  v35 = sub_100081350();
  v36 = objc_msgSend(v35, "centerYAnchor");

  v37 = sub_10008129C();
  v38 = objc_msgSend(v37, "centerYAnchor");

  v39 = objc_msgSend(v36, "constraintEqualToAnchor:", v38);
  *(_QWORD *)(v7 + 88) = v39;
  specialized Array._endMutation()(v40);
  sub_100005ED8(0, (unint64_t *)&qword_10064BB60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v7);
  objc_msgSend(v5, "activateConstraints:", isa);

}

id sub_100081988()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIHashtagSuggestionTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TTRIHashtagSuggestionTableViewCell()
{
  return objc_opt_self(_TtC9Reminders34TTRIHashtagSuggestionTableViewCell);
}

id sub_100081A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(__int128 *, uint64_t, __n128);
  uint64_t v7;
  __n128 v8;
  void *v9;
  __int128 v11;
  __int128 v12;

  v3 = a3;
  v6 = *(uint64_t (**)(__int128 *, uint64_t, __n128))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (!a2)
  {
    v11 = 0u;
    v12 = 0u;
    if (!a3)
      goto LABEL_4;
    goto LABEL_3;
  }
  *((_QWORD *)&v12 + 1) = swift_getObjectType(a2, a2);
  *(_QWORD *)&v11 = a2;
  if (v3)
  {
LABEL_3:
    v7 = sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
    v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v7);
  }
LABEL_4:
  swift_retain(v5);
  v8 = swift_unknownObjectRetain(a2);
  v9 = (void *)v6(&v11, v3, v8);
  swift_release(v5);
  swift_bridgeObjectRelease(v3);
  sub_1000073A0((uint64_t)&v11, &qword_100640E50);
  return v9;
}

uint64_t sub_100081AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD v20[5];
  uint64_t v21;

  v21 = a1;
  v3 = type metadata accessor for TTRSharedWithYouHighlight(0);
  __chkstk_darwin(v3);
  v20[2] = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750(&qword_1006415D8);
  __chkstk_darwin(v5);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem(0);
  v9 = __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  v13 = (char *)v20 - v12;
  if (*(_QWORD *)(a2 + 16))
  {
    v20[4] = v11;
    v14 = a2 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v15 = *(_QWORD *)(v10 + 72);
    v20[1] = a2;
    swift_bridgeObjectRetain(a2);
    v20[3] = v15;
    sub_10002B1E8(v14, (uint64_t)v13, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
    v16 = (uint64_t)&v7[*(int *)(v5 + 48)];
    sub_10002B1E8((uint64_t)v13, (uint64_t)v7, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
    sub_10002B1E8(v21, v16, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
    v17 = sub_10002A750(&qword_10063F578);
    v18 = (char *)&loc_100081C78
        + 4
        * byte_1005216D0[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v7, 5, v17)];
    __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_100081E20(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = a1;
  v3 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - v7;
  v35 = type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement(0);
  __chkstk_darwin(v35);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - v10;
  __chkstk_darwin(v12);
  v16 = (char *)&v33 - v15;
  v17 = *(_QWORD *)(a2 + 16);
  if (!v17)
    return 0;
  v18 = a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  v36 = *(_QWORD *)(v13 + 72);
  v37 = v14;
  v34 = a2;
  swift_bridgeObjectRetain(a2);
  do
  {
    v19 = sub_10002B1E8(v18, (uint64_t)v16, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
    v20 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v19);
    v21 = v38;
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v20);
    v22 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v8, v5);
    sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10002B1E8((uint64_t)v16, (uint64_t)v11, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
    v23 = v21;
    v24 = v37;
    v25 = sub_10002B1E8(v23, v37, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
    if ((v22 & 1) != 0)
    {
      v26 = (uint64_t)v11;
      v27 = v24;
      v28 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v25);
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v28);
      v29 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v8, v5);
      sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v30 = v27;
      v11 = (char *)v26;
      sub_10001F544(v30, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
      sub_10001F544(v26, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
      sub_10001F544((uint64_t)v16, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
      if ((v29 & 1) != 0)
      {
        v31 = 1;
        goto LABEL_9;
      }
    }
    else
    {
      sub_10001F544(v24, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
      sub_10001F544((uint64_t)v11, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
      sub_10001F544((uint64_t)v16, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
    }
    v18 += v36;
    --v17;
  }
  while (v17);
  v31 = 0;
LABEL_9:
  swift_bridgeObjectRelease(v34);
  return v31;
}

uint64_t sub_1000820BC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  for (; v8; v8 = _CocoaArrayWrapper.endIndex.getter(v19))
  {
    v9 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v10 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_5:
      v11 = v10;
      a4 = (_QWORD *)sub_100005ED8(0, (unint64_t *)a3, a4);
      a3 = static NSObject.== infix(_:_:)(v11, a1);

      if ((a3 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease(a2);
        return 1;
      }
      if (v8 == 1)
        goto LABEL_18;
      if (v9)
        break;
      v9 = 5;
      while (1)
      {
        v17 = v9 - 3;
        if (__OFADD__(v9 - 4, 1))
          break;
        a3 = (uint64_t)*(id *)(a2 + 8 * v9);
        v18 = static NSObject.== infix(_:_:)(a3, a1);

        if ((v18 & 1) != 0)
          goto LABEL_6;
        ++v9;
        if (v17 == v8)
          goto LABEL_18;
      }
      __break(1u);
    }
    a3 = 1;
    while (1)
    {
      v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(a3, a2);
      v14 = a3 + 1;
      if (__OFADD__(a3, 1))
        break;
      v15 = v13;
      v16 = static NSObject.== infix(_:_:)(v13, a1);
      swift_unknownObjectRelease(v15);
      if ((v16 & 1) != 0)
        goto LABEL_6;
      ++a3;
      if (v14 == v8)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    if (a2 < 0)
      v19 = a2;
    else
      v19 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
  }
LABEL_18:
  swift_bridgeObjectRelease(a2);
  return 0;
}

uint64_t sub_100082240(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v4 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000822A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_1006412C0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_1006412C0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

objc_class *sub_100082334()
{
  uint64_t v0;
  void *v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  UIBarButtonItem v6;
  void *v7;
  id v8;
  UIAction_optional v10;
  UIMenu_optional v11;

  v1 = *(void **)(v0 + 96);
  if (v1)
  {
    v2 = *(objc_class **)(v0 + 96);
  }
  else
  {
    v3 = v0;
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v4 = swift_allocObject(&unk_1005EDC10, 24, 7);
    swift_weakInit(v4 + 16, v0);
    v5 = (objc_class *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100086634, v4);
    v11.value.super.super.isa = (Class)sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
    v10.value.super.super.isa = v5;
    v10.is_nil = 0;
    v6.super.super.isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemDone, v10, v11).super.super.isa;
    v7 = *(void **)(v3 + 96);
    *(UIBarButtonItem *)(v3 + 96) = v6;
    v2 = v6.super.super.isa;

    v1 = 0;
  }
  v8 = v1;
  return v2;
}

uint64_t sub_10008243C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  char v12[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)(result + 24);
    swift_unknownObjectRetain(v5);
    swift_release(v4);
    Strong = swift_unknownObjectWeakLoadStrong(v5 + 32);
    if (Strong)
    {
      v8 = Strong;
      v9 = *(_QWORD *)(v5 + 40);
      ObjectType = swift_getObjectType(Strong, v7);
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v9 + 72))(v5, &off_1005EC008, ObjectType, v9);
      swift_unknownObjectRelease(v5);
      v11 = v8;
    }
    else
    {
      v11 = v5;
    }
    return swift_unknownObjectRelease(v11);
  }
  return result;
}

objc_class *sub_1000824EC()
{
  uint64_t v0;
  void *v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  UIBarButtonItem v6;
  void *v7;
  id v8;
  UIAction_optional v10;
  UIMenu_optional v11;

  v1 = *(void **)(v0 + 104);
  if (v1)
  {
    v2 = *(objc_class **)(v0 + 104);
  }
  else
  {
    v3 = v0;
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v4 = swift_allocObject(&unk_1005EDC10, 24, 7);
    swift_weakInit(v4 + 16, v0);
    v5 = (objc_class *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10008661C, v4);
    v11.value.super.super.isa = (Class)sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
    v10.value.super.super.isa = v5;
    v10.is_nil = 0;
    v6.super.super.isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemDone, v10, v11).super.super.isa;
    v7 = *(void **)(v3 + 104);
    *(UIBarButtonItem *)(v3 + 104) = v6;
    v2 = v6.super.super.isa;

    v1 = 0;
  }
  v8 = v1;
  return v2;
}

objc_class *sub_1000825F4()
{
  uint64_t v0;
  void *v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  Swift::String_optional v7;
  Class isa;
  void *v9;
  id v10;
  UIImage_optional v12;
  UIAction_optional v13;
  UIMenu_optional v14;

  v1 = *(void **)(v0 + 112);
  if (v1)
  {
    v2 = *(objc_class **)(v0 + 112);
  }
  else
  {
    v3 = v0;
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v4 = swift_allocObject(&unk_1005EDC10, 24, 7);
    swift_weakInit(v4 + 16, v0);
    v5 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10008661C, v4);
    sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
    v6 = v5;
    v7.value._countAndFlagsBits = 0;
    v7.value._object = (void *)0xE000000000000000;
    v12.value.super.isa = 0;
    v12.is_nil = (char)v5;
    v13.value.super.super.isa = 0;
    isa = UIBarButtonItem.init(title:image:primaryAction:menu:)(v7, v12, v13, v14).super.super.isa;
    -[objc_class setStyle:](isa, "setStyle:", 2);

    v9 = *(void **)(v3 + 112);
    *(_QWORD *)(v3 + 112) = isa;
    v2 = isa;

    v1 = 0;
  }
  v10 = v1;
  return v2;
}

uint64_t sub_100082724(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  char v12[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)(result + 24);
    swift_unknownObjectRetain(v5);
    swift_release(v4);
    Strong = swift_unknownObjectWeakLoadStrong(v5 + 32);
    if (Strong)
    {
      v8 = Strong;
      v9 = *(_QWORD *)(v5 + 40);
      ObjectType = swift_getObjectType(Strong, v7);
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v9 + 48))(v5, &off_1005EC008, ObjectType, v9);
      swift_unknownObjectRelease(v5);
      v11 = v8;
    }
    else
    {
      v11 = v5;
    }
    return swift_unknownObjectRelease(v11);
  }
  return result;
}

objc_class *sub_1000827D4()
{
  uint64_t v0;
  void *v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  UIBarButtonItem v6;
  void *v7;
  id v8;
  UIAction_optional v10;
  UIMenu_optional v11;

  v1 = *(void **)(v0 + 120);
  if (v1)
  {
    v2 = *(objc_class **)(v0 + 120);
  }
  else
  {
    v3 = v0;
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v4 = swift_allocObject(&unk_1005EDC10, 24, 7);
    swift_weakInit(v4 + 16, v0);
    v5 = (objc_class *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100086564, v4);
    v11.value.super.super.isa = (Class)sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
    v10.value.super.super.isa = v5;
    v10.is_nil = 0;
    v6.super.super.isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemCancel, v10, v11).super.super.isa;
    v7 = *(void **)(v3 + 120);
    *(UIBarButtonItem *)(v3 + 120) = v6;
    v2 = v6.super.super.isa;

    v1 = 0;
  }
  v8 = v1;
  return v2;
}

uint64_t sub_1000828DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  char v12[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)(result + 24);
    swift_unknownObjectRetain(v5);
    swift_release(v4);
    Strong = swift_unknownObjectWeakLoadStrong(v5 + 32);
    if (Strong)
    {
      v8 = Strong;
      v9 = *(_QWORD *)(v5 + 40);
      ObjectType = swift_getObjectType(Strong, v7);
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v9 + 56))(v5, &off_1005EC008, ObjectType, v9);
      swift_unknownObjectRelease(v5);
      v11 = v8;
    }
    else
    {
      v11 = v5;
    }
    return swift_unknownObjectRelease(v11);
  }
  return result;
}

objc_class *sub_10008298C()
{
  uint64_t v0;
  void *v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  NSString v9;
  objc_class *v10;
  UIBarButtonItem v11;
  void *v12;
  id v13;
  UIImage_optional v15;
  UIAction_optional v16;
  UIMenu_optional v17;

  v1 = *(void **)(v0 + 128);
  if (v1)
  {
    v2 = *(objc_class **)(v0 + 128);
  }
  else
  {
    v3 = v0;
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v4 = swift_allocObject(&unk_1005EDC10, 24, 7);
    swift_weakInit(v4 + 16, v0);
    v5 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1000865FC, v4);
    sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
    v6._countAndFlagsBits = 0xD000000000000028;
    v6._object = (void *)0x8000000100561E60;
    v7._countAndFlagsBits = 1868852821;
    v7._object = (void *)0xE400000000000000;
    v8 = TTRLocalizedString(_:comment:)(v7, v6);
    v9 = String._bridgeToObjectiveC()();
    v10 = (objc_class *)objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v9);

    v15.value.super.isa = v10;
    v15.is_nil = v5;
    v16.value.super.super.isa = 0;
    v11.super.super.isa = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)v8, v15, v16, v17).super.super.isa;
    v12 = *(void **)(v3 + 128);
    *(UIBarButtonItem *)(v3 + 128) = v11;
    v2 = v11.super.super.isa;

    v1 = 0;
  }
  v13 = v1;
  return v2;
}

objc_class *sub_100082B2C()
{
  uint64_t v0;
  void *v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  NSString v9;
  objc_class *v10;
  UIBarButtonItem v11;
  void *v12;
  id v13;
  UIImage_optional v15;
  UIAction_optional v16;
  UIMenu_optional v17;

  v1 = *(void **)(v0 + 136);
  if (v1)
  {
    v2 = *(objc_class **)(v0 + 136);
  }
  else
  {
    v3 = v0;
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v4 = swift_allocObject(&unk_1005EDC10, 24, 7);
    swift_weakInit(v4 + 16, v0);
    v5 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1000865DC, v4);
    sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
    v6._countAndFlagsBits = 0xD000000000000028;
    v6._object = (void *)0x8000000100561E60;
    v7._countAndFlagsBits = 1868850514;
    v7._object = (void *)0xE400000000000000;
    v8 = TTRLocalizedString(_:comment:)(v7, v6);
    v9 = String._bridgeToObjectiveC()();
    v10 = (objc_class *)objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v9);

    v15.value.super.isa = v10;
    v15.is_nil = v5;
    v16.value.super.super.isa = 0;
    v11.super.super.isa = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)v8, v15, v16, v17).super.super.isa;
    v12 = *(void **)(v3 + 136);
    *(UIBarButtonItem *)(v3 + 136) = v11;
    v2 = v11.super.super.isa;

    v1 = 0;
  }
  v13 = v1;
  return v2;
}

objc_class *sub_100082CCC()
{
  uint64_t v0;
  void *v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  NSString v9;
  objc_class *v10;
  UIBarButtonItem v11;
  void *v12;
  id v13;
  UIImage_optional v15;
  UIAction_optional v16;
  UIMenu_optional v17;

  v1 = *(void **)(v0 + 152);
  if (v1)
  {
    v2 = *(objc_class **)(v0 + 152);
  }
  else
  {
    v3 = v0;
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v4 = swift_allocObject(&unk_1005EDC10, 24, 7);
    swift_weakInit(v4 + 16, v0);
    v5 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100086690, v4);
    sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
    v6._countAndFlagsBits = 0xD000000000000028;
    v7._object = (void *)0x8000000100561EF0;
    v6._object = (void *)0x8000000100561E60;
    v7._countAndFlagsBits = 0xD000000000000012;
    v8 = TTRLocalizedString(_:comment:)(v7, v6);
    v9 = String._bridgeToObjectiveC()();
    v10 = (objc_class *)objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v9);

    v15.value.super.isa = v10;
    v15.is_nil = v5;
    v16.value.super.super.isa = 0;
    v11.super.super.isa = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)v8, v15, v16, v17).super.super.isa;
    v12 = *(void **)(v3 + 152);
    *(UIBarButtonItem *)(v3 + 152) = v11;
    v2 = v11.super.super.isa;

    v1 = 0;
  }
  v13 = v1;
  return v2;
}

objc_class *sub_100082E74()
{
  uint64_t v0;
  void *v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  NSString v9;
  objc_class *v10;
  UIBarButtonItem v11;
  void *v12;
  id v13;
  UIImage_optional v15;
  UIAction_optional v16;
  UIMenu_optional v17;

  v1 = *(void **)(v0 + 160);
  if (v1)
  {
    v2 = *(objc_class **)(v0 + 160);
  }
  else
  {
    v3 = v0;
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v4 = swift_allocObject(&unk_1005EDC10, 24, 7);
    swift_weakInit(v4 + 16, v0);
    v5 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1000866A8, v4);
    sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
    v6._countAndFlagsBits = 0xD000000000000028;
    v6._object = (void *)0x8000000100561E60;
    v7._countAndFlagsBits = 0x694C206572616853;
    v7._object = (void *)0xEA00000000007473;
    v8 = TTRLocalizedString(_:comment:)(v7, v6);
    v9 = String._bridgeToObjectiveC()();
    v10 = (objc_class *)objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v9);

    v15.value.super.isa = v10;
    v15.is_nil = v5;
    v16.value.super.super.isa = 0;
    v11.super.super.isa = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)v8, v15, v16, v17).super.super.isa;
    v12 = *(void **)(v3 + 160);
    *(UIBarButtonItem *)(v3 + 160) = v11;
    v2 = v11.super.super.isa;

    v1 = 0;
  }
  v13 = v1;
  return v2;
}

uint64_t sub_100083020(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(__n128);
  __n128 v23;
  void *v24;
  unsigned __int8 v25;
  _BYTE v26[24];
  _QWORD v27[5];
  unsigned __int8 v28;
  uint64_t v29;
  char v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v26, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = objc_msgSend(a1, "presentationSourceItem");
    if (v6)
    {
      v7 = v6;
      static TTRIPopoverAnchor.sourceItem(_:permittedArrowDirections:)(v27, v6, 15, 0);
      v8 = (void *)v27[0];
      v9 = v27[1];
      v10 = v27[2];
      v11 = v27[3];
      v12 = v27[4];
      v13 = v28;
      v14 = v29;
      v15 = v30;
      swift_unknownObjectRelease(v7);
    }
    else
    {
      v8 = 0;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      v12 = 0;
      v14 = 0;
      v15 = 0;
      v13 = 254;
    }
    v31 = v8;
    v32 = v9;
    v33 = v10;
    v34 = v11;
    v35 = v12;
    v36 = v13;
    v25 = v13;
    v37 = v14;
    v38 = v15;
    v16 = *(_QWORD *)(v5 + 24);
    Strong = swift_unknownObjectWeakLoadStrong(v16 + 32);
    if (Strong)
    {
      v19 = Strong;
      v24 = v8;
      v20 = *(_QWORD *)(v16 + 40);
      swift_getObjectType(Strong, v18);
      v21 = v10;
      v22 = *(void (**)(__n128))(v20 + 64);
      v23 = swift_unknownObjectRetain(v16);
      v8 = v24;
      v22(v23);
      v10 = v21;
      swift_unknownObjectRelease(v16);
      swift_unknownObjectRelease(v19);
    }
    sub_1000866B0(v8, v9, v10, v11, v12, v25);
    return swift_release(v5);
  }
  return result;
}

objc_class *sub_1000831D4()
{
  uint64_t v0;
  void *v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  NSString v9;
  objc_class *v10;
  UIBarButtonItem v11;
  void *v12;
  id v13;
  UIImage_optional v15;
  UIAction_optional v16;
  UIMenu_optional v17;

  v1 = *(void **)(v0 + 168);
  if (v1)
  {
    v2 = *(objc_class **)(v0 + 168);
  }
  else
  {
    v3 = v0;
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v4 = swift_allocObject(&unk_1005EDC10, 24, 7);
    swift_weakInit(v4 + 16, v0);
    v5 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100086690, v4);
    sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
    v6._countAndFlagsBits = 0xD000000000000028;
    v6._object = (void *)0x8000000100561E60;
    v7._countAndFlagsBits = 0x6554206572616853;
    v7._object = (void *)0xEE006574616C706DLL;
    v8 = TTRLocalizedString(_:comment:)(v7, v6);
    v9 = String._bridgeToObjectiveC()();
    v10 = (objc_class *)objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v9);

    v15.value.super.isa = v10;
    v15.is_nil = v5;
    v16.value.super.super.isa = 0;
    v11.super.super.isa = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)v8, v15, v16, v17).super.super.isa;
    v12 = *(void **)(v3 + 168);
    *(UIBarButtonItem *)(v3 + 168) = v11;
    v2 = v11.super.super.isa;

    v1 = 0;
  }
  v13 = v1;
  return v2;
}

uint64_t sub_100083388(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  char v12[24];
  _OWORD v13[2];
  uint64_t v14;
  __int128 v15;
  char v16;

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)(result + 24);
    swift_unknownObjectRetain(v5);
    swift_release(v4);
    v14 = 0;
    memset(v13, 0, sizeof(v13));
    v15 = xmmword_1005218A0;
    v16 = 0;
    Strong = swift_unknownObjectWeakLoadStrong(v5 + 32);
    if (Strong)
    {
      v8 = Strong;
      v9 = *(_QWORD *)(v5 + 40);
      ObjectType = swift_getObjectType(Strong, v7);
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, _OWORD *, uint64_t, uint64_t))(v9 + 64))(v5, &off_1005EC008, 1, v13, ObjectType, v9);
      swift_unknownObjectRelease(v5);
      v11 = v8;
    }
    else
    {
      v11 = v5;
    }
    return swift_unknownObjectRelease(v11);
  }
  return result;
}

id sub_10008345C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 176);
  if (v1)
  {
    v2 = *(id *)(v0 + 176);
  }
  else
  {
    v3 = sub_1000834B4(v0);
    v4 = *(void **)(v0 + 176);
    *(_QWORD *)(v0 + 176) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

id sub_1000834B4(uint64_t a1)
{
  NSString v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  NSString v9;
  _QWORD v11[5];
  uint64_t v12;

  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v2);

  v4 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithImage:style:target:action:", v3, 0, 0, 0);
  v5 = swift_allocObject(&unk_1005EDC10, 24, 7);
  swift_weakInit(v5 + 16, a1);
  v11[4] = sub_1000866E8;
  v12 = v5;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_100081A10;
  v11[3] = &unk_1005EDC78;
  v6 = _Block_copy(v11);
  swift_release(v12);
  objc_msgSend(v4, "_setSecondaryActionsProvider:", v6);
  _Block_release(v6);
  v7 = v4;
  v8 = *(_QWORD *)(TTRAccesibility.RemindersList.Label.More.unsafeMutableAddressor() + 8);
  swift_bridgeObjectRetain(v8);
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  objc_msgSend(v7, "setAccessibilityLabel:", v9);

  return v7;
}

uint64_t sub_100083640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  _BYTE v14[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v14, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (!Strong)
    return 0;
  v5 = Strong;
  v6 = *(_QWORD *)(Strong + 24);
  swift_unknownObjectRetain(v6);
  swift_release(v5);
  v7 = swift_unknownObjectWeakLoadStrong(v6 + 32);
  if (!v7)
  {
    swift_unknownObjectRelease(v6);
    return 0;
  }
  v9 = v7;
  v10 = *(_QWORD *)(v6 + 40);
  ObjectType = swift_getObjectType(v7, v8);
  v12 = (*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v10 + 16))(v6, &off_1005EC008, ObjectType, v10);
  swift_unknownObjectRelease(v6);
  swift_unknownObjectRelease(v9);
  return v12;
}

objc_class *sub_100083700()
{
  uint64_t v0;
  void *v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  NSString v9;
  objc_class *v10;
  UIBarButtonItem v11;
  void *v12;
  id v13;
  UIImage_optional v15;
  UIAction_optional v16;
  UIMenu_optional v17;

  v1 = *(void **)(v0 + 184);
  if (v1)
  {
    v2 = *(objc_class **)(v0 + 184);
  }
  else
  {
    v3 = v0;
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v4 = swift_allocObject(&unk_1005EDC10, 24, 7);
    swift_weakInit(v4 + 16, v0);
    v5 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100086688, v4);
    sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
    v6._countAndFlagsBits = 0xD000000000000028;
    v6._object = (void *)0x8000000100561E60;
    v7._countAndFlagsBits = 0x6574616C706D6554;
    v7._object = (void *)0xE900000000000073;
    v8 = TTRLocalizedString(_:comment:)(v7, v6);
    v9 = String._bridgeToObjectiveC()();
    v10 = (objc_class *)objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v9);

    v15.value.super.isa = v10;
    v15.is_nil = v5;
    v16.value.super.super.isa = 0;
    v11.super.super.isa = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)v8, v15, v16, v17).super.super.isa;
    v12 = *(void **)(v3 + 184);
    *(UIBarButtonItem *)(v3 + 184) = v11;
    v2 = v11.super.super.isa;

    v1 = 0;
  }
  v13 = v1;
  return v2;
}

uint64_t sub_1000838AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  char v12[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)(result + 24);
    swift_unknownObjectRetain(v5);
    swift_release(v4);
    Strong = swift_unknownObjectWeakLoadStrong(v5 + 32);
    if (Strong)
    {
      v8 = Strong;
      v9 = *(_QWORD *)(v5 + 40);
      ObjectType = swift_getObjectType(Strong, v7);
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v9 + 80))(v5, &off_1005EC008, ObjectType, v9);
      swift_unknownObjectRelease(v5);
      v11 = v8;
    }
    else
    {
      v11 = v5;
    }
    return swift_unknownObjectRelease(v11);
  }
  return result;
}

uint64_t sub_10008395C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 192);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 192);
  }
  else
  {
    v2 = sub_1000839B8(v0);
    v3 = *(_QWORD *)(v0 + 192);
    *(_QWORD *)(v0 + 192) = v2;
    swift_retain(v2);
    swift_release(v3);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t sub_1000839B8(uint64_t a1)
{
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2._countAndFlagsBits = 0xD000000000000022;
  v2._object = (void *)0x8000000100561F60;
  v3._countAndFlagsBits = 0x2065754420746553;
  v3._object = (void *)0xEC00000065746144;
  v4 = TTRLocalizedString(_:comment:)(v3, v2);
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v5);

  v7 = swift_allocObject(&unk_1005EDC10, 24, 7);
  swift_weakInit(v7 + 16, a1);
  v8 = type metadata accessor for CenterBarButtonItemGroupWithMenuRepresentation();
  swift_allocObject(v8, 56, 7);
  v9 = sub_1000866F0(0, v4._countAndFlagsBits, v4._object, v6, (uint64_t)sub_100086C64, v7);

  swift_release(v7);
  return v9;
}

uint64_t sub_100083AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 200);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 200);
  }
  else
  {
    v2 = sub_100083B44(v0);
    v3 = *(_QWORD *)(v0 + 200);
    *(_QWORD *)(v0 + 200) = v2;
    swift_retain(v2);
    swift_release(v3);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t sub_100083B44(uint64_t a1)
{
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2._object = (void *)0x8000000100561F60;
  v3._countAndFlagsBits = 0x61636F4C20746553;
  v3._object = (void *)0xEC0000006E6F6974;
  v2._countAndFlagsBits = 0xD000000000000022;
  v4 = TTRLocalizedString(_:comment:)(v3, v2);
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v5);

  v7 = swift_allocObject(&unk_1005EDC10, 24, 7);
  swift_weakInit(v7 + 16, a1);
  v8 = type metadata accessor for CenterBarButtonItemGroupWithMenuRepresentation();
  swift_allocObject(v8, 56, 7);
  v9 = sub_1000866F0(1, v4._countAndFlagsBits, v4._object, v6, (uint64_t)sub_100086CB0, v7);

  swift_release(v7);
  return v9;
}

uint64_t sub_100083C6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  Swift::String_optional v6;
  Class isa;
  uint64_t v8;
  uint64_t v9;
  UIImage_optional v11;
  UIAction_optional v12;
  UIMenu_optional v13;

  v1 = *(_QWORD *)(v0 + 208);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 208);
  }
  else
  {
    v3 = v0;
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v4 = swift_allocObject(&unk_1005EDC10, 24, 7);
    swift_weakInit(v4 + 16, v0);
    v5 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100086CD0, v4);
    v12.is_nil = sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
    v6.value._countAndFlagsBits = 0;
    v6.value._object = (void *)0xE000000000000000;
    v11.value.super.isa = 0;
    v11.is_nil = v5;
    v12.value.super.super.isa = 0;
    isa = UIBarButtonItem.init(title:image:primaryAction:menu:)(v6, v11, v12, v13).super.super.isa;
    v8 = type metadata accessor for CenterBarButtonItemGroup();
    v2 = swift_allocObject(v8, 40, 7);
    *(_BYTE *)(v2 + 16) = 2;
    *(_QWORD *)(v2 + 24) = isa;
    *(_QWORD *)(v2 + 32) = 0;
    v9 = *(_QWORD *)(v3 + 208);
    *(_QWORD *)(v3 + 208) = v2;
    swift_retain(v2);
    swift_release(v9);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t sub_100083DA0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  result = swift_weakLoadStrong(v4);
  if (result)
  {
    v6 = result;
    v7 = *(_QWORD *)(result + 24);
    swift_unknownObjectRetain(v7);
    v8 = swift_release(v6);
    a3(v8);
    return swift_unknownObjectRelease(v7);
  }
  return result;
}

uint64_t sub_100083E18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 216);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 216);
  }
  else
  {
    v2 = sub_100083E74(v0);
    v3 = *(_QWORD *)(v0 + 216);
    *(_QWORD *)(v0 + 216) = v2;
    swift_retain(v2);
    swift_release(v3);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t sub_100083E74(uint64_t a1)
{
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2._object = (void *)0x8000000100561F60;
  v3._countAndFlagsBits = 0x67616D4920646441;
  v3._object = (void *)0xE900000000000065;
  v2._countAndFlagsBits = 0xD000000000000022;
  v4 = TTRLocalizedString(_:comment:)(v3, v2);
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v5);

  v7 = swift_allocObject(&unk_1005EDC10, 24, 7);
  swift_weakInit(v7 + 16, a1);
  v8 = type metadata accessor for CenterBarButtonItemGroupWithMenuRepresentation();
  swift_allocObject(v8, 56, 7);
  v9 = sub_1000866F0(3, v4._countAndFlagsBits, v4._object, v6, (uint64_t)sub_100086CF0, v7);

  swift_release(v7);
  return v9;
}

uint64_t sub_100083F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 224);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 224);
  }
  else
  {
    v2 = sub_100083FF0(v0);
    v3 = *(_QWORD *)(v0 + 224);
    *(_QWORD *)(v0 + 224) = v2;
    swift_retain(v2);
    swift_release(v3);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t sub_100083FF0(uint64_t a1)
{
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2._object = (void *)0x8000000100561F60;
  v3._countAndFlagsBits = 0x67615420646441;
  v3._object = (void *)0xE700000000000000;
  v2._countAndFlagsBits = 0xD000000000000022;
  v4 = TTRLocalizedString(_:comment:)(v3, v2);
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v5);

  v7 = swift_allocObject(&unk_1005EDC10, 24, 7);
  swift_weakInit(v7 + 16, a1);
  v8 = type metadata accessor for CenterBarButtonItemGroupWithMenuRepresentation();
  swift_allocObject(v8, 56, 7);
  v9 = sub_1000866F0(4, v4._countAndFlagsBits, v4._object, v6, (uint64_t)sub_100086D10, v7);

  swift_release(v7);
  return v9;
}

uint64_t sub_10008410C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 232);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 232);
  }
  else
  {
    v2 = sub_100084168(v0);
    v3 = *(_QWORD *)(v0 + 232);
    *(_QWORD *)(v0 + 232) = v2;
    swift_retain(v2);
    swift_release(v3);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t sub_100084168(uint64_t a1)
{
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2._object = (void *)0x8000000100561F60;
  v3._countAndFlagsBits = 0x6E6769737341;
  v3._object = (void *)0xE600000000000000;
  v2._countAndFlagsBits = 0xD000000000000022;
  v4 = TTRLocalizedString(_:comment:)(v3, v2);
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v5);

  v7 = swift_allocObject(&unk_1005EDC10, 24, 7);
  swift_weakInit(v7 + 16, a1);
  v8 = type metadata accessor for CenterBarButtonItemGroupWithMenuRepresentation();
  swift_allocObject(v8, 56, 7);
  v9 = sub_1000866F0(5, v4._countAndFlagsBits, v4._object, v6, (uint64_t)sub_100086D30, v7);

  swift_release(v7);
  return v9;
}

uint64_t sub_100084280(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (!Strong)
    return 0;
  v5 = Strong;
  v6 = *(_QWORD *)(Strong + 24);
  swift_unknownObjectRetain(v6);
  v7 = swift_release(v5);
  v8 = a2(v7);
  swift_unknownObjectRelease(v6);
  return v8;
}

uint64_t sub_100084308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void *v6;
  id v7;
  Swift::String_optional v8;
  Class isa;
  uint64_t v10;
  uint64_t v11;
  UIImage_optional v13;
  UIAction_optional v14;
  UIMenu_optional v15;

  v1 = *(_QWORD *)(v0 + 240);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 240);
  }
  else
  {
    v3 = v0;
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v4 = swift_allocObject(&unk_1005EDC10, 24, 7);
    swift_weakInit(v4 + 16, v0);
    v5 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100086D50, v4);
    sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
    v6 = *(void **)TTRCommonAsset.Image.sectionIcon.unsafeMutableAddressor();
    v7 = v6;
    v8.value._countAndFlagsBits = 0;
    v8.value._object = (void *)0xE000000000000000;
    v13.value.super.isa = (Class)v6;
    v13.is_nil = v5;
    v14.value.super.super.isa = 0;
    isa = UIBarButtonItem.init(title:image:primaryAction:menu:)(v8, v13, v14, v15).super.super.isa;
    v10 = type metadata accessor for CenterBarButtonItemGroup();
    v2 = swift_allocObject(v10, 40, 7);
    *(_BYTE *)(v2 + 16) = 6;
    *(_QWORD *)(v2 + 24) = isa;
    *(_QWORD *)(v2 + 32) = 0;
    v11 = *(_QWORD *)(v3 + 240);
    *(_QWORD *)(v3 + 240) = v2;
    swift_retain(v2);
    swift_release(v11);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t sub_100084448(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  char v11[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)(result + 24);
    swift_unknownObjectRetain(v5);
    swift_release(v4);
    if ((*(_BYTE *)(v5
                   + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_shouldIgnoreCenterItemActions) & 1) == 0)
    {
      Strong = swift_unknownObjectWeakLoadStrong(v5 + 32);
      if (Strong)
      {
        v8 = Strong;
        v9 = *(_QWORD *)(v5 + 40);
        ObjectType = swift_getObjectType(Strong, v7);
        (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v9 + 120))(v5, &off_1005EC008, ObjectType, v9);
        swift_unknownObjectRelease(v5);
        v5 = v8;
      }
    }
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

uint64_t sub_100084504()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));

  sub_100085FB0(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  swift_release(*(_QWORD *)(v0 + 88));

  swift_release(*(_QWORD *)(v0 + 192));
  swift_release(*(_QWORD *)(v0 + 200));
  swift_release(*(_QWORD *)(v0 + 208));
  swift_release(*(_QWORD *)(v0 + 216));
  swift_release(*(_QWORD *)(v0 + 224));
  swift_release(*(_QWORD *)(v0 + 232));
  swift_release(*(_QWORD *)(v0 + 240));
  return v0;
}

uint64_t sub_1000845D8()
{
  uint64_t v0;

  sub_100084504();
  return swift_deallocClassInstance(v0, 248, 7);
}

uint64_t type metadata accessor for TTRIRemindersListNavigationBarController()
{
  return objc_opt_self(_TtC9Reminders40TTRIRemindersListNavigationBarController);
}

double sub_100084618(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  int v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;

  v3 = v2;
  v6 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = a1;

  v7 = (void *)objc_opt_self(UIDevice);
  v8 = a1;
  v9 = objc_msgSend(v7, "currentDevice");
  v10 = objc_msgSend(v9, "userInterfaceIdiom");

  if (v10 == (id)1)
    objc_msgSend(v8, "setStyle:", 1);
  objc_msgSend(v8, "setLeftItemsSupplementBackButton:", 1);
  v11 = objc_msgSend(a2, "traitCollection");
  v12 = *(unsigned __int8 *)(v3 + 16);
  v13 = objc_msgSend(v11, "horizontalSizeClass");
  if (v12 != (v13 == (id)1))
  {
    *(_BYTE *)(v3 + 16) = v13 == (id)1;
    sub_10004BD64(0xD00000000000001ALL, 0x8000000100561FB0);
  }

  v14 = sub_10002A750(&qword_1006415F0);
  v15 = swift_allocObject(v14, 48, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100520250;
  *(_QWORD *)(v15 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v15 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  v16 = swift_allocObject(&unk_1005EDC10, 24, 7);
  swift_weakInit(v16 + 16, v3);
  v17 = sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
  v18 = UIViewController.registerForTraitChanges<A>(_:handler:)(v15, sub_100086D58, v16, v17);
  swift_bridgeObjectRelease(v15);
  swift_release();
  v19 = swift_allocObject(&unk_1005EDD50, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, a2);
  v20 = swift_allocObject(&unk_1005EDD78, 32, 7);
  *(_QWORD *)(v20 + 16) = v19;
  *(_QWORD *)(v20 + 24) = v18;
  v21 = type metadata accessor for AnyCancellable(0);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  *(_QWORD *)(v3 + 88) = AnyCancellable.init(_:)(sub_100086DB0, v20);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_100084858(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  id v7;
  int v8;
  id v9;
  _BYTE v10[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v10, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    v7 = objc_msgSend(a1, "traitCollection");
    v8 = *(unsigned __int8 *)(v6 + 16);
    v9 = objc_msgSend(v7, "horizontalSizeClass");
    if (v8 != (v9 == (id)1))
    {
      *(_BYTE *)(v6 + 16) = v9 == (id)1;
      sub_10004BD64(0xD00000000000001ALL, 0x8000000100561FB0);
    }
    swift_release();

  }
}

void sub_100084920(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    UIViewController.unregisterForTraitChanges(_:)(a2);

  }
}

uint64_t sub_100084978(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  char v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  NSString v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  unsigned __int16 *v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  objc_class *v53;
  uint64_t v54;
  unsigned int v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  objc_class *v59;
  objc_class *v60;
  uint64_t v61;
  uint64_t v62;
  objc_class *v63;
  _QWORD *v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  id v69;
  id v70;
  char v71;
  void *v72;
  uint64_t v73;
  void *v74;
  id v75;
  id v76;
  void *v77;
  id v78;
  uint64_t v79;
  _QWORD *v80;
  unsigned __int8 v81;
  uint64_t v82;
  id v83;
  id v84;
  Class isa;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  id v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  Class v96;
  id v97;
  unint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  Class v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  Class v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v115;
  uint64_t v116;
  char *v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  uint64_t v124;
  __int128 v125;
  __int128 v126;
  unint64_t aBlock[5];
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132[8];
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v2 = v1;
  v4 = *(_BYTE *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 32);
  v124 = *(_QWORD *)(a1 + 24);
  v8 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (void *)v2[5];
  if (!v11)
  {
    if (qword_10063D328 != -1)
      swift_once(&qword_10063D328, sub_1000822A4);
    v22 = type metadata accessor for Logger(0);
    v23 = sub_100012DC4(v22, (uint64_t)qword_1006412C0);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.fault.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "TTRIRemindersListNavigationBarController#updateNavigationBarConfiguration: navigationItem is unexpectedly nil", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

    goto LABEL_10;
  }
  v117 = v10;
  v123 = v11;
  v12 = v4 & 1;
  v13 = v2[6];
  v14 = v2[7];
  v15 = v2[8];
  v16 = v2[9];
  v17 = v2[10];
  v130 = v7;
  v131 = v6;
  v121 = v6;
  v120 = v7;
  v119 = v12;
  if (v14)
  {
    v132[0] = v13 & 1;
    v133 = v14;
    v134 = v15;
    v135 = v16;
    v136 = v17;
    v18 = v13;
    v19 = v15;
    sub_100086514(v18, v14, v15, v16, v17);
    *(_QWORD *)&v126 = v123;
    sub_10002DF4C(&v131);
    swift_bridgeObjectRetain(v5);
    v20 = v124;
    swift_bridgeObjectRetain(v124);
    sub_10002DF4C(&v130);
    v21 = sub_1004FD5D0((uint64_t)v132, a1);
    sub_1000522B0(&v131);
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(v5);
    sub_1000522B0(&v130);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v14);
    if ((v21 & 1) != 0)
    {

LABEL_10:
      v27 = 0;
      return v27 & 1;
    }
  }
  else
  {
    *(_QWORD *)&v126 = v15;
    v28 = v123;
    sub_10002DF4C(&v131);
    swift_bridgeObjectRetain(v5);
    v29 = v124;
    swift_bridgeObjectRetain(v124);
    sub_10002DF4C(&v130);
    sub_100085FB0(v13, 0, v126, v16, v17);
    sub_100085FB0(v12, v6, v5, v29, v7);
  }
  v122 = v5;
  v30 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v31 = objc_msgSend(v30, "userInterfaceIdiom");

  v32 = v131;
  aBlock[0] = (unint64_t)_swiftEmptyArrayStorage;
  v33 = *(_QWORD *)(v131 + 16);
  if (v33)
  {
    *(_QWORD *)&v126 = v31;
    sub_10002DF4C(&v131);
    v34 = v32 + 34;
    do
    {
      sub_1000869C4(*(_BYTE *)(v34 - 2));
      v36 = v35;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
      v38 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      v37 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v38 >= v37 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1);
      v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v36);
      specialized Array._endMutation()(v39);
      v34 += 3;
      --v33;
    }
    while (v33);
    v40 = aBlock[0];
    v31 = (id)v126;
  }
  else
  {
    sub_10002DF4C(&v131);
    v40 = (uint64_t)_swiftEmptyArrayStorage;
  }
  sub_1000522B0(&v131);
  v41 = v122;
  if (v31 == (id)1)
  {
    v42 = v123;
    if ((unint64_t)v40 >> 62)
    {
      if (v40 < 0)
        v86 = v40;
      else
        v86 = v40 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v40);
      v43 = (NSString)_CocoaArrayWrapper.endIndex.getter(v86);
      swift_bridgeObjectRelease(v40);
      if (!v43)
        goto LABEL_23;
    }
    else
    {
      v43 = *(NSString *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v43)
      {
LABEL_23:
        objc_msgSend(v42, "setCustomizationIdentifier:", v43);

        goto LABEL_24;
      }
    }
    v43 = String._bridgeToObjectiveC()();
    goto LABEL_23;
  }
LABEL_24:
  v118 = v40;
  swift_bridgeObjectRetain(v41);
  swift_retain(v2);
  v44 = sub_100086000(v41, (uint64_t)v2, v31 == (id)1);
  swift_bridgeObjectRelease(v41);
  swift_release(v2);
  v45 = v124;
  swift_bridgeObjectRetain(v124);
  swift_retain(v2);
  v46 = (uint64_t)sub_100086380(v45);
  swift_bridgeObjectRelease(v45);
  swift_release(v2);
  aBlock[0] = (unint64_t)_swiftEmptyArrayStorage;
  v47 = *(_QWORD *)(v130 + 16);
  if (v47)
  {
    v115 = v44;
    v48 = v31;
    v116 = v46;
    v49 = (unsigned __int16 *)(v130 + 32);
    swift_bridgeObjectRetain_n(v130, 2);
    v50 = 0;
    v126 = xmmword_100521140;
    v125 = xmmword_10051FF90;
    do
    {
      v56 = *v49++;
      v55 = v56;
      if (v56 == 2)
      {
        v51 = sub_10002A750((uint64_t *)&unk_1006415A0);
        v52 = swift_allocObject(v51, 40, 7);
        *(_OWORD *)(v52 + 16) = v126;
        v53 = sub_1000827D4();
        *(_QWORD *)(v52 + 32) = v53;
        v129 = v52;
        specialized Array._endMutation()(v53);
        v54 = v129;
        v50 = 1;
      }
      else
      {
        v57 = v55 & 1;
        v58 = (v55 >> 8) & 1;
        v59 = sub_10008298C();
        -[objc_class setEnabled:](v59, "setEnabled:", v57);

        v60 = sub_100082B2C();
        -[objc_class setEnabled:](v60, "setEnabled:", v58);

        v61 = sub_10002A750((uint64_t *)&unk_1006415A0);
        v62 = swift_allocObject(v61, 48, 7);
        *(_OWORD *)(v62 + 16) = v125;
        *(_QWORD *)(v62 + 32) = sub_10008298C();
        v63 = sub_100082B2C();
        *(_QWORD *)(v62 + 40) = v63;
        v129 = v62;
        specialized Array._endMutation()(v63);
        v54 = v129;
      }
      sub_100450370(v54);
      --v47;
    }
    while (v47);
    sub_1000522B0(&v130);
    sub_1000522B0(&v130);
    v64 = (_QWORD *)aBlock[0];
    v65 = v48 == (id)1;
    v41 = v122;
    v46 = v116;
    v44 = v115;
    if (!v65)
      goto LABEL_36;
  }
  else
  {
    v50 = 0;
    v64 = _swiftEmptyArrayStorage;
    if (v31 != (id)1)
    {
LABEL_36:
      aBlock[0] = (unint64_t)v44;
      sub_100450370(v46);
      v27 = 0;
      v69 = v123;
      goto LABEL_58;
    }
  }
  v66 = sub_10002A750(&qword_10063F578);
  v67 = (uint64_t)v117;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v117, 5, 5, v66);
  swift_bridgeObjectRetain(v41);
  v68 = sub_100081AD8(v67, v41);
  sub_10001F544(v67, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
  swift_bridgeObjectRelease(v41);
  v69 = v123;
  v70 = objc_msgSend(v123, "additionalOverflowItems");

  v71 = v68 ^ (v70 == 0);
  if ((v71 & 1) == 0)
  {
    if ((v68 & 1) != 0)
    {
      v72 = (void *)objc_opt_self(UIDeferredMenuElement);
      v73 = swift_allocObject(&unk_1005EDC10, 24, 7);
      swift_weakInit(v73 + 16, v2);
      aBlock[4] = (unint64_t)sub_10008650C;
      v128 = v73;
      aBlock[0] = (unint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (unint64_t)sub_100085A2C;
      aBlock[3] = (unint64_t)&unk_1005EDC28;
      v74 = _Block_copy(aBlock);
      swift_release(v128);
      v75 = objc_msgSend(v72, "elementWithUncachedProvider:", v74);
      _Block_release(v74);
    }
    else
    {
      v75 = 0;
    }
    objc_msgSend(v69, "setAdditionalOverflowItems:", v75);

  }
  aBlock[0] = (unint64_t)v44;
  v76 = objc_msgSend(v69, "_dci_fixedTrailingGroup");
  if (v76)
  {
    v77 = v76;
    v78 = objc_msgSend(v76, "barButtonItems");

    v79 = sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
    v80 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v78, v79);

  }
  else
  {
    v80 = _swiftEmptyArrayStorage;
  }
  v81 = sub_1000965CC((uint64_t)v80, v46);
  swift_bridgeObjectRelease(v80);
  if ((v81 & 1) != 0)
  {
    v82 = v46;
    v27 = v71 ^ 1;
    swift_bridgeObjectRelease(v82);
    goto LABEL_58;
  }
  if ((unint64_t)v46 >> 62)
  {
    if (v46 < 0)
      v87 = v46;
    else
      v87 = v46 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v46);
    v83 = (id)_CocoaArrayWrapper.endIndex.getter(v87);
    swift_bridgeObjectRelease(v46);
    if (v83)
      goto LABEL_46;
LABEL_56:
    swift_bridgeObjectRelease(v46);
    goto LABEL_57;
  }
  v83 = *(id *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v83)
    goto LABEL_56;
LABEL_46:
  v84 = objc_allocWithZone((Class)UIBarButtonItemGroup);
  sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v46);
  v83 = objc_msgSend(v84, "initWithBarButtonItems:representativeItem:", isa, 0);

LABEL_57:
  objc_msgSend(v69, "_dci_setFixedTrailingGroup:", v83);

  v27 = 1;
LABEL_58:
  v88 = aBlock[0];
  v89 = sub_1002ABDA0(aBlock[0]);
  swift_bridgeObjectRelease(v88);
  swift_retain(v89);
  v90 = objc_msgSend(v69, "rightBarButtonItems");
  if (!v90)
  {
    swift_release(v89);
    v95 = v121;
    goto LABEL_62;
  }
  v91 = v90;
  v92 = sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
  v93 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v91, v92);

  v94 = swift_bridgeObjectRetain(v93);
  LOBYTE(v91) = sub_1000965CC(v94, (unint64_t)v89);
  swift_bridgeObjectRelease_n(v93, 2);
  swift_release(v89);
  v95 = v121;
  if ((v91 & 1) == 0)
  {
LABEL_62:
    sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
    v96 = Array._bridgeToObjectiveC()().super.isa;
    swift_release(v89);
    objc_msgSend(v69, "setRightBarButtonItems:", v96);

    v27 = 1;
    goto LABEL_63;
  }
  swift_release(v89);
LABEL_63:
  if ((v50 & 1) != objc_msgSend(v69, "hidesBackButton"))
  {
    objc_msgSend(v69, "setHidesBackButton:");
    v27 = 1;
  }
  v97 = objc_msgSend(v69, "leftBarButtonItems");
  v98 = v118;
  if (!v97)
    goto LABEL_68;
  v99 = v97;
  v100 = sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
  v101 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v99, v100);

  swift_bridgeObjectRetain(v64);
  v102 = swift_bridgeObjectRetain(v101);
  LOBYTE(v99) = sub_1000965CC(v102, (unint64_t)v64);
  swift_bridgeObjectRelease_n(v101, 2);
  swift_bridgeObjectRelease(v64);
  if ((v99 & 1) != 0)
  {
    swift_bridgeObjectRelease(v64);
  }
  else
  {
LABEL_68:
    sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
    v103 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v64);
    objc_msgSend(v69, "setLeftBarButtonItems:", v103);

    v27 = 1;
  }
  v104 = objc_msgSend(v69, "centerItemGroups");
  v105 = sub_100005ED8(0, (unint64_t *)&unk_1006415B0, UIBarButtonItemGroup_ptr);
  v106 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v104, v105);

  LOBYTE(v104) = sub_1000965E0(v106, v98);
  swift_bridgeObjectRelease(v106);
  if ((v104 & 1) != 0)
  {
    swift_bridgeObjectRelease(v98);
  }
  else
  {
    v107 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v98);
    objc_msgSend(v69, "setCenterItemGroups:", v107);

    v27 = 1;
  }
  v108 = v2[6];
  v109 = v2[7];
  v110 = v2[8];
  v111 = v2[9];
  v112 = v2[10];
  v2[6] = v119;
  v2[7] = v95;
  v113 = v124;
  v2[8] = v41;
  v2[9] = v113;
  v2[10] = v120;
  sub_100085FB0(v108, v109, v110, v111, v112);
  sub_10002DF4C(&v131);
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRetain(v113);
  sub_10002DF4C(&v130);

  return v27 & 1;
}

uint64_t sub_1000855E0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = *(void **)(v0 + 32);
  if (!v1)
    __asm { BR              X12 }
  v2 = *(_QWORD *)(v0 + 32);
  v3 = v1;
  return v2;
}

uint64_t sub_100085790(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  char v11[24];
  _OWORD v12[2];
  uint64_t v13;
  __int128 v14;
  char v15;

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)(result + 24);
    swift_unknownObjectRetain(v4);
    swift_release(v3);
    v13 = 0;
    memset(v12, 0, sizeof(v12));
    v14 = xmmword_1005218A0;
    v15 = 0;
    Strong = swift_unknownObjectWeakLoadStrong(v4 + 32);
    if (Strong)
    {
      v7 = Strong;
      v8 = *(_QWORD *)(v4 + 40);
      ObjectType = swift_getObjectType(Strong, v6);
      (*(void (**)(uint64_t, _UNKNOWN **, _QWORD, _OWORD *, uint64_t, uint64_t))(v8 + 64))(v4, &off_1005EC008, 0, v12, ObjectType, v8);
      swift_unknownObjectRelease(v4);
      v10 = v7;
    }
    else
    {
      v10 = v4;
    }
    return swift_unknownObjectRelease(v10);
  }
  return result;
}

uint64_t sub_100085864(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  void *v13;
  id v14;
  uint64_t v15;
  _QWORD *preferredElementSize;
  Swift::String v17;
  Class isa;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  Swift::OpaquePointer v23;
  uint64_t v24;
  _BYTE v25[24];
  UIImage_optional v26;

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v25, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (!Strong)
    goto LABEL_6;
  v6 = Strong;
  v7 = *(_QWORD *)(Strong + 24);
  swift_unknownObjectRetain(v7);
  swift_release(v6);
  v8 = swift_unknownObjectWeakLoadStrong(v7 + 32);
  if (!v8)
  {
    swift_unknownObjectRelease(v7);
    goto LABEL_6;
  }
  v10 = v8;
  v11 = *(_QWORD *)(v7 + 40);
  ObjectType = swift_getObjectType(v8, v9);
  v13 = (void *)(*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v11 + 16))(v7, &off_1005EC008, ObjectType, v11);
  swift_unknownObjectRelease(v7);
  swift_unknownObjectRelease(v10);
  if (!v13)
  {
LABEL_6:
    preferredElementSize = _swiftEmptyArrayStorage;
    goto LABEL_7;
  }
  v14 = objc_msgSend(v13, "children");

  v15 = sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
  preferredElementSize = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

LABEL_7:
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v26.value.super.isa = 0;
  v26.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v17, (Swift::String_optional)0, v26, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, v23).super.super.isa;
  v19 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v20 = swift_allocObject(v19, 40, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100521140;
  *(_QWORD *)(v20 + 32) = isa;
  v24 = v20;
  specialized Array._endMutation()(v20);
  v21 = isa;
  a1(v24);

  return swift_bridgeObjectRelease(v24);
}

uint64_t sub_100085A2C(uint64_t a1, void *aBlock)
{
  uint64_t v2;
  void (*v3)(void (*)(uint64_t), uint64_t);
  void *v4;
  uint64_t v5;

  v3 = *(void (**)(void (*)(uint64_t), uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = _Block_copy(aBlock);
  v5 = swift_allocObject(&unk_1005EDC60, 24, 7);
  *(_QWORD *)(v5 + 16) = v4;
  swift_retain(v2);
  v3(sub_100086590, v5);
  swift_release(v2);
  return swift_release(v5);
}

void sub_100085A9C(uint64_t a1, uint64_t a2)
{
  Class isa;

  sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class))(a2 + 16))(a2, isa);

}

uint64_t sub_100085B00()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for CenterBarButtonItemGroup()
{
  return objc_opt_self(_TtC9RemindersP33_663704D3E777F64601D36DCCF957DC0B24CenterBarButtonItemGroup);
}

void sub_100085B4C(void (*a1)(_QWORD *), uint64_t a2, uint64_t (*a3)(void))
{
  void *v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;

  v4 = (void *)a3();
  v8 = v4;
  if (v4)
  {
    v5 = objc_msgSend(v4, "children");
    v6 = sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
    v7 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  }
  else
  {
    v7 = _swiftEmptyArrayStorage;
  }
  a1(v7);
  swift_bridgeObjectRelease(v7);

}

uint64_t sub_100085BF4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = *(void **)(v0 + 40);
  if (!v1)
    __asm { BR              X12 }
  v2 = *(_QWORD *)(v0 + 40);
  v3 = v1;
  return v2;
}

uint64_t sub_100085DA4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = *(void **)(v0 + 48);
  if (!v1)
    __asm { BR              X12 }
  v2 = *(_QWORD *)(v0 + 48);
  v3 = v1;
  return v2;
}

uint64_t sub_100085F54()
{
  id *v0;

  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for CenterBarButtonItemGroupWithMenuRepresentation()
{
  return objc_opt_self(_TtC9RemindersP33_663704D3E777F64601D36DCCF957DC0B46CenterBarButtonItemGroupWithMenuRepresentation);
}

uint64_t sub_100085FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(a4);
    return swift_bridgeObjectRelease(a5);
  }
  return result;
}

_QWORD *sub_100086000(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD v15[3];
  uint64_t v16;
  int v17;
  char *v18;
  _QWORD *v19;

  v17 = a3;
  v16 = type metadata accessor for TTRSharedWithYouHighlight(0);
  __chkstk_darwin(v16);
  v18 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem(0);
  __chkstk_darwin(v6);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = _swiftEmptyArrayStorage;
  v19 = _swiftEmptyArrayStorage;
  if (*(_QWORD *)(a1 + 16))
  {
    v15[0] = v3;
    v11 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v12 = *(_QWORD *)(v7 + 72);
    swift_bridgeObjectRetain(a1);
    v15[1] = a1;
    v15[2] = v12;
    sub_10002B1E8(v11, (uint64_t)v9, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
    v13 = sub_10002A750(&qword_10063F578);
    v14 = (char *)&loc_100086164
        + *((int *)qword_100086368
          + (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v9, 5, v13));
    __asm { BR              X9 }
  }
  return result;
}

_QWORD *sub_100086380(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_class *v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  result = _swiftEmptyArrayStorage;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain(a1);
    v4 = (uint64_t *)(a1 + 40);
    while (1)
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      if (!*v4)
        break;
      if (v6 != 1)
      {
        swift_bridgeObjectRetain(*v4);
        v8 = sub_1000825F4();
        v11 = String._bridgeToObjectiveC()();
        -[objc_class setTitle:](v8, "setTitle:", v11);

        v9 = v5;
        v10 = v6;
        goto LABEL_8;
      }
      v7 = (uint64_t)sub_100082334();
      v8 = (objc_class *)v7;
LABEL_9:
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
      v13 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v13 >= v12 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
      v4 += 2;
      v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v8);
      specialized Array._endMutation()(v14);
      if (!--v3)
      {
        swift_bridgeObjectRelease(a1);
        return _swiftEmptyArrayStorage;
      }
    }
    v8 = sub_1000824EC();
    v9 = v5;
    v10 = 0;
LABEL_8:
    v7 = sub_10004E038(v9, v10);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1000864E8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10008650C(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  return sub_100085864(a1, a2, v2);
}

uint64_t sub_100086514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a3);
    swift_bridgeObjectRetain(a4);
    return swift_bridgeObjectRetain(a5);
  }
  return result;
}

uint64_t sub_100086564(uint64_t a1)
{
  uint64_t v1;

  return sub_1000828DC(a1, v1);
}

uint64_t sub_10008656C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_100086590(uint64_t a1)
{
  uint64_t v1;

  sub_100085A9C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100086598(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRSharedWithYouHighlight(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000865DC(uint64_t a1)
{
  uint64_t v1;

  return sub_100083DA0(a1, v1, (void (*)(uint64_t))sub_10004B9B0);
}

uint64_t sub_1000865FC(uint64_t a1)
{
  uint64_t v1;

  return sub_100083DA0(a1, v1, (void (*)(uint64_t))sub_10004B994);
}

uint64_t sub_10008661C(uint64_t a1)
{
  uint64_t v1;

  return sub_100082724(a1, v1);
}

uint64_t sub_100086634(uint64_t a1)
{
  uint64_t v1;

  return sub_10008243C(a1, v1);
}

uint64_t sub_10008663C()
{
  uint64_t v0;

  return sub_100085790(v0);
}

unint64_t sub_100086644()
{
  unint64_t result;

  result = qword_1006415E0;
  if (!qword_1006415E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRCollaborationDetailView, &type metadata for TTRCollaborationDetailView);
    atomic_store(result, (unint64_t *)&qword_1006415E0);
  }
  return result;
}

uint64_t sub_100086688(uint64_t a1)
{
  uint64_t v1;

  return sub_1000838AC(a1, v1);
}

uint64_t sub_100086690(uint64_t a1)
{
  uint64_t v1;

  return sub_100083388(a1, v1);
}

uint64_t sub_1000866A8(void *a1)
{
  uint64_t v1;

  return sub_100083020(a1, v1);
}

void sub_1000866B0(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if ((~a6 & 0xFE) != 0)
    sub_1000866C4(a1, a2, a3, a4, a5, a6);
}

void sub_1000866C4(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  unsigned int v6;

  v6 = a6 >> 6;
  if (v6 == 2)
  {
    swift_unknownObjectRelease(a1);
  }
  else if (v6 <= 1)
  {

  }
}

uint64_t sub_1000866E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100083640(a1, a2, v2);
}

uint64_t sub_1000866F0(char a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  Swift::String_optional v13;
  Class isa;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  UIMenuElementSize preferredElementSize;
  id v26;
  id v27;
  Swift::String v28;
  Class v29;
  id v30;
  Swift::String_optional v31;
  Class v32;
  Swift::OpaquePointer v34;
  id v35;
  void **aBlock;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  UIImage_optional v42;
  UIImage_optional v43;
  UIAction_optional v44;
  UIImage_optional v45;
  UIAction_optional v46;
  UIMenu_optional v47;
  UIMenu_optional v48;

  v7 = v6;
  *(_QWORD *)(v6 + 40) = 0;
  *(_QWORD *)(v6 + 48) = 0;
  *(_BYTE *)(v6 + 16) = a1;
  sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
  v35 = a4;
  swift_bridgeObjectRetain(a3);
  v13.value._countAndFlagsBits = a2;
  v13.value._object = a3;
  v42.value.super.isa = (Class)a4;
  v42.is_nil = 0;
  v44.value.super.super.isa = 0;
  isa = UIBarButtonItem.init(title:image:primaryAction:menu:)(v13, v42, v44, v47).super.super.isa;
  v15 = swift_allocObject(&unk_1005EDCB0, 32, 7);
  *(_QWORD *)(v15 + 16) = a5;
  *(_QWORD *)(v15 + 24) = a6;
  v40 = sub_10001B280;
  v41 = v15;
  aBlock = _NSConcreteStackBlock;
  v37 = 1107296256;
  v38 = sub_100081A10;
  v39 = &unk_1005EDCC8;
  v16 = _Block_copy(&aBlock);
  v17 = v41;
  swift_retain(a6);
  -[objc_class _setSecondaryActionsProvider:](isa, "_setSecondaryActionsProvider:", v16, swift_release(v17).n128_f64[0]);
  _Block_release(v16);
  v18 = (void *)objc_opt_self(UIDeferredMenuElement);
  v19 = swift_allocObject(&unk_1005EDD00, 32, 7);
  *(_QWORD *)(v19 + 16) = a5;
  *(_QWORD *)(v19 + 24) = a6;
  v40 = sub_100086CA8;
  v41 = v19;
  aBlock = _NSConcreteStackBlock;
  v37 = 1107296256;
  v38 = sub_100085A2C;
  v39 = &unk_1005EDD18;
  v20 = _Block_copy(&aBlock);
  v21 = v41;
  swift_retain(a6);
  v22 = objc_msgSend(v18, "elementWithUncachedProvider:", v20, swift_release(v21).n128_f64[0]);
  _Block_release(v20);
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v23 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v24 = swift_allocObject(v23, 40, 7);
  *(_OWORD *)(v24 + 16) = xmmword_100521140;
  *(_QWORD *)(v24 + 32) = v22;
  aBlock = (void **)v24;
  specialized Array._endMutation()(v24);
  preferredElementSize = (UIMenuElementSize)aBlock;
  swift_bridgeObjectRetain(a3);
  v26 = v35;
  v27 = v22;
  v28._countAndFlagsBits = a2;
  v28._object = a3;
  v45.value.super.isa = (Class)a4;
  v45.is_nil = 0;
  v29 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v28, (Swift::String_optional)0, v45, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v34).super.super.isa;
  -[objc_class _dci_setMenuRepresentation:](isa, "_dci_setMenuRepresentation:", v29);

  *(_QWORD *)(v7 + 24) = isa;
  v30 = v26;
  v31.value._countAndFlagsBits = a2;
  v31.value._object = a3;
  v43.value.super.isa = (Class)a4;
  v43.is_nil = 0;
  v46.value.super.super.isa = 0;
  v32 = UIBarButtonItem.init(title:image:primaryAction:menu:)(v31, v43, v46, v48).super.super.isa;
  -[objc_class setEnabled:](v32, "setEnabled:", 0);
  *(_QWORD *)(v7 + 32) = v32;
  return v7;
}

void sub_1000869C4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1000869FC()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_10008395C();
  if ((v0 & 0x100) != 0)
    v2 = sub_100085BF4();
  else
    v2 = sub_100085DA4();
  v3 = v2;
  swift_release(v1);
  return v3;
}

uint64_t sub_100086C64()
{
  uint64_t v0;

  return sub_100084280(v0, (uint64_t (*)(uint64_t))sub_10004A164);
}

uint64_t sub_100086C84()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100086CA8(void (*a1)(_QWORD *), uint64_t a2)
{
  uint64_t v2;

  sub_100085B4C(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

uint64_t sub_100086CB0()
{
  uint64_t v0;

  return sub_100084280(v0, (uint64_t (*)(uint64_t))sub_10004A30C);
}

uint64_t sub_100086CD0(uint64_t a1)
{
  uint64_t v1;

  return sub_100083DA0(a1, v1, (void (*)(uint64_t))sub_10004BAEC);
}

uint64_t sub_100086CF0()
{
  uint64_t v0;

  return sub_100084280(v0, (uint64_t (*)(uint64_t))sub_10004AE08);
}

uint64_t sub_100086D10()
{
  uint64_t v0;

  return sub_100084280(v0, (uint64_t (*)(uint64_t))sub_10004B644);
}

uint64_t sub_100086D30()
{
  uint64_t v0;

  return sub_100084280(v0, (uint64_t (*)(uint64_t))sub_10004B7EC);
}

uint64_t sub_100086D50(uint64_t a1)
{
  uint64_t v1;

  return sub_100084448(a1, v1);
}

void sub_100086D58(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100084858(a1, a2, v2);
}

uint64_t sub_100086D60()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100086D84()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100086DB0()
{
  uint64_t v0;

  sub_100084920(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100086DCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100641660);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100641660);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100086E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  __int128 v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v6 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 16), a2);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 520))(&v12, a1, a2, ObjectType, v6);
  if (v13)
  {
    sub_10002E37C(&v12, (uint64_t)v14);
    v8 = v15;
    v9 = v16;
    sub_10001413C(v14, v15);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
    __asm { BR              X10 }
  }
  sub_1000073A0((uint64_t)&v12, &qword_100641748);
  return 0;
}

_QWORD *sub_100087090(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  void (*v25)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  int v47;
  int v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  void (*v62)(__int128 *__return_ptr, uint64_t, _QWORD, void *, void *, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  id v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  BOOL v88;
  unsigned __int8 v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  id v95;
  unsigned __int8 v96;
  uint64_t v97;
  uint64_t v98;
  NSObject *v99;
  os_log_type_t v100;
  uint64_t v101;
  uint64_t v103;
  _QWORD v104[2];
  unint64_t v105;
  void *v106;
  void *v107;
  void *v108;
  int v109;
  uint64_t v110;
  void *v111;
  void *v112;
  id v113;
  unsigned int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  uint64_t v124;
  __int128 v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;

  v8 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v8);
  v121 = (uint64_t)v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_100641740);
  __chkstk_darwin(v10);
  v12 = (char *)v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750((uint64_t *)&unk_100654950);
  __chkstk_darwin(v13);
  v15 = (char *)v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v16);
  v21 = (char *)v104 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 < 1)
    return 0;
  v115 = v19;
  v116 = v17;
  v119 = a4;
  v120 = v21;
  v23 = a4[2];
  v22 = a4[3];
  ObjectType = swift_getObjectType(v23, v18);
  v25 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v22 + 520);
  v118 = v23;
  v117 = ObjectType;
  v25(&v125, a1, a2);
  if (!v126)
  {
    sub_1000073A0((uint64_t)&v125, &qword_100641748);
    return 0;
  }
  sub_10002E37C(&v125, (uint64_t)&v128);
  v26 = v129;
  v27 = v130;
  sub_10001413C(&v128, v129);
  (*(void (**)(__int128 *__return_ptr, _QWORD *, uint64_t, uint64_t))(v27 + 32))(&v125, _swiftEmptyArrayStorage, v26, v27);
  v28 = v126;
  v29 = v127;
  sub_10001413C(&v125, v126);
  v30 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 24))(v28, v29);
  v32 = v31;
  v33 = ~(_BYTE)v31;
  sub_100027F10(&v125);
  if (!v33)
  {
LABEL_47:
    sub_100027F10(&v128);
    return 0;
  }
  v113 = v30;
  v114 = v32;
  v34 = v129;
  v35 = v130;
  sub_10001413C(&v128, v129);
  (*(void (**)(uint64_t, uint64_t))(v35 + 16))(v34, v35);
  v36 = sub_10002A750(&qword_100641750);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v12, 1, v36) == 1)
  {
    sub_1000073A0((uint64_t)v12, &qword_100641740);
    sub_1000894A4(v113, v114);
    goto LABEL_47;
  }
  v37 = *(_QWORD *)&v12[*(int *)(v36 + 48)];
  v38 = *(int *)(v13 + 48);
  sub_1000894B8((uint64_t)v12, (uint64_t)v15);
  *(_QWORD *)&v15[v38] = v37;
  v122 = *(_QWORD *)&v15[*(int *)(v13 + 48)];
  v39 = (uint64_t)v120;
  sub_1000894B8((uint64_t)v15, (uint64_t)v120);
  v40 = v129;
  v41 = v130;
  sub_10001413C(&v128, v129);
  v42 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v41 + 8))(v40, v41);
  v44 = v43;
  v46 = v45;
  v48 = v47;
  sub_100089894(v42, v43, v45, v47);
  sub_100490090((uint64_t)v42, (uint64_t)v44, (uint64_t)v46, v48);
  v52 = v114;
  v53 = v113;
  if ((_BYTE)v51 == 0xFF)
  {
    sub_10004941C(v39);
    sub_1000894A4(v53, v52);
    sub_1000893FC(v42, v44, v46, v48);
    goto LABEL_47;
  }
  v54 = v51;
  v106 = v42;
  v107 = v44;
  v108 = v46;
  v109 = v48;
  v55 = v119[4];
  v56 = v119[5];
  v111 = v49;
  v112 = v50;
  v110 = swift_getObjectType(v55, v50);
  v57 = (void *)TTRRemindersListReminderInsertionPosition.init(relativePosition:)(v53, v52);
  v59 = v58;
  v60 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 432);
  sub_1000898F4(v53, v52);
  v61 = v60(v117, v22);
  v62 = *(void (**)(__int128 *__return_ptr, uint64_t, _QWORD, void *, void *, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 168);
  v103 = v56;
  v63 = a3;
  v64 = v111;
  v65 = v112;
  v62(&v123, v63, 0, v111, v112, v54, v57, v59, v61, v110, v103);
  swift_bridgeObjectRelease(v61);
  sub_100089908(v57, v59);
  if (!v124)
  {
    sub_10004941C((uint64_t)v120);
    sub_1000894A4(v53, v114);
    sub_1000893FC(v106, v107, v108, v109);
    sub_10008991C(v64, v65, v54);
    sub_1000073A0((uint64_t)&v123, &qword_100641758);
    goto LABEL_47;
  }
  LODWORD(v110) = v54;
  sub_10002E37C(&v123, (uint64_t)&v125);
  v66 = v126;
  v67 = v127;
  sub_10001413C(&v125, v126);
  v68 = (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 8))(v66, v67);
  v69 = (unint64_t)v119;
  swift_retain();
  v70 = sub_1000894FC(v68, v69);
  v104[1] = 0;
  swift_bridgeObjectRelease(v70);
  swift_release();
  *(_QWORD *)&v123 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(v68);
  sub_1003D814C(0, 0, 0);
  v71 = v68;
  v72 = v123;
  v105 = (unint64_t)v71 >> 62;
  if ((unint64_t)v71 >> 62)
    goto LABEL_24;
  v73 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v71);
  if (v73)
  {
    while (v73 >= 1)
    {
      v59 = 0;
      while (1)
      {
        v74 = (v71 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v59, v71)
            : *(id *)(v71 + 8 * v59 + 32);
        v75 = v74;
        v65 = (void *)(v122 + v59);
        if (__OFADD__(v122, v59))
          break;
        *(_QWORD *)&v123 = v72;
        v77 = *(_QWORD *)(v72 + 16);
        v76 = *(_QWORD *)(v72 + 24);
        if (v77 >= v76 >> 1)
        {
          sub_1003D814C(v76 > 1, v77 + 1, 1);
          v72 = v123;
        }
        ++v59;
        *(_QWORD *)(v72 + 16) = v77 + 1;
        v78 = v72 + 16 * v77;
        *(_QWORD *)(v78 + 32) = v75;
        *(_QWORD *)(v78 + 40) = v65;
        if (v73 == v59)
          goto LABEL_27;
      }
      __break(1u);
LABEL_24:
      v79 = v71;
      if (v71 >= 0)
        v71 &= 0xFFFFFFFFFFFFFF8uLL;
      swift_bridgeObjectRetain(v79);
      v80 = v71;
      v71 = v79;
      v73 = _CocoaArrayWrapper.endIndex.getter(v80);
      if (!v73)
        goto LABEL_27;
    }
    __break(1u);
    goto LABEL_51;
  }
LABEL_27:
  swift_bridgeObjectRelease_n(v71, 2);
  v81 = v121;
  sub_10002B1E8((uint64_t)v120, v121, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v115 + 56))(v81, 0, 1, v116);
  v82 = sub_1002DE7B4(v72);
  v83 = swift_release();
  v65 = (void *)v71;
  v73 = (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t, uint64_t, __n128))(v22 + 416))(v81, v82, v117, v22, v83);
  swift_bridgeObjectRelease(v82);
  sub_1000073A0(v81, (uint64_t *)&unk_100640EB0);
  v22 = *(_QWORD *)(v73 + 16);
  if (v105)
  {
    if (v71 < 0)
      v91 = v71;
    else
      v91 = v71 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v71);
    v59 = _CocoaArrayWrapper.endIndex.getter(v91);
    swift_bridgeObjectRelease(v71);
    if (v22 != v59)
    {
LABEL_29:
      if (qword_10063D330 == -1)
      {
LABEL_30:
        v84 = type metadata accessor for Logger(0);
        sub_100012DC4(v84, (uint64_t)qword_100641660);
        swift_bridgeObjectRetain(v65);
        swift_bridgeObjectRetain(v73);
        v86 = Logger.logObject.getter(v85);
        v87 = static os_log_type_t.fault.getter(v86);
        v88 = os_log_type_enabled(v86, v87);
        v89 = v114;
        if (v88)
        {
          v90 = swift_slowAlloc(22, -1);
          *(_DWORD *)v90 = 134218240;
          swift_bridgeObjectRelease(v73);
          *(_QWORD *)&v123 = v22;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v123, (char *)&v123 + 8, v90 + 4, v90 + 12);
          swift_bridgeObjectRelease(v73);
          *(_WORD *)(v90 + 12) = 2048;
          swift_bridgeObjectRelease(v65);
          *(_QWORD *)&v123 = v59;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v123, (char *)&v123 + 8, v90 + 14, v90 + 22);
          swift_bridgeObjectRelease(v65);
          _os_log_impl((void *)&_mh_execute_header, v86, v87, "items count not matching reminderChangeItems count {items: %ld, reminderChangeItems: %ld}", (uint8_t *)v90, 0x16u);
          swift_slowDealloc(v90, -1, -1);
          sub_10008991C(v111, v112, v110);
        }
        else
        {
          swift_bridgeObjectRelease(v73);
          swift_bridgeObjectRelease(v65);
          sub_10008991C(v111, v112, v110);
          swift_bridgeObjectRelease(v73);
          swift_bridgeObjectRelease(v65);
        }

        v95 = v113;
        v96 = v89;
LABEL_46:
        sub_1000894A4(v95, v96);
        sub_1000893FC(v106, v107, v108, v109);
        sub_10004941C((uint64_t)v120);
        sub_100027F10(&v125);
        goto LABEL_47;
      }
LABEL_51:
      swift_once(&qword_10063D330, sub_100086DCC);
      goto LABEL_30;
    }
  }
  else
  {
    v59 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v22 != v59)
      goto LABEL_29;
  }
  swift_bridgeObjectRelease(v71);
  v92 = v119;
  swift_retain();
  v93 = sub_1000896E0(v73, v92);
  swift_release();
  v94 = v93[2];
  if (v22 != v94)
  {
    if (qword_10063D330 != -1)
      swift_once(&qword_10063D330, sub_100086DCC);
    v97 = type metadata accessor for Logger(0);
    sub_100012DC4(v97, (uint64_t)qword_100641660);
    swift_bridgeObjectRetain(v73);
    swift_bridgeObjectRetain(v93);
    v99 = Logger.logObject.getter(v98);
    v100 = static os_log_type_t.fault.getter(v99);
    if (os_log_type_enabled(v99, v100))
    {
      v101 = swift_slowAlloc(22, -1);
      *(_DWORD *)v101 = 134218240;
      swift_bridgeObjectRelease(v73);
      *(_QWORD *)&v123 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v123, (char *)&v123 + 8, v101 + 4, v101 + 12);
      swift_bridgeObjectRelease(v73);
      *(_WORD *)(v101 + 12) = 2048;
      swift_bridgeObjectRelease(v93);
      *(_QWORD *)&v123 = v94;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v123, (char *)&v123 + 8, v101 + 14, v101 + 22);
      swift_bridgeObjectRelease(v93);
      _os_log_impl((void *)&_mh_execute_header, v99, v100, "editingSessions count not matching items count {items: %ld, editingSessions: %ld}", (uint8_t *)v101, 0x16u);
      swift_slowDealloc(v101, -1, -1);
      sub_10008991C(v111, v112, v110);
    }
    else
    {
      swift_bridgeObjectRelease(v73);
      swift_bridgeObjectRelease(v93);
      sub_10008991C(v111, v112, v110);
      swift_bridgeObjectRelease(v73);
      swift_bridgeObjectRelease(v93);
    }

    v95 = v113;
    v96 = v114;
    goto LABEL_46;
  }
  sub_10004941C((uint64_t)v120);
  sub_1000894A4(v113, v114);
  sub_1000893FC(v106, v107, v108, v109);
  sub_10008991C(v111, v112, v110);
  swift_bridgeObjectRelease(v73);
  sub_100027F10(&v125);
  sub_100027F10(&v128);
  return v93;
}

uint64_t sub_100087C18(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[3];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v38 = a4;
  v39 = a3;
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = *a1;
  if (qword_10063D330 != -1)
    swift_once(&qword_10063D330, sub_100086DCC);
  v9 = type metadata accessor for Logger(0);
  sub_100012DC4(v9, (uint64_t)qword_100641660);
  v10 = sub_10002B1E8(a2, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v40[0] = v14;
    *(_DWORD *)v13 = 136315138;
    v15 = sub_10008945C();
    v16 = TTRTreeStorageItem.treeItemDescription.getter(v6, v15);
    v18 = v17;
    v43 = sub_100027E40(v16, v17, v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v13 + 4, v13 + 12);
    swift_bridgeObjectRelease(v18);
    sub_10004941C((uint64_t)v8);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "performDrop: Loaded contents for uncommitted reminder {item: %s}", v13, 0xCu);
    swift_arrayDestroy(v14, 1, &type metadata for Any[8]);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    sub_10004941C((uint64_t)v8);
  }

  ObjectType = swift_getObjectType(v39, v19);
  v21 = v38;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v38 + 72))(v40, ObjectType, v38);
  v22 = v41;
  v23 = v42;
  sub_10001413C(v40, v41);
  v24 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v25 = swift_allocObject(v24, 40, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100521140;
  v26 = v37;
  *(_QWORD *)(v25 + 32) = v37;
  v43 = v25;
  specialized Array._endMutation()(v25);
  v27 = v43;
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 120);
  v29 = v26;
  v28(v27, 1, v22, v23);
  swift_bridgeObjectRelease(v27);
  v30 = sub_100027F10(v40);
  v31 = *(_QWORD *)TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor(v30);
  v32 = *(_QWORD *)TTRRemindersListEditingSessionDisplayTargets.reminderEditingComponents.unsafeMutableAddressor();
  if (v31)
  {
    if ((v32 & ~v31) == 0)
      goto LABEL_12;
  }
  else if (!v32)
  {
    v31 = 0;
    goto LABEL_12;
  }
  v31 |= v32;
LABEL_12:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 104))(v31, ObjectType, v21);
  v40[0] = (uint64_t)v29;
  v33 = sub_10002A750(&qword_100641730);
  swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
  v34 = v29;
  return Promise.init(value:)(v40);
}

void sub_100087F30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD v21[3];
  _BYTE v22[8];
  uint64_t v23;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v21[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D330 != -1)
    swift_once(&qword_10063D330, sub_100086DCC);
  v7 = type metadata accessor for Logger(0);
  sub_100012DC4(v7, (uint64_t)qword_100641660);
  sub_10002B1E8(a2, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_errorRetain(a1);
  v8 = swift_errorRetain(a1);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc(22, -1);
    v12 = swift_slowAlloc(64, -1);
    v23 = v12;
    *(_DWORD *)v11 = 136315394;
    swift_getErrorValue(a1, v22, v21);
    v13 = Error.localizedDescription.getter(v21[1], v21[2]);
    v15 = v14;
    v20 = sub_100027E40(v13, v14, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, v21, v11 + 4, v11 + 12);
    swift_bridgeObjectRelease(v15);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    *(_WORD *)(v11 + 12) = 2080;
    v16 = sub_10008945C();
    v17 = TTRTreeStorageItem.treeItemDescription.getter(v4, v16);
    v19 = v18;
    v20 = sub_100027E40(v17, v18, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, v21, v11 + 14, v11 + 22);
    swift_bridgeObjectRelease(v19);
    sub_10004941C((uint64_t)v6);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "performDrop: failed to load contents. Will delete uncommitted reminder {error: %s, item: %s}", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v12, 2, &type metadata for Any[8]);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    sub_10004941C((uint64_t)v6);
  }

}

uint64_t sub_10008819C(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    if (v2 > *(_QWORD *)(*(_QWORD *)result + 16))
    {
      __break(1u);
    }
    else
    {
      v4 = (uint64_t *)(*(_QWORD *)result + 32);
      swift_bridgeObjectRetain(a2);
      v5 = (uint64_t *)(a2 + 40);
      do
      {
        v9 = *(v5 - 1);
        v10 = *v5;
        v11 = *v4++;
        swift_unknownObjectRetain(v9);
        if (v11)
          v7 = 0;
        else
          v7 = *(_QWORD *)TTRRemindersListEditingSessionFinishingOption.markedForDeletion.unsafeMutableAddressor();
        ObjectType = swift_getObjectType(v9, v6);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 112))(v7, ObjectType, v10);
        swift_unknownObjectRelease(v9);
        v5 += 2;
        --v2;
      }
      while (v2);
      return swift_bridgeObjectRelease(a2);
    }
  }
  return result;
}

uint64_t sub_100088264(void **a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  id v22;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  if (qword_10063D330 != -1)
    swift_once(&qword_10063D330, sub_100086DCC);
  v9 = type metadata accessor for Logger(0);
  sub_100012DC4(v9, (uint64_t)qword_100641660);
  v10 = sub_10002B1E8(a2, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v26 = v2;
    v13 = swift_slowAlloc(12, -1);
    v25 = v8;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc(32, -1);
    v29 = v15;
    *(_DWORD *)v14 = 136315138;
    v16 = sub_10008945C();
    v17 = TTRTreeStorageItem.treeItemDescription.getter(v5, v16);
    v19 = v18;
    v27 = sub_100027E40(v17, v18, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v14 + 4, v14 + 12);
    swift_bridgeObjectRelease(v19);
    sub_10004941C((uint64_t)v7);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "performDrop(into:): Loaded contents to be added to item {item: %s}", v14, 0xCu);
    swift_arrayDestroy(v15, 1, &type metadata for Any[8]);
    swift_slowDealloc(v15, -1, -1);
    v20 = v14;
    v8 = v25;
    swift_slowDealloc(v20, -1, -1);
  }
  else
  {
    sub_10004941C((uint64_t)v7);
  }

  v29 = (uint64_t)v8;
  v21 = sub_10002A750(&qword_100641730);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  v22 = v8;
  return Promise.init(value:)(&v29);
}

void sub_100088498(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  NSObject *oslog;
  uint64_t v11;
  _QWORD v12[3];
  _BYTE v13[8];
  uint64_t v14;

  if (qword_10063D330 != -1)
    swift_once(&qword_10063D330, sub_100086DCC);
  v2 = type metadata accessor for Logger(0);
  sub_100012DC4(v2, (uint64_t)qword_100641660);
  swift_errorRetain(a1);
  v3 = swift_errorRetain(a1);
  oslog = Logger.logObject.getter(v3);
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v14 = v6;
    *(_DWORD *)v5 = 136315138;
    swift_getErrorValue(a1, v13, v12);
    v7 = Error.localizedDescription.getter(v12[1], v12[2]);
    v9 = v8;
    v11 = sub_100027E40(v7, v8, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, v12, v5 + 4, v5 + 12);
    swift_bridgeObjectRelease(v9);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, oslog, v4, "performDrop(into:): Failed to load contents. Nothing to add to existing reminder {error: %s}", v5, 0xCu);
    swift_arrayDestroy(v6, 1, &type metadata for Any[8]);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);

  }
}

double sub_100088670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  double result;

  v4 = sub_10002A750(&qword_100641760);
  v5 = type metadata accessor for TTRRemindersListImportedContent(0);
  v6 = sub_100089970();
  v7 = Sequence.removingNils<A>()(v4, v5, v6);
  sub_100088704(v7, a3);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

void sub_100088704(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD aBlock[6];
  uint64_t v21;

  v3 = v2;
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v21 = 0;
  type metadata accessor for TTRRemindersListImportedContent(0);
  static TTRRemindersListImportedContent.undoActionNameForApplyToExistingReminder(_:)(a1);
  v10 = v9;
  v11 = (void *)objc_opt_self(TTRUndoManager);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  sub_10002B1E8(a2, (uint64_t)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v13 = *(unsigned __int8 *)(v7 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (v8 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = swift_allocObject(&unk_1005EDDA8, v15 + 8, v13 | 7);
  *(_QWORD *)(v16 + 16) = &v21;
  *(_QWORD *)(v16 + 24) = v3;
  sub_1000894B8((uint64_t)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v14);
  *(_QWORD *)(v16 + v15) = a1;
  v17 = swift_allocObject(&unk_1005EDDD0, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_100089D98;
  *(_QWORD *)(v17 + 24) = v16;
  aBlock[4] = sub_10001B278;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_1005EDDE8;
  v18 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain(a1);
  swift_retain();
  objc_msgSend(v11, "withActionName:block:", v12, v18, swift_release().n128_f64[0]);

  _Block_release(v18);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation(v17, "", 108, 262, 51, 1);
  swift_release();
  if ((a1 & 1) != 0)
    __break(1u);
  else
    swift_release();
}

uint64_t sub_100088920(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  __int128 v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v6 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 16), a2);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 536))(&v12, a1, a2, ObjectType, v6);
  if (v13)
  {
    sub_10002E37C(&v12, (uint64_t)v14);
    v8 = v15;
    v9 = v16;
    sub_10001413C(v14, v15);
    (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
    __asm { BR              X10 }
  }
  sub_1000073A0((uint64_t)&v12, &qword_100641738);
  return 0;
}

void sub_100088B54(void **a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v28;
  char *v29;
  _QWORD v30[8];
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;

  v32 = a3;
  v5 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v30[5] = *(_QWORD *)(v5 - 8);
  v30[6] = v5;
  __chkstk_darwin(v5);
  v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v30[7] = (char *)v30 - v9;
  v10 = sub_10002A750(&qword_100641728);
  __chkstk_darwin(v10);
  v30[4] = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DateComponents(0);
  v30[2] = *(_QWORD *)(v12 - 8);
  v30[3] = v12;
  __chkstk_darwin(v12);
  v30[1] = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
  __chkstk_darwin(v31);
  v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  if (qword_10063D330 != -1)
    swift_once(&qword_10063D330, sub_100086DCC);
  v33 = v7;
  v17 = type metadata accessor for Logger(0);
  v18 = sub_100012DC4(v17, (uint64_t)qword_100641660);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "performDropToMatchAttributes: Loaded contents", v21, 2u);
    swift_slowDealloc(v21, -1, -1);
  }

  v23 = a2[3];
  v22 = a2[4];
  sub_10001413C(a2, v23);
  v24 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v25 = swift_allocObject(v24, 40, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100521140;
  *(_QWORD *)(v25 + 32) = v16;
  v34 = v25;
  specialized Array._endMutation()(v25);
  v26 = v34;
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 120);
  v28 = v16;
  v27(v26, 1, v23, v22);
  swift_bridgeObjectRelease(v26);
  sub_10002B1E8(v32, (uint64_t)v15, type metadata accessor for TTRRemindersListMatchedAttributeValue);
  v29 = (char *)&loc_100088DE0 + 4 * byte_1005218C0[swift_getEnumCaseMultiPayload(v15, v31)];
  __asm { BR              X10 }
}

id sub_10008908C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  _QWORD v15[3];
  _BYTE v16[8];
  uint64_t v17;

  if (qword_10063D330 != -1)
    swift_once(&qword_10063D330, sub_100086DCC);
  v4 = type metadata accessor for Logger(0);
  sub_100012DC4(v4, (uint64_t)qword_100641660);
  swift_errorRetain(a1);
  v5 = swift_errorRetain(a1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v17 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_getErrorValue(a1, v16, v15);
    v10 = Error.localizedDescription.getter(v15[1], v15[2]);
    v12 = v11;
    v14 = sub_100027E40(v10, v11, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, v15, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(v12);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "performDropToMatchAttributes: Failed to load contents. Will delete reminderChangeItem {error: %s}", v8, 0xCu);
    swift_arrayDestroy(v9, 1, &type metadata for Any[8]);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  return objc_msgSend(a2, "removeFromList");
}

uint64_t sub_100089260(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a2[3];
  v3 = a2[4];
  sub_10001413C(a2, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
}

uint64_t sub_1000892AC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  v7 = *(_QWORD **)(a2 + 48);
  v8 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = *(unsigned __int8 *)(v10 + 80);
  v13 = (v12 + 32) & ~v12;
  v14 = swift_allocObject(v8, v13 + v11, v12 | 7);
  *(_OWORD *)(v14 + 16) = xmmword_100520250;
  v15 = v14 + v13;
  sub_10002B1E8(a3, v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_bridgeObjectRetain(a4);
  v16 = sub_10042BE04(v14, v7, a4);
  swift_bridgeObjectRelease(a4);
  swift_setDeallocating(v14);
  swift_arrayDestroy(v15, *(_QWORD *)(v14 + 16), v9);
  result = swift_deallocClassInstance(v14, 32, 7);
  *a1 = v16;
  return result;
}

uint64_t sub_1000893A8()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_unknownObjectRelease(v0[4]);
  swift_unknownObjectRelease(v0[6]);
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for TTRRemindersListOutOfAppDragItemDropUtils()
{
  return objc_opt_self(_TtC9Reminders41TTRRemindersListOutOfAppDragItemDropUtils);
}

void sub_1000893FC(void *a1, void *a2, void *a3, char a4)
{
  switch(a4)
  {
    case 1:
    case 2:
    case 3:
    case 6:
      goto LABEL_4;
    case 4:
      goto LABEL_3;
    case 5:

      a1 = a2;
      a2 = a3;
LABEL_3:

      a1 = a2;
LABEL_4:

      break;
    default:
      return;
  }
}

unint64_t sub_10008945C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100649BF0;
  if (!qword_100649BF0)
  {
    v1 = type metadata accessor for TTRRemindersListViewModel.Item(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRRemindersListViewModel.Item, v1);
    atomic_store(result, (unint64_t *)&qword_100649BF0);
  }
  return result;
}

void sub_1000894A4(id a1, unsigned __int8 a2)
{
  if (a2 != 0xFF)
    sub_10004E09C(a1, a2);
}

uint64_t sub_1000894B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000894FC(unint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int128 v22[2];
  _QWORD *v23;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v5 = _swiftEmptyArrayStorage;
    if (!v4)
      return (uint64_t)v5;
    v23 = _swiftEmptyArrayStorage;
    result = sub_1003D8178(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0)
      break;
    v20 = v3;
    v5 = v23;
    v8 = *(_QWORD *)(a2 + 40);
    v21 = v3 & 0xC000000000000001;
    ObjectType = swift_getObjectType(*(_QWORD *)(a2 + 32), v7);
    v10 = 0;
    v3 = *(_QWORD *)(v8 + 56);
    while (v4 != v10)
    {
      if (v21)
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v20);
      else
        v11 = *(id *)(v20 + 8 * v10 + 32);
      v12 = v11;
      v13 = sub_10002A750((uint64_t *)&unk_1006415A0);
      v14 = swift_allocObject(v13, 40, 7);
      *(_OWORD *)(v14 + 16) = xmmword_100521140;
      *(_QWORD *)(v14 + 32) = v12;
      *(_QWORD *)&v22[0] = v14;
      specialized Array._endMutation()(v14);
      v15 = *(_QWORD *)&v22[0];
      v16 = v12;
      ((void (*)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))v3)(v22, v15, ObjectType, v8);

      swift_bridgeObjectRelease(v15);
      v23 = v5;
      v18 = v5[2];
      v17 = v5[3];
      a2 = v18 + 1;
      if (v18 >= v17 >> 1)
      {
        sub_1003D8178(v17 > 1, v18 + 1, 1);
        v5 = v23;
      }
      ++v10;
      v5[2] = a2;
      sub_10002E37C(v22, (uint64_t)&v5[5 * v18 + 4]);
      if (v4 == v10)
        return (uint64_t)v5;
    }
    __break(1u);
LABEL_15:
    if (v3 < 0)
      v19 = v3;
    else
      v19 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v3);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1000896E0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  _QWORD *v21;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return _swiftEmptyArrayStorage;
  v5 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v7 = *(_QWORD *)(v5 + 72);
  v20 = a1;
  swift_bridgeObjectRetain(a1);
  v8 = _swiftEmptyArrayStorage;
  v21 = a2;
  do
  {
    _StringGuts.grow(_:)(31);
    v10 = _typeName(_:qualified:)(*a2, 0);
    v12 = v11;
    swift_bridgeObjectRelease(0xE000000000000000);
    v13._countAndFlagsBits = 0xD00000000000001DLL;
    v13._object = (void *)0x8000000100562030;
    String.append(_:)(v13);
    v14 = sub_1003003A4(v6, v10, v12);
    v16 = v15;
    swift_bridgeObjectRelease(v12);
    if (v14)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
        v8 = sub_100455CA0(0, v8[2] + 1, 1, v8);
      v18 = v8[2];
      v17 = v8[3];
      if (v18 >= v17 >> 1)
        v8 = sub_100455CA0((_QWORD *)(v17 > 1), v18 + 1, 1, v8);
      v8[2] = v18 + 1;
      v9 = &v8[2 * v18];
      v9[4] = v14;
      v9[5] = v16;
      a2 = v21;
    }
    v6 += v7;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease(v20);
  return v8;
}

id sub_100089894(id result, void *a2, void *a3, char a4)
{
  id v6;
  id v7;

  switch(a4)
  {
    case 1:
    case 2:
    case 3:
    case 6:
      goto LABEL_4;
    case 4:
      goto LABEL_3;
    case 5:
      v6 = result;
      result = a2;
      a2 = a3;
LABEL_3:
      v7 = result;
      result = a2;
LABEL_4:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

id sub_1000898F4(id result, unsigned __int8 a2)
{
  if (a2 <= 1u)
    return result;
  return result;
}

void sub_100089908(id a1, unsigned __int8 a2)
{
  if (a2 <= 3u)

}

void sub_10008991C(void *a1, void *a2, char a3)
{
  if (a3 != -1)
    sub_100089930(a1, a2, a3);
}

void sub_100089930(void *a1, void *a2, char a3)
{
  if (a3 && a3 != 2)
  {
    if (a3 != 1)
      return;

    a1 = a2;
  }

}

unint64_t sub_100089970()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100641768;
  if (!qword_100641768)
  {
    v1 = sub_10002CA5C(&qword_100641760);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100641768);
  }
  return result;
}

uint64_t sub_1000899BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;
  unint64_t v24;
  unint64_t v25;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 24));
  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        break;
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        break;
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:
  v24 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = v24 + 8;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v24));
  return swift_deallocObject(v0, v25, v3 | 7);
}

uint64_t sub_100089D98()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1000892AC(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100089DDC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t REMCustomSmartListFilterDescriptor.humanReadableDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  NSString v4;
  id v5;
  id v6;
  uint64_t v7;

  v0 = REMCustomSmartListFilterDescriptor.enabledFilterCount.getter();
  _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO22enabledFiltersSubtitle5countSSSi_tFZ_0(v0);
  v2 = v1;
  v3 = objc_allocWithZone((Class)NSAttributedString);
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  v5 = objc_msgSend(v3, "initWithString:", v4);

  v6 = objc_msgSend(v5, "string");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);

  return v7;
}

id REMCustomSmartListFilterDescriptor.attributedHumanReadableDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  NSString v4;
  id v5;

  v0 = REMCustomSmartListFilterDescriptor.enabledFilterCount.getter();
  _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO22enabledFiltersSubtitle5countSSSi_tFZ_0(v0);
  v2 = v1;
  v3 = objc_allocWithZone((Class)NSAttributedString);
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  v5 = objc_msgSend(v3, "initWithString:", v4);

  return v5;
}

uint64_t sub_100089F14()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for TTRIDebugMenuInteractor()
{
  return objc_opt_self(_TtC9Reminders23TTRIDebugMenuInteractor);
}

uint64_t sub_100089F60()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for TTRAboutYourDevicesInteractor()
{
  return objc_opt_self(_TtC9Reminders29TTRAboutYourDevicesInteractor);
}

uint64_t TTRSmartListFilterEditorInteractor.delegate.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 16, v2, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v0 + 16);
}

uint64_t TTRSmartListFilterEditorInteractor.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v6[24];

  swift_beginAccess(v2 + 16, v6, 1, 0);
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign(v2 + 16, a1);
  return swift_unknownObjectRelease(a1);
}

void (*TTRSmartListFilterEditorInteractor.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t Strong;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess(v1 + 16, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = Strong;
  v3[4] = v5;
  return sub_10008A0B4;
}

void sub_10008A0B4(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  *(_QWORD *)(v5 + 24) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign(v5 + 16, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t TTRIDebouncedHoverAction.__allocating_init(_:handlerQueue:)(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = swift_allocObject(v2, 64, 7);
  *(_QWORD *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit(v5 + 16, 0);
  v6 = sub_10002A750(&qword_10063D8D0);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  *(_QWORD *)(v5 + 48) = PassthroughSubject.init()();
  *(_QWORD *)(v5 + 56) = 0;
  *(double *)(v5 + 40) = a2;
  *(_QWORD *)(v5 + 32) = a1;
  return v5;
}

uint64_t TTRIDebouncedHoverAction.init(_:handlerQueue:)(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v5;

  *(_QWORD *)(v2 + 24) = 0;
  swift_unknownObjectWeakInit(v2 + 16, 0);
  v5 = sub_10002A750(&qword_10063D8D0);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  *(_QWORD *)(v2 + 48) = PassthroughSubject.init()();
  *(_QWORD *)(v2 + 56) = 0;
  *(double *)(v2 + 40) = a2;
  *(_QWORD *)(v2 + 32) = a1;
  return v2;
}

Swift::Void __swiftcall TTRIDebouncedHoverAction.sendBegin()()
{
  sub_10008A5F0(0);
}

void sub_10008A224()
{
  double *v0;
  double *v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;

  v1 = v0;
  v2 = *v0;
  v3 = sub_10002A750(&qword_100641980);
  __chkstk_darwin(v3);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0);
  v51 = *(_QWORD *)(v6 - 8);
  v52 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_100641988);
  v53 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750(&qword_100641990);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10002A750(&qword_100641998);
  v17 = __chkstk_darwin(v16);
  if (!*((_QWORD *)v1 + 7))
  {
    v49 = v17;
    v50 = v19;
    v55 = (id)*((_QWORD *)v1 + 6);
    v20 = v1[5];
    v46 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    v21 = swift_retain(v55);
    static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)(v21, v20);
    v48 = v2;
    v54 = (id)*((_QWORD *)v1 + 4);
    v22 = v54;
    v23 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
    v45 = v23;
    v44(v5, 1, 1, v23);
    v42 = v22;
    v24 = sub_10002A750(&qword_10063D8D0);
    v47 = v13;
    v25 = v24;
    v26 = sub_10002CDD8();
    v27 = sub_100023FEC(&qword_1006419A0, &qword_10063D8D0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
    v43 = v12;
    v28 = v27;
    v29 = sub_10008A95C();
    v30 = v25;
    v31 = v29;
    Publisher.debounce<A>(for:scheduler:options:)(v8, &v54, v5, v30, v26, v28);
    sub_10008A9A4((uint64_t)v5);

    (*(void (**)(char *, uint64_t))(v51 + 8))(v8, v52);
    swift_release(v55);
    v32 = sub_100023FEC(&qword_1006419B0, &qword_100641988, (uint64_t)&protocol conformance descriptor for Publishers.Debounce<A, B>);
    Publisher.drop(while:)(sub_10008A688, 0, v9, v32);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v11, v9);
    v33 = v42;
    v55 = v42;
    v44(v5, 1, 1, v45);
    v34 = sub_100023FEC(&qword_1006419B8, &qword_100641990, (uint64_t)&protocol conformance descriptor for Publishers.DropWhile<A>);
    v35 = v33;
    v36 = v46;
    v37 = v43;
    Publisher.receive<A>(on:options:)(&v55, v5, v43, v26, v34, v31);
    sub_10008A9A4((uint64_t)v5);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v15, v37);
    v38 = sub_100023FEC(&qword_1006419C0, &qword_100641998, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v39 = v49;
    v40 = Publisher.sink<A>(weakTarget:receiveValue:receiveCompletion:)(v1, sub_10008A698, 0, 0, 0, v49, *(_QWORD *)&v48, v38);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v39);
    v41 = *((_QWORD *)v1 + 7);
    *((_QWORD *)v1 + 7) = v40;
    swift_release(v41);
  }
}

Swift::Void __swiftcall TTRIDebouncedHoverAction.sendEnd()()
{
  sub_10008A5F0(1);
}

uint64_t sub_10008A5F0(char a1)
{
  char v3;

  sub_10008A224();
  v3 = a1;
  return PassthroughSubject.send(_:)(&v3);
}

Swift::Void __swiftcall TTRIDebouncedHoverAction.cancel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 56);
  if (v2)
  {
    swift_retain(v2);
    AnyCancellable.cancel()();
    swift_release(v2);
    v3 = *(_QWORD *)(v1 + 56);
  }
  else
  {
    v3 = 0;
  }
  *(_QWORD *)(v1 + 56) = 0;
  swift_release(v3);
}

BOOL sub_10008A670(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

BOOL sub_10008A688(_BYTE *a1)
{
  return (*a1 & 1) == 0;
}

uint64_t sub_10008A698(uint64_t result, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  _BYTE v8[24];

  if (*a2 == 1)
  {
    v2 = result;
    v3 = result + 16;
    swift_beginAccess(result + 16, v8, 0, 0);
    result = swift_unknownObjectWeakLoadStrong(v3);
    if (result)
    {
      v5 = result;
      v6 = *(_QWORD *)(v2 + 24);
      ObjectType = swift_getObjectType(result, v4);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(v2, ObjectType, v6);
      return swift_unknownObjectRelease(v5);
    }
  }
  return result;
}

uint64_t TTRIDebouncedHoverAction.deinit()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);

  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  return v0;
}

uint64_t TTRIDebouncedHoverAction.__deallocating_deinit()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);

  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for TTRIDebouncedHoverAction()
{
  return objc_opt_self(_TtC9Reminders24TTRIDebouncedHoverAction);
}

uint64_t getEnumTagSinglePayload for TTRICollectionViewItemHit.Portion(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIDebouncedHoverAction.HoverActionState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10008A888 + 4 * byte_100521AA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10008A8BC + 4 * byte_100521AA0[v4]))();
}

uint64_t sub_10008A8BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10008A8C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10008A8CCLL);
  return result;
}

uint64_t sub_10008A8D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10008A8E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10008A8E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10008A8EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_10008A8F8(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIDebouncedHoverAction.HoverActionState()
{
  return &type metadata for TTRIDebouncedHoverAction.HoverActionState;
}

unint64_t sub_10008A918()
{
  unint64_t result;

  result = qword_100641978;
  if (!qword_100641978)
  {
    result = swift_getWitnessTable(&unk_100521B74, &type metadata for TTRIDebouncedHoverAction.HoverActionState);
    atomic_store(result, (unint64_t *)&qword_100641978);
  }
  return result;
}

unint64_t sub_10008A95C()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1006419A8;
  if (!qword_1006419A8)
  {
    v1 = sub_10002CDD8();
    result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue, v1);
    atomic_store(result, (unint64_t *)&qword_1006419A8);
  }
  return result;
}

uint64_t sub_10008A9A4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750(&qword_100641980);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10008AAEC(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  void (*v13)(char *, uint64_t);
  char *v14;
  char **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD *, _QWORD);
  uint64_t result;
  void *v23;
  _QWORD *v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  NSString v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  id v52;
  uint64_t v53;
  void *v54;
  id v55;
  char v56;
  void *v57;
  uint64_t v58[2];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[3];
  uint64_t v63;
  void *v64;

  v2 = v1;
  v4 = type metadata accessor for UIListContentConfiguration(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)v58 - v9;
  sub_10008B000();
  static UIListContentConfiguration.cell()();
  v11 = type metadata accessor for UICellConfigurationState(0);
  v63 = v11;
  v64 = &protocol witness table for UICellConfigurationState;
  v12 = sub_100028D70(v62);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v12, a1, v11);
  UIListContentConfiguration.updated(for:)(v62);
  v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, v4);
  sub_100027F10(v62);
  v14 = &v2[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel];
  v15 = &selRef_contact;
  if (!*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel]
    || (v16 = OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_displayNameField,
        (objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_displayNameField], "isEditing") & 1) != 0))
  {
    v17 = static TTRLocalizableStrings.Sections.hideEmpty(listLayout:)(v2[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_currentLayout]);
    UIListContentConfiguration.text.setter(v17, v18);
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_displayNameField], "setUserInteractionEnabled:", 0);
    goto LABEL_4;
  }
  v28 = *(void **)&v2[v16];
  v29 = *(NSString *)v14;
  if (*(_QWORD *)v14)
  {
    v59 = v16;
    v60 = v4;
    v30 = *((_QWORD *)v14 + 3);
    v31 = *((_QWORD *)v14 + 4);
    v61 = v5;
    v32 = *((_QWORD *)v14 + 1);
    v33 = *((_QWORD *)v14 + 2);
    v58[0] = v30;
    v58[1] = v32;
    v34 = v28;
    v35 = v32;
    v5 = v61;
    sub_10008C874((uint64_t)v29, v35, v33, v58[0], v31);
    swift_bridgeObjectRelease(v33);

    v36 = v31;
    v16 = v59;
    swift_bridgeObjectRelease(v36);
    swift_bridgeObjectRetain(v33);
    v4 = v60;
    v29 = String._bridgeToObjectiveC()();
    v37 = v33;
    v15 = &selRef_contact;
    swift_bridgeObjectRelease(v37);
  }
  else
  {
    v38 = v28;
  }
  objc_msgSend(v28, "setText:", v29);

  UIListContentConfiguration.text.setter(32, 0xE100000000000000);
  if (*(_QWORD *)v14)
  {
    if (v14[40] == 1)
    {
      v39 = *(void **)&v2[v16];
      v40 = (void *)objc_opt_self(UIColor);
      v41 = v39;
      v42 = objc_msgSend(v40, "grayColor");
      objc_msgSend(v41, "setTextColor:", v42);

    }
    if (*(_QWORD *)v14)
    {
      v43 = *((_QWORD *)v14 + 4);
      if (v43)
      {
        v61 = v5;
        v44 = *((_QWORD *)v14 + 3);
        v45 = objc_msgSend(*(id *)&v2[v16], "text", swift_bridgeObjectRetain(v43).n128_f64[0]);
        if (v45)
        {
          v46 = v45;
          v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
          v49 = v48;

          if (v44 == v47 && v43 == v49)
          {
            swift_bridgeObjectRelease(v43);
            v50 = v49;
            goto LABEL_20;
          }
          v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v44, v43, v47, v49, 0);
          swift_bridgeObjectRelease(v49);
          if ((v51 & 1) != 0)
          {
            v50 = v43;
LABEL_20:
            swift_bridgeObjectRelease(v50);
            v15 = &selRef_contact;
            v52 = objc_msgSend(v2, "contentView");
            v53 = OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_canonicalNameField;
            v54 = *(void **)&v2[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_canonicalNameField];
            sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
            v55 = v54;
            v56 = UIFocusEnvironment.contains(_:)();

            v5 = v61;
            if ((v56 & 1) != 0)
            {
              objc_msgSend(*(id *)&v2[v53], "removeFromSuperview");
              sub_10008B920();
            }
            goto LABEL_4;
          }
        }
        v57 = (void *)static TTRLocalizableStrings.Sections.sectionsCanonicalName(name:)(v44, v43);
        swift_bridgeObjectRelease(v43);
        objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_canonicalNameField], "setAttributedText:", v57);

        v5 = v61;
        v15 = &selRef_contact;
      }
    }
  }
LABEL_4:
  v19 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v20 = static UIFont.roundedBodyFont.getter(v19);
  v21 = (uint64_t (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v62);
  UIListContentConfiguration.TextProperties.font.setter(v20);
  result = v21(v62, 0);
  v23 = *(void **)&v2[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_listContentView];
  if (v23)
  {
    v63 = v4;
    v64 = &protocol witness table for UIListContentConfiguration;
    v24 = sub_100028D70(v62);
    (*(void (**)(_QWORD *, char *, uint64_t))(v5 + 16))(v24, v10, v4);
    v25 = v23;
    UIListContentView.configuration.setter(v62);

    v26 = objc_msgSend(v2, v15[478]);
    objc_msgSend(v26, "directionalLayoutMargins");
    objc_msgSend(v26, "setDirectionalLayoutMargins:", 15.0);

    v27 = objc_msgSend(v2, v15[478]);
    objc_msgSend(v27, "directionalLayoutMargins");
    objc_msgSend(v27, "setDirectionalLayoutMargins:");

    return ((uint64_t (*)(char *, uint64_t))v13)(v10, v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10008B000()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Class isa;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  Class v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  Class v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  id v84;
  uint64_t v85;

  v1 = v0;
  v2 = type metadata accessor for UIListContentConfiguration(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005ED8(0, (unint64_t *)&unk_10064AA80, UIListContentView_ptr);
  static UIListContentConfiguration.cell()();
  v5 = (void *)UIListContentView.init(configuration:)(v4);
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = objc_msgSend(v1, "contentView");
  objc_msgSend(v6, "addSubview:", v5);

  v7 = *(void **)&v1[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_listContentView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_listContentView] = v5;
  v8 = v5;

  v9 = (void *)objc_opt_self(NSLayoutConstraint);
  v82 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v10 = swift_allocObject(v82, 64, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100520050;
  v11 = objc_msgSend(v8, "topAnchor");
  v12 = objc_msgSend(v1, "contentView");
  v13 = objc_msgSend(v12, "topAnchor");

  v14 = objc_msgSend(v11, "constraintEqualToAnchor:", v13);
  *(_QWORD *)(v10 + 32) = v14;
  v15 = objc_msgSend(v8, "leadingAnchor");
  v16 = objc_msgSend(v1, "contentView");
  v17 = objc_msgSend(v16, "leadingAnchor");

  v18 = objc_msgSend(v15, "constraintEqualToAnchor:", v17);
  *(_QWORD *)(v10 + 40) = v18;
  v19 = objc_msgSend(v8, "bottomAnchor");
  v20 = objc_msgSend(v1, "contentView");
  v21 = objc_msgSend(v20, "bottomAnchor");

  v22 = objc_msgSend(v19, "constraintEqualToAnchor:", v21);
  *(_QWORD *)(v10 + 48) = v22;
  v83 = v8;
  v23 = objc_msgSend(v8, "trailingAnchor");
  v24 = objc_msgSend(v1, "contentView");
  v25 = objc_msgSend(v24, "trailingAnchor");

  v26 = objc_msgSend(v23, "constraintEqualToAnchor:", v25);
  *(_QWORD *)(v10 + 56) = v26;
  v85 = v10;
  specialized Array._endMutation()(v27);
  v28 = v85;
  v29 = sub_100005ED8(0, (unint64_t *)&qword_10064BB60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v28);
  v84 = v9;
  objc_msgSend(v9, "activateConstraints:", isa);

  v31 = OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_displayNameField;
  v32 = *(void **)&v1[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_displayNameField];
  sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v33 = v32;
  v34 = (void *)static UIFont.roundedBodyFont.getter(v33);
  objc_msgSend(v33, "setFont:", v34);

  objc_msgSend(*(id *)&v1[v31], "setClearButtonMode:", 1);
  objc_msgSend(*(id *)&v1[v31], "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(*(id *)&v1[v31], "setAdjustsFontSizeToFitWidth:", 0);
  objc_msgSend(*(id *)&v1[v31], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v35 = objc_msgSend(v1, "contentView");
  objc_msgSend(v35, "addSubview:", *(_QWORD *)&v1[v31]);

  v36 = OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_canonicalNameField;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_canonicalNameField], "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(*(id *)&v1[v36], "setAdjustsFontSizeToFitWidth:", 0);
  objc_msgSend(*(id *)&v1[v36], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v37 = *(void **)&v1[v36];
  v38 = (void *)objc_opt_self(UIColor);
  v39 = v37;
  v40 = objc_msgSend(v38, "grayColor");
  objc_msgSend(v39, "setTextColor:", v40);

  v41 = objc_msgSend(v1, "contentView");
  objc_msgSend(v41, "addSubview:", *(_QWORD *)&v1[v36]);

  v42 = OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_sectionCellConstraints;
  v43 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_sectionCellConstraints];
  if (v43)
  {
    swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_sectionCellConstraints]);
    v44 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v43);
    objc_msgSend(v84, "deactivateConstraints:", v44);

    v45 = *(_QWORD *)&v1[v42];
    *(_QWORD *)&v1[v42] = 0;
    swift_bridgeObjectRelease(v45);
  }
  v46 = swift_allocObject(v82, 88, 7);
  *(_OWORD *)(v46 + 16) = xmmword_100521BA0;
  v47 = objc_msgSend(*(id *)&v1[v31], "topAnchor");
  v48 = objc_msgSend(v1, "contentView");
  v49 = objc_msgSend(v48, "topAnchor");
  v82 = v29;
  v50 = v49;

  v51 = objc_msgSend(v47, "constraintEqualToAnchor:constant:", v50, 5.0);
  *(_QWORD *)(v46 + 32) = v51;
  v52 = *(void **)&v1[v31];
  v81 = v42;
  v53 = objc_msgSend(v52, "leadingAnchor");
  v54 = objc_msgSend(v1, "contentView");
  v55 = objc_msgSend(v54, "leadingAnchor");

  v56 = objc_msgSend(v53, "constraintEqualToAnchor:constant:", v55, 20.0);
  *(_QWORD *)(v46 + 40) = v56;
  v57 = objc_msgSend(*(id *)&v1[v31], "bottomAnchor");
  v58 = objc_msgSend(*(id *)&v1[v36], "topAnchor");
  v59 = objc_msgSend(v57, "constraintEqualToAnchor:", v58);

  *(_QWORD *)(v46 + 48) = v59;
  v60 = objc_msgSend(*(id *)&v1[v31], "trailingAnchor");
  v61 = objc_msgSend(v1, "contentView");
  v62 = objc_msgSend(v61, "trailingAnchor");

  v63 = objc_msgSend(v60, "constraintEqualToAnchor:constant:", v62, -10.0);
  *(_QWORD *)(v46 + 56) = v63;
  v64 = objc_msgSend(*(id *)&v1[v36], "leadingAnchor");
  v65 = objc_msgSend(v1, "contentView");
  v66 = objc_msgSend(v65, "leadingAnchor");

  v67 = objc_msgSend(v64, "constraintEqualToAnchor:constant:", v66, 20.0);
  *(_QWORD *)(v46 + 64) = v67;
  v68 = objc_msgSend(v1, "contentView");
  v69 = objc_msgSend(v68, "bottomAnchor");

  v70 = objc_msgSend(*(id *)&v1[v36], "bottomAnchor");
  v71 = objc_msgSend(v69, "constraintEqualToAnchor:constant:", v70, 5.0);

  *(_QWORD *)(v46 + 72) = v71;
  v72 = objc_msgSend(*(id *)&v1[v36], "trailingAnchor");
  v73 = objc_msgSend(v1, "contentView");
  v74 = objc_msgSend(v73, "trailingAnchor");

  v75 = objc_msgSend(v72, "constraintEqualToAnchor:constant:", v74, -10.0);
  *(_QWORD *)(v46 + 80) = v75;
  v85 = v46;
  specialized Array._endMutation()(v76);
  v77 = v85;
  v78 = *(_QWORD *)&v1[v81];
  *(_QWORD *)&v1[v81] = v85;
  swift_bridgeObjectRetain(v77);
  swift_bridgeObjectRelease(v78);
  v79 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v77);
  objc_msgSend(v84, "activateConstraints:", v79);

}

uint64_t sub_10008B920()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  Class isa;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  Class v28;
  uint64_t v29;

  v1 = v0;
  v2 = OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_sectionCellConstraints;
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_sectionCellConstraints];
  if (v3)
  {
    v4 = (void *)objc_opt_self(NSLayoutConstraint);
    sub_100005ED8(0, (unint64_t *)&qword_10064BB60, NSLayoutConstraint_ptr);
    swift_bridgeObjectRetain(v3);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v3);
    objc_msgSend(v4, "deactivateConstraints:", isa);

    v6 = *(_QWORD *)&v1[v2];
    *(_QWORD *)&v1[v2] = 0;
    swift_bridgeObjectRelease(v6);
  }
  v7 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v8 = swift_allocObject(v7, 64, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100520050;
  v9 = OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_displayNameField;
  v10 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_displayNameField], "topAnchor");
  v11 = objc_msgSend(v1, "contentView");
  v12 = objc_msgSend(v11, "topAnchor");

  v13 = objc_msgSend(v10, "constraintEqualToAnchor:constant:", v12, 5.0);
  *(_QWORD *)(v8 + 32) = v13;
  v14 = objc_msgSend(*(id *)&v1[v9], "leadingAnchor");
  v15 = objc_msgSend(v1, "contentView");
  v16 = objc_msgSend(v15, "leadingAnchor");

  v17 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v16, 20.0);
  *(_QWORD *)(v8 + 40) = v17;
  v18 = objc_msgSend(*(id *)&v1[v9], "bottomAnchor");
  v19 = objc_msgSend(v1, "contentView");
  v20 = objc_msgSend(v19, "bottomAnchor");

  v21 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v20, -5.0);
  *(_QWORD *)(v8 + 48) = v21;
  v22 = objc_msgSend(*(id *)&v1[v9], "trailingAnchor");
  v23 = objc_msgSend(v1, "contentView");
  v24 = objc_msgSend(v23, "trailingAnchor");

  v25 = objc_msgSend(v22, "constraintEqualToAnchor:constant:", v24, -10.0);
  *(_QWORD *)(v8 + 56) = v25;
  specialized Array._endMutation()(v26);
  v27 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_100005ED8(0, (unint64_t *)&qword_10064BB60, NSLayoutConstraint_ptr);
  v28 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v27, "activateConstraints:", v28);

  v29 = *(_QWORD *)&v1[v2];
  *(_QWORD *)&v1[v2] = v8;
  return swift_bridgeObjectRelease(v29);
}

uint64_t sub_10008BD30(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  objc_super v29;
  uint64_t v30;

  v3 = &v2[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel];
  v4 = *(void **)&v2[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel];
  if (v4)
  {
    v6 = *((_QWORD *)v3 + 3);
    v5 = *((_QWORD *)v3 + 4);
    v8 = *((_QWORD *)v3 + 1);
    v7 = *((_QWORD *)v3 + 2);
    v9 = v3[40];
    v10 = sub_10002A750((uint64_t *)&unk_10065A230);
    v11 = swift_allocObject(v10, 64, 7);
    *(_OWORD *)(v11 + 16) = xmmword_1005201E0;
    *(_QWORD *)(v11 + 32) = v8;
    *(_QWORD *)(v11 + 40) = v7;
    sub_10008C874((uint64_t)v4, v8, v7, v6, v5);
    v12 = swift_bridgeObjectRetain(v7);
    if ((v9 & 1) != 0)
    {
      v18 = (uint64_t *)TTRAccesibility.Sections.EmptySection.unsafeMutableAddressor(v12);
      v13 = *v18;
      swift_bridgeObjectRetain(v18[1]);
    }
    else
    {
      v13 = 0;
      v14 = 0;
    }
    *(_QWORD *)(v11 + 48) = v13;
    *(_QWORD *)(v11 + 56) = v14;
    v19 = sub_10002A750((uint64_t *)&unk_1006582D0);
    v20 = sub_100023FEC(&qword_10065A240, (uint64_t *)&unk_1006582D0, (uint64_t)&protocol conformance descriptor for [A]);
    v21 = Sequence.removingNils<A>()(v19, &type metadata for String, v20);
    v22 = swift_bridgeObjectRelease(v11);
    v30 = v21;
    v23 = (uint64_t *)TTRAccesibility.General.Label.Separator.unsafeMutableAddressor(v22);
    v24 = *v23;
    v25 = v23[1];
    swift_bridgeObjectRetain(v25);
    v26 = sub_10002A750(&qword_1006466D0);
    v27 = sub_100023FEC((unint64_t *)&qword_10064C980, &qword_1006466D0, (uint64_t)&protocol conformance descriptor for [A]);
    v17 = BidirectionalCollection<>.joined(separator:)(v24, v25, v26, v27);
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v7);

    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v29.receiver = v2;
    v29.super_class = (Class)swift_getObjectType(v2, a2);
    v15 = objc_msgSendSuper2(&v29, "accessibilityLabel");
    if (v15)
    {
      v16 = v15;
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);

    }
    else
    {
      return 0;
    }
  }
  return v17;
}

uint64_t sub_10008BF3C(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t *v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  if (!*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel])
  {
    v7 = (void *)sub_10008C00C();
    if (v7)
    {
      v5 = v7;
      if (objc_msgSend(v7, "isOn"))
        v8 = (uint64_t *)TTRAccesibility.General.Label.On.unsafeMutableAddressor();
      else
        v8 = (uint64_t *)TTRAccesibility.General.Label.Off.unsafeMutableAddressor();
      v6 = *v8;
      swift_bridgeObjectRetain(v8[1]);
      goto LABEL_10;
    }
  }
  v10.receiver = v2;
  v10.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v10, "accessibilityValue");
  if (v4)
  {
    v5 = v4;
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
LABEL_10:

    return v6;
  }
  return 0;
}

uint64_t sub_10008C00C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  int v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  int v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);

  v1 = type metadata accessor for UICellAccessory.AccessoryType(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (void **)((char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for UICellAccessory(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel))
  {
    v11 = UICollectionViewListCell.accessories.getter(v7);
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v13 = *(unsigned __int8 *)(v6 + 80);
      v22 = v11;
      v14 = v11 + ((v13 + 32) & ~v13);
      v15 = *(_QWORD *)(v6 + 72);
      v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16);
      v24 = enum case for UICellAccessory.AccessoryType.customView(_:);
      v23 = v9;
      for (i = v25(v9, v14, v5); ; i = v25(v9, v14, v5))
      {
        UICellAccessory.accessoryType.getter(i);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
        v17 = (*(uint64_t (**)(void **, uint64_t))(v2 + 88))(v4, v1);
        if (v17 == v24)
        {
          (*(void (**)(void **, uint64_t))(v2 + 96))(v4, v1);
          v18 = *v4;
          v19 = objc_opt_self(UISwitch);
          v20 = swift_dynamicCastObjCClass(v18, v19);
          if (v20)
          {
            v10 = v20;
            swift_bridgeObjectRelease(v22);
            return v10;
          }

          v9 = v23;
        }
        else
        {
          (*(void (**)(void **, uint64_t))(v2 + 8))(v4, v1);
        }
        v14 += v15;
        if (!--v12)
        {
          v11 = v22;
          break;
        }
      }
    }
    swift_bridgeObjectRelease(v11);
    return 0;
  }
  return v10;
}

id sub_10008C200(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;

  v4 = a1;
  a3();
  v6 = v5;

  if (v6)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = 0;
  }
  return v7;
}

uint64_t sub_10008C268(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t *v3;
  uint64_t v4;
  id v5;
  void *v6;
  objc_super v8;

  if (*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel])
  {
    v3 = (uint64_t *)TTRAccesibility.General.Hint.Edit.unsafeMutableAddressor();
    v4 = *v3;
    swift_bridgeObjectRetain(v3[1]);
  }
  else
  {
    v8.receiver = v2;
    v8.super_class = (Class)swift_getObjectType(v2, a2);
    v5 = objc_msgSendSuper2(&v8, "accessibilityHint");
    if (v5)
    {
      v6 = v5;
      v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);

    }
    else
    {
      return 0;
    }
  }
  return v4;
}

void sub_10008C310(void *a1, uint64_t a2, NSString a3, SEL *a4)
{
  objc_class *ObjectType;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType(a1, a2);
  if (a3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v9 = v8;
    v10 = a1;
    a3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v11 = a1;
  }
  v12.receiver = a1;
  v12.super_class = ObjectType;
  objc_msgSendSuper2(&v12, *a4, a3);

}

uint64_t sub_10008C3A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t Strong;
  uint64_t v6;

  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel))
  {
    v3 = sub_10008C00C();
    if (v3)
    {
      v4 = (void *)v3;
      Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_accessibilityDelegate);
      if (Strong)
      {
        v6 = Strong;
        v2 = 1;
        objc_msgSend(v4, "setOn:animated:", objc_msgSend(v4, "isOn") ^ 1, 1);
        sub_10019EBBC((char)objc_msgSend(v4, "isOn"));
        swift_unknownObjectRelease(v6);

        return v2;
      }

    }
    return 0;
  }
  v1 = OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_displayNameField;
  if ((objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_displayNameField), "isEditing") & 1) != 0)return 0;
  objc_msgSend(*(id *)(v0 + v1), "becomeFirstResponder");
  UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, *(id *)(v0 + v1));
  return 1;
}

id sub_10008C4E0(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v7;
  objc_class *ObjectType;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  objc_super v20;

  v7 = v6;
  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  v13 = OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_displayNameField;
  v14 = objc_allocWithZone((Class)UITextField);
  v15 = v6;
  *(_QWORD *)&v7[v13] = objc_msgSend(v14, "init");
  v16 = OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_canonicalNameField;
  *(_QWORD *)&v15[v16] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v15[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_currentLayout] = 0;
  v17 = &v15[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_accessibilityDelegate];
  *((_QWORD *)v17 + 1) = 0;
  swift_unknownObjectWeakInit(v17, 0);
  v18 = &v15[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel];
  *(_OWORD *)v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  *(_OWORD *)(v18 + 25) = 0u;
  *(_QWORD *)&v15[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_listContentView] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_nameFields] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_sectionCellConstraints] = 0;

  v20.receiver = v15;
  v20.super_class = ObjectType;
  return objc_msgSendSuper2(&v20, "initWithFrame:", a1, a2, a3, a4);
}

id sub_10008C63C(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  id v12;
  objc_super v14;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v6 = OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_displayNameField;
  v7 = objc_allocWithZone((Class)UITextField);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");
  v9 = OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_canonicalNameField;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v8[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_currentLayout] = 0;
  v10 = &v8[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_accessibilityDelegate];
  *((_QWORD *)v10 + 1) = 0;
  swift_unknownObjectWeakInit(v10, 0);
  v11 = &v8[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *(_OWORD *)(v11 + 25) = 0u;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_listContentView] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_nameFields] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_sectionCellConstraints] = 0;

  v14.receiver = v8;
  v14.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v14, "initWithCoder:", a1);

  return v12;
}

uint64_t type metadata accessor for TTRIEditSectionsCell()
{
  return objc_opt_self(_TtC9Reminders20TTRIEditSectionsCell);
}

NSString sub_10008C840()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1006419C8 = (uint64_t)result;
  return result;
}

uint64_t sub_10008C874(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  id v7;

  if (result)
  {
    v6 = (void *)result;
    swift_bridgeObjectRetain(a5);
    v7 = v6;
    return swift_bridgeObjectRetain(a3);
  }
  return result;
}

uint64_t sub_10008C8AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100641A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008C8F4(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  _OWORD v12[2];

  if (qword_10063D338 != -1)
    swift_once(&qword_10063D338, sub_10008C840);
  v2 = (void *)qword_1006419C8;
  sub_10008C8AC(a1, (uint64_t)&v11);
  if ((_QWORD)v11)
  {
    v6 = v11;
    v7[0] = v12[0];
    *(_OWORD *)((char *)v7 + 9) = *(_OWORD *)((char *)v12 + 9);
    v3 = v2;
    sub_10008C9D8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10008C874);
    if ((swift_dynamicCast(&v8, &v6, &type metadata for TTREditSectionsViewModel.SectionItem, &type metadata for AnyHashable, 6) & 1) == 0)
    {
      v10 = 0;
      v8 = 0u;
      v9 = 0u;
    }
  }
  else
  {
    v10 = 0;
    v8 = 0u;
    v9 = 0u;
    v4 = v2;
  }
  return UICellConfigurationState.subscript.setter(&v8, v2);
}

uint64_t sub_10008C9D8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  return a1;
}

void *sub_10008CA10(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result)
  {

    swift_bridgeObjectRelease(a3);
    return (void *)swift_bridgeObjectRelease(a5);
  }
  return result;
}

void sub_10008CA48(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_class *ObjectType;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  __int128 v14;
  id v15;
  void *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  objc_super v20;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v4 = objc_msgSend(v2, "imageView");
  v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, "transform");
    v7 = *((_QWORD *)&v17 + 1);
    v6 = v17;
    v9 = *((_QWORD *)&v18 + 1);
    v8 = v18;
    v11 = *((_QWORD *)&v19 + 1);
    v10 = v19;

  }
  else
  {
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
  }
  v12 = objc_msgSend(v2, "imageView");
  if (v12)
  {
    v13 = v12;
    v14 = *(_OWORD *)&CGAffineTransformIdentity.c;
    v17 = *(_OWORD *)&CGAffineTransformIdentity.a;
    v18 = v14;
    v19 = *(_OWORD *)&CGAffineTransformIdentity.tx;
    objc_msgSend(v12, "setTransform:", &v17);

  }
  v20.receiver = v2;
  v20.super_class = ObjectType;
  objc_msgSendSuper2(&v20, "layoutSubviews");
  if (v5)
  {
    v15 = objc_msgSend(v2, "imageView");
    if (v15)
    {
      v16 = v15;
      *(_QWORD *)&v17 = v6;
      *((_QWORD *)&v17 + 1) = v7;
      *(_QWORD *)&v18 = v8;
      *((_QWORD *)&v18 + 1) = v9;
      *(_QWORD *)&v19 = v10;
      *((_QWORD *)&v19 + 1) = v11;
      objc_msgSend(v15, "setTransform:", &v17);

    }
  }
}

void sub_10008CCB0(char a1)
{
  void *v1;
  id v3;
  void *v4;
  double v5;
  id v6;
  id v7;
  double v8;
  double v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  _QWORD v15[5];
  uint64_t v16;

  v3 = objc_msgSend(v1, "imageView");
  if (v3)
  {
    v4 = v3;
    if ((a1 & 1) != 0)
      v5 = 1.0;
    else
      v5 = -1.0;
    v6 = objc_msgSend(v1, "traitCollection");
    v7 = objc_msgSend(v6, "layoutDirection");

    v8 = -v5;
    if (v7 != (id)1)
      v8 = v5;
    v9 = v8 * 90.0 * 0.0174532925;
    v10 = (void *)objc_opt_self(UIView);
    v11 = swift_allocObject(&unk_1005EDF28, 32, 7);
    *(_QWORD *)(v11 + 16) = v4;
    *(double *)(v11 + 24) = v9;
    v15[4] = sub_10008D250;
    v16 = v11;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_100006378;
    v15[3] = &unk_1005EDF40;
    v12 = _Block_copy(v15);
    v13 = v16;
    v14 = v4;
    swift_release(v13);
    objc_msgSend(v10, "animateWithDuration:animations:", v12, 0.3);

    _Block_release(v12);
  }
}

id sub_10008CE1C(void *a1, CGFloat a2)
{
  CGAffineTransform v5;
  CGAffineTransform v6;

  objc_msgSend(a1, "transform");
  CGAffineTransformRotate(&v5, &v6, a2);
  v6 = v5;
  return objc_msgSend(a1, "setTransform:", &v6);
}

uint64_t type metadata accessor for TTRIOutlineDisclosureButton()
{
  return objc_opt_self(_TtC9Reminders27TTRIOutlineDisclosureButton);
}

uint64_t sub_10008CF70()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v0 = sub_10002A750(&qword_100641A68);
  __chkstk_darwin(v0);
  v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for UIBackgroundConfiguration(0);
  v3 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - v7;
  v9 = type metadata accessor for UIButton.Configuration.TitleAlignment(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.plain()(v13);
  if (UIAccessibilityButtonShapesEnabled())
    v14 = 0x8000000100562390;
  else
    v14 = 0xEF64726177726F66;
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  v16 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v15);

  UIButton.Configuration.image.setter(v16);
  v17 = UIButton.Configuration.imagePlacement.setter(8);
  UIButton.Configuration.imageReservation.setter(v17, 20.0);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for UIButton.Configuration.TitleAlignment.leading(_:), v9);
  UIButton.Configuration.titleAlignment.setter(v12);
  v18 = UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  static UIBackgroundConfiguration.clear()(v18);
  v19 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  UIBackgroundConfiguration.backgroundColor.setter(v19);
  UIConfigurationColorTransformer.init(_:)(sub_10008D200, 0);
  v20 = type metadata accessor for UIConfigurationColorTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v2, 0, 1, v20);
  UIBackgroundConfiguration.backgroundColorTransformer.setter(v2);
  v21 = v24;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v24);
  UIButton.Configuration.background.setter(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v21);
}

id sub_10008D200()
{
  return objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
}

uint64_t sub_10008D22C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10008D250()
{
  uint64_t v0;

  return sub_10008CE1C(*(void **)(v0 + 16), *(CGFloat *)(v0 + 24));
}

uint64_t sub_10008D25C(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  type metadata accessor for TTRIQuickLookPreviewController(0, a2);
  v3 = sub_10002A750(&qword_10064B8E0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject(v3, v7 + *(_QWORD *)(v5 + 72), v6 | 7);
  *(_OWORD *)(v8 + 16) = xmmword_100520250;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8 + v7, a1, v4);
  return TTRIQuickLookPreviewController.__allocating_init(previewItemURLs:)(v8);
}

uint64_t (*sub_10008D300(uint64_t a1, char a2))()
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v12;
  void *v13;
  unsigned int v14;
  void *v15;
  NSURL *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  if ((URL.isFileURL.getter(v7) & 1) != 0 && (a2 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    v8 = *(unsigned __int8 *)(v5 + 80);
    v9 = (v8 + 16) & ~v8;
    v10 = swift_allocObject(&unk_1005EDFA0, v9 + v6, v8 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    return sub_10008D544;
  }
  else
  {
    if ((URL.isHTTPOrHTTPSURL.getter() & 1) == 0)
      return 0;
    v12 = objc_msgSend((id)objc_opt_self(MCProfileConnection), "sharedConnection");
    if (v12)
    {
      v13 = v12;
      v14 = objc_msgSend(v12, "effectiveBoolValueForSetting:", MCFeatureSafariAllowed);

      if (v14 == 2)
        return 0;
    }
    v15 = (void *)objc_opt_self(DDContextMenuAction);
    URL._bridgeToObjectiveC()(v16);
    v18 = v17;
    v19 = objc_msgSend(v15, "previewViewProviderForURL:context:", v17, 0);

    if (!v19)
    {
      return 0;
    }
    else
    {
      *(_QWORD *)(swift_allocObject(&unk_1005EDF78, 24, 7) + 16) = v19;
      return (uint64_t (*)())sub_10008D4C4;
    }
  }
}

uint64_t sub_10008D4A0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_10008D4C4()
{
  uint64_t v0;

  return (id)(*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_10008D4E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10008D544()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  return sub_10008D25C(v0 + ((v1 + 16) & ~v1), v2);
}

uint64_t sub_10008D570(uint64_t a1)
{
  _QWORD v2[7];

  v2[0] = &unk_100521C78;
  v2[1] = &unk_100521C78;
  v2[2] = &unk_100521C78;
  v2[3] = &unk_100521C90;
  v2[4] = &unk_100521CA8;
  v2[5] = &unk_100521CC0;
  v2[6] = &unk_100521CC0;
  return swift_initClassMetadata2(a1, 0, 7, v2, a1 + 264);
}

uint64_t sub_10008D5D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100641A70);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100641A70);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10008D664()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, __n128);
  __n128 v6;
  char v7;

  v1 = *v0;
  v2 = *(_QWORD **)((char *)v0 + *(_QWORD *)(*v0 + 312));
  if (v2
    && (v3 = v2[13],
        v4 = v2[14],
        sub_10001413C(v2 + 10, v3),
        v5 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v4 + 24),
        v6 = swift_unknownObjectRetain(v2),
        v7 = v5(v3, v4, v6),
        swift_unknownObjectRelease(v2),
        (v7 & 1) != 0))
  {
    return 1;
  }
  else
  {
    return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v1 + 248) + 32))(*(_QWORD *)(v1 + 232)) & 1;
  }
}

void sub_10008D704()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  char *v7;
  NSObject **v8;
  NSObject *v9;
  NSObject *v10;
  void (*v11)(uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  uint64_t ObjectType;
  uint64_t (*isa)(void ***, uint64_t, NSObject *);
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  NSString v32;
  id v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  NSString v42;
  id v43;
  _QWORD *v44;
  void *Strong;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  NSString v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  void **v67;
  void **v68;
  NSString v69;
  void *v70;
  double v71;
  id v72;
  uint64_t v73;
  id v74;
  id v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  void **v79;
  NSObject *v80;
  void **aBlock;
  uint64_t v82;
  void (*v83)(uint64_t, void *);
  void *v84;
  void *v85;
  _QWORD *v86;

  v1 = v0;
  v2 = *(_QWORD **)v0;
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 248);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 232);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v3, v4, &protocol requirements base descriptor for TTRListDetailInteractorType, &associated type descriptor for TTRListDetailInteractorType.ListDetailChangeItemType);
  __chkstk_darwin(AssociatedTypeWitness);
  v7 = (char *)&v73 - v6;
  v8 = (NSObject **)(v0 + v2[38]);
  v9 = *v8;
  if (*v8)
  {
    v10 = v8[1];
    v11 = *(void (**)(uint64_t, uint64_t, __n128))(v3 + 24);
    v12 = swift_unknownObjectRetain(*v8);
    v11(v4, v3, v12);
    v13 = sub_100005ED8(0, &qword_100641B30, REMListChangeItem_ptr);
    if (!swift_dynamicCast(&aBlock, v7, AssociatedTypeWitness, v13, 6))
    {
      if (qword_10063D340 != -1)
        swift_once(&qword_10063D340, sub_10008D5D4);
      v52 = type metadata accessor for Logger(0);
      v53 = sub_100012DC4(v52, (uint64_t)qword_100641A70);
      v54 = Logger.logObject.getter(v53);
      v55 = static os_log_type_t.fault.getter(v54);
      if (os_log_type_enabled(v54, v55))
      {
        v56 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v56 = 0;
        _os_log_impl((void *)&_mh_execute_header, v54, v55, "Attempted to convert a non list to a custom smart list", v56, 2u);
        swift_slowDealloc(v56, -1, -1);
        swift_unknownObjectRelease(v9);

        return;
      }

      goto LABEL_25;
    }
    v15 = aBlock;
    ObjectType = swift_getObjectType(v9, v14);
    v84 = (void *)v13;
    v85 = &protocol witness table for REMListChangeItem;
    aBlock = v15;
    isa = (uint64_t (*)(void ***, uint64_t, NSObject *))v10[1].isa;
    v79 = v15;
    v80 = v9;
    v18 = isa(&aBlock, ObjectType, v10);
    v20 = v19;
    v22 = v21;
    v24 = v23;
    sub_100027F10(&aBlock);
    TTRListToCustomSmartListConverterValidation.alertTitleString.getter(v18, v20, v22, v24);
    v26 = v25;
    v77 = v22;
    v78 = v18;
    v76 = v24;
    v27 = v24;
    v28 = v20;
    TTRListToCustomSmartListConverterValidation.alertDetailString.getter(v18, v20, v22, v27);
    v30 = v29;
    v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v26);
    v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v30);
    v33 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v31, v32, 1);

    if (v20 - 1 >= 2)
    {
      if (v20)
        v34 = v20 == 3;
      else
        v34 = 1;
      if (!v34)
      {
        v57 = v77;
        v58 = swift_bridgeObjectRetain(v77);
        static TTRLocalizableStrings.Common.alertCancelButton.getter(v58);
        v60 = v59;
        v61 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v60);
        v74 = (id)objc_opt_self(UIAlertAction);
        v62 = objc_msgSend(v74, "actionWithTitle:style:handler:", v61, 1, 0);
        v75 = v62;

        v73 = static TTRLocalizableStrings.ConvertToCustomSmartListAlert.makeConfirmButtonString.getter(objc_msgSend(v33, "addAction:", v62));
        v64 = v63;
        v65 = swift_allocObject(&unk_1005EE170, 24, 7);
        swift_weakInit(v65 + 16, v1);
        v66 = (_QWORD *)swift_allocObject(&unk_1005EE198, 72, 7);
        v66[2] = v4;
        v66[3] = v2[30];
        v66[4] = v3;
        v66[5] = v2[32];
        v66[6] = v65;
        v67 = v79;
        v66[7] = v79;
        v66[8] = v57;
        v68 = v67;
        swift_retain(v65);
        v69 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v64);
        v85 = sub_100090794;
        v86 = v66;
        aBlock = _NSConcreteStackBlock;
        v82 = 1107296256;
        v83 = sub_1000D4884;
        v84 = &unk_1005EE1B0;
        v70 = _Block_copy(&aBlock);
        *(_QWORD *)&v71 = swift_release(v86).n128_u64[0];
        v72 = objc_msgSend(v74, "actionWithTitle:style:handler:", v69, 0, v70, v71);
        _Block_release(v70);
        swift_release(v65);

        objc_msgSend(v33, "addAction:", v72);
        sub_100090708(v78, v28, v57);
        goto LABEL_11;
      }
      static TTRLocalizableStrings.Common.settingsButton.getter();
      v36 = v35;
      v37 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v36);
      v85 = sub_10008E1FC;
      v86 = 0;
      aBlock = _NSConcreteStackBlock;
      v82 = 1107296256;
      v83 = sub_1000D4884;
      v84 = &unk_1005EE138;
      v38 = _Block_copy(&aBlock);
      swift_release(v86);
      v39 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v37, 0, v38);
      _Block_release(v38);

      objc_msgSend(v33, "addAction:", v39);
    }
    static TTRLocalizableStrings.Common.alertOKButton.getter();
    v41 = v40;
    v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v41);
    v43 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v42, 0, 0);

    objc_msgSend(v33, "addAction:", v43);
    objc_msgSend(v33, "setPreferredAction:", v43);

    v67 = v79;
LABEL_11:
    v44 = sub_10001413C((_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 296)), *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 296) + 24));
    Strong = (void *)swift_unknownObjectWeakLoadStrong(*v44 + 16);
    v9 = v80;
    if (Strong)
    {
      v46 = Strong;
      v47 = objc_msgSend(Strong, "navigationController");

      if (v47)
      {
        objc_msgSend(v47, "presentViewController:animated:completion:", v33, 1, 0);
        swift_unknownObjectRelease(v9);

        return;
      }
    }

LABEL_25:
    swift_unknownObjectRelease(v9);
    return;
  }
  if (qword_10063D340 != -1)
    swift_once(&qword_10063D340, sub_10008D5D4);
  v48 = type metadata accessor for Logger(0);
  v49 = sub_100012DC4(v48, (uint64_t)qword_100641A70);
  v80 = Logger.logObject.getter(v49);
  v50 = static os_log_type_t.fault.getter(v80);
  if (os_log_type_enabled(v80, v50))
  {
    v51 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v51 = 0;
    _os_log_impl((void *)&_mh_execute_header, v80, v50, "Attempted to convert a list to a custom smart list with a nil converter", v51, 2u);
    swift_slowDealloc(v51, -1, -1);
  }

}

void sub_10008DE34(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t inited;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t (*v31)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t, __n128);
  id v32;
  __n128 v33;
  void *v34;
  _BYTE v36[80];
  _BYTE v37[24];

  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v36[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v37, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v17 = (_QWORD *)Strong;
    if (qword_10063D340 != -1)
      swift_once(&qword_10063D340, sub_10008D5D4);
    v18 = sub_100012DC4(v12, (uint64_t)qword_100641A70);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v18, v12);
    v19 = sub_10002A750((uint64_t *)&unk_100640F20);
    inited = swift_initStackObject(v19, v36);
    *(_OWORD *)(inited + 16) = xmmword_100520250;
    *(_QWORD *)(inited + 32) = 0x44497463656A626FLL;
    *(_QWORD *)(inited + 40) = 0xE800000000000000;
    v21 = objc_msgSend(a3, "objectID");
    *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
    *(_QWORD *)(inited + 48) = v21;
    v22 = sub_10002D32C(inited);
    sub_1000143B4((uint64_t)"List Detail Convert List to Custom Smart List {objectID: %@}", 60, 2, v22);
    swift_bridgeObjectRelease(v22);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v23 = swift_unknownObjectWeakLoadStrong((char *)v17 + *(_QWORD *)(*v17 + 280));
    if (v23)
    {
      v24 = v23;
      v25 = *sub_10001413C((_QWORD *)(v23 + 48), *(_QWORD *)(v23 + 72));
      if (qword_10063D2D0 != -1)
        swift_once(&qword_10063D2D0, sub_10005751C);
      sub_100012DC4(v12, (uint64_t)qword_10063F9B0);
      sub_1002EB4BC(0xD000000000000015, 0x80000001005624B0);
      v26 = (void *)swift_unknownObjectWeakLoadStrong(v25 + 16);
      if (v26
        && (v27 = v26,
            v28 = objc_msgSend(v26, "presentingViewController"),
            v27,
            v28))
      {
        objc_msgSend(v28, "dismissViewControllerAnimated:completion:", 1, 0);
        swift_unknownObjectRelease(v24);

      }
      else
      {
        swift_unknownObjectRelease(v24);
      }
    }
    v29 = v17[2];
    v30 = (_QWORD *)swift_allocObject(&unk_1005EE1E8, 40, 7);
    v30[2] = v17;
    v30[3] = a3;
    v30[4] = a4;
    v31 = *(uint64_t (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t, __n128))(a7 + 104);
    swift_unknownObjectRetain(v29);
    swift_retain(v17);
    v32 = a3;
    v33 = swift_bridgeObjectRetain(a4);
    v34 = (void *)v31(sub_1000907DC, v30, a5, a7, v33);
    swift_release(v17);
    swift_unknownObjectRelease(v29);
    swift_release(v30);

  }
}

uint64_t sub_10008E144(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  id v12;

  v6 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 272);
  result = swift_unknownObjectWeakLoadStrong(v6);
  if (result)
  {
    v9 = result;
    v10 = *(_QWORD *)(v6 + 8);
    ObjectType = swift_getObjectType(result, v8);
    v12 = objc_msgSend(a2, "objectID");
    (*(void (**)(uint64_t, _UNKNOWN **, id, uint64_t, uint64_t, uint64_t))(v10 + 24))(a1, &off_1005EE0C8, v12, a3, ObjectType, v10);

    return swift_unknownObjectRelease(v9);
  }
  return result;
}

void sub_10008E1FC()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v0)
  {
    v1 = v0;
    LSApplicationWorkspace.showDefaultListInSettings()();

  }
}

uint64_t sub_10008E260()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v1[12] = v0;
  v2 = *v0;
  v3 = type metadata accessor for Logger(0);
  v1[13] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[14] = v4;
  v1[15] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v2 + 248);
  v1[16] = v5;
  v6 = *(_QWORD *)(v2 + 232);
  v1[17] = v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v5, v6, &protocol requirements base descriptor for TTRListDetailInteractorType, &associated type descriptor for TTRListDetailInteractorType.ListDetailChangeItemType);
  v1[18] = AssociatedTypeWitness;
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v1[19] = v8;
  v1[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v1[21] = static MainActor.shared.getter(v9);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor, v10);
  v1[22] = v11;
  v1[23] = v12;
  return swift_task_switch(sub_10008E340, v11, v12);
}

uint64_t sub_10008E340()
{
  uint64_t v0;
  _QWORD *v1;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  unint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;

  if (TTRListDetailPresenter.shouldPresentConfirmationAlertForRemovingExistingSections()())
  {
    v1 = (_QWORD *)swift_task_alloc(dword_100641B1C);
    *(_QWORD *)(v0 + 192) = v1;
    *v1 = v0;
    v1[1] = sub_10008E650;
    return sub_10008E984();
  }
  else
  {
    v3 = swift_release();
    (*(void (**)(_QWORD, __n128))(*(_QWORD *)(v0 + 128) + 24))(*(_QWORD *)(v0 + 136), v3);
    if (qword_10063D340 != -1)
      swift_once(&qword_10063D340, sub_10008D5D4);
    v5 = *(_QWORD *)(v0 + 136);
    v4 = *(_QWORD *)(v0 + 144);
    v6 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 96);
    v11 = sub_100012DC4(v9, (uint64_t)qword_100641A70);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v11, v9);
    v12 = sub_10002A750((uint64_t *)&unk_100640F20);
    inited = swift_initStackObject(v12, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100520250;
    *(_QWORD *)(inited + 32) = 0x44497463656A626FLL;
    *(_QWORD *)(inited + 40) = 0xE800000000000000;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v7, v5, v4, &protocol requirements base descriptor for TTRListDetailInteractorType, &associated conformance descriptor for TTRListDetailInteractorType.TTRListDetailInteractorType.ListDetailChangeItemType: TTRListDetailChangeItemType);
    v15 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v4, AssociatedConformanceWitness);
    *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
    *(_QWORD *)(inited + 48) = v15;
    v16 = sub_10002D32C(inited);
    sub_1000143B4((uint64_t)"List Detail Done {objectID: %@}", 31, 2, v16);
    swift_bridgeObjectRelease(v16);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v9);
    Strong = swift_unknownObjectWeakLoadStrong(v10 + *(_QWORD *)(*(_QWORD *)v10 + 280));
    if (Strong)
    {
      v18 = Strong;
      v19 = *sub_10001413C((_QWORD *)(Strong + 48), *(_QWORD *)(Strong + 72));
      if (qword_10063D2D0 != -1)
        swift_once(&qword_10063D2D0, sub_10005751C);
      sub_100012DC4(*(_QWORD *)(v0 + 104), (uint64_t)qword_10063F9B0);
      sub_1002EB4BC(0xD000000000000015, 0x80000001005624B0);
      v20 = (void *)swift_unknownObjectWeakLoadStrong(v19 + 16);
      if (v20)
      {
        v21 = v20;
        v22 = objc_msgSend(v20, "presentingViewController");

        if (v22)
        {
          objc_msgSend(v22, "dismissViewControllerAnimated:completion:", 1, 0);

        }
      }
      swift_unknownObjectRelease(v18);
    }
    v24 = *(_QWORD *)(v0 + 152);
    v23 = *(_QWORD *)(v0 + 160);
    v25 = *(_QWORD *)(v0 + 144);
    v26 = (void *)sub_1000D5730(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 128));
    sub_10008EE64((uint64_t)v26, v27);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    v28 = *(_QWORD *)(v0 + 120);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v28);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10008E650(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 192);
  *(_BYTE *)(*v1 + 200) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_10008E6A8, *(_QWORD *)(v2 + 176), *(_QWORD *)(v2 + 184));
}

uint64_t sub_10008E6A8()
{
  uint64_t v0;
  int v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;
  unint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(unsigned __int8 *)(v0 + 200);
  v2 = swift_release();
  if ((v1 - 2) >= 2)
  {
    if (v1)
      TTRListDetailPresenter.removeExistingSections()();
    (*(void (**)(_QWORD, __n128))(*(_QWORD *)(v0 + 128) + 24))(*(_QWORD *)(v0 + 136), v2);
    if (qword_10063D340 != -1)
      swift_once(&qword_10063D340, sub_10008D5D4);
    v4 = *(_QWORD *)(v0 + 136);
    v3 = *(_QWORD *)(v0 + 144);
    v5 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 104);
    v7 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 96);
    v10 = sub_100012DC4(v8, (uint64_t)qword_100641A70);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v10, v8);
    v11 = sub_10002A750((uint64_t *)&unk_100640F20);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100520250;
    *(_QWORD *)(inited + 32) = 0x44497463656A626FLL;
    *(_QWORD *)(inited + 40) = 0xE800000000000000;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v6, v4, v3, &protocol requirements base descriptor for TTRListDetailInteractorType, &associated conformance descriptor for TTRListDetailInteractorType.TTRListDetailInteractorType.ListDetailChangeItemType: TTRListDetailChangeItemType);
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v3, AssociatedConformanceWitness);
    *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
    *(_QWORD *)(inited + 48) = v14;
    v15 = sub_10002D32C(inited);
    sub_1000143B4((uint64_t)"List Detail Done {objectID: %@}", 31, 2, v15);
    swift_bridgeObjectRelease(v15);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v8);
    Strong = swift_unknownObjectWeakLoadStrong(v9 + *(_QWORD *)(*(_QWORD *)v9 + 280));
    if (Strong)
    {
      v17 = Strong;
      v18 = *sub_10001413C((_QWORD *)(Strong + 48), *(_QWORD *)(Strong + 72));
      if (qword_10063D2D0 != -1)
        swift_once(&qword_10063D2D0, sub_10005751C);
      sub_100012DC4(*(_QWORD *)(v0 + 104), (uint64_t)qword_10063F9B0);
      sub_1002EB4BC(0xD000000000000015, 0x80000001005624B0);
      v19 = (void *)swift_unknownObjectWeakLoadStrong(v18 + 16);
      if (v19)
      {
        v20 = v19;
        v21 = objc_msgSend(v19, "presentingViewController");

        if (v21)
        {
          objc_msgSend(v21, "dismissViewControllerAnimated:completion:", 1, 0);

        }
      }
      swift_unknownObjectRelease(v17);
    }
    v23 = *(_QWORD *)(v0 + 152);
    v22 = *(_QWORD *)(v0 + 160);
    v24 = *(_QWORD *)(v0 + 144);
    v25 = (void *)sub_1000D5730(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 128));
    sub_10008EE64((uint64_t)v25, v26);

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
  }
  v27 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 160));
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10008E984()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1[36] = v0;
  v1[37] = *v0;
  v2 = type metadata accessor for MainActor(0);
  v1[38] = static MainActor.shared.getter(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor, v3);
  v1[39] = v4;
  v1[40] = v5;
  return swift_task_switch(sub_10008E9F8, v4, v5);
}

uint64_t sub_10008E9F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *object;
  Swift::String v17;
  Swift::String v18;
  void *v19;
  NSString v20;
  NSString v21;
  id v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;

  TTRListDetailPresenter.viewModel.getter(v0 + 16);
  sub_10000F614(v0 + 208, v0 + 256, &qword_100641B20);
  sub_1000905B8((_QWORD *)(v0 + 256));
  sub_1000905E0(v0 + 16);
  sub_10000F614(v0 + 256, v0 + 272, &qword_100641B20);
  if (!*(_QWORD *)(v0 + 272))
  {
    v5 = sub_100005ED8(0, (unint64_t *)&qword_100641B28, UIAlertController_ptr);
    goto LABEL_5;
  }
  v2 = *(_QWORD *)(v0 + 280);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + 272), v1);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(ObjectType, v2);
  sub_1000906E0((_QWORD *)(v0 + 256));
  v5 = sub_100005ED8(0, (unint64_t *)&qword_100641B28, UIAlertController_ptr);
  if ((v4 & 1) == 0)
  {
LABEL_5:
    v6 = 0xD00000000000001FLL;
    v7 = 0xD000000000000083;
    v13 = 0xD000000000000085;
    v8 = (void *)0x8000000100562560;
    v9 = (void *)0x8000000100562580;
    v10 = 0x80000001005624D0;
    v11 = 0x636553207065654BLL;
    v12 = 0xEE003F736E6F6974;
    goto LABEL_6;
  }
  v6 = 0xD00000000000001ELL;
  v7 = 0xD000000000000082;
  v8 = (void *)0x8000000100562730;
  v9 = (void *)0x8000000100562750;
  v10 = 0x80000001005626A0;
  v11 = 0x6C6F43207065654BLL;
  v12 = 0xED00003F736E6D75;
  v13 = 0xD000000000000084;
LABEL_6:
  v15 = *(_QWORD *)(v0 + 288);
  v14 = *(_QWORD *)(v0 + 296);
  object = TTRLocalizedString(_:comment:)(*(Swift::String *)&v11, *(Swift::String *)&v7)._object;
  v17._countAndFlagsBits = v6;
  v17._object = v8;
  v18._countAndFlagsBits = v13;
  v18._object = v9;
  v19 = TTRLocalizedString(_:comment:)(v17, v18)._object;
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  v22 = objc_msgSend((id)swift_getObjCClassFromMetadata(v5), "alertControllerWithTitle:message:preferredStyle:", v20, v21, 1);
  *(_QWORD *)(v0 + 328) = v22;

  sub_10001413C((_QWORD *)(v15 + *(_QWORD *)(*(_QWORD *)v15 + 296)), *(_QWORD *)(v15 + *(_QWORD *)(*(_QWORD *)v15 + 296) + 24));
  v23 = *(_OWORD *)(v14 + 248);
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v14 + 232);
  *(_OWORD *)(v0 + 240) = v23;
  v24 = type metadata accessor for TTRListDetailPresenter.ConvertGroceryListToRegularListConfirmationAlertResponse(255, v0 + 224);
  v25 = type metadata accessor for TTRIValueBasedAlertAction(255, v24);
  v26 = type metadata accessor for _ContiguousArrayStorage(0, v25);
  v27 = swift_allocObject(v26, 128, 7);
  v28 = static Array._adoptStorage(_:count:)(v27, 3);
  v29._countAndFlagsBits = 1885693259;
  v29._object = (void *)0xE400000000000000;
  v30._countAndFlagsBits = 0xD000000000000084;
  v30._object = (void *)0x8000000100562610;
  v31 = TTRLocalizedString(_:comment:)(v29, v30);
  *(_BYTE *)(v0 + 353) = 0;
  TTRIValueBasedAlertAction.init(title:style:value:)(v31._countAndFlagsBits, v31._object, 0, v0 + 353, v24);
  v32._countAndFlagsBits = 0x65766F6D6552;
  v32._object = (void *)0xE600000000000000;
  v33._countAndFlagsBits = 0xD000000000000084;
  v33._object = (void *)0x8000000100562610;
  v34 = TTRLocalizedString(_:comment:)(v32, v33);
  *(_BYTE *)(v0 + 354) = 1;
  TTRIValueBasedAlertAction.init(title:style:value:)(v34._countAndFlagsBits, v34._object, 2, v0 + 354, v24);
  v36 = static TTRLocalizableStrings.Common.alertCancelButton.getter(v35);
  *(_BYTE *)(v0 + 355) = 2;
  TTRIValueBasedAlertAction.init(title:style:value:)(v36, v37, 1, v0 + 355, v24);
  v38 = sub_1000BD87C(v28, v25);
  *(_QWORD *)(v0 + 336) = v38;
  v39 = (_QWORD *)swift_task_alloc(dword_10064D7DC);
  *(_QWORD *)(v0 + 344) = v39;
  *v39 = v0;
  v39[1] = sub_10008EDD0;
  return sub_100218838(v0 + 352, (uint64_t)v22, v38, v24);
}

uint64_t sub_10008EDD0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 336);
  swift_task_dealloc(*(_QWORD *)(*v0 + 344));
  swift_bridgeObjectRelease(v2);
  return swift_task_switch(sub_10008EE24, *(_QWORD *)(v1 + 312), *(_QWORD *)(v1 + 320));
}

