double sub_1004970A0(uint64_t a1, int *a2)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  int v28;
  int *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  int v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  double result;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  int v82;
  uint64_t v83;

  if (*(_QWORD *)(a1 + 64))
    swift_release();

  if (*(_QWORD *)(a1 + 128))
    swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 152));

  if (*(_QWORD *)(a1 + 168))
    swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 192));
  if (*(_QWORD *)(a1 + 200))
    swift_release();

  if (*(_QWORD *)(a1 + 240))
    swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 256));
  if (*(_QWORD *)(a1 + 264))
    swift_release();
  v4 = (_QWORD *)(a1 + a2[17]);
  swift_unknownObjectRelease(*v4);
  v5 = (_QWORD *)((char *)v4 + *(int *)(sub_10002A750(&qword_10064CB68) + 28));
  v6 = sub_10002A750(&qword_10064CBB8);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v5, v7))
    {
      case 0u:
        v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v5, v9))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_35;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_17;
          default:
            goto LABEL_36;
        }
        goto LABEL_36;
      case 1u:
        v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v5, v10))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_35:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_17:
            v11 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v5, v11);
            break;
          default:
            break;
        }
LABEL_36:
        v25 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v26 = (char *)v5 + *(int *)(v25 + 20);
        v27 = *((_QWORD *)v26 + 1);
        if (v27)
        {
          swift_bridgeObjectRelease(v27);
          sub_10003E2EC(*((void **)v26 + 2), *((_QWORD *)v26 + 3), *((_QWORD *)v26 + 4), *((_QWORD *)v26 + 5), *((_QWORD *)v26 + 6), *((_QWORD *)v26 + 7), v26[64]);
          v28 = v26[120];
          if (v28 != 255)
            sub_10002B328(*((void **)v26 + 9), *((_QWORD *)v26 + 10), *((_QWORD *)v26 + 11), *((_QWORD *)v26 + 12), *((_QWORD *)v26 + 13), *((_QWORD *)v26 + 14), v28 & 1);
        }
        v17 = *(id *)((char *)v5 + *(int *)(v25 + 44));
        goto LABEL_40;
      case 2u:

        v12 = (id *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
        {
          switch(swift_getEnumCaseMultiPayload(v12, v13))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_104;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_24;
            default:
              goto LABEL_41;
          }
        }
        goto LABEL_41;
      case 3u:

        v12 = (id *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v12, 1, v14))
        {
          switch(swift_getEnumCaseMultiPayload(v12, v14))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_104;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_24;
            default:
              goto LABEL_41;
          }
        }
        goto LABEL_41;
      case 4u:

        v12 = (id *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v12, 1, v15))
        {
          switch(swift_getEnumCaseMultiPayload(v12, v15))
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_104:
              v17 = *v12;
              goto LABEL_40;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_24:
              v16 = type metadata accessor for Date(0);
              goto LABEL_34;
            default:
              goto LABEL_41;
          }
        }
        goto LABEL_41;
      case 5u:
        v17 = (id)v5[2];
        goto LABEL_40;
      case 6u:
        v17 = (id)*v5;
        goto LABEL_40;
      case 7u:
        v18 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v5, 1, v18))
        {
          swift_bridgeObjectRelease(*v5);
          v19 = (char *)v5 + *(int *)(v18 + 20);
          v20 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
        }
        v21 = (char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v22 = *((_QWORD *)v21 + 1);
        if (!v22)
          goto LABEL_41;
        swift_bridgeObjectRelease(v22);
        v17 = (id)*((_QWORD *)v21 + 2);
LABEL_40:

LABEL_41:
        v29 = (int *)type metadata accessor for TTRReminderCellTitleViewModel(0, v8);

        swift_bridgeObjectRelease(*(_QWORD *)((char *)v5 + v29[10]));
        break;
      case 8u:
        v23 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v5, 1, v23))
        {
          v24 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v5, v24);
        }
        goto LABEL_41;
      case 9u:
        v12 = (id *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
        v16 = type metadata accessor for AnyTip(0);
LABEL_34:
        (*(void (**)(id *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v12, v16);
        goto LABEL_41;
      default:
        goto LABEL_41;
    }
  }
  v30 = a1 + a2[18];
  swift_unknownObjectRelease(*(_QWORD *)(v30 + 8));
  v31 = (_QWORD *)(v30 + *(int *)(sub_10002A750(&qword_10064CB60) + 40));
  v32 = sub_10002A750(&qword_10064CBA0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v31, 1, v32))
  {
    v33 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v31, v33))
    {
      case 0u:
        v35 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v31, v35))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_64;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_46;
          default:
            goto LABEL_65;
        }
        goto LABEL_65;
      case 1u:
        v36 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v31, v36))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_64:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_46:
            v37 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v31, v37);
            break;
          default:
            break;
        }
LABEL_65:
        v51 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v52 = (char *)v31 + *(int *)(v51 + 20);
        v53 = *((_QWORD *)v52 + 1);
        if (v53)
        {
          swift_bridgeObjectRelease(v53);
          sub_10003E2EC(*((void **)v52 + 2), *((_QWORD *)v52 + 3), *((_QWORD *)v52 + 4), *((_QWORD *)v52 + 5), *((_QWORD *)v52 + 6), *((_QWORD *)v52 + 7), v52[64]);
          v54 = v52[120];
          if (v54 != 255)
            sub_10002B328(*((void **)v52 + 9), *((_QWORD *)v52 + 10), *((_QWORD *)v52 + 11), *((_QWORD *)v52 + 12), *((_QWORD *)v52 + 13), *((_QWORD *)v52 + 14), v54 & 1);
        }
        v43 = *(id *)((char *)v31 + *(int *)(v51 + 44));
        goto LABEL_69;
      case 2u:

        v38 = (id *)((char *)v31 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v39 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v38, 1, v39))
        {
          switch(swift_getEnumCaseMultiPayload(v38, v39))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_105;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_53;
            default:
              goto LABEL_70;
          }
        }
        goto LABEL_70;
      case 3u:

        v38 = (id *)((char *)v31 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v40 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v38, 1, v40))
        {
          switch(swift_getEnumCaseMultiPayload(v38, v40))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_105;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_53;
            default:
              goto LABEL_70;
          }
        }
        goto LABEL_70;
      case 4u:

        v38 = (id *)((char *)v31 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v41 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v38, 1, v41))
        {
          switch(swift_getEnumCaseMultiPayload(v38, v41))
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_105:
              v43 = *v38;
              goto LABEL_69;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_53:
              v42 = type metadata accessor for Date(0);
              goto LABEL_63;
            default:
              goto LABEL_70;
          }
        }
        goto LABEL_70;
      case 5u:
        v43 = (id)v31[2];
        goto LABEL_69;
      case 6u:
        v43 = (id)*v31;
        goto LABEL_69;
      case 7u:
        v44 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v31, 1, v44))
        {
          swift_bridgeObjectRelease(*v31);
          v45 = (char *)v31 + *(int *)(v44 + 20);
          v46 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
        }
        v47 = (char *)v31 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v48 = *((_QWORD *)v47 + 1);
        if (!v48)
          goto LABEL_70;
        swift_bridgeObjectRelease(v48);
        v43 = (id)*((_QWORD *)v47 + 2);
LABEL_69:

LABEL_70:
        v55 = (int *)type metadata accessor for TTRIReminderCellNotesViewModel(0, v34);

        swift_bridgeObjectRelease(*(_QWORD *)((char *)v31 + v55[7]));
        swift_bridgeObjectRelease(*(_QWORD *)((char *)v31 + v55[8]));
        break;
      case 8u:
        v49 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48))(v31, 1, v49))
        {
          v50 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v31, v50);
        }
        goto LABEL_70;
      case 9u:
        v38 = (id *)((char *)v31 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
        v42 = type metadata accessor for AnyTip(0);
LABEL_63:
        (*(void (**)(id *, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v38, v42);
        goto LABEL_70;
      default:
        goto LABEL_70;
    }
  }

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[20] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[22] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[23] + 8));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[25]));
  v56 = a1 + a2[26];

  swift_bridgeObjectRelease(*(_QWORD *)(v56 + 16));
  if (*(_QWORD *)(v56 + 24))
    swift_release();
  v57 = a1 + a2[27];

  swift_bridgeObjectRelease(*(_QWORD *)(v57 + 16));
  if (*(_QWORD *)(v57 + 24))
    swift_release();
  v58 = (_QWORD *)(a1 + a2[28]);
  swift_unknownObjectRelease(*v58);
  v59 = (_QWORD *)((char *)v58 + *(int *)(sub_10002A750(&qword_10064CB58) + 28));
  v60 = sub_10002A750(&qword_10064CB70);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 48))(v59, 1, v60))
  {
    v62 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v59, v62))
    {
      case 0u:
        v63 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v59, v63))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_97;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_79;
          default:
            goto LABEL_98;
        }
        goto LABEL_98;
      case 1u:
        v64 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v59, v64))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_97:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_79:
            v65 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v59, v65);
            break;
          default:
            break;
        }
LABEL_98:
        v79 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v80 = (char *)v59 + *(int *)(v79 + 20);
        v81 = *((_QWORD *)v80 + 1);
        if (v81)
        {
          swift_bridgeObjectRelease(v81);
          sub_10003E2EC(*((void **)v80 + 2), *((_QWORD *)v80 + 3), *((_QWORD *)v80 + 4), *((_QWORD *)v80 + 5), *((_QWORD *)v80 + 6), *((_QWORD *)v80 + 7), v80[64]);
          v82 = v80[120];
          if (v82 != 255)
            sub_10002B328(*((void **)v80 + 9), *((_QWORD *)v80 + 10), *((_QWORD *)v80 + 11), *((_QWORD *)v80 + 12), *((_QWORD *)v80 + 13), *((_QWORD *)v80 + 14), v82 & 1);
        }
        v71 = *(id *)((char *)v59 + *(int *)(v79 + 44));
        goto LABEL_102;
      case 2u:

        v66 = (id *)((char *)v59 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v67 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 48))(v66, 1, v67))
        {
          switch(swift_getEnumCaseMultiPayload(v66, v67))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_106;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_86;
            default:
              goto LABEL_103;
          }
        }
        goto LABEL_103;
      case 3u:

        v66 = (id *)((char *)v59 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v68 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 48))(v66, 1, v68))
        {
          switch(swift_getEnumCaseMultiPayload(v66, v68))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_106;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_86;
            default:
              goto LABEL_103;
          }
        }
        goto LABEL_103;
      case 4u:

        v66 = (id *)((char *)v59 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v69 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 48))(v66, 1, v69))
        {
          switch(swift_getEnumCaseMultiPayload(v66, v69))
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_106:
              v71 = *v66;
              goto LABEL_102;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_86:
              v70 = type metadata accessor for Date(0);
              goto LABEL_96;
            default:
              goto LABEL_103;
          }
        }
        goto LABEL_103;
      case 5u:
        v71 = (id)v59[2];
        goto LABEL_102;
      case 6u:
        v71 = (id)*v59;
        goto LABEL_102;
      case 7u:
        v72 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 48))(v59, 1, v72))
        {
          swift_bridgeObjectRelease(*v59);
          v73 = (char *)v59 + *(int *)(v72 + 20);
          v74 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v74 - 8) + 8))(v73, v74);
        }
        v75 = (char *)v59 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v76 = *((_QWORD *)v75 + 1);
        if (!v76)
          goto LABEL_103;
        swift_bridgeObjectRelease(v76);
        v71 = (id)*((_QWORD *)v75 + 2);
LABEL_102:

LABEL_103:
        v83 = type metadata accessor for TTRIReminderCellAutoCompleteViewModel(0);
        swift_bridgeObjectRelease(*(_QWORD *)((char *)v59 + *(int *)(v83 + 24) + 8));
        *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)((char *)v59 + *(int *)(v83 + 28))).n128_u64[0];
        break;
      case 8u:
        v77 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 48))(v59, 1, v77))
        {
          v78 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v78 - 8) + 8))(v59, v78);
        }
        goto LABEL_103;
      case 9u:
        v66 = (id *)((char *)v59 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
        v70 = type metadata accessor for AnyTip(0);
LABEL_96:
        (*(void (**)(id *, uint64_t))(*(_QWORD *)(v70 - 8) + 8))(v66, v70);
        goto LABEL_103;
      default:
        goto LABEL_103;
    }
  }
  return result;
}

uint64_t sub_100497E68(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  _OWORD *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  void **v47;
  void **v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  void **v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  void **v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  void **v68;
  void **v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int (*v72)(void **, uint64_t, uint64_t);
  id v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  void **v78;
  void **v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(void **, uint64_t, uint64_t);
  id v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  void **v88;
  void **v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int (*v92)(void **, uint64_t, uint64_t);
  id v93;
  uint64_t v94;
  void *v95;
  id v96;
  double v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  void *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  void *v108;
  id v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  id v115;
  void **v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  id v120;
  void **v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  id v125;
  void **v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  void (*v134)(char *, char *, uint64_t, __n128);
  void *v135;
  __n128 v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  _QWORD *v141;
  uint64_t v142;
  void *v143;
  id v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  id v153;
  void *v154;
  id v155;
  int *v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  uint64_t v163;
  uint64_t v164;
  int v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  char v170;
  void *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void *v175;
  id v176;
  void **v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void *v185;
  id v186;
  void *v187;
  id v188;
  int *v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  void *v195;
  uint64_t v196;
  uint64_t v197;
  int v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  char v203;
  void *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  void *v208;
  id v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  void *v215;
  id v216;
  void *v217;
  id v218;
  void **v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  void *v226;
  id v227;
  void *v228;
  id v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  void *v235;
  id v236;
  void *v237;
  id v238;
  uint64_t v239;
  int *v240;
  uint64_t v241;
  void *v242;
  uint64_t v243;
  void *v244;
  uint64_t v245;
  char *v246;
  char *v247;
  uint64_t v248;
  void *v249;
  uint64_t v250;
  void *v251;
  void (*v252)(void **, _QWORD, uint64_t, uint64_t);
  id v253;
  id v254;
  id v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  __int128 v259;
  uint64_t v260;
  void **v261;
  void **v262;
  uint64_t v263;
  void *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  void *v268;
  id v269;
  void **v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  void *v274;
  id v275;
  void **v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  void *v280;
  uint64_t v281;
  void **v282;
  void **v283;
  uint64_t v284;
  uint64_t v285;
  unsigned int (*v286)(void **, uint64_t, uint64_t);
  id v287;
  uint64_t v288;
  uint64_t v289;
  void *v290;
  uint64_t v291;
  void **v292;
  void **v293;
  uint64_t v294;
  uint64_t v295;
  unsigned int (*v296)(void **, uint64_t, uint64_t);
  id v297;
  uint64_t v298;
  uint64_t v299;
  void *v300;
  uint64_t v301;
  void **v302;
  void **v303;
  uint64_t v304;
  uint64_t v305;
  unsigned int (*v306)(void **, uint64_t, uint64_t);
  id v307;
  uint64_t v308;
  void *v309;
  id v310;
  void **v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  char *v319;
  char *v320;
  uint64_t v321;
  double v322;
  void *v323;
  id v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  void *v328;
  id v329;
  void **v330;
  uint64_t v331;
  uint64_t v332;
  void *v333;
  id v334;
  void **v335;
  uint64_t v336;
  uint64_t v337;
  void *v338;
  id v339;
  void **v340;
  uint64_t v341;
  uint64_t v342;
  void *v343;
  uint64_t v344;
  uint64_t v345;
  char *v346;
  uint64_t v347;
  void (*v348)(char *, char *, uint64_t, __n128);
  void *v349;
  __n128 v350;
  char *v351;
  uint64_t v352;
  uint64_t v353;
  _QWORD *v354;
  _QWORD *v355;
  uint64_t v356;
  void *v357;
  id v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  void *v366;
  id v367;
  void *v368;
  id v369;
  int *v370;
  uint64_t v371;
  char *v372;
  char *v373;
  uint64_t v374;
  uint64_t v375;
  void *v376;
  uint64_t v377;
  uint64_t v378;
  int v379;
  __int128 v380;
  __int128 v381;
  __int128 v382;
  __int128 v383;
  char v384;
  void *v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  void *v389;
  id v390;
  void **v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  void *v399;
  id v400;
  void *v401;
  id v402;
  int *v403;
  uint64_t v404;
  char *v405;
  char *v406;
  uint64_t v407;
  uint64_t v408;
  void *v409;
  uint64_t v410;
  uint64_t v411;
  int v412;
  __int128 v413;
  __int128 v414;
  __int128 v415;
  __int128 v416;
  char v417;
  void *v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  void *v422;
  id v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  void *v429;
  id v430;
  void *v431;
  id v432;
  void **v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  void *v440;
  id v441;
  void *v442;
  id v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  void *v449;
  id v450;
  void *v451;
  id v452;
  uint64_t v453;
  int *v454;
  uint64_t v455;
  void *v456;
  uint64_t v457;
  void *v458;
  uint64_t v459;
  void *v460;
  void (*v461)(void **, _QWORD, uint64_t, uint64_t, __n128);
  id v462;
  __n128 v463;
  uint64_t v464;
  uint64_t v465;
  void *v466;
  _QWORD *v467;
  _QWORD *v468;
  uint64_t v469;
  uint64_t v470;
  _QWORD *v471;
  _QWORD *v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  _QWORD *v476;
  _QWORD *v477;
  uint64_t v478;
  uint64_t v479;
  void *v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  _QWORD *v484;
  uint64_t v485;
  uint64_t v486;
  void *v487;
  uint64_t v488;
  void **v489;
  id v490;
  id v491;
  id v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  _QWORD *v496;
  _QWORD *v497;
  void *v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  id v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  __int128 v507;
  uint64_t v508;
  uint64_t v509;
  void **v510;
  void **v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  void *v517;
  id v518;
  void **v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  void *v523;
  id v524;
  void **v525;
  uint64_t v526;
  uint64_t v527;
  void *v528;
  uint64_t v529;
  void **v530;
  uint64_t v531;
  uint64_t v532;
  unsigned int (*v533)(void **, uint64_t, uint64_t);
  id v534;
  uint64_t v535;
  void *v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  unsigned int (*v540)(void **, uint64_t, uint64_t);
  id v541;
  uint64_t v542;
  void *v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  unsigned int (*v547)(void **, uint64_t, uint64_t);
  id v548;
  uint64_t v549;
  void *v550;
  id v551;
  void **v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  char *v559;
  char *v560;
  uint64_t v561;
  void *v562;
  id v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  void *v568;
  id v569;
  void **v570;
  uint64_t v571;
  uint64_t v572;
  void *v573;
  id v574;
  void **v575;
  uint64_t v576;
  uint64_t v577;
  void *v578;
  id v579;
  void **v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  void (*v585)(char *, char *, uint64_t, __n128);
  __n128 v586;
  uint64_t v587;
  uint64_t v588;
  _QWORD *v589;
  _QWORD *v590;
  uint64_t v591;
  uint64_t v592;
  void *v593;
  id v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  void *v602;
  id v603;
  void *v604;
  id v605;
  int *v606;
  uint64_t v607;
  char *v608;
  char *v609;
  uint64_t v610;
  int v611;
  __int128 v612;
  __int128 v613;
  __int128 v614;
  __int128 v615;
  uint64_t v616;
  void *v617;
  id v618;
  void **v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  void *v627;
  id v628;
  void *v629;
  id v630;
  int *v631;
  uint64_t v632;
  char *v633;
  char *v634;
  uint64_t v635;
  int v636;
  __int128 v637;
  __int128 v638;
  __int128 v639;
  __int128 v640;
  uint64_t v641;
  void *v642;
  id v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;
  void *v649;
  id v650;
  void *v651;
  id v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  void *v659;
  id v660;
  void *v661;
  id v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  void *v668;
  id v669;
  void *v670;
  id v671;
  uint64_t v672;
  int *v673;
  uint64_t v674;
  _QWORD *v675;
  uint64_t *v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t v679;
  void *v680;
  void (*v681)(void **, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v682;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  unsigned __int8 v692;
  uint64_t v693;
  unsigned __int8 v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  int *v708;
  int *v709;
  int *v710;
  int *v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  char *v716;
  unsigned __int8 v717;
  uint64_t v718;
  unsigned __int8 v719;
  uint64_t v720;
  char *v721;
  unsigned __int8 v722;
  uint64_t v723;
  unsigned __int8 v724;
  uint64_t v725;
  void *v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t v740;
  uint64_t v741;
  uint64_t v742;
  uint64_t v743;
  void **v744;
  void **v745;
  char *v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  void *__dst;
  void *__dsta;
  void *__dstb;
  void *__dstc;
  void *__dstd;
  void *__dste;
  void *__dstf;
  void *__dstg;
  void *__dsth;
  void **__dsti;
  void **__dstj;
  void **__dstk;
  char *__dstl;
  void *__dstm;
  void *__dstn;
  void *__dsto;
  void *__dstp;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  uint64_t v772;
  void *v773;
  char v774;
  void *v775;
  char v776;
  uint64_t v777;
  int *v778;
  uint64_t v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t v782;
  uint64_t v783;
  uint64_t v784;
  uint64_t v785;
  uint64_t v786;

  v4 = a2;
  v5 = a1;
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v6 = *(void **)(a2 + 8);
  v7 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  v8 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v9 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v10 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v10;
  v12 = (_OWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 64);
  v13 = v6;
  v14 = v7;
  v15 = v8;
  v16 = v9;
  v17 = v10;
  if (v11)
  {
    v18 = *(_QWORD *)(v4 + 72);
    *(_QWORD *)(v5 + 64) = v11;
    *(_QWORD *)(v5 + 72) = v18;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(v5 + 64) = *v12;
  }
  v19 = *(_QWORD *)(v4 + 128);
  v20 = *(void **)(v4 + 80);
  v21 = *(void **)(v4 + 88);
  *(_QWORD *)(v5 + 80) = v20;
  *(_QWORD *)(v5 + 88) = v21;
  *(_BYTE *)(v5 + 96) = *(_BYTE *)(v4 + 96);
  *(_QWORD *)(v5 + 104) = *(_QWORD *)(v4 + 104);
  *(_BYTE *)(v5 + 112) = *(_BYTE *)(v4 + 112);
  v22 = *(void **)(v4 + 120);
  *(_QWORD *)(v5 + 120) = v22;
  v23 = v20;
  v24 = v21;
  v25 = v22;
  if (v19)
  {
    v26 = *(_QWORD *)(v4 + 136);
    *(_QWORD *)(v5 + 128) = v19;
    *(_QWORD *)(v5 + 136) = v26;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(v5 + 128) = *(_OWORD *)(v4 + 128);
  }
  v27 = *(_QWORD *)(v4 + 168);
  v28 = *(_QWORD *)(v4 + 152);
  *(_QWORD *)(v5 + 144) = *(_QWORD *)(v4 + 144);
  *(_QWORD *)(v5 + 152) = v28;
  v29 = *(void **)(v4 + 160);
  *(_QWORD *)(v5 + 160) = v29;
  swift_bridgeObjectRetain(v28);
  v30 = v29;
  if (v27)
  {
    v31 = *(_QWORD *)(v4 + 176);
    *(_QWORD *)(v5 + 168) = v27;
    *(_QWORD *)(v5 + 176) = v31;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(v5 + 168) = *(_OWORD *)(v4 + 168);
  }
  v32 = *(_QWORD *)(v4 + 200);
  v33 = *(_QWORD *)(v4 + 192);
  *(_QWORD *)(v5 + 184) = *(_QWORD *)(v4 + 184);
  *(_QWORD *)(v5 + 192) = v33;
  swift_bridgeObjectRetain(v33);
  if (v32)
  {
    v34 = *(_QWORD *)(v4 + 208);
    *(_QWORD *)(v5 + 200) = v32;
    *(_QWORD *)(v5 + 208) = v34;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(v5 + 200) = *(_OWORD *)(v4 + 200);
  }
  v35 = *(_QWORD *)(v4 + 240);
  *(_WORD *)(v5 + 216) = *(_WORD *)(v4 + 216);
  *(_BYTE *)(v5 + 224) = *(_BYTE *)(v4 + 224);
  v36 = *(void **)(v4 + 232);
  *(_QWORD *)(v5 + 232) = v36;
  v37 = v36;
  if (v35)
  {
    v38 = *(_QWORD *)(v4 + 248);
    *(_QWORD *)(v5 + 240) = v35;
    *(_QWORD *)(v5 + 248) = v38;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(v5 + 240) = *(_OWORD *)(v4 + 240);
  }
  v39 = *(_QWORD *)(v4 + 256);
  v40 = *(_QWORD *)(v4 + 264);
  *(_QWORD *)(v5 + 256) = v39;
  swift_bridgeObjectRetain(v39);
  if (v40)
  {
    v41 = *(_QWORD *)(v4 + 272);
    *(_QWORD *)(v5 + 264) = v40;
    *(_QWORD *)(v5 + 272) = v41;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(v5 + 264) = *(_OWORD *)(v4 + 264);
  }
  v42 = a3[17];
  v43 = v5 + v42;
  v44 = v4 + v42;
  v45 = *(_OWORD *)(v4 + v42);
  *(_OWORD *)(v5 + v42) = v45;
  swift_unknownObjectRetain(v45);
  v46 = *(int *)(sub_10002A750(&qword_10064CB68) + 28);
  v47 = (void **)(v43 + v46);
  v48 = (void **)(v44 + v46);
  v49 = sub_10002A750(&qword_10064CBB8);
  v50 = *(void **)(v49 - 8);
  v768 = v4;
  v777 = v5;
  v778 = a3;
  if ((*((unsigned int (**)(void **, uint64_t, uint64_t))v50 + 6))(v48, 1, v49))
  {
    v51 = sub_10002A750(&qword_10064CBB0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    v52 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v48, v52))
    {
      case 0u:
        __dst = v50;
        v53 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v731 = v52;
        switch(swift_getEnumCaseMultiPayload(v48, v53))
        {
          case 1u:
            v54 = *v48;
            *v47 = *v48;
            v55 = v54;
            v56 = v47;
            v57 = v53;
            v58 = 1;
            goto LABEL_61;
          case 2u:
            v147 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v147 - 8) + 16))(v47, v48, v147);
            v56 = v47;
            v57 = v53;
            v58 = 2;
            goto LABEL_61;
          case 3u:
            v148 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v148 - 8) + 16))(v47, v48, v148);
            v56 = v47;
            v57 = v53;
            v58 = 3;
            goto LABEL_61;
          case 4u:
            v149 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v149 - 8) + 16))(v47, v48, v149);
            v56 = v47;
            v57 = v53;
            v58 = 4;
            goto LABEL_61;
          case 5u:
            v150 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v150 - 8) + 16))(v47, v48, v150);
            v56 = v47;
            v57 = v53;
            v58 = 5;
            goto LABEL_61;
          case 6u:
            v151 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v151 - 8) + 16))(v47, v48, v151);
            v56 = v47;
            v57 = v53;
            v58 = 6;
            goto LABEL_61;
          case 8u:
            v152 = *v48;
            *v47 = *v48;
            v153 = v152;
            v56 = v47;
            v57 = v53;
            v58 = 8;
            goto LABEL_61;
          case 9u:
            v154 = *v48;
            *v47 = *v48;
            v155 = v154;
            v56 = v47;
            v57 = v53;
            v58 = 9;
LABEL_61:
            swift_storeEnumTagMultiPayload(v56, v57, v58);
            break;
          default:
            memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
            break;
        }
        v156 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v157 = v156[5];
        v158 = (char *)v47 + v157;
        v159 = (char *)v48 + v157;
        v160 = *(uint64_t *)((char *)v48 + v157 + 8);
        if (v160)
        {
          *(_QWORD *)v158 = *(_QWORD *)v159;
          *((_QWORD *)v158 + 1) = v160;
          v162 = (void *)*((_QWORD *)v159 + 2);
          v161 = *((_QWORD *)v159 + 3);
          v163 = *((_QWORD *)v159 + 4);
          v696 = *((_QWORD *)v159 + 5);
          v708 = v156;
          v164 = *((_QWORD *)v159 + 6);
          v684 = *((_QWORD *)v159 + 7);
          v717 = v159[64];
          swift_bridgeObjectRetain(v160);
          sub_10003E1F0(v162, v161, v163, v696, v164, v684, v717);
          *((_QWORD *)v158 + 2) = v162;
          *((_QWORD *)v158 + 3) = v161;
          *((_QWORD *)v158 + 4) = v163;
          *((_QWORD *)v158 + 5) = v696;
          *((_QWORD *)v158 + 6) = v164;
          *((_QWORD *)v158 + 7) = v684;
          v158[64] = v717;
          *(_DWORD *)(v158 + 65) = *(_DWORD *)(v159 + 65);
          v165 = v159[120];
          if (v165 == 255)
          {
            v166 = *(_OWORD *)(v159 + 88);
            *(_OWORD *)(v158 + 72) = *(_OWORD *)(v159 + 72);
            *(_OWORD *)(v158 + 88) = v166;
            *(_OWORD *)(v158 + 104) = *(_OWORD *)(v159 + 104);
            v158[120] = v159[120];
          }
          else
          {
            v170 = v165 & 1;
            v171 = (void *)*((_QWORD *)v159 + 9);
            v172 = *((_QWORD *)v159 + 10);
            v173 = *((_QWORD *)v159 + 11);
            v718 = *((_QWORD *)v159 + 12);
            v685 = *((_QWORD *)v159 + 14);
            v697 = *((_QWORD *)v159 + 13);
            sub_10002B764(v171, v172, v173, v718, v697, v685, v165 & 1);
            *((_QWORD *)v158 + 9) = v171;
            *((_QWORD *)v158 + 10) = v172;
            *((_QWORD *)v158 + 11) = v173;
            *((_QWORD *)v158 + 12) = v718;
            *((_QWORD *)v158 + 13) = v697;
            *((_QWORD *)v158 + 14) = v685;
            v158[120] = v170;
          }
          v5 = v777;
          v158[121] = v159[121];
          v156 = v708;
        }
        else
        {
          v167 = *((_OWORD *)v159 + 5);
          *((_OWORD *)v158 + 4) = *((_OWORD *)v159 + 4);
          *((_OWORD *)v158 + 5) = v167;
          *((_OWORD *)v158 + 6) = *((_OWORD *)v159 + 6);
          *(_OWORD *)(v158 + 106) = *(_OWORD *)(v159 + 106);
          v168 = *((_OWORD *)v159 + 1);
          *(_OWORD *)v158 = *(_OWORD *)v159;
          *((_OWORD *)v158 + 1) = v168;
          v169 = *((_OWORD *)v159 + 3);
          *((_OWORD *)v158 + 2) = *((_OWORD *)v159 + 2);
          *((_OWORD *)v158 + 3) = v169;
        }
        *((_BYTE *)v47 + v156[6]) = *((_BYTE *)v48 + v156[6]);
        *((_BYTE *)v47 + v156[7]) = *((_BYTE *)v48 + v156[7]);
        *((_BYTE *)v47 + v156[8]) = *((_BYTE *)v48 + v156[8]);
        *((_BYTE *)v47 + v156[9]) = *((_BYTE *)v48 + v156[9]);
        *((_BYTE *)v47 + v156[10]) = *((_BYTE *)v48 + v156[10]);
        v174 = v156[11];
        v175 = *(void **)((char *)v48 + v174);
        *(void **)((char *)v47 + v174) = v175;
        v176 = v175;
        v177 = v47;
        v178 = v731;
        v179 = 0;
        goto LABEL_85;
      case 1u:
        __dst = v50;
        v59 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v732 = v52;
        switch(swift_getEnumCaseMultiPayload(v48, v59))
        {
          case 1u:
            v60 = *v48;
            *v47 = *v48;
            v61 = v60;
            v62 = v47;
            v63 = v59;
            v64 = 1;
            goto LABEL_77;
          case 2u:
            v180 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v47, v48, v180);
            v62 = v47;
            v63 = v59;
            v64 = 2;
            goto LABEL_77;
          case 3u:
            v181 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v47, v48, v181);
            v62 = v47;
            v63 = v59;
            v64 = 3;
            goto LABEL_77;
          case 4u:
            v182 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v47, v48, v182);
            v62 = v47;
            v63 = v59;
            v64 = 4;
            goto LABEL_77;
          case 5u:
            v183 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v47, v48, v183);
            v62 = v47;
            v63 = v59;
            v64 = 5;
            goto LABEL_77;
          case 6u:
            v184 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v47, v48, v184);
            v62 = v47;
            v63 = v59;
            v64 = 6;
            goto LABEL_77;
          case 8u:
            v185 = *v48;
            *v47 = *v48;
            v186 = v185;
            v62 = v47;
            v63 = v59;
            v64 = 8;
            goto LABEL_77;
          case 9u:
            v187 = *v48;
            *v47 = *v48;
            v188 = v187;
            v62 = v47;
            v63 = v59;
            v64 = 9;
LABEL_77:
            swift_storeEnumTagMultiPayload(v62, v63, v64);
            break;
          default:
            memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
            break;
        }
        v189 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v190 = v189[5];
        v191 = (char *)v47 + v190;
        v192 = (char *)v48 + v190;
        v193 = *(uint64_t *)((char *)v48 + v190 + 8);
        if (v193)
        {
          *(_QWORD *)v191 = *(_QWORD *)v192;
          *((_QWORD *)v191 + 1) = v193;
          v195 = (void *)*((_QWORD *)v192 + 2);
          v194 = *((_QWORD *)v192 + 3);
          v196 = *((_QWORD *)v192 + 5);
          v698 = *((_QWORD *)v192 + 4);
          v709 = v189;
          v197 = *((_QWORD *)v192 + 6);
          v686 = *((_QWORD *)v192 + 7);
          v719 = v192[64];
          swift_bridgeObjectRetain(v193);
          sub_10003E1F0(v195, v194, v698, v196, v197, v686, v719);
          *((_QWORD *)v191 + 2) = v195;
          *((_QWORD *)v191 + 3) = v194;
          *((_QWORD *)v191 + 4) = v698;
          *((_QWORD *)v191 + 5) = v196;
          *((_QWORD *)v191 + 6) = v197;
          *((_QWORD *)v191 + 7) = v686;
          v191[64] = v719;
          *(_DWORD *)(v191 + 65) = *(_DWORD *)(v192 + 65);
          v198 = v192[120];
          if (v198 == 255)
          {
            v199 = *(_OWORD *)(v192 + 88);
            *(_OWORD *)(v191 + 72) = *(_OWORD *)(v192 + 72);
            *(_OWORD *)(v191 + 88) = v199;
            *(_OWORD *)(v191 + 104) = *(_OWORD *)(v192 + 104);
            v191[120] = v192[120];
          }
          else
          {
            v203 = v198 & 1;
            v204 = (void *)*((_QWORD *)v192 + 9);
            v205 = *((_QWORD *)v192 + 10);
            v206 = *((_QWORD *)v192 + 11);
            v720 = *((_QWORD *)v192 + 12);
            v687 = *((_QWORD *)v192 + 14);
            v699 = *((_QWORD *)v192 + 13);
            sub_10002B764(v204, v205, v206, v720, v699, v687, v198 & 1);
            *((_QWORD *)v191 + 9) = v204;
            *((_QWORD *)v191 + 10) = v205;
            *((_QWORD *)v191 + 11) = v206;
            *((_QWORD *)v191 + 12) = v720;
            *((_QWORD *)v191 + 13) = v699;
            *((_QWORD *)v191 + 14) = v687;
            v191[120] = v203;
          }
          v5 = v777;
          v191[121] = v192[121];
          v189 = v709;
        }
        else
        {
          v200 = *((_OWORD *)v192 + 5);
          *((_OWORD *)v191 + 4) = *((_OWORD *)v192 + 4);
          *((_OWORD *)v191 + 5) = v200;
          *((_OWORD *)v191 + 6) = *((_OWORD *)v192 + 6);
          *(_OWORD *)(v191 + 106) = *(_OWORD *)(v192 + 106);
          v201 = *((_OWORD *)v192 + 1);
          *(_OWORD *)v191 = *(_OWORD *)v192;
          *((_OWORD *)v191 + 1) = v201;
          v202 = *((_OWORD *)v192 + 3);
          *((_OWORD *)v191 + 2) = *((_OWORD *)v192 + 2);
          *((_OWORD *)v191 + 3) = v202;
        }
        *((_BYTE *)v47 + v189[6]) = *((_BYTE *)v48 + v189[6]);
        *((_BYTE *)v47 + v189[7]) = *((_BYTE *)v48 + v189[7]);
        *((_BYTE *)v47 + v189[8]) = *((_BYTE *)v48 + v189[8]);
        *((_BYTE *)v47 + v189[9]) = *((_BYTE *)v48 + v189[9]);
        *((_BYTE *)v47 + v189[10]) = *((_BYTE *)v48 + v189[10]);
        v207 = v189[11];
        v208 = *(void **)((char *)v48 + v207);
        *(void **)((char *)v47 + v207) = v208;
        v209 = v208;
        v177 = v47;
        v178 = v732;
        v179 = 1;
LABEL_85:
        swift_storeEnumTagMultiPayload(v177, v178, v179);
        a3 = v778;
        goto LABEL_120;
      case 2u:
        v733 = v52;
        __dsta = v50;
        v65 = v5;
        v66 = *v48;
        *v47 = *v48;
        v67 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v68 = (void **)((char *)v47 + v67);
        v69 = (void **)((char *)v48 + v67);
        v70 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v71 = *(_QWORD *)(v70 - 8);
        v72 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v71 + 48);
        v73 = v66;
        if (v72(v69, 1, v70))
        {
          v74 = sub_10002A750(&qword_100644980);
          memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v69, v70))
          {
            case 1u:
              v114 = *v69;
              *v68 = *v69;
              v115 = v114;
              v116 = v68;
              v117 = v70;
              v118 = 1;
              goto LABEL_94;
            case 2u:
              v210 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v210 - 8) + 16))(v68, v69, v210);
              v116 = v68;
              v117 = v70;
              v118 = 2;
              goto LABEL_94;
            case 3u:
              v211 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v211 - 8) + 16))(v68, v69, v211);
              v116 = v68;
              v117 = v70;
              v118 = 3;
              goto LABEL_94;
            case 4u:
              v212 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v212 - 8) + 16))(v68, v69, v212);
              v116 = v68;
              v117 = v70;
              v118 = 4;
              goto LABEL_94;
            case 5u:
              v213 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v213 - 8) + 16))(v68, v69, v213);
              v116 = v68;
              v117 = v70;
              v118 = 5;
              goto LABEL_94;
            case 6u:
              v214 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v214 - 8) + 16))(v68, v69, v214);
              v116 = v68;
              v117 = v70;
              v118 = 6;
              goto LABEL_94;
            case 8u:
              v215 = *v69;
              *v68 = *v69;
              v216 = v215;
              v116 = v68;
              v117 = v70;
              v118 = 8;
              goto LABEL_94;
            case 9u:
              v217 = *v69;
              *v68 = *v69;
              v218 = v217;
              v116 = v68;
              v117 = v70;
              v118 = 9;
LABEL_94:
              swift_storeEnumTagMultiPayload(v116, v117, v118);
              break;
            default:
              memcpy(v68, v69, *(_QWORD *)(v71 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
        }
        v5 = v65;
        a3 = v778;
        v219 = v47;
        v220 = v733;
        v221 = 2;
        goto LABEL_115;
      case 3u:
        v734 = v52;
        __dst = v50;
        v75 = v5;
        v76 = *v48;
        *v47 = *v48;
        v77 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v78 = (void **)((char *)v47 + v77);
        v79 = (void **)((char *)v48 + v77);
        v80 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v81 = *(_QWORD *)(v80 - 8);
        v82 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v81 + 48);
        v83 = v76;
        if (v82(v79, 1, v80))
        {
          v84 = sub_10002A750(&qword_100644980);
          memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
          v5 = v75;
          v4 = v768;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v79, v80))
          {
            case 1u:
              v119 = *v79;
              *v78 = *v79;
              v120 = v119;
              v121 = v78;
              v122 = v80;
              v123 = 1;
              goto LABEL_117;
            case 2u:
              v222 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v222 - 8) + 16))(v78, v79, v222);
              v121 = v78;
              v122 = v80;
              v123 = 2;
              goto LABEL_117;
            case 3u:
              v223 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v223 - 8) + 16))(v78, v79, v223);
              v121 = v78;
              v122 = v80;
              v123 = 3;
              goto LABEL_117;
            case 4u:
              v224 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v224 - 8) + 16))(v78, v79, v224);
              v121 = v78;
              v122 = v80;
              v123 = 4;
              goto LABEL_117;
            case 5u:
              v239 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v239 - 8) + 16))(v78, v79, v239);
              v121 = v78;
              v122 = v80;
              v123 = 5;
              goto LABEL_117;
            case 6u:
              v225 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v225 - 8) + 16))(v78, v79, v225);
              v121 = v78;
              v122 = v80;
              v123 = 6;
              goto LABEL_117;
            case 8u:
              v226 = *v79;
              *v78 = *v79;
              v227 = v226;
              v121 = v78;
              v122 = v80;
              v123 = 8;
              goto LABEL_117;
            case 9u:
              v228 = *v79;
              *v78 = *v79;
              v229 = v228;
              v121 = v78;
              v122 = v80;
              v123 = 9;
LABEL_117:
              swift_storeEnumTagMultiPayload(v121, v122, v123);
              break;
            default:
              memcpy(v78, v79, *(_QWORD *)(v81 + 64));
              break;
          }
          v5 = v75;
          v4 = v768;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
        }
        a3 = v778;
        swift_storeEnumTagMultiPayload(v47, v734, 3);
LABEL_120:
        v50 = __dst;
        break;
      case 4u:
        v735 = v52;
        __dsta = v50;
        v85 = v5;
        v86 = *v48;
        *v47 = *v48;
        v87 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v88 = (void **)((char *)v47 + v87);
        v89 = (void **)((char *)v48 + v87);
        v90 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v91 = *(_QWORD *)(v90 - 8);
        v92 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v91 + 48);
        v93 = v86;
        if (v92(v89, 1, v90))
        {
          v94 = sub_10002A750(&qword_100644980);
          memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v89, v90))
          {
            case 1u:
              v124 = *v89;
              *v88 = *v89;
              v125 = v124;
              v126 = v88;
              v127 = v90;
              v128 = 1;
              goto LABEL_112;
            case 2u:
              v230 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v230 - 8) + 16))(v88, v89, v230);
              v126 = v88;
              v127 = v90;
              v128 = 2;
              goto LABEL_112;
            case 3u:
              v231 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v231 - 8) + 16))(v88, v89, v231);
              v126 = v88;
              v127 = v90;
              v128 = 3;
              goto LABEL_112;
            case 4u:
              v232 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v232 - 8) + 16))(v88, v89, v232);
              v126 = v88;
              v127 = v90;
              v128 = 4;
              goto LABEL_112;
            case 5u:
              v233 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v233 - 8) + 16))(v88, v89, v233);
              v126 = v88;
              v127 = v90;
              v128 = 5;
              goto LABEL_112;
            case 6u:
              v234 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v234 - 8) + 16))(v88, v89, v234);
              v126 = v88;
              v127 = v90;
              v128 = 6;
              goto LABEL_112;
            case 8u:
              v235 = *v89;
              *v88 = *v89;
              v236 = v235;
              v126 = v88;
              v127 = v90;
              v128 = 8;
              goto LABEL_112;
            case 9u:
              v237 = *v89;
              *v88 = *v89;
              v238 = v237;
              v126 = v88;
              v127 = v90;
              v128 = 9;
LABEL_112:
              swift_storeEnumTagMultiPayload(v126, v127, v128);
              break;
            default:
              memcpy(v88, v89, *(_QWORD *)(v91 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
        }
        v5 = v85;
        a3 = v778;
        v219 = v47;
        v220 = v735;
        v221 = 4;
LABEL_115:
        swift_storeEnumTagMultiPayload(v219, v220, v221);
        v50 = __dsta;
        v4 = v768;
        break;
      case 5u:
        *v47 = *v48;
        *((_BYTE *)v47 + 8) = *((_BYTE *)v48 + 8);
        *(_WORD *)((char *)v47 + 9) = *(_WORD *)((char *)v48 + 9);
        v95 = v48[2];
        v47[2] = v95;
        v96 = v95;
        swift_storeEnumTagMultiPayload(v47, v52, 5);
        break;
      case 6u:
        v108 = *v48;
        *v47 = *v48;
        v109 = v108;
        swift_storeEnumTagMultiPayload(v47, v52, 6);
        break;
      case 7u:
        __dstb = v50;
        v98 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v99 = *(_QWORD *)(v98 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v99 + 48))(v48, 1, v98))
        {
          v100 = sub_10002A750(&qword_100644600);
          memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
        }
        else
        {
          v736 = v52;
          v129 = *v48;
          *v47 = *v48;
          v130 = *(int *)(v98 + 20);
          v716 = (char *)v47 + v130;
          v131 = v5;
          v132 = (char *)v48 + v130;
          v133 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v134 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v133 - 8) + 16);
          v135 = v129;
          v52 = v736;
          v136 = swift_bridgeObjectRetain(v135);
          v137 = v132;
          v5 = v131;
          v4 = v768;
          v138 = v133;
          a3 = v778;
          v134(v716, v137, v138, v136);
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v99 + 56))(v47, 0, 1, v98);
        }
        v139 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v140 = (void **)((char *)v47 + v139);
        v141 = (void **)((char *)v48 + v139);
        v142 = v141[1];
        v50 = __dstb;
        if (v142)
        {
          *v140 = *v141;
          v140[1] = v142;
          v143 = (void *)v141[2];
          v140[2] = v143;
          swift_bridgeObjectRetain(v142);
          v144 = v143;
        }
        else
        {
          *(_OWORD *)v140 = *(_OWORD *)v141;
          v140[2] = v141[2];
        }
        swift_storeEnumTagMultiPayload(v47, v52, 7);
        break;
      case 8u:
        v110 = v50;
        v111 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v112 = *(_QWORD *)(v111 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v112 + 48))(v48, 1, v111))
        {
          v113 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
        }
        else
        {
          v145 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v145 - 8) + 16))(v47, v48, v145);
          *((_BYTE *)v47 + *(int *)(v111 + 20)) = *((_BYTE *)v48 + *(int *)(v111 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v112 + 56))(v47, 0, 1, v111);
        }
        v50 = v110;
        v146 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)v47 + *(int *)(v146 + 20)) = *(void **)((char *)v48 + *(int *)(v146 + 20));
        swift_storeEnumTagMultiPayload(v47, v52, 8);
        break;
      case 9u:
        *(_BYTE *)v47 = *(_BYTE *)v48;
        v101 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v102 = v52;
        v103 = (char *)v47 + v101;
        v104 = v50;
        v105 = (char *)v48 + v101;
        v106 = type metadata accessor for AnyTip(0);
        v107 = v105;
        v50 = v104;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v103, v107, v106);
        swift_storeEnumTagMultiPayload(v47, v102, 9);
        break;
      default:
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
        break;
    }
    v240 = (int *)type metadata accessor for TTRReminderCellTitleViewModel(0, v97);
    *((_BYTE *)v47 + v240[5]) = *((_BYTE *)v48 + v240[5]);
    v241 = v240[6];
    v242 = *(void **)((char *)v48 + v241);
    *(void **)((char *)v47 + v241) = v242;
    v243 = v240[7];
    v244 = *(void **)((char *)v48 + v243);
    *(void **)((char *)v47 + v243) = v244;
    *((_BYTE *)v47 + v240[8]) = *((_BYTE *)v48 + v240[8]);
    v245 = v240[9];
    v246 = (char *)v47 + v245;
    v247 = (char *)v48 + v245;
    *(_QWORD *)v246 = *(_QWORD *)v247;
    v246[8] = v247[8];
    v248 = v240[10];
    v249 = *(void **)((char *)v48 + v248);
    *(void **)((char *)v47 + v248) = v249;
    v250 = v240[11];
    v251 = *(void **)((char *)v48 + v250);
    *(void **)((char *)v47 + v250) = v251;
    *(void **)((char *)v47 + *(int *)(v49 + 48)) = *(void **)((char *)v48 + *(int *)(v49 + 48));
    v252 = (void (*)(void **, _QWORD, uint64_t, uint64_t))*((_QWORD *)v50 + 7);
    v253 = v242;
    v254 = v244;
    swift_bridgeObjectRetain(v249);
    v255 = v251;
    v252(v47, 0, 1, v49);
  }
  v256 = a3[18];
  v257 = v5 + v256;
  v258 = v4 + v256;
  *(_BYTE *)v257 = *(_BYTE *)(v4 + v256);
  v259 = *(_OWORD *)(v4 + v256 + 8);
  *(_OWORD *)(v257 + 8) = v259;
  swift_unknownObjectRetain(v259);
  v260 = *(int *)(sub_10002A750(&qword_10064CB60) + 40);
  v261 = (void **)(v257 + v260);
  v262 = (void **)(v258 + v260);
  v263 = sub_10002A750(&qword_10064CBA0);
  v264 = *(void **)(v263 - 8);
  if ((*((unsigned int (**)(void **, uint64_t, uint64_t))v264 + 6))(v262, 1, v263))
  {
    v265 = sub_10002A750(&qword_10064CB98);
    memcpy(v261, v262, *(_QWORD *)(*(_QWORD *)(v265 - 8) + 64));
  }
  else
  {
    v266 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v262, v266))
    {
      case 0u:
        v267 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v737 = v266;
        __dstc = v264;
        switch(swift_getEnumCaseMultiPayload(v262, v267))
        {
          case 1u:
            v268 = *v262;
            *v261 = *v262;
            v269 = v268;
            v270 = v261;
            v271 = v267;
            v272 = 1;
            goto LABEL_164;
          case 2u:
            v361 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v361 - 8) + 16))(v261, v262, v361);
            v270 = v261;
            v271 = v267;
            v272 = 2;
            goto LABEL_164;
          case 3u:
            v362 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v362 - 8) + 16))(v261, v262, v362);
            v270 = v261;
            v271 = v267;
            v272 = 3;
            goto LABEL_164;
          case 4u:
            v363 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v363 - 8) + 16))(v261, v262, v363);
            v270 = v261;
            v271 = v267;
            v272 = 4;
            goto LABEL_164;
          case 5u:
            v364 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v364 - 8) + 16))(v261, v262, v364);
            v270 = v261;
            v271 = v267;
            v272 = 5;
            goto LABEL_164;
          case 6u:
            v365 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v365 - 8) + 16))(v261, v262, v365);
            v270 = v261;
            v271 = v267;
            v272 = 6;
            goto LABEL_164;
          case 8u:
            v366 = *v262;
            *v261 = *v262;
            v367 = v366;
            v270 = v261;
            v271 = v267;
            v272 = 8;
            goto LABEL_164;
          case 9u:
            v368 = *v262;
            *v261 = *v262;
            v369 = v368;
            v270 = v261;
            v271 = v267;
            v272 = 9;
LABEL_164:
            swift_storeEnumTagMultiPayload(v270, v271, v272);
            break;
          default:
            memcpy(v261, v262, *(_QWORD *)(*(_QWORD *)(v267 - 8) + 64));
            break;
        }
        v370 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v371 = v370[5];
        v372 = (char *)v261 + v371;
        v373 = (char *)v262 + v371;
        v374 = *(uint64_t *)((char *)v262 + v371 + 8);
        if (v374)
        {
          *(_QWORD *)v372 = *(_QWORD *)v373;
          *((_QWORD *)v372 + 1) = v374;
          v376 = (void *)*((_QWORD *)v373 + 2);
          v375 = *((_QWORD *)v373 + 3);
          v377 = *((_QWORD *)v373 + 4);
          v700 = *((_QWORD *)v373 + 5);
          v710 = v370;
          v378 = *((_QWORD *)v373 + 6);
          v688 = *((_QWORD *)v373 + 7);
          v722 = v373[64];
          swift_bridgeObjectRetain(v374);
          sub_10003E1F0(v376, v375, v377, v700, v378, v688, v722);
          *((_QWORD *)v372 + 2) = v376;
          *((_QWORD *)v372 + 3) = v375;
          *((_QWORD *)v372 + 4) = v377;
          *((_QWORD *)v372 + 5) = v700;
          *((_QWORD *)v372 + 6) = v378;
          *((_QWORD *)v372 + 7) = v688;
          v372[64] = v722;
          *(_DWORD *)(v372 + 65) = *(_DWORD *)(v373 + 65);
          v379 = v373[120];
          if (v379 == 255)
          {
            v380 = *(_OWORD *)(v373 + 88);
            *(_OWORD *)(v372 + 72) = *(_OWORD *)(v373 + 72);
            *(_OWORD *)(v372 + 88) = v380;
            *(_OWORD *)(v372 + 104) = *(_OWORD *)(v373 + 104);
            v372[120] = v373[120];
          }
          else
          {
            v384 = v379 & 1;
            v385 = (void *)*((_QWORD *)v373 + 9);
            v386 = *((_QWORD *)v373 + 10);
            v387 = *((_QWORD *)v373 + 11);
            v723 = *((_QWORD *)v373 + 12);
            v689 = *((_QWORD *)v373 + 14);
            v701 = *((_QWORD *)v373 + 13);
            sub_10002B764(v385, v386, v387, v723, v701, v689, v379 & 1);
            *((_QWORD *)v372 + 9) = v385;
            *((_QWORD *)v372 + 10) = v386;
            *((_QWORD *)v372 + 11) = v387;
            *((_QWORD *)v372 + 12) = v723;
            *((_QWORD *)v372 + 13) = v701;
            *((_QWORD *)v372 + 14) = v689;
            v372[120] = v384;
          }
          v5 = v777;
          v372[121] = v373[121];
          v370 = v710;
        }
        else
        {
          v381 = *((_OWORD *)v373 + 5);
          *((_OWORD *)v372 + 4) = *((_OWORD *)v373 + 4);
          *((_OWORD *)v372 + 5) = v381;
          *((_OWORD *)v372 + 6) = *((_OWORD *)v373 + 6);
          *(_OWORD *)(v372 + 106) = *(_OWORD *)(v373 + 106);
          v382 = *((_OWORD *)v373 + 1);
          *(_OWORD *)v372 = *(_OWORD *)v373;
          *((_OWORD *)v372 + 1) = v382;
          v383 = *((_OWORD *)v373 + 3);
          *((_OWORD *)v372 + 2) = *((_OWORD *)v373 + 2);
          *((_OWORD *)v372 + 3) = v383;
          v5 = v777;
        }
        *((_BYTE *)v261 + v370[6]) = *((_BYTE *)v262 + v370[6]);
        *((_BYTE *)v261 + v370[7]) = *((_BYTE *)v262 + v370[7]);
        *((_BYTE *)v261 + v370[8]) = *((_BYTE *)v262 + v370[8]);
        *((_BYTE *)v261 + v370[9]) = *((_BYTE *)v262 + v370[9]);
        *((_BYTE *)v261 + v370[10]) = *((_BYTE *)v262 + v370[10]);
        v388 = v370[11];
        v389 = *(void **)((char *)v262 + v388);
        *(void **)((char *)v261 + v388) = v389;
        v390 = v389;
        v391 = v261;
        v392 = v737;
        v393 = 0;
        goto LABEL_188;
      case 1u:
        v273 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v738 = v266;
        __dstc = v264;
        switch(swift_getEnumCaseMultiPayload(v262, v273))
        {
          case 1u:
            v274 = *v262;
            *v261 = *v262;
            v275 = v274;
            v276 = v261;
            v277 = v273;
            v278 = 1;
            goto LABEL_180;
          case 2u:
            v394 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v394 - 8) + 16))(v261, v262, v394);
            v276 = v261;
            v277 = v273;
            v278 = 2;
            goto LABEL_180;
          case 3u:
            v395 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v395 - 8) + 16))(v261, v262, v395);
            v276 = v261;
            v277 = v273;
            v278 = 3;
            goto LABEL_180;
          case 4u:
            v396 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v396 - 8) + 16))(v261, v262, v396);
            v276 = v261;
            v277 = v273;
            v278 = 4;
            goto LABEL_180;
          case 5u:
            v397 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v397 - 8) + 16))(v261, v262, v397);
            v276 = v261;
            v277 = v273;
            v278 = 5;
            goto LABEL_180;
          case 6u:
            v398 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v398 - 8) + 16))(v261, v262, v398);
            v276 = v261;
            v277 = v273;
            v278 = 6;
            goto LABEL_180;
          case 8u:
            v399 = *v262;
            *v261 = *v262;
            v400 = v399;
            v276 = v261;
            v277 = v273;
            v278 = 8;
            goto LABEL_180;
          case 9u:
            v401 = *v262;
            *v261 = *v262;
            v402 = v401;
            v276 = v261;
            v277 = v273;
            v278 = 9;
LABEL_180:
            swift_storeEnumTagMultiPayload(v276, v277, v278);
            break;
          default:
            memcpy(v261, v262, *(_QWORD *)(*(_QWORD *)(v273 - 8) + 64));
            break;
        }
        v403 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v404 = v403[5];
        v405 = (char *)v261 + v404;
        v406 = (char *)v262 + v404;
        v407 = *(uint64_t *)((char *)v262 + v404 + 8);
        if (v407)
        {
          *(_QWORD *)v405 = *(_QWORD *)v406;
          *((_QWORD *)v405 + 1) = v407;
          v409 = (void *)*((_QWORD *)v406 + 2);
          v408 = *((_QWORD *)v406 + 3);
          v410 = *((_QWORD *)v406 + 5);
          v702 = *((_QWORD *)v406 + 4);
          v711 = v403;
          v411 = *((_QWORD *)v406 + 6);
          v690 = *((_QWORD *)v406 + 7);
          v724 = v406[64];
          swift_bridgeObjectRetain(v407);
          sub_10003E1F0(v409, v408, v702, v410, v411, v690, v724);
          *((_QWORD *)v405 + 2) = v409;
          *((_QWORD *)v405 + 3) = v408;
          *((_QWORD *)v405 + 4) = v702;
          *((_QWORD *)v405 + 5) = v410;
          *((_QWORD *)v405 + 6) = v411;
          *((_QWORD *)v405 + 7) = v690;
          v405[64] = v724;
          *(_DWORD *)(v405 + 65) = *(_DWORD *)(v406 + 65);
          v412 = v406[120];
          if (v412 == 255)
          {
            v413 = *(_OWORD *)(v406 + 88);
            *(_OWORD *)(v405 + 72) = *(_OWORD *)(v406 + 72);
            *(_OWORD *)(v405 + 88) = v413;
            *(_OWORD *)(v405 + 104) = *(_OWORD *)(v406 + 104);
            v405[120] = v406[120];
          }
          else
          {
            v417 = v412 & 1;
            v418 = (void *)*((_QWORD *)v406 + 9);
            v419 = *((_QWORD *)v406 + 10);
            v420 = *((_QWORD *)v406 + 11);
            v725 = *((_QWORD *)v406 + 12);
            v691 = *((_QWORD *)v406 + 14);
            v703 = *((_QWORD *)v406 + 13);
            sub_10002B764(v418, v419, v420, v725, v703, v691, v412 & 1);
            *((_QWORD *)v405 + 9) = v418;
            *((_QWORD *)v405 + 10) = v419;
            *((_QWORD *)v405 + 11) = v420;
            *((_QWORD *)v405 + 12) = v725;
            *((_QWORD *)v405 + 13) = v703;
            *((_QWORD *)v405 + 14) = v691;
            v405[120] = v417;
          }
          v5 = v777;
          v405[121] = v406[121];
          v403 = v711;
        }
        else
        {
          v414 = *((_OWORD *)v406 + 5);
          *((_OWORD *)v405 + 4) = *((_OWORD *)v406 + 4);
          *((_OWORD *)v405 + 5) = v414;
          *((_OWORD *)v405 + 6) = *((_OWORD *)v406 + 6);
          *(_OWORD *)(v405 + 106) = *(_OWORD *)(v406 + 106);
          v415 = *((_OWORD *)v406 + 1);
          *(_OWORD *)v405 = *(_OWORD *)v406;
          *((_OWORD *)v405 + 1) = v415;
          v416 = *((_OWORD *)v406 + 3);
          *((_OWORD *)v405 + 2) = *((_OWORD *)v406 + 2);
          *((_OWORD *)v405 + 3) = v416;
        }
        *((_BYTE *)v261 + v403[6]) = *((_BYTE *)v262 + v403[6]);
        *((_BYTE *)v261 + v403[7]) = *((_BYTE *)v262 + v403[7]);
        *((_BYTE *)v261 + v403[8]) = *((_BYTE *)v262 + v403[8]);
        *((_BYTE *)v261 + v403[9]) = *((_BYTE *)v262 + v403[9]);
        *((_BYTE *)v261 + v403[10]) = *((_BYTE *)v262 + v403[10]);
        v421 = v403[11];
        v422 = *(void **)((char *)v262 + v421);
        *(void **)((char *)v261 + v421) = v422;
        v423 = v422;
        v391 = v261;
        v392 = v738;
        v393 = 1;
LABEL_188:
        swift_storeEnumTagMultiPayload(v391, v392, v393);
        a3 = v778;
        v264 = __dstc;
        break;
      case 2u:
        v739 = v266;
        __dstd = v264;
        v279 = v5;
        v280 = *v262;
        *v261 = *v262;
        v281 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v282 = (void **)((char *)v261 + v281);
        v283 = (void **)((char *)v262 + v281);
        v284 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v285 = *(_QWORD *)(v284 - 8);
        v286 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v285 + 48);
        v287 = v280;
        if (v286(v283, 1, v284))
        {
          v288 = sub_10002A750(&qword_100644980);
          memcpy(v282, v283, *(_QWORD *)(*(_QWORD *)(v288 - 8) + 64));
          v5 = v279;
          a3 = v778;
          v264 = __dstd;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v283, v284))
          {
            case 1u:
              v328 = *v283;
              *v282 = *v283;
              v329 = v328;
              v330 = v282;
              v331 = v284;
              v332 = 1;
              goto LABEL_197;
            case 2u:
              v424 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v424 - 8) + 16))(v282, v283, v424);
              v330 = v282;
              v331 = v284;
              v332 = 2;
              goto LABEL_197;
            case 3u:
              v425 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v425 - 8) + 16))(v282, v283, v425);
              v330 = v282;
              v331 = v284;
              v332 = 3;
              goto LABEL_197;
            case 4u:
              v426 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v426 - 8) + 16))(v282, v283, v426);
              v330 = v282;
              v331 = v284;
              v332 = 4;
              goto LABEL_197;
            case 5u:
              v427 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v427 - 8) + 16))(v282, v283, v427);
              v330 = v282;
              v331 = v284;
              v332 = 5;
              goto LABEL_197;
            case 6u:
              v428 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v428 - 8) + 16))(v282, v283, v428);
              v330 = v282;
              v331 = v284;
              v332 = 6;
              goto LABEL_197;
            case 8u:
              v429 = *v283;
              *v282 = *v283;
              v430 = v429;
              v330 = v282;
              v331 = v284;
              v332 = 8;
              goto LABEL_197;
            case 9u:
              v431 = *v283;
              *v282 = *v283;
              v432 = v431;
              v330 = v282;
              v331 = v284;
              v332 = 9;
LABEL_197:
              swift_storeEnumTagMultiPayload(v330, v331, v332);
              break;
            default:
              memcpy(v282, v283, *(_QWORD *)(v285 + 64));
              break;
          }
          v264 = __dstd;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v285 + 56))(v282, 0, 1, v284);
          v5 = v279;
          a3 = v778;
        }
        v433 = v261;
        v434 = v739;
        v435 = 2;
        goto LABEL_218;
      case 3u:
        v740 = v266;
        __dste = v264;
        v289 = v5;
        v290 = *v262;
        *v261 = *v262;
        v291 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v292 = (void **)((char *)v261 + v291);
        v293 = (void **)((char *)v262 + v291);
        v294 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v295 = *(_QWORD *)(v294 - 8);
        v296 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v295 + 48);
        v297 = v290;
        if (v296(v293, 1, v294))
        {
          v298 = sub_10002A750(&qword_100644980);
          memcpy(v292, v293, *(_QWORD *)(*(_QWORD *)(v298 - 8) + 64));
          v5 = v289;
          v264 = __dste;
          v4 = v768;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v293, v294))
          {
            case 1u:
              v333 = *v293;
              *v292 = *v293;
              v334 = v333;
              v335 = v292;
              v336 = v294;
              v337 = 1;
              goto LABEL_220;
            case 2u:
              v436 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v436 - 8) + 16))(v292, v293, v436);
              v335 = v292;
              v336 = v294;
              v337 = 2;
              goto LABEL_220;
            case 3u:
              v437 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v437 - 8) + 16))(v292, v293, v437);
              v335 = v292;
              v336 = v294;
              v337 = 3;
              goto LABEL_220;
            case 4u:
              v438 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v438 - 8) + 16))(v292, v293, v438);
              v335 = v292;
              v336 = v294;
              v337 = 4;
              goto LABEL_220;
            case 5u:
              v453 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v453 - 8) + 16))(v292, v293, v453);
              v335 = v292;
              v336 = v294;
              v337 = 5;
              goto LABEL_220;
            case 6u:
              v439 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v439 - 8) + 16))(v292, v293, v439);
              v335 = v292;
              v336 = v294;
              v337 = 6;
              goto LABEL_220;
            case 8u:
              v440 = *v293;
              *v292 = *v293;
              v441 = v440;
              v335 = v292;
              v336 = v294;
              v337 = 8;
              goto LABEL_220;
            case 9u:
              v442 = *v293;
              *v292 = *v293;
              v443 = v442;
              v335 = v292;
              v336 = v294;
              v337 = 9;
LABEL_220:
              swift_storeEnumTagMultiPayload(v335, v336, v337);
              break;
            default:
              memcpy(v292, v293, *(_QWORD *)(v295 + 64));
              break;
          }
          v5 = v289;
          v264 = __dste;
          v4 = v768;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v295 + 56))(v292, 0, 1, v294);
        }
        a3 = v778;
        v311 = v261;
        v312 = v740;
        v313 = 3;
        goto LABEL_223;
      case 4u:
        v741 = v266;
        __dstf = v264;
        v299 = v5;
        v300 = *v262;
        *v261 = *v262;
        v301 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v302 = (void **)((char *)v261 + v301);
        v303 = (void **)((char *)v262 + v301);
        v304 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v305 = *(_QWORD *)(v304 - 8);
        v306 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v305 + 48);
        v307 = v300;
        if (v306(v303, 1, v304))
        {
          v308 = sub_10002A750(&qword_100644980);
          memcpy(v302, v303, *(_QWORD *)(*(_QWORD *)(v308 - 8) + 64));
          v5 = v299;
          a3 = v778;
          v264 = __dstf;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v303, v304))
          {
            case 1u:
              v338 = *v303;
              *v302 = *v303;
              v339 = v338;
              v340 = v302;
              v341 = v304;
              v342 = 1;
              goto LABEL_215;
            case 2u:
              v444 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v444 - 8) + 16))(v302, v303, v444);
              v340 = v302;
              v341 = v304;
              v342 = 2;
              goto LABEL_215;
            case 3u:
              v445 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v445 - 8) + 16))(v302, v303, v445);
              v340 = v302;
              v341 = v304;
              v342 = 3;
              goto LABEL_215;
            case 4u:
              v446 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v446 - 8) + 16))(v302, v303, v446);
              v340 = v302;
              v341 = v304;
              v342 = 4;
              goto LABEL_215;
            case 5u:
              v447 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v447 - 8) + 16))(v302, v303, v447);
              v340 = v302;
              v341 = v304;
              v342 = 5;
              goto LABEL_215;
            case 6u:
              v448 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v448 - 8) + 16))(v302, v303, v448);
              v340 = v302;
              v341 = v304;
              v342 = 6;
              goto LABEL_215;
            case 8u:
              v449 = *v303;
              *v302 = *v303;
              v450 = v449;
              v340 = v302;
              v341 = v304;
              v342 = 8;
              goto LABEL_215;
            case 9u:
              v451 = *v303;
              *v302 = *v303;
              v452 = v451;
              v340 = v302;
              v341 = v304;
              v342 = 9;
LABEL_215:
              swift_storeEnumTagMultiPayload(v340, v341, v342);
              break;
            default:
              memcpy(v302, v303, *(_QWORD *)(v305 + 64));
              break;
          }
          v264 = __dstf;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v305 + 56))(v302, 0, 1, v304);
          v5 = v299;
          a3 = v778;
        }
        v433 = v261;
        v434 = v741;
        v435 = 4;
LABEL_218:
        swift_storeEnumTagMultiPayload(v433, v434, v435);
        v4 = v768;
        break;
      case 5u:
        *v261 = *v262;
        *((_BYTE *)v261 + 8) = *((_BYTE *)v262 + 8);
        *(_WORD *)((char *)v261 + 9) = *(_WORD *)((char *)v262 + 9);
        v309 = v262[2];
        v261[2] = v309;
        v310 = v309;
        v311 = v261;
        v312 = v266;
        v313 = 5;
        goto LABEL_223;
      case 6u:
        v323 = *v262;
        *v261 = *v262;
        v324 = v323;
        v311 = v261;
        v312 = v266;
        v313 = 6;
        goto LABEL_223;
      case 7u:
        __dstg = v264;
        v314 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v315 = *(_QWORD *)(v314 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v315 + 48))(v262, 1, v314))
        {
          v316 = sub_10002A750(&qword_100644600);
          memcpy(v261, v262, *(_QWORD *)(*(_QWORD *)(v316 - 8) + 64));
        }
        else
        {
          v742 = v266;
          v343 = *v262;
          *v261 = *v262;
          v344 = *(int *)(v314 + 20);
          v721 = (char *)v261 + v344;
          v345 = v5;
          v346 = (char *)v262 + v344;
          v347 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v348 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v347 - 8) + 16);
          v349 = v343;
          v266 = v742;
          v350 = swift_bridgeObjectRetain(v349);
          v351 = v346;
          v5 = v345;
          v4 = v768;
          v352 = v347;
          a3 = v778;
          v348(v721, v351, v352, v350);
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v315 + 56))(v261, 0, 1, v314);
        }
        v353 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v354 = (void **)((char *)v261 + v353);
        v355 = (void **)((char *)v262 + v353);
        v356 = v355[1];
        v264 = __dstg;
        if (v356)
        {
          *v354 = *v355;
          v354[1] = v356;
          v357 = (void *)v355[2];
          v354[2] = v357;
          swift_bridgeObjectRetain(v356);
          v358 = v357;
        }
        else
        {
          *(_OWORD *)v354 = *(_OWORD *)v355;
          v354[2] = v355[2];
        }
        v311 = v261;
        v312 = v266;
        v313 = 7;
        goto LABEL_223;
      case 8u:
        v325 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v326 = *(_QWORD *)(v325 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v326 + 48))(v262, 1, v325))
        {
          v327 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v261, v262, *(_QWORD *)(*(_QWORD *)(v327 - 8) + 64));
        }
        else
        {
          v359 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v359 - 8) + 16))(v261, v262, v359);
          *((_BYTE *)v261 + *(int *)(v325 + 20)) = *((_BYTE *)v262 + *(int *)(v325 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v326 + 56))(v261, 0, 1, v325);
        }
        v360 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)v261 + *(int *)(v360 + 20)) = *(void **)((char *)v262 + *(int *)(v360 + 20));
        v311 = v261;
        v312 = v266;
        v313 = 8;
        goto LABEL_223;
      case 9u:
        *(_BYTE *)v261 = *(_BYTE *)v262;
        v317 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v318 = v266;
        v319 = (char *)v261 + v317;
        v320 = (char *)v262 + v317;
        v321 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v321 - 8) + 16))(v319, v320, v321);
        v311 = v261;
        v312 = v318;
        v313 = 9;
LABEL_223:
        swift_storeEnumTagMultiPayload(v311, v312, v313);
        break;
      default:
        memcpy(v261, v262, *(_QWORD *)(*(_QWORD *)(v266 - 8) + 64));
        break;
    }
    v454 = (int *)type metadata accessor for TTRIReminderCellNotesViewModel(0, v322);
    *((_BYTE *)v261 + v454[5]) = *((_BYTE *)v262 + v454[5]);
    v455 = v454[6];
    v456 = *(void **)((char *)v262 + v455);
    *(void **)((char *)v261 + v455) = v456;
    v457 = v454[7];
    v458 = *(void **)((char *)v262 + v457);
    *(void **)((char *)v261 + v457) = v458;
    v459 = v454[8];
    v460 = *(void **)((char *)v262 + v459);
    *(void **)((char *)v261 + v459) = v460;
    *((_BYTE *)v261 + v454[9]) = *((_BYTE *)v262 + v454[9]);
    *(void **)((char *)v261 + *(int *)(v263 + 48)) = *(void **)((char *)v262 + *(int *)(v263 + 48));
    v461 = (void (*)(void **, _QWORD, uint64_t, uint64_t, __n128))*((_QWORD *)v264 + 7);
    v462 = v456;
    swift_bridgeObjectRetain(v458);
    v463 = swift_bridgeObjectRetain(v460);
    v461(v261, 0, 1, v263, v463);
  }
  v464 = a3[19];
  v465 = a3[20];
  v466 = *(void **)(v4 + v464);
  *(_QWORD *)(v5 + v464) = v466;
  v467 = (_QWORD *)(v5 + v465);
  v468 = (_QWORD *)(v4 + v465);
  v469 = v468[1];
  *v467 = *v468;
  v467[1] = v469;
  v470 = a3[22];
  *(_BYTE *)(v5 + a3[21]) = *(_BYTE *)(v4 + a3[21]);
  v471 = (_QWORD *)(v5 + v470);
  v472 = (_QWORD *)(v4 + v470);
  v473 = v472[1];
  *v471 = *v472;
  v471[1] = v473;
  v474 = a3[23];
  v475 = a3[24];
  v476 = (_QWORD *)(v5 + v474);
  v477 = (_QWORD *)(v4 + v474);
  v478 = v477[1];
  *v476 = *v477;
  v476[1] = v478;
  v479 = v4;
  v480 = *(void **)(v4 + v475);
  *(_QWORD *)(v5 + v475) = v480;
  v481 = a3[25];
  v482 = a3[26];
  v483 = *(_QWORD *)(v479 + v481);
  *(_QWORD *)(v5 + v481) = v483;
  v484 = (_QWORD *)(v5 + v482);
  v485 = v479 + v482;
  v487 = *(void **)(v479 + v482);
  v486 = *(_QWORD *)(v479 + v482 + 8);
  *v484 = v487;
  v484[1] = v486;
  v488 = *(_QWORD *)(v479 + v482 + 16);
  v484[2] = v488;
  v489 = (void **)(v479 + v482 + 24);
  __dsth = *v489;
  v490 = v466;
  swift_bridgeObjectRetain(v469);
  swift_bridgeObjectRetain(v473);
  swift_bridgeObjectRetain(v478);
  v491 = v480;
  swift_bridgeObjectRetain(v483);
  v492 = v487;
  swift_bridgeObjectRetain(v488);
  if (__dsth)
  {
    v493 = *(_QWORD *)(v485 + 32);
    v484[3] = __dsth;
    v484[4] = v493;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(v484 + 3) = *(_OWORD *)v489;
  }
  v494 = v777;
  v495 = v778[27];
  v496 = (_QWORD *)(v777 + v495);
  v497 = (_QWORD *)(v768 + v495);
  v498 = *(void **)(v768 + v495);
  v499 = v497[1];
  *v496 = v498;
  v496[1] = v499;
  v500 = v497[2];
  v496[2] = v500;
  v501 = v497[3];
  v502 = v498;
  swift_bridgeObjectRetain(v500);
  if (v501)
  {
    v503 = v497[4];
    v496[3] = v501;
    v496[4] = v503;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(v496 + 3) = *(_OWORD *)(v497 + 3);
  }
  v504 = v778[28];
  v505 = v777 + v504;
  v506 = v768 + v504;
  v507 = *(_OWORD *)(v768 + v504);
  *(_OWORD *)(v777 + v504) = v507;
  swift_unknownObjectRetain(v507);
  v508 = sub_10002A750(&qword_10064CB58);
  v509 = *(int *)(v508 + 28);
  v510 = (void **)(v505 + v509);
  v511 = (void **)(v506 + v509);
  v512 = sub_10002A750(&qword_10064CB70);
  v513 = *(_QWORD *)(v512 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v513 + 48))(v511, 1, v512))
  {
    v514 = sub_10002A750(&qword_10065A450);
    memcpy(v510, v511, *(_QWORD *)(*(_QWORD *)(v514 - 8) + 64));
  }
  else
  {
    v515 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v511, v515))
    {
      case 0u:
        v516 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v779 = v515;
        switch(swift_getEnumCaseMultiPayload(v511, v516))
        {
          case 1u:
            v517 = *v511;
            *v510 = *v511;
            v518 = v517;
            v519 = v510;
            v520 = v516;
            v521 = 1;
            goto LABEL_273;
          case 2u:
            v597 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v597 - 8) + 16))(v510, v511, v597);
            v519 = v510;
            v520 = v516;
            v521 = 2;
            goto LABEL_273;
          case 3u:
            v598 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v598 - 8) + 16))(v510, v511, v598);
            v519 = v510;
            v520 = v516;
            v521 = 3;
            goto LABEL_273;
          case 4u:
            v599 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v599 - 8) + 16))(v510, v511, v599);
            v519 = v510;
            v520 = v516;
            v521 = 4;
            goto LABEL_273;
          case 5u:
            v600 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v600 - 8) + 16))(v510, v511, v600);
            v519 = v510;
            v520 = v516;
            v521 = 5;
            goto LABEL_273;
          case 6u:
            v601 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v601 - 8) + 16))(v510, v511, v601);
            v519 = v510;
            v520 = v516;
            v521 = 6;
            goto LABEL_273;
          case 8u:
            v602 = *v511;
            *v510 = *v511;
            v603 = v602;
            v519 = v510;
            v520 = v516;
            v521 = 8;
            goto LABEL_273;
          case 9u:
            v604 = *v511;
            *v510 = *v511;
            v605 = v604;
            v519 = v510;
            v520 = v516;
            v521 = 9;
LABEL_273:
            swift_storeEnumTagMultiPayload(v519, v520, v521);
            break;
          default:
            memcpy(v510, v511, *(_QWORD *)(*(_QWORD *)(v516 - 8) + 64));
            break;
        }
        v606 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v607 = v606[5];
        v608 = (char *)v510 + v607;
        v609 = (char *)v511 + v607;
        v610 = *(uint64_t *)((char *)v511 + v607 + 8);
        if (v610)
        {
          *(_QWORD *)v608 = *(_QWORD *)v609;
          *((_QWORD *)v608 + 1) = v610;
          __dstm = (void *)*((_QWORD *)v609 + 3);
          v773 = (void *)*((_QWORD *)v609 + 2);
          v727 = *((_QWORD *)v609 + 5);
          v747 = *((_QWORD *)v609 + 4);
          v704 = *((_QWORD *)v609 + 7);
          v712 = *((_QWORD *)v609 + 6);
          v692 = v609[64];
          swift_bridgeObjectRetain(v610);
          sub_10003E1F0(v773, (uint64_t)__dstm, v747, v727, v712, v704, v692);
          *((_QWORD *)v608 + 2) = v773;
          *((_QWORD *)v608 + 3) = __dstm;
          *((_QWORD *)v608 + 4) = v747;
          *((_QWORD *)v608 + 5) = v727;
          *((_QWORD *)v608 + 6) = v712;
          *((_QWORD *)v608 + 7) = v704;
          v608[64] = v692;
          *(_DWORD *)(v608 + 65) = *(_DWORD *)(v609 + 65);
          v611 = v609[120];
          if (v611 == 255)
          {
            v612 = *(_OWORD *)(v609 + 88);
            *(_OWORD *)(v608 + 72) = *(_OWORD *)(v609 + 72);
            *(_OWORD *)(v608 + 88) = v612;
            *(_OWORD *)(v608 + 104) = *(_OWORD *)(v609 + 104);
            v608[120] = v609[120];
          }
          else
          {
            v774 = v611 & 1;
            v748 = *((_QWORD *)v609 + 10);
            __dstn = (void *)*((_QWORD *)v609 + 9);
            v713 = *((_QWORD *)v609 + 12);
            v728 = *((_QWORD *)v609 + 11);
            v693 = *((_QWORD *)v609 + 14);
            v705 = *((_QWORD *)v609 + 13);
            sub_10002B764(__dstn, v748, v728, v713, v705, v693, v611 & 1);
            *((_QWORD *)v608 + 9) = __dstn;
            *((_QWORD *)v608 + 10) = v748;
            *((_QWORD *)v608 + 11) = v728;
            *((_QWORD *)v608 + 12) = v713;
            *((_QWORD *)v608 + 13) = v705;
            *((_QWORD *)v608 + 14) = v693;
            v608[120] = v774;
          }
          v608[121] = v609[121];
        }
        else
        {
          v613 = *((_OWORD *)v609 + 5);
          *((_OWORD *)v608 + 4) = *((_OWORD *)v609 + 4);
          *((_OWORD *)v608 + 5) = v613;
          *((_OWORD *)v608 + 6) = *((_OWORD *)v609 + 6);
          *(_OWORD *)(v608 + 106) = *(_OWORD *)(v609 + 106);
          v614 = *((_OWORD *)v609 + 1);
          *(_OWORD *)v608 = *(_OWORD *)v609;
          *((_OWORD *)v608 + 1) = v614;
          v615 = *((_OWORD *)v609 + 3);
          *((_OWORD *)v608 + 2) = *((_OWORD *)v609 + 2);
          *((_OWORD *)v608 + 3) = v615;
        }
        *((_BYTE *)v510 + v606[6]) = *((_BYTE *)v511 + v606[6]);
        *((_BYTE *)v510 + v606[7]) = *((_BYTE *)v511 + v606[7]);
        *((_BYTE *)v510 + v606[8]) = *((_BYTE *)v511 + v606[8]);
        *((_BYTE *)v510 + v606[9]) = *((_BYTE *)v511 + v606[9]);
        *((_BYTE *)v510 + v606[10]) = *((_BYTE *)v511 + v606[10]);
        v616 = v606[11];
        v617 = *(void **)((char *)v511 + v616);
        *(void **)((char *)v510 + v616) = v617;
        v618 = v617;
        v619 = v510;
        v620 = v779;
        v621 = 0;
        goto LABEL_297;
      case 1u:
        v522 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v780 = v515;
        switch(swift_getEnumCaseMultiPayload(v511, v522))
        {
          case 1u:
            v523 = *v511;
            *v510 = *v511;
            v524 = v523;
            v525 = v510;
            v526 = v522;
            v527 = 1;
            goto LABEL_289;
          case 2u:
            v622 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v622 - 8) + 16))(v510, v511, v622);
            v525 = v510;
            v526 = v522;
            v527 = 2;
            goto LABEL_289;
          case 3u:
            v623 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v623 - 8) + 16))(v510, v511, v623);
            v525 = v510;
            v526 = v522;
            v527 = 3;
            goto LABEL_289;
          case 4u:
            v624 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v624 - 8) + 16))(v510, v511, v624);
            v525 = v510;
            v526 = v522;
            v527 = 4;
            goto LABEL_289;
          case 5u:
            v625 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v625 - 8) + 16))(v510, v511, v625);
            v525 = v510;
            v526 = v522;
            v527 = 5;
            goto LABEL_289;
          case 6u:
            v626 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v626 - 8) + 16))(v510, v511, v626);
            v525 = v510;
            v526 = v522;
            v527 = 6;
            goto LABEL_289;
          case 8u:
            v627 = *v511;
            *v510 = *v511;
            v628 = v627;
            v525 = v510;
            v526 = v522;
            v527 = 8;
            goto LABEL_289;
          case 9u:
            v629 = *v511;
            *v510 = *v511;
            v630 = v629;
            v525 = v510;
            v526 = v522;
            v527 = 9;
LABEL_289:
            swift_storeEnumTagMultiPayload(v525, v526, v527);
            break;
          default:
            memcpy(v510, v511, *(_QWORD *)(*(_QWORD *)(v522 - 8) + 64));
            break;
        }
        v631 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v632 = v631[5];
        v633 = (char *)v510 + v632;
        v634 = (char *)v511 + v632;
        v635 = *(uint64_t *)((char *)v511 + v632 + 8);
        if (v635)
        {
          *(_QWORD *)v633 = *(_QWORD *)v634;
          *((_QWORD *)v633 + 1) = v635;
          __dsto = (void *)*((_QWORD *)v634 + 3);
          v775 = (void *)*((_QWORD *)v634 + 2);
          v729 = *((_QWORD *)v634 + 5);
          v749 = *((_QWORD *)v634 + 4);
          v706 = *((_QWORD *)v634 + 7);
          v714 = *((_QWORD *)v634 + 6);
          v694 = v634[64];
          swift_bridgeObjectRetain(v635);
          sub_10003E1F0(v775, (uint64_t)__dsto, v749, v729, v714, v706, v694);
          *((_QWORD *)v633 + 2) = v775;
          *((_QWORD *)v633 + 3) = __dsto;
          *((_QWORD *)v633 + 4) = v749;
          *((_QWORD *)v633 + 5) = v729;
          *((_QWORD *)v633 + 6) = v714;
          *((_QWORD *)v633 + 7) = v706;
          v633[64] = v694;
          *(_DWORD *)(v633 + 65) = *(_DWORD *)(v634 + 65);
          v636 = v634[120];
          if (v636 == 255)
          {
            v637 = *(_OWORD *)(v634 + 88);
            *(_OWORD *)(v633 + 72) = *(_OWORD *)(v634 + 72);
            *(_OWORD *)(v633 + 88) = v637;
            *(_OWORD *)(v633 + 104) = *(_OWORD *)(v634 + 104);
            v633[120] = v634[120];
          }
          else
          {
            v776 = v636 & 1;
            v750 = *((_QWORD *)v634 + 10);
            __dstp = (void *)*((_QWORD *)v634 + 9);
            v715 = *((_QWORD *)v634 + 12);
            v730 = *((_QWORD *)v634 + 11);
            v695 = *((_QWORD *)v634 + 14);
            v707 = *((_QWORD *)v634 + 13);
            sub_10002B764(__dstp, v750, v730, v715, v707, v695, v636 & 1);
            *((_QWORD *)v633 + 9) = __dstp;
            *((_QWORD *)v633 + 10) = v750;
            *((_QWORD *)v633 + 11) = v730;
            *((_QWORD *)v633 + 12) = v715;
            *((_QWORD *)v633 + 13) = v707;
            *((_QWORD *)v633 + 14) = v695;
            v633[120] = v776;
          }
          v633[121] = v634[121];
        }
        else
        {
          v638 = *((_OWORD *)v634 + 5);
          *((_OWORD *)v633 + 4) = *((_OWORD *)v634 + 4);
          *((_OWORD *)v633 + 5) = v638;
          *((_OWORD *)v633 + 6) = *((_OWORD *)v634 + 6);
          *(_OWORD *)(v633 + 106) = *(_OWORD *)(v634 + 106);
          v639 = *((_OWORD *)v634 + 1);
          *(_OWORD *)v633 = *(_OWORD *)v634;
          *((_OWORD *)v633 + 1) = v639;
          v640 = *((_OWORD *)v634 + 3);
          *((_OWORD *)v633 + 2) = *((_OWORD *)v634 + 2);
          *((_OWORD *)v633 + 3) = v640;
        }
        *((_BYTE *)v510 + v631[6]) = *((_BYTE *)v511 + v631[6]);
        *((_BYTE *)v510 + v631[7]) = *((_BYTE *)v511 + v631[7]);
        *((_BYTE *)v510 + v631[8]) = *((_BYTE *)v511 + v631[8]);
        *((_BYTE *)v510 + v631[9]) = *((_BYTE *)v511 + v631[9]);
        *((_BYTE *)v510 + v631[10]) = *((_BYTE *)v511 + v631[10]);
        v641 = v631[11];
        v642 = *(void **)((char *)v511 + v641);
        *(void **)((char *)v510 + v641) = v642;
        v643 = v642;
        v619 = v510;
        v620 = v780;
        v621 = 1;
LABEL_297:
        swift_storeEnumTagMultiPayload(v619, v620, v621);
        v494 = v777;
        break;
      case 2u:
        v743 = v508;
        v781 = v515;
        v769 = v513;
        v528 = *v511;
        *v510 = *v511;
        v529 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        __dsti = (void **)((char *)v510 + v529);
        v530 = (void **)((char *)v511 + v529);
        v531 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v532 = *(_QWORD *)(v531 - 8);
        v533 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v532 + 48);
        v534 = v528;
        if (v533(v530, 1, v531))
        {
          v535 = sub_10002A750(&qword_100644980);
          memcpy(__dsti, v530, *(_QWORD *)(*(_QWORD *)(v535 - 8) + 64));
          v513 = v769;
          v494 = v777;
          v508 = v743;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v530, v531))
          {
            case 1u:
              v568 = *v530;
              *__dsti = *v530;
              v569 = v568;
              v570 = __dsti;
              v571 = v531;
              v572 = 1;
              goto LABEL_306;
            case 2u:
              v644 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v644 - 8) + 16))(__dsti, v530, v644);
              v570 = __dsti;
              v571 = v531;
              v572 = 2;
              goto LABEL_306;
            case 3u:
              v645 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v645 - 8) + 16))(__dsti, v530, v645);
              v570 = __dsti;
              v571 = v531;
              v572 = 3;
              goto LABEL_306;
            case 4u:
              v646 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v646 - 8) + 16))(__dsti, v530, v646);
              v570 = __dsti;
              v571 = v531;
              v572 = 4;
              goto LABEL_306;
            case 5u:
              v647 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v647 - 8) + 16))(__dsti, v530, v647);
              v570 = __dsti;
              v571 = v531;
              v572 = 5;
              goto LABEL_306;
            case 6u:
              v648 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v648 - 8) + 16))(__dsti, v530, v648);
              v570 = __dsti;
              v571 = v531;
              v572 = 6;
              goto LABEL_306;
            case 8u:
              v649 = *v530;
              *__dsti = *v530;
              v650 = v649;
              v570 = __dsti;
              v571 = v531;
              v572 = 8;
              goto LABEL_306;
            case 9u:
              v651 = *v530;
              *__dsti = *v530;
              v652 = v651;
              v570 = __dsti;
              v571 = v531;
              v572 = 9;
LABEL_306:
              swift_storeEnumTagMultiPayload(v570, v571, v572);
              v513 = v769;
              break;
            default:
              memcpy(__dsti, v530, *(_QWORD *)(v532 + 64));
              v513 = v769;
              break;
          }
          v508 = v743;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v532 + 56))(__dsti, 0, 1, v531);
          v494 = v777;
        }
        v552 = v510;
        v553 = v781;
        v554 = 2;
        goto LABEL_331;
      case 3u:
        v782 = v515;
        v770 = v513;
        v536 = *v511;
        *v510 = *v511;
        v537 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v744 = (void **)((char *)v511 + v537);
        __dstj = (void **)((char *)v510 + v537);
        v538 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v539 = *(_QWORD *)(v538 - 8);
        v540 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v539 + 48);
        v541 = v536;
        if (v540(v744, 1, v538))
        {
          v542 = sub_10002A750(&qword_100644980);
          memcpy(__dstj, v744, *(_QWORD *)(*(_QWORD *)(v542 - 8) + 64));
          v513 = v770;
          v494 = v777;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v744, v538))
          {
            case 1u:
              v573 = *v744;
              *__dstj = *v744;
              v574 = v573;
              v575 = __dstj;
              v576 = v538;
              v577 = 1;
              goto LABEL_328;
            case 2u:
              v653 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v653 - 8) + 16))(__dstj, v744, v653);
              v575 = __dstj;
              v576 = v538;
              v577 = 2;
              goto LABEL_328;
            case 3u:
              v654 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v654 - 8) + 16))(__dstj, v744, v654);
              v575 = __dstj;
              v576 = v538;
              v577 = 3;
              goto LABEL_328;
            case 4u:
              v655 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v655 - 8) + 16))(__dstj, v744, v655);
              v575 = __dstj;
              v576 = v538;
              v577 = 4;
              goto LABEL_328;
            case 5u:
              v672 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v672 - 8) + 16))(__dstj, v744, v672);
              v575 = __dstj;
              v576 = v538;
              v577 = 5;
              goto LABEL_328;
            case 6u:
              v656 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v656 - 8) + 16))(__dstj, v744, v656);
              v575 = __dstj;
              v576 = v538;
              v577 = 6;
              goto LABEL_328;
            case 8u:
              v659 = *v744;
              *__dstj = *v744;
              v660 = v659;
              v575 = __dstj;
              v576 = v538;
              v577 = 8;
              goto LABEL_328;
            case 9u:
              v661 = *v744;
              *__dstj = *v744;
              v662 = v661;
              v575 = __dstj;
              v576 = v538;
              v577 = 9;
LABEL_328:
              swift_storeEnumTagMultiPayload(v575, v576, v577);
              v658 = v538;
              v513 = v770;
              v494 = v777;
              v657 = v539;
              break;
            default:
              memcpy(__dstj, v744, *(_QWORD *)(v539 + 64));
              v657 = v539;
              v658 = v538;
              v513 = v770;
              v494 = v777;
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v657 + 56))(__dstj, 0, 1, v658);
        }
        v552 = v510;
        v553 = v782;
        v554 = 3;
        goto LABEL_331;
      case 4u:
        v783 = v515;
        v771 = v513;
        v543 = *v511;
        *v510 = *v511;
        v544 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v745 = (void **)((char *)v511 + v544);
        __dstk = (void **)((char *)v510 + v544);
        v545 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v546 = *(_QWORD *)(v545 - 8);
        v547 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v546 + 48);
        v548 = v543;
        if (v547(v745, 1, v545))
        {
          v549 = sub_10002A750(&qword_100644980);
          memcpy(__dstk, v745, *(_QWORD *)(*(_QWORD *)(v549 - 8) + 64));
          v513 = v771;
          v494 = v777;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v745, v545))
          {
            case 1u:
              v578 = *v745;
              *__dstk = *v745;
              v579 = v578;
              v580 = __dstk;
              v581 = v545;
              v582 = 1;
              goto LABEL_324;
            case 2u:
              v663 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v663 - 8) + 16))(__dstk, v745, v663);
              v580 = __dstk;
              v581 = v545;
              v582 = 2;
              goto LABEL_324;
            case 3u:
              v664 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v664 - 8) + 16))(__dstk, v745, v664);
              v580 = __dstk;
              v581 = v545;
              v582 = 3;
              goto LABEL_324;
            case 4u:
              v665 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v665 - 8) + 16))(__dstk, v745, v665);
              v580 = __dstk;
              v581 = v545;
              v582 = 4;
              goto LABEL_324;
            case 5u:
              v666 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v666 - 8) + 16))(__dstk, v745, v666);
              v580 = __dstk;
              v581 = v545;
              v582 = 5;
              goto LABEL_324;
            case 6u:
              v667 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v667 - 8) + 16))(__dstk, v745, v667);
              v580 = __dstk;
              v581 = v545;
              v582 = 6;
              goto LABEL_324;
            case 8u:
              v668 = *v745;
              *__dstk = *v745;
              v669 = v668;
              v580 = __dstk;
              v581 = v545;
              v582 = 8;
              goto LABEL_324;
            case 9u:
              v670 = *v745;
              *__dstk = *v745;
              v671 = v670;
              v580 = __dstk;
              v581 = v545;
              v582 = 9;
LABEL_324:
              swift_storeEnumTagMultiPayload(v580, v581, v582);
              v513 = v771;
              break;
            default:
              memcpy(__dstk, v745, *(_QWORD *)(v546 + 64));
              v513 = v771;
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v546 + 56))(__dstk, 0, 1, v545);
          v494 = v777;
        }
        v552 = v510;
        v553 = v783;
        v554 = 4;
        goto LABEL_331;
      case 5u:
        *v510 = *v511;
        *((_BYTE *)v510 + 8) = *((_BYTE *)v511 + 8);
        *(_WORD *)((char *)v510 + 9) = *(_WORD *)((char *)v511 + 9);
        v550 = v511[2];
        v510[2] = v550;
        v551 = v550;
        v552 = v510;
        v553 = v515;
        v554 = 5;
        goto LABEL_331;
      case 6u:
        v562 = *v511;
        *v510 = *v511;
        v563 = v562;
        v552 = v510;
        v553 = v515;
        v554 = 6;
        goto LABEL_331;
      case 7u:
        v784 = v515;
        v555 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v556 = *(_QWORD *)(v555 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v556 + 48))(v511, 1, v555))
        {
          v557 = sub_10002A750(&qword_100644600);
          memcpy(v510, v511, *(_QWORD *)(*(_QWORD *)(v557 - 8) + 64));
        }
        else
        {
          v726 = *v511;
          *v510 = *v511;
          v583 = *(int *)(v555 + 20);
          v746 = (char *)v511 + v583;
          __dstl = (char *)v510 + v583;
          v584 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v772 = v513;
          v585 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v584 - 8) + 16);
          v586 = swift_bridgeObjectRetain(v726);
          v587 = v584;
          v494 = v777;
          v585(__dstl, v746, v587, v586);
          v513 = v772;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v556 + 56))(v510, 0, 1, v555);
        }
        v588 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v589 = (void **)((char *)v510 + v588);
        v590 = (void **)((char *)v511 + v588);
        v591 = v590[1];
        if (v591)
        {
          *v589 = *v590;
          v589[1] = v591;
          v592 = v513;
          v593 = (void *)v590[2];
          v589[2] = v593;
          swift_bridgeObjectRetain(v591);
          v594 = v593;
          v513 = v592;
        }
        else
        {
          *(_OWORD *)v589 = *(_OWORD *)v590;
          v589[2] = v590[2];
        }
        v552 = v510;
        v553 = v784;
        v554 = 7;
        goto LABEL_331;
      case 8u:
        v786 = v515;
        v564 = v513;
        v565 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v566 = *(_QWORD *)(v565 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v566 + 48))(v511, 1, v565))
        {
          v567 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v510, v511, *(_QWORD *)(*(_QWORD *)(v567 - 8) + 64));
        }
        else
        {
          v595 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v595 - 8) + 16))(v510, v511, v595);
          *((_BYTE *)v510 + *(int *)(v565 + 20)) = *((_BYTE *)v511 + *(int *)(v565 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v566 + 56))(v510, 0, 1, v565);
        }
        v513 = v564;
        v596 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)v510 + *(int *)(v596 + 20)) = *(void **)((char *)v511 + *(int *)(v596 + 20));
        v552 = v510;
        v553 = v786;
        v554 = 8;
        goto LABEL_331;
      case 9u:
        *(_BYTE *)v510 = *(_BYTE *)v511;
        v558 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v785 = v515;
        v559 = (char *)v510 + v558;
        v560 = (char *)v511 + v558;
        v561 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v561 - 8) + 16))(v559, v560, v561);
        v552 = v510;
        v553 = v785;
        v554 = 9;
LABEL_331:
        swift_storeEnumTagMultiPayload(v552, v553, v554);
        break;
      default:
        memcpy(v510, v511, *(_QWORD *)(*(_QWORD *)(v515 - 8) + 64));
        break;
    }
    v673 = (int *)type metadata accessor for TTRIReminderCellAutoCompleteViewModel(0);
    *((_BYTE *)v510 + v673[5]) = *((_BYTE *)v511 + v673[5]);
    v674 = v673[6];
    v675 = (void **)((char *)v510 + v674);
    v676 = (uint64_t *)((char *)v511 + v674);
    v678 = *v676;
    v677 = v676[1];
    *v675 = v678;
    v675[1] = v677;
    v679 = v673[7];
    v680 = *(void **)((char *)v511 + v679);
    *(void **)((char *)v510 + v679) = v680;
    *(void **)((char *)v510 + *(int *)(v512 + 48)) = *(void **)((char *)v511 + *(int *)(v512 + 48));
    v681 = *(void (**)(void **, _QWORD, uint64_t, uint64_t, __n128))(v513 + 56);
    swift_bridgeObjectRetain(v677);
    v682 = swift_bridgeObjectRetain(v680);
    v681(v510, 0, 1, v512, v682);
  }
  *(_BYTE *)(v505 + *(int *)(v508 + 32)) = *(_BYTE *)(v506 + *(int *)(v508 + 32));
  return v494;
}

uint64_t sub_10049B560(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void **v68;
  void **v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(void **, uint64_t, uint64_t);
  int v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  id v78;
  void **v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  id v86;
  void **v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  id v92;
  void **v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  id v118;
  void **v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  double v129;
  void *v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  id v137;
  void **v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unsigned int (*v145)(void **, uint64_t, uint64_t);
  id v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unsigned int (*v152)(void **, uint64_t, uint64_t);
  id v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unsigned int (*v159)(void **, uint64_t, uint64_t);
  id v160;
  uint64_t v161;
  void *v162;
  id v163;
  void **v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  void *v174;
  void **v175;
  id v176;
  void **v177;
  uint64_t v178;
  uint64_t v179;
  void *v180;
  void **v181;
  id v182;
  void **v183;
  uint64_t v184;
  uint64_t v185;
  void *v186;
  void **v187;
  id v188;
  void **v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  __n128 v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  _QWORD *v198;
  uint64_t v199;
  void *v200;
  id v201;
  __int128 v202;
  void *v203;
  id v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  void *v210;
  id v211;
  void **v212;
  uint64_t v213;
  uint64_t v214;
  void *v215;
  id v216;
  void **v217;
  uint64_t v218;
  uint64_t v219;
  void *v220;
  id v221;
  void **v222;
  uint64_t v223;
  uint64_t v224;
  void *v225;
  uint64_t v226;
  uint64_t v227;
  __n128 v228;
  uint64_t v229;
  uint64_t v230;
  _QWORD *v231;
  _QWORD *v232;
  uint64_t v233;
  void *v234;
  id v235;
  __int128 v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  void *v244;
  id v245;
  void *v246;
  id v247;
  int *v248;
  uint64_t v249;
  char *v250;
  char *v251;
  uint64_t v252;
  void *v253;
  int v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;
  void *v264;
  uint64_t v265;
  void *v266;
  id v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  void *v273;
  id v274;
  void *v275;
  id v276;
  int *v277;
  uint64_t v278;
  char *v279;
  char *v280;
  uint64_t v281;
  void *v282;
  int v283;
  __int128 v284;
  __int128 v285;
  __int128 v286;
  __int128 v287;
  __int128 v288;
  __int128 v289;
  __int128 v290;
  __int128 v291;
  __int128 v292;
  void *v293;
  uint64_t v294;
  void *v295;
  id v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  void *v302;
  id v303;
  void *v304;
  id v305;
  int *v306;
  uint64_t v307;
  char *v308;
  char *v309;
  uint64_t v310;
  void *v311;
  uint64_t v312;
  int v313;
  __int128 v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;
  __int128 v318;
  __int128 v319;
  __int128 v320;
  __int128 v321;
  __int128 v322;
  uint64_t v323;
  void *v324;
  uint64_t v325;
  void *v326;
  id v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  void *v333;
  id v334;
  void *v335;
  id v336;
  int *v337;
  uint64_t v338;
  char *v339;
  char *v340;
  uint64_t v341;
  void *v342;
  uint64_t v343;
  int v344;
  __int128 v345;
  __int128 v346;
  __int128 v347;
  __int128 v348;
  __int128 v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  uint64_t v354;
  void *v355;
  uint64_t v356;
  void *v357;
  id v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  void *v366;
  id v367;
  void *v368;
  id v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  void *v377;
  id v378;
  void *v379;
  id v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  void *v388;
  id v389;
  void *v390;
  id v391;
  int *v392;
  uint64_t v393;
  void *v394;
  uint64_t v395;
  void *v396;
  uint64_t v397;
  char *v398;
  char *v399;
  char v400;
  uint64_t v401;
  void *v402;
  uint64_t v403;
  void *v404;
  void (*v405)(void **, _QWORD, uint64_t, uint64_t);
  id v406;
  id v407;
  id v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  void *v414;
  id v415;
  void *v416;
  id v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  void *v423;
  id v424;
  void *v425;
  id v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  void *v432;
  id v433;
  void *v434;
  id v435;
  int *v436;
  uint64_t v437;
  void *v438;
  void *v439;
  id v440;
  uint64_t v441;
  void *v442;
  void *v443;
  id v444;
  uint64_t v445;
  char *v446;
  char *v447;
  char v448;
  uint64_t v449;
  void *v450;
  uint64_t v451;
  uint64_t v452;
  void *v453;
  void *v454;
  id v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  void **v463;
  void **v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t (*v467)(void **, uint64_t, uint64_t);
  int v468;
  double v469;
  uint64_t v470;
  uint64_t v471;
  void *v472;
  id v473;
  void **v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  void *v480;
  id v481;
  void **v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  void *v486;
  id v487;
  void **v488;
  uint64_t v489;
  uint64_t v490;
  void *v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  id v495;
  uint64_t v496;
  uint64_t v497;
  void *v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  id v502;
  uint64_t v503;
  uint64_t v504;
  void *v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  id v509;
  uint64_t v510;
  uint64_t v511;
  void *v512;
  id v513;
  void **v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  char *v521;
  char *v522;
  uint64_t v523;
  double v524;
  void *v525;
  id v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  void *v531;
  id v532;
  void **v533;
  uint64_t v534;
  uint64_t v535;
  void *v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  unsigned int (*v540)(void **, uint64_t, uint64_t);
  id v541;
  uint64_t v542;
  void *v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  unsigned int (*v547)(void **, uint64_t, uint64_t);
  id v548;
  uint64_t v549;
  void *v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  unsigned int (*v554)(void **, uint64_t, uint64_t);
  id v555;
  uint64_t v556;
  void *v557;
  id v558;
  void **v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  char *v566;
  char *v567;
  uint64_t v568;
  void *v569;
  void **v570;
  id v571;
  void **v572;
  uint64_t v573;
  uint64_t v574;
  void *v575;
  void **v576;
  id v577;
  void **v578;
  uint64_t v579;
  uint64_t v580;
  void *v581;
  void **v582;
  id v583;
  void **v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  __n128 v589;
  uint64_t v590;
  uint64_t v591;
  _QWORD *v592;
  _QWORD *v593;
  uint64_t v594;
  void *v595;
  id v596;
  __int128 v597;
  void *v598;
  id v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  void *v605;
  id v606;
  void **v607;
  uint64_t v608;
  uint64_t v609;
  void *v610;
  id v611;
  void **v612;
  uint64_t v613;
  uint64_t v614;
  void *v615;
  id v616;
  void **v617;
  uint64_t v618;
  uint64_t v619;
  void *v620;
  uint64_t v621;
  uint64_t v622;
  __n128 v623;
  uint64_t v624;
  uint64_t v625;
  _QWORD *v626;
  _QWORD *v627;
  uint64_t v628;
  void *v629;
  id v630;
  __int128 v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  void *v639;
  id v640;
  void *v641;
  id v642;
  int *v643;
  uint64_t v644;
  char *v645;
  char *v646;
  uint64_t v647;
  void *v648;
  int v649;
  __int128 v650;
  __int128 v651;
  __int128 v652;
  __int128 v653;
  __int128 v654;
  __int128 v655;
  __int128 v656;
  __int128 v657;
  __int128 v658;
  void *v659;
  uint64_t v660;
  void *v661;
  id v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  void *v668;
  id v669;
  void *v670;
  id v671;
  int *v672;
  uint64_t v673;
  char *v674;
  char *v675;
  uint64_t v676;
  void *v677;
  int v678;
  __int128 v679;
  __int128 v680;
  __int128 v681;
  __int128 v682;
  __int128 v683;
  __int128 v684;
  __int128 v685;
  __int128 v686;
  __int128 v687;
  void *v688;
  uint64_t v689;
  void *v690;
  id v691;
  uint64_t v692;
  uint64_t v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  void *v697;
  id v698;
  void *v699;
  id v700;
  int *v701;
  uint64_t v702;
  char *v703;
  char *v704;
  uint64_t v705;
  void *v706;
  uint64_t v707;
  int v708;
  __int128 v709;
  __int128 v710;
  __int128 v711;
  __int128 v712;
  __int128 v713;
  __int128 v714;
  __int128 v715;
  __int128 v716;
  __int128 v717;
  uint64_t v718;
  void *v719;
  uint64_t v720;
  void *v721;
  id v722;
  uint64_t v723;
  uint64_t v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  void *v728;
  id v729;
  void *v730;
  id v731;
  int *v732;
  uint64_t v733;
  char *v734;
  char *v735;
  uint64_t v736;
  void *v737;
  uint64_t v738;
  int v739;
  __int128 v740;
  __int128 v741;
  __int128 v742;
  __int128 v743;
  __int128 v744;
  __int128 v745;
  __int128 v746;
  __int128 v747;
  __int128 v748;
  uint64_t v749;
  void *v750;
  uint64_t v751;
  void *v752;
  id v753;
  uint64_t v754;
  uint64_t v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  uint64_t v760;
  void *v761;
  id v762;
  void *v763;
  id v764;
  uint64_t v765;
  uint64_t v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  void *v772;
  id v773;
  void *v774;
  id v775;
  uint64_t v776;
  uint64_t v777;
  uint64_t v778;
  uint64_t v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t v782;
  void *v783;
  id v784;
  void *v785;
  id v786;
  int *v787;
  uint64_t v788;
  void *v789;
  uint64_t v790;
  void *v791;
  uint64_t v792;
  void *v793;
  void (*v794)(void **, _QWORD, uint64_t, uint64_t, __n128);
  id v795;
  __n128 v796;
  uint64_t v797;
  uint64_t v798;
  uint64_t v799;
  uint64_t v800;
  uint64_t v801;
  void *v802;
  id v803;
  void *v804;
  id v805;
  uint64_t v806;
  uint64_t v807;
  uint64_t v808;
  uint64_t v809;
  uint64_t v810;
  void *v811;
  id v812;
  void *v813;
  id v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  void *v820;
  id v821;
  void *v822;
  id v823;
  int *v824;
  uint64_t v825;
  void *v826;
  void *v827;
  id v828;
  uint64_t v829;
  uint64_t v830;
  void *v831;
  uint64_t v832;
  void *v833;
  uint64_t v834;
  uint64_t v835;
  void *v836;
  void *v837;
  id v838;
  uint64_t v839;
  _QWORD *v840;
  _QWORD *v841;
  uint64_t v842;
  uint64_t v843;
  uint64_t v844;
  _QWORD *v845;
  _QWORD *v846;
  uint64_t v847;
  uint64_t v848;
  uint64_t v849;
  _QWORD *v850;
  _QWORD *v851;
  uint64_t v852;
  uint64_t v853;
  uint64_t v854;
  void *v855;
  void *v856;
  id v857;
  uint64_t v858;
  uint64_t v859;
  uint64_t v860;
  uint64_t v861;
  _QWORD *v862;
  _QWORD *v863;
  void *v864;
  void *v865;
  id v866;
  uint64_t v867;
  uint64_t v868;
  uint64_t v869;
  uint64_t v870;
  uint64_t v871;
  uint64_t v872;
  _QWORD *v873;
  _QWORD *v874;
  void *v875;
  void *v876;
  id v877;
  uint64_t v878;
  uint64_t v879;
  uint64_t v880;
  uint64_t v881;
  uint64_t v882;
  uint64_t v883;
  uint64_t v884;
  uint64_t v885;
  uint64_t v886;
  uint64_t v887;
  uint64_t v888;
  uint64_t v889;
  uint64_t v890;
  void **v891;
  void **v892;
  uint64_t v893;
  uint64_t (*v894)(void **, uint64_t, uint64_t);
  int v895;
  int v896;
  uint64_t v897;
  uint64_t v898;
  void *v899;
  id v900;
  void **v901;
  uint64_t v902;
  uint64_t v903;
  uint64_t v904;
  uint64_t v905;
  uint64_t v906;
  void *v907;
  id v908;
  void **v909;
  uint64_t v910;
  uint64_t v911;
  uint64_t v912;
  void *v913;
  id v914;
  void **v915;
  uint64_t v916;
  uint64_t v917;
  void *v918;
  uint64_t v919;
  void **v920;
  uint64_t v921;
  uint64_t v922;
  unsigned int (*v923)(void **, uint64_t, uint64_t);
  id v924;
  uint64_t v925;
  _QWORD *v926;
  uint64_t v927;
  void *v928;
  void *v929;
  uint64_t v930;
  void **v931;
  uint64_t v932;
  uint64_t v933;
  unsigned int (*v934)(void **, uint64_t, uint64_t);
  id v935;
  uint64_t v936;
  void *v937;
  void *v938;
  uint64_t v939;
  void **v940;
  uint64_t v941;
  uint64_t v942;
  unsigned int (*v943)(void **, uint64_t, uint64_t);
  id v944;
  uint64_t v945;
  void *v946;
  void *v947;
  id v948;
  void **v949;
  uint64_t v950;
  uint64_t v951;
  uint64_t v952;
  uint64_t v953;
  uint64_t v954;
  uint64_t v955;
  char *v956;
  char *v957;
  uint64_t v958;
  void *v959;
  id v960;
  uint64_t v961;
  uint64_t v962;
  uint64_t v963;
  uint64_t v964;
  void *v965;
  id v966;
  void **v967;
  uint64_t v968;
  uint64_t v969;
  void *v970;
  uint64_t v971;
  void **v972;
  uint64_t v973;
  uint64_t v974;
  unsigned int (*v975)(void **, uint64_t, uint64_t);
  id v976;
  uint64_t v977;
  uint64_t v978;
  void *v979;
  uint64_t v980;
  void **v981;
  uint64_t v982;
  uint64_t v983;
  unsigned int (*v984)(void **, uint64_t, uint64_t);
  id v985;
  uint64_t v986;
  uint64_t v987;
  void *v988;
  uint64_t v989;
  void **v990;
  uint64_t v991;
  uint64_t v992;
  unsigned int (*v993)(void **, uint64_t, uint64_t);
  id v994;
  uint64_t v995;
  uint64_t v996;
  void *v997;
  id v998;
  void **v999;
  uint64_t v1000;
  uint64_t v1001;
  uint64_t v1002;
  uint64_t v1003;
  uint64_t v1004;
  uint64_t v1005;
  char *v1006;
  char *v1007;
  uint64_t v1008;
  uint64_t v1009;
  void *v1010;
  id v1011;
  void **v1012;
  uint64_t v1013;
  uint64_t v1014;
  uint64_t v1015;
  void *v1016;
  id v1017;
  void **v1018;
  uint64_t v1019;
  uint64_t v1020;
  void *v1021;
  id v1022;
  void **v1023;
  uint64_t v1024;
  uint64_t v1025;
  void *v1026;
  uint64_t v1027;
  uint64_t v1028;
  __n128 v1029;
  uint64_t v1030;
  uint64_t v1031;
  _QWORD *v1032;
  _QWORD *v1033;
  uint64_t v1034;
  void *v1035;
  id v1036;
  __int128 v1037;
  void *v1038;
  id v1039;
  uint64_t v1040;
  uint64_t v1041;
  uint64_t v1042;
  uint64_t v1043;
  uint64_t v1044;
  uint64_t v1045;
  void *v1046;
  void **v1047;
  id v1048;
  void **v1049;
  uint64_t v1050;
  uint64_t v1051;
  uint64_t v1052;
  void *v1053;
  void **v1054;
  id v1055;
  void **v1056;
  uint64_t v1057;
  uint64_t v1058;
  uint64_t v1059;
  void *v1060;
  void **v1061;
  id v1062;
  void **v1063;
  uint64_t v1064;
  uint64_t v1065;
  void *v1066;
  uint64_t v1067;
  uint64_t v1068;
  void (*v1069)(char *, char *, uint64_t, __n128);
  __n128 v1070;
  uint64_t v1071;
  uint64_t v1072;
  _QWORD *v1073;
  _QWORD *v1074;
  uint64_t v1075;
  void *v1076;
  id v1077;
  __int128 v1078;
  uint64_t v1079;
  uint64_t v1080;
  uint64_t v1081;
  uint64_t v1082;
  uint64_t v1083;
  uint64_t v1084;
  uint64_t v1085;
  void *v1086;
  id v1087;
  void *v1088;
  id v1089;
  int *v1090;
  uint64_t v1091;
  char *v1092;
  char *v1093;
  uint64_t v1094;
  uint64_t v1095;
  void *v1096;
  uint64_t v1097;
  int v1098;
  __int128 v1099;
  __int128 v1100;
  __int128 v1101;
  __int128 v1102;
  __int128 v1103;
  __int128 v1104;
  __int128 v1105;
  __int128 v1106;
  __int128 v1107;
  void *v1108;
  uint64_t v1109;
  uint64_t v1110;
  uint64_t v1111;
  void *v1112;
  id v1113;
  uint64_t v1114;
  uint64_t v1115;
  uint64_t v1116;
  uint64_t v1117;
  uint64_t v1118;
  void *v1119;
  id v1120;
  void *v1121;
  id v1122;
  int *v1123;
  uint64_t v1124;
  char *v1125;
  char *v1126;
  uint64_t v1127;
  void *v1128;
  uint64_t v1129;
  uint64_t v1130;
  int v1131;
  __int128 v1132;
  __int128 v1133;
  __int128 v1134;
  __int128 v1135;
  __int128 v1136;
  __int128 v1137;
  __int128 v1138;
  __int128 v1139;
  __int128 v1140;
  uint64_t v1141;
  void *v1142;
  uint64_t v1143;
  uint64_t v1144;
  uint64_t v1145;
  void *v1146;
  id v1147;
  int *v1148;
  uint64_t v1149;
  _QWORD *v1150;
  _QWORD *v1151;
  uint64_t v1152;
  uint64_t v1153;
  void *v1154;
  void (*v1155)(void **, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v1156;
  uint64_t v1157;
  uint64_t v1158;
  uint64_t v1159;
  uint64_t v1160;
  uint64_t v1161;
  void *v1162;
  id v1163;
  void *v1164;
  id v1165;
  int *v1166;
  uint64_t v1167;
  char *v1168;
  char *v1169;
  uint64_t v1170;
  uint64_t v1171;
  void *v1172;
  uint64_t v1173;
  int v1174;
  __int128 v1175;
  __int128 v1176;
  __int128 v1177;
  __int128 v1178;
  __int128 v1179;
  __int128 v1180;
  __int128 v1181;
  __int128 v1182;
  __int128 v1183;
  void *v1184;
  uint64_t v1185;
  uint64_t v1186;
  uint64_t v1187;
  void *v1188;
  id v1189;
  uint64_t v1190;
  uint64_t v1191;
  uint64_t v1192;
  uint64_t v1193;
  uint64_t v1194;
  void *v1195;
  id v1196;
  void *v1197;
  id v1198;
  int *v1199;
  uint64_t v1200;
  char *v1201;
  char *v1202;
  uint64_t v1203;
  void *v1204;
  uint64_t v1205;
  uint64_t v1206;
  int v1207;
  __int128 v1208;
  __int128 v1209;
  __int128 v1210;
  __int128 v1211;
  __int128 v1212;
  __int128 v1213;
  __int128 v1214;
  __int128 v1215;
  __int128 v1216;
  void *v1217;
  uint64_t v1218;
  uint64_t v1219;
  uint64_t v1220;
  void *v1221;
  id v1222;
  uint64_t v1223;
  uint64_t v1224;
  uint64_t v1225;
  uint64_t v1226;
  uint64_t v1227;
  void *v1228;
  id v1229;
  void *v1230;
  id v1231;
  uint64_t v1232;
  uint64_t v1233;
  uint64_t v1234;
  uint64_t v1235;
  uint64_t v1236;
  uint64_t v1237;
  void *v1238;
  id v1239;
  void *v1240;
  id v1241;
  uint64_t v1242;
  uint64_t v1243;
  uint64_t v1244;
  uint64_t v1245;
  uint64_t v1246;
  uint64_t v1247;
  uint64_t v1248;
  void **v1249;
  uint64_t v1250;
  void *v1251;
  id v1252;
  void *v1253;
  id v1254;
  uint64_t v1255;
  uint64_t v1256;
  uint64_t v1257;
  uint64_t v1258;
  uint64_t v1259;
  size_t v1260;
  void *v1261;
  id v1262;
  void *v1263;
  id v1264;
  uint64_t v1265;
  uint64_t v1266;
  uint64_t v1267;
  uint64_t v1268;
  uint64_t v1269;
  uint64_t v1270;
  size_t v1271;
  void *v1272;
  id v1273;
  void *v1274;
  id v1275;
  uint64_t v1276;
  uint64_t v1277;
  uint64_t v1278;
  uint64_t v1279;
  uint64_t v1280;
  uint64_t v1281;
  size_t v1282;
  void *v1283;
  id v1284;
  void *v1285;
  id v1286;
  uint64_t v1287;
  int *v1288;
  uint64_t v1289;
  _QWORD *v1290;
  _QWORD *v1291;
  uint64_t v1292;
  uint64_t v1293;
  uint64_t v1294;
  void *v1295;
  uint64_t v1296;
  uint64_t v1298;
  uint64_t v1299;
  uint64_t v1300;
  uint64_t v1301;
  int *v1302;
  int *v1303;
  int *v1304;
  int *v1305;
  int *v1306;
  int *v1307;
  uint64_t v1308;
  uint64_t v1309;
  uint64_t v1310;
  uint64_t v1311;
  unsigned __int8 v1312;
  uint64_t v1313;
  unsigned __int8 v1314;
  uint64_t v1315;
  uint64_t v1316;
  uint64_t v1317;
  uint64_t v1318;
  uint64_t v1319;
  unsigned __int8 v1320;
  uint64_t v1321;
  unsigned __int8 v1322;
  uint64_t v1323;
  uint64_t v1324;
  uint64_t v1325;
  uint64_t v1326;
  uint64_t v1327;
  void (*v1328)(char *, char *, uint64_t, __n128);
  unsigned __int8 v1329;
  uint64_t v1330;
  unsigned __int8 v1331;
  uint64_t v1332;
  int *v1333;
  int *v1334;
  uint64_t v1335;
  uint64_t v1336;
  uint64_t v1337;
  uint64_t v1338;
  int *v1339;
  int *v1340;
  uint64_t v1341;
  uint64_t v1342;
  uint64_t v1343;
  uint64_t v1344;
  int *v1345;
  int *v1346;
  char *v1347;
  uint64_t v1348;
  uint64_t v1349;
  uint64_t v1350;
  uint64_t v1351;
  unsigned __int8 v1352;
  uint64_t v1353;
  unsigned __int8 v1354;
  uint64_t v1355;
  void (*v1356)(char *, char *, uint64_t, __n128);
  void *v1357;
  void *v1358;
  void *v1359;
  void *v1360;
  unsigned __int8 v1361;
  void *v1362;
  unsigned __int8 v1363;
  void *v1364;
  void (*v1365)(char *, char *, uint64_t, __n128);
  void *v1366;
  void *v1367;
  void *v1368;
  void *v1369;
  unsigned __int8 v1370;
  void *v1371;
  unsigned __int8 v1372;
  void *v1373;
  void **v1374;
  void **v1375;
  void **v1376;
  char *v1377;
  char *v1378;
  void *v1379;
  char v1380;
  void *v1381;
  char v1382;
  void *v1383;
  void *v1384;
  void *v1385;
  void *v1386;
  unsigned int (*v1387)(void **, uint64_t, uint64_t);
  unsigned int (*v1388)(void **, uint64_t, uint64_t);
  unsigned int (*v1389)(void **, uint64_t, uint64_t);
  void *v1390;
  void (*v1391)(char *, char *, uint64_t, __n128);
  void *v1392;
  void *v1393;
  void *v1394;
  void *v1395;
  void *v1396;
  void *v1397;
  void *v1398;
  void *v1399;
  unsigned int (*v1400)(void **, uint64_t, uint64_t);
  unsigned int (*v1401)(void **, uint64_t, uint64_t);
  unsigned int (*v1402)(void **, uint64_t, uint64_t);
  void *v1403;
  void (*v1404)(char *, char *, uint64_t, __n128);
  void *v1405;
  void *v1406;
  void *v1407;
  void *v1408;
  void *v1409;
  void *v1410;
  void *v1411;
  void *v1412;
  void *v1413;
  void *v1414;
  void *v1415;
  void *v1416;
  void *v1417;
  void **v1418;
  void **v1419;
  void **v1420;
  char *v1421;
  void *v1422;
  char v1423;
  void *v1424;
  char v1425;
  void **v1426;
  void **v1427;
  void **v1428;
  void **v1429;
  void **v1430;
  void **v1431;
  char *v1432;
  char *v1433;
  uint64_t v1434;
  uint64_t v1435;
  uint64_t v1436;
  uint64_t v1437;
  uint64_t v1438;
  uint64_t v1439;
  uint64_t v1440;
  uint64_t v1441;
  void **v1442;
  void **v1443;
  void **v1444;
  void **v1445;
  void **v1446;
  void **v1447;
  char *v1448;
  char *v1449;
  uint64_t v1450;
  uint64_t v1451;
  uint64_t v1452;
  uint64_t v1453;
  uint64_t v1454;
  uint64_t v1455;
  uint64_t v1456;
  uint64_t v1457;
  uint64_t v1458;
  uint64_t v1459;
  uint64_t v1460;
  uint64_t v1461;
  uint64_t v1462;
  uint64_t v1463;
  uint64_t v1464;
  uint64_t v1465;
  uint64_t v1466;
  uint64_t v1467;
  uint64_t v1468;
  uint64_t v1469;
  void **__dst;
  void **__dsta;
  void **__dstb;
  void **__dstc;
  void **__dstd;
  void **__dste;
  char *__dstr;
  char *__dsts;
  void *__dstt;
  char __dstu;
  void *__dstv;
  char __dstw;
  void *__dstx;
  char __dsty;
  void *__dstz;
  char __dstba;
  void **__dstf;
  void **__dstg;
  void **__dsth;
  void **__dsti;
  void **__dstj;
  void **__dstk;
  char *__dstbb;
  char *__dstbc;
  void *__dstbd;
  char __dstbe;
  void *__dstbf;
  char __dstbg;
  void *__dstbh;
  char __dstbi;
  void *__dstbj;
  char __dstbk;
  _QWORD *__dstl;
  void *__dstm;
  void *__dstn;
  void *__dsto;
  void *__dstp;
  void *__dstq;
  void *__dstbl;
  uint64_t v1509;
  uint64_t v1510;
  uint64_t v1511;
  uint64_t v1512;
  uint64_t v1513;
  uint64_t v1514;
  uint64_t v1515;
  uint64_t v1516;
  uint64_t v1517;
  uint64_t v1518;
  uint64_t v1519;
  uint64_t v1520;
  uint64_t v1521;
  uint64_t v1522;
  uint64_t v1523;
  uint64_t v1524;
  uint64_t v1525;
  uint64_t v1526;
  uint64_t v1527;
  uint64_t v1528;
  uint64_t v1529;
  uint64_t v1530;
  uint64_t v1531;
  uint64_t v1532;
  uint64_t v1533;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  v6 = *(void **)(a1 + 8);
  v7 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v8 = v7;

  v9 = *(void **)(a1 + 16);
  v10 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v11 = v10;

  v12 = *(void **)(a1 + 24);
  v13 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v14 = v13;

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v15 = *(void **)(a1 + 40);
  v16 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v16;
  v17 = v16;

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v18 = *(void **)(a1 + 56);
  v19 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v19;
  v20 = v19;

  v21 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v21)
    {
      v22 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v21;
      *(_QWORD *)(a1 + 72) = v22;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v21)
  {
    v23 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v21;
    *(_QWORD *)(a1 + 72) = v23;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_8:
  v24 = *(void **)(a1 + 80);
  v25 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v25;
  v26 = v25;

  v27 = *(void **)(a1 + 88);
  v28 = *(void **)(a2 + 88);
  *(_QWORD *)(a1 + 88) = v28;
  v29 = v28;

  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  v30 = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v30;
  v31 = *(void **)(a1 + 120);
  v32 = *(void **)(a2 + 120);
  *(_QWORD *)(a1 + 120) = v32;
  v33 = v32;

  v34 = *(_QWORD *)(a2 + 128);
  if (*(_QWORD *)(a1 + 128))
  {
    if (v34)
    {
      v35 = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 128) = v34;
      *(_QWORD *)(a1 + 136) = v35;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v34)
  {
    v36 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = v34;
    *(_QWORD *)(a1 + 136) = v36;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
LABEL_15:
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v37 = *(_QWORD *)(a2 + 152);
  v38 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 152) = v37;
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRelease(v38);
  v39 = *(void **)(a1 + 160);
  v40 = *(void **)(a2 + 160);
  *(_QWORD *)(a1 + 160) = v40;
  v41 = v40;

  v42 = *(_QWORD *)(a2 + 168);
  if (*(_QWORD *)(a1 + 168))
  {
    if (v42)
    {
      v43 = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 168) = v42;
      *(_QWORD *)(a1 + 176) = v43;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v42)
  {
    v44 = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 168) = v42;
    *(_QWORD *)(a1 + 176) = v44;
    swift_retain();
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
LABEL_22:
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  v45 = *(_QWORD *)(a2 + 192);
  v46 = *(_QWORD *)(a1 + 192);
  *(_QWORD *)(a1 + 192) = v45;
  swift_bridgeObjectRetain(v45);
  swift_bridgeObjectRelease(v46);
  v47 = *(_QWORD *)(a2 + 200);
  if (*(_QWORD *)(a1 + 200))
  {
    if (v47)
    {
      v48 = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 200) = v47;
      *(_QWORD *)(a1 + 208) = v48;
      swift_retain();
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v47)
  {
    v49 = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 200) = v47;
    *(_QWORD *)(a1 + 208) = v49;
    swift_retain();
    goto LABEL_29;
  }
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
LABEL_29:
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_BYTE *)(a1 + 217) = *(_BYTE *)(a2 + 217);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  v50 = *(void **)(a1 + 232);
  v51 = *(void **)(a2 + 232);
  *(_QWORD *)(a1 + 232) = v51;
  v52 = v51;

  v53 = *(_QWORD *)(a2 + 240);
  if (*(_QWORD *)(a1 + 240))
  {
    if (v53)
    {
      v54 = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 240) = v53;
      *(_QWORD *)(a1 + 248) = v54;
      swift_retain();
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else if (v53)
  {
    v55 = *(_QWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 240) = v53;
    *(_QWORD *)(a1 + 248) = v55;
    swift_retain();
    goto LABEL_36;
  }
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
LABEL_36:
  v56 = *(_QWORD *)(a1 + 256);
  v57 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 256) = v57;
  swift_bridgeObjectRetain(v57);
  swift_bridgeObjectRelease(v56);
  v58 = *(_QWORD *)(a2 + 264);
  if (*(_QWORD *)(a1 + 264))
  {
    if (v58)
    {
      v59 = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 264) = v58;
      *(_QWORD *)(a1 + 272) = v59;
      swift_retain();
      swift_release();
      goto LABEL_43;
    }
    swift_release();
  }
  else if (v58)
  {
    v60 = *(_QWORD *)(a2 + 272);
    *(_QWORD *)(a1 + 264) = v58;
    *(_QWORD *)(a1 + 272) = v60;
    swift_retain();
    goto LABEL_43;
  }
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
LABEL_43:
  v61 = a3[17];
  v62 = a1 + v61;
  v63 = a2 + v61;
  v64 = *(_QWORD *)(a2 + v61);
  v65 = *(_QWORD *)(a2 + v61 + 8);
  v66 = *(_QWORD *)(a1 + v61);
  *(_QWORD *)(a1 + v61) = v64;
  swift_unknownObjectRetain(v64);
  swift_unknownObjectRelease(v66);
  *(_QWORD *)(v62 + 8) = v65;
  v67 = *(int *)(sub_10002A750(&qword_10064CB68) + 28);
  v68 = (void **)(v62 + v67);
  v69 = (void **)(v63 + v67);
  v70 = sub_10002A750(&qword_10064CBB8);
  v71 = *(_QWORD *)(v70 - 8);
  v72 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v71 + 48);
  LODWORD(v65) = v72(v68, 1, v70);
  v73 = v72(v69, 1, v70);
  if ((_DWORD)v65)
  {
    if (!v73)
    {
      v75 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(v69, v75))
      {
        case 0u:
          v76 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v1509 = v75;
          switch(swift_getEnumCaseMultiPayload(v69, v76))
          {
            case 1u:
              v77 = *v69;
              *v68 = *v69;
              v78 = v77;
              v79 = v68;
              v80 = v76;
              v81 = 1;
              goto LABEL_121;
            case 2u:
              v239 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v239 - 8) + 16))(v68, v69, v239);
              v79 = v68;
              v80 = v76;
              v81 = 2;
              goto LABEL_121;
            case 3u:
              v240 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v240 - 8) + 16))(v68, v69, v240);
              v79 = v68;
              v80 = v76;
              v81 = 3;
              goto LABEL_121;
            case 4u:
              v241 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v241 - 8) + 16))(v68, v69, v241);
              v79 = v68;
              v80 = v76;
              v81 = 4;
              goto LABEL_121;
            case 5u:
              v242 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v242 - 8) + 16))(v68, v69, v242);
              v79 = v68;
              v80 = v76;
              v81 = 5;
              goto LABEL_121;
            case 6u:
              v243 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v243 - 8) + 16))(v68, v69, v243);
              v79 = v68;
              v80 = v76;
              v81 = 6;
              goto LABEL_121;
            case 8u:
              v244 = *v69;
              *v68 = *v69;
              v245 = v244;
              v79 = v68;
              v80 = v76;
              v81 = 8;
              goto LABEL_121;
            case 9u:
              v246 = *v69;
              *v68 = *v69;
              v247 = v246;
              v79 = v68;
              v80 = v76;
              v81 = 9;
LABEL_121:
              swift_storeEnumTagMultiPayload(v79, v80, v81);
              break;
            default:
              memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
              break;
          }
          v248 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v249 = v248[5];
          v250 = (char *)v68 + v249;
          v251 = (char *)v69 + v249;
          if (*(void **)((char *)v69 + v249 + 8))
          {
            v1302 = v248;
            *(_QWORD *)v250 = *(_QWORD *)v251;
            v252 = *((_QWORD *)v251 + 1);
            *((_QWORD *)v250 + 1) = v252;
            v253 = (void *)*((_QWORD *)v251 + 2);
            v1434 = *((_QWORD *)v251 + 4);
            __dstt = (void *)*((_QWORD *)v251 + 3);
            v1357 = (void *)*((_QWORD *)v251 + 6);
            v1392 = (void *)*((_QWORD *)v251 + 5);
            v1335 = *((_QWORD *)v251 + 7);
            v1312 = v251[64];
            swift_bridgeObjectRetain(v252);
            sub_10003E1F0(v253, (uint64_t)__dstt, v1434, (uint64_t)v1392, (uint64_t)v1357, v1335, v1312);
            *((_QWORD *)v250 + 2) = v253;
            *((_QWORD *)v250 + 3) = __dstt;
            *((_QWORD *)v250 + 4) = v1434;
            *((_QWORD *)v250 + 5) = v1392;
            *((_QWORD *)v250 + 6) = v1357;
            *((_QWORD *)v250 + 7) = v1335;
            v250[64] = v1312;
            v250[65] = v251[65];
            v250[66] = v251[66];
            v250[67] = v251[67];
            v250[68] = v251[68];
            v254 = v251[120];
            if (v254 == 255)
            {
              v255 = *(_OWORD *)(v251 + 72);
              v256 = *(_OWORD *)(v251 + 88);
              v257 = *(_OWORD *)(v251 + 104);
              v250[120] = v251[120];
              *(_OWORD *)(v250 + 88) = v256;
              *(_OWORD *)(v250 + 104) = v257;
              *(_OWORD *)(v250 + 72) = v255;
            }
            else
            {
              __dstu = v254 & 1;
              v264 = (void *)*((_QWORD *)v251 + 9);
              v1393 = (void *)*((_QWORD *)v251 + 11);
              v1435 = *((_QWORD *)v251 + 10);
              v1336 = *((_QWORD *)v251 + 13);
              v1358 = (void *)*((_QWORD *)v251 + 12);
              v1313 = *((_QWORD *)v251 + 14);
              sub_10002B764(v264, v1435, (uint64_t)v1393, (uint64_t)v1358, v1336, v1313, v254 & 1);
              *((_QWORD *)v250 + 9) = v264;
              *((_QWORD *)v250 + 10) = v1435;
              *((_QWORD *)v250 + 11) = v1393;
              *((_QWORD *)v250 + 12) = v1358;
              *((_QWORD *)v250 + 13) = v1336;
              *((_QWORD *)v250 + 14) = v1313;
              v250[120] = __dstu;
            }
            v250[121] = v251[121];
            v248 = v1302;
          }
          else
          {
            v258 = *(_OWORD *)v251;
            v259 = *((_OWORD *)v251 + 1);
            v260 = *((_OWORD *)v251 + 3);
            *((_OWORD *)v250 + 2) = *((_OWORD *)v251 + 2);
            *((_OWORD *)v250 + 3) = v260;
            *(_OWORD *)v250 = v258;
            *((_OWORD *)v250 + 1) = v259;
            v261 = *((_OWORD *)v251 + 4);
            v262 = *((_OWORD *)v251 + 5);
            v263 = *((_OWORD *)v251 + 6);
            *(_OWORD *)(v250 + 106) = *(_OWORD *)(v251 + 106);
            *((_OWORD *)v250 + 5) = v262;
            *((_OWORD *)v250 + 6) = v263;
            *((_OWORD *)v250 + 4) = v261;
          }
          *((_BYTE *)v68 + v248[6]) = *((_BYTE *)v69 + v248[6]);
          *((_BYTE *)v68 + v248[7]) = *((_BYTE *)v69 + v248[7]);
          *((_BYTE *)v68 + v248[8]) = *((_BYTE *)v69 + v248[8]);
          *((_BYTE *)v68 + v248[9]) = *((_BYTE *)v69 + v248[9]);
          *((_BYTE *)v68 + v248[10]) = *((_BYTE *)v69 + v248[10]);
          v265 = v248[11];
          v266 = *(void **)((char *)v69 + v265);
          *(void **)((char *)v68 + v265) = v266;
          v267 = v266;
          v119 = v68;
          v120 = v1509;
          v121 = 0;
          goto LABEL_210;
        case 1u:
          v90 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v1511 = v75;
          switch(swift_getEnumCaseMultiPayload(v69, v90))
          {
            case 1u:
              v91 = *v69;
              *v68 = *v69;
              v92 = v91;
              v93 = v68;
              v94 = v90;
              v95 = 1;
              goto LABEL_137;
            case 2u:
              v268 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v268 - 8) + 16))(v68, v69, v268);
              v93 = v68;
              v94 = v90;
              v95 = 2;
              goto LABEL_137;
            case 3u:
              v269 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v269 - 8) + 16))(v68, v69, v269);
              v93 = v68;
              v94 = v90;
              v95 = 3;
              goto LABEL_137;
            case 4u:
              v270 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v270 - 8) + 16))(v68, v69, v270);
              v93 = v68;
              v94 = v90;
              v95 = 4;
              goto LABEL_137;
            case 5u:
              v271 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v271 - 8) + 16))(v68, v69, v271);
              v93 = v68;
              v94 = v90;
              v95 = 5;
              goto LABEL_137;
            case 6u:
              v272 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v272 - 8) + 16))(v68, v69, v272);
              v93 = v68;
              v94 = v90;
              v95 = 6;
              goto LABEL_137;
            case 8u:
              v273 = *v69;
              *v68 = *v69;
              v274 = v273;
              v93 = v68;
              v94 = v90;
              v95 = 8;
              goto LABEL_137;
            case 9u:
              v275 = *v69;
              *v68 = *v69;
              v276 = v275;
              v93 = v68;
              v94 = v90;
              v95 = 9;
LABEL_137:
              swift_storeEnumTagMultiPayload(v93, v94, v95);
              break;
            default:
              memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
              break;
          }
          v277 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v278 = v277[5];
          v279 = (char *)v68 + v278;
          v280 = (char *)v69 + v278;
          if (*(void **)((char *)v69 + v278 + 8))
          {
            v1303 = v277;
            *(_QWORD *)v279 = *(_QWORD *)v280;
            v281 = *((_QWORD *)v280 + 1);
            *((_QWORD *)v279 + 1) = v281;
            v282 = (void *)*((_QWORD *)v280 + 2);
            v1436 = *((_QWORD *)v280 + 4);
            __dstv = (void *)*((_QWORD *)v280 + 3);
            v1359 = (void *)*((_QWORD *)v280 + 6);
            v1394 = (void *)*((_QWORD *)v280 + 5);
            v1337 = *((_QWORD *)v280 + 7);
            v1314 = v280[64];
            swift_bridgeObjectRetain(v281);
            sub_10003E1F0(v282, (uint64_t)__dstv, v1436, (uint64_t)v1394, (uint64_t)v1359, v1337, v1314);
            *((_QWORD *)v279 + 2) = v282;
            *((_QWORD *)v279 + 3) = __dstv;
            *((_QWORD *)v279 + 4) = v1436;
            *((_QWORD *)v279 + 5) = v1394;
            *((_QWORD *)v279 + 6) = v1359;
            *((_QWORD *)v279 + 7) = v1337;
            v279[64] = v1314;
            v279[65] = v280[65];
            v279[66] = v280[66];
            v279[67] = v280[67];
            v279[68] = v280[68];
            v283 = v280[120];
            if (v283 == 255)
            {
              v284 = *(_OWORD *)(v280 + 72);
              v285 = *(_OWORD *)(v280 + 88);
              v286 = *(_OWORD *)(v280 + 104);
              v279[120] = v280[120];
              *(_OWORD *)(v279 + 88) = v285;
              *(_OWORD *)(v279 + 104) = v286;
              *(_OWORD *)(v279 + 72) = v284;
            }
            else
            {
              __dstw = v283 & 1;
              v293 = (void *)*((_QWORD *)v280 + 9);
              v1395 = (void *)*((_QWORD *)v280 + 11);
              v1437 = *((_QWORD *)v280 + 10);
              v1338 = *((_QWORD *)v280 + 13);
              v1360 = (void *)*((_QWORD *)v280 + 12);
              v1315 = *((_QWORD *)v280 + 14);
              sub_10002B764(v293, v1437, (uint64_t)v1395, (uint64_t)v1360, v1338, v1315, v283 & 1);
              *((_QWORD *)v279 + 9) = v293;
              *((_QWORD *)v279 + 10) = v1437;
              *((_QWORD *)v279 + 11) = v1395;
              *((_QWORD *)v279 + 12) = v1360;
              *((_QWORD *)v279 + 13) = v1338;
              *((_QWORD *)v279 + 14) = v1315;
              v279[120] = __dstw;
            }
            v279[121] = v280[121];
            v277 = v1303;
          }
          else
          {
            v287 = *(_OWORD *)v280;
            v288 = *((_OWORD *)v280 + 1);
            v289 = *((_OWORD *)v280 + 3);
            *((_OWORD *)v279 + 2) = *((_OWORD *)v280 + 2);
            *((_OWORD *)v279 + 3) = v289;
            *(_OWORD *)v279 = v287;
            *((_OWORD *)v279 + 1) = v288;
            v290 = *((_OWORD *)v280 + 4);
            v291 = *((_OWORD *)v280 + 5);
            v292 = *((_OWORD *)v280 + 6);
            *(_OWORD *)(v279 + 106) = *(_OWORD *)(v280 + 106);
            *((_OWORD *)v279 + 5) = v291;
            *((_OWORD *)v279 + 6) = v292;
            *((_OWORD *)v279 + 4) = v290;
          }
          *((_BYTE *)v68 + v277[6]) = *((_BYTE *)v69 + v277[6]);
          *((_BYTE *)v68 + v277[7]) = *((_BYTE *)v69 + v277[7]);
          *((_BYTE *)v68 + v277[8]) = *((_BYTE *)v69 + v277[8]);
          *((_BYTE *)v68 + v277[9]) = *((_BYTE *)v69 + v277[9]);
          *((_BYTE *)v68 + v277[10]) = *((_BYTE *)v69 + v277[10]);
          v294 = v277[11];
          v295 = *(void **)((char *)v69 + v294);
          *(void **)((char *)v68 + v294) = v295;
          v296 = v295;
          v119 = v68;
          v120 = v1511;
          v121 = 1;
          goto LABEL_210;
        case 2u:
          v1512 = v75;
          v96 = *v69;
          *v68 = *v69;
          v97 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v1426 = (void **)((char *)v69 + v97);
          __dst = (void **)((char *)v68 + v97);
          v98 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v99 = *(_QWORD *)(v98 - 8);
          v1387 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v99 + 48);
          v100 = v96;
          if (v1387(v1426, 1, v98))
          {
            v101 = sub_10002A750(&qword_100644980);
            memcpy(__dst, v1426, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
            v102 = v1512;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v1426, v98))
            {
              case 1u:
                v174 = *v1426;
                v175 = __dst;
                *__dst = *v1426;
                v176 = v174;
                v177 = __dst;
                v178 = v98;
                v179 = 1;
                goto LABEL_185;
              case 2u:
                v359 = type metadata accessor for Date(0);
                v175 = __dst;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v359 - 8) + 16))(__dst, v1426, v359);
                v177 = __dst;
                v178 = v98;
                v179 = 2;
                goto LABEL_185;
              case 3u:
                v360 = type metadata accessor for Date(0);
                v175 = __dst;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v360 - 8) + 16))(__dst, v1426, v360);
                v177 = __dst;
                v178 = v98;
                v179 = 3;
                goto LABEL_185;
              case 4u:
                v361 = type metadata accessor for Date(0);
                v175 = __dst;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v361 - 8) + 16))(__dst, v1426, v361);
                v177 = __dst;
                v178 = v98;
                v179 = 4;
                goto LABEL_185;
              case 5u:
                v362 = type metadata accessor for Date(0);
                v175 = __dst;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v362 - 8) + 16))(__dst, v1426, v362);
                v177 = __dst;
                v178 = v98;
                v179 = 5;
                goto LABEL_185;
              case 6u:
                v363 = type metadata accessor for Date(0);
                v175 = __dst;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v363 - 8) + 16))(__dst, v1426, v363);
                v177 = __dst;
                v178 = v98;
                v179 = 6;
                goto LABEL_185;
              case 8u:
                v366 = *v1426;
                v175 = __dst;
                *__dst = *v1426;
                v367 = v366;
                v177 = __dst;
                v178 = v98;
                v179 = 8;
                goto LABEL_185;
              case 9u:
                v368 = *v1426;
                v175 = __dst;
                *__dst = *v1426;
                v369 = v368;
                v177 = __dst;
                v178 = v98;
                v179 = 9;
LABEL_185:
                swift_storeEnumTagMultiPayload(v177, v178, v179);
                v365 = v98;
                v102 = v1512;
                v364 = v99;
                break;
              default:
                v175 = __dst;
                memcpy(__dst, v1426, *(_QWORD *)(v99 + 64));
                v364 = v99;
                v365 = v98;
                v102 = v1512;
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v364 + 56))(v175, 0, 1, v365);
          }
          v119 = v68;
          v120 = v102;
          v121 = 2;
          goto LABEL_210;
        case 3u:
          v1513 = v75;
          v103 = *v69;
          *v68 = *v69;
          v104 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v1427 = (void **)((char *)v69 + v104);
          __dsta = (void **)((char *)v68 + v104);
          v105 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v106 = *(_QWORD *)(v105 - 8);
          v1388 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v106 + 48);
          v107 = v103;
          if (v1388(v1427, 1, v105))
          {
            v108 = sub_10002A750(&qword_100644980);
            memcpy(__dsta, v1427, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
            v109 = v1513;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v1427, v105))
            {
              case 1u:
                v180 = *v1427;
                v181 = __dsta;
                *__dsta = *v1427;
                v182 = v180;
                v183 = __dsta;
                v184 = v105;
                v185 = 1;
                goto LABEL_196;
              case 2u:
                v370 = type metadata accessor for Date(0);
                v181 = __dsta;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v370 - 8) + 16))(__dsta, v1427, v370);
                v183 = __dsta;
                v184 = v105;
                v185 = 2;
                goto LABEL_196;
              case 3u:
                v371 = type metadata accessor for Date(0);
                v181 = __dsta;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v371 - 8) + 16))(__dsta, v1427, v371);
                v183 = __dsta;
                v184 = v105;
                v185 = 3;
                goto LABEL_196;
              case 4u:
                v372 = type metadata accessor for Date(0);
                v181 = __dsta;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v372 - 8) + 16))(__dsta, v1427, v372);
                v183 = __dsta;
                v184 = v105;
                v185 = 4;
                goto LABEL_196;
              case 5u:
                v373 = type metadata accessor for Date(0);
                v181 = __dsta;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v373 - 8) + 16))(__dsta, v1427, v373);
                v183 = __dsta;
                v184 = v105;
                v185 = 5;
                goto LABEL_196;
              case 6u:
                v374 = type metadata accessor for Date(0);
                v181 = __dsta;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v374 - 8) + 16))(__dsta, v1427, v374);
                v183 = __dsta;
                v184 = v105;
                v185 = 6;
                goto LABEL_196;
              case 8u:
                v377 = *v1427;
                v181 = __dsta;
                *__dsta = *v1427;
                v378 = v377;
                v183 = __dsta;
                v184 = v105;
                v185 = 8;
                goto LABEL_196;
              case 9u:
                v379 = *v1427;
                v181 = __dsta;
                *__dsta = *v1427;
                v380 = v379;
                v183 = __dsta;
                v184 = v105;
                v185 = 9;
LABEL_196:
                swift_storeEnumTagMultiPayload(v183, v184, v185);
                v376 = v105;
                v109 = v1513;
                v375 = v106;
                break;
              default:
                v181 = __dsta;
                memcpy(__dsta, v1427, *(_QWORD *)(v106 + 64));
                v375 = v106;
                v376 = v105;
                v109 = v1513;
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v375 + 56))(v181, 0, 1, v376);
          }
          v119 = v68;
          v120 = v109;
          v121 = 3;
          goto LABEL_210;
        case 4u:
          v1514 = v75;
          v110 = *v69;
          *v68 = *v69;
          v111 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v1428 = (void **)((char *)v69 + v111);
          __dstb = (void **)((char *)v68 + v111);
          v112 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v113 = *(_QWORD *)(v112 - 8);
          v1389 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v113 + 48);
          v114 = v110;
          if (v1389(v1428, 1, v112))
          {
            v115 = sub_10002A750(&qword_100644980);
            memcpy(__dstb, v1428, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
            v116 = v1514;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v1428, v112))
            {
              case 1u:
                v186 = *v1428;
                v187 = __dstb;
                *__dstb = *v1428;
                v188 = v186;
                v189 = __dstb;
                v190 = v112;
                v191 = 1;
                goto LABEL_207;
              case 2u:
                v381 = type metadata accessor for Date(0);
                v187 = __dstb;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v381 - 8) + 16))(__dstb, v1428, v381);
                v189 = __dstb;
                v190 = v112;
                v191 = 2;
                goto LABEL_207;
              case 3u:
                v382 = type metadata accessor for Date(0);
                v187 = __dstb;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v382 - 8) + 16))(__dstb, v1428, v382);
                v189 = __dstb;
                v190 = v112;
                v191 = 3;
                goto LABEL_207;
              case 4u:
                v383 = type metadata accessor for Date(0);
                v187 = __dstb;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v383 - 8) + 16))(__dstb, v1428, v383);
                v189 = __dstb;
                v190 = v112;
                v191 = 4;
                goto LABEL_207;
              case 5u:
                v384 = type metadata accessor for Date(0);
                v187 = __dstb;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v384 - 8) + 16))(__dstb, v1428, v384);
                v189 = __dstb;
                v190 = v112;
                v191 = 5;
                goto LABEL_207;
              case 6u:
                v385 = type metadata accessor for Date(0);
                v187 = __dstb;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v385 - 8) + 16))(__dstb, v1428, v385);
                v189 = __dstb;
                v190 = v112;
                v191 = 6;
                goto LABEL_207;
              case 8u:
                v388 = *v1428;
                v187 = __dstb;
                *__dstb = *v1428;
                v389 = v388;
                v189 = __dstb;
                v190 = v112;
                v191 = 8;
                goto LABEL_207;
              case 9u:
                v390 = *v1428;
                v187 = __dstb;
                *__dstb = *v1428;
                v391 = v390;
                v189 = __dstb;
                v190 = v112;
                v191 = 9;
LABEL_207:
                swift_storeEnumTagMultiPayload(v189, v190, v191);
                v387 = v112;
                v116 = v1514;
                v386 = v113;
                break;
              default:
                v187 = __dstb;
                memcpy(__dstb, v1428, *(_QWORD *)(v113 + 64));
                v386 = v113;
                v387 = v112;
                v116 = v1514;
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v386 + 56))(v187, 0, 1, v387);
          }
          v119 = v68;
          v120 = v116;
          v121 = 4;
          goto LABEL_210;
        case 5u:
          *v68 = *v69;
          *((_BYTE *)v68 + 8) = *((_BYTE *)v69 + 8);
          *((_BYTE *)v68 + 9) = *((_BYTE *)v69 + 9);
          *((_BYTE *)v68 + 10) = *((_BYTE *)v69 + 10);
          v117 = v69[2];
          v68[2] = v117;
          v118 = v117;
          v119 = v68;
          v120 = v75;
          v121 = 5;
          goto LABEL_210;
        case 6u:
          v130 = *v69;
          *v68 = *v69;
          v131 = v130;
          v119 = v68;
          v120 = v75;
          v121 = 6;
          goto LABEL_210;
        case 7u:
          v122 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v123 = *(_QWORD *)(v122 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v123 + 48))(v69, 1, v122))
          {
            v124 = sub_10002A750(&qword_100644600);
            memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
          }
          else
          {
            v1390 = *v69;
            *v68 = *v69;
            v192 = *(int *)(v122 + 20);
            v1432 = (char *)v69 + v192;
            __dstr = (char *)v68 + v192;
            v1519 = v75;
            v193 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v1356 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v193 - 8) + 16);
            v194 = swift_bridgeObjectRetain(v1390);
            v195 = v193;
            v75 = v1519;
            v1356(__dstr, v1432, v195, v194);
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v123 + 56))(v68, 0, 1, v122);
          }
          v196 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v197 = (void **)((char *)v68 + v196);
          v198 = (void **)((char *)v69 + v196);
          if (v198[1])
          {
            *v197 = *v198;
            v199 = v198[1];
            v197[1] = v199;
            v200 = (void *)v198[2];
            v197[2] = v200;
            swift_bridgeObjectRetain(v199);
            v201 = v200;
          }
          else
          {
            v202 = *(_OWORD *)v198;
            v197[2] = v198[2];
            *(_OWORD *)v197 = v202;
          }
          v119 = v68;
          v120 = v75;
          v121 = 7;
          goto LABEL_210;
        case 8u:
          v132 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v133 = *(_QWORD *)(v132 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v133 + 48))(v69, 1, v132))
          {
            v134 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
          }
          else
          {
            v208 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v208 - 8) + 16))(v68, v69, v208);
            *((_BYTE *)v68 + *(int *)(v132 + 20)) = *((_BYTE *)v69 + *(int *)(v132 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v133 + 56))(v68, 0, 1, v132);
          }
          v209 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)v68 + *(int *)(v209 + 20)) = *(void **)((char *)v69 + *(int *)(v209 + 20));
          v119 = v68;
          v120 = v75;
          v121 = 8;
          goto LABEL_210;
        case 9u:
          *(_BYTE *)v68 = *(_BYTE *)v69;
          v125 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v126 = (char *)v68 + v125;
          v127 = (char *)v69 + v125;
          v128 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(v126, v127, v128);
          v119 = v68;
          v120 = v75;
          v121 = 9;
LABEL_210:
          swift_storeEnumTagMultiPayload(v119, v120, v121);
          break;
        default:
          memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
          break;
      }
      v392 = (int *)type metadata accessor for TTRReminderCellTitleViewModel(0, v129);
      *((_BYTE *)v68 + v392[5]) = *((_BYTE *)v69 + v392[5]);
      v393 = v392[6];
      v394 = *(void **)((char *)v69 + v393);
      *(void **)((char *)v68 + v393) = v394;
      v395 = v392[7];
      v396 = *(void **)((char *)v69 + v395);
      *(void **)((char *)v68 + v395) = v396;
      *((_BYTE *)v68 + v392[8]) = *((_BYTE *)v69 + v392[8]);
      v397 = v392[9];
      v398 = (char *)v68 + v397;
      v399 = (char *)v69 + v397;
      v400 = v399[8];
      *(_QWORD *)v398 = *(_QWORD *)v399;
      v398[8] = v400;
      v401 = v392[10];
      v402 = *(void **)((char *)v69 + v401);
      *(void **)((char *)v68 + v401) = v402;
      v403 = v392[11];
      v404 = *(void **)((char *)v69 + v403);
      *(void **)((char *)v68 + v403) = v404;
      *(void **)((char *)v68 + *(int *)(v70 + 48)) = *(void **)((char *)v69 + *(int *)(v70 + 48));
      v405 = *(void (**)(void **, _QWORD, uint64_t, uint64_t))(v71 + 56);
      v406 = v394;
      v407 = v396;
      swift_bridgeObjectRetain(v402);
      v408 = v404;
      v405(v68, 0, 1, v70);
      goto LABEL_247;
    }
LABEL_50:
    v82 = sub_10002A750(&qword_10064CBB0);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    goto LABEL_247;
  }
  if (v73)
  {
    sub_1000073A0((uint64_t)v68, &qword_10064CBB8);
    goto LABEL_50;
  }
  if (a1 != a2)
  {
    sub_10004941C((uint64_t)v68);
    v83 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v69, v83))
    {
      case 0u:
        v84 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v1510 = v83;
        switch(swift_getEnumCaseMultiPayload(v69, v84))
        {
          case 1u:
            v85 = *v69;
            *v68 = *v69;
            v86 = v85;
            v87 = v68;
            v88 = v84;
            v89 = 1;
            goto LABEL_153;
          case 2u:
            v297 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v297 - 8) + 16))(v68, v69, v297);
            v87 = v68;
            v88 = v84;
            v89 = 2;
            goto LABEL_153;
          case 3u:
            v298 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v298 - 8) + 16))(v68, v69, v298);
            v87 = v68;
            v88 = v84;
            v89 = 3;
            goto LABEL_153;
          case 4u:
            v299 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v299 - 8) + 16))(v68, v69, v299);
            v87 = v68;
            v88 = v84;
            v89 = 4;
            goto LABEL_153;
          case 5u:
            v300 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v300 - 8) + 16))(v68, v69, v300);
            v87 = v68;
            v88 = v84;
            v89 = 5;
            goto LABEL_153;
          case 6u:
            v301 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v301 - 8) + 16))(v68, v69, v301);
            v87 = v68;
            v88 = v84;
            v89 = 6;
            goto LABEL_153;
          case 8u:
            v302 = *v69;
            *v68 = *v69;
            v303 = v302;
            v87 = v68;
            v88 = v84;
            v89 = 8;
            goto LABEL_153;
          case 9u:
            v304 = *v69;
            *v68 = *v69;
            v305 = v304;
            v87 = v68;
            v88 = v84;
            v89 = 9;
LABEL_153:
            swift_storeEnumTagMultiPayload(v87, v88, v89);
            break;
          default:
            memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
            break;
        }
        v306 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v307 = v306[5];
        v308 = (char *)v68 + v307;
        v309 = (char *)v69 + v307;
        if (*(void **)((char *)v69 + v307 + 8))
        {
          v1339 = v306;
          *(_QWORD *)v308 = *(_QWORD *)v309;
          v310 = *((_QWORD *)v309 + 1);
          *((_QWORD *)v308 + 1) = v310;
          v311 = (void *)*((_QWORD *)v309 + 2);
          v1316 = *((_QWORD *)v309 + 3);
          v312 = *((_QWORD *)v309 + 4);
          v1438 = *((_QWORD *)v309 + 6);
          __dstx = (void *)*((_QWORD *)v309 + 5);
          v1396 = (void *)*((_QWORD *)v309 + 7);
          v1361 = v309[64];
          swift_bridgeObjectRetain(v310);
          sub_10003E1F0(v311, v1316, v312, (uint64_t)__dstx, v1438, (uint64_t)v1396, v1361);
          *((_QWORD *)v308 + 2) = v311;
          *((_QWORD *)v308 + 3) = v1316;
          *((_QWORD *)v308 + 4) = v312;
          *((_QWORD *)v308 + 5) = __dstx;
          *((_QWORD *)v308 + 6) = v1438;
          *((_QWORD *)v308 + 7) = v1396;
          v308[64] = v1361;
          v308[65] = v309[65];
          v308[66] = v309[66];
          v308[67] = v309[67];
          v308[68] = v309[68];
          v313 = v309[120];
          if (v313 == 255)
          {
            v314 = *(_OWORD *)(v309 + 72);
            v315 = *(_OWORD *)(v309 + 88);
            v316 = *(_OWORD *)(v309 + 104);
            v308[120] = v309[120];
            *(_OWORD *)(v308 + 88) = v315;
            *(_OWORD *)(v308 + 104) = v316;
            *(_OWORD *)(v308 + 72) = v314;
          }
          else
          {
            __dsty = v313 & 1;
            v324 = (void *)*((_QWORD *)v309 + 9);
            v323 = *((_QWORD *)v309 + 10);
            v1397 = (void *)*((_QWORD *)v309 + 12);
            v1439 = *((_QWORD *)v309 + 11);
            v1362 = (void *)*((_QWORD *)v309 + 13);
            v1317 = *((_QWORD *)v309 + 14);
            sub_10002B764(v324, v323, v1439, (uint64_t)v1397, (uint64_t)v1362, v1317, v313 & 1);
            *((_QWORD *)v308 + 9) = v324;
            *((_QWORD *)v308 + 10) = v323;
            *((_QWORD *)v308 + 11) = v1439;
            *((_QWORD *)v308 + 12) = v1397;
            *((_QWORD *)v308 + 13) = v1362;
            *((_QWORD *)v308 + 14) = v1317;
            v308[120] = __dsty;
          }
          v308[121] = v309[121];
          v306 = v1339;
        }
        else
        {
          v317 = *(_OWORD *)v309;
          v318 = *((_OWORD *)v309 + 1);
          v319 = *((_OWORD *)v309 + 3);
          *((_OWORD *)v308 + 2) = *((_OWORD *)v309 + 2);
          *((_OWORD *)v308 + 3) = v319;
          *(_OWORD *)v308 = v317;
          *((_OWORD *)v308 + 1) = v318;
          v320 = *((_OWORD *)v309 + 4);
          v321 = *((_OWORD *)v309 + 5);
          v322 = *((_OWORD *)v309 + 6);
          *(_OWORD *)(v308 + 106) = *(_OWORD *)(v309 + 106);
          *((_OWORD *)v308 + 5) = v321;
          *((_OWORD *)v308 + 6) = v322;
          *((_OWORD *)v308 + 4) = v320;
        }
        *((_BYTE *)v68 + v306[6]) = *((_BYTE *)v69 + v306[6]);
        *((_BYTE *)v68 + v306[7]) = *((_BYTE *)v69 + v306[7]);
        *((_BYTE *)v68 + v306[8]) = *((_BYTE *)v69 + v306[8]);
        *((_BYTE *)v68 + v306[9]) = *((_BYTE *)v69 + v306[9]);
        *((_BYTE *)v68 + v306[10]) = *((_BYTE *)v69 + v306[10]);
        v325 = v306[11];
        v326 = *(void **)((char *)v69 + v325);
        *(void **)((char *)v68 + v325) = v326;
        v327 = v326;
        v164 = v68;
        v165 = v1510;
        v166 = 0;
        goto LABEL_245;
      case 1u:
        v135 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v1515 = v83;
        switch(swift_getEnumCaseMultiPayload(v69, v135))
        {
          case 1u:
            v136 = *v69;
            *v68 = *v69;
            v137 = v136;
            v138 = v68;
            v139 = v135;
            v140 = 1;
            goto LABEL_169;
          case 2u:
            v328 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v328 - 8) + 16))(v68, v69, v328);
            v138 = v68;
            v139 = v135;
            v140 = 2;
            goto LABEL_169;
          case 3u:
            v329 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v329 - 8) + 16))(v68, v69, v329);
            v138 = v68;
            v139 = v135;
            v140 = 3;
            goto LABEL_169;
          case 4u:
            v330 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v330 - 8) + 16))(v68, v69, v330);
            v138 = v68;
            v139 = v135;
            v140 = 4;
            goto LABEL_169;
          case 5u:
            v331 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v331 - 8) + 16))(v68, v69, v331);
            v138 = v68;
            v139 = v135;
            v140 = 5;
            goto LABEL_169;
          case 6u:
            v332 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v332 - 8) + 16))(v68, v69, v332);
            v138 = v68;
            v139 = v135;
            v140 = 6;
            goto LABEL_169;
          case 8u:
            v333 = *v69;
            *v68 = *v69;
            v334 = v333;
            v138 = v68;
            v139 = v135;
            v140 = 8;
            goto LABEL_169;
          case 9u:
            v335 = *v69;
            *v68 = *v69;
            v336 = v335;
            v138 = v68;
            v139 = v135;
            v140 = 9;
LABEL_169:
            swift_storeEnumTagMultiPayload(v138, v139, v140);
            break;
          default:
            memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
            break;
        }
        v337 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v338 = v337[5];
        v339 = (char *)v68 + v338;
        v340 = (char *)v69 + v338;
        if (*(void **)((char *)v69 + v338 + 8))
        {
          v1340 = v337;
          *(_QWORD *)v339 = *(_QWORD *)v340;
          v341 = *((_QWORD *)v340 + 1);
          *((_QWORD *)v339 + 1) = v341;
          v342 = (void *)*((_QWORD *)v340 + 2);
          v1318 = *((_QWORD *)v340 + 3);
          v343 = *((_QWORD *)v340 + 4);
          v1440 = *((_QWORD *)v340 + 6);
          __dstz = (void *)*((_QWORD *)v340 + 5);
          v1398 = (void *)*((_QWORD *)v340 + 7);
          v1363 = v340[64];
          swift_bridgeObjectRetain(v341);
          sub_10003E1F0(v342, v1318, v343, (uint64_t)__dstz, v1440, (uint64_t)v1398, v1363);
          *((_QWORD *)v339 + 2) = v342;
          *((_QWORD *)v339 + 3) = v1318;
          *((_QWORD *)v339 + 4) = v343;
          *((_QWORD *)v339 + 5) = __dstz;
          *((_QWORD *)v339 + 6) = v1440;
          *((_QWORD *)v339 + 7) = v1398;
          v339[64] = v1363;
          v339[65] = v340[65];
          v339[66] = v340[66];
          v339[67] = v340[67];
          v339[68] = v340[68];
          v344 = v340[120];
          if (v344 == 255)
          {
            v345 = *(_OWORD *)(v340 + 72);
            v346 = *(_OWORD *)(v340 + 88);
            v347 = *(_OWORD *)(v340 + 104);
            v339[120] = v340[120];
            *(_OWORD *)(v339 + 88) = v346;
            *(_OWORD *)(v339 + 104) = v347;
            *(_OWORD *)(v339 + 72) = v345;
          }
          else
          {
            __dstba = v344 & 1;
            v355 = (void *)*((_QWORD *)v340 + 9);
            v354 = *((_QWORD *)v340 + 10);
            v1399 = (void *)*((_QWORD *)v340 + 12);
            v1441 = *((_QWORD *)v340 + 11);
            v1364 = (void *)*((_QWORD *)v340 + 13);
            v1319 = *((_QWORD *)v340 + 14);
            sub_10002B764(v355, v354, v1441, (uint64_t)v1399, (uint64_t)v1364, v1319, v344 & 1);
            *((_QWORD *)v339 + 9) = v355;
            *((_QWORD *)v339 + 10) = v354;
            *((_QWORD *)v339 + 11) = v1441;
            *((_QWORD *)v339 + 12) = v1399;
            *((_QWORD *)v339 + 13) = v1364;
            *((_QWORD *)v339 + 14) = v1319;
            v339[120] = __dstba;
          }
          v339[121] = v340[121];
          v337 = v1340;
        }
        else
        {
          v348 = *(_OWORD *)v340;
          v349 = *((_OWORD *)v340 + 1);
          v350 = *((_OWORD *)v340 + 3);
          *((_OWORD *)v339 + 2) = *((_OWORD *)v340 + 2);
          *((_OWORD *)v339 + 3) = v350;
          *(_OWORD *)v339 = v348;
          *((_OWORD *)v339 + 1) = v349;
          v351 = *((_OWORD *)v340 + 4);
          v352 = *((_OWORD *)v340 + 5);
          v353 = *((_OWORD *)v340 + 6);
          *(_OWORD *)(v339 + 106) = *(_OWORD *)(v340 + 106);
          *((_OWORD *)v339 + 5) = v352;
          *((_OWORD *)v339 + 6) = v353;
          *((_OWORD *)v339 + 4) = v351;
        }
        *((_BYTE *)v68 + v337[6]) = *((_BYTE *)v69 + v337[6]);
        *((_BYTE *)v68 + v337[7]) = *((_BYTE *)v69 + v337[7]);
        *((_BYTE *)v68 + v337[8]) = *((_BYTE *)v69 + v337[8]);
        *((_BYTE *)v68 + v337[9]) = *((_BYTE *)v69 + v337[9]);
        *((_BYTE *)v68 + v337[10]) = *((_BYTE *)v69 + v337[10]);
        v356 = v337[11];
        v357 = *(void **)((char *)v69 + v356);
        *(void **)((char *)v68 + v356) = v357;
        v358 = v357;
        v164 = v68;
        v165 = v1515;
        v166 = 1;
        goto LABEL_245;
      case 2u:
        v1516 = v83;
        v141 = *v69;
        *v68 = *v69;
        v142 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v1429 = (void **)((char *)v69 + v142);
        __dstc = (void **)((char *)v68 + v142);
        v143 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v144 = *(_QWORD *)(v143 - 8);
        v145 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v144 + 48);
        v146 = v141;
        if (v145(v1429, 1, v143))
        {
          v147 = sub_10002A750(&qword_100644980);
          memcpy(__dstc, v1429, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v1429, v143))
          {
            case 1u:
              v210 = *v1429;
              *__dstc = *v1429;
              v211 = v210;
              v212 = __dstc;
              v213 = v143;
              v214 = 1;
              goto LABEL_220;
            case 2u:
              v409 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v409 - 8) + 16))(__dstc, v1429, v409);
              v212 = __dstc;
              v213 = v143;
              v214 = 2;
              goto LABEL_220;
            case 3u:
              v410 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v410 - 8) + 16))(__dstc, v1429, v410);
              v212 = __dstc;
              v213 = v143;
              v214 = 3;
              goto LABEL_220;
            case 4u:
              v411 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v411 - 8) + 16))(__dstc, v1429, v411);
              v212 = __dstc;
              v213 = v143;
              v214 = 4;
              goto LABEL_220;
            case 5u:
              v412 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v412 - 8) + 16))(__dstc, v1429, v412);
              v212 = __dstc;
              v213 = v143;
              v214 = 5;
              goto LABEL_220;
            case 6u:
              v413 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v413 - 8) + 16))(__dstc, v1429, v413);
              v212 = __dstc;
              v213 = v143;
              v214 = 6;
              goto LABEL_220;
            case 8u:
              v414 = *v1429;
              *__dstc = *v1429;
              v415 = v414;
              v212 = __dstc;
              v213 = v143;
              v214 = 8;
              goto LABEL_220;
            case 9u:
              v416 = *v1429;
              *__dstc = *v1429;
              v417 = v416;
              v212 = __dstc;
              v213 = v143;
              v214 = 9;
LABEL_220:
              swift_storeEnumTagMultiPayload(v212, v213, v214);
              break;
            default:
              memcpy(__dstc, v1429, *(_QWORD *)(v144 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v144 + 56))(__dstc, 0, 1, v143);
        }
        v164 = v68;
        v165 = v1516;
        v166 = 2;
        goto LABEL_245;
      case 3u:
        v1517 = v83;
        v148 = *v69;
        *v68 = *v69;
        v149 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v1430 = (void **)((char *)v69 + v149);
        __dstd = (void **)((char *)v68 + v149);
        v150 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v151 = *(_QWORD *)(v150 - 8);
        v152 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v151 + 48);
        v153 = v148;
        if (v152(v1430, 1, v150))
        {
          v154 = sub_10002A750(&qword_100644980);
          memcpy(__dstd, v1430, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v1430, v150))
          {
            case 1u:
              v215 = *v1430;
              *__dstd = *v1430;
              v216 = v215;
              v217 = __dstd;
              v218 = v150;
              v219 = 1;
              goto LABEL_231;
            case 2u:
              v418 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v418 - 8) + 16))(__dstd, v1430, v418);
              v217 = __dstd;
              v218 = v150;
              v219 = 2;
              goto LABEL_231;
            case 3u:
              v419 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v419 - 8) + 16))(__dstd, v1430, v419);
              v217 = __dstd;
              v218 = v150;
              v219 = 3;
              goto LABEL_231;
            case 4u:
              v420 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v420 - 8) + 16))(__dstd, v1430, v420);
              v217 = __dstd;
              v218 = v150;
              v219 = 4;
              goto LABEL_231;
            case 5u:
              v421 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v421 - 8) + 16))(__dstd, v1430, v421);
              v217 = __dstd;
              v218 = v150;
              v219 = 5;
              goto LABEL_231;
            case 6u:
              v422 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v422 - 8) + 16))(__dstd, v1430, v422);
              v217 = __dstd;
              v218 = v150;
              v219 = 6;
              goto LABEL_231;
            case 8u:
              v423 = *v1430;
              *__dstd = *v1430;
              v424 = v423;
              v217 = __dstd;
              v218 = v150;
              v219 = 8;
              goto LABEL_231;
            case 9u:
              v425 = *v1430;
              *__dstd = *v1430;
              v426 = v425;
              v217 = __dstd;
              v218 = v150;
              v219 = 9;
LABEL_231:
              swift_storeEnumTagMultiPayload(v217, v218, v219);
              break;
            default:
              memcpy(__dstd, v1430, *(_QWORD *)(v151 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v151 + 56))(__dstd, 0, 1, v150);
        }
        v164 = v68;
        v165 = v1517;
        v166 = 3;
        goto LABEL_245;
      case 4u:
        v1518 = v83;
        v155 = *v69;
        *v68 = *v69;
        v156 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v1431 = (void **)((char *)v69 + v156);
        __dste = (void **)((char *)v68 + v156);
        v157 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v158 = *(_QWORD *)(v157 - 8);
        v159 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v158 + 48);
        v160 = v155;
        if (v159(v1431, 1, v157))
        {
          v161 = sub_10002A750(&qword_100644980);
          memcpy(__dste, v1431, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v1431, v157))
          {
            case 1u:
              v220 = *v1431;
              *__dste = *v1431;
              v221 = v220;
              v222 = __dste;
              v223 = v157;
              v224 = 1;
              goto LABEL_242;
            case 2u:
              v427 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v427 - 8) + 16))(__dste, v1431, v427);
              v222 = __dste;
              v223 = v157;
              v224 = 2;
              goto LABEL_242;
            case 3u:
              v428 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v428 - 8) + 16))(__dste, v1431, v428);
              v222 = __dste;
              v223 = v157;
              v224 = 3;
              goto LABEL_242;
            case 4u:
              v429 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v429 - 8) + 16))(__dste, v1431, v429);
              v222 = __dste;
              v223 = v157;
              v224 = 4;
              goto LABEL_242;
            case 5u:
              v430 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v430 - 8) + 16))(__dste, v1431, v430);
              v222 = __dste;
              v223 = v157;
              v224 = 5;
              goto LABEL_242;
            case 6u:
              v431 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v431 - 8) + 16))(__dste, v1431, v431);
              v222 = __dste;
              v223 = v157;
              v224 = 6;
              goto LABEL_242;
            case 8u:
              v432 = *v1431;
              *__dste = *v1431;
              v433 = v432;
              v222 = __dste;
              v223 = v157;
              v224 = 8;
              goto LABEL_242;
            case 9u:
              v434 = *v1431;
              *__dste = *v1431;
              v435 = v434;
              v222 = __dste;
              v223 = v157;
              v224 = 9;
LABEL_242:
              swift_storeEnumTagMultiPayload(v222, v223, v224);
              break;
            default:
              memcpy(__dste, v1431, *(_QWORD *)(v158 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v158 + 56))(__dste, 0, 1, v157);
        }
        v164 = v68;
        v165 = v1518;
        v166 = 4;
        goto LABEL_245;
      case 5u:
        *v68 = *v69;
        *((_BYTE *)v68 + 8) = *((_BYTE *)v69 + 8);
        *((_BYTE *)v68 + 9) = *((_BYTE *)v69 + 9);
        *((_BYTE *)v68 + 10) = *((_BYTE *)v69 + 10);
        v162 = v69[2];
        v68[2] = v162;
        v163 = v162;
        v164 = v68;
        v165 = v83;
        v166 = 5;
        goto LABEL_245;
      case 6u:
        v203 = *v69;
        *v68 = *v69;
        v204 = v203;
        v164 = v68;
        v165 = v83;
        v166 = 6;
        goto LABEL_245;
      case 7u:
        v167 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v168 = *(_QWORD *)(v167 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v168 + 48))(v69, 1, v167))
        {
          v169 = sub_10002A750(&qword_100644600);
          memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
        }
        else
        {
          v225 = *v69;
          *v68 = *v69;
          v226 = *(int *)(v167 + 20);
          v1433 = (char *)v69 + v226;
          __dsts = (char *)v68 + v226;
          v1520 = v83;
          v227 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v1391 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v227 - 8) + 16);
          v228 = swift_bridgeObjectRetain(v225);
          v229 = v227;
          v83 = v1520;
          v1391(__dsts, v1433, v229, v228);
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v168 + 56))(v68, 0, 1, v167);
        }
        v230 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v231 = (void **)((char *)v68 + v230);
        v232 = (void **)((char *)v69 + v230);
        if (v232[1])
        {
          *v231 = *v232;
          v233 = v232[1];
          v231[1] = v233;
          v234 = (void *)v232[2];
          v231[2] = v234;
          swift_bridgeObjectRetain(v233);
          v235 = v234;
        }
        else
        {
          v236 = *(_OWORD *)v232;
          v231[2] = v232[2];
          *(_OWORD *)v231 = v236;
        }
        v164 = v68;
        v165 = v83;
        v166 = 7;
        goto LABEL_245;
      case 8u:
        v205 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v206 = *(_QWORD *)(v205 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v206 + 48))(v69, 1, v205))
        {
          v207 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v207 - 8) + 64));
        }
        else
        {
          v237 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v237 - 8) + 16))(v68, v69, v237);
          *((_BYTE *)v68 + *(int *)(v205 + 20)) = *((_BYTE *)v69 + *(int *)(v205 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v206 + 56))(v68, 0, 1, v205);
        }
        v238 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)v68 + *(int *)(v238 + 20)) = *(void **)((char *)v69 + *(int *)(v238 + 20));
        v164 = v68;
        v165 = v83;
        v166 = 8;
        goto LABEL_245;
      case 9u:
        *(_BYTE *)v68 = *(_BYTE *)v69;
        v170 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v171 = (char *)v68 + v170;
        v172 = (char *)v69 + v170;
        v173 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v171, v172, v173);
        v164 = v68;
        v165 = v83;
        v166 = 9;
LABEL_245:
        swift_storeEnumTagMultiPayload(v164, v165, v166);
        break;
      default:
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        break;
    }
  }
  v436 = (int *)type metadata accessor for TTRReminderCellTitleViewModel(0, v74);
  *((_BYTE *)v68 + v436[5]) = *((_BYTE *)v69 + v436[5]);
  v437 = v436[6];
  v438 = *(void **)((char *)v69 + v437);
  v439 = *(void **)((char *)v68 + v437);
  *(void **)((char *)v68 + v437) = v438;
  v440 = v438;

  v441 = v436[7];
  v442 = *(void **)((char *)v68 + v441);
  v443 = *(void **)((char *)v69 + v441);
  *(void **)((char *)v68 + v441) = v443;
  v444 = v443;

  *((_BYTE *)v68 + v436[8]) = *((_BYTE *)v69 + v436[8]);
  v445 = v436[9];
  v446 = (char *)v68 + v445;
  v447 = (char *)v69 + v445;
  v448 = v447[8];
  *(_QWORD *)v446 = *(_QWORD *)v447;
  v446[8] = v448;
  v449 = v436[10];
  v450 = *(void **)((char *)v69 + v449);
  v451 = *(uint64_t *)((char *)v68 + v449);
  *(void **)((char *)v68 + v449) = v450;
  swift_bridgeObjectRetain(v450);
  swift_bridgeObjectRelease(v451);
  v452 = v436[11];
  v453 = *(void **)((char *)v69 + v452);
  v454 = *(void **)((char *)v68 + v452);
  *(void **)((char *)v68 + v452) = v453;
  v455 = v453;

  *(void **)((char *)v68 + *(int *)(v70 + 48)) = *(void **)((char *)v69 + *(int *)(v70 + 48));
LABEL_247:
  v456 = a3[18];
  v457 = a1 + v456;
  v458 = a2 + v456;
  *(_BYTE *)v457 = *(_BYTE *)(a2 + v456);
  v459 = *(_QWORD *)(a2 + v456 + 8);
  v460 = *(_QWORD *)(a2 + v456 + 16);
  v461 = *(_QWORD *)(a1 + v456 + 8);
  *(_QWORD *)(v457 + 8) = v459;
  swift_unknownObjectRetain(v459);
  swift_unknownObjectRelease(v461);
  *(_QWORD *)(v457 + 16) = v460;
  v462 = *(int *)(sub_10002A750(&qword_10064CB60) + 40);
  v463 = (void **)(v457 + v462);
  v464 = (void **)(v458 + v462);
  v465 = sub_10002A750(&qword_10064CBA0);
  v466 = *(_QWORD *)(v465 - 8);
  v467 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v466 + 48);
  LODWORD(v460) = v467(v463, 1, v465);
  v468 = v467(v464, 1, v465);
  if ((_DWORD)v460)
  {
    if (!v468)
    {
      v470 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(v464, v470))
      {
        case 0u:
          v471 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v1521 = v470;
          switch(swift_getEnumCaseMultiPayload(v464, v471))
          {
            case 1u:
              v472 = *v464;
              *v463 = *v464;
              v473 = v472;
              v474 = v463;
              v475 = v471;
              v476 = 1;
              goto LABEL_325;
            case 2u:
              v634 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v634 - 8) + 16))(v463, v464, v634);
              v474 = v463;
              v475 = v471;
              v476 = 2;
              goto LABEL_325;
            case 3u:
              v635 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v635 - 8) + 16))(v463, v464, v635);
              v474 = v463;
              v475 = v471;
              v476 = 3;
              goto LABEL_325;
            case 4u:
              v636 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v636 - 8) + 16))(v463, v464, v636);
              v474 = v463;
              v475 = v471;
              v476 = 4;
              goto LABEL_325;
            case 5u:
              v637 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v637 - 8) + 16))(v463, v464, v637);
              v474 = v463;
              v475 = v471;
              v476 = 5;
              goto LABEL_325;
            case 6u:
              v638 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v638 - 8) + 16))(v463, v464, v638);
              v474 = v463;
              v475 = v471;
              v476 = 6;
              goto LABEL_325;
            case 8u:
              v639 = *v464;
              *v463 = *v464;
              v640 = v639;
              v474 = v463;
              v475 = v471;
              v476 = 8;
              goto LABEL_325;
            case 9u:
              v641 = *v464;
              *v463 = *v464;
              v642 = v641;
              v474 = v463;
              v475 = v471;
              v476 = 9;
LABEL_325:
              swift_storeEnumTagMultiPayload(v474, v475, v476);
              break;
            default:
              memcpy(v463, v464, *(_QWORD *)(*(_QWORD *)(v471 - 8) + 64));
              break;
          }
          v643 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v644 = v643[5];
          v645 = (char *)v463 + v644;
          v646 = (char *)v464 + v644;
          if (*(void **)((char *)v464 + v644 + 8))
          {
            v1304 = v643;
            *(_QWORD *)v645 = *(_QWORD *)v646;
            v647 = *((_QWORD *)v646 + 1);
            *((_QWORD *)v645 + 1) = v647;
            v648 = (void *)*((_QWORD *)v646 + 2);
            v1450 = *((_QWORD *)v646 + 4);
            __dstbd = (void *)*((_QWORD *)v646 + 3);
            v1366 = (void *)*((_QWORD *)v646 + 6);
            v1405 = (void *)*((_QWORD *)v646 + 5);
            v1341 = *((_QWORD *)v646 + 7);
            v1320 = v646[64];
            swift_bridgeObjectRetain(v647);
            sub_10003E1F0(v648, (uint64_t)__dstbd, v1450, (uint64_t)v1405, (uint64_t)v1366, v1341, v1320);
            *((_QWORD *)v645 + 2) = v648;
            *((_QWORD *)v645 + 3) = __dstbd;
            *((_QWORD *)v645 + 4) = v1450;
            *((_QWORD *)v645 + 5) = v1405;
            *((_QWORD *)v645 + 6) = v1366;
            *((_QWORD *)v645 + 7) = v1341;
            v645[64] = v1320;
            v645[65] = v646[65];
            v645[66] = v646[66];
            v645[67] = v646[67];
            v645[68] = v646[68];
            v649 = v646[120];
            if (v649 == 255)
            {
              v650 = *(_OWORD *)(v646 + 72);
              v651 = *(_OWORD *)(v646 + 88);
              v652 = *(_OWORD *)(v646 + 104);
              v645[120] = v646[120];
              *(_OWORD *)(v645 + 88) = v651;
              *(_OWORD *)(v645 + 104) = v652;
              *(_OWORD *)(v645 + 72) = v650;
            }
            else
            {
              __dstbe = v649 & 1;
              v659 = (void *)*((_QWORD *)v646 + 9);
              v1406 = (void *)*((_QWORD *)v646 + 11);
              v1451 = *((_QWORD *)v646 + 10);
              v1342 = *((_QWORD *)v646 + 13);
              v1367 = (void *)*((_QWORD *)v646 + 12);
              v1321 = *((_QWORD *)v646 + 14);
              sub_10002B764(v659, v1451, (uint64_t)v1406, (uint64_t)v1367, v1342, v1321, v649 & 1);
              *((_QWORD *)v645 + 9) = v659;
              *((_QWORD *)v645 + 10) = v1451;
              *((_QWORD *)v645 + 11) = v1406;
              *((_QWORD *)v645 + 12) = v1367;
              *((_QWORD *)v645 + 13) = v1342;
              *((_QWORD *)v645 + 14) = v1321;
              v645[120] = __dstbe;
            }
            v645[121] = v646[121];
            v643 = v1304;
          }
          else
          {
            v653 = *(_OWORD *)v646;
            v654 = *((_OWORD *)v646 + 1);
            v655 = *((_OWORD *)v646 + 3);
            *((_OWORD *)v645 + 2) = *((_OWORD *)v646 + 2);
            *((_OWORD *)v645 + 3) = v655;
            *(_OWORD *)v645 = v653;
            *((_OWORD *)v645 + 1) = v654;
            v656 = *((_OWORD *)v646 + 4);
            v657 = *((_OWORD *)v646 + 5);
            v658 = *((_OWORD *)v646 + 6);
            *(_OWORD *)(v645 + 106) = *(_OWORD *)(v646 + 106);
            *((_OWORD *)v645 + 5) = v657;
            *((_OWORD *)v645 + 6) = v658;
            *((_OWORD *)v645 + 4) = v656;
          }
          *((_BYTE *)v463 + v643[6]) = *((_BYTE *)v464 + v643[6]);
          *((_BYTE *)v463 + v643[7]) = *((_BYTE *)v464 + v643[7]);
          *((_BYTE *)v463 + v643[8]) = *((_BYTE *)v464 + v643[8]);
          *((_BYTE *)v463 + v643[9]) = *((_BYTE *)v464 + v643[9]);
          *((_BYTE *)v463 + v643[10]) = *((_BYTE *)v464 + v643[10]);
          v660 = v643[11];
          v661 = *(void **)((char *)v464 + v660);
          *(void **)((char *)v463 + v660) = v661;
          v662 = v661;
          v514 = v463;
          v515 = v1521;
          v516 = 0;
          goto LABEL_414;
        case 1u:
          v485 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v1523 = v470;
          switch(swift_getEnumCaseMultiPayload(v464, v485))
          {
            case 1u:
              v486 = *v464;
              *v463 = *v464;
              v487 = v486;
              v488 = v463;
              v489 = v485;
              v490 = 1;
              goto LABEL_341;
            case 2u:
              v663 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v663 - 8) + 16))(v463, v464, v663);
              v488 = v463;
              v489 = v485;
              v490 = 2;
              goto LABEL_341;
            case 3u:
              v664 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v664 - 8) + 16))(v463, v464, v664);
              v488 = v463;
              v489 = v485;
              v490 = 3;
              goto LABEL_341;
            case 4u:
              v665 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v665 - 8) + 16))(v463, v464, v665);
              v488 = v463;
              v489 = v485;
              v490 = 4;
              goto LABEL_341;
            case 5u:
              v666 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v666 - 8) + 16))(v463, v464, v666);
              v488 = v463;
              v489 = v485;
              v490 = 5;
              goto LABEL_341;
            case 6u:
              v667 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v667 - 8) + 16))(v463, v464, v667);
              v488 = v463;
              v489 = v485;
              v490 = 6;
              goto LABEL_341;
            case 8u:
              v668 = *v464;
              *v463 = *v464;
              v669 = v668;
              v488 = v463;
              v489 = v485;
              v490 = 8;
              goto LABEL_341;
            case 9u:
              v670 = *v464;
              *v463 = *v464;
              v671 = v670;
              v488 = v463;
              v489 = v485;
              v490 = 9;
LABEL_341:
              swift_storeEnumTagMultiPayload(v488, v489, v490);
              break;
            default:
              memcpy(v463, v464, *(_QWORD *)(*(_QWORD *)(v485 - 8) + 64));
              break;
          }
          v672 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v673 = v672[5];
          v674 = (char *)v463 + v673;
          v675 = (char *)v464 + v673;
          if (*(void **)((char *)v464 + v673 + 8))
          {
            v1305 = v672;
            *(_QWORD *)v674 = *(_QWORD *)v675;
            v676 = *((_QWORD *)v675 + 1);
            *((_QWORD *)v674 + 1) = v676;
            v677 = (void *)*((_QWORD *)v675 + 2);
            v1452 = *((_QWORD *)v675 + 4);
            __dstbf = (void *)*((_QWORD *)v675 + 3);
            v1368 = (void *)*((_QWORD *)v675 + 6);
            v1407 = (void *)*((_QWORD *)v675 + 5);
            v1343 = *((_QWORD *)v675 + 7);
            v1322 = v675[64];
            swift_bridgeObjectRetain(v676);
            sub_10003E1F0(v677, (uint64_t)__dstbf, v1452, (uint64_t)v1407, (uint64_t)v1368, v1343, v1322);
            *((_QWORD *)v674 + 2) = v677;
            *((_QWORD *)v674 + 3) = __dstbf;
            *((_QWORD *)v674 + 4) = v1452;
            *((_QWORD *)v674 + 5) = v1407;
            *((_QWORD *)v674 + 6) = v1368;
            *((_QWORD *)v674 + 7) = v1343;
            v674[64] = v1322;
            v674[65] = v675[65];
            v674[66] = v675[66];
            v674[67] = v675[67];
            v674[68] = v675[68];
            v678 = v675[120];
            if (v678 == 255)
            {
              v679 = *(_OWORD *)(v675 + 72);
              v680 = *(_OWORD *)(v675 + 88);
              v681 = *(_OWORD *)(v675 + 104);
              v674[120] = v675[120];
              *(_OWORD *)(v674 + 88) = v680;
              *(_OWORD *)(v674 + 104) = v681;
              *(_OWORD *)(v674 + 72) = v679;
            }
            else
            {
              __dstbg = v678 & 1;
              v688 = (void *)*((_QWORD *)v675 + 9);
              v1408 = (void *)*((_QWORD *)v675 + 11);
              v1453 = *((_QWORD *)v675 + 10);
              v1344 = *((_QWORD *)v675 + 13);
              v1369 = (void *)*((_QWORD *)v675 + 12);
              v1323 = *((_QWORD *)v675 + 14);
              sub_10002B764(v688, v1453, (uint64_t)v1408, (uint64_t)v1369, v1344, v1323, v678 & 1);
              *((_QWORD *)v674 + 9) = v688;
              *((_QWORD *)v674 + 10) = v1453;
              *((_QWORD *)v674 + 11) = v1408;
              *((_QWORD *)v674 + 12) = v1369;
              *((_QWORD *)v674 + 13) = v1344;
              *((_QWORD *)v674 + 14) = v1323;
              v674[120] = __dstbg;
            }
            v674[121] = v675[121];
            v672 = v1305;
          }
          else
          {
            v682 = *(_OWORD *)v675;
            v683 = *((_OWORD *)v675 + 1);
            v684 = *((_OWORD *)v675 + 3);
            *((_OWORD *)v674 + 2) = *((_OWORD *)v675 + 2);
            *((_OWORD *)v674 + 3) = v684;
            *(_OWORD *)v674 = v682;
            *((_OWORD *)v674 + 1) = v683;
            v685 = *((_OWORD *)v675 + 4);
            v686 = *((_OWORD *)v675 + 5);
            v687 = *((_OWORD *)v675 + 6);
            *(_OWORD *)(v674 + 106) = *(_OWORD *)(v675 + 106);
            *((_OWORD *)v674 + 5) = v686;
            *((_OWORD *)v674 + 6) = v687;
            *((_OWORD *)v674 + 4) = v685;
          }
          *((_BYTE *)v463 + v672[6]) = *((_BYTE *)v464 + v672[6]);
          *((_BYTE *)v463 + v672[7]) = *((_BYTE *)v464 + v672[7]);
          *((_BYTE *)v463 + v672[8]) = *((_BYTE *)v464 + v672[8]);
          *((_BYTE *)v463 + v672[9]) = *((_BYTE *)v464 + v672[9]);
          *((_BYTE *)v463 + v672[10]) = *((_BYTE *)v464 + v672[10]);
          v689 = v672[11];
          v690 = *(void **)((char *)v464 + v689);
          *(void **)((char *)v463 + v689) = v690;
          v691 = v690;
          v514 = v463;
          v515 = v1523;
          v516 = 1;
          goto LABEL_414;
        case 2u:
          v1524 = v470;
          v491 = *v464;
          *v463 = *v464;
          v492 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v1442 = (void **)((char *)v464 + v492);
          __dstf = (void **)((char *)v463 + v492);
          v493 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v494 = *(_QWORD *)(v493 - 8);
          v1400 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v494 + 48);
          v495 = v491;
          if (v1400(v1442, 1, v493))
          {
            v496 = sub_10002A750(&qword_100644980);
            memcpy(__dstf, v1442, *(_QWORD *)(*(_QWORD *)(v496 - 8) + 64));
            v497 = v1524;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v1442, v493))
            {
              case 1u:
                v569 = *v1442;
                v570 = __dstf;
                *__dstf = *v1442;
                v571 = v569;
                v572 = __dstf;
                v573 = v493;
                v574 = 1;
                goto LABEL_389;
              case 2u:
                v754 = type metadata accessor for Date(0);
                v570 = __dstf;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v754 - 8) + 16))(__dstf, v1442, v754);
                v572 = __dstf;
                v573 = v493;
                v574 = 2;
                goto LABEL_389;
              case 3u:
                v755 = type metadata accessor for Date(0);
                v570 = __dstf;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v755 - 8) + 16))(__dstf, v1442, v755);
                v572 = __dstf;
                v573 = v493;
                v574 = 3;
                goto LABEL_389;
              case 4u:
                v756 = type metadata accessor for Date(0);
                v570 = __dstf;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v756 - 8) + 16))(__dstf, v1442, v756);
                v572 = __dstf;
                v573 = v493;
                v574 = 4;
                goto LABEL_389;
              case 5u:
                v757 = type metadata accessor for Date(0);
                v570 = __dstf;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v757 - 8) + 16))(__dstf, v1442, v757);
                v572 = __dstf;
                v573 = v493;
                v574 = 5;
                goto LABEL_389;
              case 6u:
                v758 = type metadata accessor for Date(0);
                v570 = __dstf;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v758 - 8) + 16))(__dstf, v1442, v758);
                v572 = __dstf;
                v573 = v493;
                v574 = 6;
                goto LABEL_389;
              case 8u:
                v761 = *v1442;
                v570 = __dstf;
                *__dstf = *v1442;
                v762 = v761;
                v572 = __dstf;
                v573 = v493;
                v574 = 8;
                goto LABEL_389;
              case 9u:
                v763 = *v1442;
                v570 = __dstf;
                *__dstf = *v1442;
                v764 = v763;
                v572 = __dstf;
                v573 = v493;
                v574 = 9;
LABEL_389:
                swift_storeEnumTagMultiPayload(v572, v573, v574);
                v760 = v493;
                v497 = v1524;
                v759 = v494;
                break;
              default:
                v570 = __dstf;
                memcpy(__dstf, v1442, *(_QWORD *)(v494 + 64));
                v759 = v494;
                v760 = v493;
                v497 = v1524;
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v759 + 56))(v570, 0, 1, v760);
          }
          v514 = v463;
          v515 = v497;
          v516 = 2;
          goto LABEL_414;
        case 3u:
          v1525 = v470;
          v498 = *v464;
          *v463 = *v464;
          v499 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v1443 = (void **)((char *)v464 + v499);
          __dstg = (void **)((char *)v463 + v499);
          v500 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v501 = *(_QWORD *)(v500 - 8);
          v1401 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v501 + 48);
          v502 = v498;
          if (v1401(v1443, 1, v500))
          {
            v503 = sub_10002A750(&qword_100644980);
            memcpy(__dstg, v1443, *(_QWORD *)(*(_QWORD *)(v503 - 8) + 64));
            v504 = v1525;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v1443, v500))
            {
              case 1u:
                v575 = *v1443;
                v576 = __dstg;
                *__dstg = *v1443;
                v577 = v575;
                v578 = __dstg;
                v579 = v500;
                v580 = 1;
                goto LABEL_400;
              case 2u:
                v765 = type metadata accessor for Date(0);
                v576 = __dstg;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v765 - 8) + 16))(__dstg, v1443, v765);
                v578 = __dstg;
                v579 = v500;
                v580 = 2;
                goto LABEL_400;
              case 3u:
                v766 = type metadata accessor for Date(0);
                v576 = __dstg;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v766 - 8) + 16))(__dstg, v1443, v766);
                v578 = __dstg;
                v579 = v500;
                v580 = 3;
                goto LABEL_400;
              case 4u:
                v767 = type metadata accessor for Date(0);
                v576 = __dstg;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v767 - 8) + 16))(__dstg, v1443, v767);
                v578 = __dstg;
                v579 = v500;
                v580 = 4;
                goto LABEL_400;
              case 5u:
                v768 = type metadata accessor for Date(0);
                v576 = __dstg;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v768 - 8) + 16))(__dstg, v1443, v768);
                v578 = __dstg;
                v579 = v500;
                v580 = 5;
                goto LABEL_400;
              case 6u:
                v769 = type metadata accessor for Date(0);
                v576 = __dstg;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v769 - 8) + 16))(__dstg, v1443, v769);
                v578 = __dstg;
                v579 = v500;
                v580 = 6;
                goto LABEL_400;
              case 8u:
                v772 = *v1443;
                v576 = __dstg;
                *__dstg = *v1443;
                v773 = v772;
                v578 = __dstg;
                v579 = v500;
                v580 = 8;
                goto LABEL_400;
              case 9u:
                v774 = *v1443;
                v576 = __dstg;
                *__dstg = *v1443;
                v775 = v774;
                v578 = __dstg;
                v579 = v500;
                v580 = 9;
LABEL_400:
                swift_storeEnumTagMultiPayload(v578, v579, v580);
                v771 = v500;
                v504 = v1525;
                v770 = v501;
                break;
              default:
                v576 = __dstg;
                memcpy(__dstg, v1443, *(_QWORD *)(v501 + 64));
                v770 = v501;
                v771 = v500;
                v504 = v1525;
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v770 + 56))(v576, 0, 1, v771);
          }
          v514 = v463;
          v515 = v504;
          v516 = 3;
          goto LABEL_414;
        case 4u:
          v1526 = v470;
          v505 = *v464;
          *v463 = *v464;
          v506 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v1444 = (void **)((char *)v464 + v506);
          __dsth = (void **)((char *)v463 + v506);
          v507 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v508 = *(_QWORD *)(v507 - 8);
          v1402 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v508 + 48);
          v509 = v505;
          if (v1402(v1444, 1, v507))
          {
            v510 = sub_10002A750(&qword_100644980);
            memcpy(__dsth, v1444, *(_QWORD *)(*(_QWORD *)(v510 - 8) + 64));
            v511 = v1526;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v1444, v507))
            {
              case 1u:
                v581 = *v1444;
                v582 = __dsth;
                *__dsth = *v1444;
                v583 = v581;
                v584 = __dsth;
                v585 = v507;
                v586 = 1;
                goto LABEL_411;
              case 2u:
                v776 = type metadata accessor for Date(0);
                v582 = __dsth;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v776 - 8) + 16))(__dsth, v1444, v776);
                v584 = __dsth;
                v585 = v507;
                v586 = 2;
                goto LABEL_411;
              case 3u:
                v777 = type metadata accessor for Date(0);
                v582 = __dsth;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v777 - 8) + 16))(__dsth, v1444, v777);
                v584 = __dsth;
                v585 = v507;
                v586 = 3;
                goto LABEL_411;
              case 4u:
                v778 = type metadata accessor for Date(0);
                v582 = __dsth;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v778 - 8) + 16))(__dsth, v1444, v778);
                v584 = __dsth;
                v585 = v507;
                v586 = 4;
                goto LABEL_411;
              case 5u:
                v779 = type metadata accessor for Date(0);
                v582 = __dsth;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v779 - 8) + 16))(__dsth, v1444, v779);
                v584 = __dsth;
                v585 = v507;
                v586 = 5;
                goto LABEL_411;
              case 6u:
                v780 = type metadata accessor for Date(0);
                v582 = __dsth;
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v780 - 8) + 16))(__dsth, v1444, v780);
                v584 = __dsth;
                v585 = v507;
                v586 = 6;
                goto LABEL_411;
              case 8u:
                v783 = *v1444;
                v582 = __dsth;
                *__dsth = *v1444;
                v784 = v783;
                v584 = __dsth;
                v585 = v507;
                v586 = 8;
                goto LABEL_411;
              case 9u:
                v785 = *v1444;
                v582 = __dsth;
                *__dsth = *v1444;
                v786 = v785;
                v584 = __dsth;
                v585 = v507;
                v586 = 9;
LABEL_411:
                swift_storeEnumTagMultiPayload(v584, v585, v586);
                v782 = v507;
                v511 = v1526;
                v781 = v508;
                break;
              default:
                v582 = __dsth;
                memcpy(__dsth, v1444, *(_QWORD *)(v508 + 64));
                v781 = v508;
                v782 = v507;
                v511 = v1526;
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v781 + 56))(v582, 0, 1, v782);
          }
          v514 = v463;
          v515 = v511;
          v516 = 4;
          goto LABEL_414;
        case 5u:
          *v463 = *v464;
          *((_BYTE *)v463 + 8) = *((_BYTE *)v464 + 8);
          *((_BYTE *)v463 + 9) = *((_BYTE *)v464 + 9);
          *((_BYTE *)v463 + 10) = *((_BYTE *)v464 + 10);
          v512 = v464[2];
          v463[2] = v512;
          v513 = v512;
          v514 = v463;
          v515 = v470;
          v516 = 5;
          goto LABEL_414;
        case 6u:
          v525 = *v464;
          *v463 = *v464;
          v526 = v525;
          v514 = v463;
          v515 = v470;
          v516 = 6;
          goto LABEL_414;
        case 7u:
          v517 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v518 = *(_QWORD *)(v517 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v518 + 48))(v464, 1, v517))
          {
            v519 = sub_10002A750(&qword_100644600);
            memcpy(v463, v464, *(_QWORD *)(*(_QWORD *)(v519 - 8) + 64));
          }
          else
          {
            v1403 = *v464;
            *v463 = *v464;
            v587 = *(int *)(v517 + 20);
            v1448 = (char *)v464 + v587;
            __dstbb = (char *)v463 + v587;
            v1531 = v470;
            v588 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v1365 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v588 - 8) + 16);
            v589 = swift_bridgeObjectRetain(v1403);
            v590 = v588;
            v470 = v1531;
            v1365(__dstbb, v1448, v590, v589);
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v518 + 56))(v463, 0, 1, v517);
          }
          v591 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v592 = (void **)((char *)v463 + v591);
          v593 = (void **)((char *)v464 + v591);
          if (v593[1])
          {
            *v592 = *v593;
            v594 = v593[1];
            v592[1] = v594;
            v595 = (void *)v593[2];
            v592[2] = v595;
            swift_bridgeObjectRetain(v594);
            v596 = v595;
          }
          else
          {
            v597 = *(_OWORD *)v593;
            v592[2] = v593[2];
            *(_OWORD *)v592 = v597;
          }
          v514 = v463;
          v515 = v470;
          v516 = 7;
          goto LABEL_414;
        case 8u:
          v527 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v528 = *(_QWORD *)(v527 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v528 + 48))(v464, 1, v527))
          {
            v529 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(v463, v464, *(_QWORD *)(*(_QWORD *)(v529 - 8) + 64));
          }
          else
          {
            v603 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v603 - 8) + 16))(v463, v464, v603);
            *((_BYTE *)v463 + *(int *)(v527 + 20)) = *((_BYTE *)v464 + *(int *)(v527 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v528 + 56))(v463, 0, 1, v527);
          }
          v604 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)v463 + *(int *)(v604 + 20)) = *(void **)((char *)v464 + *(int *)(v604 + 20));
          v514 = v463;
          v515 = v470;
          v516 = 8;
          goto LABEL_414;
        case 9u:
          *(_BYTE *)v463 = *(_BYTE *)v464;
          v520 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v521 = (char *)v463 + v520;
          v522 = (char *)v464 + v520;
          v523 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v523 - 8) + 16))(v521, v522, v523);
          v514 = v463;
          v515 = v470;
          v516 = 9;
LABEL_414:
          swift_storeEnumTagMultiPayload(v514, v515, v516);
          break;
        default:
          memcpy(v463, v464, *(_QWORD *)(*(_QWORD *)(v470 - 8) + 64));
          break;
      }
      v787 = (int *)type metadata accessor for TTRIReminderCellNotesViewModel(0, v524);
      *((_BYTE *)v463 + v787[5]) = *((_BYTE *)v464 + v787[5]);
      v788 = v787[6];
      v789 = *(void **)((char *)v464 + v788);
      *(void **)((char *)v463 + v788) = v789;
      v790 = v787[7];
      v791 = *(void **)((char *)v464 + v790);
      *(void **)((char *)v463 + v790) = v791;
      v792 = v787[8];
      v793 = *(void **)((char *)v464 + v792);
      *(void **)((char *)v463 + v792) = v793;
      *((_BYTE *)v463 + v787[9]) = *((_BYTE *)v464 + v787[9]);
      *(void **)((char *)v463 + *(int *)(v465 + 48)) = *(void **)((char *)v464 + *(int *)(v465 + 48));
      v794 = *(void (**)(void **, _QWORD, uint64_t, uint64_t, __n128))(v466 + 56);
      v795 = v789;
      swift_bridgeObjectRetain(v791);
      v796 = swift_bridgeObjectRetain(v793);
      v794(v463, 0, 1, v465, v796);
      goto LABEL_451;
    }
LABEL_254:
    v477 = sub_10002A750(&qword_10064CB98);
    memcpy(v463, v464, *(_QWORD *)(*(_QWORD *)(v477 - 8) + 64));
    goto LABEL_451;
  }
  if (v468)
  {
    sub_1000073A0((uint64_t)v463, &qword_10064CBA0);
    goto LABEL_254;
  }
  if (a1 != a2)
  {
    sub_10004941C((uint64_t)v463);
    v478 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v464, v478))
    {
      case 0u:
        v479 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v1522 = v478;
        switch(swift_getEnumCaseMultiPayload(v464, v479))
        {
          case 1u:
            v480 = *v464;
            *v463 = *v464;
            v481 = v480;
            v482 = v463;
            v483 = v479;
            v484 = 1;
            goto LABEL_357;
          case 2u:
            v692 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v692 - 8) + 16))(v463, v464, v692);
            v482 = v463;
            v483 = v479;
            v484 = 2;
            goto LABEL_357;
          case 3u:
            v693 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v693 - 8) + 16))(v463, v464, v693);
            v482 = v463;
            v483 = v479;
            v484 = 3;
            goto LABEL_357;
          case 4u:
            v694 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v694 - 8) + 16))(v463, v464, v694);
            v482 = v463;
            v483 = v479;
            v484 = 4;
            goto LABEL_357;
          case 5u:
            v695 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v695 - 8) + 16))(v463, v464, v695);
            v482 = v463;
            v483 = v479;
            v484 = 5;
            goto LABEL_357;
          case 6u:
            v696 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v696 - 8) + 16))(v463, v464, v696);
            v482 = v463;
            v483 = v479;
            v484 = 6;
            goto LABEL_357;
          case 8u:
            v697 = *v464;
            *v463 = *v464;
            v698 = v697;
            v482 = v463;
            v483 = v479;
            v484 = 8;
            goto LABEL_357;
          case 9u:
            v699 = *v464;
            *v463 = *v464;
            v700 = v699;
            v482 = v463;
            v483 = v479;
            v484 = 9;
LABEL_357:
            swift_storeEnumTagMultiPayload(v482, v483, v484);
            break;
          default:
            memcpy(v463, v464, *(_QWORD *)(*(_QWORD *)(v479 - 8) + 64));
            break;
        }
        v701 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v702 = v701[5];
        v703 = (char *)v463 + v702;
        v704 = (char *)v464 + v702;
        if (*(void **)((char *)v464 + v702 + 8))
        {
          v1345 = v701;
          *(_QWORD *)v703 = *(_QWORD *)v704;
          v705 = *((_QWORD *)v704 + 1);
          *((_QWORD *)v703 + 1) = v705;
          v706 = (void *)*((_QWORD *)v704 + 2);
          v1324 = *((_QWORD *)v704 + 3);
          v707 = *((_QWORD *)v704 + 4);
          v1454 = *((_QWORD *)v704 + 6);
          __dstbh = (void *)*((_QWORD *)v704 + 5);
          v1409 = (void *)*((_QWORD *)v704 + 7);
          v1370 = v704[64];
          swift_bridgeObjectRetain(v705);
          sub_10003E1F0(v706, v1324, v707, (uint64_t)__dstbh, v1454, (uint64_t)v1409, v1370);
          *((_QWORD *)v703 + 2) = v706;
          *((_QWORD *)v703 + 3) = v1324;
          *((_QWORD *)v703 + 4) = v707;
          *((_QWORD *)v703 + 5) = __dstbh;
          *((_QWORD *)v703 + 6) = v1454;
          *((_QWORD *)v703 + 7) = v1409;
          v703[64] = v1370;
          v703[65] = v704[65];
          v703[66] = v704[66];
          v703[67] = v704[67];
          v703[68] = v704[68];
          v708 = v704[120];
          if (v708 == 255)
          {
            v709 = *(_OWORD *)(v704 + 72);
            v710 = *(_OWORD *)(v704 + 88);
            v711 = *(_OWORD *)(v704 + 104);
            v703[120] = v704[120];
            *(_OWORD *)(v703 + 88) = v710;
            *(_OWORD *)(v703 + 104) = v711;
            *(_OWORD *)(v703 + 72) = v709;
          }
          else
          {
            __dstbi = v708 & 1;
            v719 = (void *)*((_QWORD *)v704 + 9);
            v718 = *((_QWORD *)v704 + 10);
            v1410 = (void *)*((_QWORD *)v704 + 12);
            v1455 = *((_QWORD *)v704 + 11);
            v1371 = (void *)*((_QWORD *)v704 + 13);
            v1325 = *((_QWORD *)v704 + 14);
            sub_10002B764(v719, v718, v1455, (uint64_t)v1410, (uint64_t)v1371, v1325, v708 & 1);
            *((_QWORD *)v703 + 9) = v719;
            *((_QWORD *)v703 + 10) = v718;
            *((_QWORD *)v703 + 11) = v1455;
            *((_QWORD *)v703 + 12) = v1410;
            *((_QWORD *)v703 + 13) = v1371;
            *((_QWORD *)v703 + 14) = v1325;
            v703[120] = __dstbi;
          }
          v703[121] = v704[121];
          v701 = v1345;
        }
        else
        {
          v712 = *(_OWORD *)v704;
          v713 = *((_OWORD *)v704 + 1);
          v714 = *((_OWORD *)v704 + 3);
          *((_OWORD *)v703 + 2) = *((_OWORD *)v704 + 2);
          *((_OWORD *)v703 + 3) = v714;
          *(_OWORD *)v703 = v712;
          *((_OWORD *)v703 + 1) = v713;
          v715 = *((_OWORD *)v704 + 4);
          v716 = *((_OWORD *)v704 + 5);
          v717 = *((_OWORD *)v704 + 6);
          *(_OWORD *)(v703 + 106) = *(_OWORD *)(v704 + 106);
          *((_OWORD *)v703 + 5) = v716;
          *((_OWORD *)v703 + 6) = v717;
          *((_OWORD *)v703 + 4) = v715;
        }
        *((_BYTE *)v463 + v701[6]) = *((_BYTE *)v464 + v701[6]);
        *((_BYTE *)v463 + v701[7]) = *((_BYTE *)v464 + v701[7]);
        *((_BYTE *)v463 + v701[8]) = *((_BYTE *)v464 + v701[8]);
        *((_BYTE *)v463 + v701[9]) = *((_BYTE *)v464 + v701[9]);
        *((_BYTE *)v463 + v701[10]) = *((_BYTE *)v464 + v701[10]);
        v720 = v701[11];
        v721 = *(void **)((char *)v464 + v720);
        *(void **)((char *)v463 + v720) = v721;
        v722 = v721;
        v559 = v463;
        v560 = v1522;
        v561 = 0;
        goto LABEL_449;
      case 1u:
        v530 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v1527 = v478;
        switch(swift_getEnumCaseMultiPayload(v464, v530))
        {
          case 1u:
            v531 = *v464;
            *v463 = *v464;
            v532 = v531;
            v533 = v463;
            v534 = v530;
            v535 = 1;
            goto LABEL_373;
          case 2u:
            v723 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v723 - 8) + 16))(v463, v464, v723);
            v533 = v463;
            v534 = v530;
            v535 = 2;
            goto LABEL_373;
          case 3u:
            v724 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v724 - 8) + 16))(v463, v464, v724);
            v533 = v463;
            v534 = v530;
            v535 = 3;
            goto LABEL_373;
          case 4u:
            v725 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v725 - 8) + 16))(v463, v464, v725);
            v533 = v463;
            v534 = v530;
            v535 = 4;
            goto LABEL_373;
          case 5u:
            v726 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v726 - 8) + 16))(v463, v464, v726);
            v533 = v463;
            v534 = v530;
            v535 = 5;
            goto LABEL_373;
          case 6u:
            v727 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v727 - 8) + 16))(v463, v464, v727);
            v533 = v463;
            v534 = v530;
            v535 = 6;
            goto LABEL_373;
          case 8u:
            v728 = *v464;
            *v463 = *v464;
            v729 = v728;
            v533 = v463;
            v534 = v530;
            v535 = 8;
            goto LABEL_373;
          case 9u:
            v730 = *v464;
            *v463 = *v464;
            v731 = v730;
            v533 = v463;
            v534 = v530;
            v535 = 9;
LABEL_373:
            swift_storeEnumTagMultiPayload(v533, v534, v535);
            break;
          default:
            memcpy(v463, v464, *(_QWORD *)(*(_QWORD *)(v530 - 8) + 64));
            break;
        }
        v732 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v733 = v732[5];
        v734 = (char *)v463 + v733;
        v735 = (char *)v464 + v733;
        if (*(void **)((char *)v464 + v733 + 8))
        {
          v1346 = v732;
          *(_QWORD *)v734 = *(_QWORD *)v735;
          v736 = *((_QWORD *)v735 + 1);
          *((_QWORD *)v734 + 1) = v736;
          v737 = (void *)*((_QWORD *)v735 + 2);
          v1326 = *((_QWORD *)v735 + 3);
          v738 = *((_QWORD *)v735 + 4);
          v1456 = *((_QWORD *)v735 + 6);
          __dstbj = (void *)*((_QWORD *)v735 + 5);
          v1411 = (void *)*((_QWORD *)v735 + 7);
          v1372 = v735[64];
          swift_bridgeObjectRetain(v736);
          sub_10003E1F0(v737, v1326, v738, (uint64_t)__dstbj, v1456, (uint64_t)v1411, v1372);
          *((_QWORD *)v734 + 2) = v737;
          *((_QWORD *)v734 + 3) = v1326;
          *((_QWORD *)v734 + 4) = v738;
          *((_QWORD *)v734 + 5) = __dstbj;
          *((_QWORD *)v734 + 6) = v1456;
          *((_QWORD *)v734 + 7) = v1411;
          v734[64] = v1372;
          v734[65] = v735[65];
          v734[66] = v735[66];
          v734[67] = v735[67];
          v734[68] = v735[68];
          v739 = v735[120];
          if (v739 == 255)
          {
            v740 = *(_OWORD *)(v735 + 72);
            v741 = *(_OWORD *)(v735 + 88);
            v742 = *(_OWORD *)(v735 + 104);
            v734[120] = v735[120];
            *(_OWORD *)(v734 + 88) = v741;
            *(_OWORD *)(v734 + 104) = v742;
            *(_OWORD *)(v734 + 72) = v740;
          }
          else
          {
            __dstbk = v739 & 1;
            v750 = (void *)*((_QWORD *)v735 + 9);
            v749 = *((_QWORD *)v735 + 10);
            v1412 = (void *)*((_QWORD *)v735 + 12);
            v1457 = *((_QWORD *)v735 + 11);
            v1373 = (void *)*((_QWORD *)v735 + 13);
            v1327 = *((_QWORD *)v735 + 14);
            sub_10002B764(v750, v749, v1457, (uint64_t)v1412, (uint64_t)v1373, v1327, v739 & 1);
            *((_QWORD *)v734 + 9) = v750;
            *((_QWORD *)v734 + 10) = v749;
            *((_QWORD *)v734 + 11) = v1457;
            *((_QWORD *)v734 + 12) = v1412;
            *((_QWORD *)v734 + 13) = v1373;
            *((_QWORD *)v734 + 14) = v1327;
            v734[120] = __dstbk;
          }
          v734[121] = v735[121];
          v732 = v1346;
        }
        else
        {
          v743 = *(_OWORD *)v735;
          v744 = *((_OWORD *)v735 + 1);
          v745 = *((_OWORD *)v735 + 3);
          *((_OWORD *)v734 + 2) = *((_OWORD *)v735 + 2);
          *((_OWORD *)v734 + 3) = v745;
          *(_OWORD *)v734 = v743;
          *((_OWORD *)v734 + 1) = v744;
          v746 = *((_OWORD *)v735 + 4);
          v747 = *((_OWORD *)v735 + 5);
          v748 = *((_OWORD *)v735 + 6);
          *(_OWORD *)(v734 + 106) = *(_OWORD *)(v735 + 106);
          *((_OWORD *)v734 + 5) = v747;
          *((_OWORD *)v734 + 6) = v748;
          *((_OWORD *)v734 + 4) = v746;
        }
        *((_BYTE *)v463 + v732[6]) = *((_BYTE *)v464 + v732[6]);
        *((_BYTE *)v463 + v732[7]) = *((_BYTE *)v464 + v732[7]);
        *((_BYTE *)v463 + v732[8]) = *((_BYTE *)v464 + v732[8]);
        *((_BYTE *)v463 + v732[9]) = *((_BYTE *)v464 + v732[9]);
        *((_BYTE *)v463 + v732[10]) = *((_BYTE *)v464 + v732[10]);
        v751 = v732[11];
        v752 = *(void **)((char *)v464 + v751);
        *(void **)((char *)v463 + v751) = v752;
        v753 = v752;
        v559 = v463;
        v560 = v1527;
        v561 = 1;
        goto LABEL_449;
      case 2u:
        v1528 = v478;
        v536 = *v464;
        *v463 = *v464;
        v537 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v1445 = (void **)((char *)v464 + v537);
        __dsti = (void **)((char *)v463 + v537);
        v538 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v539 = *(_QWORD *)(v538 - 8);
        v540 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v539 + 48);
        v541 = v536;
        if (v540(v1445, 1, v538))
        {
          v542 = sub_10002A750(&qword_100644980);
          memcpy(__dsti, v1445, *(_QWORD *)(*(_QWORD *)(v542 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v1445, v538))
          {
            case 1u:
              v605 = *v1445;
              *__dsti = *v1445;
              v606 = v605;
              v607 = __dsti;
              v608 = v538;
              v609 = 1;
              goto LABEL_424;
            case 2u:
              v797 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v797 - 8) + 16))(__dsti, v1445, v797);
              v607 = __dsti;
              v608 = v538;
              v609 = 2;
              goto LABEL_424;
            case 3u:
              v798 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v798 - 8) + 16))(__dsti, v1445, v798);
              v607 = __dsti;
              v608 = v538;
              v609 = 3;
              goto LABEL_424;
            case 4u:
              v799 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v799 - 8) + 16))(__dsti, v1445, v799);
              v607 = __dsti;
              v608 = v538;
              v609 = 4;
              goto LABEL_424;
            case 5u:
              v800 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v800 - 8) + 16))(__dsti, v1445, v800);
              v607 = __dsti;
              v608 = v538;
              v609 = 5;
              goto LABEL_424;
            case 6u:
              v801 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v801 - 8) + 16))(__dsti, v1445, v801);
              v607 = __dsti;
              v608 = v538;
              v609 = 6;
              goto LABEL_424;
            case 8u:
              v802 = *v1445;
              *__dsti = *v1445;
              v803 = v802;
              v607 = __dsti;
              v608 = v538;
              v609 = 8;
              goto LABEL_424;
            case 9u:
              v804 = *v1445;
              *__dsti = *v1445;
              v805 = v804;
              v607 = __dsti;
              v608 = v538;
              v609 = 9;
LABEL_424:
              swift_storeEnumTagMultiPayload(v607, v608, v609);
              break;
            default:
              memcpy(__dsti, v1445, *(_QWORD *)(v539 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v539 + 56))(__dsti, 0, 1, v538);
        }
        v559 = v463;
        v560 = v1528;
        v561 = 2;
        goto LABEL_449;
      case 3u:
        v1529 = v478;
        v543 = *v464;
        *v463 = *v464;
        v544 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v1446 = (void **)((char *)v464 + v544);
        __dstj = (void **)((char *)v463 + v544);
        v545 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v546 = *(_QWORD *)(v545 - 8);
        v547 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v546 + 48);
        v548 = v543;
        if (v547(v1446, 1, v545))
        {
          v549 = sub_10002A750(&qword_100644980);
          memcpy(__dstj, v1446, *(_QWORD *)(*(_QWORD *)(v549 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v1446, v545))
          {
            case 1u:
              v610 = *v1446;
              *__dstj = *v1446;
              v611 = v610;
              v612 = __dstj;
              v613 = v545;
              v614 = 1;
              goto LABEL_435;
            case 2u:
              v806 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v806 - 8) + 16))(__dstj, v1446, v806);
              v612 = __dstj;
              v613 = v545;
              v614 = 2;
              goto LABEL_435;
            case 3u:
              v807 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v807 - 8) + 16))(__dstj, v1446, v807);
              v612 = __dstj;
              v613 = v545;
              v614 = 3;
              goto LABEL_435;
            case 4u:
              v808 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v808 - 8) + 16))(__dstj, v1446, v808);
              v612 = __dstj;
              v613 = v545;
              v614 = 4;
              goto LABEL_435;
            case 5u:
              v809 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v809 - 8) + 16))(__dstj, v1446, v809);
              v612 = __dstj;
              v613 = v545;
              v614 = 5;
              goto LABEL_435;
            case 6u:
              v810 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v810 - 8) + 16))(__dstj, v1446, v810);
              v612 = __dstj;
              v613 = v545;
              v614 = 6;
              goto LABEL_435;
            case 8u:
              v811 = *v1446;
              *__dstj = *v1446;
              v812 = v811;
              v612 = __dstj;
              v613 = v545;
              v614 = 8;
              goto LABEL_435;
            case 9u:
              v813 = *v1446;
              *__dstj = *v1446;
              v814 = v813;
              v612 = __dstj;
              v613 = v545;
              v614 = 9;
LABEL_435:
              swift_storeEnumTagMultiPayload(v612, v613, v614);
              break;
            default:
              memcpy(__dstj, v1446, *(_QWORD *)(v546 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v546 + 56))(__dstj, 0, 1, v545);
        }
        v559 = v463;
        v560 = v1529;
        v561 = 3;
        goto LABEL_449;
      case 4u:
        v1530 = v478;
        v550 = *v464;
        *v463 = *v464;
        v551 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v1447 = (void **)((char *)v464 + v551);
        __dstk = (void **)((char *)v463 + v551);
        v552 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v553 = *(_QWORD *)(v552 - 8);
        v554 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v553 + 48);
        v555 = v550;
        if (v554(v1447, 1, v552))
        {
          v556 = sub_10002A750(&qword_100644980);
          memcpy(__dstk, v1447, *(_QWORD *)(*(_QWORD *)(v556 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v1447, v552))
          {
            case 1u:
              v615 = *v1447;
              *__dstk = *v1447;
              v616 = v615;
              v617 = __dstk;
              v618 = v552;
              v619 = 1;
              goto LABEL_446;
            case 2u:
              v815 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v815 - 8) + 16))(__dstk, v1447, v815);
              v617 = __dstk;
              v618 = v552;
              v619 = 2;
              goto LABEL_446;
            case 3u:
              v816 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v816 - 8) + 16))(__dstk, v1447, v816);
              v617 = __dstk;
              v618 = v552;
              v619 = 3;
              goto LABEL_446;
            case 4u:
              v817 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v817 - 8) + 16))(__dstk, v1447, v817);
              v617 = __dstk;
              v618 = v552;
              v619 = 4;
              goto LABEL_446;
            case 5u:
              v818 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v818 - 8) + 16))(__dstk, v1447, v818);
              v617 = __dstk;
              v618 = v552;
              v619 = 5;
              goto LABEL_446;
            case 6u:
              v819 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v819 - 8) + 16))(__dstk, v1447, v819);
              v617 = __dstk;
              v618 = v552;
              v619 = 6;
              goto LABEL_446;
            case 8u:
              v820 = *v1447;
              *__dstk = *v1447;
              v821 = v820;
              v617 = __dstk;
              v618 = v552;
              v619 = 8;
              goto LABEL_446;
            case 9u:
              v822 = *v1447;
              *__dstk = *v1447;
              v823 = v822;
              v617 = __dstk;
              v618 = v552;
              v619 = 9;
LABEL_446:
              swift_storeEnumTagMultiPayload(v617, v618, v619);
              break;
            default:
              memcpy(__dstk, v1447, *(_QWORD *)(v553 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v553 + 56))(__dstk, 0, 1, v552);
        }
        v559 = v463;
        v560 = v1530;
        v561 = 4;
        goto LABEL_449;
      case 5u:
        *v463 = *v464;
        *((_BYTE *)v463 + 8) = *((_BYTE *)v464 + 8);
        *((_BYTE *)v463 + 9) = *((_BYTE *)v464 + 9);
        *((_BYTE *)v463 + 10) = *((_BYTE *)v464 + 10);
        v557 = v464[2];
        v463[2] = v557;
        v558 = v557;
        v559 = v463;
        v560 = v478;
        v561 = 5;
        goto LABEL_449;
      case 6u:
        v598 = *v464;
        *v463 = *v464;
        v599 = v598;
        v559 = v463;
        v560 = v478;
        v561 = 6;
        goto LABEL_449;
      case 7u:
        v562 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v563 = *(_QWORD *)(v562 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v563 + 48))(v464, 1, v562))
        {
          v564 = sub_10002A750(&qword_100644600);
          memcpy(v463, v464, *(_QWORD *)(*(_QWORD *)(v564 - 8) + 64));
        }
        else
        {
          v620 = *v464;
          *v463 = *v464;
          v621 = *(int *)(v562 + 20);
          v1449 = (char *)v464 + v621;
          __dstbc = (char *)v463 + v621;
          v1532 = v478;
          v622 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v1404 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v622 - 8) + 16);
          v623 = swift_bridgeObjectRetain(v620);
          v624 = v622;
          v478 = v1532;
          v1404(__dstbc, v1449, v624, v623);
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v563 + 56))(v463, 0, 1, v562);
        }
        v625 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v626 = (void **)((char *)v463 + v625);
        v627 = (void **)((char *)v464 + v625);
        if (v627[1])
        {
          *v626 = *v627;
          v628 = v627[1];
          v626[1] = v628;
          v629 = (void *)v627[2];
          v626[2] = v629;
          swift_bridgeObjectRetain(v628);
          v630 = v629;
        }
        else
        {
          v631 = *(_OWORD *)v627;
          v626[2] = v627[2];
          *(_OWORD *)v626 = v631;
        }
        v559 = v463;
        v560 = v478;
        v561 = 7;
        goto LABEL_449;
      case 8u:
        v600 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v601 = *(_QWORD *)(v600 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v601 + 48))(v464, 1, v600))
        {
          v602 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v463, v464, *(_QWORD *)(*(_QWORD *)(v602 - 8) + 64));
        }
        else
        {
          v632 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v632 - 8) + 16))(v463, v464, v632);
          *((_BYTE *)v463 + *(int *)(v600 + 20)) = *((_BYTE *)v464 + *(int *)(v600 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v601 + 56))(v463, 0, 1, v600);
        }
        v633 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)v463 + *(int *)(v633 + 20)) = *(void **)((char *)v464 + *(int *)(v633 + 20));
        v559 = v463;
        v560 = v478;
        v561 = 8;
        goto LABEL_449;
      case 9u:
        *(_BYTE *)v463 = *(_BYTE *)v464;
        v565 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v566 = (char *)v463 + v565;
        v567 = (char *)v464 + v565;
        v568 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v568 - 8) + 16))(v566, v567, v568);
        v559 = v463;
        v560 = v478;
        v561 = 9;
LABEL_449:
        swift_storeEnumTagMultiPayload(v559, v560, v561);
        break;
      default:
        memcpy(v463, v464, *(_QWORD *)(*(_QWORD *)(v478 - 8) + 64));
        break;
    }
  }
  v824 = (int *)type metadata accessor for TTRIReminderCellNotesViewModel(0, v469);
  *((_BYTE *)v463 + v824[5]) = *((_BYTE *)v464 + v824[5]);
  v825 = v824[6];
  v826 = *(void **)((char *)v463 + v825);
  v827 = *(void **)((char *)v464 + v825);
  *(void **)((char *)v463 + v825) = v827;
  v828 = v827;

  v829 = v824[7];
  v830 = *(uint64_t *)((char *)v463 + v829);
  v831 = *(void **)((char *)v464 + v829);
  *(void **)((char *)v463 + v829) = v831;
  swift_bridgeObjectRetain(v831);
  swift_bridgeObjectRelease(v830);
  v832 = v824[8];
  v833 = *(void **)((char *)v464 + v832);
  v834 = *(uint64_t *)((char *)v463 + v832);
  *(void **)((char *)v463 + v832) = v833;
  swift_bridgeObjectRetain(v833);
  swift_bridgeObjectRelease(v834);
  *((_BYTE *)v463 + v824[9]) = *((_BYTE *)v464 + v824[9]);
  *(void **)((char *)v463 + *(int *)(v465 + 48)) = *(void **)((char *)v464 + *(int *)(v465 + 48));
LABEL_451:
  v835 = a3[19];
  v836 = *(void **)(a1 + v835);
  v837 = *(void **)(a2 + v835);
  *(_QWORD *)(a1 + v835) = v837;
  v838 = v837;

  v839 = a3[20];
  v840 = (_QWORD *)(a1 + v839);
  v841 = (_QWORD *)(a2 + v839);
  *v840 = *v841;
  v842 = v841[1];
  v843 = v840[1];
  v840[1] = v842;
  swift_bridgeObjectRetain(v842);
  swift_bridgeObjectRelease(v843);
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  v844 = a3[22];
  v845 = (_QWORD *)(a1 + v844);
  v846 = (_QWORD *)(a2 + v844);
  *v845 = *v846;
  v847 = v846[1];
  v848 = v845[1];
  v845[1] = v847;
  swift_bridgeObjectRetain(v847);
  swift_bridgeObjectRelease(v848);
  v849 = a3[23];
  v850 = (_QWORD *)(a1 + v849);
  v851 = (_QWORD *)(a2 + v849);
  *v850 = *v851;
  v852 = v851[1];
  v853 = v850[1];
  v850[1] = v852;
  swift_bridgeObjectRetain(v852);
  swift_bridgeObjectRelease(v853);
  v854 = a3[24];
  v855 = *(void **)(a1 + v854);
  v856 = *(void **)(a2 + v854);
  *(_QWORD *)(a1 + v854) = v856;
  v857 = v856;

  v858 = a3[25];
  v859 = *(_QWORD *)(a2 + v858);
  v860 = *(_QWORD *)(a1 + v858);
  *(_QWORD *)(a1 + v858) = v859;
  swift_bridgeObjectRetain(v859);
  swift_bridgeObjectRelease(v860);
  v861 = a3[26];
  v862 = (_QWORD *)(a1 + v861);
  v863 = (_QWORD *)(a2 + v861);
  v864 = *(void **)(a1 + v861);
  v865 = *(void **)(a2 + v861);
  *v862 = v865;
  v866 = v865;

  v862[1] = v863[1];
  v867 = v863[2];
  v868 = v862[2];
  v862[2] = v867;
  swift_bridgeObjectRetain(v867);
  swift_bridgeObjectRelease(v868);
  v869 = v863[3];
  if (v862[3])
  {
    if (v869)
    {
      v870 = v863[4];
      v862[3] = v869;
      v862[4] = v870;
      swift_retain();
      swift_release();
      goto LABEL_458;
    }
    swift_release();
  }
  else if (v869)
  {
    v871 = v863[4];
    v862[3] = v869;
    v862[4] = v871;
    swift_retain();
    goto LABEL_458;
  }
  *(_OWORD *)(v862 + 3) = *(_OWORD *)(v863 + 3);
LABEL_458:
  v872 = a3[27];
  v873 = (_QWORD *)(a1 + v872);
  v874 = (_QWORD *)(a2 + v872);
  v875 = *(void **)(a1 + v872);
  v876 = *(void **)(a2 + v872);
  *v873 = v876;
  v877 = v876;

  v873[1] = v874[1];
  v878 = v874[2];
  v879 = v873[2];
  v873[2] = v878;
  swift_bridgeObjectRetain(v878);
  swift_bridgeObjectRelease(v879);
  v880 = v874[3];
  if (v873[3])
  {
    if (v880)
    {
      v881 = v874[4];
      v873[3] = v880;
      v873[4] = v881;
      swift_retain();
      swift_release();
      goto LABEL_465;
    }
    swift_release();
  }
  else if (v880)
  {
    v882 = v874[4];
    v873[3] = v880;
    v873[4] = v882;
    swift_retain();
    goto LABEL_465;
  }
  *(_OWORD *)(v873 + 3) = *(_OWORD *)(v874 + 3);
LABEL_465:
  v883 = a3[28];
  v884 = a1 + v883;
  v885 = a2 + v883;
  v886 = *(_QWORD *)(a2 + v883);
  v887 = *(_QWORD *)(a2 + v883 + 8);
  v888 = *(_QWORD *)(a1 + v883);
  *(_QWORD *)(a1 + v883) = v886;
  swift_unknownObjectRetain(v886);
  swift_unknownObjectRelease(v888);
  *(_QWORD *)(v884 + 8) = v887;
  v889 = sub_10002A750(&qword_10064CB58);
  v890 = *(int *)(v889 + 28);
  v891 = (void **)(v884 + v890);
  v892 = (void **)(v885 + v890);
  v893 = sub_10002A750(&qword_10064CB70);
  __dstl = *(_QWORD **)(v893 - 8);
  v894 = (uint64_t (*)(void **, uint64_t, uint64_t))__dstl[6];
  v895 = v894(v891, 1, v893);
  v1533 = v893;
  v896 = v894(v892, 1, v893);
  if (v895)
  {
    if (!v896)
    {
      v897 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(v892, v897))
      {
        case 0u:
          v898 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v1413 = (void *)v897;
          switch(swift_getEnumCaseMultiPayload(v892, v898))
          {
            case 1u:
              v899 = *v892;
              *v891 = *v892;
              v900 = v899;
              v901 = v891;
              v902 = v898;
              v903 = 1;
              goto LABEL_543;
            case 2u:
              v1081 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1081 - 8) + 16))(v891, v892, v1081);
              v901 = v891;
              v902 = v898;
              v903 = 2;
              goto LABEL_543;
            case 3u:
              v1082 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1082 - 8) + 16))(v891, v892, v1082);
              v901 = v891;
              v902 = v898;
              v903 = 3;
              goto LABEL_543;
            case 4u:
              v1083 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1083 - 8) + 16))(v891, v892, v1083);
              v901 = v891;
              v902 = v898;
              v903 = 4;
              goto LABEL_543;
            case 5u:
              v1084 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1084 - 8) + 16))(v891, v892, v1084);
              v901 = v891;
              v902 = v898;
              v903 = 5;
              goto LABEL_543;
            case 6u:
              v1085 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1085 - 8) + 16))(v891, v892, v1085);
              v901 = v891;
              v902 = v898;
              v903 = 6;
              goto LABEL_543;
            case 8u:
              v1086 = *v892;
              *v891 = *v892;
              v1087 = v1086;
              v901 = v891;
              v902 = v898;
              v903 = 8;
              goto LABEL_543;
            case 9u:
              v1088 = *v892;
              *v891 = *v892;
              v1089 = v1088;
              v901 = v891;
              v902 = v898;
              v903 = 9;
LABEL_543:
              swift_storeEnumTagMultiPayload(v901, v902, v903);
              break;
            default:
              memcpy(v891, v892, *(_QWORD *)(*(_QWORD *)(v898 - 8) + 64));
              break;
          }
          v1090 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v1091 = v1090[5];
          v1092 = (char *)v891 + v1091;
          v1093 = (char *)v892 + v1091;
          if (*(void **)((char *)v892 + v1091 + 8))
          {
            v1306 = v1090;
            v1466 = v889;
            *(_QWORD *)v1092 = *(_QWORD *)v1093;
            v1094 = *((_QWORD *)v1093 + 1);
            *((_QWORD *)v1092 + 1) = v1094;
            v1096 = (void *)*((_QWORD *)v1093 + 2);
            v1095 = *((_QWORD *)v1093 + 3);
            v1097 = *((_QWORD *)v1093 + 4);
            v1298 = *((_QWORD *)v1093 + 5);
            v1348 = *((_QWORD *)v1093 + 7);
            v1379 = (void *)*((_QWORD *)v1093 + 6);
            v1329 = v1093[64];
            swift_bridgeObjectRetain(v1094);
            sub_10003E1F0(v1096, v1095, v1097, v1298, (uint64_t)v1379, v1348, v1329);
            *((_QWORD *)v1092 + 2) = v1096;
            *((_QWORD *)v1092 + 3) = v1095;
            *((_QWORD *)v1092 + 4) = v1097;
            *((_QWORD *)v1092 + 5) = v1298;
            *((_QWORD *)v1092 + 6) = v1379;
            *((_QWORD *)v1092 + 7) = v1348;
            v1092[64] = v1329;
            v1092[65] = v1093[65];
            v1092[66] = v1093[66];
            v1092[67] = v1093[67];
            v1092[68] = v1093[68];
            v1098 = v1093[120];
            if (v1098 == 255)
            {
              v1099 = *(_OWORD *)(v1093 + 72);
              v1100 = *(_OWORD *)(v1093 + 88);
              v1101 = *(_OWORD *)(v1093 + 104);
              v1092[120] = v1093[120];
              *(_OWORD *)(v1092 + 88) = v1100;
              *(_OWORD *)(v1092 + 104) = v1101;
              *(_OWORD *)(v1092 + 72) = v1099;
            }
            else
            {
              v1380 = v1098 & 1;
              v1108 = (void *)*((_QWORD *)v1093 + 9);
              v1109 = *((_QWORD *)v1093 + 10);
              v1110 = *((_QWORD *)v1093 + 11);
              v1330 = *((_QWORD *)v1093 + 13);
              v1349 = *((_QWORD *)v1093 + 12);
              v1299 = *((_QWORD *)v1093 + 14);
              sub_10002B764(v1108, v1109, v1110, v1349, v1330, v1299, v1098 & 1);
              *((_QWORD *)v1092 + 9) = v1108;
              *((_QWORD *)v1092 + 10) = v1109;
              *((_QWORD *)v1092 + 11) = v1110;
              *((_QWORD *)v1092 + 12) = v1349;
              *((_QWORD *)v1092 + 13) = v1330;
              *((_QWORD *)v1092 + 14) = v1299;
              v1092[120] = v1380;
            }
            v897 = (uint64_t)v1413;
            v889 = v1466;
            v1092[121] = v1093[121];
            v1090 = v1306;
          }
          else
          {
            v1102 = *(_OWORD *)v1093;
            v1103 = *((_OWORD *)v1093 + 1);
            v1104 = *((_OWORD *)v1093 + 3);
            *((_OWORD *)v1092 + 2) = *((_OWORD *)v1093 + 2);
            *((_OWORD *)v1092 + 3) = v1104;
            *(_OWORD *)v1092 = v1102;
            *((_OWORD *)v1092 + 1) = v1103;
            v1105 = *((_OWORD *)v1093 + 4);
            v1106 = *((_OWORD *)v1093 + 5);
            v1107 = *((_OWORD *)v1093 + 6);
            *(_OWORD *)(v1092 + 106) = *(_OWORD *)(v1093 + 106);
            *((_OWORD *)v1092 + 5) = v1106;
            *((_OWORD *)v1092 + 6) = v1107;
            *((_OWORD *)v1092 + 4) = v1105;
          }
          *((_BYTE *)v891 + v1090[6]) = *((_BYTE *)v892 + v1090[6]);
          *((_BYTE *)v891 + v1090[7]) = *((_BYTE *)v892 + v1090[7]);
          *((_BYTE *)v891 + v1090[8]) = *((_BYTE *)v892 + v1090[8]);
          *((_BYTE *)v891 + v1090[9]) = *((_BYTE *)v892 + v1090[9]);
          *((_BYTE *)v891 + v1090[10]) = *((_BYTE *)v892 + v1090[10]);
          v1111 = v1090[11];
          v1112 = *(void **)((char *)v892 + v1111);
          *(void **)((char *)v891 + v1111) = v1112;
          v1113 = v1112;
          v949 = v891;
          v950 = v897;
          v951 = 0;
          goto LABEL_567;
        case 1u:
          v912 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v1414 = (void *)v897;
          switch(swift_getEnumCaseMultiPayload(v892, v912))
          {
            case 1u:
              v913 = *v892;
              *v891 = *v892;
              v914 = v913;
              v915 = v891;
              v916 = v912;
              v917 = 1;
              goto LABEL_559;
            case 2u:
              v1114 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1114 - 8) + 16))(v891, v892, v1114);
              v915 = v891;
              v916 = v912;
              v917 = 2;
              goto LABEL_559;
            case 3u:
              v1115 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1115 - 8) + 16))(v891, v892, v1115);
              v915 = v891;
              v916 = v912;
              v917 = 3;
              goto LABEL_559;
            case 4u:
              v1116 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1116 - 8) + 16))(v891, v892, v1116);
              v915 = v891;
              v916 = v912;
              v917 = 4;
              goto LABEL_559;
            case 5u:
              v1117 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1117 - 8) + 16))(v891, v892, v1117);
              v915 = v891;
              v916 = v912;
              v917 = 5;
              goto LABEL_559;
            case 6u:
              v1118 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1118 - 8) + 16))(v891, v892, v1118);
              v915 = v891;
              v916 = v912;
              v917 = 6;
              goto LABEL_559;
            case 8u:
              v1119 = *v892;
              *v891 = *v892;
              v1120 = v1119;
              v915 = v891;
              v916 = v912;
              v917 = 8;
              goto LABEL_559;
            case 9u:
              v1121 = *v892;
              *v891 = *v892;
              v1122 = v1121;
              v915 = v891;
              v916 = v912;
              v917 = 9;
LABEL_559:
              swift_storeEnumTagMultiPayload(v915, v916, v917);
              break;
            default:
              memcpy(v891, v892, *(_QWORD *)(*(_QWORD *)(v912 - 8) + 64));
              break;
          }
          v1123 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v1124 = v1123[5];
          v1125 = (char *)v891 + v1124;
          v1126 = (char *)v892 + v1124;
          if (*(void **)((char *)v892 + v1124 + 8))
          {
            v1307 = v1123;
            v1467 = v889;
            *(_QWORD *)v1125 = *(_QWORD *)v1126;
            v1127 = *((_QWORD *)v1126 + 1);
            *((_QWORD *)v1125 + 1) = v1127;
            v1128 = (void *)*((_QWORD *)v1126 + 2);
            v1129 = *((_QWORD *)v1126 + 3);
            v1130 = *((_QWORD *)v1126 + 5);
            v1300 = *((_QWORD *)v1126 + 4);
            v1350 = *((_QWORD *)v1126 + 7);
            v1381 = (void *)*((_QWORD *)v1126 + 6);
            v1331 = v1126[64];
            swift_bridgeObjectRetain(v1127);
            sub_10003E1F0(v1128, v1129, v1300, v1130, (uint64_t)v1381, v1350, v1331);
            *((_QWORD *)v1125 + 2) = v1128;
            *((_QWORD *)v1125 + 3) = v1129;
            *((_QWORD *)v1125 + 4) = v1300;
            *((_QWORD *)v1125 + 5) = v1130;
            *((_QWORD *)v1125 + 6) = v1381;
            *((_QWORD *)v1125 + 7) = v1350;
            v1125[64] = v1331;
            v1125[65] = v1126[65];
            v1125[66] = v1126[66];
            v1125[67] = v1126[67];
            v1125[68] = v1126[68];
            v1131 = v1126[120];
            if (v1131 == 255)
            {
              v1132 = *(_OWORD *)(v1126 + 72);
              v1133 = *(_OWORD *)(v1126 + 88);
              v1134 = *(_OWORD *)(v1126 + 104);
              v1125[120] = v1126[120];
              *(_OWORD *)(v1125 + 88) = v1133;
              *(_OWORD *)(v1125 + 104) = v1134;
              *(_OWORD *)(v1125 + 72) = v1132;
            }
            else
            {
              v1382 = v1131 & 1;
              v1142 = (void *)*((_QWORD *)v1126 + 9);
              v1143 = *((_QWORD *)v1126 + 10);
              v1144 = *((_QWORD *)v1126 + 11);
              v1332 = *((_QWORD *)v1126 + 13);
              v1351 = *((_QWORD *)v1126 + 12);
              v1301 = *((_QWORD *)v1126 + 14);
              sub_10002B764(v1142, v1143, v1144, v1351, v1332, v1301, v1131 & 1);
              *((_QWORD *)v1125 + 9) = v1142;
              *((_QWORD *)v1125 + 10) = v1143;
              *((_QWORD *)v1125 + 11) = v1144;
              *((_QWORD *)v1125 + 12) = v1351;
              *((_QWORD *)v1125 + 13) = v1332;
              *((_QWORD *)v1125 + 14) = v1301;
              v1125[120] = v1382;
            }
            v1141 = (uint64_t)v1414;
            v889 = v1467;
            v1125[121] = v1126[121];
            v1123 = v1307;
          }
          else
          {
            v1135 = *(_OWORD *)v1126;
            v1136 = *((_OWORD *)v1126 + 1);
            v1137 = *((_OWORD *)v1126 + 3);
            *((_OWORD *)v1125 + 2) = *((_OWORD *)v1126 + 2);
            *((_OWORD *)v1125 + 3) = v1137;
            *(_OWORD *)v1125 = v1135;
            *((_OWORD *)v1125 + 1) = v1136;
            v1138 = *((_OWORD *)v1126 + 4);
            v1139 = *((_OWORD *)v1126 + 5);
            v1140 = *((_OWORD *)v1126 + 6);
            *(_OWORD *)(v1125 + 106) = *(_OWORD *)(v1126 + 106);
            *((_OWORD *)v1125 + 5) = v1139;
            *((_OWORD *)v1125 + 6) = v1140;
            *((_OWORD *)v1125 + 4) = v1138;
            v1141 = v897;
          }
          *((_BYTE *)v891 + v1123[6]) = *((_BYTE *)v892 + v1123[6]);
          *((_BYTE *)v891 + v1123[7]) = *((_BYTE *)v892 + v1123[7]);
          *((_BYTE *)v891 + v1123[8]) = *((_BYTE *)v892 + v1123[8]);
          *((_BYTE *)v891 + v1123[9]) = *((_BYTE *)v892 + v1123[9]);
          *((_BYTE *)v891 + v1123[10]) = *((_BYTE *)v892 + v1123[10]);
          v1145 = v1123[11];
          v1146 = *(void **)((char *)v892 + v1145);
          *(void **)((char *)v891 + v1145) = v1146;
          v1147 = v1146;
          v949 = v891;
          v950 = v1141;
          v951 = 1;
          goto LABEL_567;
        case 2u:
          v1415 = (void *)v897;
          v1458 = v889;
          v918 = *v892;
          *v891 = *v892;
          v919 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v1374 = (void **)((char *)v891 + v919);
          v920 = (void **)((char *)v892 + v919);
          v921 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v922 = *(_QWORD *)(v921 - 8);
          v923 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v922 + 48);
          v924 = v918;
          if (v923(v920, 1, v921))
          {
            v925 = sub_10002A750(&qword_100644980);
            memcpy(v1374, v920, *(_QWORD *)(*(_QWORD *)(v925 - 8) + 64));
            v889 = v1458;
            v926 = __dstl;
            v927 = v1533;
            v928 = v1415;
          }
          else
          {
            v1009 = v922;
            switch(swift_getEnumCaseMultiPayload(v920, v921))
            {
              case 1u:
                v1010 = *v920;
                *v1374 = *v920;
                v1011 = v1010;
                v1012 = v1374;
                v1013 = v921;
                v1014 = 1;
                goto LABEL_610;
              case 2u:
                v1223 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1223 - 8) + 16))(v1374, v920, v1223);
                v1012 = v1374;
                v1013 = v921;
                v1014 = 2;
                goto LABEL_610;
              case 3u:
                v1224 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1224 - 8) + 16))(v1374, v920, v1224);
                v1012 = v1374;
                v1013 = v921;
                v1014 = 3;
                goto LABEL_610;
              case 4u:
                v1225 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1225 - 8) + 16))(v1374, v920, v1225);
                v1012 = v1374;
                v1013 = v921;
                v1014 = 4;
                goto LABEL_610;
              case 5u:
                v1226 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1226 - 8) + 16))(v1374, v920, v1226);
                v1012 = v1374;
                v1013 = v921;
                v1014 = 5;
                goto LABEL_610;
              case 6u:
                v1227 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1227 - 8) + 16))(v1374, v920, v1227);
                v1012 = v1374;
                v1013 = v921;
                v1014 = 6;
                goto LABEL_610;
              case 8u:
                v1228 = *v920;
                *v1374 = *v920;
                v1229 = v1228;
                v1012 = v1374;
                v1013 = v921;
                v1014 = 8;
                goto LABEL_610;
              case 9u:
                v1230 = *v920;
                *v1374 = *v920;
                v1231 = v1230;
                v1012 = v1374;
                v1013 = v921;
                v1014 = 9;
LABEL_610:
                swift_storeEnumTagMultiPayload(v1012, v1013, v1014);
                break;
              default:
                memcpy(v1374, v920, *(_QWORD *)(v922 + 64));
                break;
            }
            v927 = v1533;
            v1232 = v921;
            v889 = v1458;
            v926 = __dstl;
            v928 = v1415;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v1009 + 56))(v1374, 0, 1, v1232);
          }
          swift_storeEnumTagMultiPayload(v891, v928, 2);
          goto LABEL_569;
        case 3u:
          v1416 = (void *)v897;
          v1459 = v889;
          v929 = *v892;
          *v891 = *v892;
          v930 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v1375 = (void **)((char *)v891 + v930);
          v931 = (void **)((char *)v892 + v930);
          v932 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v933 = *(_QWORD *)(v932 - 8);
          v934 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v933 + 48);
          v935 = v929;
          if (v934(v931, 1, v932))
          {
            v936 = sub_10002A750(&qword_100644980);
            memcpy(v1375, v931, *(_QWORD *)(*(_QWORD *)(v936 - 8) + 64));
            v889 = v1459;
            v926 = __dstl;
            v927 = v1533;
            v937 = v1416;
          }
          else
          {
            v1015 = v933;
            switch(swift_getEnumCaseMultiPayload(v931, v932))
            {
              case 1u:
                v1016 = *v931;
                *v1375 = *v931;
                v1017 = v1016;
                v1018 = v1375;
                v1019 = v932;
                v1020 = 1;
                goto LABEL_621;
              case 2u:
                v1233 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1233 - 8) + 16))(v1375, v931, v1233);
                v1018 = v1375;
                v1019 = v932;
                v1020 = 2;
                goto LABEL_621;
              case 3u:
                v1234 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1234 - 8) + 16))(v1375, v931, v1234);
                v1018 = v1375;
                v1019 = v932;
                v1020 = 3;
                goto LABEL_621;
              case 4u:
                v1235 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1235 - 8) + 16))(v1375, v931, v1235);
                v1018 = v1375;
                v1019 = v932;
                v1020 = 4;
                goto LABEL_621;
              case 5u:
                v1236 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1236 - 8) + 16))(v1375, v931, v1236);
                v1018 = v1375;
                v1019 = v932;
                v1020 = 5;
                goto LABEL_621;
              case 6u:
                v1237 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1237 - 8) + 16))(v1375, v931, v1237);
                v1018 = v1375;
                v1019 = v932;
                v1020 = 6;
                goto LABEL_621;
              case 8u:
                v1238 = *v931;
                *v1375 = *v931;
                v1239 = v1238;
                v1018 = v1375;
                v1019 = v932;
                v1020 = 8;
                goto LABEL_621;
              case 9u:
                v1240 = *v931;
                *v1375 = *v931;
                v1241 = v1240;
                v1018 = v1375;
                v1019 = v932;
                v1020 = 9;
LABEL_621:
                swift_storeEnumTagMultiPayload(v1018, v1019, v1020);
                break;
              default:
                memcpy(v1375, v931, *(_QWORD *)(v933 + 64));
                break;
            }
            v927 = v1533;
            v1242 = v932;
            v889 = v1459;
            v926 = __dstl;
            v937 = v1416;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v1015 + 56))(v1375, 0, 1, v1242);
          }
          swift_storeEnumTagMultiPayload(v891, v937, 3);
          goto LABEL_569;
        case 4u:
          v1417 = (void *)v897;
          v1460 = v889;
          v938 = *v892;
          *v891 = *v892;
          v939 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v1376 = (void **)((char *)v891 + v939);
          v940 = (void **)((char *)v892 + v939);
          v941 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v942 = *(_QWORD *)(v941 - 8);
          v943 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v942 + 48);
          v944 = v938;
          if (v943(v940, 1, v941))
          {
            v945 = sub_10002A750(&qword_100644980);
            memcpy(v1376, v940, *(_QWORD *)(*(_QWORD *)(v945 - 8) + 64));
            v889 = v1460;
            v926 = __dstl;
            v927 = v1533;
            v946 = v1417;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v940, v941))
            {
              case 1u:
                v1021 = *v940;
                *v1376 = *v940;
                v1022 = v1021;
                v1023 = v1376;
                v1024 = v941;
                v1025 = 1;
                goto LABEL_632;
              case 2u:
                v1243 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1243 - 8) + 16))(v1376, v940, v1243);
                v1023 = v1376;
                v1024 = v941;
                v1025 = 2;
                goto LABEL_632;
              case 3u:
                v1244 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1244 - 8) + 16))(v1376, v940, v1244);
                v1023 = v1376;
                v1024 = v941;
                v1025 = 3;
                goto LABEL_632;
              case 4u:
                v1245 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1245 - 8) + 16))(v1376, v940, v1245);
                v1023 = v1376;
                v1024 = v941;
                v1025 = 4;
                goto LABEL_632;
              case 5u:
                v1246 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1246 - 8) + 16))(v1376, v940, v1246);
                v1023 = v1376;
                v1024 = v941;
                v1025 = 5;
                goto LABEL_632;
              case 6u:
                v1247 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1247 - 8) + 16))(v1376, v940, v1247);
                v1023 = v1376;
                v1024 = v941;
                v1025 = 6;
                goto LABEL_632;
              case 8u:
                v1251 = *v940;
                *v1376 = *v940;
                v1252 = v1251;
                v1023 = v1376;
                v1024 = v941;
                v1025 = 8;
                goto LABEL_632;
              case 9u:
                v1253 = *v940;
                *v1376 = *v940;
                v1254 = v1253;
                v1023 = v1376;
                v1024 = v941;
                v1025 = 9;
LABEL_632:
                swift_storeEnumTagMultiPayload(v1023, v1024, v1025);
                v1249 = v1376;
                v927 = v1533;
                v1250 = v941;
                v889 = v1460;
                v926 = __dstl;
                v1248 = v942;
                break;
              default:
                memcpy(v1376, v940, *(_QWORD *)(v942 + 64));
                v1248 = v942;
                v1249 = v1376;
                v927 = v1533;
                v1250 = v941;
                v889 = v1460;
                v926 = __dstl;
                break;
            }
            v946 = v1417;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v1248 + 56))(v1249, 0, 1, v1250);
          }
          swift_storeEnumTagMultiPayload(v891, v946, 4);
          goto LABEL_569;
        case 5u:
          *v891 = *v892;
          *((_BYTE *)v891 + 8) = *((_BYTE *)v892 + 8);
          *((_BYTE *)v891 + 9) = *((_BYTE *)v892 + 9);
          *((_BYTE *)v891 + 10) = *((_BYTE *)v892 + 10);
          v947 = v892[2];
          v891[2] = v947;
          v948 = v947;
          v949 = v891;
          v950 = v897;
          v951 = 5;
          goto LABEL_567;
        case 6u:
          v959 = *v892;
          *v891 = *v892;
          v960 = v959;
          v949 = v891;
          v950 = v897;
          v951 = 6;
          goto LABEL_567;
        case 7u:
          v952 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v953 = *(_QWORD *)(v952 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v953 + 48))(v892, 1, v952))
          {
            v954 = sub_10002A750(&qword_100644600);
            memcpy(v891, v892, *(_QWORD *)(*(_QWORD *)(v954 - 8) + 64));
          }
          else
          {
            v1026 = *v892;
            *v891 = *v892;
            v1027 = *(int *)(v952 + 20);
            v1347 = (char *)v892 + v1027;
            v1377 = (char *)v891 + v1027;
            v1464 = v889;
            v1028 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v1328 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v1028 - 8) + 16);
            v1029 = swift_bridgeObjectRetain(v1026);
            v1030 = v1028;
            v889 = v1464;
            v1328(v1377, v1347, v1030, v1029);
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v953 + 56))(v891, 0, 1, v952);
          }
          v1031 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v1032 = (void **)((char *)v891 + v1031);
          v1033 = (void **)((char *)v892 + v1031);
          v926 = __dstl;
          v927 = v1533;
          if (v1033[1])
          {
            *v1032 = *v1033;
            v1034 = v1033[1];
            v1032[1] = v1034;
            v1035 = (void *)v1033[2];
            v1032[2] = v1035;
            swift_bridgeObjectRetain(v1034);
            v1036 = v1035;
          }
          else
          {
            v1037 = *(_OWORD *)v1033;
            v1032[2] = v1033[2];
            *(_OWORD *)v1032 = v1037;
          }
          swift_storeEnumTagMultiPayload(v891, v897, 7);
          goto LABEL_569;
        case 8u:
          v961 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v962 = *(_QWORD *)(v961 - 8);
          v926 = __dstl;
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v962 + 48))(v892, 1, v961))
          {
            v963 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(v891, v892, *(_QWORD *)(*(_QWORD *)(v963 - 8) + 64));
          }
          else
          {
            v1043 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1043 - 8) + 16))(v891, v892, v1043);
            *((_BYTE *)v891 + *(int *)(v961 + 20)) = *((_BYTE *)v892 + *(int *)(v961 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v962 + 56))(v891, 0, 1, v961);
          }
          v927 = v1533;
          v1044 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)v891 + *(int *)(v1044 + 20)) = *(void **)((char *)v892 + *(int *)(v1044 + 20));
          swift_storeEnumTagMultiPayload(v891, v897, 8);
          goto LABEL_569;
        case 9u:
          *(_BYTE *)v891 = *(_BYTE *)v892;
          v955 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v956 = (char *)v891 + v955;
          v957 = (char *)v892 + v955;
          v958 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v958 - 8) + 16))(v956, v957, v958);
          v949 = v891;
          v950 = v897;
          v951 = 9;
LABEL_567:
          swift_storeEnumTagMultiPayload(v949, v950, v951);
          break;
        default:
          memcpy(v891, v892, *(_QWORD *)(*(_QWORD *)(v897 - 8) + 64));
          break;
      }
      v926 = __dstl;
      v927 = v1533;
LABEL_569:
      v1148 = (int *)type metadata accessor for TTRIReminderCellAutoCompleteViewModel(0);
      *((_BYTE *)v891 + v1148[5]) = *((_BYTE *)v892 + v1148[5]);
      v1149 = v1148[6];
      v1150 = (void **)((char *)v891 + v1149);
      v1151 = (void **)((char *)v892 + v1149);
      *v1150 = *v1151;
      v1152 = v1151[1];
      v1150[1] = v1152;
      v1153 = v1148[7];
      v1154 = *(void **)((char *)v892 + v1153);
      *(void **)((char *)v891 + v1153) = v1154;
      *(void **)((char *)v891 + *(int *)(v927 + 48)) = *(void **)((char *)v892 + *(int *)(v927 + 48));
      v1155 = (void (*)(void **, _QWORD, uint64_t, uint64_t, __n128))v926[7];
      swift_bridgeObjectRetain(v1152);
      v1156 = swift_bridgeObjectRetain(v1154);
      v1155(v891, 0, 1, v927, v1156);
      goto LABEL_670;
    }
LABEL_472:
    v904 = sub_10002A750(&qword_10065A450);
    memcpy(v891, v892, *(_QWORD *)(*(_QWORD *)(v904 - 8) + 64));
    goto LABEL_670;
  }
  if (v896)
  {
    sub_1000073A0((uint64_t)v891, &qword_10064CB70);
    goto LABEL_472;
  }
  if (a1 != a2)
  {
    sub_10004941C((uint64_t)v891);
    v905 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v892, v905))
    {
      case 0u:
        v906 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        __dstm = (void *)v905;
        switch(swift_getEnumCaseMultiPayload(v892, v906))
        {
          case 1u:
            v907 = *v892;
            *v891 = *v892;
            v908 = v907;
            v909 = v891;
            v910 = v906;
            v911 = 1;
            goto LABEL_578;
          case 2u:
            v1157 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1157 - 8) + 16))(v891, v892, v1157);
            v909 = v891;
            v910 = v906;
            v911 = 2;
            goto LABEL_578;
          case 3u:
            v1158 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1158 - 8) + 16))(v891, v892, v1158);
            v909 = v891;
            v910 = v906;
            v911 = 3;
            goto LABEL_578;
          case 4u:
            v1159 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1159 - 8) + 16))(v891, v892, v1159);
            v909 = v891;
            v910 = v906;
            v911 = 4;
            goto LABEL_578;
          case 5u:
            v1160 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1160 - 8) + 16))(v891, v892, v1160);
            v909 = v891;
            v910 = v906;
            v911 = 5;
            goto LABEL_578;
          case 6u:
            v1161 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1161 - 8) + 16))(v891, v892, v1161);
            v909 = v891;
            v910 = v906;
            v911 = 6;
            goto LABEL_578;
          case 8u:
            v1162 = *v892;
            *v891 = *v892;
            v1163 = v1162;
            v909 = v891;
            v910 = v906;
            v911 = 8;
            goto LABEL_578;
          case 9u:
            v1164 = *v892;
            *v891 = *v892;
            v1165 = v1164;
            v909 = v891;
            v910 = v906;
            v911 = 9;
LABEL_578:
            swift_storeEnumTagMultiPayload(v909, v910, v911);
            break;
          default:
            memcpy(v891, v892, *(_QWORD *)(*(_QWORD *)(v906 - 8) + 64));
            break;
        }
        v1166 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v1167 = v1166[5];
        v1168 = (char *)v891 + v1167;
        v1169 = (char *)v892 + v1167;
        if (*(void **)((char *)v892 + v1167 + 8))
        {
          v1333 = v1166;
          v1468 = v889;
          *(_QWORD *)v1168 = *(_QWORD *)v1169;
          v1170 = *((_QWORD *)v1169 + 1);
          *((_QWORD *)v1168 + 1) = v1170;
          v1172 = (void *)*((_QWORD *)v1169 + 2);
          v1171 = *((_QWORD *)v1169 + 3);
          v1173 = *((_QWORD *)v1169 + 5);
          v1308 = *((_QWORD *)v1169 + 6);
          v1383 = (void *)*((_QWORD *)v1169 + 7);
          v1422 = (void *)*((_QWORD *)v1169 + 4);
          v1352 = v1169[64];
          swift_bridgeObjectRetain(v1170);
          sub_10003E1F0(v1172, v1171, (uint64_t)v1422, v1173, v1308, (uint64_t)v1383, v1352);
          *((_QWORD *)v1168 + 2) = v1172;
          *((_QWORD *)v1168 + 3) = v1171;
          *((_QWORD *)v1168 + 4) = v1422;
          *((_QWORD *)v1168 + 5) = v1173;
          *((_QWORD *)v1168 + 6) = v1308;
          *((_QWORD *)v1168 + 7) = v1383;
          v1168[64] = v1352;
          v1168[65] = v1169[65];
          v1168[66] = v1169[66];
          v1168[67] = v1169[67];
          v1168[68] = v1169[68];
          v1174 = v1169[120];
          if (v1174 == 255)
          {
            v1175 = *(_OWORD *)(v1169 + 72);
            v1176 = *(_OWORD *)(v1169 + 88);
            v1177 = *(_OWORD *)(v1169 + 104);
            v1168[120] = v1169[120];
            *(_OWORD *)(v1168 + 88) = v1176;
            *(_OWORD *)(v1168 + 104) = v1177;
            *(_OWORD *)(v1168 + 72) = v1175;
          }
          else
          {
            v1423 = v1174 & 1;
            v1184 = (void *)*((_QWORD *)v1169 + 9);
            v1185 = *((_QWORD *)v1169 + 10);
            v1186 = *((_QWORD *)v1169 + 11);
            v1353 = *((_QWORD *)v1169 + 13);
            v1384 = (void *)*((_QWORD *)v1169 + 12);
            v1309 = *((_QWORD *)v1169 + 14);
            sub_10002B764(v1184, v1185, v1186, (uint64_t)v1384, v1353, v1309, v1174 & 1);
            *((_QWORD *)v1168 + 9) = v1184;
            *((_QWORD *)v1168 + 10) = v1185;
            *((_QWORD *)v1168 + 11) = v1186;
            *((_QWORD *)v1168 + 12) = v1384;
            *((_QWORD *)v1168 + 13) = v1353;
            *((_QWORD *)v1168 + 14) = v1309;
            v1168[120] = v1423;
          }
          v889 = v1468;
          v1168[121] = v1169[121];
          v1166 = v1333;
        }
        else
        {
          v1178 = *(_OWORD *)v1169;
          v1179 = *((_OWORD *)v1169 + 1);
          v1180 = *((_OWORD *)v1169 + 3);
          *((_OWORD *)v1168 + 2) = *((_OWORD *)v1169 + 2);
          *((_OWORD *)v1168 + 3) = v1180;
          *(_OWORD *)v1168 = v1178;
          *((_OWORD *)v1168 + 1) = v1179;
          v1181 = *((_OWORD *)v1169 + 4);
          v1182 = *((_OWORD *)v1169 + 5);
          v1183 = *((_OWORD *)v1169 + 6);
          *(_OWORD *)(v1168 + 106) = *(_OWORD *)(v1169 + 106);
          *((_OWORD *)v1168 + 5) = v1182;
          *((_OWORD *)v1168 + 6) = v1183;
          *((_OWORD *)v1168 + 4) = v1181;
        }
        *((_BYTE *)v891 + v1166[6]) = *((_BYTE *)v892 + v1166[6]);
        *((_BYTE *)v891 + v1166[7]) = *((_BYTE *)v892 + v1166[7]);
        *((_BYTE *)v891 + v1166[8]) = *((_BYTE *)v892 + v1166[8]);
        *((_BYTE *)v891 + v1166[9]) = *((_BYTE *)v892 + v1166[9]);
        *((_BYTE *)v891 + v1166[10]) = *((_BYTE *)v892 + v1166[10]);
        v1187 = v1166[11];
        v1188 = *(void **)((char *)v892 + v1187);
        *(void **)((char *)v891 + v1187) = v1188;
        v1189 = v1188;
        v999 = v891;
        v1000 = (uint64_t)__dstm;
        v1001 = 0;
        goto LABEL_668;
      case 1u:
        v964 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        __dstn = (void *)v905;
        switch(swift_getEnumCaseMultiPayload(v892, v964))
        {
          case 1u:
            v965 = *v892;
            *v891 = *v892;
            v966 = v965;
            v967 = v891;
            v968 = v964;
            v969 = 1;
            goto LABEL_594;
          case 2u:
            v1190 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1190 - 8) + 16))(v891, v892, v1190);
            v967 = v891;
            v968 = v964;
            v969 = 2;
            goto LABEL_594;
          case 3u:
            v1191 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1191 - 8) + 16))(v891, v892, v1191);
            v967 = v891;
            v968 = v964;
            v969 = 3;
            goto LABEL_594;
          case 4u:
            v1192 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1192 - 8) + 16))(v891, v892, v1192);
            v967 = v891;
            v968 = v964;
            v969 = 4;
            goto LABEL_594;
          case 5u:
            v1193 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1193 - 8) + 16))(v891, v892, v1193);
            v967 = v891;
            v968 = v964;
            v969 = 5;
            goto LABEL_594;
          case 6u:
            v1194 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1194 - 8) + 16))(v891, v892, v1194);
            v967 = v891;
            v968 = v964;
            v969 = 6;
            goto LABEL_594;
          case 8u:
            v1195 = *v892;
            *v891 = *v892;
            v1196 = v1195;
            v967 = v891;
            v968 = v964;
            v969 = 8;
            goto LABEL_594;
          case 9u:
            v1197 = *v892;
            *v891 = *v892;
            v1198 = v1197;
            v967 = v891;
            v968 = v964;
            v969 = 9;
LABEL_594:
            swift_storeEnumTagMultiPayload(v967, v968, v969);
            break;
          default:
            memcpy(v891, v892, *(_QWORD *)(*(_QWORD *)(v964 - 8) + 64));
            break;
        }
        v1199 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v1200 = v1199[5];
        v1201 = (char *)v891 + v1200;
        v1202 = (char *)v892 + v1200;
        if (*(void **)((char *)v892 + v1200 + 8))
        {
          v1334 = v1199;
          v1469 = v889;
          *(_QWORD *)v1201 = *(_QWORD *)v1202;
          v1203 = *((_QWORD *)v1202 + 1);
          *((_QWORD *)v1201 + 1) = v1203;
          v1204 = (void *)*((_QWORD *)v1202 + 2);
          v1205 = *((_QWORD *)v1202 + 3);
          v1206 = *((_QWORD *)v1202 + 5);
          v1310 = *((_QWORD *)v1202 + 4);
          v1385 = (void *)*((_QWORD *)v1202 + 7);
          v1424 = (void *)*((_QWORD *)v1202 + 6);
          v1354 = v1202[64];
          swift_bridgeObjectRetain(v1203);
          sub_10003E1F0(v1204, v1205, v1310, v1206, (uint64_t)v1424, (uint64_t)v1385, v1354);
          *((_QWORD *)v1201 + 2) = v1204;
          *((_QWORD *)v1201 + 3) = v1205;
          *((_QWORD *)v1201 + 4) = v1310;
          *((_QWORD *)v1201 + 5) = v1206;
          *((_QWORD *)v1201 + 6) = v1424;
          *((_QWORD *)v1201 + 7) = v1385;
          v1201[64] = v1354;
          v1201[65] = v1202[65];
          v1201[66] = v1202[66];
          v1201[67] = v1202[67];
          v1201[68] = v1202[68];
          v1207 = v1202[120];
          if (v1207 == 255)
          {
            v1208 = *(_OWORD *)(v1202 + 72);
            v1209 = *(_OWORD *)(v1202 + 88);
            v1210 = *(_OWORD *)(v1202 + 104);
            v1201[120] = v1202[120];
            *(_OWORD *)(v1201 + 88) = v1209;
            *(_OWORD *)(v1201 + 104) = v1210;
            *(_OWORD *)(v1201 + 72) = v1208;
          }
          else
          {
            v1425 = v1207 & 1;
            v1217 = (void *)*((_QWORD *)v1202 + 9);
            v1218 = *((_QWORD *)v1202 + 10);
            v1219 = *((_QWORD *)v1202 + 11);
            v1355 = *((_QWORD *)v1202 + 13);
            v1386 = (void *)*((_QWORD *)v1202 + 12);
            v1311 = *((_QWORD *)v1202 + 14);
            sub_10002B764(v1217, v1218, v1219, (uint64_t)v1386, v1355, v1311, v1207 & 1);
            *((_QWORD *)v1201 + 9) = v1217;
            *((_QWORD *)v1201 + 10) = v1218;
            *((_QWORD *)v1201 + 11) = v1219;
            *((_QWORD *)v1201 + 12) = v1386;
            *((_QWORD *)v1201 + 13) = v1355;
            *((_QWORD *)v1201 + 14) = v1311;
            v1201[120] = v1425;
          }
          v889 = v1469;
          v1201[121] = v1202[121];
          v1199 = v1334;
        }
        else
        {
          v1211 = *(_OWORD *)v1202;
          v1212 = *((_OWORD *)v1202 + 1);
          v1213 = *((_OWORD *)v1202 + 3);
          *((_OWORD *)v1201 + 2) = *((_OWORD *)v1202 + 2);
          *((_OWORD *)v1201 + 3) = v1213;
          *(_OWORD *)v1201 = v1211;
          *((_OWORD *)v1201 + 1) = v1212;
          v1214 = *((_OWORD *)v1202 + 4);
          v1215 = *((_OWORD *)v1202 + 5);
          v1216 = *((_OWORD *)v1202 + 6);
          *(_OWORD *)(v1201 + 106) = *(_OWORD *)(v1202 + 106);
          *((_OWORD *)v1201 + 5) = v1215;
          *((_OWORD *)v1201 + 6) = v1216;
          *((_OWORD *)v1201 + 4) = v1214;
        }
        *((_BYTE *)v891 + v1199[6]) = *((_BYTE *)v892 + v1199[6]);
        *((_BYTE *)v891 + v1199[7]) = *((_BYTE *)v892 + v1199[7]);
        *((_BYTE *)v891 + v1199[8]) = *((_BYTE *)v892 + v1199[8]);
        *((_BYTE *)v891 + v1199[9]) = *((_BYTE *)v892 + v1199[9]);
        *((_BYTE *)v891 + v1199[10]) = *((_BYTE *)v892 + v1199[10]);
        v1220 = v1199[11];
        v1221 = *(void **)((char *)v892 + v1220);
        *(void **)((char *)v891 + v1220) = v1221;
        v1222 = v1221;
        v999 = v891;
        v1000 = (uint64_t)__dstn;
        v1001 = 1;
        goto LABEL_668;
      case 2u:
        v1461 = v889;
        __dsto = (void *)v905;
        v970 = *v892;
        *v891 = *v892;
        v971 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v1418 = (void **)((char *)v891 + v971);
        v972 = (void **)((char *)v892 + v971);
        v973 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v974 = *(_QWORD *)(v973 - 8);
        v975 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v974 + 48);
        v976 = v970;
        if (v975(v972, 1, v973))
        {
          v977 = sub_10002A750(&qword_100644980);
          memcpy(v1418, v972, *(_QWORD *)(*(_QWORD *)(v977 - 8) + 64));
          v889 = v1461;
          v978 = (uint64_t)__dsto;
        }
        else
        {
          v1045 = v974;
          switch(swift_getEnumCaseMultiPayload(v972, v973))
          {
            case 1u:
              v1046 = *v972;
              v1047 = v1418;
              *v1418 = *v972;
              v1048 = v1046;
              v1049 = v1418;
              v1050 = v973;
              v1051 = 1;
              goto LABEL_643;
            case 2u:
              v1255 = type metadata accessor for Date(0);
              v1047 = v1418;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1255 - 8) + 16))(v1418, v972, v1255);
              v1049 = v1418;
              v1050 = v973;
              v1051 = 2;
              goto LABEL_643;
            case 3u:
              v1256 = type metadata accessor for Date(0);
              v1047 = v1418;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1256 - 8) + 16))(v1418, v972, v1256);
              v1049 = v1418;
              v1050 = v973;
              v1051 = 3;
              goto LABEL_643;
            case 4u:
              v1257 = type metadata accessor for Date(0);
              v1047 = v1418;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1257 - 8) + 16))(v1418, v972, v1257);
              v1049 = v1418;
              v1050 = v973;
              v1051 = 4;
              goto LABEL_643;
            case 5u:
              v1258 = type metadata accessor for Date(0);
              v1047 = v1418;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1258 - 8) + 16))(v1418, v972, v1258);
              v1049 = v1418;
              v1050 = v973;
              v1051 = 5;
              goto LABEL_643;
            case 6u:
              v1259 = type metadata accessor for Date(0);
              v1047 = v1418;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1259 - 8) + 16))(v1418, v972, v1259);
              v1049 = v1418;
              v1050 = v973;
              v1051 = 6;
              goto LABEL_643;
            case 8u:
              v1261 = *v972;
              v1047 = v1418;
              *v1418 = *v972;
              v1262 = v1261;
              v1049 = v1418;
              v1050 = v973;
              v1051 = 8;
              goto LABEL_643;
            case 9u:
              v1263 = *v972;
              v1047 = v1418;
              *v1418 = *v972;
              v1264 = v1263;
              v1049 = v1418;
              v1050 = v973;
              v1051 = 9;
LABEL_643:
              swift_storeEnumTagMultiPayload(v1049, v1050, v1051);
              break;
            default:
              v1260 = *(_QWORD *)(v974 + 64);
              v1047 = v1418;
              memcpy(v1418, v972, v1260);
              break;
          }
          v1265 = v973;
          v978 = (uint64_t)__dsto;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v1045 + 56))(v1047, 0, 1, v1265);
          v889 = v1461;
        }
        v999 = v891;
        v1000 = v978;
        v1001 = 2;
        goto LABEL_668;
      case 3u:
        v1462 = v889;
        __dstp = (void *)v905;
        v979 = *v892;
        *v891 = *v892;
        v980 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v1419 = (void **)((char *)v891 + v980);
        v981 = (void **)((char *)v892 + v980);
        v982 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v983 = *(_QWORD *)(v982 - 8);
        v984 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v983 + 48);
        v985 = v979;
        if (v984(v981, 1, v982))
        {
          v986 = sub_10002A750(&qword_100644980);
          memcpy(v1419, v981, *(_QWORD *)(*(_QWORD *)(v986 - 8) + 64));
          v889 = v1462;
          v987 = (uint64_t)__dstp;
        }
        else
        {
          v1052 = v983;
          switch(swift_getEnumCaseMultiPayload(v981, v982))
          {
            case 1u:
              v1053 = *v981;
              v1054 = v1419;
              *v1419 = *v981;
              v1055 = v1053;
              v1056 = v1419;
              v1057 = v982;
              v1058 = 1;
              goto LABEL_654;
            case 2u:
              v1266 = type metadata accessor for Date(0);
              v1054 = v1419;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1266 - 8) + 16))(v1419, v981, v1266);
              v1056 = v1419;
              v1057 = v982;
              v1058 = 2;
              goto LABEL_654;
            case 3u:
              v1267 = type metadata accessor for Date(0);
              v1054 = v1419;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1267 - 8) + 16))(v1419, v981, v1267);
              v1056 = v1419;
              v1057 = v982;
              v1058 = 3;
              goto LABEL_654;
            case 4u:
              v1268 = type metadata accessor for Date(0);
              v1054 = v1419;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1268 - 8) + 16))(v1419, v981, v1268);
              v1056 = v1419;
              v1057 = v982;
              v1058 = 4;
              goto LABEL_654;
            case 5u:
              v1269 = type metadata accessor for Date(0);
              v1054 = v1419;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1269 - 8) + 16))(v1419, v981, v1269);
              v1056 = v1419;
              v1057 = v982;
              v1058 = 5;
              goto LABEL_654;
            case 6u:
              v1270 = type metadata accessor for Date(0);
              v1054 = v1419;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1270 - 8) + 16))(v1419, v981, v1270);
              v1056 = v1419;
              v1057 = v982;
              v1058 = 6;
              goto LABEL_654;
            case 8u:
              v1272 = *v981;
              v1054 = v1419;
              *v1419 = *v981;
              v1273 = v1272;
              v1056 = v1419;
              v1057 = v982;
              v1058 = 8;
              goto LABEL_654;
            case 9u:
              v1274 = *v981;
              v1054 = v1419;
              *v1419 = *v981;
              v1275 = v1274;
              v1056 = v1419;
              v1057 = v982;
              v1058 = 9;
LABEL_654:
              swift_storeEnumTagMultiPayload(v1056, v1057, v1058);
              break;
            default:
              v1271 = *(_QWORD *)(v983 + 64);
              v1054 = v1419;
              memcpy(v1419, v981, v1271);
              break;
          }
          v1276 = v982;
          v987 = (uint64_t)__dstp;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v1052 + 56))(v1054, 0, 1, v1276);
          v889 = v1462;
        }
        v999 = v891;
        v1000 = v987;
        v1001 = 3;
        goto LABEL_668;
      case 4u:
        v1463 = v889;
        __dstq = (void *)v905;
        v988 = *v892;
        *v891 = *v892;
        v989 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v1420 = (void **)((char *)v891 + v989);
        v990 = (void **)((char *)v892 + v989);
        v991 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v992 = *(_QWORD *)(v991 - 8);
        v993 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v992 + 48);
        v994 = v988;
        if (v993(v990, 1, v991))
        {
          v995 = sub_10002A750(&qword_100644980);
          memcpy(v1420, v990, *(_QWORD *)(*(_QWORD *)(v995 - 8) + 64));
          v889 = v1463;
          v996 = (uint64_t)__dstq;
        }
        else
        {
          v1059 = v992;
          switch(swift_getEnumCaseMultiPayload(v990, v991))
          {
            case 1u:
              v1060 = *v990;
              v1061 = v1420;
              *v1420 = *v990;
              v1062 = v1060;
              v1063 = v1420;
              v1064 = v991;
              v1065 = 1;
              goto LABEL_665;
            case 2u:
              v1277 = type metadata accessor for Date(0);
              v1061 = v1420;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1277 - 8) + 16))(v1420, v990, v1277);
              v1063 = v1420;
              v1064 = v991;
              v1065 = 2;
              goto LABEL_665;
            case 3u:
              v1278 = type metadata accessor for Date(0);
              v1061 = v1420;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1278 - 8) + 16))(v1420, v990, v1278);
              v1063 = v1420;
              v1064 = v991;
              v1065 = 3;
              goto LABEL_665;
            case 4u:
              v1279 = type metadata accessor for Date(0);
              v1061 = v1420;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1279 - 8) + 16))(v1420, v990, v1279);
              v1063 = v1420;
              v1064 = v991;
              v1065 = 4;
              goto LABEL_665;
            case 5u:
              v1280 = type metadata accessor for Date(0);
              v1061 = v1420;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1280 - 8) + 16))(v1420, v990, v1280);
              v1063 = v1420;
              v1064 = v991;
              v1065 = 5;
              goto LABEL_665;
            case 6u:
              v1281 = type metadata accessor for Date(0);
              v1061 = v1420;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1281 - 8) + 16))(v1420, v990, v1281);
              v1063 = v1420;
              v1064 = v991;
              v1065 = 6;
              goto LABEL_665;
            case 8u:
              v1283 = *v990;
              v1061 = v1420;
              *v1420 = *v990;
              v1284 = v1283;
              v1063 = v1420;
              v1064 = v991;
              v1065 = 8;
              goto LABEL_665;
            case 9u:
              v1285 = *v990;
              v1061 = v1420;
              *v1420 = *v990;
              v1286 = v1285;
              v1063 = v1420;
              v1064 = v991;
              v1065 = 9;
LABEL_665:
              swift_storeEnumTagMultiPayload(v1063, v1064, v1065);
              break;
            default:
              v1282 = *(_QWORD *)(v992 + 64);
              v1061 = v1420;
              memcpy(v1420, v990, v1282);
              break;
          }
          v1287 = v991;
          v996 = (uint64_t)__dstq;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v1059 + 56))(v1061, 0, 1, v1287);
          v889 = v1463;
        }
        v999 = v891;
        v1000 = v996;
        v1001 = 4;
        goto LABEL_668;
      case 5u:
        *v891 = *v892;
        *((_BYTE *)v891 + 8) = *((_BYTE *)v892 + 8);
        *((_BYTE *)v891 + 9) = *((_BYTE *)v892 + 9);
        *((_BYTE *)v891 + 10) = *((_BYTE *)v892 + 10);
        v997 = v892[2];
        v891[2] = v997;
        v998 = v997;
        v999 = v891;
        v1000 = v905;
        v1001 = 5;
        goto LABEL_668;
      case 6u:
        v1038 = *v892;
        *v891 = *v892;
        v1039 = v1038;
        v999 = v891;
        v1000 = v905;
        v1001 = 6;
        goto LABEL_668;
      case 7u:
        v1002 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v1003 = *(_QWORD *)(v1002 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v1003 + 48))(v892, 1, v1002))
        {
          v1004 = sub_10002A750(&qword_100644600);
          memcpy(v891, v892, *(_QWORD *)(*(_QWORD *)(v1004 - 8) + 64));
        }
        else
        {
          v1066 = *v892;
          *v891 = *v892;
          v1067 = *(int *)(v1002 + 20);
          v1378 = (char *)v892 + v1067;
          v1421 = (char *)v891 + v1067;
          v1465 = v889;
          __dstbl = (void *)v905;
          v1068 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v1069 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v1068 - 8) + 16);
          v1070 = swift_bridgeObjectRetain(v1066);
          v1071 = v1068;
          v905 = (uint64_t)__dstbl;
          v1069(v1421, v1378, v1071, v1070);
          v889 = v1465;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v1003 + 56))(v891, 0, 1, v1002);
        }
        v1072 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v1073 = (void **)((char *)v891 + v1072);
        v1074 = (void **)((char *)v892 + v1072);
        if (v1074[1])
        {
          *v1073 = *v1074;
          v1075 = v1074[1];
          v1073[1] = v1075;
          v1076 = (void *)v1074[2];
          v1073[2] = v1076;
          swift_bridgeObjectRetain(v1075);
          v1077 = v1076;
        }
        else
        {
          v1078 = *(_OWORD *)v1074;
          v1073[2] = v1074[2];
          *(_OWORD *)v1073 = v1078;
        }
        v999 = v891;
        v1000 = v905;
        v1001 = 7;
        goto LABEL_668;
      case 8u:
        v1040 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v1041 = *(_QWORD *)(v1040 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v1041 + 48))(v892, 1, v1040))
        {
          v1042 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v891, v892, *(_QWORD *)(*(_QWORD *)(v1042 - 8) + 64));
        }
        else
        {
          v1079 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v1079 - 8) + 16))(v891, v892, v1079);
          *((_BYTE *)v891 + *(int *)(v1040 + 20)) = *((_BYTE *)v892 + *(int *)(v1040 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v1041 + 56))(v891, 0, 1, v1040);
        }
        v1080 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)v891 + *(int *)(v1080 + 20)) = *(void **)((char *)v892 + *(int *)(v1080 + 20));
        v999 = v891;
        v1000 = v905;
        v1001 = 8;
        goto LABEL_668;
      case 9u:
        *(_BYTE *)v891 = *(_BYTE *)v892;
        v1005 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v1006 = (char *)v891 + v1005;
        v1007 = (char *)v892 + v1005;
        v1008 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1008 - 8) + 16))(v1006, v1007, v1008);
        v999 = v891;
        v1000 = v905;
        v1001 = 9;
LABEL_668:
        swift_storeEnumTagMultiPayload(v999, v1000, v1001);
        break;
      default:
        memcpy(v891, v892, *(_QWORD *)(*(_QWORD *)(v905 - 8) + 64));
        break;
    }
  }
  v1288 = (int *)type metadata accessor for TTRIReminderCellAutoCompleteViewModel(0);
  *((_BYTE *)v891 + v1288[5]) = *((_BYTE *)v892 + v1288[5]);
  v1289 = v1288[6];
  v1290 = (void **)((char *)v891 + v1289);
  v1291 = (void **)((char *)v892 + v1289);
  *v1290 = *v1291;
  v1292 = v1291[1];
  v1293 = v1290[1];
  v1290[1] = v1292;
  swift_bridgeObjectRetain(v1292);
  swift_bridgeObjectRelease(v1293);
  v1294 = v1288[7];
  v1295 = *(void **)((char *)v892 + v1294);
  v1296 = *(uint64_t *)((char *)v891 + v1294);
  *(void **)((char *)v891 + v1294) = v1295;
  swift_bridgeObjectRetain(v1295);
  swift_bridgeObjectRelease(v1296);
  *(void **)((char *)v891 + *(int *)(v1533 + 48)) = *(void **)((char *)v892 + *(int *)(v1533 + 48));
LABEL_670:
  *(_BYTE *)(v884 + *(int *)(v889 + 32)) = *(_BYTE *)(v885 + *(int *)(v889 + 32));
  return a1;
}

uint64_t sub_1004A24B8(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  unsigned int (**v35)(const void *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  unsigned int (**v42)(const void *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unsigned int (**v47)(const void *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  int v63;
  const void *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  const void *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int *v94;
  uint64_t v95;
  _OWORD *v96;
  _OWORD *v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int *v106;
  uint64_t v107;
  _OWORD *v108;
  _OWORD *v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  unsigned int (**v127)(const void *, uint64_t, uint64_t);
  int *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t v138;
  void *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  unsigned int (**v156)(const void *, uint64_t, uint64_t);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  unsigned int (**v163)(const void *, uint64_t, uint64_t);
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  unsigned int (**v168)(const void *, uint64_t, uint64_t);
  uint64_t v169;
  uint64_t v170;
  double v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  int v184;
  const void *v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  int v190;
  const void *v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  int *v215;
  uint64_t v216;
  _OWORD *v217;
  _OWORD *v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  int *v227;
  uint64_t v228;
  _OWORD *v229;
  _OWORD *v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  unsigned int (**v248)(const void *, uint64_t, uint64_t);
  int *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  __int128 v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  __int128 v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  _QWORD *v266;
  _QWORD *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  _QWORD *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  _QWORD *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  char *v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  char *v303;
  char *v304;
  uint64_t v305;
  _QWORD *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  char *v310;
  char *v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  char *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  char *v322;
  char *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  char *v328;
  uint64_t v329;
  uint64_t v330;
  char *v331;
  char *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  int *v339;
  uint64_t v340;
  _OWORD *v341;
  _OWORD *v342;
  __int128 v343;
  __int128 v344;
  __int128 v345;
  __int128 v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  int *v351;
  uint64_t v352;
  _OWORD *v353;
  _OWORD *v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  __int128 v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  int *v372;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  unsigned int (**v380)(const void *, uint64_t, uint64_t);
  unsigned int (**v381)(const void *, uint64_t, uint64_t);
  unsigned int (**v382)(const void *, uint64_t, uint64_t);
  unsigned int (**v383)(const void *, uint64_t, uint64_t);
  unsigned int (**v384)(const void *, uint64_t, uint64_t);
  unsigned int (**v385)(const void *, uint64_t, uint64_t);
  char *v386;
  char *v387;
  char *v388;
  char *v389;
  void *__dst;
  void *__dsta;
  char *__dstb;
  char *__dstj;
  void *__dstc;
  void *__dstd;
  char *__dste;
  char *__dstk;
  void *__dstf;
  void *__dstg;
  void *__dsth;
  void *__dsti;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  v9 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_WORD *)(a1 + 216) = *(_WORD *)(a2 + 216);
  v10 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v10;
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  v11 = a3[17];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  v14 = *(int *)(sub_10002A750(&qword_10064CB68) + 28);
  v15 = (_QWORD *)(v12 + v14);
  v16 = (_QWORD *)(v13 + v14);
  v17 = sub_10002A750(&qword_10064CBB8);
  v18 = *(void **)(v17 - 8);
  if ((*((unsigned int (**)(_QWORD *, uint64_t, uint64_t))v18 + 6))(v16, 1, v17))
  {
    v19 = sub_10002A750(&qword_10064CBB0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v20 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v16, v20))
    {
      case 0u:
        v21 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v16, v21))
        {
          case 2u:
            v22 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v15, v16, v22);
            v23 = v15;
            v24 = v21;
            v25 = 2;
            goto LABEL_35;
          case 3u:
            v90 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(v15, v16, v90);
            v23 = v15;
            v24 = v21;
            v25 = 3;
            goto LABEL_35;
          case 4u:
            v91 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v15, v16, v91);
            v23 = v15;
            v24 = v21;
            v25 = 4;
            goto LABEL_35;
          case 5u:
            v92 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v15, v16, v92);
            v23 = v15;
            v24 = v21;
            v25 = 5;
            goto LABEL_35;
          case 6u:
            v93 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v15, v16, v93);
            v23 = v15;
            v24 = v21;
            v25 = 6;
LABEL_35:
            swift_storeEnumTagMultiPayload(v23, v24, v25);
            break;
          default:
            memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
            break;
        }
        v94 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v95 = v94[5];
        v96 = (_OWORD *)((char *)v15 + v95);
        v97 = (_OWORD *)((char *)v16 + v95);
        v98 = v97[3];
        v96[2] = v97[2];
        v96[3] = v98;
        v99 = v97[1];
        *v96 = *v97;
        v96[1] = v99;
        *(_OWORD *)((char *)v96 + 106) = *(_OWORD *)((char *)v97 + 106);
        v100 = v97[6];
        v101 = v97[4];
        v96[5] = v97[5];
        v96[6] = v100;
        v96[4] = v101;
        *((_BYTE *)v15 + v94[6]) = *((_BYTE *)v16 + v94[6]);
        *((_BYTE *)v15 + v94[7]) = *((_BYTE *)v16 + v94[7]);
        *((_BYTE *)v15 + v94[8]) = *((_BYTE *)v16 + v94[8]);
        *((_BYTE *)v15 + v94[9]) = *((_BYTE *)v16 + v94[9]);
        *((_BYTE *)v15 + v94[10]) = *((_BYTE *)v16 + v94[10]);
        *(_QWORD *)((char *)v15 + v94[11]) = *(_QWORD *)((char *)v16 + v94[11]);
        v61 = v15;
        v37 = v20;
        v62 = 0;
        goto LABEL_67;
      case 1u:
        v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v16, v26))
        {
          case 2u:
            v27 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v15, v16, v27);
            v28 = v15;
            v29 = v26;
            v30 = 2;
            goto LABEL_42;
          case 3u:
            v102 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v15, v16, v102);
            v28 = v15;
            v29 = v26;
            v30 = 3;
            goto LABEL_42;
          case 4u:
            v103 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v15, v16, v103);
            v28 = v15;
            v29 = v26;
            v30 = 4;
            goto LABEL_42;
          case 5u:
            v104 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v15, v16, v104);
            v28 = v15;
            v29 = v26;
            v30 = 5;
            goto LABEL_42;
          case 6u:
            v105 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v15, v16, v105);
            v28 = v15;
            v29 = v26;
            v30 = 6;
LABEL_42:
            swift_storeEnumTagMultiPayload(v28, v29, v30);
            break;
          default:
            memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
            break;
        }
        v106 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v107 = v106[5];
        v108 = (_OWORD *)((char *)v15 + v107);
        v109 = (_OWORD *)((char *)v16 + v107);
        v110 = v109[3];
        v108[2] = v109[2];
        v108[3] = v110;
        v111 = v109[1];
        *v108 = *v109;
        v108[1] = v111;
        *(_OWORD *)((char *)v108 + 106) = *(_OWORD *)((char *)v109 + 106);
        v112 = v109[6];
        v113 = v109[4];
        v108[5] = v109[5];
        v108[6] = v112;
        v108[4] = v113;
        *((_BYTE *)v15 + v106[6]) = *((_BYTE *)v16 + v106[6]);
        *((_BYTE *)v15 + v106[7]) = *((_BYTE *)v16 + v106[7]);
        *((_BYTE *)v15 + v106[8]) = *((_BYTE *)v16 + v106[8]);
        *((_BYTE *)v15 + v106[9]) = *((_BYTE *)v16 + v106[9]);
        *((_BYTE *)v15 + v106[10]) = *((_BYTE *)v16 + v106[10]);
        *(_QWORD *)((char *)v15 + v106[11]) = *(_QWORD *)((char *)v16 + v106[11]);
        v61 = v15;
        v37 = v20;
        v62 = 1;
        goto LABEL_67;
      case 2u:
        __dst = v18;
        v402 = v20;
        *v15 = *v16;
        v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v32 = (char *)v15 + v31;
        v33 = (char *)v16 + v31;
        v34 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v35 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v34 - 8);
        if (v35[6](v33, 1, v34))
        {
          v36 = sub_10002A750(&qword_100644980);
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
          v18 = __dst;
          v37 = v402;
        }
        else
        {
          v380 = v35;
          v63 = swift_getEnumCaseMultiPayload(v33, v34) - 2;
          v64 = v33;
          v18 = __dst;
          switch(v63)
          {
            case 0:
              v65 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v32, v64, v65);
              v66 = v32;
              v67 = v34;
              v68 = 2;
              goto LABEL_49;
            case 1:
              v114 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v114 - 8) + 32))(v32, v64, v114);
              v66 = v32;
              v67 = v34;
              v68 = 3;
              goto LABEL_49;
            case 2:
              v115 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(v32, v64, v115);
              v66 = v32;
              v67 = v34;
              v68 = 4;
              goto LABEL_49;
            case 3:
              v116 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v32, v64, v116);
              v66 = v32;
              v67 = v34;
              v68 = 5;
              goto LABEL_49;
            case 4:
              v117 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v32, v64, v117);
              v66 = v32;
              v67 = v34;
              v68 = 6;
LABEL_49:
              swift_storeEnumTagMultiPayload(v66, v67, v68);
              break;
            default:
              memcpy(v32, v64, (size_t)v380[8]);
              v18 = __dst;
              break;
          }
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v380[7])(v32, 0, 1, v34);
          v37 = v402;
        }
        v61 = v15;
        v62 = 2;
        goto LABEL_67;
      case 3u:
        __dsta = v18;
        v403 = v20;
        *v15 = *v16;
        v38 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v39 = (char *)v15 + v38;
        v40 = (char *)v16 + v38;
        v41 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v42 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v41 - 8);
        if (v42[6](v40, 1, v41))
        {
          v43 = sub_10002A750(&qword_100644980);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
          v18 = __dsta;
          v37 = v403;
        }
        else
        {
          v381 = v42;
          v69 = swift_getEnumCaseMultiPayload(v40, v41) - 2;
          v70 = v40;
          v18 = __dsta;
          switch(v69)
          {
            case 0:
              v71 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v39, v70, v71);
              v72 = v39;
              v73 = v41;
              v74 = 2;
              goto LABEL_57;
            case 1:
              v118 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v39, v70, v118);
              v72 = v39;
              v73 = v41;
              v74 = 3;
              goto LABEL_57;
            case 2:
              v119 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v119 - 8) + 32))(v39, v70, v119);
              v72 = v39;
              v73 = v41;
              v74 = 4;
              goto LABEL_57;
            case 3:
              v120 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v120 - 8) + 32))(v39, v70, v120);
              v72 = v39;
              v73 = v41;
              v74 = 5;
              goto LABEL_57;
            case 4:
              v121 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v39, v70, v121);
              v72 = v39;
              v73 = v41;
              v74 = 6;
LABEL_57:
              swift_storeEnumTagMultiPayload(v72, v73, v74);
              break;
            default:
              memcpy(v39, v70, (size_t)v381[8]);
              v18 = __dsta;
              break;
          }
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v381[7])(v39, 0, 1, v41);
          v37 = v403;
        }
        v61 = v15;
        v62 = 3;
        goto LABEL_67;
      case 4u:
        v404 = v20;
        *v15 = *v16;
        v44 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        __dstb = (char *)v15 + v44;
        v45 = (char *)v16 + v44;
        v46 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v47 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v46 - 8);
        if (v47[6](v45, 1, v46))
        {
          v48 = sub_10002A750(&qword_100644980);
          memcpy(__dstb, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
          v49 = v404;
        }
        else
        {
          v382 = v47;
          v75 = v45;
          switch(swift_getEnumCaseMultiPayload(v45, v46))
          {
            case 2u:
              v76 = type metadata accessor for Date(0);
              v77 = __dstb;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(__dstb, v75, v76);
              v78 = __dstb;
              v79 = v46;
              v80 = 2;
              goto LABEL_64;
            case 3u:
              v122 = type metadata accessor for Date(0);
              v77 = __dstb;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 32))(__dstb, v75, v122);
              v78 = __dstb;
              v79 = v46;
              v80 = 3;
              goto LABEL_64;
            case 4u:
              v123 = type metadata accessor for Date(0);
              v77 = __dstb;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(__dstb, v75, v123);
              v78 = __dstb;
              v79 = v46;
              v80 = 4;
              goto LABEL_64;
            case 5u:
              v124 = type metadata accessor for Date(0);
              v77 = __dstb;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 32))(__dstb, v75, v124);
              v78 = __dstb;
              v79 = v46;
              v80 = 5;
              goto LABEL_64;
            case 6u:
              v125 = type metadata accessor for Date(0);
              v77 = __dstb;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 32))(__dstb, v75, v125);
              v78 = __dstb;
              v79 = v46;
              v80 = 6;
LABEL_64:
              swift_storeEnumTagMultiPayload(v78, v79, v80);
              v126 = v77;
              v49 = v404;
              v127 = v382;
              break;
            default:
              memcpy(__dstb, v45, (size_t)v382[8]);
              v127 = v382;
              v126 = __dstb;
              v49 = v404;
              break;
          }
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v127[7])(v126, 0, 1, v46);
        }
        v61 = v15;
        v37 = v49;
        v62 = 4;
        goto LABEL_67;
      case 7u:
        v51 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v52 = *(_QWORD *)(v51 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v52 + 48))(v16, 1, v51))
        {
          v53 = sub_10002A750(&qword_100644600);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          *v15 = *v16;
          v81 = *(int *)(v51 + 20);
          __dstj = (char *)v15 + v81;
          v405 = v20;
          v82 = (char *)v16 + v81;
          v83 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v84 = v82;
          v20 = v405;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(__dstj, v84, v83);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v15, 0, 1, v51);
        }
        v85 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v86 = (char *)v15 + v85;
        v87 = (char *)v16 + v85;
        *(_OWORD *)v86 = *(_OWORD *)v87;
        *((_QWORD *)v86 + 2) = *((_QWORD *)v87 + 2);
        v61 = v15;
        v37 = v20;
        v62 = 7;
        goto LABEL_67;
      case 8u:
        v54 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v55 = *(_QWORD *)(v54 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v55 + 48))(v16, 1, v54))
        {
          v56 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        }
        else
        {
          v88 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v15, v16, v88);
          *((_BYTE *)v15 + *(int *)(v54 + 20)) = *((_BYTE *)v16 + *(int *)(v54 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v15, 0, 1, v54);
        }
        v89 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)v15 + *(int *)(v89 + 20)) = *(_QWORD *)((char *)v16 + *(int *)(v89 + 20));
        v61 = v15;
        v37 = v20;
        v62 = 8;
        goto LABEL_67;
      case 9u:
        *(_BYTE *)v15 = *(_BYTE *)v16;
        v57 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v58 = (char *)v15 + v57;
        v59 = (char *)v16 + v57;
        v60 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v58, v59, v60);
        v61 = v15;
        v37 = v20;
        v62 = 9;
LABEL_67:
        swift_storeEnumTagMultiPayload(v61, v37, v62);
        break;
      default:
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        break;
    }
    v128 = (int *)type metadata accessor for TTRReminderCellTitleViewModel(0, v50);
    *((_BYTE *)v15 + v128[5]) = *((_BYTE *)v16 + v128[5]);
    *(_QWORD *)((char *)v15 + v128[6]) = *(_QWORD *)((char *)v16 + v128[6]);
    *(_QWORD *)((char *)v15 + v128[7]) = *(_QWORD *)((char *)v16 + v128[7]);
    *((_BYTE *)v15 + v128[8]) = *((_BYTE *)v16 + v128[8]);
    v129 = v128[9];
    v130 = (char *)v15 + v129;
    v131 = (char *)v16 + v129;
    *(_QWORD *)v130 = *(_QWORD *)v131;
    v130[8] = v131[8];
    *(_QWORD *)((char *)v15 + v128[10]) = *(_QWORD *)((char *)v16 + v128[10]);
    *(_QWORD *)((char *)v15 + v128[11]) = *(_QWORD *)((char *)v16 + v128[11]);
    *(_QWORD *)((char *)v15 + *(int *)(v17 + 48)) = *(_QWORD *)((char *)v16 + *(int *)(v17 + 48));
    (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v18 + 7))(v15, 0, 1, v17);
  }
  v132 = a3[18];
  v133 = a1 + v132;
  v134 = a2 + v132;
  *(_BYTE *)v133 = *(_BYTE *)(a2 + v132);
  *(_OWORD *)(v133 + 8) = *(_OWORD *)(a2 + v132 + 8);
  v135 = *(int *)(sub_10002A750(&qword_10064CB60) + 40);
  v136 = (_QWORD *)(v133 + v135);
  v137 = (_QWORD *)(v134 + v135);
  v138 = sub_10002A750(&qword_10064CBA0);
  v139 = *(void **)(v138 - 8);
  if ((*((unsigned int (**)(_QWORD *, uint64_t, uint64_t))v139 + 6))(v137, 1, v138))
  {
    v140 = sub_10002A750(&qword_10064CB98);
    memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
  }
  else
  {
    v141 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v137, v141))
    {
      case 0u:
        v142 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v137, v142))
        {
          case 2u:
            v143 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v143 - 8) + 32))(v136, v137, v143);
            v144 = v136;
            v145 = v142;
            v146 = 2;
            goto LABEL_103;
          case 3u:
            v211 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v211 - 8) + 32))(v136, v137, v211);
            v144 = v136;
            v145 = v142;
            v146 = 3;
            goto LABEL_103;
          case 4u:
            v212 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v212 - 8) + 32))(v136, v137, v212);
            v144 = v136;
            v145 = v142;
            v146 = 4;
            goto LABEL_103;
          case 5u:
            v213 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v213 - 8) + 32))(v136, v137, v213);
            v144 = v136;
            v145 = v142;
            v146 = 5;
            goto LABEL_103;
          case 6u:
            v214 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v214 - 8) + 32))(v136, v137, v214);
            v144 = v136;
            v145 = v142;
            v146 = 6;
LABEL_103:
            swift_storeEnumTagMultiPayload(v144, v145, v146);
            break;
          default:
            memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
            break;
        }
        v215 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v216 = v215[5];
        v217 = (_OWORD *)((char *)v136 + v216);
        v218 = (_OWORD *)((char *)v137 + v216);
        v219 = v218[3];
        v217[2] = v218[2];
        v217[3] = v219;
        v220 = v218[1];
        *v217 = *v218;
        v217[1] = v220;
        *(_OWORD *)((char *)v217 + 106) = *(_OWORD *)((char *)v218 + 106);
        v221 = v218[6];
        v222 = v218[4];
        v217[5] = v218[5];
        v217[6] = v221;
        v217[4] = v222;
        *((_BYTE *)v136 + v215[6]) = *((_BYTE *)v137 + v215[6]);
        *((_BYTE *)v136 + v215[7]) = *((_BYTE *)v137 + v215[7]);
        *((_BYTE *)v136 + v215[8]) = *((_BYTE *)v137 + v215[8]);
        *((_BYTE *)v136 + v215[9]) = *((_BYTE *)v137 + v215[9]);
        *((_BYTE *)v136 + v215[10]) = *((_BYTE *)v137 + v215[10]);
        *(_QWORD *)((char *)v136 + v215[11]) = *(_QWORD *)((char *)v137 + v215[11]);
        v182 = v136;
        v158 = v141;
        v183 = 0;
        goto LABEL_135;
      case 1u:
        v147 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v137, v147))
        {
          case 2u:
            v148 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v148 - 8) + 32))(v136, v137, v148);
            v149 = v136;
            v150 = v147;
            v151 = 2;
            goto LABEL_110;
          case 3u:
            v223 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v223 - 8) + 32))(v136, v137, v223);
            v149 = v136;
            v150 = v147;
            v151 = 3;
            goto LABEL_110;
          case 4u:
            v224 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v224 - 8) + 32))(v136, v137, v224);
            v149 = v136;
            v150 = v147;
            v151 = 4;
            goto LABEL_110;
          case 5u:
            v225 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v225 - 8) + 32))(v136, v137, v225);
            v149 = v136;
            v150 = v147;
            v151 = 5;
            goto LABEL_110;
          case 6u:
            v226 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v226 - 8) + 32))(v136, v137, v226);
            v149 = v136;
            v150 = v147;
            v151 = 6;
LABEL_110:
            swift_storeEnumTagMultiPayload(v149, v150, v151);
            break;
          default:
            memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
            break;
        }
        v227 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v228 = v227[5];
        v229 = (_OWORD *)((char *)v136 + v228);
        v230 = (_OWORD *)((char *)v137 + v228);
        v231 = v230[3];
        v229[2] = v230[2];
        v229[3] = v231;
        v232 = v230[1];
        *v229 = *v230;
        v229[1] = v232;
        *(_OWORD *)((char *)v229 + 106) = *(_OWORD *)((char *)v230 + 106);
        v233 = v230[6];
        v234 = v230[4];
        v229[5] = v230[5];
        v229[6] = v233;
        v229[4] = v234;
        *((_BYTE *)v136 + v227[6]) = *((_BYTE *)v137 + v227[6]);
        *((_BYTE *)v136 + v227[7]) = *((_BYTE *)v137 + v227[7]);
        *((_BYTE *)v136 + v227[8]) = *((_BYTE *)v137 + v227[8]);
        *((_BYTE *)v136 + v227[9]) = *((_BYTE *)v137 + v227[9]);
        *((_BYTE *)v136 + v227[10]) = *((_BYTE *)v137 + v227[10]);
        *(_QWORD *)((char *)v136 + v227[11]) = *(_QWORD *)((char *)v137 + v227[11]);
        v182 = v136;
        v158 = v141;
        v183 = 1;
        goto LABEL_135;
      case 2u:
        __dstc = v139;
        v406 = v141;
        *v136 = *v137;
        v152 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v153 = (char *)v136 + v152;
        v154 = (char *)v137 + v152;
        v155 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v156 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v155 - 8);
        if (v156[6](v154, 1, v155))
        {
          v157 = sub_10002A750(&qword_100644980);
          memcpy(v153, v154, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
          v139 = __dstc;
          v158 = v406;
        }
        else
        {
          v383 = v156;
          v184 = swift_getEnumCaseMultiPayload(v154, v155) - 2;
          v185 = v154;
          v139 = __dstc;
          switch(v184)
          {
            case 0:
              v186 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v153, v185, v186);
              v187 = v153;
              v188 = v155;
              v189 = 2;
              goto LABEL_117;
            case 1:
              v235 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v235 - 8) + 32))(v153, v185, v235);
              v187 = v153;
              v188 = v155;
              v189 = 3;
              goto LABEL_117;
            case 2:
              v236 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v236 - 8) + 32))(v153, v185, v236);
              v187 = v153;
              v188 = v155;
              v189 = 4;
              goto LABEL_117;
            case 3:
              v237 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v237 - 8) + 32))(v153, v185, v237);
              v187 = v153;
              v188 = v155;
              v189 = 5;
              goto LABEL_117;
            case 4:
              v238 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v238 - 8) + 32))(v153, v185, v238);
              v187 = v153;
              v188 = v155;
              v189 = 6;
LABEL_117:
              swift_storeEnumTagMultiPayload(v187, v188, v189);
              break;
            default:
              memcpy(v153, v185, (size_t)v383[8]);
              v139 = __dstc;
              break;
          }
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v383[7])(v153, 0, 1, v155);
          v158 = v406;
        }
        v182 = v136;
        v183 = 2;
        goto LABEL_135;
      case 3u:
        __dstd = v139;
        v407 = v141;
        *v136 = *v137;
        v159 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v160 = (char *)v136 + v159;
        v161 = (char *)v137 + v159;
        v162 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v163 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v162 - 8);
        if (v163[6](v161, 1, v162))
        {
          v164 = sub_10002A750(&qword_100644980);
          memcpy(v160, v161, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
          v139 = __dstd;
          v158 = v407;
        }
        else
        {
          v384 = v163;
          v190 = swift_getEnumCaseMultiPayload(v161, v162) - 2;
          v191 = v161;
          v139 = __dstd;
          switch(v190)
          {
            case 0:
              v192 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v192 - 8) + 32))(v160, v191, v192);
              v193 = v160;
              v194 = v162;
              v195 = 2;
              goto LABEL_125;
            case 1:
              v239 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v239 - 8) + 32))(v160, v191, v239);
              v193 = v160;
              v194 = v162;
              v195 = 3;
              goto LABEL_125;
            case 2:
              v240 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v240 - 8) + 32))(v160, v191, v240);
              v193 = v160;
              v194 = v162;
              v195 = 4;
              goto LABEL_125;
            case 3:
              v241 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v241 - 8) + 32))(v160, v191, v241);
              v193 = v160;
              v194 = v162;
              v195 = 5;
              goto LABEL_125;
            case 4:
              v242 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v242 - 8) + 32))(v160, v191, v242);
              v193 = v160;
              v194 = v162;
              v195 = 6;
LABEL_125:
              swift_storeEnumTagMultiPayload(v193, v194, v195);
              break;
            default:
              memcpy(v160, v191, (size_t)v384[8]);
              v139 = __dstd;
              break;
          }
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v384[7])(v160, 0, 1, v162);
          v158 = v407;
        }
        v182 = v136;
        v183 = 3;
        goto LABEL_135;
      case 4u:
        v408 = v141;
        *v136 = *v137;
        v165 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        __dste = (char *)v136 + v165;
        v166 = (char *)v137 + v165;
        v167 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v168 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v167 - 8);
        if (v168[6](v166, 1, v167))
        {
          v169 = sub_10002A750(&qword_100644980);
          memcpy(__dste, v166, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
          v170 = v408;
        }
        else
        {
          v385 = v168;
          v196 = v166;
          switch(swift_getEnumCaseMultiPayload(v166, v167))
          {
            case 2u:
              v197 = type metadata accessor for Date(0);
              v198 = __dste;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32))(__dste, v196, v197);
              v199 = __dste;
              v200 = v167;
              v201 = 2;
              goto LABEL_132;
            case 3u:
              v243 = type metadata accessor for Date(0);
              v198 = __dste;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v243 - 8) + 32))(__dste, v196, v243);
              v199 = __dste;
              v200 = v167;
              v201 = 3;
              goto LABEL_132;
            case 4u:
              v244 = type metadata accessor for Date(0);
              v198 = __dste;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v244 - 8) + 32))(__dste, v196, v244);
              v199 = __dste;
              v200 = v167;
              v201 = 4;
              goto LABEL_132;
            case 5u:
              v245 = type metadata accessor for Date(0);
              v198 = __dste;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v245 - 8) + 32))(__dste, v196, v245);
              v199 = __dste;
              v200 = v167;
              v201 = 5;
              goto LABEL_132;
            case 6u:
              v246 = type metadata accessor for Date(0);
              v198 = __dste;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v246 - 8) + 32))(__dste, v196, v246);
              v199 = __dste;
              v200 = v167;
              v201 = 6;
LABEL_132:
              swift_storeEnumTagMultiPayload(v199, v200, v201);
              v247 = v198;
              v170 = v408;
              v248 = v385;
              break;
            default:
              memcpy(__dste, v166, (size_t)v385[8]);
              v248 = v385;
              v247 = __dste;
              v170 = v408;
              break;
          }
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v248[7])(v247, 0, 1, v167);
        }
        v182 = v136;
        v158 = v170;
        v183 = 4;
        goto LABEL_135;
      case 7u:
        v172 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v173 = *(_QWORD *)(v172 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v173 + 48))(v137, 1, v172))
        {
          v174 = sub_10002A750(&qword_100644600);
          memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v174 - 8) + 64));
        }
        else
        {
          *v136 = *v137;
          v202 = *(int *)(v172 + 20);
          __dstk = (char *)v136 + v202;
          v409 = v141;
          v203 = (char *)v137 + v202;
          v204 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v205 = v203;
          v141 = v409;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v204 - 8) + 32))(__dstk, v205, v204);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v136, 0, 1, v172);
        }
        v206 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v207 = (char *)v136 + v206;
        v208 = (char *)v137 + v206;
        *(_OWORD *)v207 = *(_OWORD *)v208;
        *((_QWORD *)v207 + 2) = *((_QWORD *)v208 + 2);
        v182 = v136;
        v158 = v141;
        v183 = 7;
        goto LABEL_135;
      case 8u:
        v175 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v176 = *(_QWORD *)(v175 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v176 + 48))(v137, 1, v175))
        {
          v177 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
        }
        else
        {
          v209 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v209 - 8) + 32))(v136, v137, v209);
          *((_BYTE *)v136 + *(int *)(v175 + 20)) = *((_BYTE *)v137 + *(int *)(v175 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v176 + 56))(v136, 0, 1, v175);
        }
        v210 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)v136 + *(int *)(v210 + 20)) = *(_QWORD *)((char *)v137 + *(int *)(v210 + 20));
        v182 = v136;
        v158 = v141;
        v183 = 8;
        goto LABEL_135;
      case 9u:
        *(_BYTE *)v136 = *(_BYTE *)v137;
        v178 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v179 = (char *)v136 + v178;
        v180 = (char *)v137 + v178;
        v181 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(v179, v180, v181);
        v182 = v136;
        v158 = v141;
        v183 = 9;
LABEL_135:
        swift_storeEnumTagMultiPayload(v182, v158, v183);
        break;
      default:
        memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
        break;
    }
    v249 = (int *)type metadata accessor for TTRIReminderCellNotesViewModel(0, v171);
    *((_BYTE *)v136 + v249[5]) = *((_BYTE *)v137 + v249[5]);
    *(_QWORD *)((char *)v136 + v249[6]) = *(_QWORD *)((char *)v137 + v249[6]);
    *(_QWORD *)((char *)v136 + v249[7]) = *(_QWORD *)((char *)v137 + v249[7]);
    *(_QWORD *)((char *)v136 + v249[8]) = *(_QWORD *)((char *)v137 + v249[8]);
    *((_BYTE *)v136 + v249[9]) = *((_BYTE *)v137 + v249[9]);
    *(_QWORD *)((char *)v136 + *(int *)(v138 + 48)) = *(_QWORD *)((char *)v137 + *(int *)(v138 + 48));
    (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v139 + 7))(v136, 0, 1, v138);
  }
  v250 = a3[20];
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  *(_OWORD *)(a1 + v250) = *(_OWORD *)(a2 + v250);
  v251 = a3[22];
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  *(_OWORD *)(a1 + v251) = *(_OWORD *)(a2 + v251);
  v252 = a3[24];
  *(_OWORD *)(a1 + a3[23]) = *(_OWORD *)(a2 + a3[23]);
  *(_QWORD *)(a1 + v252) = *(_QWORD *)(a2 + v252);
  v253 = a3[26];
  *(_QWORD *)(a1 + a3[25]) = *(_QWORD *)(a2 + a3[25]);
  v254 = a1 + v253;
  v255 = a2 + v253;
  v256 = *(_OWORD *)(v255 + 16);
  *(_OWORD *)v254 = *(_OWORD *)v255;
  *(_OWORD *)(v254 + 16) = v256;
  *(_QWORD *)(v254 + 32) = *(_QWORD *)(v255 + 32);
  v257 = a3[27];
  v258 = a3[28];
  v259 = a1 + v257;
  v260 = a2 + v257;
  v261 = *(_OWORD *)(v260 + 16);
  *(_OWORD *)v259 = *(_OWORD *)v260;
  *(_OWORD *)(v259 + 16) = v261;
  *(_QWORD *)(v259 + 32) = *(_QWORD *)(v260 + 32);
  v262 = a1 + v258;
  v263 = a2 + v258;
  *(_OWORD *)(a1 + v258) = *(_OWORD *)(a2 + v258);
  v264 = sub_10002A750(&qword_10064CB58);
  v265 = *(int *)(v264 + 28);
  v266 = (_QWORD *)(v262 + v265);
  v267 = (_QWORD *)(v263 + v265);
  v268 = sub_10002A750(&qword_10064CB70);
  v410 = *(_QWORD *)(v268 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v410 + 48))(v267, 1, v268))
  {
    v269 = sub_10002A750(&qword_10065A450);
    memcpy(v266, v267, *(_QWORD *)(*(_QWORD *)(v269 - 8) + 64));
  }
  else
  {
    v270 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v267, v270))
    {
      case 0u:
        v271 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v267, v271))
        {
          case 2u:
            v272 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v272 - 8) + 32))(v266, v267, v272);
            v273 = v266;
            v274 = v271;
            v275 = 2;
            goto LABEL_171;
          case 3u:
            v335 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v335 - 8) + 32))(v266, v267, v335);
            v273 = v266;
            v274 = v271;
            v275 = 3;
            goto LABEL_171;
          case 4u:
            v336 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v336 - 8) + 32))(v266, v267, v336);
            v273 = v266;
            v274 = v271;
            v275 = 4;
            goto LABEL_171;
          case 5u:
            v337 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v337 - 8) + 32))(v266, v267, v337);
            v273 = v266;
            v274 = v271;
            v275 = 5;
            goto LABEL_171;
          case 6u:
            v338 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v338 - 8) + 32))(v266, v267, v338);
            v273 = v266;
            v274 = v271;
            v275 = 6;
LABEL_171:
            swift_storeEnumTagMultiPayload(v273, v274, v275);
            break;
          default:
            memcpy(v266, v267, *(_QWORD *)(*(_QWORD *)(v271 - 8) + 64));
            break;
        }
        v339 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v340 = v339[5];
        v341 = (_OWORD *)((char *)v266 + v340);
        v342 = (_OWORD *)((char *)v267 + v340);
        v343 = v342[3];
        v341[2] = v342[2];
        v341[3] = v343;
        v344 = v342[1];
        *v341 = *v342;
        v341[1] = v344;
        *(_OWORD *)((char *)v341 + 106) = *(_OWORD *)((char *)v342 + 106);
        v345 = v342[6];
        v346 = v342[4];
        v341[5] = v342[5];
        v341[6] = v345;
        v341[4] = v346;
        *((_BYTE *)v266 + v339[6]) = *((_BYTE *)v267 + v339[6]);
        *((_BYTE *)v266 + v339[7]) = *((_BYTE *)v267 + v339[7]);
        *((_BYTE *)v266 + v339[8]) = *((_BYTE *)v267 + v339[8]);
        *((_BYTE *)v266 + v339[9]) = *((_BYTE *)v267 + v339[9]);
        *((_BYTE *)v266 + v339[10]) = *((_BYTE *)v267 + v339[10]);
        *(_QWORD *)((char *)v266 + v339[11]) = *(_QWORD *)((char *)v267 + v339[11]);
        v306 = v266;
        v307 = v270;
        v308 = 0;
        goto LABEL_203;
      case 1u:
        v276 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v267, v276))
        {
          case 2u:
            v277 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v277 - 8) + 32))(v266, v267, v277);
            v278 = v266;
            v279 = v276;
            v280 = 2;
            goto LABEL_178;
          case 3u:
            v347 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v347 - 8) + 32))(v266, v267, v347);
            v278 = v266;
            v279 = v276;
            v280 = 3;
            goto LABEL_178;
          case 4u:
            v348 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v348 - 8) + 32))(v266, v267, v348);
            v278 = v266;
            v279 = v276;
            v280 = 4;
            goto LABEL_178;
          case 5u:
            v349 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v349 - 8) + 32))(v266, v267, v349);
            v278 = v266;
            v279 = v276;
            v280 = 5;
            goto LABEL_178;
          case 6u:
            v350 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v350 - 8) + 32))(v266, v267, v350);
            v278 = v266;
            v279 = v276;
            v280 = 6;
LABEL_178:
            swift_storeEnumTagMultiPayload(v278, v279, v280);
            break;
          default:
            memcpy(v266, v267, *(_QWORD *)(*(_QWORD *)(v276 - 8) + 64));
            break;
        }
        v351 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v352 = v351[5];
        v353 = (_OWORD *)((char *)v266 + v352);
        v354 = (_OWORD *)((char *)v267 + v352);
        v355 = v354[3];
        v353[2] = v354[2];
        v353[3] = v355;
        v356 = v354[1];
        *v353 = *v354;
        v353[1] = v356;
        *(_OWORD *)((char *)v353 + 106) = *(_OWORD *)((char *)v354 + 106);
        v357 = v354[6];
        v358 = v354[4];
        v353[5] = v354[5];
        v353[6] = v357;
        v353[4] = v358;
        *((_BYTE *)v266 + v351[6]) = *((_BYTE *)v267 + v351[6]);
        *((_BYTE *)v266 + v351[7]) = *((_BYTE *)v267 + v351[7]);
        *((_BYTE *)v266 + v351[8]) = *((_BYTE *)v267 + v351[8]);
        *((_BYTE *)v266 + v351[9]) = *((_BYTE *)v267 + v351[9]);
        *((_BYTE *)v266 + v351[10]) = *((_BYTE *)v267 + v351[10]);
        *(_QWORD *)((char *)v266 + v351[11]) = *(_QWORD *)((char *)v267 + v351[11]);
        v306 = v266;
        v307 = v270;
        v308 = 1;
        goto LABEL_203;
      case 2u:
        __dstf = (void *)v270;
        *v266 = *v267;
        v281 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v386 = (char *)v266 + v281;
        v282 = (char *)v267 + v281;
        v283 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v284 = *(_QWORD *)(v283 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v284 + 48))(v282, 1, v283))
        {
          v285 = sub_10002A750(&qword_100644980);
          memcpy(v386, v282, *(_QWORD *)(*(_QWORD *)(v285 - 8) + 64));
        }
        else
        {
          v374 = v283;
          v377 = v284;
          switch(swift_getEnumCaseMultiPayload(v282, v283))
          {
            case 2u:
              v309 = type metadata accessor for Date(0);
              v310 = v386;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v309 - 8) + 32))(v386, v282, v309);
              v311 = v386;
              v312 = v374;
              v313 = v374;
              v314 = 2;
              goto LABEL_185;
            case 3u:
              v359 = type metadata accessor for Date(0);
              v310 = v386;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v359 - 8) + 32))(v386, v282, v359);
              v311 = v386;
              v312 = v374;
              v313 = v374;
              v314 = 3;
              goto LABEL_185;
            case 4u:
              v360 = type metadata accessor for Date(0);
              v310 = v386;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v360 - 8) + 32))(v386, v282, v360);
              v311 = v386;
              v312 = v374;
              v313 = v374;
              v314 = 4;
              goto LABEL_185;
            case 5u:
              v361 = type metadata accessor for Date(0);
              v310 = v386;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v361 - 8) + 32))(v386, v282, v361);
              v311 = v386;
              v312 = v374;
              v313 = v374;
              v314 = 5;
              goto LABEL_185;
            case 6u:
              v362 = type metadata accessor for Date(0);
              v310 = v386;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v362 - 8) + 32))(v386, v282, v362);
              v311 = v386;
              v312 = v374;
              v313 = v374;
              v314 = 6;
LABEL_185:
              swift_storeEnumTagMultiPayload(v311, v313, v314);
              break;
            default:
              v310 = v386;
              memcpy(v386, v282, *(_QWORD *)(v284 + 64));
              v312 = v374;
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v377 + 56))(v310, 0, 1, v312);
        }
        v306 = v266;
        v307 = (uint64_t)__dstf;
        v308 = 2;
        goto LABEL_203;
      case 3u:
        __dstg = (void *)v270;
        *v266 = *v267;
        v286 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v387 = (char *)v266 + v286;
        v287 = (char *)v267 + v286;
        v288 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v289 = *(_QWORD *)(v288 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v289 + 48))(v287, 1, v288))
        {
          v290 = sub_10002A750(&qword_100644980);
          memcpy(v387, v287, *(_QWORD *)(*(_QWORD *)(v290 - 8) + 64));
        }
        else
        {
          v375 = v288;
          v378 = v289;
          switch(swift_getEnumCaseMultiPayload(v287, v288))
          {
            case 2u:
              v315 = type metadata accessor for Date(0);
              v316 = v387;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v315 - 8) + 32))(v387, v287, v315);
              v317 = v387;
              v318 = v375;
              v319 = v375;
              v320 = 2;
              goto LABEL_193;
            case 3u:
              v363 = type metadata accessor for Date(0);
              v316 = v387;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v363 - 8) + 32))(v387, v287, v363);
              v317 = v387;
              v318 = v375;
              v319 = v375;
              v320 = 3;
              goto LABEL_193;
            case 4u:
              v364 = type metadata accessor for Date(0);
              v316 = v387;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v364 - 8) + 32))(v387, v287, v364);
              v317 = v387;
              v318 = v375;
              v319 = v375;
              v320 = 4;
              goto LABEL_193;
            case 5u:
              v365 = type metadata accessor for Date(0);
              v316 = v387;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v365 - 8) + 32))(v387, v287, v365);
              v317 = v387;
              v318 = v375;
              v319 = v375;
              v320 = 5;
              goto LABEL_193;
            case 6u:
              v366 = type metadata accessor for Date(0);
              v316 = v387;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v366 - 8) + 32))(v387, v287, v366);
              v317 = v387;
              v318 = v375;
              v319 = v375;
              v320 = 6;
LABEL_193:
              swift_storeEnumTagMultiPayload(v317, v319, v320);
              break;
            default:
              v316 = v387;
              memcpy(v387, v287, *(_QWORD *)(v289 + 64));
              v318 = v375;
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v378 + 56))(v316, 0, 1, v318);
        }
        v306 = v266;
        v307 = (uint64_t)__dstg;
        v308 = 3;
        goto LABEL_203;
      case 4u:
        __dsth = (void *)v270;
        *v266 = *v267;
        v291 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v388 = (char *)v266 + v291;
        v292 = (char *)v267 + v291;
        v293 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v294 = *(_QWORD *)(v293 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v294 + 48))(v292, 1, v293))
        {
          v295 = sub_10002A750(&qword_100644980);
          memcpy(v388, v292, *(_QWORD *)(*(_QWORD *)(v295 - 8) + 64));
        }
        else
        {
          v376 = v293;
          v379 = v294;
          switch(swift_getEnumCaseMultiPayload(v292, v293))
          {
            case 2u:
              v321 = type metadata accessor for Date(0);
              v322 = v388;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v321 - 8) + 32))(v388, v292, v321);
              v323 = v388;
              v324 = v376;
              v325 = v376;
              v326 = 2;
              goto LABEL_200;
            case 3u:
              v367 = type metadata accessor for Date(0);
              v322 = v388;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v367 - 8) + 32))(v388, v292, v367);
              v323 = v388;
              v324 = v376;
              v325 = v376;
              v326 = 3;
              goto LABEL_200;
            case 4u:
              v368 = type metadata accessor for Date(0);
              v322 = v388;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v368 - 8) + 32))(v388, v292, v368);
              v323 = v388;
              v324 = v376;
              v325 = v376;
              v326 = 4;
              goto LABEL_200;
            case 5u:
              v369 = type metadata accessor for Date(0);
              v322 = v388;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v369 - 8) + 32))(v388, v292, v369);
              v323 = v388;
              v324 = v376;
              v325 = v376;
              v326 = 5;
              goto LABEL_200;
            case 6u:
              v370 = type metadata accessor for Date(0);
              v322 = v388;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v370 - 8) + 32))(v388, v292, v370);
              v323 = v388;
              v324 = v376;
              v325 = v376;
              v326 = 6;
LABEL_200:
              swift_storeEnumTagMultiPayload(v323, v325, v326);
              v371 = v379;
              break;
            default:
              v322 = v388;
              memcpy(v388, v292, *(_QWORD *)(v294 + 64));
              v324 = v376;
              v371 = v379;
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v371 + 56))(v322, 0, 1, v324);
        }
        v306 = v266;
        v307 = (uint64_t)__dsth;
        v308 = 4;
        goto LABEL_203;
      case 7u:
        __dsti = (void *)v270;
        v296 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v297 = *(_QWORD *)(v296 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v297 + 48))(v267, 1, v296))
        {
          v298 = sub_10002A750(&qword_100644600);
          memcpy(v266, v267, *(_QWORD *)(*(_QWORD *)(v298 - 8) + 64));
        }
        else
        {
          *v266 = *v267;
          v327 = *(int *)(v296 + 20);
          v328 = (char *)v266 + v327;
          v389 = (char *)v267 + v327;
          v329 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v329 - 8) + 32))(v328, v389, v329);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v297 + 56))(v266, 0, 1, v296);
        }
        v330 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v331 = (char *)v266 + v330;
        v332 = (char *)v267 + v330;
        *(_OWORD *)v331 = *(_OWORD *)v332;
        *((_QWORD *)v331 + 2) = *((_QWORD *)v332 + 2);
        v306 = v266;
        v307 = (uint64_t)__dsti;
        v308 = 7;
        goto LABEL_203;
      case 8u:
        v299 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v300 = *(_QWORD *)(v299 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v300 + 48))(v267, 1, v299))
        {
          v301 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v266, v267, *(_QWORD *)(*(_QWORD *)(v301 - 8) + 64));
        }
        else
        {
          v333 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v333 - 8) + 32))(v266, v267, v333);
          *((_BYTE *)v266 + *(int *)(v299 + 20)) = *((_BYTE *)v267 + *(int *)(v299 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v300 + 56))(v266, 0, 1, v299);
        }
        v334 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)v266 + *(int *)(v334 + 20)) = *(_QWORD *)((char *)v267 + *(int *)(v334 + 20));
        v306 = v266;
        v307 = v270;
        v308 = 8;
        goto LABEL_203;
      case 9u:
        *(_BYTE *)v266 = *(_BYTE *)v267;
        v302 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v303 = (char *)v266 + v302;
        v304 = (char *)v267 + v302;
        v305 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v305 - 8) + 32))(v303, v304, v305);
        v306 = v266;
        v307 = v270;
        v308 = 9;
LABEL_203:
        swift_storeEnumTagMultiPayload(v306, v307, v308);
        break;
      default:
        memcpy(v266, v267, *(_QWORD *)(*(_QWORD *)(v270 - 8) + 64));
        break;
    }
    v372 = (int *)type metadata accessor for TTRIReminderCellAutoCompleteViewModel(0);
    *((_BYTE *)v266 + v372[5]) = *((_BYTE *)v267 + v372[5]);
    *(_OWORD *)((char *)v266 + v372[6]) = *(_OWORD *)((char *)v267 + v372[6]);
    *(_QWORD *)((char *)v266 + v372[7]) = *(_QWORD *)((char *)v267 + v372[7]);
    *(_QWORD *)((char *)v266 + *(int *)(v268 + 48)) = *(_QWORD *)((char *)v267 + *(int *)(v268 + 48));
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v410 + 56))(v266, 0, 1, v268);
  }
  *(_BYTE *)(v262 + *(int *)(v264 + 32)) = *(_BYTE *)(v263 + *(int *)(v264 + 32));
  return a1;
}

uint64_t sub_1004A4C24(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(_QWORD *, uint64_t, uint64_t);
  int v50;
  int v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  double v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  unsigned int (**v112)(const void *, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  unsigned int (**v119)(const void *, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  unsigned int (**v126)(const void *, uint64_t, uint64_t);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  char *v144;
  char *v145;
  void *v146;
  void *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  void *v152;
  void *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  void *v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  int *v172;
  uint64_t v173;
  _OWORD *v174;
  _OWORD *v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  int *v184;
  uint64_t v185;
  _OWORD *v186;
  _OWORD *v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  int v196;
  const void *v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  int v202;
  const void *v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  int *v220;
  uint64_t v221;
  _OWORD *v222;
  _OWORD *v223;
  __int128 v224;
  __int128 v225;
  __int128 v226;
  __int128 v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  int *v232;
  uint64_t v233;
  _OWORD *v234;
  _OWORD *v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  int *v255;
  uint64_t v256;
  char *v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  int *v271;
  uint64_t v272;
  void *v273;
  uint64_t v274;
  void *v275;
  uint64_t v276;
  char *v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  void *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  _QWORD *v289;
  _QWORD *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t (*v293)(_QWORD *, uint64_t, uint64_t);
  int v294;
  int v295;
  double v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  _QWORD *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  _QWORD *v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  _QWORD *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  char *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  char *v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  double v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  char *v341;
  char *v342;
  uint64_t v343;
  _QWORD *v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  _QWORD *v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  char *v353;
  char *v354;
  uint64_t v355;
  unsigned int (**v356)(const void *, uint64_t, uint64_t);
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  char *v360;
  char *v361;
  uint64_t v362;
  unsigned int (**v363)(const void *, uint64_t, uint64_t);
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  char *v367;
  char *v368;
  uint64_t v369;
  unsigned int (**v370)(const void *, uint64_t, uint64_t);
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  char *v380;
  char *v381;
  uint64_t v382;
  _QWORD *v383;
  uint64_t v384;
  uint64_t v385;
  int v386;
  uint64_t v387;
  char *v388;
  char *v389;
  void *v390;
  void *v391;
  uint64_t v392;
  uint64_t v393;
  char *v394;
  char *v395;
  void *v396;
  void *v397;
  uint64_t v398;
  uint64_t v399;
  char *v400;
  char *v401;
  void *v402;
  void *v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  char *v408;
  char *v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  int *v416;
  uint64_t v417;
  _OWORD *v418;
  _OWORD *v419;
  __int128 v420;
  __int128 v421;
  __int128 v422;
  __int128 v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  int *v428;
  uint64_t v429;
  _OWORD *v430;
  _OWORD *v431;
  __int128 v432;
  __int128 v433;
  __int128 v434;
  __int128 v435;
  uint64_t v436;
  char *v437;
  uint64_t v438;
  uint64_t v439;
  int v440;
  const void *v441;
  uint64_t v442;
  char *v443;
  uint64_t v444;
  uint64_t v445;
  int v446;
  const void *v447;
  uint64_t v448;
  char *v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  char *v453;
  uint64_t v454;
  uint64_t v455;
  char *v456;
  char *v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  int *v464;
  uint64_t v465;
  _OWORD *v466;
  _OWORD *v467;
  __int128 v468;
  __int128 v469;
  __int128 v470;
  __int128 v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  int *v476;
  uint64_t v477;
  _OWORD *v478;
  _OWORD *v479;
  __int128 v480;
  __int128 v481;
  __int128 v482;
  __int128 v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  int *v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  int *v512;
  uint64_t v513;
  void *v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  void *v520;
  uint64_t v521;
  _QWORD *v522;
  uint64_t *v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  _QWORD *v528;
  uint64_t *v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  _QWORD *v534;
  uint64_t *v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  void *v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  _QWORD *v544;
  _QWORD *v545;
  void *v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  _QWORD *v553;
  _QWORD *v554;
  void *v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  _QWORD *v567;
  _QWORD *v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t (*v571)(_QWORD *, uint64_t, uint64_t);
  int v572;
  int v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  _QWORD *v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  _QWORD *v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  _QWORD *v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  char *v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  char *v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  char *v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  uint64_t v617;
  char *v618;
  char *v619;
  uint64_t v620;
  _QWORD *v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  _QWORD *v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  char *v630;
  char *v631;
  uint64_t v632;
  unsigned int (**v633)(const void *, uint64_t, uint64_t);
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  char *v637;
  char *v638;
  uint64_t v639;
  unsigned int (**v640)(const void *, uint64_t, uint64_t);
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  char *v644;
  char *v645;
  uint64_t v646;
  unsigned int (**v647)(const void *, uint64_t, uint64_t);
  uint64_t v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  char *v657;
  char *v658;
  uint64_t v659;
  _QWORD *v660;
  uint64_t v661;
  uint64_t v662;
  int v663;
  uint64_t v664;
  char *v665;
  char *v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  char *v671;
  char *v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  char *v677;
  char *v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  char *v685;
  char *v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  uint64_t v692;
  int *v693;
  uint64_t v694;
  _OWORD *v695;
  _OWORD *v696;
  __int128 v697;
  __int128 v698;
  __int128 v699;
  __int128 v700;
  uint64_t v701;
  uint64_t v702;
  uint64_t v703;
  uint64_t v704;
  int *v705;
  uint64_t v706;
  _OWORD *v707;
  _OWORD *v708;
  __int128 v709;
  __int128 v710;
  __int128 v711;
  __int128 v712;
  uint64_t v713;
  char *v714;
  uint64_t v715;
  uint64_t v716;
  int v717;
  const void *v718;
  uint64_t v719;
  char *v720;
  uint64_t v721;
  uint64_t v722;
  int v723;
  const void *v724;
  uint64_t v725;
  char *v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t v729;
  char *v730;
  uint64_t v731;
  uint64_t v732;
  char *v733;
  char *v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t v740;
  int *v741;
  uint64_t v742;
  _OWORD *v743;
  _OWORD *v744;
  __int128 v745;
  __int128 v746;
  __int128 v747;
  __int128 v748;
  uint64_t v749;
  uint64_t v750;
  uint64_t v751;
  uint64_t v752;
  int *v753;
  uint64_t v754;
  _OWORD *v755;
  _OWORD *v756;
  __int128 v757;
  __int128 v758;
  __int128 v759;
  __int128 v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  uint64_t v765;
  uint64_t v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  uint64_t v772;
  uint64_t v773;
  uint64_t v774;
  uint64_t v775;
  int *v776;
  uint64_t v778;
  uint64_t v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t v782;
  uint64_t v783;
  uint64_t v784;
  uint64_t v785;
  uint64_t v786;
  uint64_t v787;
  uint64_t v788;
  uint64_t v789;
  int *v790;
  uint64_t v791;
  _QWORD *v792;
  uint64_t *v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  uint64_t v798;
  uint64_t v799;
  uint64_t v800;
  uint64_t v801;
  uint64_t v802;
  uint64_t v803;
  uint64_t v804;
  void *v805;
  void *v806;
  void *v807;
  void *v808;
  void *v809;
  void *v810;
  char *v811;
  char *v812;
  char *v813;
  char *v814;
  unsigned int (**v815)(const void *, uint64_t, uint64_t);
  unsigned int (**v816)(const void *, uint64_t, uint64_t);
  unsigned int (**v817)(const void *, uint64_t, uint64_t);
  char *__dst;
  char *__dsta;
  char *__dstb;
  char *__dstr;
  unsigned int (**__dstc)(const void *, uint64_t, uint64_t);
  unsigned int (**__dstd)(const void *, uint64_t, uint64_t);
  unsigned int (**__dste)(const void *, uint64_t, uint64_t);
  char *__dstf;
  char *__dstg;
  char *__dsth;
  char *__dsts;
  unsigned int (**__dsti)(const void *, uint64_t, uint64_t);
  unsigned int (**__dstj)(const void *, uint64_t, uint64_t);
  unsigned int (**__dstk)(const void *, uint64_t, uint64_t);
  void *__dstl;
  void *__dstm;
  void *__dstn;
  void *__dsto;
  void *__dstp;
  void *__dstq;
  char *__dstt;
  char *__dstu;
  uint64_t v840;
  uint64_t v841;
  uint64_t v842;
  uint64_t v843;
  uint64_t v844;
  uint64_t v845;
  char *v846;
  char *v847;
  uint64_t v848;
  uint64_t v849;
  uint64_t v850;
  uint64_t v851;
  uint64_t v852;
  uint64_t v853;
  char *v854;
  char *v855;
  uint64_t v856;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  v6 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  v7 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  v8 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v9 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v10 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  v11 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v11)
    {
      v12 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v11;
      *(_QWORD *)(a1 + 72) = v12;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v11)
  {
    v13 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v11;
    *(_QWORD *)(a1 + 72) = v13;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_8:
  v14 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);

  v15 = *(void **)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);

  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v16 = *(void **)(a1 + 120);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);

  v17 = *(_QWORD *)(a2 + 128);
  if (*(_QWORD *)(a1 + 128))
  {
    if (v17)
    {
      v18 = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 128) = v17;
      *(_QWORD *)(a1 + 136) = v18;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v17)
  {
    v19 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = v17;
    *(_QWORD *)(a1 + 136) = v19;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
LABEL_15:
  v20 = *(_QWORD *)(a2 + 152);
  v21 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v20;
  swift_bridgeObjectRelease(v21);
  v22 = *(void **)(a1 + 160);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);

  v23 = *(_QWORD *)(a2 + 168);
  if (*(_QWORD *)(a1 + 168))
  {
    if (v23)
    {
      v24 = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 168) = v23;
      *(_QWORD *)(a1 + 176) = v24;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v23)
  {
    v25 = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 168) = v23;
    *(_QWORD *)(a1 + 176) = v25;
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
LABEL_22:
  v26 = *(_QWORD *)(a2 + 192);
  v27 = *(_QWORD *)(a1 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v26;
  swift_bridgeObjectRelease(v27);
  v28 = *(_QWORD *)(a2 + 200);
  if (*(_QWORD *)(a1 + 200))
  {
    if (v28)
    {
      v29 = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 200) = v28;
      *(_QWORD *)(a1 + 208) = v29;
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v28)
  {
    v30 = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 200) = v28;
    *(_QWORD *)(a1 + 208) = v30;
    goto LABEL_29;
  }
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
LABEL_29:
  *(_WORD *)(a1 + 216) = *(_WORD *)(a2 + 216);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  v31 = *(void **)(a1 + 232);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);

  v32 = *(_QWORD *)(a2 + 240);
  if (*(_QWORD *)(a1 + 240))
  {
    if (v32)
    {
      v33 = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 240) = v32;
      *(_QWORD *)(a1 + 248) = v33;
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else if (v32)
  {
    v34 = *(_QWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 240) = v32;
    *(_QWORD *)(a1 + 248) = v34;
    goto LABEL_36;
  }
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
LABEL_36:
  v35 = *(_QWORD *)(a1 + 256);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_bridgeObjectRelease(v35);
  v36 = *(_QWORD *)(a2 + 264);
  if (*(_QWORD *)(a1 + 264))
  {
    if (v36)
    {
      v37 = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 264) = v36;
      *(_QWORD *)(a1 + 272) = v37;
      swift_release();
      goto LABEL_43;
    }
    swift_release();
  }
  else if (v36)
  {
    v38 = *(_QWORD *)(a2 + 272);
    *(_QWORD *)(a1 + 264) = v36;
    *(_QWORD *)(a1 + 272) = v38;
    goto LABEL_43;
  }
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
LABEL_43:
  v39 = a3[17];
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = *(_QWORD *)(a2 + v39 + 8);
  v43 = *(_QWORD *)(a1 + v39);
  *(_QWORD *)(a1 + v39) = *(_QWORD *)(a2 + v39);
  swift_unknownObjectRelease(v43);
  *(_QWORD *)(v40 + 8) = v42;
  v44 = *(int *)(sub_10002A750(&qword_10064CB68) + 28);
  v45 = (_QWORD *)(v40 + v44);
  v46 = (_QWORD *)(v41 + v44);
  v47 = sub_10002A750(&qword_10064CBB8);
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v48 + 48);
  v50 = v49(v45, 1, v47);
  v51 = v49(v46, 1, v47);
  if (v50)
  {
    if (!v51)
    {
      v53 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(v46, v53))
      {
        case 0u:
          v54 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v46, v54))
          {
            case 2u:
              v55 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v45, v46, v55);
              v56 = v45;
              v57 = v54;
              v58 = 2;
              goto LABEL_98;
            case 3u:
              v168 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v168 - 8) + 32))(v45, v46, v168);
              v56 = v45;
              v57 = v54;
              v58 = 3;
              goto LABEL_98;
            case 4u:
              v169 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v169 - 8) + 32))(v45, v46, v169);
              v56 = v45;
              v57 = v54;
              v58 = 4;
              goto LABEL_98;
            case 5u:
              v170 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(v45, v46, v170);
              v56 = v45;
              v57 = v54;
              v58 = 5;
              goto LABEL_98;
            case 6u:
              v171 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v171 - 8) + 32))(v45, v46, v171);
              v56 = v45;
              v57 = v54;
              v58 = 6;
LABEL_98:
              swift_storeEnumTagMultiPayload(v56, v57, v58);
              break;
            default:
              memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
              break;
          }
          v172 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v173 = v172[5];
          v174 = (_OWORD *)((char *)v45 + v173);
          v175 = (_OWORD *)((char *)v46 + v173);
          v176 = v175[3];
          v174[2] = v175[2];
          v174[3] = v176;
          v177 = v175[1];
          *v174 = *v175;
          v174[1] = v177;
          *(_OWORD *)((char *)v174 + 106) = *(_OWORD *)((char *)v175 + 106);
          v178 = v175[6];
          v179 = v175[4];
          v174[5] = v175[5];
          v174[6] = v178;
          v174[4] = v179;
          *((_BYTE *)v45 + v172[6]) = *((_BYTE *)v46 + v172[6]);
          *((_BYTE *)v45 + v172[7]) = *((_BYTE *)v46 + v172[7]);
          *((_BYTE *)v45 + v172[8]) = *((_BYTE *)v46 + v172[8]);
          *((_BYTE *)v45 + v172[9]) = *((_BYTE *)v46 + v172[9]);
          *((_BYTE *)v45 + v172[10]) = *((_BYTE *)v46 + v172[10]);
          *(_QWORD *)((char *)v45 + v172[11]) = *(_QWORD *)((char *)v46 + v172[11]);
          v100 = v45;
          v101 = v53;
          v102 = 0;
          goto LABEL_155;
        case 1u:
          v66 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v46, v66))
          {
            case 2u:
              v67 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v45, v46, v67);
              v68 = v45;
              v69 = v66;
              v70 = 2;
              goto LABEL_105;
            case 3u:
              v180 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v180 - 8) + 32))(v45, v46, v180);
              v68 = v45;
              v69 = v66;
              v70 = 3;
              goto LABEL_105;
            case 4u:
              v181 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(v45, v46, v181);
              v68 = v45;
              v69 = v66;
              v70 = 4;
              goto LABEL_105;
            case 5u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v182 - 8) + 32))(v45, v46, v182);
              v68 = v45;
              v69 = v66;
              v70 = 5;
              goto LABEL_105;
            case 6u:
              v183 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v45, v46, v183);
              v68 = v45;
              v69 = v66;
              v70 = 6;
LABEL_105:
              swift_storeEnumTagMultiPayload(v68, v69, v70);
              break;
            default:
              memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
              break;
          }
          v184 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v185 = v184[5];
          v186 = (_OWORD *)((char *)v45 + v185);
          v187 = (_OWORD *)((char *)v46 + v185);
          v188 = v187[3];
          v186[2] = v187[2];
          v186[3] = v188;
          v189 = v187[1];
          *v186 = *v187;
          v186[1] = v189;
          *(_OWORD *)((char *)v186 + 106) = *(_OWORD *)((char *)v187 + 106);
          v190 = v187[6];
          v191 = v187[4];
          v186[5] = v187[5];
          v186[6] = v190;
          v186[4] = v191;
          *((_BYTE *)v45 + v184[6]) = *((_BYTE *)v46 + v184[6]);
          *((_BYTE *)v45 + v184[7]) = *((_BYTE *)v46 + v184[7]);
          *((_BYTE *)v45 + v184[8]) = *((_BYTE *)v46 + v184[8]);
          *((_BYTE *)v45 + v184[9]) = *((_BYTE *)v46 + v184[9]);
          *((_BYTE *)v45 + v184[10]) = *((_BYTE *)v46 + v184[10]);
          *(_QWORD *)((char *)v45 + v184[11]) = *(_QWORD *)((char *)v46 + v184[11]);
          v100 = v45;
          v101 = v53;
          v102 = 1;
          goto LABEL_155;
        case 2u:
          v840 = v53;
          *v45 = *v46;
          v71 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          __dst = (char *)v45 + v71;
          v72 = (char *)v46 + v71;
          v73 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v74 = *(_QWORD *)(v73 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
          {
            v75 = sub_10002A750(&qword_100644980);
            memcpy(__dst, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
            v76 = v840;
          }
          else
          {
            v800 = v74;
            v805 = (void *)v73;
            v142 = swift_getEnumCaseMultiPayload(v72, v73) - 2;
            v76 = v840;
            switch(v142)
            {
              case 0:
                v143 = type metadata accessor for Date(0);
                v144 = __dst;
                (*(void (**)(void))(*(_QWORD *)(v143 - 8) + 32))();
                v145 = __dst;
                v146 = v805;
                v147 = v805;
                v148 = 2;
                goto LABEL_136;
              case 1:
                v241 = type metadata accessor for Date(0);
                v144 = __dst;
                (*(void (**)(void))(*(_QWORD *)(v241 - 8) + 32))();
                v145 = __dst;
                v146 = v805;
                v147 = v805;
                v148 = 3;
                goto LABEL_136;
              case 2:
                v242 = type metadata accessor for Date(0);
                v144 = __dst;
                (*(void (**)(void))(*(_QWORD *)(v242 - 8) + 32))();
                v145 = __dst;
                v146 = v805;
                v147 = v805;
                v148 = 4;
                goto LABEL_136;
              case 3:
                v243 = type metadata accessor for Date(0);
                v144 = __dst;
                (*(void (**)(void))(*(_QWORD *)(v243 - 8) + 32))();
                v145 = __dst;
                v146 = v805;
                v147 = v805;
                v148 = 5;
                goto LABEL_136;
              case 4:
                v244 = type metadata accessor for Date(0);
                v144 = __dst;
                (*(void (**)(void))(*(_QWORD *)(v244 - 8) + 32))();
                v145 = __dst;
                v146 = v805;
                v147 = v805;
                v148 = 6;
LABEL_136:
                swift_storeEnumTagMultiPayload(v145, v147, v148);
                v240 = v800;
                break;
              default:
                v144 = __dst;
                memcpy(__dst, v72, *(_QWORD *)(v800 + 64));
                v240 = v800;
                v146 = v805;
                v76 = v840;
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, void *))(v240 + 56))(v144, 0, 1, v146);
          }
          v100 = v45;
          v101 = v76;
          v102 = 2;
          goto LABEL_155;
        case 3u:
          v841 = v53;
          *v45 = *v46;
          v77 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          __dsta = (char *)v45 + v77;
          v78 = (char *)v46 + v77;
          v79 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v80 = *(_QWORD *)(v79 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
          {
            v81 = sub_10002A750(&qword_100644980);
            memcpy(__dsta, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
            v82 = v841;
          }
          else
          {
            v806 = (void *)v79;
            switch(swift_getEnumCaseMultiPayload(v78, v79))
            {
              case 2u:
                v149 = type metadata accessor for Date(0);
                v150 = __dsta;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 32))(__dsta, v78, v149);
                v151 = __dsta;
                v152 = v806;
                v153 = v806;
                v154 = 2;
                goto LABEL_144;
              case 3u:
                v246 = type metadata accessor for Date(0);
                v150 = __dsta;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v246 - 8) + 32))(__dsta, v78, v246);
                v151 = __dsta;
                v152 = v806;
                v153 = v806;
                v154 = 3;
                goto LABEL_144;
              case 4u:
                v247 = type metadata accessor for Date(0);
                v150 = __dsta;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v247 - 8) + 32))(__dsta, v78, v247);
                v151 = __dsta;
                v152 = v806;
                v153 = v806;
                v154 = 4;
                goto LABEL_144;
              case 5u:
                v248 = type metadata accessor for Date(0);
                v150 = __dsta;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v248 - 8) + 32))(__dsta, v78, v248);
                v151 = __dsta;
                v152 = v806;
                v153 = v806;
                v154 = 5;
                goto LABEL_144;
              case 6u:
                v249 = type metadata accessor for Date(0);
                v150 = __dsta;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v249 - 8) + 32))(__dsta, v78, v249);
                v151 = __dsta;
                v152 = v806;
                v153 = v806;
                v154 = 6;
LABEL_144:
                swift_storeEnumTagMultiPayload(v151, v153, v154);
                v245 = v80;
                break;
              default:
                v150 = __dsta;
                memcpy(__dsta, v78, *(_QWORD *)(v80 + 64));
                v245 = v80;
                v152 = v806;
                break;
            }
            v82 = v841;
            (*(void (**)(char *, _QWORD, uint64_t, void *))(v245 + 56))(v150, 0, 1, v152);
          }
          v100 = v45;
          v101 = v82;
          v102 = 3;
          goto LABEL_155;
        case 4u:
          v842 = v53;
          *v45 = *v46;
          v83 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          __dstb = (char *)v45 + v83;
          v84 = (char *)v46 + v83;
          v85 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v86 = *(_QWORD *)(v85 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v84, 1, v85))
          {
            v87 = sub_10002A750(&qword_100644980);
            memcpy(__dstb, v84, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
            v88 = v842;
          }
          else
          {
            v807 = (void *)v85;
            switch(swift_getEnumCaseMultiPayload(v84, v85))
            {
              case 2u:
                v155 = type metadata accessor for Date(0);
                v156 = __dstb;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v155 - 8) + 32))(__dstb, v84, v155);
                v157 = __dstb;
                v158 = v807;
                v159 = v807;
                v160 = 2;
                goto LABEL_152;
              case 3u:
                v251 = type metadata accessor for Date(0);
                v156 = __dstb;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v251 - 8) + 32))(__dstb, v84, v251);
                v157 = __dstb;
                v158 = v807;
                v159 = v807;
                v160 = 3;
                goto LABEL_152;
              case 4u:
                v252 = type metadata accessor for Date(0);
                v156 = __dstb;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v252 - 8) + 32))(__dstb, v84, v252);
                v157 = __dstb;
                v158 = v807;
                v159 = v807;
                v160 = 4;
                goto LABEL_152;
              case 5u:
                v253 = type metadata accessor for Date(0);
                v156 = __dstb;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v253 - 8) + 32))(__dstb, v84, v253);
                v157 = __dstb;
                v158 = v807;
                v159 = v807;
                v160 = 5;
                goto LABEL_152;
              case 6u:
                v254 = type metadata accessor for Date(0);
                v156 = __dstb;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v254 - 8) + 32))(__dstb, v84, v254);
                v157 = __dstb;
                v158 = v807;
                v159 = v807;
                v160 = 6;
LABEL_152:
                swift_storeEnumTagMultiPayload(v157, v159, v160);
                v250 = v86;
                break;
              default:
                v156 = __dstb;
                memcpy(__dstb, v84, *(_QWORD *)(v86 + 64));
                v250 = v86;
                v158 = v807;
                break;
            }
            v88 = v842;
            (*(void (**)(char *, _QWORD, uint64_t, void *))(v250 + 56))(v156, 0, 1, v158);
          }
          v100 = v45;
          v101 = v88;
          v102 = 4;
          goto LABEL_155;
        case 7u:
          v90 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v91 = *(_QWORD *)(v90 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v91 + 48))(v46, 1, v90))
          {
            v92 = sub_10002A750(&qword_100644600);
            memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
          }
          else
          {
            *v45 = *v46;
            v161 = *(int *)(v90 + 20);
            __dstr = (char *)v46 + v161;
            v846 = (char *)v45 + v161;
            v162 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 32))(v846, __dstr, v162);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v45, 0, 1, v90);
          }
          v163 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v164 = (char *)v45 + v163;
          v165 = (char *)v46 + v163;
          *(_OWORD *)v164 = *(_OWORD *)v165;
          *((_QWORD *)v164 + 2) = *((_QWORD *)v165 + 2);
          v100 = v45;
          v101 = v53;
          v102 = 7;
          goto LABEL_155;
        case 8u:
          v93 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v94 = *(_QWORD *)(v93 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v94 + 48))(v46, 1, v93))
          {
            v95 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
          }
          else
          {
            v166 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v166 - 8) + 32))(v45, v46, v166);
            *((_BYTE *)v45 + *(int *)(v93 + 20)) = *((_BYTE *)v46 + *(int *)(v93 + 20));
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v45, 0, 1, v93);
          }
          v167 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)((char *)v45 + *(int *)(v167 + 20)) = *(_QWORD *)((char *)v46 + *(int *)(v167 + 20));
          v100 = v45;
          v101 = v53;
          v102 = 8;
          goto LABEL_155;
        case 9u:
          *(_BYTE *)v45 = *(_BYTE *)v46;
          v96 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v97 = (char *)v45 + v96;
          v98 = (char *)v46 + v96;
          v99 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v97, v98, v99);
          v100 = v45;
          v101 = v53;
          v102 = 9;
LABEL_155:
          swift_storeEnumTagMultiPayload(v100, v101, v102);
          break;
        default:
          memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
          break;
      }
      v255 = (int *)type metadata accessor for TTRReminderCellTitleViewModel(0, v89);
      *((_BYTE *)v45 + v255[5]) = *((_BYTE *)v46 + v255[5]);
      *(_QWORD *)((char *)v45 + v255[6]) = *(_QWORD *)((char *)v46 + v255[6]);
      *(_QWORD *)((char *)v45 + v255[7]) = *(_QWORD *)((char *)v46 + v255[7]);
      *((_BYTE *)v45 + v255[8]) = *((_BYTE *)v46 + v255[8]);
      v256 = v255[9];
      v257 = (char *)v45 + v256;
      v258 = (char *)v46 + v256;
      *(_QWORD *)v257 = *(_QWORD *)v258;
      v257[8] = v258[8];
      *(_QWORD *)((char *)v45 + v255[10]) = *(_QWORD *)((char *)v46 + v255[10]);
      *(_QWORD *)((char *)v45 + v255[11]) = *(_QWORD *)((char *)v46 + v255[11]);
      *(_QWORD *)((char *)v45 + *(int *)(v47 + 48)) = *(_QWORD *)((char *)v46 + *(int *)(v47 + 48));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      goto LABEL_183;
    }
LABEL_50:
    v59 = sub_10002A750(&qword_10064CBB0);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_183;
  }
  if (v51)
  {
    sub_1000073A0((uint64_t)v45, &qword_10064CBB8);
    goto LABEL_50;
  }
  if (a1 != a2)
  {
    sub_10004941C((uint64_t)v45);
    v60 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v46, v60))
    {
      case 0u:
        v61 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v46, v61))
        {
          case 2u:
            v62 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v45, v46, v62);
            v63 = v45;
            v64 = v61;
            v65 = 2;
            goto LABEL_122;
          case 3u:
            v216 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v216 - 8) + 32))(v45, v46, v216);
            v63 = v45;
            v64 = v61;
            v65 = 3;
            goto LABEL_122;
          case 4u:
            v217 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v217 - 8) + 32))(v45, v46, v217);
            v63 = v45;
            v64 = v61;
            v65 = 4;
            goto LABEL_122;
          case 5u:
            v218 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v218 - 8) + 32))(v45, v46, v218);
            v63 = v45;
            v64 = v61;
            v65 = 5;
            goto LABEL_122;
          case 6u:
            v219 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v219 - 8) + 32))(v45, v46, v219);
            v63 = v45;
            v64 = v61;
            v65 = 6;
LABEL_122:
            swift_storeEnumTagMultiPayload(v63, v64, v65);
            break;
          default:
            memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
            break;
        }
        v220 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v221 = v220[5];
        v222 = (_OWORD *)((char *)v45 + v221);
        v223 = (_OWORD *)((char *)v46 + v221);
        v224 = v223[3];
        v222[2] = v223[2];
        v222[3] = v224;
        v225 = v223[1];
        *v222 = *v223;
        v222[1] = v225;
        *(_OWORD *)((char *)v222 + 106) = *(_OWORD *)((char *)v223 + 106);
        v226 = v223[6];
        v227 = v223[4];
        v222[5] = v223[5];
        v222[6] = v226;
        v222[4] = v227;
        *((_BYTE *)v45 + v220[6]) = *((_BYTE *)v46 + v220[6]);
        *((_BYTE *)v45 + v220[7]) = *((_BYTE *)v46 + v220[7]);
        *((_BYTE *)v45 + v220[8]) = *((_BYTE *)v46 + v220[8]);
        *((_BYTE *)v45 + v220[9]) = *((_BYTE *)v46 + v220[9]);
        *((_BYTE *)v45 + v220[10]) = *((_BYTE *)v46 + v220[10]);
        *(_QWORD *)((char *)v45 + v220[11]) = *(_QWORD *)((char *)v46 + v220[11]);
        v139 = v45;
        v140 = v60;
        v141 = 0;
        goto LABEL_181;
      case 1u:
        v103 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v46, v103))
        {
          case 2u:
            v104 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v45, v46, v104);
            v105 = v45;
            v106 = v103;
            v107 = 2;
            goto LABEL_129;
          case 3u:
            v228 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v228 - 8) + 32))(v45, v46, v228);
            v105 = v45;
            v106 = v103;
            v107 = 3;
            goto LABEL_129;
          case 4u:
            v229 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v229 - 8) + 32))(v45, v46, v229);
            v105 = v45;
            v106 = v103;
            v107 = 4;
            goto LABEL_129;
          case 5u:
            v230 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v230 - 8) + 32))(v45, v46, v230);
            v105 = v45;
            v106 = v103;
            v107 = 5;
            goto LABEL_129;
          case 6u:
            v231 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v231 - 8) + 32))(v45, v46, v231);
            v105 = v45;
            v106 = v103;
            v107 = 6;
LABEL_129:
            swift_storeEnumTagMultiPayload(v105, v106, v107);
            break;
          default:
            memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
            break;
        }
        v232 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v233 = v232[5];
        v234 = (_OWORD *)((char *)v45 + v233);
        v235 = (_OWORD *)((char *)v46 + v233);
        v236 = v235[3];
        v234[2] = v235[2];
        v234[3] = v236;
        v237 = v235[1];
        *v234 = *v235;
        v234[1] = v237;
        *(_OWORD *)((char *)v234 + 106) = *(_OWORD *)((char *)v235 + 106);
        v238 = v235[6];
        v239 = v235[4];
        v234[5] = v235[5];
        v234[6] = v238;
        v234[4] = v239;
        *((_BYTE *)v45 + v232[6]) = *((_BYTE *)v46 + v232[6]);
        *((_BYTE *)v45 + v232[7]) = *((_BYTE *)v46 + v232[7]);
        *((_BYTE *)v45 + v232[8]) = *((_BYTE *)v46 + v232[8]);
        *((_BYTE *)v45 + v232[9]) = *((_BYTE *)v46 + v232[9]);
        *((_BYTE *)v45 + v232[10]) = *((_BYTE *)v46 + v232[10]);
        *(_QWORD *)((char *)v45 + v232[11]) = *(_QWORD *)((char *)v46 + v232[11]);
        v139 = v45;
        v140 = v60;
        v141 = 1;
        goto LABEL_181;
      case 2u:
        v843 = v60;
        *v45 = *v46;
        v108 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v109 = (char *)v45 + v108;
        v110 = (char *)v46 + v108;
        v111 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v112 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v111 - 8);
        if (v112[6](v110, 1, v111))
        {
          v113 = sub_10002A750(&qword_100644980);
          memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
          v114 = v843;
        }
        else
        {
          __dstc = v112;
          v114 = v843;
          switch(swift_getEnumCaseMultiPayload(v110, v111))
          {
            case 2u:
              v192 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32))(v109, v110, v192);
              v193 = v109;
              v194 = v111;
              v195 = 2;
              goto LABEL_162;
            case 3u:
              v259 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v259 - 8) + 32))(v109, v110, v259);
              v193 = v109;
              v194 = v111;
              v195 = 3;
              goto LABEL_162;
            case 4u:
              v260 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v260 - 8) + 32))(v109, v110, v260);
              v193 = v109;
              v194 = v111;
              v195 = 4;
              goto LABEL_162;
            case 5u:
              v261 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v261 - 8) + 32))(v109, v110, v261);
              v193 = v109;
              v194 = v111;
              v195 = 5;
              goto LABEL_162;
            case 6u:
              v262 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v262 - 8) + 32))(v109, v110, v262);
              v193 = v109;
              v194 = v111;
              v195 = 6;
LABEL_162:
              swift_storeEnumTagMultiPayload(v193, v194, v195);
              break;
            default:
              memcpy(v109, v110, (size_t)__dstc[8]);
              v114 = v843;
              break;
          }
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstc[7])(v109, 0, 1, v111);
        }
        v139 = v45;
        v140 = v114;
        v141 = 2;
        goto LABEL_181;
      case 3u:
        v844 = v60;
        *v45 = *v46;
        v115 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v116 = (char *)v45 + v115;
        v117 = (char *)v46 + v115;
        v118 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v119 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v118 - 8);
        if (v119[6](v117, 1, v118))
        {
          v120 = sub_10002A750(&qword_100644980);
          memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
          v121 = v844;
        }
        else
        {
          __dstd = v119;
          v196 = swift_getEnumCaseMultiPayload(v117, v118) - 2;
          v197 = v117;
          v121 = v844;
          switch(v196)
          {
            case 0:
              v198 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v116, v197, v198);
              v199 = v116;
              v200 = v118;
              v201 = 2;
              goto LABEL_170;
            case 1:
              v263 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v263 - 8) + 32))(v116, v197, v263);
              v199 = v116;
              v200 = v118;
              v201 = 3;
              goto LABEL_170;
            case 2:
              v264 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v264 - 8) + 32))(v116, v197, v264);
              v199 = v116;
              v200 = v118;
              v201 = 4;
              goto LABEL_170;
            case 3:
              v265 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v265 - 8) + 32))(v116, v197, v265);
              v199 = v116;
              v200 = v118;
              v201 = 5;
              goto LABEL_170;
            case 4:
              v266 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v266 - 8) + 32))(v116, v197, v266);
              v199 = v116;
              v200 = v118;
              v201 = 6;
LABEL_170:
              swift_storeEnumTagMultiPayload(v199, v200, v201);
              break;
            default:
              memcpy(v116, v197, (size_t)__dstd[8]);
              v121 = v844;
              break;
          }
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstd[7])(v116, 0, 1, v118);
        }
        v139 = v45;
        v140 = v121;
        v141 = 3;
        goto LABEL_181;
      case 4u:
        v845 = v60;
        *v45 = *v46;
        v122 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v123 = (char *)v45 + v122;
        v124 = (char *)v46 + v122;
        v125 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v126 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v125 - 8);
        if (v126[6](v124, 1, v125))
        {
          v127 = sub_10002A750(&qword_100644980);
          memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
          v128 = v845;
        }
        else
        {
          __dste = v126;
          v202 = swift_getEnumCaseMultiPayload(v124, v125) - 2;
          v203 = v124;
          v128 = v845;
          switch(v202)
          {
            case 0:
              v204 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v204 - 8) + 32))(v123, v203, v204);
              v205 = v123;
              v206 = v125;
              v207 = 2;
              goto LABEL_178;
            case 1:
              v267 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v267 - 8) + 32))(v123, v203, v267);
              v205 = v123;
              v206 = v125;
              v207 = 3;
              goto LABEL_178;
            case 2:
              v268 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v268 - 8) + 32))(v123, v203, v268);
              v205 = v123;
              v206 = v125;
              v207 = 4;
              goto LABEL_178;
            case 3:
              v269 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v269 - 8) + 32))(v123, v203, v269);
              v205 = v123;
              v206 = v125;
              v207 = 5;
              goto LABEL_178;
            case 4:
              v270 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v270 - 8) + 32))(v123, v203, v270);
              v205 = v123;
              v206 = v125;
              v207 = 6;
LABEL_178:
              swift_storeEnumTagMultiPayload(v205, v206, v207);
              break;
            default:
              memcpy(v123, v203, (size_t)__dste[8]);
              v128 = v845;
              break;
          }
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dste[7])(v123, 0, 1, v125);
        }
        v139 = v45;
        v140 = v128;
        v141 = 4;
        goto LABEL_181;
      case 7u:
        v129 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v130 = *(_QWORD *)(v129 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v130 + 48))(v46, 1, v129))
        {
          v131 = sub_10002A750(&qword_100644600);
          memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
        }
        else
        {
          *v45 = *v46;
          v208 = *(int *)(v129 + 20);
          v847 = (char *)v45 + v208;
          v209 = (char *)v46 + v208;
          v210 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v210 - 8) + 32))(v847, v209, v210);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v45, 0, 1, v129);
        }
        v211 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v212 = (char *)v45 + v211;
        v213 = (char *)v46 + v211;
        *(_OWORD *)v212 = *(_OWORD *)v213;
        *((_QWORD *)v212 + 2) = *((_QWORD *)v213 + 2);
        v139 = v45;
        v140 = v60;
        v141 = 7;
        goto LABEL_181;
      case 8u:
        v132 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v133 = *(_QWORD *)(v132 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v133 + 48))(v46, 1, v132))
        {
          v134 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
        }
        else
        {
          v214 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v214 - 8) + 32))(v45, v46, v214);
          *((_BYTE *)v45 + *(int *)(v132 + 20)) = *((_BYTE *)v46 + *(int *)(v132 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v45, 0, 1, v132);
        }
        v215 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)v45 + *(int *)(v215 + 20)) = *(_QWORD *)((char *)v46 + *(int *)(v215 + 20));
        v139 = v45;
        v140 = v60;
        v141 = 8;
        goto LABEL_181;
      case 9u:
        *(_BYTE *)v45 = *(_BYTE *)v46;
        v135 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v136 = (char *)v45 + v135;
        v137 = (char *)v46 + v135;
        v138 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 32))(v136, v137, v138);
        v139 = v45;
        v140 = v60;
        v141 = 9;
LABEL_181:
        swift_storeEnumTagMultiPayload(v139, v140, v141);
        break;
      default:
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        break;
    }
  }
  v271 = (int *)type metadata accessor for TTRReminderCellTitleViewModel(0, v52);
  *((_BYTE *)v45 + v271[5]) = *((_BYTE *)v46 + v271[5]);
  v272 = v271[6];
  v273 = *(void **)((char *)v45 + v272);
  *(_QWORD *)((char *)v45 + v272) = *(_QWORD *)((char *)v46 + v272);

  v274 = v271[7];
  v275 = *(void **)((char *)v45 + v274);
  *(_QWORD *)((char *)v45 + v274) = *(_QWORD *)((char *)v46 + v274);

  *((_BYTE *)v45 + v271[8]) = *((_BYTE *)v46 + v271[8]);
  v276 = v271[9];
  v277 = (char *)v45 + v276;
  v278 = (char *)v46 + v276;
  *(_QWORD *)v277 = *(_QWORD *)v278;
  v277[8] = v278[8];
  v279 = v271[10];
  v280 = *(_QWORD *)((char *)v45 + v279);
  *(_QWORD *)((char *)v45 + v279) = *(_QWORD *)((char *)v46 + v279);
  swift_bridgeObjectRelease(v280);
  v281 = v271[11];
  v282 = *(void **)((char *)v45 + v281);
  *(_QWORD *)((char *)v45 + v281) = *(_QWORD *)((char *)v46 + v281);

  *(_QWORD *)((char *)v45 + *(int *)(v47 + 48)) = *(_QWORD *)((char *)v46 + *(int *)(v47 + 48));
LABEL_183:
  v283 = a3[18];
  v284 = a1 + v283;
  v285 = a2 + v283;
  *(_BYTE *)v284 = *(_BYTE *)(a2 + v283);
  v286 = *(_QWORD *)(a2 + v283 + 16);
  v287 = *(_QWORD *)(a1 + v283 + 8);
  *(_QWORD *)(v284 + 8) = *(_QWORD *)(a2 + v283 + 8);
  swift_unknownObjectRelease(v287);
  *(_QWORD *)(v284 + 16) = v286;
  v288 = *(int *)(sub_10002A750(&qword_10064CB60) + 40);
  v289 = (_QWORD *)(v284 + v288);
  v290 = (_QWORD *)(v285 + v288);
  v291 = sub_10002A750(&qword_10064CBA0);
  v292 = *(_QWORD *)(v291 - 8);
  v293 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v292 + 48);
  v294 = v293(v289, 1, v291);
  v295 = v293(v290, 1, v291);
  if (v294)
  {
    if (!v295)
    {
      v297 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(v290, v297))
      {
        case 0u:
          v298 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v290, v298))
          {
            case 2u:
              v299 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v299 - 8) + 32))(v289, v290, v299);
              v300 = v289;
              v301 = v298;
              v302 = 2;
              goto LABEL_238;
            case 3u:
              v412 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v412 - 8) + 32))(v289, v290, v412);
              v300 = v289;
              v301 = v298;
              v302 = 3;
              goto LABEL_238;
            case 4u:
              v413 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v413 - 8) + 32))(v289, v290, v413);
              v300 = v289;
              v301 = v298;
              v302 = 4;
              goto LABEL_238;
            case 5u:
              v414 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v414 - 8) + 32))(v289, v290, v414);
              v300 = v289;
              v301 = v298;
              v302 = 5;
              goto LABEL_238;
            case 6u:
              v415 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v415 - 8) + 32))(v289, v290, v415);
              v300 = v289;
              v301 = v298;
              v302 = 6;
LABEL_238:
              swift_storeEnumTagMultiPayload(v300, v301, v302);
              break;
            default:
              memcpy(v289, v290, *(_QWORD *)(*(_QWORD *)(v298 - 8) + 64));
              break;
          }
          v416 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v417 = v416[5];
          v418 = (_OWORD *)((char *)v289 + v417);
          v419 = (_OWORD *)((char *)v290 + v417);
          v420 = v419[3];
          v418[2] = v419[2];
          v418[3] = v420;
          v421 = v419[1];
          *v418 = *v419;
          v418[1] = v421;
          *(_OWORD *)((char *)v418 + 106) = *(_OWORD *)((char *)v419 + 106);
          v422 = v419[6];
          v423 = v419[4];
          v418[5] = v419[5];
          v418[6] = v422;
          v418[4] = v423;
          *((_BYTE *)v289 + v416[6]) = *((_BYTE *)v290 + v416[6]);
          *((_BYTE *)v289 + v416[7]) = *((_BYTE *)v290 + v416[7]);
          *((_BYTE *)v289 + v416[8]) = *((_BYTE *)v290 + v416[8]);
          *((_BYTE *)v289 + v416[9]) = *((_BYTE *)v290 + v416[9]);
          *((_BYTE *)v289 + v416[10]) = *((_BYTE *)v290 + v416[10]);
          *(_QWORD *)((char *)v289 + v416[11]) = *(_QWORD *)((char *)v290 + v416[11]);
          v344 = v289;
          v345 = v297;
          v346 = 0;
          goto LABEL_295;
        case 1u:
          v310 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v290, v310))
          {
            case 2u:
              v311 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v311 - 8) + 32))(v289, v290, v311);
              v312 = v289;
              v313 = v310;
              v314 = 2;
              goto LABEL_245;
            case 3u:
              v424 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v424 - 8) + 32))(v289, v290, v424);
              v312 = v289;
              v313 = v310;
              v314 = 3;
              goto LABEL_245;
            case 4u:
              v425 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v425 - 8) + 32))(v289, v290, v425);
              v312 = v289;
              v313 = v310;
              v314 = 4;
              goto LABEL_245;
            case 5u:
              v426 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v426 - 8) + 32))(v289, v290, v426);
              v312 = v289;
              v313 = v310;
              v314 = 5;
              goto LABEL_245;
            case 6u:
              v427 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v427 - 8) + 32))(v289, v290, v427);
              v312 = v289;
              v313 = v310;
              v314 = 6;
LABEL_245:
              swift_storeEnumTagMultiPayload(v312, v313, v314);
              break;
            default:
              memcpy(v289, v290, *(_QWORD *)(*(_QWORD *)(v310 - 8) + 64));
              break;
          }
          v428 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v429 = v428[5];
          v430 = (_OWORD *)((char *)v289 + v429);
          v431 = (_OWORD *)((char *)v290 + v429);
          v432 = v431[3];
          v430[2] = v431[2];
          v430[3] = v432;
          v433 = v431[1];
          *v430 = *v431;
          v430[1] = v433;
          *(_OWORD *)((char *)v430 + 106) = *(_OWORD *)((char *)v431 + 106);
          v434 = v431[6];
          v435 = v431[4];
          v430[5] = v431[5];
          v430[6] = v434;
          v430[4] = v435;
          *((_BYTE *)v289 + v428[6]) = *((_BYTE *)v290 + v428[6]);
          *((_BYTE *)v289 + v428[7]) = *((_BYTE *)v290 + v428[7]);
          *((_BYTE *)v289 + v428[8]) = *((_BYTE *)v290 + v428[8]);
          *((_BYTE *)v289 + v428[9]) = *((_BYTE *)v290 + v428[9]);
          *((_BYTE *)v289 + v428[10]) = *((_BYTE *)v290 + v428[10]);
          *(_QWORD *)((char *)v289 + v428[11]) = *(_QWORD *)((char *)v290 + v428[11]);
          v344 = v289;
          v345 = v297;
          v346 = 1;
          goto LABEL_295;
        case 2u:
          v848 = v297;
          *v289 = *v290;
          v315 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          __dstf = (char *)v289 + v315;
          v316 = (char *)v290 + v315;
          v317 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v318 = *(_QWORD *)(v317 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v318 + 48))(v316, 1, v317))
          {
            v319 = sub_10002A750(&qword_100644980);
            memcpy(__dstf, v316, *(_QWORD *)(*(_QWORD *)(v319 - 8) + 64));
            v320 = v848;
          }
          else
          {
            v801 = v318;
            v808 = (void *)v317;
            v386 = swift_getEnumCaseMultiPayload(v316, v317) - 2;
            v320 = v848;
            switch(v386)
            {
              case 0:
                v387 = type metadata accessor for Date(0);
                v388 = __dstf;
                (*(void (**)(void))(*(_QWORD *)(v387 - 8) + 32))();
                v389 = __dstf;
                v390 = v808;
                v391 = v808;
                v392 = 2;
                goto LABEL_276;
              case 1:
                v485 = type metadata accessor for Date(0);
                v388 = __dstf;
                (*(void (**)(void))(*(_QWORD *)(v485 - 8) + 32))();
                v389 = __dstf;
                v390 = v808;
                v391 = v808;
                v392 = 3;
                goto LABEL_276;
              case 2:
                v486 = type metadata accessor for Date(0);
                v388 = __dstf;
                (*(void (**)(void))(*(_QWORD *)(v486 - 8) + 32))();
                v389 = __dstf;
                v390 = v808;
                v391 = v808;
                v392 = 4;
                goto LABEL_276;
              case 3:
                v487 = type metadata accessor for Date(0);
                v388 = __dstf;
                (*(void (**)(void))(*(_QWORD *)(v487 - 8) + 32))();
                v389 = __dstf;
                v390 = v808;
                v391 = v808;
                v392 = 5;
                goto LABEL_276;
              case 4:
                v488 = type metadata accessor for Date(0);
                v388 = __dstf;
                (*(void (**)(void))(*(_QWORD *)(v488 - 8) + 32))();
                v389 = __dstf;
                v390 = v808;
                v391 = v808;
                v392 = 6;
LABEL_276:
                swift_storeEnumTagMultiPayload(v389, v391, v392);
                v484 = v801;
                break;
              default:
                v388 = __dstf;
                memcpy(__dstf, v316, *(_QWORD *)(v801 + 64));
                v484 = v801;
                v390 = v808;
                v320 = v848;
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, void *))(v484 + 56))(v388, 0, 1, v390);
          }
          v344 = v289;
          v345 = v320;
          v346 = 2;
          goto LABEL_295;
        case 3u:
          v849 = v297;
          *v289 = *v290;
          v321 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          __dstg = (char *)v289 + v321;
          v322 = (char *)v290 + v321;
          v323 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v324 = *(_QWORD *)(v323 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v324 + 48))(v322, 1, v323))
          {
            v325 = sub_10002A750(&qword_100644980);
            memcpy(__dstg, v322, *(_QWORD *)(*(_QWORD *)(v325 - 8) + 64));
            v326 = v849;
          }
          else
          {
            v809 = (void *)v323;
            switch(swift_getEnumCaseMultiPayload(v322, v323))
            {
              case 2u:
                v393 = type metadata accessor for Date(0);
                v394 = __dstg;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v393 - 8) + 32))(__dstg, v322, v393);
                v395 = __dstg;
                v396 = v809;
                v397 = v809;
                v398 = 2;
                goto LABEL_284;
              case 3u:
                v490 = type metadata accessor for Date(0);
                v394 = __dstg;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v490 - 8) + 32))(__dstg, v322, v490);
                v395 = __dstg;
                v396 = v809;
                v397 = v809;
                v398 = 3;
                goto LABEL_284;
              case 4u:
                v491 = type metadata accessor for Date(0);
                v394 = __dstg;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v491 - 8) + 32))(__dstg, v322, v491);
                v395 = __dstg;
                v396 = v809;
                v397 = v809;
                v398 = 4;
                goto LABEL_284;
              case 5u:
                v492 = type metadata accessor for Date(0);
                v394 = __dstg;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v492 - 8) + 32))(__dstg, v322, v492);
                v395 = __dstg;
                v396 = v809;
                v397 = v809;
                v398 = 5;
                goto LABEL_284;
              case 6u:
                v493 = type metadata accessor for Date(0);
                v394 = __dstg;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v493 - 8) + 32))(__dstg, v322, v493);
                v395 = __dstg;
                v396 = v809;
                v397 = v809;
                v398 = 6;
LABEL_284:
                swift_storeEnumTagMultiPayload(v395, v397, v398);
                v489 = v324;
                break;
              default:
                v394 = __dstg;
                memcpy(__dstg, v322, *(_QWORD *)(v324 + 64));
                v489 = v324;
                v396 = v809;
                break;
            }
            v326 = v849;
            (*(void (**)(char *, _QWORD, uint64_t, void *))(v489 + 56))(v394, 0, 1, v396);
          }
          v344 = v289;
          v345 = v326;
          v346 = 3;
          goto LABEL_295;
        case 4u:
          v850 = v297;
          *v289 = *v290;
          v327 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          __dsth = (char *)v289 + v327;
          v328 = (char *)v290 + v327;
          v329 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v330 = *(_QWORD *)(v329 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v330 + 48))(v328, 1, v329))
          {
            v331 = sub_10002A750(&qword_100644980);
            memcpy(__dsth, v328, *(_QWORD *)(*(_QWORD *)(v331 - 8) + 64));
            v332 = v850;
          }
          else
          {
            v810 = (void *)v329;
            switch(swift_getEnumCaseMultiPayload(v328, v329))
            {
              case 2u:
                v399 = type metadata accessor for Date(0);
                v400 = __dsth;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v399 - 8) + 32))(__dsth, v328, v399);
                v401 = __dsth;
                v402 = v810;
                v403 = v810;
                v404 = 2;
                goto LABEL_292;
              case 3u:
                v495 = type metadata accessor for Date(0);
                v400 = __dsth;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v495 - 8) + 32))(__dsth, v328, v495);
                v401 = __dsth;
                v402 = v810;
                v403 = v810;
                v404 = 3;
                goto LABEL_292;
              case 4u:
                v496 = type metadata accessor for Date(0);
                v400 = __dsth;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v496 - 8) + 32))(__dsth, v328, v496);
                v401 = __dsth;
                v402 = v810;
                v403 = v810;
                v404 = 4;
                goto LABEL_292;
              case 5u:
                v497 = type metadata accessor for Date(0);
                v400 = __dsth;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v497 - 8) + 32))(__dsth, v328, v497);
                v401 = __dsth;
                v402 = v810;
                v403 = v810;
                v404 = 5;
                goto LABEL_292;
              case 6u:
                v498 = type metadata accessor for Date(0);
                v400 = __dsth;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v498 - 8) + 32))(__dsth, v328, v498);
                v401 = __dsth;
                v402 = v810;
                v403 = v810;
                v404 = 6;
LABEL_292:
                swift_storeEnumTagMultiPayload(v401, v403, v404);
                v494 = v330;
                break;
              default:
                v400 = __dsth;
                memcpy(__dsth, v328, *(_QWORD *)(v330 + 64));
                v494 = v330;
                v402 = v810;
                break;
            }
            v332 = v850;
            (*(void (**)(char *, _QWORD, uint64_t, void *))(v494 + 56))(v400, 0, 1, v402);
          }
          v344 = v289;
          v345 = v332;
          v346 = 4;
          goto LABEL_295;
        case 7u:
          v334 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v335 = *(_QWORD *)(v334 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v335 + 48))(v290, 1, v334))
          {
            v336 = sub_10002A750(&qword_100644600);
            memcpy(v289, v290, *(_QWORD *)(*(_QWORD *)(v336 - 8) + 64));
          }
          else
          {
            *v289 = *v290;
            v405 = *(int *)(v334 + 20);
            __dsts = (char *)v290 + v405;
            v854 = (char *)v289 + v405;
            v406 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v406 - 8) + 32))(v854, __dsts, v406);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v335 + 56))(v289, 0, 1, v334);
          }
          v407 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v408 = (char *)v289 + v407;
          v409 = (char *)v290 + v407;
          *(_OWORD *)v408 = *(_OWORD *)v409;
          *((_QWORD *)v408 + 2) = *((_QWORD *)v409 + 2);
          v344 = v289;
          v345 = v297;
          v346 = 7;
          goto LABEL_295;
        case 8u:
          v337 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v338 = *(_QWORD *)(v337 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v338 + 48))(v290, 1, v337))
          {
            v339 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(v289, v290, *(_QWORD *)(*(_QWORD *)(v339 - 8) + 64));
          }
          else
          {
            v410 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v410 - 8) + 32))(v289, v290, v410);
            *((_BYTE *)v289 + *(int *)(v337 + 20)) = *((_BYTE *)v290 + *(int *)(v337 + 20));
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v338 + 56))(v289, 0, 1, v337);
          }
          v411 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)((char *)v289 + *(int *)(v411 + 20)) = *(_QWORD *)((char *)v290 + *(int *)(v411 + 20));
          v344 = v289;
          v345 = v297;
          v346 = 8;
          goto LABEL_295;
        case 9u:
          *(_BYTE *)v289 = *(_BYTE *)v290;
          v340 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v341 = (char *)v289 + v340;
          v342 = (char *)v290 + v340;
          v343 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v343 - 8) + 32))(v341, v342, v343);
          v344 = v289;
          v345 = v297;
          v346 = 9;
LABEL_295:
          swift_storeEnumTagMultiPayload(v344, v345, v346);
          break;
        default:
          memcpy(v289, v290, *(_QWORD *)(*(_QWORD *)(v297 - 8) + 64));
          break;
      }
      v499 = (int *)type metadata accessor for TTRIReminderCellNotesViewModel(0, v333);
      *((_BYTE *)v289 + v499[5]) = *((_BYTE *)v290 + v499[5]);
      *(_QWORD *)((char *)v289 + v499[6]) = *(_QWORD *)((char *)v290 + v499[6]);
      *(_QWORD *)((char *)v289 + v499[7]) = *(_QWORD *)((char *)v290 + v499[7]);
      *(_QWORD *)((char *)v289 + v499[8]) = *(_QWORD *)((char *)v290 + v499[8]);
      *((_BYTE *)v289 + v499[9]) = *((_BYTE *)v290 + v499[9]);
      *(_QWORD *)((char *)v289 + *(int *)(v291 + 48)) = *(_QWORD *)((char *)v290 + *(int *)(v291 + 48));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v292 + 56))(v289, 0, 1, v291);
      goto LABEL_323;
    }
LABEL_190:
    v303 = sub_10002A750(&qword_10064CB98);
    memcpy(v289, v290, *(_QWORD *)(*(_QWORD *)(v303 - 8) + 64));
    goto LABEL_323;
  }
  if (v295)
  {
    sub_1000073A0((uint64_t)v289, &qword_10064CBA0);
    goto LABEL_190;
  }
  if (a1 != a2)
  {
    sub_10004941C((uint64_t)v289);
    v304 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v290, v304))
    {
      case 0u:
        v305 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v290, v305))
        {
          case 2u:
            v306 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v306 - 8) + 32))(v289, v290, v306);
            v307 = v289;
            v308 = v305;
            v309 = 2;
            goto LABEL_262;
          case 3u:
            v460 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v460 - 8) + 32))(v289, v290, v460);
            v307 = v289;
            v308 = v305;
            v309 = 3;
            goto LABEL_262;
          case 4u:
            v461 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v461 - 8) + 32))(v289, v290, v461);
            v307 = v289;
            v308 = v305;
            v309 = 4;
            goto LABEL_262;
          case 5u:
            v462 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v462 - 8) + 32))(v289, v290, v462);
            v307 = v289;
            v308 = v305;
            v309 = 5;
            goto LABEL_262;
          case 6u:
            v463 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v463 - 8) + 32))(v289, v290, v463);
            v307 = v289;
            v308 = v305;
            v309 = 6;
LABEL_262:
            swift_storeEnumTagMultiPayload(v307, v308, v309);
            break;
          default:
            memcpy(v289, v290, *(_QWORD *)(*(_QWORD *)(v305 - 8) + 64));
            break;
        }
        v464 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v465 = v464[5];
        v466 = (_OWORD *)((char *)v289 + v465);
        v467 = (_OWORD *)((char *)v290 + v465);
        v468 = v467[3];
        v466[2] = v467[2];
        v466[3] = v468;
        v469 = v467[1];
        *v466 = *v467;
        v466[1] = v469;
        *(_OWORD *)((char *)v466 + 106) = *(_OWORD *)((char *)v467 + 106);
        v470 = v467[6];
        v471 = v467[4];
        v466[5] = v467[5];
        v466[6] = v470;
        v466[4] = v471;
        *((_BYTE *)v289 + v464[6]) = *((_BYTE *)v290 + v464[6]);
        *((_BYTE *)v289 + v464[7]) = *((_BYTE *)v290 + v464[7]);
        *((_BYTE *)v289 + v464[8]) = *((_BYTE *)v290 + v464[8]);
        *((_BYTE *)v289 + v464[9]) = *((_BYTE *)v290 + v464[9]);
        *((_BYTE *)v289 + v464[10]) = *((_BYTE *)v290 + v464[10]);
        *(_QWORD *)((char *)v289 + v464[11]) = *(_QWORD *)((char *)v290 + v464[11]);
        v383 = v289;
        v384 = v304;
        v385 = 0;
        goto LABEL_321;
      case 1u:
        v347 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v290, v347))
        {
          case 2u:
            v348 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v348 - 8) + 32))(v289, v290, v348);
            v349 = v289;
            v350 = v347;
            v351 = 2;
            goto LABEL_269;
          case 3u:
            v472 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v472 - 8) + 32))(v289, v290, v472);
            v349 = v289;
            v350 = v347;
            v351 = 3;
            goto LABEL_269;
          case 4u:
            v473 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v473 - 8) + 32))(v289, v290, v473);
            v349 = v289;
            v350 = v347;
            v351 = 4;
            goto LABEL_269;
          case 5u:
            v474 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v474 - 8) + 32))(v289, v290, v474);
            v349 = v289;
            v350 = v347;
            v351 = 5;
            goto LABEL_269;
          case 6u:
            v475 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v475 - 8) + 32))(v289, v290, v475);
            v349 = v289;
            v350 = v347;
            v351 = 6;
LABEL_269:
            swift_storeEnumTagMultiPayload(v349, v350, v351);
            break;
          default:
            memcpy(v289, v290, *(_QWORD *)(*(_QWORD *)(v347 - 8) + 64));
            break;
        }
        v476 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v477 = v476[5];
        v478 = (_OWORD *)((char *)v289 + v477);
        v479 = (_OWORD *)((char *)v290 + v477);
        v480 = v479[3];
        v478[2] = v479[2];
        v478[3] = v480;
        v481 = v479[1];
        *v478 = *v479;
        v478[1] = v481;
        *(_OWORD *)((char *)v478 + 106) = *(_OWORD *)((char *)v479 + 106);
        v482 = v479[6];
        v483 = v479[4];
        v478[5] = v479[5];
        v478[6] = v482;
        v478[4] = v483;
        *((_BYTE *)v289 + v476[6]) = *((_BYTE *)v290 + v476[6]);
        *((_BYTE *)v289 + v476[7]) = *((_BYTE *)v290 + v476[7]);
        *((_BYTE *)v289 + v476[8]) = *((_BYTE *)v290 + v476[8]);
        *((_BYTE *)v289 + v476[9]) = *((_BYTE *)v290 + v476[9]);
        *((_BYTE *)v289 + v476[10]) = *((_BYTE *)v290 + v476[10]);
        *(_QWORD *)((char *)v289 + v476[11]) = *(_QWORD *)((char *)v290 + v476[11]);
        v383 = v289;
        v384 = v304;
        v385 = 1;
        goto LABEL_321;
      case 2u:
        v851 = v304;
        *v289 = *v290;
        v352 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v353 = (char *)v289 + v352;
        v354 = (char *)v290 + v352;
        v355 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v356 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v355 - 8);
        if (v356[6](v354, 1, v355))
        {
          v357 = sub_10002A750(&qword_100644980);
          memcpy(v353, v354, *(_QWORD *)(*(_QWORD *)(v357 - 8) + 64));
          v358 = v851;
        }
        else
        {
          __dsti = v356;
          v358 = v851;
          switch(swift_getEnumCaseMultiPayload(v354, v355))
          {
            case 2u:
              v436 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v436 - 8) + 32))(v353, v354, v436);
              v437 = v353;
              v438 = v355;
              v439 = 2;
              goto LABEL_302;
            case 3u:
              v500 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v500 - 8) + 32))(v353, v354, v500);
              v437 = v353;
              v438 = v355;
              v439 = 3;
              goto LABEL_302;
            case 4u:
              v501 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v501 - 8) + 32))(v353, v354, v501);
              v437 = v353;
              v438 = v355;
              v439 = 4;
              goto LABEL_302;
            case 5u:
              v502 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v502 - 8) + 32))(v353, v354, v502);
              v437 = v353;
              v438 = v355;
              v439 = 5;
              goto LABEL_302;
            case 6u:
              v503 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v503 - 8) + 32))(v353, v354, v503);
              v437 = v353;
              v438 = v355;
              v439 = 6;
LABEL_302:
              swift_storeEnumTagMultiPayload(v437, v438, v439);
              break;
            default:
              memcpy(v353, v354, (size_t)__dsti[8]);
              v358 = v851;
              break;
          }
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dsti[7])(v353, 0, 1, v355);
        }
        v383 = v289;
        v384 = v358;
        v385 = 2;
        goto LABEL_321;
      case 3u:
        v852 = v304;
        *v289 = *v290;
        v359 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v360 = (char *)v289 + v359;
        v361 = (char *)v290 + v359;
        v362 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v363 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v362 - 8);
        if (v363[6](v361, 1, v362))
        {
          v364 = sub_10002A750(&qword_100644980);
          memcpy(v360, v361, *(_QWORD *)(*(_QWORD *)(v364 - 8) + 64));
          v365 = v852;
        }
        else
        {
          __dstj = v363;
          v440 = swift_getEnumCaseMultiPayload(v361, v362) - 2;
          v441 = v361;
          v365 = v852;
          switch(v440)
          {
            case 0:
              v442 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v442 - 8) + 32))(v360, v441, v442);
              v443 = v360;
              v444 = v362;
              v445 = 2;
              goto LABEL_310;
            case 1:
              v504 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v504 - 8) + 32))(v360, v441, v504);
              v443 = v360;
              v444 = v362;
              v445 = 3;
              goto LABEL_310;
            case 2:
              v505 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v505 - 8) + 32))(v360, v441, v505);
              v443 = v360;
              v444 = v362;
              v445 = 4;
              goto LABEL_310;
            case 3:
              v506 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v506 - 8) + 32))(v360, v441, v506);
              v443 = v360;
              v444 = v362;
              v445 = 5;
              goto LABEL_310;
            case 4:
              v507 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v507 - 8) + 32))(v360, v441, v507);
              v443 = v360;
              v444 = v362;
              v445 = 6;
LABEL_310:
              swift_storeEnumTagMultiPayload(v443, v444, v445);
              break;
            default:
              memcpy(v360, v441, (size_t)__dstj[8]);
              v365 = v852;
              break;
          }
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstj[7])(v360, 0, 1, v362);
        }
        v383 = v289;
        v384 = v365;
        v385 = 3;
        goto LABEL_321;
      case 4u:
        v853 = v304;
        *v289 = *v290;
        v366 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v367 = (char *)v289 + v366;
        v368 = (char *)v290 + v366;
        v369 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v370 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v369 - 8);
        if (v370[6](v368, 1, v369))
        {
          v371 = sub_10002A750(&qword_100644980);
          memcpy(v367, v368, *(_QWORD *)(*(_QWORD *)(v371 - 8) + 64));
          v372 = v853;
        }
        else
        {
          __dstk = v370;
          v446 = swift_getEnumCaseMultiPayload(v368, v369) - 2;
          v447 = v368;
          v372 = v853;
          switch(v446)
          {
            case 0:
              v448 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v448 - 8) + 32))(v367, v447, v448);
              v449 = v367;
              v450 = v369;
              v451 = 2;
              goto LABEL_318;
            case 1:
              v508 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v508 - 8) + 32))(v367, v447, v508);
              v449 = v367;
              v450 = v369;
              v451 = 3;
              goto LABEL_318;
            case 2:
              v509 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v509 - 8) + 32))(v367, v447, v509);
              v449 = v367;
              v450 = v369;
              v451 = 4;
              goto LABEL_318;
            case 3:
              v510 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v510 - 8) + 32))(v367, v447, v510);
              v449 = v367;
              v450 = v369;
              v451 = 5;
              goto LABEL_318;
            case 4:
              v511 = type metadata accessor for Date(0);
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v511 - 8) + 32))(v367, v447, v511);
              v449 = v367;
              v450 = v369;
              v451 = 6;
LABEL_318:
              swift_storeEnumTagMultiPayload(v449, v450, v451);
              break;
            default:
              memcpy(v367, v447, (size_t)__dstk[8]);
              v372 = v853;
              break;
          }
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstk[7])(v367, 0, 1, v369);
        }
        v383 = v289;
        v384 = v372;
        v385 = 4;
        goto LABEL_321;
      case 7u:
        v373 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v374 = *(_QWORD *)(v373 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v374 + 48))(v290, 1, v373))
        {
          v375 = sub_10002A750(&qword_100644600);
          memcpy(v289, v290, *(_QWORD *)(*(_QWORD *)(v375 - 8) + 64));
        }
        else
        {
          *v289 = *v290;
          v452 = *(int *)(v373 + 20);
          v855 = (char *)v289 + v452;
          v453 = (char *)v290 + v452;
          v454 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v454 - 8) + 32))(v855, v453, v454);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v374 + 56))(v289, 0, 1, v373);
        }
        v455 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v456 = (char *)v289 + v455;
        v457 = (char *)v290 + v455;
        *(_OWORD *)v456 = *(_OWORD *)v457;
        *((_QWORD *)v456 + 2) = *((_QWORD *)v457 + 2);
        v383 = v289;
        v384 = v304;
        v385 = 7;
        goto LABEL_321;
      case 8u:
        v376 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v377 = *(_QWORD *)(v376 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v377 + 48))(v290, 1, v376))
        {
          v378 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v289, v290, *(_QWORD *)(*(_QWORD *)(v378 - 8) + 64));
        }
        else
        {
          v458 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v458 - 8) + 32))(v289, v290, v458);
          *((_BYTE *)v289 + *(int *)(v376 + 20)) = *((_BYTE *)v290 + *(int *)(v376 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v377 + 56))(v289, 0, 1, v376);
        }
        v459 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)v289 + *(int *)(v459 + 20)) = *(_QWORD *)((char *)v290 + *(int *)(v459 + 20));
        v383 = v289;
        v384 = v304;
        v385 = 8;
        goto LABEL_321;
      case 9u:
        *(_BYTE *)v289 = *(_BYTE *)v290;
        v379 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v380 = (char *)v289 + v379;
        v381 = (char *)v290 + v379;
        v382 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v382 - 8) + 32))(v380, v381, v382);
        v383 = v289;
        v384 = v304;
        v385 = 9;
LABEL_321:
        swift_storeEnumTagMultiPayload(v383, v384, v385);
        break;
      default:
        memcpy(v289, v290, *(_QWORD *)(*(_QWORD *)(v304 - 8) + 64));
        break;
    }
  }
  v512 = (int *)type metadata accessor for TTRIReminderCellNotesViewModel(0, v296);
  *((_BYTE *)v289 + v512[5]) = *((_BYTE *)v290 + v512[5]);
  v513 = v512[6];
  v514 = *(void **)((char *)v289 + v513);
  *(_QWORD *)((char *)v289 + v513) = *(_QWORD *)((char *)v290 + v513);

  v515 = v512[7];
  v516 = *(_QWORD *)((char *)v289 + v515);
  *(_QWORD *)((char *)v289 + v515) = *(_QWORD *)((char *)v290 + v515);
  swift_bridgeObjectRelease(v516);
  v517 = v512[8];
  v518 = *(_QWORD *)((char *)v289 + v517);
  *(_QWORD *)((char *)v289 + v517) = *(_QWORD *)((char *)v290 + v517);
  swift_bridgeObjectRelease(v518);
  *((_BYTE *)v289 + v512[9]) = *((_BYTE *)v290 + v512[9]);
  *(_QWORD *)((char *)v289 + *(int *)(v291 + 48)) = *(_QWORD *)((char *)v290 + *(int *)(v291 + 48));
LABEL_323:
  v519 = a3[19];
  v520 = *(void **)(a1 + v519);
  *(_QWORD *)(a1 + v519) = *(_QWORD *)(a2 + v519);

  v521 = a3[20];
  v522 = (_QWORD *)(a1 + v521);
  v523 = (uint64_t *)(a2 + v521);
  v525 = *v523;
  v524 = v523[1];
  v526 = v522[1];
  *v522 = v525;
  v522[1] = v524;
  swift_bridgeObjectRelease(v526);
  v527 = a3[22];
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  v528 = (_QWORD *)(a1 + v527);
  v529 = (uint64_t *)(a2 + v527);
  v531 = *v529;
  v530 = v529[1];
  v532 = v528[1];
  *v528 = v531;
  v528[1] = v530;
  swift_bridgeObjectRelease(v532);
  v533 = a3[23];
  v534 = (_QWORD *)(a1 + v533);
  v535 = (uint64_t *)(a2 + v533);
  v537 = *v535;
  v536 = v535[1];
  v538 = v534[1];
  *v534 = v537;
  v534[1] = v536;
  swift_bridgeObjectRelease(v538);
  v539 = a3[24];
  v540 = *(void **)(a1 + v539);
  *(_QWORD *)(a1 + v539) = *(_QWORD *)(a2 + v539);

  v541 = a3[25];
  v542 = *(_QWORD *)(a1 + v541);
  *(_QWORD *)(a1 + v541) = *(_QWORD *)(a2 + v541);
  swift_bridgeObjectRelease(v542);
  v543 = a3[26];
  v544 = (_QWORD *)(a1 + v543);
  v545 = (_QWORD *)(a2 + v543);
  v546 = *(void **)(a1 + v543);
  *v544 = *v545;

  v547 = v545[2];
  v548 = v544[2];
  v544[1] = v545[1];
  v544[2] = v547;
  swift_bridgeObjectRelease(v548);
  v549 = v545[3];
  if (v544[3])
  {
    if (v549)
    {
      v550 = v545[4];
      v544[3] = v549;
      v544[4] = v550;
      swift_release();
      goto LABEL_330;
    }
    swift_release();
  }
  else if (v549)
  {
    v551 = v545[4];
    v544[3] = v549;
    v544[4] = v551;
    goto LABEL_330;
  }
  *(_OWORD *)(v544 + 3) = *(_OWORD *)(v545 + 3);
LABEL_330:
  v552 = a3[27];
  v553 = (_QWORD *)(a1 + v552);
  v554 = (_QWORD *)(a2 + v552);
  v555 = *(void **)(a1 + v552);
  *v553 = *v554;

  v556 = v554[2];
  v557 = v553[2];
  v553[1] = v554[1];
  v553[2] = v556;
  swift_bridgeObjectRelease(v557);
  v558 = v554[3];
  if (v553[3])
  {
    if (v558)
    {
      v559 = v554[4];
      v553[3] = v558;
      v553[4] = v559;
      swift_release();
      goto LABEL_337;
    }
    swift_release();
  }
  else if (v558)
  {
    v560 = v554[4];
    v553[3] = v558;
    v553[4] = v560;
    goto LABEL_337;
  }
  *(_OWORD *)(v553 + 3) = *(_OWORD *)(v554 + 3);
LABEL_337:
  v561 = a3[28];
  v562 = a1 + v561;
  v563 = a2 + v561;
  v564 = *(_QWORD *)(a2 + v561 + 8);
  v565 = *(_QWORD *)(a1 + v561);
  *(_QWORD *)(a1 + v561) = *(_QWORD *)(a2 + v561);
  swift_unknownObjectRelease(v565);
  *(_QWORD *)(v562 + 8) = v564;
  v856 = sub_10002A750(&qword_10064CB58);
  v566 = *(int *)(v856 + 28);
  v567 = (_QWORD *)(v562 + v566);
  v568 = (_QWORD *)(v563 + v566);
  v569 = sub_10002A750(&qword_10064CB70);
  v570 = *(_QWORD *)(v569 - 8);
  v571 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v570 + 48);
  v572 = v571(v567, 1, v569);
  v573 = v571(v568, 1, v569);
  if (!v572)
  {
    if (!v573)
    {
      if (a1 != a2)
      {
        sub_10004941C((uint64_t)v567);
        v582 = type metadata accessor for TTRRemindersListViewModel.Item(0);
        switch(swift_getEnumCaseMultiPayload(v568, v582))
        {
          case 0u:
            v583 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            switch(swift_getEnumCaseMultiPayload(v568, v583))
            {
              case 2u:
                v584 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v584 - 8) + 32))(v567, v568, v584);
                v585 = v567;
                v586 = v583;
                v587 = 2;
                goto LABEL_417;
              case 3u:
                v737 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v737 - 8) + 32))(v567, v568, v737);
                v585 = v567;
                v586 = v583;
                v587 = 3;
                goto LABEL_417;
              case 4u:
                v738 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v738 - 8) + 32))(v567, v568, v738);
                v585 = v567;
                v586 = v583;
                v587 = 4;
                goto LABEL_417;
              case 5u:
                v739 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v739 - 8) + 32))(v567, v568, v739);
                v585 = v567;
                v586 = v583;
                v587 = 5;
                goto LABEL_417;
              case 6u:
                v740 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v740 - 8) + 32))(v567, v568, v740);
                v585 = v567;
                v586 = v583;
                v587 = 6;
LABEL_417:
                swift_storeEnumTagMultiPayload(v585, v586, v587);
                break;
              default:
                memcpy(v567, v568, *(_QWORD *)(*(_QWORD *)(v583 - 8) + 64));
                break;
            }
            v741 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v742 = v741[5];
            v743 = (_OWORD *)((char *)v567 + v742);
            v744 = (_OWORD *)((char *)v568 + v742);
            v745 = v744[3];
            v743[2] = v744[2];
            v743[3] = v745;
            v746 = v744[1];
            *v743 = *v744;
            v743[1] = v746;
            *(_OWORD *)((char *)v743 + 106) = *(_OWORD *)((char *)v744 + 106);
            v747 = v744[6];
            v748 = v744[4];
            v743[5] = v744[5];
            v743[6] = v747;
            v743[4] = v748;
            *((_BYTE *)v567 + v741[6]) = *((_BYTE *)v568 + v741[6]);
            *((_BYTE *)v567 + v741[7]) = *((_BYTE *)v568 + v741[7]);
            *((_BYTE *)v567 + v741[8]) = *((_BYTE *)v568 + v741[8]);
            *((_BYTE *)v567 + v741[9]) = *((_BYTE *)v568 + v741[9]);
            *((_BYTE *)v567 + v741[10]) = *((_BYTE *)v568 + v741[10]);
            *(_QWORD *)((char *)v567 + v741[11]) = *(_QWORD *)((char *)v568 + v741[11]);
            v660 = v567;
            v661 = v582;
            v662 = 0;
            goto LABEL_477;
          case 1u:
            v624 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            switch(swift_getEnumCaseMultiPayload(v568, v624))
            {
              case 2u:
                v625 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v625 - 8) + 32))(v567, v568, v625);
                v626 = v567;
                v627 = v624;
                v628 = 2;
                goto LABEL_424;
              case 3u:
                v749 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v749 - 8) + 32))(v567, v568, v749);
                v626 = v567;
                v627 = v624;
                v628 = 3;
                goto LABEL_424;
              case 4u:
                v750 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v750 - 8) + 32))(v567, v568, v750);
                v626 = v567;
                v627 = v624;
                v628 = 4;
                goto LABEL_424;
              case 5u:
                v751 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v751 - 8) + 32))(v567, v568, v751);
                v626 = v567;
                v627 = v624;
                v628 = 5;
                goto LABEL_424;
              case 6u:
                v752 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v752 - 8) + 32))(v567, v568, v752);
                v626 = v567;
                v627 = v624;
                v628 = 6;
LABEL_424:
                swift_storeEnumTagMultiPayload(v626, v627, v628);
                break;
              default:
                memcpy(v567, v568, *(_QWORD *)(*(_QWORD *)(v624 - 8) + 64));
                break;
            }
            v753 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v754 = v753[5];
            v755 = (_OWORD *)((char *)v567 + v754);
            v756 = (_OWORD *)((char *)v568 + v754);
            v757 = v756[3];
            v755[2] = v756[2];
            v755[3] = v757;
            v758 = v756[1];
            *v755 = *v756;
            v755[1] = v758;
            *(_OWORD *)((char *)v755 + 106) = *(_OWORD *)((char *)v756 + 106);
            v759 = v756[6];
            v760 = v756[4];
            v755[5] = v756[5];
            v755[6] = v759;
            v755[4] = v760;
            *((_BYTE *)v567 + v753[6]) = *((_BYTE *)v568 + v753[6]);
            *((_BYTE *)v567 + v753[7]) = *((_BYTE *)v568 + v753[7]);
            *((_BYTE *)v567 + v753[8]) = *((_BYTE *)v568 + v753[8]);
            *((_BYTE *)v567 + v753[9]) = *((_BYTE *)v568 + v753[9]);
            *((_BYTE *)v567 + v753[10]) = *((_BYTE *)v568 + v753[10]);
            *(_QWORD *)((char *)v567 + v753[11]) = *(_QWORD *)((char *)v568 + v753[11]);
            v660 = v567;
            v661 = v582;
            v662 = 1;
            goto LABEL_477;
          case 2u:
            __dsto = (void *)v582;
            *v567 = *v568;
            v629 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v630 = (char *)v567 + v629;
            v631 = (char *)v568 + v629;
            v632 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v633 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v632 - 8);
            if (v633[6](v631, 1, v632))
            {
              v634 = sub_10002A750(&qword_100644980);
              memcpy(v630, v631, *(_QWORD *)(*(_QWORD *)(v634 - 8) + 64));
              v635 = (uint64_t)__dsto;
            }
            else
            {
              v815 = v633;
              v635 = (uint64_t)__dsto;
              switch(swift_getEnumCaseMultiPayload(v631, v632))
              {
                case 2u:
                  v713 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v713 - 8) + 32))(v630, v631, v713);
                  v714 = v630;
                  v715 = v632;
                  v716 = 2;
                  goto LABEL_458;
                case 3u:
                  v778 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v778 - 8) + 32))(v630, v631, v778);
                  v714 = v630;
                  v715 = v632;
                  v716 = 3;
                  goto LABEL_458;
                case 4u:
                  v779 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v779 - 8) + 32))(v630, v631, v779);
                  v714 = v630;
                  v715 = v632;
                  v716 = 4;
                  goto LABEL_458;
                case 5u:
                  v780 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v780 - 8) + 32))(v630, v631, v780);
                  v714 = v630;
                  v715 = v632;
                  v716 = 5;
                  goto LABEL_458;
                case 6u:
                  v781 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v781 - 8) + 32))(v630, v631, v781);
                  v714 = v630;
                  v715 = v632;
                  v716 = 6;
LABEL_458:
                  swift_storeEnumTagMultiPayload(v714, v715, v716);
                  break;
                default:
                  memcpy(v630, v631, (size_t)v815[8]);
                  v635 = (uint64_t)__dsto;
                  break;
              }
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v815[7])(v630, 0, 1, v632);
            }
            v660 = v567;
            v661 = v635;
            v662 = 2;
            goto LABEL_477;
          case 3u:
            __dstp = (void *)v582;
            *v567 = *v568;
            v636 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v637 = (char *)v567 + v636;
            v638 = (char *)v568 + v636;
            v639 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v640 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v639 - 8);
            if (v640[6](v638, 1, v639))
            {
              v641 = sub_10002A750(&qword_100644980);
              memcpy(v637, v638, *(_QWORD *)(*(_QWORD *)(v641 - 8) + 64));
              v642 = (uint64_t)__dstp;
            }
            else
            {
              v816 = v640;
              v717 = swift_getEnumCaseMultiPayload(v638, v639) - 2;
              v718 = v638;
              v642 = (uint64_t)__dstp;
              switch(v717)
              {
                case 0:
                  v719 = type metadata accessor for Date(0);
                  (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v719 - 8) + 32))(v637, v718, v719);
                  v720 = v637;
                  v721 = v639;
                  v722 = 2;
                  goto LABEL_466;
                case 1:
                  v782 = type metadata accessor for Date(0);
                  (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v782 - 8) + 32))(v637, v718, v782);
                  v720 = v637;
                  v721 = v639;
                  v722 = 3;
                  goto LABEL_466;
                case 2:
                  v783 = type metadata accessor for Date(0);
                  (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v783 - 8) + 32))(v637, v718, v783);
                  v720 = v637;
                  v721 = v639;
                  v722 = 4;
                  goto LABEL_466;
                case 3:
                  v784 = type metadata accessor for Date(0);
                  (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v784 - 8) + 32))(v637, v718, v784);
                  v720 = v637;
                  v721 = v639;
                  v722 = 5;
                  goto LABEL_466;
                case 4:
                  v785 = type metadata accessor for Date(0);
                  (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v785 - 8) + 32))(v637, v718, v785);
                  v720 = v637;
                  v721 = v639;
                  v722 = 6;
LABEL_466:
                  swift_storeEnumTagMultiPayload(v720, v721, v722);
                  break;
                default:
                  memcpy(v637, v718, (size_t)v816[8]);
                  v642 = (uint64_t)__dstp;
                  break;
              }
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v816[7])(v637, 0, 1, v639);
            }
            v660 = v567;
            v661 = v642;
            v662 = 3;
            goto LABEL_477;
          case 4u:
            __dstq = (void *)v582;
            *v567 = *v568;
            v643 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v644 = (char *)v567 + v643;
            v645 = (char *)v568 + v643;
            v646 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v647 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v646 - 8);
            if (v647[6](v645, 1, v646))
            {
              v648 = sub_10002A750(&qword_100644980);
              memcpy(v644, v645, *(_QWORD *)(*(_QWORD *)(v648 - 8) + 64));
              v649 = (uint64_t)__dstq;
            }
            else
            {
              v817 = v647;
              v723 = swift_getEnumCaseMultiPayload(v645, v646) - 2;
              v724 = v645;
              v649 = (uint64_t)__dstq;
              switch(v723)
              {
                case 0:
                  v725 = type metadata accessor for Date(0);
                  (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v725 - 8) + 32))(v644, v724, v725);
                  v726 = v644;
                  v727 = v646;
                  v728 = 2;
                  goto LABEL_474;
                case 1:
                  v786 = type metadata accessor for Date(0);
                  (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v786 - 8) + 32))(v644, v724, v786);
                  v726 = v644;
                  v727 = v646;
                  v728 = 3;
                  goto LABEL_474;
                case 2:
                  v787 = type metadata accessor for Date(0);
                  (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v787 - 8) + 32))(v644, v724, v787);
                  v726 = v644;
                  v727 = v646;
                  v728 = 4;
                  goto LABEL_474;
                case 3:
                  v788 = type metadata accessor for Date(0);
                  (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v788 - 8) + 32))(v644, v724, v788);
                  v726 = v644;
                  v727 = v646;
                  v728 = 5;
                  goto LABEL_474;
                case 4:
                  v789 = type metadata accessor for Date(0);
                  (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v789 - 8) + 32))(v644, v724, v789);
                  v726 = v644;
                  v727 = v646;
                  v728 = 6;
LABEL_474:
                  swift_storeEnumTagMultiPayload(v726, v727, v728);
                  break;
                default:
                  memcpy(v644, v724, (size_t)v817[8]);
                  v649 = (uint64_t)__dstq;
                  break;
              }
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v817[7])(v644, 0, 1, v646);
            }
            v660 = v567;
            v661 = v649;
            v662 = 4;
            goto LABEL_477;
          case 7u:
            v650 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
            v651 = *(_QWORD *)(v650 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v651 + 48))(v568, 1, v650))
            {
              v652 = sub_10002A750(&qword_100644600);
              memcpy(v567, v568, *(_QWORD *)(*(_QWORD *)(v652 - 8) + 64));
            }
            else
            {
              *v567 = *v568;
              v729 = *(int *)(v650 + 20);
              v730 = (char *)v567 + v729;
              __dstu = (char *)v568 + v729;
              v731 = type metadata accessor for REMHashtagLabelSpecifier(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v731 - 8) + 32))(v730, __dstu, v731);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v651 + 56))(v567, 0, 1, v650);
            }
            v732 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
            v733 = (char *)v567 + v732;
            v734 = (char *)v568 + v732;
            *(_OWORD *)v733 = *(_OWORD *)v734;
            *((_QWORD *)v733 + 2) = *((_QWORD *)v734 + 2);
            v660 = v567;
            v661 = v582;
            v662 = 7;
            goto LABEL_477;
          case 8u:
            v653 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
            v654 = *(_QWORD *)(v653 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v654 + 48))(v568, 1, v653))
            {
              v655 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
              memcpy(v567, v568, *(_QWORD *)(*(_QWORD *)(v655 - 8) + 64));
            }
            else
            {
              v735 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v735 - 8) + 32))(v567, v568, v735);
              *((_BYTE *)v567 + *(int *)(v653 + 20)) = *((_BYTE *)v568 + *(int *)(v653 + 20));
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v654 + 56))(v567, 0, 1, v653);
            }
            v736 = type metadata accessor for TTRTemplatePublicLinkData(0);
            *(_QWORD *)((char *)v567 + *(int *)(v736 + 20)) = *(_QWORD *)((char *)v568 + *(int *)(v736 + 20));
            v660 = v567;
            v661 = v582;
            v662 = 8;
            goto LABEL_477;
          case 9u:
            *(_BYTE *)v567 = *(_BYTE *)v568;
            v656 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
            v657 = (char *)v567 + v656;
            v658 = (char *)v568 + v656;
            v659 = type metadata accessor for AnyTip(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v659 - 8) + 32))(v657, v658, v659);
            v660 = v567;
            v661 = v582;
            v662 = 9;
LABEL_477:
            swift_storeEnumTagMultiPayload(v660, v661, v662);
            break;
          default:
            memcpy(v567, v568, *(_QWORD *)(*(_QWORD *)(v582 - 8) + 64));
            break;
        }
      }
      v790 = (int *)type metadata accessor for TTRIReminderCellAutoCompleteViewModel(0);
      *((_BYTE *)v567 + v790[5]) = *((_BYTE *)v568 + v790[5]);
      v791 = v790[6];
      v792 = (_QWORD *)((char *)v567 + v791);
      v793 = (_QWORD *)((char *)v568 + v791);
      v795 = *v793;
      v794 = v793[1];
      v796 = v792[1];
      *v792 = v795;
      v792[1] = v794;
      swift_bridgeObjectRelease(v796);
      v797 = v790[7];
      v798 = *(_QWORD *)((char *)v567 + v797);
      *(_QWORD *)((char *)v567 + v797) = *(_QWORD *)((char *)v568 + v797);
      swift_bridgeObjectRelease(v798);
      *(_QWORD *)((char *)v567 + *(int *)(v569 + 48)) = *(_QWORD *)((char *)v568 + *(int *)(v569 + 48));
      goto LABEL_345;
    }
    sub_1000073A0((uint64_t)v567, &qword_10064CB70);
LABEL_344:
    v580 = sub_10002A750(&qword_10065A450);
    memcpy(v567, v568, *(_QWORD *)(*(_QWORD *)(v580 - 8) + 64));
LABEL_345:
    v581 = v856;
    goto LABEL_452;
  }
  if (v573)
    goto LABEL_344;
  v574 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(v568, v574))
  {
    case 0u:
      v575 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v568, v575))
      {
        case 2u:
          v576 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v576 - 8) + 32))(v567, v568, v576);
          v577 = v567;
          v578 = v575;
          v579 = 2;
          goto LABEL_393;
        case 3u:
          v689 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v689 - 8) + 32))(v567, v568, v689);
          v577 = v567;
          v578 = v575;
          v579 = 3;
          goto LABEL_393;
        case 4u:
          v690 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v690 - 8) + 32))(v567, v568, v690);
          v577 = v567;
          v578 = v575;
          v579 = 4;
          goto LABEL_393;
        case 5u:
          v691 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v691 - 8) + 32))(v567, v568, v691);
          v577 = v567;
          v578 = v575;
          v579 = 5;
          goto LABEL_393;
        case 6u:
          v692 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v692 - 8) + 32))(v567, v568, v692);
          v577 = v567;
          v578 = v575;
          v579 = 6;
LABEL_393:
          swift_storeEnumTagMultiPayload(v577, v578, v579);
          break;
        default:
          memcpy(v567, v568, *(_QWORD *)(*(_QWORD *)(v575 - 8) + 64));
          break;
      }
      v693 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v694 = v693[5];
      v695 = (_OWORD *)((char *)v567 + v694);
      v696 = (_OWORD *)((char *)v568 + v694);
      v697 = v696[3];
      v695[2] = v696[2];
      v695[3] = v697;
      v698 = v696[1];
      *v695 = *v696;
      v695[1] = v698;
      *(_OWORD *)((char *)v695 + 106) = *(_OWORD *)((char *)v696 + 106);
      v699 = v696[6];
      v700 = v696[4];
      v695[5] = v696[5];
      v695[6] = v699;
      v695[4] = v700;
      *((_BYTE *)v567 + v693[6]) = *((_BYTE *)v568 + v693[6]);
      *((_BYTE *)v567 + v693[7]) = *((_BYTE *)v568 + v693[7]);
      *((_BYTE *)v567 + v693[8]) = *((_BYTE *)v568 + v693[8]);
      *((_BYTE *)v567 + v693[9]) = *((_BYTE *)v568 + v693[9]);
      *((_BYTE *)v567 + v693[10]) = *((_BYTE *)v568 + v693[10]);
      *(_QWORD *)((char *)v567 + v693[11]) = *(_QWORD *)((char *)v568 + v693[11]);
      v621 = v567;
      v622 = v574;
      v623 = 0;
      goto LABEL_450;
    case 1u:
      v588 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v568, v588))
      {
        case 2u:
          v589 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v589 - 8) + 32))(v567, v568, v589);
          v590 = v567;
          v591 = v588;
          v592 = 2;
          goto LABEL_400;
        case 3u:
          v701 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v701 - 8) + 32))(v567, v568, v701);
          v590 = v567;
          v591 = v588;
          v592 = 3;
          goto LABEL_400;
        case 4u:
          v702 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v702 - 8) + 32))(v567, v568, v702);
          v590 = v567;
          v591 = v588;
          v592 = 4;
          goto LABEL_400;
        case 5u:
          v703 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v703 - 8) + 32))(v567, v568, v703);
          v590 = v567;
          v591 = v588;
          v592 = 5;
          goto LABEL_400;
        case 6u:
          v704 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v704 - 8) + 32))(v567, v568, v704);
          v590 = v567;
          v591 = v588;
          v592 = 6;
LABEL_400:
          swift_storeEnumTagMultiPayload(v590, v591, v592);
          break;
        default:
          memcpy(v567, v568, *(_QWORD *)(*(_QWORD *)(v588 - 8) + 64));
          break;
      }
      v705 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v706 = v705[5];
      v707 = (_OWORD *)((char *)v567 + v706);
      v708 = (_OWORD *)((char *)v568 + v706);
      v709 = v708[3];
      v707[2] = v708[2];
      v707[3] = v709;
      v710 = v708[1];
      *v707 = *v708;
      v707[1] = v710;
      *(_OWORD *)((char *)v707 + 106) = *(_OWORD *)((char *)v708 + 106);
      v711 = v708[6];
      v712 = v708[4];
      v707[5] = v708[5];
      v707[6] = v711;
      v707[4] = v712;
      *((_BYTE *)v567 + v705[6]) = *((_BYTE *)v568 + v705[6]);
      *((_BYTE *)v567 + v705[7]) = *((_BYTE *)v568 + v705[7]);
      *((_BYTE *)v567 + v705[8]) = *((_BYTE *)v568 + v705[8]);
      *((_BYTE *)v567 + v705[9]) = *((_BYTE *)v568 + v705[9]);
      *((_BYTE *)v567 + v705[10]) = *((_BYTE *)v568 + v705[10]);
      *(_QWORD *)((char *)v567 + v705[11]) = *(_QWORD *)((char *)v568 + v705[11]);
      v621 = v567;
      v622 = v574;
      v623 = 1;
      goto LABEL_450;
    case 2u:
      __dstl = (void *)v574;
      *v567 = *v568;
      v593 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v811 = (char *)v567 + v593;
      v594 = (char *)v568 + v593;
      v595 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v596 = *(_QWORD *)(v595 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v596 + 48))(v594, 1, v595))
      {
        v597 = sub_10002A750(&qword_100644980);
        memcpy(v811, v594, *(_QWORD *)(*(_QWORD *)(v597 - 8) + 64));
        v598 = (uint64_t)__dstl;
      }
      else
      {
        v799 = v596;
        v802 = v595;
        v663 = swift_getEnumCaseMultiPayload(v594, v595) - 2;
        v598 = (uint64_t)__dstl;
        switch(v663)
        {
          case 0:
            v664 = type metadata accessor for Date(0);
            v665 = v811;
            (*(void (**)(void))(*(_QWORD *)(v664 - 8) + 32))();
            v666 = v811;
            v667 = v802;
            v668 = v802;
            v669 = 2;
            goto LABEL_431;
          case 1:
            v762 = type metadata accessor for Date(0);
            v665 = v811;
            (*(void (**)(void))(*(_QWORD *)(v762 - 8) + 32))();
            v666 = v811;
            v667 = v802;
            v668 = v802;
            v669 = 3;
            goto LABEL_431;
          case 2:
            v763 = type metadata accessor for Date(0);
            v665 = v811;
            (*(void (**)(void))(*(_QWORD *)(v763 - 8) + 32))();
            v666 = v811;
            v667 = v802;
            v668 = v802;
            v669 = 4;
            goto LABEL_431;
          case 3:
            v764 = type metadata accessor for Date(0);
            v665 = v811;
            (*(void (**)(void))(*(_QWORD *)(v764 - 8) + 32))();
            v666 = v811;
            v667 = v802;
            v668 = v802;
            v669 = 5;
            goto LABEL_431;
          case 4:
            v765 = type metadata accessor for Date(0);
            v665 = v811;
            (*(void (**)(void))(*(_QWORD *)(v765 - 8) + 32))();
            v666 = v811;
            v667 = v802;
            v668 = v802;
            v669 = 6;
LABEL_431:
            swift_storeEnumTagMultiPayload(v666, v668, v669);
            v761 = v799;
            break;
          default:
            v665 = v811;
            memcpy(v811, v594, *(_QWORD *)(v799 + 64));
            v761 = v799;
            v667 = v802;
            v598 = (uint64_t)__dstl;
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v761 + 56))(v665, 0, 1, v667);
      }
      v621 = v567;
      v622 = v598;
      v623 = 2;
      goto LABEL_450;
    case 3u:
      __dstm = (void *)v574;
      *v567 = *v568;
      v599 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v812 = (char *)v567 + v599;
      v600 = (char *)v568 + v599;
      v601 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v602 = *(_QWORD *)(v601 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v602 + 48))(v600, 1, v601))
      {
        v603 = sub_10002A750(&qword_100644980);
        memcpy(v812, v600, *(_QWORD *)(*(_QWORD *)(v603 - 8) + 64));
        v604 = (uint64_t)__dstm;
      }
      else
      {
        v803 = v601;
        switch(swift_getEnumCaseMultiPayload(v600, v601))
        {
          case 2u:
            v670 = type metadata accessor for Date(0);
            v671 = v812;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v670 - 8) + 32))(v812, v600, v670);
            v672 = v812;
            v673 = v803;
            v674 = v803;
            v675 = 2;
            goto LABEL_439;
          case 3u:
            v767 = type metadata accessor for Date(0);
            v671 = v812;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v767 - 8) + 32))(v812, v600, v767);
            v672 = v812;
            v673 = v803;
            v674 = v803;
            v675 = 3;
            goto LABEL_439;
          case 4u:
            v768 = type metadata accessor for Date(0);
            v671 = v812;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v768 - 8) + 32))(v812, v600, v768);
            v672 = v812;
            v673 = v803;
            v674 = v803;
            v675 = 4;
            goto LABEL_439;
          case 5u:
            v769 = type metadata accessor for Date(0);
            v671 = v812;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v769 - 8) + 32))(v812, v600, v769);
            v672 = v812;
            v673 = v803;
            v674 = v803;
            v675 = 5;
            goto LABEL_439;
          case 6u:
            v770 = type metadata accessor for Date(0);
            v671 = v812;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v770 - 8) + 32))(v812, v600, v770);
            v672 = v812;
            v673 = v803;
            v674 = v803;
            v675 = 6;
LABEL_439:
            swift_storeEnumTagMultiPayload(v672, v674, v675);
            v766 = v602;
            break;
          default:
            v671 = v812;
            memcpy(v812, v600, *(_QWORD *)(v602 + 64));
            v766 = v602;
            v673 = v803;
            break;
        }
        v604 = (uint64_t)__dstm;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v766 + 56))(v671, 0, 1, v673);
      }
      v621 = v567;
      v622 = v604;
      v623 = 3;
      goto LABEL_450;
    case 4u:
      __dstn = (void *)v574;
      *v567 = *v568;
      v605 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v813 = (char *)v567 + v605;
      v606 = (char *)v568 + v605;
      v607 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v608 = *(_QWORD *)(v607 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v608 + 48))(v606, 1, v607))
      {
        v609 = sub_10002A750(&qword_100644980);
        memcpy(v813, v606, *(_QWORD *)(*(_QWORD *)(v609 - 8) + 64));
        v610 = (uint64_t)__dstn;
      }
      else
      {
        v804 = v607;
        switch(swift_getEnumCaseMultiPayload(v606, v607))
        {
          case 2u:
            v676 = type metadata accessor for Date(0);
            v677 = v813;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v676 - 8) + 32))(v813, v606, v676);
            v678 = v813;
            v679 = v804;
            v680 = v804;
            v681 = 2;
            goto LABEL_447;
          case 3u:
            v772 = type metadata accessor for Date(0);
            v677 = v813;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v772 - 8) + 32))(v813, v606, v772);
            v678 = v813;
            v679 = v804;
            v680 = v804;
            v681 = 3;
            goto LABEL_447;
          case 4u:
            v773 = type metadata accessor for Date(0);
            v677 = v813;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v773 - 8) + 32))(v813, v606, v773);
            v678 = v813;
            v679 = v804;
            v680 = v804;
            v681 = 4;
            goto LABEL_447;
          case 5u:
            v774 = type metadata accessor for Date(0);
            v677 = v813;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v774 - 8) + 32))(v813, v606, v774);
            v678 = v813;
            v679 = v804;
            v680 = v804;
            v681 = 5;
            goto LABEL_447;
          case 6u:
            v775 = type metadata accessor for Date(0);
            v677 = v813;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v775 - 8) + 32))(v813, v606, v775);
            v678 = v813;
            v679 = v804;
            v680 = v804;
            v681 = 6;
LABEL_447:
            swift_storeEnumTagMultiPayload(v678, v680, v681);
            v771 = v608;
            break;
          default:
            v677 = v813;
            memcpy(v813, v606, *(_QWORD *)(v608 + 64));
            v771 = v608;
            v679 = v804;
            break;
        }
        v610 = (uint64_t)__dstn;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v771 + 56))(v677, 0, 1, v679);
      }
      v621 = v567;
      v622 = v610;
      v623 = 4;
      goto LABEL_450;
    case 7u:
      v611 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v612 = *(_QWORD *)(v611 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v612 + 48))(v568, 1, v611))
      {
        v613 = sub_10002A750(&qword_100644600);
        memcpy(v567, v568, *(_QWORD *)(*(_QWORD *)(v613 - 8) + 64));
      }
      else
      {
        *v567 = *v568;
        v682 = *(int *)(v611 + 20);
        v814 = (char *)v568 + v682;
        __dstt = (char *)v567 + v682;
        v683 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v683 - 8) + 32))(__dstt, v814, v683);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v612 + 56))(v567, 0, 1, v611);
      }
      v684 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v685 = (char *)v567 + v684;
      v686 = (char *)v568 + v684;
      *(_OWORD *)v685 = *(_OWORD *)v686;
      *((_QWORD *)v685 + 2) = *((_QWORD *)v686 + 2);
      v621 = v567;
      v622 = v574;
      v623 = 7;
      goto LABEL_450;
    case 8u:
      v614 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v615 = *(_QWORD *)(v614 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v615 + 48))(v568, 1, v614))
      {
        v616 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(v567, v568, *(_QWORD *)(*(_QWORD *)(v616 - 8) + 64));
      }
      else
      {
        v687 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v687 - 8) + 32))(v567, v568, v687);
        *((_BYTE *)v567 + *(int *)(v614 + 20)) = *((_BYTE *)v568 + *(int *)(v614 + 20));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v615 + 56))(v567, 0, 1, v614);
      }
      v688 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(_QWORD *)((char *)v567 + *(int *)(v688 + 20)) = *(_QWORD *)((char *)v568 + *(int *)(v688 + 20));
      v621 = v567;
      v622 = v574;
      v623 = 8;
      goto LABEL_450;
    case 9u:
      *(_BYTE *)v567 = *(_BYTE *)v568;
      v617 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v618 = (char *)v567 + v617;
      v619 = (char *)v568 + v617;
      v620 = type metadata accessor for AnyTip(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v620 - 8) + 32))(v618, v619, v620);
      v621 = v567;
      v622 = v574;
      v623 = 9;
LABEL_450:
      swift_storeEnumTagMultiPayload(v621, v622, v623);
      break;
    default:
      memcpy(v567, v568, *(_QWORD *)(*(_QWORD *)(v574 - 8) + 64));
      break;
  }
  v581 = v856;
  v776 = (int *)type metadata accessor for TTRIReminderCellAutoCompleteViewModel(0);
  *((_BYTE *)v567 + v776[5]) = *((_BYTE *)v568 + v776[5]);
  *(_OWORD *)((char *)v567 + v776[6]) = *(_OWORD *)((char *)v568 + v776[6]);
  *(_QWORD *)((char *)v567 + v776[7]) = *(_QWORD *)((char *)v568 + v776[7]);
  *(_QWORD *)((char *)v567 + *(int *)(v569 + 48)) = *(_QWORD *)((char *)v568 + *(int *)(v569 + 48));
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v570 + 56))(v567, 0, 1, v569);
LABEL_452:
  *(_BYTE *)(v562 + *(int *)(v581 + 32)) = *(_BYTE *)(v563 + *(int *)(v581 + 32));
  return a1;
}

uint64_t sub_1004A9C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004A9C98);
}

uint64_t sub_1004A9C98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v6 = sub_10002A750(&qword_10064CB68);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[17];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = sub_10002A750(&qword_10064CB60);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[18];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_10002A750(&qword_10064CB58);
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[28];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[25]);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1004A9D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004A9D78);
}

uint64_t sub_1004A9D78(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = sub_10002A750(&qword_10064CB68);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[17];
  }
  else
  {
    result = sub_10002A750(&qword_10064CB60);
    v9 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = result;
      v11 = a4[18];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[25]) = (a2 - 1);
        return result;
      }
      v10 = sub_10002A750(&qword_10064CB58);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = a4[28];
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

uint64_t type metadata accessor for TTRIBoardReminderCellContentConfiguration(uint64_t a1)
{
  uint64_t result;

  result = qword_100661508;
  if (!qword_100661508)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIBoardReminderCellContentConfiguration);
  return result;
}

void sub_1004A9E84(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[25];

  v8[0] = &unk_1005387D0;
  v8[1] = &unk_1005387D0;
  v8[2] = &unk_1005387D0;
  v8[3] = &unk_1005387E8;
  v8[4] = &unk_1005387E8;
  v8[5] = &unk_1005387E8;
  v8[6] = &unk_100538800;
  v8[7] = &unk_100538818;
  v8[8] = &unk_100538800;
  v8[9] = &unk_100538830;
  v8[10] = &unk_100538848;
  v8[11] = &unk_100538860;
  v8[12] = &unk_100538878;
  sub_1004AA04C(319, &qword_100661518, &qword_10065A318, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TTRBoardReminderCellTitleConfiguration);
  if (v3 <= 0x3F)
  {
    v8[13] = *(_QWORD *)(v2 - 8) + 64;
    sub_1004A9FE4(319);
    if (v5 <= 0x3F)
    {
      v8[14] = *(_QWORD *)(v4 - 8) + 64;
      v8[15] = &unk_1005387E8;
      v8[16] = &unk_100538818;
      v8[17] = &unk_100538890;
      v8[18] = &unk_100538818;
      v8[19] = &unk_100538818;
      v8[20] = &unk_1005387E8;
      v8[21] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v8[22] = &unk_100538830;
      v8[23] = &unk_100538830;
      sub_1004AA04C(319, (unint64_t *)&unk_100661528, &qword_10065A338, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for TTRIBoardReminderCellAutoCompleteConfiguration);
      if (v7 <= 0x3F)
      {
        v8[24] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 25, v8, a1 + 16);
      }
    }
  }
}

void sub_1004A9FE4(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_100661520)
  {
    v2 = sub_10002CA5C(&qword_10065A328);
    v4 = type metadata accessor for TTRIReminderCellNotesViewModel(255, v3);
    v5 = type metadata accessor for TTRBoardReminderCellNotesConfiguration(a1, v2, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_100661520);
  }
}

void sub_1004AA04C(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = sub_10002CA5C(a3);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

_UNKNOWN **sub_1004AA0A4()
{
  return &off_100609800;
}

uint64_t sub_1004AA0B0@<X0>(uint64_t a1@<X8>)
{
  __int128 v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t result;
  _OWORD v29[3];
  _OWORD v30[3];
  _OWORD v31[2];
  uint64_t v32;
  _OWORD v33[2];
  uint64_t v34;
  _OWORD v35[2];
  uint64_t v36;

  *(_WORD *)a1 = 1;
  *(_BYTE *)(a1 + 2) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 8) = 0;
  TTRBoardReminderCellCompletedButtonConfiguration.init(isCompleted:tintColor:style:preferredSymbolConfiguration:onCompletedPressed:)(v29, 2, 0, 4, 0, 0, 0);
  v2 = v29[1];
  *(_OWORD *)(a1 + 32) = v29[0];
  *(_OWORD *)(a1 + 48) = v2;
  *(_OWORD *)(a1 + 64) = v29[2];
  *(_QWORD *)(a1 + 80) = TTRBoardReminderCellLocationConfiguration.init(icon:attributedDescription:)(0, 0);
  *(_QWORD *)(a1 + 88) = v3;
  TTRBoardReminderCellShowSubtasksConfiguration.init(isShowingSubtasks:subtaskCount:tintColor:onShowSubtasksButtonPress:)(v30, 2, 0, 1, 0, 0, 0);
  v4 = v30[1];
  *(_OWORD *)(a1 + 96) = v30[0];
  *(_OWORD *)(a1 + 112) = v4;
  *(_OWORD *)(a1 + 128) = v30[2];
  TTRBoardReminderCellSubtaskCountConfiguration.init(subtaskCountString:tintColor:onSubtaskCountPressed:)(v31, 0, 0, 0, 0, 0);
  v5 = v31[1];
  *(_OWORD *)(a1 + 144) = v31[0];
  *(_OWORD *)(a1 + 160) = v5;
  *(_QWORD *)(a1 + 176) = v32;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_WORD *)(a1 + 216) = 514;
  *(_BYTE *)(a1 + 224) = TTRBoardReminderCellInfoButtonConfiguration.init(infoButtonState:tintColor:onInfoPressed:)(5, 0, 0, 0);
  *(_QWORD *)(a1 + 232) = v6;
  *(_QWORD *)(a1 + 240) = v7;
  *(_QWORD *)(a1 + 248) = v8;
  v9 = (int *)type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
  *(_QWORD *)(a1 + 264) = 0;
  *(_QWORD *)(a1 + 272) = 0;
  *(_QWORD *)(a1 + 256) = 0;
  v10 = (_QWORD *)(a1 + v9[17]);
  v11 = (char *)v10 + *(int *)(sub_10002A750(&qword_10064CB68) + 28);
  v12 = sub_10002A750(&qword_10064CBB8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *v10 = 0;
  v10[1] = 0;
  v13 = a1 + v9[18];
  v14 = v13 + *(int *)(sub_10002A750(&qword_10064CB60) + 40);
  v15 = sub_10002A750(&qword_10064CBA0);
  v16.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(_BYTE *)v13 = 1;
  *(_QWORD *)(v13 + 8) = 0;
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)(a1 + v9[19]) = 0;
  v17 = (_QWORD *)(a1 + v9[20]);
  *v17 = 0;
  v17[1] = 0;
  *(_BYTE *)(a1 + v9[21]) = 2;
  v18 = (_QWORD *)(a1 + v9[22]);
  *v18 = 0;
  v18[1] = 0;
  v19 = (_QWORD *)(a1 + v9[23]);
  *v19 = 0;
  v19[1] = 0;
  *(_QWORD *)(a1 + v9[24]) = 0;
  *(_QWORD *)(a1 + v9[25]) = _swiftEmptyArrayStorage;
  v20 = a1 + v9[26];
  TTRBoardReminderCellAssigneeConfiguration.init(contact:name:onAssigneePress:)(v33, 0, 0, 0, 0, 0, v16);
  v21 = v33[1];
  *(_OWORD *)v20 = v33[0];
  *(_OWORD *)(v20 + 16) = v21;
  *(_QWORD *)(v20 + 32) = v34;
  v22 = a1 + v9[27];
  TTRBoardReminderCellAppLinkConfiguration.init(icon:name:onAppLinkPress:)(v35, 0, 0, 0, 0, 0);
  v23 = v35[1];
  *(_OWORD *)v22 = v35[0];
  *(_OWORD *)(v22 + 16) = v23;
  *(_QWORD *)(v22 + 32) = v36;
  v24 = (_QWORD *)(a1 + v9[28]);
  v25 = sub_10002A750(&qword_10064CB58);
  v26 = (char *)v24 + *(int *)(v25 + 28);
  v27 = sub_10002A750(&qword_10064CB70);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  *((_BYTE *)v24 + *(int *)(v25 + 32)) = 1;
  *v24 = 0;
  v24[1] = 0;
  return result;
}

uint64_t sub_1004AA398()
{
  _QWORD *v0;

  return swift_bridgeObjectRetain(*v0);
}

uint64_t sub_1004AA3A0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*v1);
  *v1 = a1;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1004AA3C8())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

BOOL sub_1004AA3D8()
{
  uint64_t v0;

  return !*(_QWORD *)v0 || *(_QWORD *)(*(_QWORD *)v0 + 16) == 0;
}

uint64_t sub_1004AA3F8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t sub_1004AA400(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1004AA408())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1004AA418()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t sub_1004AA420(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1004AA428())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1004AA438@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v3;
  void *v4;
  char v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t result;

  v3 = *(_BYTE *)(v1 + 32);
  v4 = *(void **)(v1 + 40);
  v5 = *(_BYTE *)(v1 + 48);
  v7 = *(void **)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 64);
  v8 = *(_QWORD *)(v1 + 72);
  v9 = v7;
  v10 = v4;
  result = sub_100053DE4(v6, v8);
  *(_BYTE *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v8;
  return result;
}

__n128 sub_1004AA4A8(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __n128 result;

  sub_1000381B8(*(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 48) = v3;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 64) = result;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1004AA4EC())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1004AA4FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10000735C(v2 + *(int *)(a1 + 68), a2, &qword_10064CB68);
}

uint64_t sub_1004AA524(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100041F2C(a1, v2 + *(int *)(a2 + 68), &qword_10064CB68);
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1004AA548())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1004AA55C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10000735C(v2 + *(int *)(a1 + 72), a2, &qword_10064CB60);
}

uint64_t sub_1004AA584(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100041F2C(a1, v2 + *(int *)(a2 + 72), &qword_10064CB60);
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1004AA5A8())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

void *sub_1004AA5BC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v1 = *(void **)(v0 + 80);
  v2 = *(void **)(v0 + 88);
  v3 = v1;
  v4 = v2;
  return v1;
}

void sub_1004AA5E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1004AA624())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1004AA634@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t result;

  v3 = *(_BYTE *)(v1 + 96);
  v4 = *(_QWORD *)(v1 + 104);
  v5 = *(_BYTE *)(v1 + 112);
  v7 = *(void **)(v1 + 120);
  v6 = *(_QWORD *)(v1 + 128);
  v8 = *(_QWORD *)(v1 + 136);
  v9 = v7;
  result = sub_100053DE4(v6, v8);
  *(_BYTE *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v8;
  return result;
}

__n128 sub_1004AA6A0(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __n128 result;

  sub_1000381B8(*(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 112) = v3;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 128) = result;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1004AA6DC())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1004AA6EC@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t result;

  v4 = v1[18];
  v3 = v1[19];
  v6 = (void *)v1[20];
  v5 = v1[21];
  v7 = v1[22];
  v8 = v6;
  swift_bridgeObjectRetain(v3);
  result = sub_100053DE4(v5, v7);
  *a1 = v4;
  a1[1] = v3;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  return result;
}

__n128 sub_1004AA748(uint64_t a1)
{
  uint64_t v1;
  __n128 result;
  __int128 v4;

  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 152));

  sub_1000381B8(*(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 176));
  result = *(__n128 *)a1;
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 144) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 160) = v4;
  *(_QWORD *)(v1 + 176) = *(_QWORD *)(a1 + 32);
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1004AA78C())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1004AA79C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  uint64_t result;

  v4 = *(_QWORD *)(v1 + 184);
  v3 = *(_QWORD *)(v1 + 192);
  v5 = *(_QWORD *)(v1 + 200);
  v6 = *(_QWORD *)(v1 + 208);
  v7 = *(_WORD *)(v1 + 216);
  swift_bridgeObjectRetain(v3);
  result = sub_100053DE4(v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_WORD *)(a1 + 32) = v7;
  return result;
}

__n128 sub_1004AA7F4(uint64_t a1)
{
  uint64_t v1;
  __n128 result;
  __int128 v4;

  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 192));
  sub_1000381B8(*(_QWORD *)(v1 + 200), *(_QWORD *)(v1 + 208));
  result = *(__n128 *)a1;
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 184) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 200) = v4;
  *(_WORD *)(v1 + 216) = *(_WORD *)(a1 + 32);
  return result;
}

uint64_t sub_1004AA834()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v1 = *(void **)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 248);
  v4 = *(unsigned __int8 *)(v0 + 224);
  v5 = v1;
  sub_100053DE4(v2, v3);
  return v4;
}

uint64_t sub_1004AA880(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;

  result = sub_1000381B8(*(_QWORD *)(v4 + 240), *(_QWORD *)(v4 + 248));
  *(_BYTE *)(v4 + 224) = a1;
  *(_QWORD *)(v4 + 232) = a2;
  *(_QWORD *)(v4 + 240) = a3;
  *(_QWORD *)(v4 + 248) = a4;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1004AA8D4())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1004AA8E4@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[32];
  v3 = v1[33];
  v4 = v1[34];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  swift_bridgeObjectRetain(v2);
  return sub_100053DE4(v3, v4);
}

__n128 sub_1004AA918(__n128 *a1)
{
  __n128 *v1;
  unint64_t v2;
  __n128 result;
  __n128 v4;

  v4 = *a1;
  v2 = a1[1].n128_u64[0];
  swift_bridgeObjectRelease(v1[16].n128_u64[0]);
  sub_1000381B8(v1[16].n128_i64[1], v1[17].n128_i64[0]);
  result = v4;
  v1[16] = v4;
  v1[17].n128_u64[0] = v2;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1004AA960())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

void *sub_1004AA970(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *(int *)(a1 + 76));
  v3 = v2;
  return v2;
}

void sub_1004AA998(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(int *)(a2 + 76);

  *(_QWORD *)(v2 + v4) = a1;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1004AA9CC())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1004AA9E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 80));
  v3 = *v2;
  swift_bridgeObjectRetain(v2[1]);
  return v3;
}

uint64_t sub_1004AAA14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t result;

  v6 = (_QWORD *)(v3 + *(int *)(a3 + 80));
  result = swift_bridgeObjectRelease(v6[1]);
  *v6 = a1;
  v6[1] = a2;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1004AAA50())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1004AAA64(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 84));
}

uint64_t sub_1004AAA70(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(a2 + 84)) = result;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1004AAA7C())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1004AAA90(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 88));
  v3 = *v2;
  swift_bridgeObjectRetain(v2[1]);
  return v3;
}

uint64_t sub_1004AAAC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t result;

  v6 = (_QWORD *)(v3 + *(int *)(a3 + 88));
  result = swift_bridgeObjectRelease(v6[1]);
  *v6 = a1;
  v6[1] = a2;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1004AAB00())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1004AAB14(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 92));
  v3 = *v2;
  swift_bridgeObjectRetain(v2[1]);
  return v3;
}

uint64_t sub_1004AAB48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t result;

  v6 = (_QWORD *)(v3 + *(int *)(a3 + 92));
  result = swift_bridgeObjectRelease(v6[1]);
  *v6 = a1;
  v6[1] = a2;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1004AAB84())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

void *sub_1004AAB98(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *(int *)(a1 + 96));
  v3 = v2;
  return v2;
}

void sub_1004AABC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(int *)(a2 + 96);

  *(_QWORD *)(v2 + v4) = a1;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1004AABF4())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1004AAC08(uint64_t a1)
{
  uint64_t v1;

  return swift_bridgeObjectRetain(*(_QWORD *)(v1 + *(int *)(a1 + 100)));
}

uint64_t sub_1004AAC14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2 + 100);
  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + v4));
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1004AAC48())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1004AAC5C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t result;

  v4 = v2 + *(int *)(a1 + 104);
  v5 = *(void **)v4;
  v6 = *(_QWORD *)(v4 + 8);
  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  v9 = *(_QWORD *)(v4 + 32);
  swift_bridgeObjectRetain(v7);
  v10 = v5;
  result = sub_100053DE4(v8, v9);
  *a2 = v5;
  a2[1] = v6;
  a2[2] = v7;
  a2[3] = v8;
  a2[4] = v9;
  return result;
}

__n128 sub_1004AACC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  __n128 result;
  __int128 v6;

  v4 = v2 + *(int *)(a2 + 104);

  swift_bridgeObjectRelease(*(_QWORD *)(v4 + 16));
  sub_1000381B8(*(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32));
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v6;
  *(_QWORD *)(v4 + 32) = *(_QWORD *)(a1 + 32);
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1004AAD0C())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1004AAD20@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t result;

  v4 = v2 + *(int *)(a1 + 108);
  v5 = *(void **)v4;
  v6 = *(_QWORD *)(v4 + 8);
  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  v9 = *(_QWORD *)(v4 + 32);
  swift_bridgeObjectRetain(v7);
  v10 = v5;
  result = sub_100053DE4(v8, v9);
  *a2 = v5;
  a2[1] = v6;
  a2[2] = v7;
  a2[3] = v8;
  a2[4] = v9;
  return result;
}

__n128 sub_1004AAD84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  __n128 result;
  __int128 v6;

  v4 = v2 + *(int *)(a2 + 108);

  swift_bridgeObjectRelease(*(_QWORD *)(v4 + 16));
  sub_1000381B8(*(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32));
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v6;
  *(_QWORD *)(v4 + 32) = *(_QWORD *)(a1 + 32);
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1004AADD0())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1004AADE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  int v14;
  void (*v15)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t result;
  _BYTE v21[40];

  v3 = v2;
  v6 = sub_10002A750(&qword_10065ACA8);
  __chkstk_darwin(v6);
  v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for UICellConfigurationState(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1004AB000(v3, a2);
  sub_100010634(a1, (uint64_t)v21);
  v13 = sub_10002A750(&qword_10065ACB0);
  v14 = swift_dynamicCast(v8, v21, v13, v9, 6);
  v15 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  if (v14)
  {
    v15(v8, 0, 1, v9);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      v16 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
      v17 = UICellConfigurationState.isSelected.getter(v16);
      *(_BYTE *)(a2 + 1) = v17 & 1;
      v18 = UICellConfigurationState.isEditing.getter(v17);
      result = (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
      *(_BYTE *)(a2 + 217) = v18 & 1;
      return result;
    }
  }
  else
  {
    v15(v8, 1, 1, v9);
  }
  return sub_1000073A0((uint64_t)v8, &qword_10065ACA8);
}

id sub_1004AAF78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  id v4;
  uint64_t v6;

  __chkstk_darwin(a1);
  v3 = (unsigned __int8 *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TTRIBoardReminderCellContentView(0);
  sub_1004AB000(v1, (uint64_t)v3);
  v4 = sub_1003F68F4(v3);
  sub_1004AB044();
  return v4;
}

uint64_t sub_1004AB000(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1004AB044()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006617C8;
  if (!qword_1006617C8)
  {
    v1 = type metadata accessor for TTRIBoardReminderCellContentView(255);
    result = swift_getWitnessTable(&unk_1005340FC, v1);
    atomic_store(result, (unint64_t *)&qword_1006617C8);
  }
  return result;
}

uint64_t destroy for TTRIBoardReminderCellImageAttachmentsConfiguration(_QWORD *a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease(*a1);
  if (a1[1])
    return swift_release(a1[2]);
  return result;
}

_QWORD *_s9Reminders50TTRIBoardReminderCellImageAttachmentsConfigurationVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;

  v4 = *a2;
  *a1 = *a2;
  v6 = a2 + 1;
  v5 = a2[1];
  swift_bridgeObjectRetain(v4);
  if (v5)
  {
    v7 = a2[2];
    a1[1] = v5;
    a1[2] = v7;
    swift_retain(v7);
  }
  else
  {
    *(_OWORD *)(a1 + 1) = *v6;
  }
  return a1;
}

_QWORD *assignWithCopy for TTRIBoardReminderCellImageAttachmentsConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease(v4);
  v6 = a2[1];
  if (!a1[1])
  {
    if (v6)
    {
      v9 = a2[2];
      a1[1] = v6;
      a1[2] = v9;
      swift_retain(v9);
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v6)
  {
    swift_release(a1[2]);
    goto LABEL_7;
  }
  v7 = a2[2];
  v8 = a1[2];
  a1[1] = v6;
  a1[2] = v7;
  swift_retain(v7);
  swift_release(v8);
  return a1;
}

_QWORD *assignWithTake for TTRIBoardReminderCellImageAttachmentsConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  v5 = a2[1];
  if (!a1[1])
  {
    if (v5)
    {
      v8 = a2[2];
      a1[1] = v5;
      a1[2] = v8;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v5)
  {
    swift_release(a1[2]);
    goto LABEL_7;
  }
  v6 = a2[2];
  v7 = a1[2];
  a1[1] = v5;
  a1[2] = v6;
  swift_release(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIBoardReminderCellImageAttachmentsConfiguration(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIBoardReminderCellImageAttachmentsConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIBoardReminderCellImageAttachmentsConfiguration()
{
  return &type metadata for TTRIBoardReminderCellImageAttachmentsConfiguration;
}

uint64_t sub_1004AB318(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t ObjectType;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  ObjectType = swift_getObjectType(v2, a2);
  LODWORD(v4) = 1144750080;
  objc_msgSend(v2, "setContentHuggingPriority:forAxis:", 0, v4);
  LODWORD(v5) = 1144750080;
  objc_msgSend(v2, "setContentHuggingPriority:forAxis:", 1, v5);
  LODWORD(v6) = 1144750080;
  objc_msgSend(v2, "setContentCompressionResistancePriority:forAxis:", 0, v6);
  LODWORD(v7) = 1144750080;
  objc_msgSend(v2, "setContentCompressionResistancePriority:forAxis:", 1, v7);
  v8 = sub_10002A750(&qword_1006415F0);
  v9 = swift_allocObject(v8, 48, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100520250;
  *(_QWORD *)(v9 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v9 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v10 = UIView.registerForTraitChanges<A>(_:handler:)(v9, sub_1004ABCE8, 0, ObjectType);
  swift_unknownObjectRelease(v10);
  return swift_bridgeObjectRelease(v9);
}

id sub_1004AB40C(void *a1, uint64_t a2)
{
  _BYTE *v2;
  objc_class *ObjectType;
  char *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_contacts] = _swiftEmptyArrayStorage;
  v5 = &v2[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_unscaledAvatarSize];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v2[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_avatarsNeedUpdate] = 1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_avatarViewControllers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_avatarBorderViews] = _swiftEmptyArrayStorage;
  v11.receiver = v2;
  v11.super_class = ObjectType;
  v6 = objc_msgSendSuper2(&v11, "initWithCoder:", a1);
  v7 = v6;
  if (v6)
  {
    v8 = v6;
    sub_1004AB318((uint64_t)v8, v9);

  }
  return v7;
}

void sub_1004AB52C()
{
  _BYTE *v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  id v7;
  uint64_t v8;
  _BYTE v9[24];

  v1 = (uint64_t *)&v0[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_contacts];
  v2 = swift_beginAccess(&v0[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_contacts], v9, 0, 0).n128_u64[0];
  v3 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    if (v3 < 0)
      v8 = *v1;
    else
      v8 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    _CocoaArrayWrapper.endIndex.getter(v8);
    v2 = swift_bridgeObjectRelease(v3).n128_u64[0];
  }
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_unscaledAvatarSize];
  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_unscaledAvatarSize + 8];
  v6 = v0[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_unscaledAvatarSize + 16];
  v7 = objc_msgSend(v0, "traitCollection", *(double *)&v2);
  sub_1004ABD2C(v4, v5, v6, v7);

}

void sub_1004AB63C()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  id v6;
  double v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  Class isa;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  id v38;
  id v39;
  double v40;
  id v41;
  double v42;
  double v43;
  CGFloat v44;
  CGFloat x;
  CGFloat y;
  CGFloat v47;
  CGFloat height;
  id v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  double Width;
  double v56;
  double rect;
  _QWORD v58[3];
  char v59[32];
  CGRect v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_unscaledAvatarSize];
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_unscaledAvatarSize];
  v4 = *((_QWORD *)v2 + 1);
  v5 = v2[16];
  v6 = objc_msgSend(v1, "traitCollection");
  v56 = sub_1004ABD2C(v3, v4, v5, v6);
  rect = v7;

  v8 = (uint64_t *)&v1[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_contacts];
  swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_contacts], v59, 0, 0);
  v9 = *v8;
  if ((unint64_t)*v8 >> 62)
    goto LABEL_29;
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  sub_1004AC218(v10);
  v12 = v11;
  objc_msgSend(v1, "bounds", swift_bridgeObjectRetain(v11).n128_f64[0]);
  Width = CGRectGetWidth(v60);
  v13 = *v8;
  if ((unint64_t)*v8 >> 62)
  {
    if (v13 < 0)
      v52 = *v8;
    else
      v52 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v8);
    v14 = _CocoaArrayWrapper.endIndex.getter(v52);
    swift_bridgeObjectRelease(v13);
    if (v14 < 0)
    {
      __break(1u);
      goto LABEL_38;
    }
  }
  else
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v14)
  {
LABEL_24:
    swift_bridgeObjectRelease(v12);
    return;
  }
  v54 = v12 & 0xC000000000000001;
  if ((v12 & 0xC000000000000001) != 0 || (unint64_t)(v14 - 1) < *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = &v1[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_avatarBorderViews];
    v53 = -v14;
    v16 = 0.0;
    v17 = 4;
    v18 = v12;
    while (1)
    {
      v9 = v17 - 4;
      if (v54)
        v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 - 4, v12);
      else
        v19 = *(id *)(v12 + 8 * v17);
      v20 = v19;
      swift_beginAccess(v15, v58, 32, 0);
      v21 = *(_QWORD *)v15;
      if ((*(_QWORD *)v15 & 0xC000000000000001) != 0)
      {
        v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 - 4, v21);
      }
      else
      {
        if (v9 < 0)
        {
          __break(1u);
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
LABEL_28:
          __break(1u);
LABEL_29:
          if (v9 < 0)
            v51 = v9;
          else
            v51 = v9 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v9);
          v10 = _CocoaArrayWrapper.endIndex.getter(v51);
          swift_bridgeObjectRelease(v9);
          goto LABEL_3;
        }
        if ((unint64_t)v9 >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_26;
        v22 = *(id *)(v21 + 8 * v17);
      }
      v23 = v22;
      swift_endAccess(v58);
      v24 = sub_10002A750((uint64_t *)&unk_1006415A0);
      v25 = swift_allocObject(v24, 40, 7);
      *(_OWORD *)(v25 + 16) = xmmword_100521140;
      swift_beginAccess(v8, v58, 32, 0);
      v26 = *v8;
      if ((*v8 & 0xC000000000000001) != 0)
      {
        v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 - 4, v26);
      }
      else
      {
        if (v9 < 0)
          goto LABEL_27;
        if ((unint64_t)v9 >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_28;
        v27 = *(id *)(v26 + 8 * v17);
      }
      *(_QWORD *)(v25 + 32) = v27;
      v28 = swift_endAccess(v58);
      v58[0] = v25;
      specialized Array._endMutation()(v28);
      v29 = v58[0];
      sub_100005ED8(0, (unint64_t *)&qword_100642228, CNContact_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v20, "setContacts:", isa, swift_bridgeObjectRelease(v29).n128_f64[0]);

      v31 = CGRect.flippedForRTLIfNeeded(for:inContainerWithWidth:)(objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection"), Width, v16, 0.0, v56, rect);
      v33 = v32;
      v35 = v34;
      v37 = v36;
      v38 = objc_msgSend(v20, "view");
      objc_msgSend(v38, "setFrame:", v31, v33, v35, v37);

      v39 = objc_msgSend(v1, "traitCollection");
      v40 = sub_1004AC728(v39);

      v41 = objc_msgSend(v1, "traitCollection");
      objc_msgSend(v41, "displayScale");
      v43 = v42;

      v44 = -UIFloorToScale(v40, v43);
      v61.origin.x = v31;
      v61.origin.y = v33;
      v61.size.width = v35;
      v61.size.height = v37;
      v62 = CGRectInset(v61, v44, v44);
      x = v62.origin.x;
      y = v62.origin.y;
      v47 = v62.size.width;
      height = v62.size.height;
      objc_msgSend(v23, "setFrame:");
      v49 = objc_msgSend(v23, "layer");
      v63.origin.x = x;
      v63.origin.y = y;
      v63.size.width = v47;
      v63.size.height = height;
      objc_msgSend(v49, "setCornerRadius:", CGRectGetWidth(v63) * 0.5);

      v64.origin.y = 0.0;
      v64.origin.x = v16;
      v64.size.width = v56;
      v64.size.height = rect;
      v50 = CGRectGetWidth(v64);

      v16 = v16 + v50 * 0.75;
      ++v17;
      v12 = v18;
      if (v53 + v17 == 4)
        goto LABEL_24;
    }
  }
LABEL_38:
  __break(1u);
}

uint64_t sub_1004ABBC8(uint64_t result, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t (*v11)(void);

  if (result)
  {
    v5 = result;
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      a3 = a2;
      v4 = *v3;
      if (!((unint64_t)*v3 >> 62))
      {
        v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
        v7 = -v6;
        if (!__OFSUB__(0, v6))
          goto LABEL_5;
        goto LABEL_20;
      }
    }
    if (v4 < 0)
      v10 = v4;
    else
      v10 = v4 & 0xFFFFFFFFFFFFFF8;
    v11 = a3;
    swift_bridgeObjectRetain(v4);
    v6 = _CocoaArrayWrapper.endIndex.getter(v10);
    result = swift_bridgeObjectRelease(v4);
    a3 = v11;
    v7 = -v6;
    if (!__OFSUB__(0, v6))
    {
LABEL_5:
      v8 = -v5;
      if (v7 <= 0 && v7 > v8)
        goto LABEL_23;
      result = v6 - v5;
      if (!__OFADD__(v6, v8))
      {
        if (v6 >= result)
          return a3();
        goto LABEL_22;
      }
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
      return result;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

id sub_1004ABCE8(_BYTE *a1)
{
  a1[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_avatarsNeedUpdate] = 1;
  objc_msgSend(a1, "invalidateIntrinsicContentSize");
  return objc_msgSend(a1, "setNeedsLayout");
}

double sub_1004ABD2C(uint64_t a1, int a2, char a3, id a4)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;

  v6 = objc_msgSend(a4, "preferredContentSizeCategory");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityMedium);
  v9 = v8;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  if (v7 == v10 && v9 == v11)
    goto LABEL_14;
  v13 = v11;
  v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v13);
  if ((v14 & 1) != 0)
  {
LABEL_15:

    v28 = 1;
    goto LABEL_16;
  }
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityLarge);
  v9 = v16;
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  if (v15 == v17 && v9 == v18)
  {
LABEL_14:
    swift_bridgeObjectRelease_n(v9, 2);
    goto LABEL_15;
  }
  v20 = v18;
  v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v9, v17, v18, 0);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v20);
  if ((v21 & 1) != 0)
    goto LABEL_15;
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraLarge);
  v24 = v23;
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v27 = v25;
  if (v22 == v26 && v24 == v25)
    goto LABEL_13;
  v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v26, v25, 0);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v27);
  if ((v30 & 1) != 0)
    goto LABEL_23;
  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraExtraLarge);
  v24 = v32;
  v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v35 = v33;
  if (v31 == v34 && v24 == v33)
  {
LABEL_13:
    swift_bridgeObjectRelease_n(v24, 2);
LABEL_23:

    v28 = 2;
    goto LABEL_16;
  }
  v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v24, v34, v33, 0);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v35);
  if ((v36 & 1) != 0)
    goto LABEL_23;
  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraExtraExtraLarge);
  v39 = v38;
  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v42 = v40;
  if (v37 == v41 && v39 == v40)
  {

    v28 = 2;
    swift_bridgeObjectRelease_n(v39, 2);
  }
  else
  {
    v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v39, v41, v40, 0);

    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v42);
    if ((v43 & 1) != 0)
      v28 = 2;
    else
      v28 = 0;
  }
LABEL_16:
  if ((a3 & 1) != 0)
    return dbl_100538960[v28];
  else
    return dbl_100538960[v28] / 24.0 * *(double *)&a1;
}

void sub_1004ABFF8(uint64_t a1, unint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  Swift::Int v18;
  uint64_t v19;
  uint64_t v20;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = a4;
    v7 = a3;
    v4 = a2;
    v5 = a1;
    v8 = a2 >> 62;
    if (!(a2 >> 62))
    {
      v9 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      v10 = -v9;
      if (!__OFSUB__(0, v9))
        goto LABEL_4;
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
  }
  if (v4 < 0)
    v20 = v4;
  else
    v20 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v9 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease(v4);
  v10 = -v9;
  if (__OFSUB__(0, v9))
    goto LABEL_43;
LABEL_4:
  v11 = -v5;
  if (v10 > 0 || v10 <= v11)
  {
    v12 = v9 - v5;
    if (__OFADD__(v9, v11))
    {
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    if (v9 < v12)
    {
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    if (!v8)
    {
LABEL_8:
      v13 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_16;
    }
  }
  else
  {
    if (v9 < 0)
    {
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    v12 = 0;
    if (!v8)
      goto LABEL_8;
  }
  if (v4 < 0)
    v14 = v4;
  else
    v14 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v13 = _CocoaArrayWrapper.endIndex.getter(v14);
  swift_bridgeObjectRelease(v4);
LABEL_16:
  if (v13 < v12)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (v12 < 0)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v8)
  {
    if (v4 < 0)
      v16 = v4;
    else
      v16 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v15 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v15 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v15 < v9)
    goto LABEL_46;
  if (v9 < 0)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if ((v4 & 0xC000000000000001) != 0 && v12 != v9)
  {
    if (v12 < (unint64_t)v9)
    {
      sub_100005ED8(0, v7, v6);
      v17 = v12;
      do
      {
        v18 = v17 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v17);
        v17 = v18;
      }
      while (v9 != v18);
      goto LABEL_31;
    }
LABEL_51:
    __break(1u);
    return;
  }
LABEL_31:
  if (v8)
  {
    if (v4 < 0)
      v19 = v4;
    else
      v19 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    _CocoaArrayWrapper.subscript.getter(v12, v9, v19);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    swift_bridgeObjectRetain(v4);
  }
}

void sub_1004AC218(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSString v18;
  id v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  void **v40;
  void *v41;
  id v42;
  id v43;
  unint64_t *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  double v54;
  unint64_t v55;
  void **v56;
  void *v57;
  uint64_t (*v58)(void);
  uint64_t (*v59)(void);
  uint64_t v60;
  id v61;
  char *v62;
  _BYTE v63[24];
  _BYTE v64[24];
  char v65[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_avatarViewControllers);
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_avatarViewControllers, v65, 0, 0);
  v4 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v5 <= a1;
    if (v5 < a1)
      goto LABEL_3;
LABEL_17:
    if (v6)
      return;
    v7 = __OFSUB__(v5, a1);
    v29 = v5 - a1;
    if (!v7)
    {
      v30 = *v3;
      swift_bridgeObjectRetain(*v3);
      sub_1004ABFF8(v29, v30, &qword_10065D8B8, CNAvatarViewController_ptr);
      v32 = v31;
      v34 = v33;
      v36 = v35;
      v38 = v37;
      swift_bridgeObjectRelease(v30);
      v39 = (v38 >> 1) - v36;
      if (v38 >> 1 != v36)
      {
        if ((uint64_t)(v38 >> 1) <= v36)
        {
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
        v40 = (void **)(v34 + 8 * v36);
        do
        {
          v41 = *v40++;
          v42 = v41;
          v43 = objc_msgSend(v42, "viewIfLoaded");
          objc_msgSend(v43, "removeFromSuperview");

          --v39;
        }
        while (v39);
      }
      swift_unknownObjectRelease(v32);
      v44 = (unint64_t *)&v62[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_avatarBorderViews];
      swift_beginAccess(&v62[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_avatarBorderViews], v64, 0, 0);
      v45 = *v44;
      swift_bridgeObjectRetain(*v44);
      sub_1004ABFF8(v29, v45, (unint64_t *)&qword_1006406F0, UIView_ptr);
      v47 = v46;
      v49 = v48;
      v51 = v50;
      v53 = v52;
      *(_QWORD *)&v54 = swift_bridgeObjectRelease(v45).n128_u64[0];
      v55 = (v53 >> 1) - v51;
      if (v53 >> 1 != v51)
      {
        if ((uint64_t)(v53 >> 1) <= v51)
        {
LABEL_33:
          __break(1u);
          return;
        }
        v56 = (void **)(v49 + 8 * v51);
        do
        {
          v57 = *v56++;
          objc_msgSend(v57, "removeFromSuperview", v54);
          --v55;
        }
        while (v55);
      }
      swift_unknownObjectRelease(v47);
      swift_beginAccess(v3, v63, 33, 0);
      sub_1004ABBC8(v29, (uint64_t (*)(void))sub_10043B5C0, v58);
      swift_endAccess(v63);
      swift_beginAccess(v44, v63, 33, 0);
      sub_1004ABBC8(v29, (uint64_t (*)(void))sub_10043B5D4, v59);
      swift_endAccess(v63);
      return;
    }
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v4 < 0)
    v28 = *v3;
  else
    v28 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v3);
  v5 = _CocoaArrayWrapper.endIndex.getter(v28);
  swift_bridgeObjectRelease(v4);
  v6 = v5 <= a1;
  if (v5 >= a1)
    goto LABEL_17;
LABEL_3:
  v7 = __OFSUB__(a1, v5);
  v8 = a1 - v5;
  if (v7)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v8 < 0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v8)
  {
    v61 = (id)objc_opt_self(UIColor);
    v9 = &v62[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_avatarBorderViews];
    v60 = kCAFilterDestOut;
    do
    {
      v10 = objc_msgSend(objc_allocWithZone((Class)CNAvatarViewController), "init");
      objc_msgSend(v10, "setThreeDTouchEnabled:", 0);
      v11 = objc_msgSend(v10, "view");
      objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v12 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
      objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v13 = objc_msgSend(v61, "whiteColor");
      objc_msgSend(v12, "setBackgroundColor:", v13);

      v14 = objc_msgSend(v12, "layer");
      static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
      v16 = v15;
      v17 = objc_allocWithZone((Class)CAFilter);
      v18 = String._bridgeToObjectiveC()();
      v19 = objc_msgSend(v17, "initWithType:", v18, swift_bridgeObjectRelease(v16).n128_f64[0]);

      objc_msgSend(v14, "setCompositingFilter:", v19);
      objc_msgSend(v62, "insertSubview:atIndex:", v11, 0);
      objc_msgSend(v62, "insertSubview:atIndex:", v12, 0);
      swift_beginAccess(v3, v64, 33, 0);
      v20 = v10;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
      v22 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v21 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v22 >= v21 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
      v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v20);
      specialized Array._endMutation()(v23);
      swift_endAccess(v64);
      swift_beginAccess(v9, v64, 33, 0);
      v24 = v12;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
      v26 = *(_QWORD *)((*(_QWORD *)v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v25 = *(_QWORD *)((*(_QWORD *)v9 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v26 >= v25 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1);
      v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v24);
      specialized Array._endMutation()(v27);
      swift_endAccess(v64);

      --v8;
    }
    while (v8);
  }
}

double sub_1004AC728(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  v1 = objc_msgSend(a1, "preferredContentSizeCategory");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityMedium);
  v4 = v3;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  if (v2 == v5 && v4 == v6)
    goto LABEL_14;
  v8 = v6;
  v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v4, v5, v6, 0);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v8);
  if ((v9 & 1) != 0)
  {
LABEL_15:

    return 2.0;
  }
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityLarge);
  v4 = v11;
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  if (v10 == v12 && v4 == v13)
  {
LABEL_14:
    swift_bridgeObjectRelease_n(v4, 2);
    goto LABEL_15;
  }
  v15 = v13;
  v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v4, v12, v13, 0);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v15);
  if ((v16 & 1) != 0)
    goto LABEL_15;
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraLarge);
  v19 = v18;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v22 = v20;
  if (v17 == v21 && v19 == v20)
    goto LABEL_13;
  v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v21, v20, 0);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v22);
  if ((v24 & 1) != 0)
    goto LABEL_20;
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraExtraLarge);
  v19 = v26;
  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v29 = v27;
  if (v25 == v28 && v19 == v27)
  {
LABEL_13:
    swift_bridgeObjectRelease_n(v19, 2);
LABEL_20:

    return 3.0;
  }
  v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v19, v28, v27, 0);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v29);
  if ((v30 & 1) != 0)
    goto LABEL_20;
  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraExtraExtraLarge);
  v33 = v32;
  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v36 = v34;
  if (v31 == v35 && v33 == v34)
  {

    swift_bridgeObjectRelease_n(v33, 2);
    return 3.0;
  }
  v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v33, v35, v34, 0);

  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v36);
  result = 1.5;
  if ((v37 & 1) != 0)
    return 3.0;
  return result;
}

uint64_t sub_1004AC9A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100661820);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100661820);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

BOOL sub_1004ACA34(void **a1, void **a2)
{
  void *v2;
  void *v3;
  _BOOL8 result;
  BOOL v5;
  id v6;
  id v7;
  char v8;

  v2 = *a1;
  v3 = *a2;
  result = ((unint64_t)*a1 | (unint64_t)*a2) == 0;
  if (v2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
    v6 = v2;
    v7 = v3;
    v8 = static NSObject.== infix(_:_:)(v6, v7);

    return v8 & 1;
  }
  return result;
}

uint64_t sub_1004ACABC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    sub_1004ACB10();
    return swift_release(v4);
  }
  return result;
}

void sub_1004ACB10()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t Strong;
  uint64_t v10;
  id v11;
  _BYTE v12[24];

  v1 = v0;
  v2 = (_QWORD *)(v0 + 72);
  swift_beginAccess(v2, v12, 0, 0);
  v3 = *(_QWORD *)(v1 + 96);
  if (v3)
  {
    v4 = *(_QWORD *)(*sub_10001413C(v2, v3) + 16);
    v5 = swift_retain(v4);
    CurrentValueSubject.value.getter(&v11, v5);
    swift_release(v4);
    v6 = v11;
    if (v11)
    {
      v7 = objc_msgSend(v11, "canUndo");
      v8 = objc_msgSend(v6, "canRedo");
    }
    else
    {
      v8 = 0;
      v7 = 0;
    }
  }
  else
  {
    v8 = 0;
    v7 = 0;
    v6 = 0;
  }
  if (v7 != *(unsigned __int8 *)(v1 + 112) || ((v8 ^ *(unsigned __int8 *)(v1 + 113)) & 1) != 0)
  {
    *(_BYTE *)(v1 + 112) = v7;
    *(_BYTE *)(v1 + 113) = v8;
    Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
    if (Strong)
    {
      v10 = Strong;
      sub_10004BD64(0xD00000000000001CLL, 0x800000010057ABE0);
      swift_unknownObjectRelease(v10);
    }
  }

}

uint64_t sub_1004ACC24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];

  v2 = v1;
  v4 = (_QWORD *)(v1 + 72);
  swift_beginAccess(v4, v13, 33, 0);
  sub_1004AD7C8(a1, (uint64_t)v4);
  swift_endAccess(v13);
  v5 = *(_QWORD *)(v2 + 96);
  if (v5)
  {
    v6 = *(_QWORD *)(*sub_10001413C(v4, v5) + 16);
    v13[0] = v6;
    v7 = swift_allocObject(&unk_1006099F8, 24, 7);
    swift_weakInit(v7 + 16, v2);
    swift_retain(v6);
    v8 = sub_10002A750(&qword_10065F218);
    v9 = sub_1004AD87C();
    v10 = Publisher<>.sink(receiveValue:)(sub_1004AD874, v7, v8, v9);
    swift_release(v7);
    swift_release(v13[0]);
  }
  else
  {
    v10 = 0;
  }
  v11 = *(_QWORD *)(v2 + 152);
  *(_QWORD *)(v2 + 152) = v10;
  swift_release(v11);
  return sub_1004AD810(a1);
}

uint64_t sub_1004ACD30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = 0;
  swift_unknownObjectWeakInit(v2 + 16, 0);
  *(_QWORD *)(v2 + 40) = 0;
  swift_unknownObjectWeakInit(v2 + 32, 0);
  *(_WORD *)(v2 + 112) = 0;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 136) = xmmword_1005205B0;
  *(_QWORD *)(v2 + 152) = 0;
  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = a2;
  return v2;
}

void sub_1004ACDA0(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  void *v4;
  BOOL v5;
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;

  v2 = v1;
  v4 = (void *)v1[18];
  if (!v4)
  {
    sub_10004E08C(0);
    if (!a1)
      return;
    goto LABEL_9;
  }
  v5 = v4 == (void *)1 || a1 == 0;
  if (v5
    || (sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr),
        v6 = a1,
        sub_1004AD7B8(v4),
        v7 = static NSObject.== infix(_:_:)(v4, v6),
        v6,
        sub_10004E08C(v4),
        (v7 & 1) == 0))
  {
LABEL_9:
    v8 = v2[17];
    if (v8)
    {
      swift_retain(v2[17]);
      TTRDataViewMonitor.pause()();
      swift_release(v8);
      v9 = v2[17];
      v2[17] = 0;
      swift_release(v9);
    }
    v10 = (void *)v2[18];
    v2[18] = 1;
    sub_10004E08C(v10);
    v11 = (void *)v2[8];
    v2[8] = 0;

    v12 = (void *)v2[18];
    v2[18] = a1;
    sub_10004E08C(v12);
    v13 = a1;
    sub_1004ACEA8((uint64_t)a1);
  }
}

uint64_t sub_1004ACEA8(uint64_t result)
{
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD v29[2];

  if (!v1[17])
  {
    v2 = v1;
    v3 = (void *)result;
    v4 = *v1;
    if (qword_10063D820 != -1)
      swift_once(&qword_10063D820, sub_1004AC9A4);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100012DC4(v5, (uint64_t)qword_100661820);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "TTRIRemindersListNavigationBarInteractor start fetching and monitoring default list", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

    v11 = (void *)v2[15];
    v10 = (void *)v2[16];
    v12 = type metadata accessor for TTRIRemindersListNavigationBarDefaultListDataView();
    v13 = (_QWORD *)swift_allocObject(v12, 40, 7);
    v13[2] = v11;
    v13[3] = v10;
    v13[4] = v3;
    sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
    v14 = v3;
    v15 = v11;
    sub_1000438B0(v10);
    swift_retain(v13);
    v16 = swift_retain(v2);
    v17 = static OS_dispatch_queue.main.getter(v16);
    type metadata accessor for RDIDispatchQueue(0);
    v18 = static RDIDispatchQueue.utilityQueue.getter();
    v19 = static RDIDispatchQueue.storeUserInteractiveQueue.getter();
    v20 = TTRDataViewMonitorEnvironmentInfo.init()();
    v22 = v21;
    v24 = v23;
    v29[0] = 0;
    v29[1] = v3;
    v28 = v13;
    v25 = sub_10002A750(&qword_100661A28);
    swift_allocObject(v25, 96, 7);
    v26 = ((uint64_t (*)(_QWORD *, _QWORD **, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE, uint64_t, _UNKNOWN **))TTRDataViewMonitor.init<A>(initialData:dataView:delegate:queue:backgroundQueue:userInteractiveBackgroundQueue:environmentInfo:))(v29, &v28, v2, v17, v18, v19, v20, v22, v24 & 1, v4, &off_1006619F8);
    v27 = v2[17];
    v2[17] = v26;
    swift_retain(v26);
    swift_release(v27);
    TTRDataViewMonitor.resume(userInteractive:)(1);
    swift_release(v13);
    return swift_release(v26);
  }
  return result;
}

void sub_1004AD0D0(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  id v8;
  char v9;
  void *v10;
  id v11;
  id v12;
  char v13;
  id v14;
  uint64_t Strong;
  uint64_t v16;

  v3 = v2;
  v6 = *(void **)(v3 + 144);
  if (v6)
  {
    if (v6 == (void *)1 || a2 == 0)
      return;
    sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
    v8 = a2;
    sub_1004AD7B8(v6);
    v9 = static NSObject.== infix(_:_:)(v6, v8);

    sub_10004E08C(v6);
    if ((v9 & 1) == 0)
      return;
  }
  else
  {
    sub_10004E08C(0);
    if (a2)
      return;
  }
  v10 = *(void **)(v3 + 64);
  if (v10)
  {
    if (a1)
    {
      sub_100005ED8(0, (unint64_t *)&qword_100640498, REMList_ptr);
      v11 = a1;
      v12 = v10;
      v13 = static NSObject.== infix(_:_:)(v12, v11);

      if ((v13 & 1) != 0)
        return;
      v10 = *(void **)(v3 + 64);
    }
  }
  else
  {
    if (!a1)
      return;
    v10 = 0;
  }
  *(_QWORD *)(v3 + 64) = a1;
  v14 = a1;

  Strong = swift_unknownObjectWeakLoadStrong(v3 + 16);
  if (Strong)
  {
    v16 = Strong;
    sub_10004BD64(0xD000000000000012, 0x800000010057AC20);
    swift_unknownObjectRelease(v16);
  }
}

uint64_t sub_1004AD228()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);
  sub_1000381C8(v0 + 32);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 48));

  sub_1004AD810(v0 + 72);
  sub_1000438C0(*(id *)(v0 + 128));
  swift_release();
  sub_10004E08C(*(id *)(v0 + 144));
  swift_release();
  return v0;
}

uint64_t sub_1004AD28C()
{
  uint64_t v0;

  sub_1004AD228();
  return swift_deallocClassInstance(v0, 160, 7);
}

uint64_t type metadata accessor for TTRIRemindersListNavigationBarInteractor()
{
  return objc_opt_self(_TtC9Reminders40TTRIRemindersListNavigationBarInteractor);
}

void sub_1004AD2CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t Strong;

  v4 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  swift_unknownObjectRelease(v4);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
  swift_unknownObjectRetain(a1);
  if (Strong)
  {
    sub_10004BD64(0xD00000000000001FLL, 0x800000010057AC00);
    swift_unknownObjectRelease(Strong);
  }
}

void sub_1004AD338(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t Strong;
  uint64_t v23;

  v3 = v2;
  ObjectType = swift_getObjectType(a1, a2);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(ObjectType, a2);
  v8 = v7;
  v10 = (_QWORD *)(v2 + 48);
  v9 = *(_QWORD *)(v2 + 48);
  if (!v9)
  {
    swift_bridgeObjectRelease(v7);
    return;
  }
  v11 = v6;
  v12 = *(_QWORD *)(v2 + 56);
  v13 = swift_getObjectType(*(_QWORD *)(v2 + 48), v7);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v12 + 24);
  v15 = swift_unknownObjectRetain(v9);
  v16 = v14(v13, v12, v15);
  v18 = v17;
  swift_unknownObjectRelease(v9);
  if (v11 == v16 && v8 == v18)
  {
    swift_bridgeObjectRelease_n(v8, 2);
  }
  else
  {
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v8, v16, v18, 0);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v18);
    if ((v20 & 1) == 0)
      return;
  }
  v21 = *(_QWORD *)(v3 + 48);
  *v10 = 0;
  *(_QWORD *)(v3 + 56) = 0;
  swift_unknownObjectRelease(v21);
  Strong = swift_unknownObjectWeakLoadStrong(v3 + 16);
  if (Strong)
  {
    v23 = Strong;
    sub_10004BD64(0xD00000000000001FLL, 0x800000010057AC00);
    swift_unknownObjectRelease(v23);
  }
}

uint64_t sub_1004AD4A0()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 32, v2, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v0 + 32);
}

uint64_t sub_1004AD4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v6[24];

  swift_beginAccess(v2 + 32, v6, 1, 0);
  *(_QWORD *)(v2 + 40) = a2;
  swift_unknownObjectWeakAssign(v2 + 32, a1);
  return swift_unknownObjectRelease(a1);
}

void (*sub_1004AD544(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t Strong;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess(v1 + 32, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v3[3] = Strong;
  v3[4] = v5;
  return sub_1004AD5B0;
}

void sub_1004AD5B0(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  *(_QWORD *)(v5 + 40) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign(v5 + 32, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t sub_1004AD624()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (result)
  {
    v2 = result;
    sub_10004BD64(0xD00000000000001FLL, 0x800000010057AC00);
    return swift_unknownObjectRelease(v2);
  }
  return result;
}

void sub_1004AD67C(uint64_t a1, void **a2)
{
  sub_1004AD0D0(*a2, a2[1]);
}

void sub_1004AD684(uint64_t a1, uint64_t a2)
{
  sub_1004AD8C8(a2);
}

uint64_t sub_1004AD68C()
{
  id *v0;

  sub_1000438C0(v0[3]);
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for TTRIRemindersListNavigationBarDefaultListDataView()
{
  return objc_opt_self(_TtC9Reminders49TTRIRemindersListNavigationBarDefaultListDataView);
}

void **initializeBufferWithCopyOfBuffer for TTRIRemindersListNavigationBarListFetchingTarget(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void **assignWithCopy for TTRIRemindersListNavigationBarListFetchingTarget(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  v5 = v3;

  return a1;
}

void **assignWithTake for TTRIRemindersListNavigationBarListFetchingTarget(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for TTRIRemindersListNavigationBarListFetchingTarget()
{
  return &type metadata for TTRIRemindersListNavigationBarListFetchingTarget;
}

id sub_1004AD780(_QWORD *a1)
{
  uint64_t v1;
  id result;
  uint64_t v4;

  result = sub_1004ADAA0();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

_UNKNOWN **sub_1004AD7AC()
{
  return &off_1006619D8;
}

id sub_1004AD7B8(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

uint64_t sub_1004AD7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100661A30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004AD810(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750(&qword_100661A30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004AD850()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004AD874(uint64_t a1)
{
  uint64_t v1;

  return sub_1004ACABC(a1, v1);
}

unint64_t sub_1004AD87C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100661A38;
  if (!qword_100661A38)
  {
    v1 = sub_10002CA5C(&qword_10065F218);
    result = swift_getWitnessTable(&protocol conformance descriptor for CurrentValueSubject<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100661A38);
  }
  return result;
}

void sub_1004AD8C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  NSObject *oslog;
  uint64_t v11;
  _QWORD v12[3];
  _BYTE v13[8];
  uint64_t v14;

  if (qword_10063D820 != -1)
    swift_once(&qword_10063D820, sub_1004AC9A4);
  v2 = type metadata accessor for Logger(0);
  sub_100012DC4(v2, (uint64_t)qword_100661820);
  swift_errorRetain(a1);
  v3 = swift_errorRetain(a1);
  oslog = Logger.logObject.getter(v3);
  v4 = static os_log_type_t.error.getter(oslog);
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v14 = v6;
    *(_DWORD *)v5 = 136315138;
    swift_getErrorValue(a1, v13, v12);
    v7 = Error.rem_errorDescription.getter(v12[1], v12[2]);
    v9 = v8;
    v11 = sub_100027E40(v7, v8, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, v12, v5 + 4, v5 + 12);
    swift_bridgeObjectRelease(v9);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, oslog, v4, "TTRIRemindersListNavigationBarDefaultListDataView: did hit error {error: %s}", v5, 0xCu);
    swift_arrayDestroy(v6, 1, &type metadata for Any[8]);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);

  }
}

id sub_1004ADAA0()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v18;

  v1 = (void *)v0[4];
  if (!v1)
  {
    v9 = (void *)v0[3];
    if (v9)
    {
      if (v9 != (void *)1)
      {
        v15 = (void *)v0[2];
        v18 = 0;
        v6 = objc_msgSend(v15, "fetchDefaultListRequiringCloudKitAccountWithAccountID:error:", v9, &v18);
        if (v18)
        {
          v18;

          swift_willThrow(v16);
          sub_1000438C0(v9);
          return v6;
        }
        sub_1000438C0(v9);
        goto LABEL_4;
      }
      v10 = (void *)v0[2];
      v18 = 0;
      v11 = objc_msgSend(v10, "fetchDefaultListRequiringCloudKitWithError:", &v18);
    }
    else
    {
      v13 = (void *)v0[2];
      v18 = 0;
      v11 = objc_msgSend(v13, "fetchDefaultListWithError:", &v18);
    }
    v6 = v11;
    if (v18)
    {
      v18;

      swift_willThrow(v14);
      return v6;
    }
    goto LABEL_4;
  }
  v2 = (void *)v0[2];
  v18 = 0;
  v3 = v1;
  v4 = objc_msgSend(v2, "fetchListWithObjectID:error:", v3, &v18);
  v5 = v18;
  if (!v4)
  {
    v6 = v18;
    _convertNSErrorToError(_:)(v5);

    swift_willThrow(v12);
    return v6;
  }
  v6 = v4;
  v7 = v18;

LABEL_4:
  v8 = v1;
  return v6;
}

uint64_t *sub_1004ADC60(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v13 = type metadata accessor for IndexPath(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v9 = a1;
      v10 = a3;
      v11 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for IndexPath(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = a3;
      v11 = 1;
    }
    else
    {
      v14 = type metadata accessor for IndexPath(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v9 = a1;
      v10 = a3;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1004ADD68(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if (result <= 2)
  {
    v4 = type metadata accessor for IndexPath(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

uint64_t sub_1004ADDB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  return a1;
}

uint64_t sub_1004ADE24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_10001F544(a1, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = type metadata accessor for IndexPath(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  }
  return a1;
}

uint64_t type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(uint64_t a1)
{
  return sub_100007328(a1, qword_100661AB0, (uint64_t)&nominal type descriptor for TTRICollectionViewInsertAtIndexPathOption);
}

uint64_t sub_1004ADEC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  return a1;
}

uint64_t sub_1004ADF30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_10001F544(a1, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = type metadata accessor for IndexPath(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  }
  return a1;
}

uint64_t sub_1004ADFB8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for IndexPath(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = v4[0];
    v4[2] = v4[0];
    swift_initEnumMetadataMultiPayload(a1, 256, 3, v4);
    return 0;
  }
  return result;
}

uint64_t *sub_1004AE020(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v12 = type metadata accessor for IndexPath(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = type metadata accessor for IndexPath(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = sub_10002A750(&qword_100664530);
      *((_BYTE *)a1 + *(int *)(v10 + 48)) = *((_BYTE *)a2 + *(int *)(v10 + 48));
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_1004AE124(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if (result <= 1)
  {
    v4 = type metadata accessor for IndexPath(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *sub_1004AE170(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v9 = type metadata accessor for IndexPath(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for IndexPath(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = sub_10002A750(&qword_100664530);
    *((_BYTE *)a1 + *(int *)(v8 + 48)) = *((_BYTE *)a2 + *(int *)(v8 + 48));
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *sub_1004AE24C(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRICollectionViewDropIntent);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v9 = type metadata accessor for IndexPath(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for IndexPath(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = sub_10002A750(&qword_100664530);
      *((_BYTE *)a1 + *(int *)(v8 + 48)) = *((_BYTE *)a2 + *(int *)(v8 + 48));
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t type metadata accessor for TTRICollectionViewDropIntent(uint64_t a1)
{
  return sub_100007328(a1, qword_100661B58, (uint64_t)&nominal type descriptor for TTRICollectionViewDropIntent);
}

void *sub_1004AE354(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v9 = type metadata accessor for IndexPath(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for IndexPath(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = sub_10002A750(&qword_100664530);
    *((_BYTE *)a1 + *(int *)(v8 + 48)) = *((_BYTE *)a2 + *(int *)(v8 + 48));
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *sub_1004AE430(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRICollectionViewDropIntent);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v9 = type metadata accessor for IndexPath(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for IndexPath(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = sub_10002A750(&qword_100664530);
      *((_BYTE *)a1 + *(int *)(v8 + 48)) = *((_BYTE *)a2 + *(int *)(v8 + 48));
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_1004AE524(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  _BYTE v5[32];
  _QWORD v6[2];

  result = type metadata accessor for IndexPath(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2(v5, v4, &unk_100538BC0);
    v6[0] = v5;
    v6[1] = v4;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v6);
    return 0;
  }
  return result;
}

uint64_t sub_1004AE5A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  Swift::String v17;
  void *v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(_QWORD);
  Swift::String v23;
  void *object;
  Swift::String v25;
  uint64_t v27;
  unint64_t v28;

  v1 = v0;
  v2 = type metadata accessor for TTRUnadjustedIndexPath(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRAdjustedIndexPath(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(v1, (uint64_t)v10, v11);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v8);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v13 = sub_10001F580((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
      v14 = 0x2865726F666562;
      v15 = 0xE700000000000000;
    }
    else
    {
      v13 = sub_10001F580((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
      v14 = 0x287265746661;
      v15 = 0xE600000000000000;
    }
    v27 = v14;
    v28 = v15;
    v23._countAndFlagsBits = TTRUnadjustedIndexPath.description.getter(v13);
    object = v23._object;
    String.append(_:)(v23);
    swift_bridgeObjectRelease(object);
    v25._countAndFlagsBits = 41;
    v25._object = (void *)0xE100000000000000;
    String.append(_:)(v25);
    v20 = v27;
    v21 = (uint64_t)v4;
    v22 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath;
  }
  else
  {
    v16 = sub_10001F580((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath);
    v27 = 2651233;
    v28 = 0xE300000000000000;
    v17._countAndFlagsBits = TTRAdjustedIndexPath.description.getter(v16);
    v18 = v17._object;
    String.append(_:)(v17);
    swift_bridgeObjectRelease(v18);
    v19._countAndFlagsBits = 41;
    v19._object = (void *)0xE100000000000000;
    String.append(_:)(v19);
    v20 = v27;
    v21 = (uint64_t)v7;
    v22 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath;
  }
  sub_10001F544(v21, v22);
  return v20;
}

uint64_t sub_1004AE7A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v13;
  Swift::String v14;
  void *object;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD);
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;
  unint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for TTRUnadjustedIndexPath(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRAdjustedIndexPath(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRICollectionViewDropIntent(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(v1, (uint64_t)v10, v11);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v8);
  if (!EnumCaseMultiPayload)
  {
    v20 = v10[*(int *)(sub_10002A750(&qword_100664530) + 48)];
    v21 = sub_10001F580((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath);
    v29 = 2643009;
    v30 = 0xE300000000000000;
    v22 = TTRAdjustedIndexPath.description.getter(v21);
    if (v20 == 1)
    {
      v24 = v23;
      String.append(_:)(*(Swift::String *)&v22);
      swift_bridgeObjectRelease(v24);
      v25 = 692396076;
      v26 = 0xE400000000000000;
    }
    else
    {
      v27 = v23;
      String.append(_:)(*(Swift::String *)&v22);
      swift_bridgeObjectRelease(v27);
      v25 = 41;
      v26 = 0xE100000000000000;
    }
    String.append(_:)(*(Swift::String *)&v25);
    v17 = v29;
    v19 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath;
    v18 = (uint64_t)v7;
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v13 = sub_10001F580((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
    v29 = 0x284F544E49;
    v30 = 0xE500000000000000;
    v14._countAndFlagsBits = TTRUnadjustedIndexPath.description.getter(v13);
    object = v14._object;
    String.append(_:)(v14);
    swift_bridgeObjectRelease(object);
    v16._countAndFlagsBits = 41;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    v17 = v29;
    v18 = (uint64_t)v4;
    v19 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath;
LABEL_9:
    sub_10001F544(v18, v19);
    return v17;
  }
  return 1347636821;
}

uint64_t sub_1004AE9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  char v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD);
  uint64_t v33;
  uint64_t v34;

  v34 = a2;
  v3 = type metadata accessor for TTRUnadjustedIndexPath(0);
  __chkstk_darwin(v3);
  v33 = (uint64_t)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - v6;
  v8 = type metadata accessor for TTRAdjustedIndexPath(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v33 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v33 - v18;
  v20 = sub_10002A750(&qword_100661B90);
  __chkstk_darwin(v20);
  v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (uint64_t)&v22[*(int *)(v23 + 48)];
  sub_10002B1E8(a1, (uint64_t)v22, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
  sub_10002B1E8(v34, v24, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v22, v11);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10002B1E8((uint64_t)v22, (uint64_t)v16, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
      if (swift_getEnumCaseMultiPayload(v24, v11) == 1)
      {
        sub_10001F580(v24, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
        v26 = static TTRUnadjustedIndexPath.__derived_struct_equals(_:_:)(v16, v7);
        sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
        v27 = (uint64_t)v16;
LABEL_9:
        v31 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath;
LABEL_14:
        sub_10001F544(v27, v31);
        sub_10001F544((uint64_t)v22, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
        return v26 & 1;
      }
      v28 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath;
      v29 = (uint64_t)v16;
    }
    else
    {
      sub_10002B1E8((uint64_t)v22, (uint64_t)v13, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
      if (swift_getEnumCaseMultiPayload(v24, v11) == 2)
      {
        v30 = v33;
        sub_10001F580(v24, v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
        v26 = static TTRUnadjustedIndexPath.__derived_struct_equals(_:_:)(v13, v30);
        sub_10001F544(v30, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
        v27 = (uint64_t)v13;
        goto LABEL_9;
      }
      v28 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath;
      v29 = (uint64_t)v13;
    }
  }
  else
  {
    sub_10002B1E8((uint64_t)v22, (uint64_t)v19, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
    if (!swift_getEnumCaseMultiPayload(v24, v11))
    {
      sub_10001F580(v24, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath);
      v26 = static TTRAdjustedIndexPath.__derived_struct_equals(_:_:)(v19, v10);
      sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath);
      v27 = (uint64_t)v19;
      v31 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath;
      goto LABEL_14;
    }
    v28 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath;
    v29 = (uint64_t)v19;
  }
  sub_10001F544(v29, v28);
  sub_1004AED08((uint64_t)v22);
  v26 = 0;
  return v26 & 1;
}

uint64_t sub_1004AED08(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750(&qword_100661B90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004AED58()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for TTRIReminderPrintingController()
{
  return objc_opt_self(_TtC9Reminders30TTRIReminderPrintingController);
}

uint64_t sub_1004AED9C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  __n128 v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v50 = a1;
  v61 = *v1;
  v3 = type metadata accessor for TTRRemindersPrintingHTMLResult(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v53 = (uint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750(&qword_1006547E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_100661C68);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750(&qword_100661C70);
  v14 = *(_QWORD *)(v13 - 8);
  v54 = v13;
  v55 = v14;
  __chkstk_darwin(v13);
  v51 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_10002A750(&qword_100661C78);
  v59 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v52 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_10002A750(&qword_100661C80);
  v60 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v56 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = 1;
  Just.init(_:)(&v62, &type metadata for Int);
  v62 = (uint64_t)objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v18 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 1, 1, v18);
  v19 = sub_100005ED8(0, (unint64_t *)&qword_100642D90, NSRunLoop_ptr);
  v20 = sub_100023FEC(&qword_100661C88, &qword_100661C68, (uint64_t)&protocol conformance descriptor for Just<A>);
  v21 = sub_1000A2B9C();
  Publisher.receive<A>(on:options:)(&v62, v8, v9, v19, v20, v21);
  sub_1000A2BF4((uint64_t)v8);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v22 = v53;
  sub_1001FB20C(a1, v53);
  v23 = *(unsigned __int8 *)(v4 + 80);
  v24 = (v23 + 16) & ~v23;
  v25 = v24 + v5;
  v26 = v23 | 7;
  v27 = swift_allocObject(&unk_100609A80, v24 + v5, v23 | 7);
  v28 = sub_1001FB250(v22, v27 + v24);
  v29 = static Subscribers.Demand.unlimited.getter(v28);
  v30 = sub_10002A750(&qword_100661C90);
  v31 = sub_100023FEC(&qword_100661C98, &qword_100661C70, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v32 = sub_100023FEC(&qword_100661CA0, &qword_100661C90, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v33 = v52;
  v34 = v29;
  v35 = v54;
  v36 = v51;
  Publisher<>.flatMap<A>(maxPublishers:_:)(v34, sub_1004AF414, v27, v54, v30, v31, v32);
  v37 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v55 + 8))(v36, v35, v37);
  sub_1001FB20C(v50, v22);
  v38 = (v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = swift_allocObject(&unk_100609AA8, v38 + 8, v26);
  sub_1001FB250(v22, v39 + v24);
  *(_QWORD *)(v39 + v38) = v61;
  v40 = sub_100005ED8(0, &qword_100661CA8, UIPrintInteractionController_ptr);
  v41 = sub_100023FEC(&qword_100661CB0, &qword_100661C78, (uint64_t)&protocol conformance descriptor for Publishers.FlatMap<A, B>);
  v43 = v56;
  v42 = v57;
  Publisher.map<A>(_:)(sub_1004AF570, v39, v57, v40, v41);
  v44 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v59 + 8))(v33, v42, v44);
  v45 = sub_100023FEC(&qword_100661CB8, &qword_100661C80, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v46 = v58;
  v47 = Publisher.eraseToAnyPublisher()(v58, v45);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v43, v46);
  return v47;
}

uint64_t sub_1004AF238@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v4 = type metadata accessor for TTRWebViewLoadingStateHelper.HTMLSource(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TTRWebViewLoadingStateHelper()), "init");
  v8 = (char *)v6 + *(int *)(sub_10002A750(&qword_1006584E0) + 48);
  v9 = *(_QWORD *)(a1 + 24);
  *v6 = *(_QWORD *)(a1 + 16);
  v6[1] = v9;
  v10 = a1 + *(int *)(type metadata accessor for TTRRemindersPrintingHTMLResult(0) + 24);
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v8, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
  swift_storeEnumTagMultiPayload(v6, v4, 0);
  swift_bridgeObjectRetain(v9);
  v14 = sub_100379EB8((uint64_t)v6, v13);

  result = sub_10037AEF4((uint64_t)v6);
  *a2 = v14;
  return result;
}

uint64_t sub_1004AF370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for TTRRemindersPrintingHTMLResult(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + 24));
  v8 = v7 + *(int *)(v1 + 24);
  v9 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + *(int *)(v1 + 28) + 8));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1004AF414@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersPrintingHTMLResult(0) - 8) + 80);
  return sub_1004AF238(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_1004AF460@<X0>(void **a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v5 = *a1;
  v6 = *a2;
  v7 = a2[1];
  v8 = type metadata accessor for TTRRemindersPrintingHTMLResult(0);
  result = sub_1004AF5D0(v5, v6, v7, *(uint64_t *)((char *)a2 + *(int *)(v8 + 28)), *(uint64_t *)((char *)a2 + *(int *)(v8 + 28) + 8));
  *a3 = result;
  return result;
}

uint64_t sub_1004AF4C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for TTRRemindersPrintingHTMLResult(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = ((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v7 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + 24));
  v8 = v7 + *(int *)(v1 + 24);
  v9 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + *(int *)(v1 + 28) + 8));
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1004AF570@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersPrintingHTMLResult(0) - 8) + 80);
  return sub_1004AF460(a1, (uint64_t *)(v2 + ((v5 + 16) & ~v5)), a2);
}

uint64_t sub_1004AF5D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  uint64_t result;
  id v15;
  NSString v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;

  v8 = type metadata accessor for DispatchPredicate(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (uint64_t *)((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
  *v11 = static OS_dispatch_queue.main.getter(v12);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  v13 = _dispatchPreconditionTest(_:)(v11);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v13 & 1) != 0)
  {
    v15 = objc_msgSend((id)objc_opt_self(UIPrintInfo), "printInfo");
    v16 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setJobName:", v16);

    objc_msgSend(v15, "setOutputType:", 0);
    v17 = objc_msgSend((id)objc_opt_self(UIPrintInteractionController), "sharedPrintController");
    objc_msgSend(v17, "setPrintInfo:", v15);
    v18 = (void *)objc_opt_self(UIApplication);
    v19 = objc_msgSend(v18, "sharedApplication", swift_bridgeObjectRetain(a5).n128_f64[0]);
    v20 = objc_msgSend(v19, "userInterfaceLayoutDirection");

    v21 = objc_allocWithZone((Class)type metadata accessor for TTRIReminderPrintPageRenderer());
    v22 = sub_1004BBCB4(a4, a5, v20 == (id)1);
    v23 = objc_msgSend(a1, "viewPrintFormatter");
    objc_msgSend(v22, "addPrintFormatter:startingAtPageAtIndex:", v23, 0);

    objc_msgSend(v17, "setPrintPageRenderer:", v22);
    return (uint64_t)v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004AF820(_QWORD *a1, void **a2, void *a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  id v30;
  void *v31;
  void (*v32)(char *, char *, uint64_t);
  id v33;
  id v34;
  void **v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t ObjectType;
  uint64_t (*v64)(uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t, uint64_t);
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  id v88;
  void *v89;
  void *v90;
  void (*v91)(void *, _UNKNOWN **, uint64_t, uint64_t);
  char *v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t, _UNKNOWN **);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(_QWORD *, _UNKNOWN **, uint64_t, _QWORD, __n128);
  __n128 v106;
  _QWORD *v107;
  _QWORD *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t);
  uint64_t v114;
  char *v115;
  uint64_t v116;
  int v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  _QWORD v127[16];
  uint64_t v128;
  __int128 v129;
  __int128 v130;
  uint64_t v131;
  __int128 v132;

  v117 = a6;
  v118 = a1;
  v119 = a4;
  v8 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  v9 = __chkstk_darwin(v8);
  v111 = (char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v110 = (uint64_t)&v109 - v11;
  v114 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v114);
  v120 = (uint64_t)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v112);
  v14 = (char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v109 - v20;
  v22 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes(0);
  __chkstk_darwin(v22);
  v24 = (char *)&v109 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v25);
  v27 = (void **)((char *)&v109 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = sub_10002B1E8((uint64_t)a2, (uint64_t)v27, v28);
  static REMSuggestedAttributesElector.ExcludedAttributes.lists.getter(v29);
  sub_100041F70(v27, (uint64_t)v24, 0, (uint64_t)v127);
  if (a3)
  {
    *((_QWORD *)&v124 + 1) = sub_1004B02C0();
    *(_QWORD *)&v125 = &protocol witness table for REMList;
    *(_QWORD *)&v123 = a3;
  }
  else
  {
    *(_QWORD *)&v125 = 0;
    v123 = 0u;
    v124 = 0u;
  }
  v30 = a3;
  static REMRemindersListDataView.SortingStyle.fallbackForREMList.getter();
  static REMRemindersListDataView.SortingStyle.sortingStyle(for:fallback:)(&v123, v19);
  v113 = *(void (**)(char *, uint64_t))(v16 + 8);
  v113(v19, v15);
  sub_1004069C0((uint64_t)&v123);
  v109 = a2;
  v31 = *a2;
  v32 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v115 = v21;
  v116 = v15;
  v32(v19, v21, v15);
  v33 = v30;
  v34 = v31;
  v35 = (void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v34);
  v36 = *v35;
  v37 = type metadata accessor for TTRUserDefaults(0);
  *((_QWORD *)&v124 + 1) = v37;
  *(_QWORD *)&v125 = &protocol witness table for TTRUserDefaults;
  *(_QWORD *)&v123 = v36;
  v38 = type metadata accessor for TTRShowRemindersInListWithSectionsDataModelSource(0);
  swift_allocObject(v38, *(unsigned int *)(v38 + 48), *(unsigned __int16 *)(v38 + 52));
  v39 = v36;
  v40 = TTRShowRemindersInListWithSectionsDataModelSource.init(store:list:countCompleted:sortingStyle:canChangeSortingStyle:userDefaults:)(v34, a3, 2, v19, 1, &v123);
  v41 = (void *)v127[0];
  *v14 = 1;
  swift_storeEnumTagMultiPayload(v14, v112, 1);
  v42 = *v35;
  *((_QWORD *)&v124 + 1) = v37;
  *(_QWORD *)&v125 = &off_1006063D0;
  *(_QWORD *)&v123 = v42;
  v43 = type metadata accessor for TTRShowRemindersInListViewModelSource(0);
  v44 = swift_allocObject(v43, *(unsigned int *)(v43 + 48), *(unsigned __int16 *)(v43 + 52));
  v45 = sub_100028D48((uint64_t)&v123, v37);
  __chkstk_darwin(v45);
  v47 = (uint64_t *)((char *)&v109 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v48 + 16))(v47);
  v49 = *v47;
  v50 = v42;
  swift_retain(v40);
  v51 = sub_1004B0168(v40, (uint64_t)v41, (uint64_t)v14, v49, v44);
  sub_100027F10(&v123);

  sub_10002B1E8((uint64_t)v109, (uint64_t)v27, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  sub_100043000((uint64_t)v127, (uint64_t)&v123);
  swift_retain(v51);
  v109 = (_QWORD *)v51;
  sub_100042A94((uint64_t)v27, (uint64_t)&v123, v51, (uint64_t)&off_100609110, v120);
  v52 = v110;
  sub_100042C0C(v110);
  v53 = type metadata accessor for TTRIShowRemindersInListPresenter(0);
  v54 = *(unsigned int *)(v53 + 48);
  v55 = *(unsigned __int16 *)(v53 + 52);
  v112 = v53;
  v56 = swift_allocObject(v53, v54, v55);
  *(_QWORD *)(v56 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_listSharingController) = 0;
  *(_BYTE *)(v56
           + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_shouldShowReminderDeletePrivacyWarningIfNeeded) = 0;
  v57 = (uint64_t *)(v56 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource);
  *v57 = v40;
  v57[1] = (uint64_t)&protocol witness table for TTRShowRemindersInListWithSectionsDataModelSource;
  v58 = (uint64_t)v111;
  sub_10002B1E8(v52, (uint64_t)v111, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  swift_retain(v40);
  v59 = v119;
  swift_unknownObjectRetain(v119);
  v60 = (_QWORD *)sub_1002A70CC(v58, v59, v56);
  sub_10001F544(v52, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  v61 = v60[18];
  ObjectType = swift_getObjectType(v60[17], v62);
  v64 = *(uint64_t (**)(uint64_t, uint64_t))(v61 + 104);
  swift_retain(v60);
  v65 = v64(ObjectType, v61);
  if (v65)
  {
    v67 = v65;
    v68 = v66;
    v69 = swift_getObjectType(v65, v66);
    LOBYTE(v68) = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 16))(v69, v68);
    swift_release(v60);
    swift_unknownObjectRelease(v67);
    v70 = v68 & 1;
  }
  else
  {
    swift_release(v60);
    v70 = 0;
  }
  v71 = sub_100172EB4(v70, (uint64_t)v60);
  v111 = (char *)v72;
  v74 = v73;
  v76 = v75;
  v110 = swift_getObjectType(v73, v72);
  v60[3] = *(_QWORD *)(v76 + 8);
  v119 = v74;
  swift_unknownObjectWeakAssign(v60 + 2, v74);
  v77 = v60[18];
  v79 = swift_getObjectType(v60[17], v78);
  v80 = *(uint64_t (**)(uint64_t, uint64_t))(v77 + 104);
  swift_retain_n(v60, 2);
  v81 = v71;
  v82 = v80(v79, v77);
  v84 = v82;
  if (v82)
  {
    v85 = v83;
    v86 = swift_getObjectType(v82, v83);
    v87 = (*(uint64_t (**)(uint64_t, uint64_t))(v85 + 16))(v86, v85);
    swift_release(v60);
    swift_unknownObjectRelease(v84);
    v84 = v87 & 1;
  }
  else
  {
    swift_release(v60);
  }
  v88 = objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController(0));
  v89 = v81;
  v90 = (void *)sub_1002A8974(v60, v81, v111, v84, 0, 1, 0, v88);
  swift_release(v60);

  v91 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v76 + 32);
  v92 = v90;
  v111 = v92;
  v91(v90, &off_1005FCD60, v110, v76);
  v93 = v127[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess(v127[0] + direct field offset for TTRRemindersListInteractor.delegate, &v122, 1, 0);
  *(_QWORD *)(v93 + 8) = &off_1005F3190;
  swift_unknownObjectWeakAssign(v93, v60);
  v94 = v127[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate;
  swift_beginAccess(v127[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate, &v121, 1, 0);
  *(_QWORD *)(v94 + 8) = &protocol witness table for TTRShowRemindersInListWithSectionsDataModelSource;
  swift_unknownObjectWeakAssign(v94, v40);
  swift_unknownObjectWeakAssign(v127[3] + 16, v92);
  v95 = *(void (**)(uint64_t, _UNKNOWN **))(*(_QWORD *)v40 + 432);
  v96 = (uint64_t)v109;
  v97 = swift_retain(v109);
  v95(v97, &off_100606448);
  swift_retain(v96);
  v98 = swift_retain(v60);
  sub_10048D4EC(v98, (uint64_t)&off_1005F30C0);
  swift_release(v96);
  swift_release(v60);
  v99 = v120;
  v100 = *(_QWORD *)(v120 + *(int *)(v114 + 28));
  *(_QWORD *)(v100 + 24) = &off_1005F3260;
  swift_unknownObjectWeakAssign(v100 + 16, v60);
  sub_100028CFC((uint64_t)&v128, (uint64_t)&v123);
  v125 = v129;
  v126 = v130;
  v101 = v129 + 32;
  *(_QWORD *)(v129 + 40) = &off_1005F3040;
  swift_unknownObjectWeakAssign(v101, v60);
  sub_100027F10(&v123);
  sub_100028CFC((uint64_t)&v131, (uint64_t)&v123);
  v102 = v132;
  v125 = v132;
  v104 = swift_getObjectType(v132, v103);
  v105 = *(void (**)(_QWORD *, _UNKNOWN **, uint64_t, _QWORD, __n128))(*((_QWORD *)&v102 + 1) + 48);
  swift_retain(v60);
  v106 = swift_unknownObjectRetain(v102);
  v105(v60, &off_1005F2FF0, v104, *((_QWORD *)&v102 + 1), v106);
  swift_unknownObjectRelease(v102);
  sub_100027F10(&v123);
  (*(void (**)(_QWORD))(*(_QWORD *)v40 + 480))(v117 & 1);
  v107 = v118;
  v118[3] = v112;
  v107[4] = &off_100607E98;
  *v107 = v60;
  swift_release(v40);
  swift_release(v96);

  swift_unknownObjectRelease(v119);
  sub_10001F544(v99, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  v113(v115, v116);
  sub_100043844((uint64_t)v127);
  return (uint64_t)v111;
}

id TTRIShowRemindersInListAssembly.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowRemindersInListAssembly();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for TTRIShowRemindersInListAssembly()
{
  return objc_opt_self(_TtC9Reminders31TTRIShowRemindersInListAssembly);
}

id TTRIShowRemindersInListAssembly.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowRemindersInListAssembly();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1004B0168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v18[5];

  v10 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v18[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TTRUserDefaults(0);
  *(_QWORD *)(a5
            + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource____lazy_storage___dragAndDropCapability) = 0;
  *(_QWORD *)(a5 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list) = 0;
  v14 = a5 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_remindersCount;
  *(_QWORD *)v14 = 0;
  *(_QWORD *)(v14 + 8) = 0;
  *(_BYTE *)(v14 + 16) = 1;
  *(_BYTE *)(a5 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_hasIncompleteOrCompletedReminders) = 2;
  *(_BYTE *)(a5 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_showLargeAttachmentsValue) = 1;
  v18[3] = v13;
  v18[4] = &off_1006063D0;
  v18[0] = a4;
  *(_QWORD *)(a5 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_sectionsContextInstance) = 0;
  *(_QWORD *)(a5
            + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource____lazy_storage___shouldSuggestGroceryTipFetchHelper) = 0;
  sub_100010634((uint64_t)v18, a5 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_userDefaults);
  sub_10002B1E8(a3, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  v15 = sub_1002A8704(a1, a2, (uint64_t)v12, a5);
  sub_100027F10(v18);
  sub_10001F544(a3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  return v15;
}

unint64_t sub_1004B02C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100640498;
  if (!qword_100640498)
  {
    v1 = objc_opt_self(REMList);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100640498);
  }
  return result;
}

double sub_1004B02FC(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  void (*v5)(void *, unint64_t, void *);
  id v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  double result;

  v4 = a2;
  v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v6 = v4;
    v4 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v8 = v7;

  }
  else
  {
    swift_retain();
    v8 = 0xF000000000000000;
  }
  v9 = a3;
  v5(v4, v8, a3);

  sub_1004187BC((uint64_t)v4, v8);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1004B0390(uint64_t a1)
{
  uint64_t *v1;
  Swift::String v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (uint64_t *)TTRAppBundleIdentifier.unsafeMutableAddressor(a1);
  v3 = *v1;
  v4 = v1[1];
  swift_bridgeObjectRetain(v4);
  v2._countAndFlagsBits = 0x6E6F69746365732ELL;
  v2._object = (void *)0xE800000000000000;
  String.append(_:)(v2);
  qword_100661CF0 = v3;
  *(_QWORD *)algn_100661CF8 = v4;
}

uint64_t type metadata accessor for TTRIRemindersListDragSection()
{
  return objc_opt_self(_TtC9Reminders28TTRIRemindersListDragSection);
}

id sub_1004B0678(uint64_t a1, void *a2, uint64_t a3, void (**a4)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v8;
  BOOL v9;
  void *v10;
  uint64_t v11;
  void *v12;
  Swift::String v13;
  NSString v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  NSString v22;
  void *v23;
  void *v24;
  Swift::String v25;
  NSString v26;
  void **v27;
  unint64_t v28;
  double (*v29)(uint64_t, void *, void *);
  void *v30;
  void (*v31)(uint64_t, unint64_t, uint64_t);
  uint64_t v32;

  v8 = swift_allocObject(&unk_100609AE8, 24, 7);
  *(_QWORD *)(v8 + 16) = a4;
  _Block_copy(a4);
  if (qword_10063D828 != -1)
    swift_once(&qword_10063D828, sub_1004B0390);
  v9 = qword_100661CF0 == a1 && *(_QWORD *)algn_100661CF8 == (_QWORD)a2;
  if (v9
    || (_stringCompareWithSmolCheck(_:_:expecting:)(qword_100661CF0, *(_QWORD *)algn_100661CF8, a1, a2, 0) & 1) != 0)
  {
    v10 = (void *)objc_opt_self(REMError);
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease(0xE000000000000000);
    v28 = 0x800000010056D250;
    v11 = qword_100661CF0;
    v12 = *(void **)algn_100661CF8;
    swift_bridgeObjectRetain(*(_QWORD *)algn_100661CF8);
    v13._countAndFlagsBits = v11;
    v13._object = v12;
    String.append(_:)(v13);
    swift_bridgeObjectRelease(v12);
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend(v10, "internalErrorWithDebugDescription:", v14, swift_bridgeObjectRelease(0x800000010056D250).n128_f64[0], 0xD00000000000001ALL);

  }
  else
  {
    sub_1002EBAEC();
    if ((static NSItemProviderWriting.canWriteTypeIdentifier(_:)(a1, a2) & 1) != 0)
    {
      TTRSection.displayName.getter(*(_QWORD *)(a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersListDragSection_section), *(unsigned __int8 *)(a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersListDragSection_section + 8));
      v20 = v19;
      v21 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v20);
      v22 = String._bridgeToObjectiveC()();
      v31 = sub_10018049C;
      v32 = v8;
      v27 = _NSConcreteStackBlock;
      v28 = 1107296256;
      v29 = sub_1004B02FC;
      v30 = &unk_100609B00;
      v23 = _Block_copy(&v27);
      swift_retain();
      v17 = objc_msgSend(v21, "loadDataWithTypeIdentifier:forItemProviderCompletionHandler:", v22, v23, swift_release().n128_f64[0]);
      _Block_release(v23);
      swift_release();

      return v17;
    }
    v24 = (void *)objc_opt_self(REMError);
    _StringGuts.grow(_:)(30);
    swift_bridgeObjectRelease(0xE000000000000000);
    v28 = 0x8000000100577A40;
    v25._countAndFlagsBits = a1;
    v25._object = a2;
    String.append(_:)(v25);
    v26 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend(v24, "internalErrorWithDebugDescription:", v26, swift_bridgeObjectRelease(0x8000000100577A40).n128_f64[0], 0xD00000000000001CLL);

  }
  v16 = (void *)_convertErrorToNSError(_:)(v15);
  ((void (**)(_QWORD, _QWORD, void *))a4)[2](a4, 0, v16);
  swift_release();

  return 0;
}

uint64_t sub_1004B09A8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_1004B09CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  objc_class *ObjectType;
  id v7;
  char *v8;
  id v9;
  void *v10;
  char *v11;
  id v12;
  char *v13;
  char *v14;
  _BOOL4 IsBoldTextEnabled;
  const UIFontWeight *v16;
  uint64_t v17;
  void *v18;
  id v19;
  char *v20;
  void *v21;
  char *v22;
  double v23;
  NSString v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  Class isa;
  id v52;
  objc_super v53;
  char v54[24];

  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  v7 = objc_allocWithZone((Class)type metadata accessor for TTRIInsetTextField(0));
  v8 = v3;
  v9 = objc_msgSend(v7, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v10 = (void *)objc_opt_self(UIColor);
  v11 = (char *)v9;
  v12 = objc_msgSend(v10, "quaternarySystemFillColor");
  objc_msgSend(v11, "setBackgroundColor:", v12);

  v13 = &v11[direct field offset for TTRIInsetTextField.horizontalInset];
  swift_beginAccess(&v11[direct field offset for TTRIInsetTextField.horizontalInset], v54, 1, 0);
  *(_QWORD *)v13 = 0x4030000000000000;
  objc_msgSend(v11, "_setContinuousCornerRadius:", 12.0);
  v14 = v11;
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v16 = &UIFontWeightBold;
  if (IsBoldTextEnabled)
    v16 = &UIFontWeightHeavy;
  v17 = *(_QWORD *)v16;
  sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v18 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(UIFontTextStyleTitle2, v17, 0, 0);
  objc_msgSend(v14, "setFont:", v18);

  objc_msgSend(v14, "setTextAlignment:", 1);
  objc_msgSend(v14, "setClearButtonMode:", 1);
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders27TTRIListDetailNameTableCell_nameTextField] = v14;
  v19 = objc_allocWithZone((Class)type metadata accessor for TTRITextCellTextFieldTextArea(0));
  v20 = v14;
  v21 = (void *)TTRITextCellTextFieldTextArea.init(textField:)();
  v22 = &v8[OBJC_IVAR____TtC9Reminders27TTRIListDetailNameTableCell_textArea];
  *(_QWORD *)v22 = v21;
  *((_QWORD *)v22 + 1) = &protocol witness table for TTRITextCellTextFieldTextArea;
  v52 = v21;

  if (a3)
  {
    v24 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v23 = swift_bridgeObjectRelease(a3).n128_u64[0];
  }
  else
  {
    v24 = 0;
  }
  v53.receiver = v8;
  v53.super_class = ObjectType;
  v25 = objc_msgSendSuper2(&v53, "initWithStyle:reuseIdentifier:", a1, v24, v23);

  v26 = v25;
  objc_msgSend(v20, "addTarget:action:forControlEvents:", v26, "textFieldEditingDidBegin", 0x10000);
  objc_msgSend(v20, "addTarget:action:forControlEvents:", v26, "textFieldEditingDidEnd", 0x40000);
  v27 = objc_msgSend(v26, "contentView");
  objc_msgSend(v27, "addSubview:", v20);

  v28 = (void *)objc_opt_self(NSLayoutConstraint);
  v29 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v30 = swift_allocObject(v29, 72, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100525680;
  v31 = objc_msgSend(v26, "contentView");
  v32 = objc_msgSend(v31, "leadingAnchor");

  v33 = objc_msgSend(v20, "leadingAnchor");
  v34 = objc_msgSend(v32, "constraintEqualToAnchor:constant:", v33, -16.0);

  *(_QWORD *)(v30 + 32) = v34;
  v35 = objc_msgSend(v26, "contentView");
  v36 = objc_msgSend(v35, "trailingAnchor");

  v37 = objc_msgSend(v20, "trailingAnchor");
  v38 = objc_msgSend(v36, "constraintEqualToAnchor:constant:", v37, 16.0);

  *(_QWORD *)(v30 + 40) = v38;
  v39 = objc_msgSend(v26, "contentView");
  v40 = objc_msgSend(v39, "topAnchor");

  v41 = objc_msgSend(v20, "topAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

  *(_QWORD *)(v30 + 48) = v42;
  v43 = objc_msgSend(v26, "contentView");
  v44 = objc_msgSend(v43, "bottomAnchor");

  v45 = objc_msgSend(v20, "bottomAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:constant:", v45, 16.0);

  *(_QWORD *)(v30 + 56) = v46;
  v47 = objc_msgSend(v20, "heightAnchor");
  v48 = objc_msgSend(v47, "constraintEqualToConstant:", 56.0);

  *(_QWORD *)(v30 + 64) = v48;
  specialized Array._endMutation()(v49);
  sub_100005ED8(0, (unint64_t *)&qword_10064BB60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v28, "activateConstraints:", isa, swift_bridgeObjectRelease(v30).n128_f64[0]);

  return v26;
}

void sub_1004B102C()
{
  char *v0;
  unsigned int v1;
  void *v2;
  char **v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  char *v8;
  id v9;
  _QWORD v10[6];

  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC9Reminders27TTRIListDetailNameTableCell_nameTextField], "isEditing");
  v2 = (void *)objc_opt_self(UIColor);
  v3 = &selRef_systemFillColor;
  if (!v1)
    v3 = &selRef_quaternarySystemFillColor;
  v4 = objc_msgSend(v2, *v3);
  v5 = (void *)objc_opt_self(UIView);
  v6 = swift_allocObject(&unk_100609B58, 32, 7);
  *(_QWORD *)(v6 + 16) = v0;
  *(_QWORD *)(v6 + 24) = v4;
  v10[4] = sub_1004B12B4;
  v10[5] = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100006378;
  v10[3] = &unk_100609B70;
  v7 = _Block_copy(v10);
  v8 = v0;
  v9 = v4;
  swift_release();
  objc_msgSend(v5, "animateWithDuration:animations:", v7, 0.2);

  _Block_release(v7);
}

uint64_t type metadata accessor for TTRIListDetailNameTableCell()
{
  return objc_opt_self(_TtC9Reminders27TTRIListDetailNameTableCell);
}

unint64_t sub_1004B123C()
{
  return 0xD000000000000012;
}

double sub_1004B1258()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_unknownObjectRetain(*(_QWORD *)(v0
                                                           + OBJC_IVAR____TtC9Reminders27TTRIListDetailNameTableCell_textArea)).n128_u64[0];
  return result;
}

uint64_t sub_1004B1288()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1004B12B4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9Reminders27TTRIListDetailNameTableCell_nameTextField), "setBackgroundColor:", *(_QWORD *)(v0 + 24));
}

uint64_t sub_1004B12D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100661D70);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100661D70);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_1004B1360()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSString v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  void (*v27)(uint64_t);
  char v28;
  id v29;
  id v30;
  char v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  NSString v35;
  unint64_t v36;
  Class isa;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  NSString v44;
  _QWORD aBlock[3];
  void *v47;
  void (*v48)(uint64_t);
  uint64_t v49;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)&v1[OBJC_IVAR____TtC9Reminders25TTRIListSharingController_list];
  v8 = objc_msgSend(v7, "account", v4);
  v9 = objc_msgSend(v8, "accountTypeHost");

  LODWORD(v8) = objc_msgSend(v9, "isCloudKit");
  if ((_DWORD)v8)
  {
    v10 = objc_msgSend(v7, "account");
    v11 = objc_msgSend(v10, "remObjectID");

    v12 = objc_msgSend(v11, "uuid");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v12);

    v14 = UUID.uuidString.getter(v13);
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v17 = objc_msgSend(v7, "store");
    v18 = String._bridgeToObjectiveC()();
    v19 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
    v20 = (void *)static OS_dispatch_queue.main.getter(v19);
    v21 = swift_allocObject(&unk_100609C00, 32, 7);
    *(_QWORD *)(v21 + 16) = v14;
    *(_QWORD *)(v21 + 24) = v16;
    v48 = sub_1004B3218;
    v49 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100009944;
    v47 = &unk_100609C18;
    v22 = _Block_copy(aBlock);
    objc_msgSend(v17, "addCKShareObserverIfNeededForAccountID:queue:completion:", v18, v20, v22, swift_release().n128_f64[0]);
    _Block_release(v22);

  }
  v23 = (void *)objc_opt_self(REMCloudContainer);
  v24 = objc_msgSend(v7, "account");
  v25 = objc_msgSend(v23, "newCloudContainerForAccount:", v24);

  REMList.ttrGroceryContext.getter(aBlock);
  v26 = v47;
  if (v47)
  {
    v27 = v48;
    sub_10001413C(aBlock, (uint64_t)v47);
    v28 = (*((uint64_t (**)(void *, void (*)(uint64_t)))v27 + 2))(v26, v27);
    sub_100027F10(aBlock);
  }
  else
  {
    sub_10022B864((uint64_t)aBlock);
    v28 = 0;
  }
  v29 = sub_1004B1A68(v1, v25);
  v30 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(objc_msgSend(v29, "setAvailablePermissions:", 10));
  v31 = TTRUserDefaults.publicSharingEnabled.getter();

  if ((v31 & 1) != 0)
    v32 = objc_msgSend(v29, "setAvailablePermissions:", (unint64_t)objc_msgSend(v29, "availablePermissions") | 1);
  static TTRLocalizableStrings.Sharing.Notifications.sectionHeaderTitle.getter(v32);
  v34 = v33;
  v35 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "_setSectionTitleForAuxiliarySwitches:", v35, swift_bridgeObjectRelease(v34).n128_f64[0]);

  v36 = sub_100350BF0((uint64_t)_swiftEmptyArrayStorage);
  sub_100005ED8(0, &qword_100661E88, _UIShareParticipantDetails_ptr);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v29, "_setParticipantDetails:", isa, swift_bridgeObjectRelease(v36).n128_f64[0]);

  if ((v28 & 1) != 0)
    static TTRLocalizableStrings.Sharing.Notifications.enableAddedItemNotifications.getter();
  else
    static TTRLocalizableStrings.Sharing.Notifications.enableAddedReminderNotifications.getter();
  v39 = v38;
  v40 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "_setPrimaryAuxiliarySwitchTitle:", v40, swift_bridgeObjectRelease(v39).n128_f64[0]);

  v41 = objc_msgSend(v29, "_setPrimaryAuxiliarySwitchState:", sub_1004B20C8());
  if ((v28 & 1) != 0)
    static TTRLocalizableStrings.Sharing.Notifications.enableCompletedItemNotifications.getter(v41);
  else
    static TTRLocalizableStrings.Sharing.Notifications.enableCompletedReminderNotifications.getter(v41);
  v43 = v42;
  v44 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "_setSecondaryAuxiliarySwitchTitle:", v44, swift_bridgeObjectRelease(v43).n128_f64[0]);

  objc_msgSend(v29, "_setSecondaryAuxiliarySwitchState:", sub_1004B23CC());
  objc_msgSend(v29, "setModalPresentationStyle:", 2);
  objc_msgSend(v29, "setDelegate:", v1);

  return v29;
}

void sub_1004B1810(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  NSObject *oslog;
  _QWORD v15[3];
  _BYTE v16[8];
  uint64_t v17;
  uint64_t v18;

  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_10063D830 != -1)
      swift_once(&qword_10063D830, sub_1004B12D0);
    v6 = type metadata accessor for Logger(0);
    sub_100012DC4(v6, (uint64_t)qword_100661D70);
    swift_errorRetain(a1);
    swift_bridgeObjectRetain(a3);
    swift_errorRetain(a1);
    swift_bridgeObjectRetain(a3);
    oslog = Logger.logObject.getter(v7);
    v8 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v8))
    {
      v9 = swift_slowAlloc(22, -1);
      v10 = swift_slowAlloc(64, -1);
      v18 = v10;
      *(_DWORD *)v9 = 136315394;
      swift_bridgeObjectRetain(a3);
      v17 = sub_100027E40(a2, a3, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v9 + 4, v9 + 12);
      swift_bridgeObjectRelease_n(a3, 3);
      *(_WORD *)(v9 + 12) = 2080;
      swift_getErrorValue(a1, v16, v15);
      v11 = Error.localizedDescription.getter(v15[1], v15[2]);
      v13 = v12;
      v17 = sub_100027E40(v11, v12, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v9 + 14, v9 + 22);
      swift_bridgeObjectRelease(v13);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, "Could not add share observer for {accountID: %s, error: %s}", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy(v10, 2, &type metadata for Any[8]);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_bridgeObjectRelease_n(a3, 2);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
}

id sub_1004B1A68(char *a1, void *a2)
{
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  UIImage *v21;
  NSData *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 aBlock;
  __int128 v29;
  uint64_t (*v30)();
  uint64_t v31;

  v4 = *(void **)&a1[OBJC_IVAR____TtC9Reminders25TTRIListSharingController_list];
  v5 = objc_msgSend(v4, "store");
  v6 = objc_msgSend(v4, "objectID");
  *(_QWORD *)&aBlock = 0;
  v7 = objc_msgSend(v5, "fetchShareForListWithID:error:", v6, &aBlock);

  if ((_QWORD)aBlock)
  {
    v8 = (id)aBlock;

    swift_willThrow(v9);
LABEL_3:
    v10 = swift_allocObject(&unk_100609C50, 32, 7);
    *(_QWORD *)(v10 + 16) = a1;
    *(_QWORD *)(v10 + 24) = a2;
    v11 = swift_allocObject(&unk_100609C78, 32, 7);
    *(_QWORD *)(v11 + 16) = sub_1004B324C;
    *(_QWORD *)(v11 + 24) = v10;
    v12 = objc_allocWithZone((Class)UICloudSharingController);
    v30 = sub_10001B280;
    v31 = v11;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v29 = sub_1004B2E2C;
    *((_QWORD *)&v29 + 1) = &unk_100609C90;
    v13 = _Block_copy(&aBlock);
    v14 = a1;
    v15 = a2;
    v16 = objc_msgSend(v12, "initWithPreparationHandler:", v13);
    _Block_release(v13);
    swift_release();
    return v16;
  }
  if (!v7)
    goto LABEL_3;
  v17 = static CKShare.SystemFieldKey.thumbnailImageData.getter();
  v19 = v18;
  sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
  type metadata accessor for RemindersUICoreBundleLookupObject(0);
  v20 = (void *)static RemindersUICoreBundleLookupObject.bundle.getter();
  v21 = (UIImage *)static UIImage.ttr_image(named:in:)(0xD000000000000017, 0x8000000100564310, v20);

  if (v21 && (v22 = UIImagePNGRepresentation(v21), v21, v22))
  {
    v23 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v25 = v24;

    *((_QWORD *)&v29 + 1) = &type metadata for Data;
    v30 = (uint64_t (*)())&protocol witness table for Data;
    *(_QWORD *)&aBlock = v23;
    *((_QWORD *)&aBlock + 1) = v25;
  }
  else
  {
    v30 = 0;
    aBlock = 0u;
    v29 = 0u;
  }
  v26 = sub_100005ED8(0, &qword_100661E90, CKShare_ptr);
  CKRecordKeyValueSetting.subscript.setter(&aBlock, v17, v19, v26);
  v16 = objc_msgSend(objc_allocWithZone((Class)UICloudSharingController), "initWithShare:container:", v7, a2);

  return v16;
}

void sub_1004B1D54(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD), uint64_t a3, char *a4, uint64_t a5)
{
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char *v17;
  id v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  id v33;
  os_log_type_t type;
  void *v35;
  void (*v36)(_QWORD, _QWORD, _QWORD);
  _QWORD v37[3];
  char v38[8];
  uint64_t v39;
  uint64_t v40;
  id v41;

  v8 = *(void **)&a4[OBJC_IVAR____TtC9Reminders25TTRIListSharingController_list];
  v9 = objc_msgSend(v8, "store");
  v10 = objc_msgSend(v8, "objectID");
  v41 = 0;
  v11 = objc_msgSend(v9, "createShareForListWithID:appIconData:error:", v10, 0, &v41);

  v12 = v41;
  if (v41)
  {
    v13 = v41;

    swift_willThrow(v14);
    if (qword_10063D830 != -1)
      swift_once(&qword_10063D830, sub_1004B12D0);
    v15 = type metadata accessor for Logger(0);
    sub_100012DC4(v15, (uint64_t)qword_100661D70);
    v16 = v13;
    v17 = a4;
    v18 = v16;
    v19 = v17;
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v36 = a2;
      v22 = swift_slowAlloc(22, -1);
      v23 = (_QWORD *)swift_slowAlloc(8, -1);
      v35 = (void *)swift_slowAlloc(32, -1);
      v41 = v35;
      *(_DWORD *)v22 = 138412546;
      type = v21;
      v39 = (uint64_t)v8;
      v24 = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v22 + 4, v22 + 12);
      *v23 = v8;

      *(_WORD *)(v22 + 12) = 2080;
      swift_getErrorValue(v18, v38, v37);
      v25 = Error.localizedDescription.getter(v37[1], v37[2]);
      v27 = v26;
      v39 = sub_100027E40(v25, v26, (uint64_t *)&v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v22 + 14, v22 + 22);

      swift_bridgeObjectRelease(v27);
      _os_log_impl((void *)&_mh_execute_header, v20, type, "Failed to create share for list {list: %@, error: %s}", (uint8_t *)v22, 0x16u);
      v28 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v23, 1, v28);
      swift_slowDealloc(v23, -1, -1);
      swift_arrayDestroy(v35, 1, &type metadata for Any[8]);
      swift_slowDealloc(v35, -1, -1);
      v29 = v22;
      a2 = v36;
      swift_slowDealloc(v29, -1, -1);

    }
    else
    {

    }
    v30 = v18;
    v31 = 0;
    v32 = 0;
    v33 = v12;
  }
  else
  {
    if (!v11)
      return;
    v30 = v11;
    v31 = v11;
    v32 = a5;
    v33 = 0;
  }
  a2(v31, v32, v33);

}

BOOL sub_1004B20C8()
{
  uint64_t v0;
  id v1;
  NSString v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  unsigned __int8 v6;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC9Reminders25TTRIListSharingController_list), "remObjectID"));
  v2 = objc_msgSend(v1, "stringRepresentation");

  if (!v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v4 = v3;
    v2 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v4);
  }
  v5 = objc_msgSend((id)objc_opt_self(REMUserDefaults), "daemonUserDefaults");
  v6 = objc_msgSend(v5, "muteNotificationOptionsForSharedList:", v2);

  return (v6 & 1) == 0;
}

void sub_1004B2190(char a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  NSString v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSString v23;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders25TTRIListSharingController_list);
  v4 = objc_msgSend(v3, "remObjectID");
  v5 = objc_msgSend(v4, "stringRepresentation");

  if ((a1 & 1) != 0)
  {
    if (!v5)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v7 = v6;
      v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v7);
    }
    v8 = (void *)objc_opt_self(REMUserDefaults);
    v9 = objc_msgSend(v8, "daemonUserDefaults");
    v10 = (unint64_t)objc_msgSend(v9, "muteNotificationOptionsForSharedList:", v5);

    v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
    v12 = objc_msgSend(v3, "remObjectID");
    v23 = objc_msgSend(v12, "stringRepresentation");

    if (!v23)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v14 = v13;
      v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v14);
    }
  }
  else
  {
    if (!v5)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v16 = v15;
      v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v16);
    }
    v8 = (void *)objc_opt_self(REMUserDefaults);
    v17 = objc_msgSend(v8, "daemonUserDefaults");
    v18 = (unint64_t)objc_msgSend(v17, "muteNotificationOptionsForSharedList:", v5);

    v11 = v18 | 1;
    v19 = objc_msgSend(v3, "remObjectID");
    v23 = objc_msgSend(v19, "stringRepresentation");

    if (!v23)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v21 = v20;
      v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v21);
    }
  }
  v22 = objc_msgSend(v8, "daemonUserDefaults");
  objc_msgSend(v22, "setMuteNotificationOptions:forSharedList:", v11, v23);

}

BOOL sub_1004B23CC()
{
  uint64_t v0;
  id v1;
  NSString v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  unsigned __int8 v6;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC9Reminders25TTRIListSharingController_list), "remObjectID"));
  v2 = objc_msgSend(v1, "stringRepresentation");

  if (!v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v4 = v3;
    v2 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v4);
  }
  v5 = objc_msgSend((id)objc_opt_self(REMUserDefaults), "daemonUserDefaults");
  v6 = objc_msgSend(v5, "muteNotificationOptionsForSharedList:", v2);

  return (v6 & 2) == 0;
}

void sub_1004B2494(char a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  NSString v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSString v23;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders25TTRIListSharingController_list);
  v4 = objc_msgSend(v3, "remObjectID");
  v5 = objc_msgSend(v4, "stringRepresentation");

  if ((a1 & 1) != 0)
  {
    if (!v5)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v7 = v6;
      v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v7);
    }
    v8 = (void *)objc_opt_self(REMUserDefaults);
    v9 = objc_msgSend(v8, "daemonUserDefaults");
    v10 = (unint64_t)objc_msgSend(v9, "muteNotificationOptionsForSharedList:", v5);

    v11 = v10 & 0xFFFFFFFFFFFFFFFDLL;
    v12 = objc_msgSend(v3, "remObjectID");
    v23 = objc_msgSend(v12, "stringRepresentation");

    if (!v23)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v14 = v13;
      v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v14);
    }
  }
  else
  {
    if (!v5)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v16 = v15;
      v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v16);
    }
    v8 = (void *)objc_opt_self(REMUserDefaults);
    v17 = objc_msgSend(v8, "daemonUserDefaults");
    v18 = (unint64_t)objc_msgSend(v17, "muteNotificationOptionsForSharedList:", v5);

    v11 = v18 | 2;
    v19 = objc_msgSend(v3, "remObjectID");
    v23 = objc_msgSend(v19, "stringRepresentation");

    if (!v23)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v21 = v20;
      v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v21);
    }
  }
  v22 = objc_msgSend(v8, "daemonUserDefaults");
  objc_msgSend(v22, "setMuteNotificationOptions:forSharedList:", v11, v23);

}

id sub_1004B26FC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIListSharingController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TTRIListSharingController()
{
  return objc_opt_self(_TtC9Reminders25TTRIListSharingController);
}

void sub_1004B27E0(uint64_t a1)
{
  sub_1004B2A60(a1, "Failed to update share {error: %s}");
}

void sub_1004B2858(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSString v24;
  uint64_t v25;
  void *v26;
  void *v27;
  _QWORD aBlock[6];

  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(a1, "share", v11);
  if (v14)
  {
    v15 = v14;
    v16 = *(void **)(v4 + OBJC_IVAR____TtC9Reminders25TTRIListSharingController_list);
    v17 = objc_msgSend(v16, "account");
    v18 = objc_msgSend(v17, "remObjectID");

    v19 = objc_msgSend(v18, "uuid");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v19);

    UUID.uuidString.getter(v20);
    v22 = v21;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    v23 = objc_msgSend(v16, "store");
    v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v22);
    v25 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
    v26 = (void *)static OS_dispatch_queue.main.getter(v25);
    aBlock[4] = a2;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100009944;
    aBlock[3] = a3;
    v27 = _Block_copy(aBlock);
    objc_msgSend(v23, *a4, v15, v24, v26, v27);
    _Block_release(v27);

  }
}

void sub_1004B2A54(uint64_t a1)
{
  sub_1004B2A60(a1, "Failed to stop share {error: %s}");
}

void sub_1004B2A60(uint64_t a1, const char *a2)
{
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  NSObject *oslog;
  uint64_t v13;
  _QWORD v14[3];
  _BYTE v15[8];
  uint64_t v16;

  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_10063D830 != -1)
      swift_once(&qword_10063D830, sub_1004B12D0);
    v4 = type metadata accessor for Logger(0);
    sub_100012DC4(v4, (uint64_t)qword_100661D70);
    swift_errorRetain(a1);
    v5 = swift_errorRetain(a1);
    oslog = Logger.logObject.getter(v5);
    v6 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(12, -1);
      v8 = swift_slowAlloc(32, -1);
      v16 = v8;
      *(_DWORD *)v7 = 136315138;
      swift_getErrorValue(a1, v15, v14);
      v9 = Error.localizedDescription.getter(v14[1], v14[2]);
      v11 = v10;
      v13 = sub_100027E40(v9, v10, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, v14, v7 + 4, v7 + 12);
      swift_bridgeObjectRelease(v11);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, a2, v7, 0xCu);
      swift_arrayDestroy(v8, 1, &type metadata for Any[8]);
      swift_slowDealloc(v8, -1, -1);
      swift_slowDealloc(v7, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
}

void sub_1004B2E2C(uint64_t a1, void *a2, void *aBlock)
{
  void (*v4)(void);
  void *v5;
  id v6;

  v4 = *(void (**)(void))(a1 + 32);
  v5 = _Block_copy(aBlock);
  *(_QWORD *)(swift_allocObject(&unk_100609CC8, 24, 7) + 16) = v5;
  swift_retain();
  v6 = a2;
  v4();
  swift_release();
  swift_release();

}

void sub_1004B2EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  id v8;

  if (a3)
    v7 = _convertErrorToNSError(_:)(a3);
  else
    v7 = 0;
  v8 = (id)v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 16))(a4, a1, a2);

}

uint64_t sub_1004B2F28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  _QWORD v20[3];
  _BYTE v21[8];
  uint64_t v22;

  v2 = v1;
  if (qword_10063D830 != -1)
    swift_once(&qword_10063D830, sub_1004B12D0);
  v4 = type metadata accessor for Logger(0);
  sub_100012DC4(v4, (uint64_t)qword_100661D70);
  swift_errorRetain(a1);
  v5 = swift_errorRetain(a1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v22 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_getErrorValue(a1, v21, v20);
    v10 = Error.localizedDescription.getter(v20[1], v20[2]);
    v12 = v11;
    v19 = sub_100027E40(v10, v11, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, v20, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(v12);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to save share with error %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, &type metadata for Any[8]);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  v13 = v2 + OBJC_IVAR____TtC9Reminders25TTRIListSharingController_delegate;
  result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC9Reminders25TTRIListSharingController_delegate);
  if (result)
  {
    v16 = result;
    v17 = *(_QWORD *)(v13 + 8);
    ObjectType = swift_getObjectType(result, v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 16))(v2, a1, ObjectType, v17);
    return swift_unknownObjectRelease(v16);
  }
  return result;
}

UIImage *sub_1004B3130()
{
  void *v0;
  UIImage *v1;
  NSData *v2;

  sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
  type metadata accessor for RemindersUICoreBundleLookupObject(0);
  v0 = (void *)static RemindersUICoreBundleLookupObject.bundle.getter();
  v1 = (UIImage *)static UIImage.ttr_image(named:in:)(0xD000000000000017, 0x8000000100564310, v0);

  if (v1)
  {
    v2 = UIImagePNGRepresentation(v1);

    if (v2)
    {
      v1 = (UIImage *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v2);

    }
    else
    {
      return 0;
    }
  }
  return v1;
}

uint64_t sub_1004B31F4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1004B3218(uint64_t a1)
{
  uint64_t v1;

  sub_1004B1810(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1004B3220()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1004B324C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD), uint64_t a3)
{
  uint64_t v3;

  sub_1004B1D54(a1, a2, a3, *(char **)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_1004B3254()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004B3278()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1004B329C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1004B2EC0(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

id TTRIWhatsNewAssembly.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIWhatsNewAssembly();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for TTRIWhatsNewAssembly()
{
  return objc_opt_self(_TtC9Reminders20TTRIWhatsNewAssembly);
}

id TTRIWhatsNewAssembly.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIWhatsNewAssembly();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_1004B3378(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD v19[5];

  v4 = type metadata accessor for TTRIWhatsNewRouter();
  v5 = swift_allocObject(v4, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, 0);
  v19[3] = v4;
  v19[4] = &off_1005EC880;
  v19[0] = v5;
  v6 = type metadata accessor for TTRIWhatsNewPresenter();
  v7 = (_QWORD *)swift_allocObject(v6, 88, 7);
  v8 = sub_100028D48((uint64_t)v19, v4);
  __chkstk_darwin(v8);
  v10 = (_QWORD *)((char *)&v19[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v11 + 16))(v10);
  v12 = *v10;
  v7[9] = v4;
  v7[10] = &off_1005EC880;
  v7[6] = v12;
  v7[3] = 0;
  swift_unknownObjectWeakInit(v7 + 2, 0);
  v7[5] = 0;
  swift_unknownObjectWeakInit(v7 + 4, 0);
  swift_retain(v5);
  sub_100027F10(v19);
  v13 = objc_allocWithZone((Class)type metadata accessor for TTRIWhatsNewViewController());
  v14 = swift_retain(v7);
  v16 = sub_10035EA18(v14, v15);
  v7[5] = a2;
  swift_unknownObjectWeakAssign(v7 + 4, a1);
  swift_unknownObjectWeakAssign(v5 + 16, v16);
  swift_release(v5);
  return v16;
}

uint64_t sub_1004B34EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100661EC0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100661EC0);
  if (qword_10063D618 != -1)
    swift_once(&qword_10063D618, sub_1002EBB28);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673798);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_1004B357C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSURL *v10;
  void *v11;
  void *v12;
  unint64_t v13;
  Class isa;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;

  v0 = sub_10002A750((uint64_t *)&unk_100640EE0);
  __chkstk_darwin(v0);
  v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - v4;
  URL.init(string:)(0xD000000000000040, 0x8000000100574B80);
  result = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (result)
  {
    v7 = result;
    sub_1001D705C((uint64_t)v5, (uint64_t)v2);
    v8 = type metadata accessor for URL(0);
    v9 = *(_QWORD *)(v8 - 8);
    v11 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v2, 1, v8) != 1)
    {
      URL._bridgeToObjectiveC()(v10);
      v11 = v12;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v2, v8);
    }
    v13 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    LOBYTE(v13) = objc_msgSend(v7, "openSensitiveURL:withOptions:", v11, isa, swift_bridgeObjectRelease(v13).n128_f64[0]);

    if ((v13 & 1) == 0)
    {
      if (qword_10063D838 != -1)
        swift_once(&qword_10063D838, sub_1004B34EC);
      v15 = type metadata accessor for Logger(0);
      v16 = sub_100012DC4(v15, (uint64_t)qword_100661EC0);
      v17 = Logger.logObject.getter(v16);
      v18 = static os_log_type_t.error.getter(v17);
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v19 = 0;
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "TTRICloudIsOffProvider: Failed to open Settings to turn on iCloud for Reminders", v19, 2u);
        swift_slowDealloc(v19, -1, -1);
      }

    }
    return (id)sub_1001D70A4((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004B37B8()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v0 = sub_1004B3830();
  v1 = (_QWORD *)((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x60));
  swift_beginAccess(v1, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);

  return v2;
}

_QWORD *sub_1004B3830()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;
  id v6;

  v1 = qword_100661EE0;
  v2 = *(void **)((char *)v0 + qword_100661EE0);
  if (v2)
  {
    v3 = *(_QWORD **)((char *)v0 + qword_100661EE0);
  }
  else
  {
    v4 = sub_1004B3F68(v0);
    v5 = *(void **)((char *)v0 + v1);
    *(_QWORD *)((char *)v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1004B3890()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v0 = sub_1004B3830();
  v1 = (_QWORD *)((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x70));
  swift_beginAccess(v1, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(v2);

  return v2;
}

void sub_1004B38FC(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t v6;
  char v7[24];

  v3 = swift_isaMask & *v1;
  v4 = sub_1004B3830();
  v5 = (char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x78);
  swift_beginAccess(v5, v7, 0, 0);
  v6 = type metadata accessor for Optional(0, *(_QWORD *)(v3 + 80));
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, v5, v6);

}

void (*sub_1004B3994(_QWORD *a1))(uint64_t a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = type metadata accessor for Optional(0, *(_QWORD *)((swift_isaMask & *v1) + 0x50));
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v7 = malloc(v6);
  v3[4] = v7;
  sub_1004B38FC((uint64_t)v7);
  return sub_1004B3A2C;
}

void sub_1004B3A2C(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    sub_1004B43F4((uint64_t)v3);
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
  }
  else
  {
    sub_1004B43F4(*(_QWORD *)(*(_QWORD *)a1 + 32));
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v7(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

void sub_1004B3AC4()
{
  _QWORD *v0;
  id v1;

  v0 = sub_1004B3830();
  v1 = objc_msgSend(v0, "text");

  if (v1)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  }
  else
  {
    __break(1u);
  }
}

double (*sub_1004B3B2C(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  a1[2] = v1;
  sub_1004B3AC4();
  *a1 = v3;
  a1[1] = v4;
  return sub_1004B3B60;
}

double sub_1004B3B60(uint64_t *a1, char a2)
{
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  Swift::String v5;
  _QWORD *v6;
  Swift::String v7;
  double result;

  v3 = *a1;
  v2 = (void *)a1[1];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain(a1[1]);
    v4 = sub_1004B3830();
    v5._countAndFlagsBits = v3;
    v5._object = v2;
    TTRIInlineButtonAttachmentTextView.applyText(_:)(v5);

    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v6 = sub_1004B3830();
    v7._countAndFlagsBits = v3;
    v7._object = v2;
    TTRIInlineButtonAttachmentTextView.applyText(_:)(v7);

  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
  return result;
}

void sub_1004B3BD4()
{
  _QWORD *v0;
  id v1;

  v0 = sub_1004B3830();
  v1 = objc_msgSend(v0, "attributedText");

  if (!v1)
    __break(1u);
}

void sub_1004B3C1C(void *a1)
{
  _QWORD *v1;

  v1 = sub_1004B3830();
  TTRIInlineButtonAttachmentTextView.applyAttributedText(_:forceUpdate:)((NSAttributedString)a1, 0);

}

void (*sub_1004B3C5C(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  sub_1004B3BD4();
  *a1 = v3;
  return sub_1004B3C90;
}

void sub_1004B3C90(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    sub_1004B3C1C(v3);

  }
  else
  {
    sub_1004B3C1C(v2);
  }
}

uint64_t sub_1004B3CE4()
{
  uint64_t v0;

  v0 = sub_1004B3CF8();
  return swift_getObjCClassFromMetadata(v0);
}

uint64_t sub_1004B3CF8()
{
  return type metadata accessor for TTRIMarginTransferringContainerBoxView(0);
}

id sub_1004B3D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_class *ObjectType;
  char *v7;
  unint64_t v8;
  NSString v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  Class isa;
  objc_super v20;

  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  v7 = &v3[qword_100661ED8];
  *((_QWORD *)v7 + 1) = 0;
  v8 = swift_unknownObjectWeakInit(v7, 0).n128_u64[0];
  *(_QWORD *)&v3[qword_100661EE0] = 0;
  if (a3)
  {
    v9 = String._bridgeToObjectiveC()();
    v8 = swift_bridgeObjectRelease(a3).n128_u64[0];
  }
  else
  {
    v9 = 0;
  }
  v20.receiver = v3;
  v20.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v20, "initWithStyle:reuseIdentifier:", a1, v9, *(double *)&v8);

  v11 = v10;
  v12 = objc_msgSend(v11, "containerView");
  objc_msgSend(v12, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v12, "setPreservesSuperviewLayoutMargins:", 1);
  objc_msgSend(v12, "setHorizontalAlignment:", 0);
  objc_msgSend(v12, "setVerticalAlignment:", 0);
  objc_msgSend(v12, "setDebugBoundingBoxesEnabled:", 0);
  v13 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v14 = swift_allocObject(v13, 40, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100521140;
  v15 = v12;
  v16 = sub_1004B3830();
  *(_QWORD *)(v14 + 32) = v16;
  specialized Array._endMutation()(v16);
  v17 = v14;
  sub_10043CAD4();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v15, "setArrangedSubviews:", isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

  objc_msgSend(v11, "setSelectionStyle:", 0);
  objc_msgSend(v11, "setSeparatorInset:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  return v11;
}

id sub_1004B3EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  if (a4)
  {
    a4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
    v6 = v5;
  }
  else
  {
    v6 = 0;
  }
  return sub_1004B3D00(a3, a4, v6);
}

void sub_1004B3F44(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1004B44E8();
}

_QWORD *sub_1004B3F68(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  _BYTE v6[24];

  v2 = type metadata accessor for TTRIInlineButtonAttachmentTextView(0, *(_QWORD *)((swift_isaMask & *a1) + 0x50), *(_QWORD *)((swift_isaMask & *a1) + 0x58));
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  v4 = (char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x80);
  swift_beginAccess(v4, v6, 1, 0);
  *((_QWORD *)v4 + 1) = &off_100609D98;
  swift_unknownObjectWeakAssign(v4, a1);
  return v3;
}

void sub_1004B4010(uint64_t a1)
{
  sub_1000381C8(a1 + qword_100661ED8);

}

uint64_t sub_1004B4048()
{
  return sub_1004B37B8();
}

uint64_t sub_1004B4068()
{
  return sub_1004B3890();
}

void sub_1004B4088(uint64_t a1@<X8>)
{
  sub_1004B38FC(a1);
}

uint64_t sub_1004B40A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1004B43F4(a1);
  v4 = type metadata accessor for Optional(0, *(_QWORD *)(a2 + 80));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

void (*sub_1004B40F4(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1004B3994(v2);
  return sub_10002AD0C;
}

void sub_1004B413C()
{
  sub_1004B3AC4();
}

double sub_1004B415C(uint64_t a1, void *a2)
{
  double result;

  sub_1004B4498(a1, a2);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a2).n128_u64[0];
  return result;
}

void (*sub_1004B4184(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1004B3B2C(v2);
  return sub_10002AD0C;
}

void sub_1004B41CC()
{
  sub_1004B3BD4();
}

void sub_1004B41EC(void *a1)
{
  sub_1004B3C1C(a1);
}

void (*sub_1004B420C(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1004B3C5C(v2);
  return sub_10002AD0C;
}

uint64_t sub_1004B4254(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = swift_unknownObjectWeakLoadStrong(v1 + qword_100661ED8);
  if (result)
  {
    v4 = result;
    sub_10006945C(a1);
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

Class sub_1004B42A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  NSAttributedString v10;
  Class isa;
  Swift::String v12;
  NSAttributedString v13;
  uint64_t v14;

  swift_getObjectType(v2, a2);
  v3 = type metadata accessor for TTRIInlineButtonAttachmentTextViewButton(0);
  v4 = (void *)UIView.firstDescendantView<A>(ofType:passing:)(v3, 0, 0, v3);
  if (v4
    && (v5 = v4, v6 = objc_msgSend(v4, "accessibilityLabel"), v5, v6))
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v9 = v8;

    sub_1004B3BD4();
    isa = v10.super.isa;
    v12._countAndFlagsBits = v7;
    v12._object = v9;
    v13.super.isa = TTRInlineButtonAttachmentTextViewDelegate.ttrAccessibilityAttributedLabelWith(_:replacementStringForButton:)(v10, v12).super.isa;
    swift_bridgeObjectRelease(v9);

  }
  else
  {
    sub_1004B3BD4();
    return (Class)v14;
  }
  return v13.super.isa;
}

uint64_t sub_1004B4370()
{
  uint64_t *v0;
  uint64_t v1;

  v0 = (uint64_t *)TTRAccesibility.General.Hint.AnyOrAllMenuHint.unsafeMutableAddressor();
  v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

NSAttributedString sub_1004B43A0(NSAttributedString a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  Swift::String v7;

  swift_getObjectType(v3, a2);
  v7._countAndFlagsBits = a2;
  v7._object = a3;
  return TTRInlineButtonAttachmentTextViewDelegate.ttrAccessibilityAttributedLabelWith(_:replacementStringForButton:)(a1, v7);
}

void sub_1004B43F4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;

  v3 = type metadata accessor for Optional(0, *(_QWORD *)((swift_isaMask & *v1) + 0x50));
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v8 - v5;
  v7 = sub_1004B3830();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  TTRIInlineButtonAttachmentTextView.selectedItem.setter(v6);

}

void sub_1004B4498(uint64_t a1, void *a2)
{
  Swift::String v4;
  _QWORD *v5;

  v5 = sub_1004B3830();
  v4._countAndFlagsBits = a1;
  v4._object = a2;
  TTRIInlineButtonAttachmentTextView.applyText(_:)(v4);

}

void sub_1004B44E8()
{
  char *v0;
  char *v1;

  v1 = &v0[qword_100661ED8];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1, 0);
  *(_QWORD *)&v0[qword_100661EE0] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010055F310, "Reminders/TTRIAccountsListsInlineTextAttachmentCell.swift", 57, 2, 112, 0);
  __break(1u);
}

uint64_t type metadata accessor for TTRIAboutYourDevicesRouter()
{
  return objc_opt_self(_TtC9Reminders26TTRIAboutYourDevicesRouter);
}

uint64_t sub_1004B4588(uint64_t a1)
{
  void *v2;

  v2 = &unk_100538FF0;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 248);
}

uint64_t sub_1004B45C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t TupleTypeMetadata2;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t, double);
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  char v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v32 = a1;
  v7 = type metadata accessor for TTRIMenuItem(0, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v28 = (char *)&v27 - v9;
  v29 = a3;
  v30 = a4;
  v11 = type metadata accessor for TTRIFilterOperationCellContentState.Option(0, a3, a4, v10);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v27 - v13;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v11, v11, 0, 0);
  v31 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v16 = __chkstk_darwin(TupleTypeMetadata2);
  v18 = (char *)&v27 - v17;
  v20 = (char *)&v27 + *(int *)(v19 + 48) - v17;
  v21 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  v21((char *)&v27 - v17, v32, v11, v16);
  ((void (*)(char *, uint64_t, uint64_t))v21)(v20, a2, v11);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v22(v18, 1, v7) == 1)
  {
    v23 = 1;
    if (v22(v20, 1, v7) == 1)
      goto LABEL_8;
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v21)(v14, v18, v11);
    if (v22(v20, 1, v7) != 1)
    {
      v24 = v28;
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v28, v20, v7);
      v23 = static TTRIMenuItem.== infix(_:_:)(v14, v24, v29, v30);
      v25 = *(void (**)(char *, uint64_t))(v8 + 8);
      v25(v24, v7);
      v25(v14, v7);
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
  }
  v23 = 0;
  v12 = v31;
  v11 = TupleTypeMetadata2;
LABEL_8:
  (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
  return v23 & 1;
}

uint64_t sub_1004B47EC(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t WitnessTable;
  uint64_t v16;
  uint64_t v17;

  v8 = *a1;
  v9 = a1[1];
  v10 = a2[1];
  v11 = v8 == *a2 && v9 == v10;
  if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, *a2, v10, 0) & 1) == 0)
    return 0;
  v12 = a1[2];
  v13 = a2[2];
  v14 = type metadata accessor for TTRIFilterOperationCellContentState.Option(0, a3, a4, v10);
  WitnessTable = swift_getWitnessTable(&unk_100539158, v14);
  if ((static Array<A>.== infix(_:_:)(v12, v13, v14, WitnessTable) & 1) == 0)
    return 0;
  v17 = type metadata accessor for TTRIFilterOperationCellContentState(0, a3, a4, v16);
  return dispatch thunk of static Equatable.== infix(_:_:)((char *)a1 + *(int *)(v17 + 40), (char *)a2 + *(int *)(v17 + 40), a3, a4) & 1;
}

uint64_t sub_1004B48C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1004B45C8(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1004B48D4(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  return sub_1004B47EC(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1004B48E0(uint64_t a1)
{
  uint64_t v1;

  v1 = a1 + qword_1006620F8;
  *(_QWORD *)(v1 + 8) = 0;
  return swift_unknownObjectWeakAssign(v1, 0);
}

uint64_t sub_1004B48F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = a1 + qword_1006620F8;
  *(_QWORD *)(v2 + 8) = &off_10060A050;
  return swift_unknownObjectWeakAssign(v2, v1);
}

void sub_1004B4918(uint64_t a1)
{
  _QWORD v1[3];

  v1[2] = a1;
  sub_1004B4B08((uint64_t)sub_1004B6FE0, (uint64_t)v1);
}

void sub_1004B4954(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _BYTE v23[24];

  v4 = swift_isaMask;
  v5 = swift_isaMask & *a1;
  v6 = *(_QWORD *)(v5 + 0x50);
  v7 = type metadata accessor for Optional(0, v6);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v23[-v9 - 8];
  v11 = (_QWORD *)((char *)a2 + *(_QWORD *)((*a2 & v4) + 0x78));
  swift_beginAccess(v11, v23, 0, 0);
  v13 = type metadata accessor for TTRIFilterOperationCellContentState(0, v6, *(_QWORD *)(v5 + 88), v12);
  v14 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v10, (char *)v11 + *(int *)(v13 + 40), v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v6);
  sub_1004B6E84((uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v15 = v11[2];
  v16 = *(_QWORD *)((char *)a1 + qword_100662100);
  *(_QWORD *)((char *)a1 + qword_100662100) = v15;
  swift_bridgeObjectRetain(v15);
  sub_1004B4FDC(v16, v17, v18, v19);
  swift_bridgeObjectRelease(v16);
  v21 = *v11;
  v20 = v11[1];
  swift_bridgeObjectRetain(v20);
  sub_1004B4AA4(v21, v20);
}

void sub_1004B4AA4(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;

  v6 = sub_1004B4F7C();
  if (a2)
    v4 = a1;
  else
    v4 = 0;
  if (!a2)
    a2 = 0xE000000000000000;
  v5 = a2;
  TTRIInlineButtonAttachmentTextView.applyText(_:)(*(Swift::String *)&v4);
  swift_bridgeObjectRelease(a2);

}

void sub_1004B4B08(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[6];

  v5 = objc_msgSend(v2, "containerView");
  v6 = swift_allocObject(&unk_10060A070, 32, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v8[4] = sub_10001B278;
  v8[5] = v6;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10001B258;
  v8[3] = &unk_10060A088;
  v7 = _Block_copy(v8);
  swift_retain();
  objc_msgSend(v5, "performBatchUpdates:", v7, swift_release().n128_f64[0]);

  _Block_release(v7);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation(v6, "", 134, 124, 43, 1);
  swift_release();
  if ((v5 & 1) != 0)
    __break(1u);
}

void sub_1004B4C1C()
{
  _swift_stdlib_reportUnimplementedInitializer("Reminders.TTRIFilterOperationCellContent", 40, "init(state:prototypeCellView:reuseIdentifier:)", 46, 0);
  __break(1u);
}

uint64_t sub_1004B4C48()
{
  _QWORD *v0;
  uint64_t *v1;

  v1 = (_QWORD *)((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0xF8));
  return sub_1000381B8(*v1, v1[1]);
}

uint64_t sub_1004B4C6C(_QWORD *a1)
{
  uint64_t *v1;

  v1 = (_QWORD *)((char *)a1 + *(_QWORD *)((swift_isaMask & *a1) + 0xF8));
  return sub_1000381B8(*v1, v1[1]);
}

uint64_t type metadata accessor for TTRIFilterOperationCellContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIFilterOperationCellContent);
}

uint64_t sub_1004B4C9C(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = &unk_100539070;
  v2[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[2] = &unk_100539088;
  return swift_initClassMetadata2(a1, 0, 3, v2, a1 + 96);
}

uint64_t sub_1004B4CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  int v18;
  void (*v19)(_BYTE *, uint64_t, uint64_t, uint64_t);
  char *v20;
  __n128 v21;
  uint64_t v22;
  void (*v23)(_BYTE *, char *, uint64_t, __n128);
  char *v24;
  __n128 v25;
  void (*v26)(_BYTE *);
  uint64_t v27;
  uint64_t v29;
  _BYTE v30[24];
  _BYTE v31[32];

  v6 = *(_QWORD *)((swift_isaMask & *v4) + 0xE8);
  v7 = type metadata accessor for TTRIFilterOperationCellContentState(0, v6, *(_QWORD *)((swift_isaMask & *v4) + 0xF0), a4);
  v29 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = &v30[-v8 - 8];
  v10 = type metadata accessor for Optional(0, v6);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v30[-v12 - 8];
  v14 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v15);
  v17 = &v30[-v16 - 8];
  sub_100028CFC(a1, (uint64_t)v31);
  v18 = swift_dynamicCast(v13, v31, &type metadata for Any[8], v6, 6);
  v19 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  if (v18)
  {
    v19(v13, 0, 1, v6);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 32))(v17, v13, v6);
    v20 = (char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x78);
    v21 = swift_beginAccess(v20, v31, 0, 0);
    v22 = v29;
    v23 = *(void (**)(_BYTE *, char *, uint64_t, __n128))(v29 + 16);
    v23(v9, v20, v7, v21);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 24))(&v9[*(int *)(v7 + 40)], v17, v6);
    TTRITableCellContent.state.setter(v9);
    v24 = (char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0xF8);
    v25 = swift_beginAccess(v24, v30, 32, 0);
    v26 = *(void (**)(_BYTE *))v24;
    if (*(_QWORD *)v24)
    {
      v27 = *((_QWORD *)v24 + 1);
      swift_endAccess(v30);
      ((void (*)(_BYTE *, char *, uint64_t))v23)(v9, v20, v7);
      swift_retain();
      v26(v9);
      sub_1000381B8((uint64_t)v26, v27);
      (*(void (**)(_BYTE *, uint64_t))(v22 + 8))(v9, v7);
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v14 + 8))(v17, v6);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t, __n128))(v14 + 8))(v17, v6, v25);
      return swift_endAccess(v30);
    }
  }
  else
  {
    v19(v13, 1, 1, v6);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  }
}

_QWORD *sub_1004B4F7C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;
  id v6;

  v1 = qword_100662108;
  v2 = *(void **)((char *)v0 + qword_100662108);
  if (v2)
  {
    v3 = *(_QWORD **)((char *)v0 + qword_100662108);
  }
  else
  {
    v4 = sub_1004B5650(v0);
    v5 = *(void **)((char *)v0 + v1);
    *(_QWORD *)((char *)v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1004B4FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t WitnessTable;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  _QWORD v19[5];
  uint64_t v20;

  v6 = qword_100662100;
  v7 = *(_QWORD *)((char *)v4 + qword_100662100);
  v8 = *(_QWORD *)((swift_isaMask & *v4) + 0x50);
  v9 = *(_QWORD *)((swift_isaMask & *v4) + 0x58);
  v10 = type metadata accessor for TTRIFilterOperationCellContentState.Option(0, v8, v9, a4);
  swift_bridgeObjectRetain(v7);
  WitnessTable = swift_getWitnessTable(&unk_100539158, v10);
  LOBYTE(a1) = static Array<A>.== infix(_:_:)(a1, v7, v10, WitnessTable);
  swift_bridgeObjectRelease(v7);
  if ((a1 & 1) == 0)
  {
    v12 = sub_1004B4F7C();
    v20 = *(_QWORD *)((char *)v4 + v6);
    __chkstk_darwin(v12);
    v19[2] = v8;
    v19[3] = v9;
    v13 = type metadata accessor for Array(0, v10);
    v14 = type metadata accessor for TTRIInlineButtonAttachmentTextView.Option(0, v8, v9);
    swift_bridgeObjectRetain(v20);
    v15 = swift_getWitnessTable(&protocol conformance descriptor for [A], v13);
    v17 = sub_10004E188((void (*)(char *, char *))sub_1004B6FF8, (uint64_t)v19, v13, v14, (uint64_t)&type metadata for Never, v15, (uint64_t)&protocol witness table for Never, v16);
    v18 = swift_bridgeObjectRelease(v20);
    TTRIInlineButtonAttachmentTextView.menuOptions.setter(v17, v18);

  }
}

uint64_t sub_1004B5150@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void (*v25)(char *, uint64_t);
  id v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;

  v32 = a4;
  v31 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRIMenuItem(0, v10, v11);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v28 - v14;
  v17 = type metadata accessor for TTRIFilterOperationCellContentState.Option(0, a2, a3, v16);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v28 - v19;
  (*(void (**)(char *, uint64_t, double))(v21 + 16))((char *)&v28 - v19, a1, v18);
  v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v20, 1, v12) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v20, v12);
    v23 = *((_QWORD *)v15 + 1);
    v29 = *(_QWORD *)v15;
    v30 = v4;
    v24 = (void *)*((_QWORD *)v15 + 2);
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v9, &v15[*(int *)(v12 + 40)], a2);
    v25 = *(void (**)(char *, uint64_t))(v13 + 8);
    swift_bridgeObjectRetain(v23);
    v26 = v24;
    v25(v15, v12);
    TTRIMenuItem.init(title:image:item:selectedTitle:)(v32, v29, v23, v24, v9, 0, 0, a2);
    v22 = 0;
  }
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v32, v22, 1, v12);
}

uint64_t sub_1004B5314()
{
  uint64_t v0;

  v0 = sub_1004B3CF8();
  return swift_getObjCClassFromMetadata(v0);
}

id sub_1004B5328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  objc_class *ObjectType;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  double v14;
  NSString v15;
  id v16;
  void *v17;
  id v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t ObjCClassFromMetadata;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  Class isa;
  objc_super v32;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  v8 = swift_isaMask & *v4;
  v9 = (char *)v4 + qword_1006620F8;
  *((_QWORD *)v9 + 1) = 0;
  swift_unknownObjectWeakInit(v9, 0);
  v10 = qword_100662100;
  v12 = type metadata accessor for TTRIFilterOperationCellContentState.Option(0, *(_QWORD *)(v8 + 80), *(_QWORD *)(v8 + 88), v11);
  v13 = v4;
  *(_QWORD *)((char *)v4 + v10) = Array.init()(v12);
  *(_QWORD *)((char *)v13 + qword_100662108) = 0;

  if (a3)
  {
    v15 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v14 = swift_bridgeObjectRelease(a3).n128_u64[0];
  }
  else
  {
    v15 = 0;
  }
  v32.receiver = v13;
  v32.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v32, "initWithStyle:reuseIdentifier:", a1, v15, v14);

  v17 = (void *)objc_opt_self(NSTextAttachment);
  v18 = v16;
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v17, "textAttachmentViewProviderClassForFileType:", v19);

  if (!v20)
  {
    v21 = type metadata accessor for TTRIMenuButtonAttachmentProvider(0);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v21);
    v23 = String._bridgeToObjectiveC()();
    objc_msgSend(v17, "registerTextAttachmentViewProviderClass:forFileType:", ObjCClassFromMetadata, v23);

  }
  v24 = objc_msgSend(v18, "containerView");
  objc_msgSend(v24, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v24, "setPreservesSuperviewLayoutMargins:", 1);
  objc_msgSend(v24, "setHorizontalAlignment:", 0);
  objc_msgSend(v24, "setVerticalAlignment:", 0);
  v25 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v26 = swift_allocObject(v25, 40, 7);
  *(_OWORD *)(v26 + 16) = xmmword_100521140;
  v27 = v24;
  v28 = sub_1004B4F7C();
  *(_QWORD *)(v26 + 32) = v28;
  specialized Array._endMutation()(v28);
  v29 = v26;
  sub_10043CAD4();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v27, "setArrangedSubviews:", isa, swift_bridgeObjectRelease(v29).n128_f64[0]);

  objc_msgSend(v18, "setSeparatorInset:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  return v18;
}

id sub_1004B55E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  if (a4)
  {
    a4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
    v6 = v5;
  }
  else
  {
    v6 = 0;
  }
  return sub_1004B5328(a3, a4, v6);
}

void sub_1004B562C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1004B6F28();
}

_QWORD *sub_1004B5650(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  _BYTE v9[24];

  v2 = type metadata accessor for TTRIInlineButtonAttachmentTextView(0, *(_QWORD *)((swift_isaMask & *a1) + 0x50), *(_QWORD *)((swift_isaMask & *a1) + 0x58));
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  v4 = (_QWORD *)((char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x60));
  swift_beginAccess(v4, v9, 1, 0);
  v5 = v4[1];
  *v4 = 0xD000000000000020;
  v4[1] = 0x800000010057AF60;
  swift_bridgeObjectRelease(v5);
  v6 = (char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x80);
  swift_beginAccess(v6, &v8, 1, 0);
  *((_QWORD *)v6 + 1) = &off_10060A020;
  swift_unknownObjectWeakAssign(v6, a1);
  return v3;
}

void sub_1004B5744(uint64_t a1)
{
  sub_1000381C8(a1 + qword_1006620F8);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100662100));

}

uint64_t type metadata accessor for TTRIFilterOperationTableCell(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIFilterOperationTableCell);
}

uint64_t sub_1004B5798(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for TTRIMenuItem(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 0, *(_QWORD *)(result - 8) + 64, 1);
    return 0;
  }
  return result;
}

_QWORD *sub_1004B57F0(_QWORD *__dst, _QWORD *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void **v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  id v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64) + 7;
  if (v7 <= 7
    && (*(_DWORD *)(v6 + 80) & 0x100000) == 0
    && ((v8 + ((v7 + 24) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x18)
  {
    v12 = ~v7;
    if ((*(_DWORD *)(v6 + 84) & 0x80000000) != 0)
    {
      if ((*(unsigned int (**)(unint64_t))(v6 + 48))(((((unint64_t)__src + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                       + v7
                                                                       + 8) & v12))
      {
LABEL_14:
        memcpy(__dst, __src, ((v8 + ((v7 + 24) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 16);
        return __dst;
      }
    }
    else
    {
      v13 = __src[1];
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      if ((_DWORD)v13 != -1)
        goto LABEL_14;
    }
    v14 = __src[1];
    *__dst = *__src;
    __dst[1] = v14;
    v15 = (_QWORD *)(((unint64_t)__dst + 23) & 0xFFFFFFFFFFFFFFF8);
    v16 = (void **)(((unint64_t)__src + 23) & 0xFFFFFFFFFFFFFFF8);
    v17 = *v16;
    *v15 = *v16;
    v18 = ((unint64_t)v15 + v7 + 8) & v12;
    v19 = ((unint64_t)v16 + v7 + 8) & v12;
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain(v14);
    v21 = v17;
    v20(v18, v19, v5);
    v22 = (_QWORD *)((v8 + v18) & 0xFFFFFFFFFFFFFFF8);
    v23 = (_QWORD *)((v8 + v19) & 0xFFFFFFFFFFFFFFF8);
    *v22 = *v23;
    v24 = v23[1];
    v22[1] = v24;
    swift_bridgeObjectRetain(v24);
    return __dst;
  }
  v11 = *__src;
  *__dst = *__src;
  __dst = (_QWORD *)(v11 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
  swift_retain(v11);
  return __dst;
}

uint64_t sub_1004B596C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  id *v10;
  uint64_t v11;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ~v5;
  v7 = *(_QWORD *)(v4 + 64);
  if ((*(_DWORD *)(v4 + 84) & 0x80000000) != 0)
  {
    result = (*(uint64_t (**)(unint64_t))(v4 + 48))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v5 + 8) & v6);
    if ((_DWORD)result)
      return result;
LABEL_7:
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
    v10 = (id *)((a1 + 23) & 0xFFFFFFFFFFFFFFF8);

    v11 = ((unint64_t)v10 + v5 + 8) & v6;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v11, v3);
    return swift_bridgeObjectRelease(*(_QWORD *)(((v7 + v11 + 7) & 0xFFFFFFFFFFFFF8) + 8));
  }
  v8 = *(_QWORD *)(a1 + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  result = (v8 + 1);
  if ((_DWORD)v8 == -1)
    goto LABEL_7;
  return result;
}

_QWORD *sub_1004B5A48(_QWORD *__dst, _QWORD *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void **v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  id v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  if ((*(_DWORD *)(v6 + 84) & 0x80000000) == 0)
  {
    v10 = __src[1];
    if (v10 >= 0xFFFFFFFF)
      LODWORD(v10) = -1;
    v11 = v9 + 7;
    if ((_DWORD)v10 != -1)
      goto LABEL_5;
LABEL_7:
    v12 = __src[1];
    *__dst = *__src;
    __dst[1] = v12;
    v13 = (_QWORD *)(((unint64_t)__dst + 23) & 0xFFFFFFFFFFFFFFF8);
    v14 = (void **)(((unint64_t)__src + 23) & 0xFFFFFFFFFFFFFFF8);
    v15 = *v14;
    *v13 = *v14;
    v16 = ((unint64_t)v13 + v7 + 8) & v8;
    v17 = ((unint64_t)v14 + v7 + 8) & v8;
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain(v12);
    v19 = v15;
    v18(v16, v17, v5);
    v20 = (_QWORD *)((v11 + v16) & 0xFFFFFFFFFFFFFFF8);
    v21 = (_QWORD *)((v11 + v17) & 0xFFFFFFFFFFFFFFF8);
    *v20 = *v21;
    v22 = v21[1];
    v20[1] = v22;
    swift_bridgeObjectRetain(v22);
    return __dst;
  }
  v11 = v9 + 7;
  if (!(*(unsigned int (**)(unint64_t))(v6 + 48))(((((unint64_t)__src + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                    + v7
                                                                    + 8) & v8))
    goto LABEL_7;
LABEL_5:
  memcpy(__dst, __src, ((v11 + ((v7 + 24) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 16);
  return __dst;
}

_QWORD *sub_1004B5B80(_QWORD *__dst, _QWORD *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  size_t v15;
  id *v16;
  void *v17;
  _QWORD *v18;
  uint64_t (*v19)(unint64_t, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  void **v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  id v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void **v33;
  void **v34;
  void *v35;
  void *v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  int v46;
  uint64_t v47;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = ~v8;
  v10 = *(_QWORD *)(v6 + 64) + 7;
  v11 = ((v10 + ((v8 + 24) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 16;
  v47 = ~v8;
  if ((v7 & 0x80000000) != 0)
  {
    v19 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
    v46 = v19(((((unint64_t)__dst + 23) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & v9, v7, v5);
    v14 = v19(((((unint64_t)__src + 23) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & v9, v7, v5);
    v11 = ((v10 + ((v8 + 24) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 16;
    if (!v46)
    {
LABEL_5:
      if (!v14)
      {
        *__dst = *__src;
        v31 = __src[1];
        v32 = __dst[1];
        __dst[1] = v31;
        swift_bridgeObjectRetain(v31);
        swift_bridgeObjectRelease(v32);
        v33 = (void **)(((unint64_t)__dst + 23) & 0xFFFFFFFFFFFFFFF8);
        v34 = (void **)(((unint64_t)__src + 23) & 0xFFFFFFFFFFFFFFF8);
        v35 = *v34;
        v36 = *v33;
        *v33 = *v34;
        v37 = v35;

        v38 = (char *)v34 + v8;
        v39 = ((unint64_t)v33 + v8 + 8) & v47;
        v40 = (unint64_t)(v38 + 8) & v47;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v39, v40, v5);
        v41 = (_QWORD *)((v10 + v39) & 0xFFFFFFFFFFFFFFF8);
        v42 = (_QWORD *)((v10 + v40) & 0xFFFFFFFFFFFFFFF8);
        *v41 = *v42;
        v43 = v42[1];
        v44 = v41[1];
        v41[1] = v43;
        swift_bridgeObjectRetain(v43);
        swift_bridgeObjectRelease(v44);
        return __dst;
      }
      v15 = v11;
      swift_bridgeObjectRelease(__dst[1]);
      v16 = (id *)(((unint64_t)__dst + 23) & 0xFFFFFFFFFFFFFFF8);

      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(((unint64_t)v16 + v8 + 8) & v47, v5);
      swift_bridgeObjectRelease(*(_QWORD *)(((v10 + (((unint64_t)v16 + v8 + 8) & v47)) & 0xFFFFFFFFFFFFF8) + 8));
      v17 = __dst;
      v18 = __src;
      v11 = v15;
      goto LABEL_10;
    }
  }
  else
  {
    v12 = __dst[1];
    v13 = __src[1];
    if (v13 >= 0xFFFFFFFF)
      LODWORD(v13) = -1;
    v14 = v13 + 1;
    if (v12 > 0xFFFFFFFE)
      goto LABEL_5;
  }
  if (!v14)
  {
    *__dst = *__src;
    v20 = __src[1];
    __dst[1] = v20;
    v21 = (_QWORD *)(((unint64_t)__dst + 23) & 0xFFFFFFFFFFFFFFF8);
    v22 = (void **)(((unint64_t)__src + 23) & 0xFFFFFFFFFFFFFFF8);
    v23 = *v22;
    *v21 = *v22;
    v24 = ((unint64_t)v21 + v8 + 8) & v47;
    v25 = ((unint64_t)v22 + v8 + 8) & v47;
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain(v20);
    v27 = v23;
    v26(v24, v25, v5);
    v28 = (_QWORD *)((v10 + v24) & 0xFFFFFFFFFFFFFFF8);
    v29 = (_QWORD *)((v10 + v25) & 0xFFFFFFFFFFFFFFF8);
    *v28 = *v29;
    v30 = v29[1];
    v28[1] = v30;
    swift_bridgeObjectRetain(v30);
    return __dst;
  }
  v17 = __dst;
  v18 = __src;
LABEL_10:
  memcpy(v17, v18, v11);
  return __dst;
}

_OWORD *sub_1004B5E20(_OWORD *__dst, _QWORD *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  if ((*(_DWORD *)(v6 + 84) & 0x80000000) == 0)
  {
    v10 = __src[1];
    if (v10 >= 0xFFFFFFFF)
      LODWORD(v10) = -1;
    v11 = v9 + 7;
    if ((_DWORD)v10 != -1)
      goto LABEL_5;
LABEL_7:
    *__dst = *(_OWORD *)__src;
    v12 = (_QWORD *)(((unint64_t)__dst + 23) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)__src + 23) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v13;
    v14 = ((unint64_t)v12 + v7 + 8) & v8;
    v15 = ((unint64_t)v13 + v7 + 8) & v8;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v14, v15, v5);
    *(_OWORD *)((v11 + v14) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v11 + v15) & 0xFFFFFFFFFFFFF8);
    return __dst;
  }
  v11 = v9 + 7;
  if (!(*(unsigned int (**)(unint64_t))(v6 + 48))(((((unint64_t)__src + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                    + v7
                                                                    + 8) & v8))
    goto LABEL_7;
LABEL_5:
  memcpy(__dst, __src, ((v11 + ((v7 + 24) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 16);
  return __dst;
}

_QWORD *sub_1004B5F44(_QWORD *__dst, _QWORD *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  size_t v15;
  id *v16;
  void *v17;
  _QWORD *v18;
  uint64_t (*v19)(unint64_t, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void **v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  int v37;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = ~v8;
  v10 = *(_QWORD *)(v6 + 64) + 7;
  v11 = ((v10 + ((v8 + 24) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 16;
  if ((v7 & 0x80000000) != 0)
  {
    v19 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
    v20 = *(_QWORD *)(v6 + 64) + 7;
    v37 = v19(((((unint64_t)__dst + 23) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & v9, *(unsigned int *)(v6 + 84), v5);
    v14 = v19(((((unint64_t)__src + 23) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & v9, v7, v5);
    v11 = ((v10 + ((v8 + 24) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 16;
    v10 = v20;
    if (!v37)
    {
LABEL_5:
      if (!v14)
      {
        v25 = __src[1];
        v26 = __dst[1];
        *__dst = *__src;
        __dst[1] = v25;
        swift_bridgeObjectRelease(v26);
        v27 = (void **)(((unint64_t)__dst + 23) & 0xFFFFFFFFFFFFFFF8);
        v28 = (void **)(((unint64_t)__src + 23) & 0xFFFFFFFFFFFFFFF8);
        v29 = *v27;
        *v27 = *v28;

        v30 = (char *)v28 + v8;
        v31 = ((unint64_t)v27 + v8 + 8) & v9;
        v32 = (unint64_t)(v30 + 8) & v9;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40))(v31, v32, v5);
        v33 = (_QWORD *)((v10 + v31) & 0xFFFFFFFFFFFFFFF8);
        v34 = (_QWORD *)((v10 + v32) & 0xFFFFFFFFFFFFFFF8);
        *v33 = *v34;
        v35 = v33[1];
        v33[1] = v34[1];
        swift_bridgeObjectRelease(v35);
        return __dst;
      }
      v15 = v11;
      swift_bridgeObjectRelease(__dst[1]);
      v16 = (id *)(((unint64_t)__dst + 23) & 0xFFFFFFFFFFFFFFF8);

      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(((unint64_t)v16 + v8 + 8) & v9, v5);
      swift_bridgeObjectRelease(*(_QWORD *)(((v10 + (((unint64_t)v16 + v8 + 8) & v9)) & 0xFFFFFFFFFFFFF8) + 8));
      v17 = __dst;
      v18 = __src;
      v11 = v15;
      goto LABEL_10;
    }
  }
  else
  {
    v12 = __dst[1];
    v13 = __src[1];
    if (v13 >= 0xFFFFFFFF)
      LODWORD(v13) = -1;
    v14 = v13 + 1;
    if (v12 > 0xFFFFFFFE)
      goto LABEL_5;
  }
  if (!v14)
  {
    *(_OWORD *)__dst = *(_OWORD *)__src;
    v21 = (_QWORD *)(((unint64_t)__dst + 23) & 0xFFFFFFFFFFFFFFF8);
    v22 = (_QWORD *)(((unint64_t)__src + 23) & 0xFFFFFFFFFFFFFFF8);
    *v21 = *v22;
    v23 = ((unint64_t)v21 + v8 + 8) & v9;
    v24 = ((unint64_t)v22 + v8 + 8) & v9;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v23, v24, v5);
    *(_OWORD *)((v10 + v23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v10 + v24) & 0xFFFFFFFFFFFFF8);
    return __dst;
  }
  v17 = __dst;
  v18 = __src;
LABEL_10:
  memcpy(v17, v18, v11);
  return __dst;
}

uint64_t sub_1004B61A4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;
  unsigned int v13;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  if (v6 - 1 < a2)
  {
    v8 = a2 - v6 + 2;
    if (((((*(_QWORD *)(v4 + 64) + ((v7 + 24) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    __asm { BR              X15 }
  }
  if ((v5 & 0x80000000) != 0)
  {
    v13 = (*(uint64_t (**)(unint64_t))(v4 + 48))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7);
  }
  else
  {
    v12 = *(_QWORD *)(a1 + 8);
    if (v12 >= 0xFFFFFFFF)
      LODWORD(v12) = -1;
    v13 = v12 + 1;
  }
  if (v13 >= 2)
    return v13 - 1;
  else
    return 0;
}

void sub_1004B62E0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = v6 - 1;
  v8 = *(unsigned __int8 *)(v5 + 80);
  if (v6 - 1 >= a3)
  {
    v11 = 0;
    if (v7 >= a2)
      goto LABEL_16;
  }
  else
  {
    v9 = a3 - v6 + 2;
    if (((*(_DWORD *)(v5 + 64) + (((_DWORD)v8 + 24) & ~(_DWORD)v8) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (v7 >= a2)
LABEL_16:
      __asm { BR              X14 }
  }
  v12 = a2 - v6;
  if (((*(_DWORD *)(v5 + 64) + (((_DWORD)v8 + 24) & ~(_DWORD)v8) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    bzero(a1, ((*(_QWORD *)(v5 + 64) + ((v8 + 24) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_1004B63F0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1004B6498);
}

void sub_1004B63F8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1004B6400);
  JUMPOUT(0x1004B6498);
}

void sub_1004B6440()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1004B6498);
}

void sub_1004B6448()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1004B6498);
}

void sub_1004B6450(uint64_t a1, unsigned int a2, int a3)
{
  unsigned int v3;
  unsigned int v4;
  _QWORD *v5;
  size_t v6;

  *(_WORD *)((char *)v5 + v6) = 0;
  if (a2)
  {
    if (a2 + 1 <= v4)
    {
      if (a2 != -1)
      {
        if (a3 < 0)
          JUMPOUT(0x1004B645CLL);
        if (((a2 + 1) & 0x80000000) != 0)
          JUMPOUT(0x1004B648CLL);
        v5[1] = a2;
      }
    }
    else if ((_DWORD)v6)
    {
      v3 = a2 - v4;
      bzero(v5, v6);
      *(_DWORD *)v5 = v3;
    }
  }
  JUMPOUT(0x1004B6498);
}

uint64_t sub_1004B64B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  if ((*(_DWORD *)(v2 + 84) & 0x80000000) != 0)
    return (*(uint64_t (**)(unint64_t))(v2 + 48))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                  + *(unsigned __int8 *)(v2 + 80)
                                                                  + 8) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  return (v3 + 1);
}

void sub_1004B64F8(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  int v10;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = ~v7;
  if (v6 >= a2)
  {
    if (a2)
    {
      if ((v5 & 0x80000000) != 0)
      {
        (*(void (**)(unint64_t))(v4 + 56))(((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8)
                                                            + v7
                                                            + 8) & v8);
      }
      else if ((a2 & 0x80000000) != 0)
      {
        *a1 = a2 ^ 0x80000000;
        a1[1] = 0;
      }
      else
      {
        a1[1] = a2 - 1;
      }
    }
  }
  else
  {
    v9 = (((((_DWORD)v7 + 24) & v8) + *(_DWORD *)(v4 + 64) + 7) & 0xFFFFFFF8) + 16;
    if ((_DWORD)v9)
    {
      v10 = ~v6 + a2;
      bzero(a1, v9);
      *(_DWORD *)a1 = v10;
    }
  }
}

uint64_t type metadata accessor for TTRIFilterOperationCellContentState.Option(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIFilterOperationCellContentState.Option);
}

uint64_t sub_1004B65C8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_100539108;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 3, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_1004B664C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 24) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain(v9);
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v11 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    v12 = (uint64_t *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    v13 = *v12;
    *v11 = *v12;
    v14 = ((unint64_t)v11 + v6 + 8) & ~v6;
    v15 = ((unint64_t)v12 + v6 + 8) & ~v6;
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v13);
    v16(v14, v15, v4);
  }
  return a1;
}

uint64_t sub_1004B6730(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = (_QWORD *)((a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease(*v4);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(((unint64_t)v4 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_1004B6784(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (uint64_t *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = *v6;
  *v5 = *v6;
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = ((unint64_t)v5 + v10 + 8) & ~v10;
  v12 = ((unint64_t)v6 + v10 + 8) & ~v10;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v7);
  v13(v11, v12, v8);
  return a1;
}

_QWORD *sub_1004B6814(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = (uint64_t *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = (uint64_t *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = *v9;
  v11 = *v8;
  *v8 = *v9;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 24))(((unint64_t)v8 + *(unsigned __int8 *)(v12 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), ((unint64_t)v9 + *(unsigned __int8 *)(v12 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

_OWORD *sub_1004B68BC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  v4 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_QWORD *sub_1004B6924(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = (uint64_t *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = (uint64_t *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = *v8;
  *v8 = *v9;
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 40))(((unint64_t)v8 + *(unsigned __int8 *)(v11 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), ((unint64_t)v9 + *(unsigned __int8 *)(v11 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a1;
}

uint64_t sub_1004B69AC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 24) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7);
      v15 = *(_QWORD *)(a1 + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1004B6A80 + 4 * byte_100538FBF[(v9 - 1)]))();
}

void sub_1004B6AF8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = &dword_100000004;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t type metadata accessor for TTRIFilterOperationCellContentState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIFilterOperationCellContentState);
}

uint64_t sub_1004B6D04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v3 = v1 + qword_1006620F8;
  result = swift_unknownObjectWeakLoadStrong(v1 + qword_1006620F8);
  if (result)
  {
    v6 = result;
    v7 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(result, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8))(a1, ObjectType, v7);
    return swift_unknownObjectRelease(v6);
  }
  return result;
}

void sub_1004B6D74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  _QWORD *v10;
  _QWORD *v11;
  Swift::String v12;

  swift_getObjectType(v2, a2);
  v3 = type metadata accessor for TTRIInlineButtonAttachmentTextViewButton(0);
  v4 = (void *)UIView.firstDescendantView<A>(ofType:passing:)(v3, 0, 0, v3);
  if (!v4
    || (v5 = v4, v6 = objc_msgSend(v4, "accessibilityLabel"), v5, !v6))
  {
    v11 = sub_1004B4F7C();
    objc_msgSend(v11, "attributedText");
    goto LABEL_6;
  }
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v10 = sub_1004B4F7C();
  v11 = objc_msgSend(v10, "attributedText");

  if (v11)
  {
    v12._countAndFlagsBits = v7;
    v12._object = v9;
    TTRInlineButtonAttachmentTextViewDelegate.ttrAccessibilityAttributedLabelWith(_:replacementStringForButton:)((NSAttributedString)v11, v12);
    swift_bridgeObjectRelease(v9);
LABEL_6:

    return;
  }
  __break(1u);
}

void sub_1004B6E84(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;

  v3 = type metadata accessor for Optional(0, *(_QWORD *)((swift_isaMask & *v1) + 0x50));
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v8 - v5;
  v7 = sub_1004B4F7C();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  TTRIInlineButtonAttachmentTextView.selectedItem.setter(v6);

}

void sub_1004B6F28()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = swift_isaMask & *v0;
  v2 = (char *)v0 + qword_1006620F8;
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2, 0);
  v3 = qword_100662100;
  v5 = type metadata accessor for TTRIFilterOperationCellContentState.Option(0, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), v4);
  *(_QWORD *)((char *)v0 + v3) = Array.init()(v5);
  *(_QWORD *)((char *)v0 + qword_100662108) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010055F310, "Reminders/TTRIFilterOperationCellContent.swift", 46, 2, 151, 0);
  __break(1u);
}

void sub_1004B6FE0()
{
  uint64_t v0;

  sub_1004B4954(*(_QWORD **)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_1004B6FE8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004B6FF8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1004B5150(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1004B7014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100662290);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100662290);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

double sub_1004B70A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double result;
  uint64_t v5;

  v2 = sub_10002A750(&qword_100659328);
  v3 = swift_allocObject(v2, 64, 7);
  *(_QWORD *)&result = 2;
  *(_OWORD *)(v3 + 16) = xmmword_1005201E0;
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(v3 + 32) = v5;
  *(_BYTE *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = v5;
  *(_BYTE *)(v3 + 56) = 1;
  return result;
}

uint64_t sub_1004B7100()
{
  return 9;
}

uint64_t sub_1004B7108()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v0 = sub_10002A750(&qword_1006487F0);
  v1 = swift_allocObject(v0, 128, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1005201E0;
  *(_BYTE *)(v1 + 32) = 1;
  *(_BYTE *)(v1 + 72) = 0;
  v2 = sub_1004B8864();
  AnyHashable.init<A>(_:)((_QWORD *)(v1 + 80), v2, &type metadata for TTRIShowRecentlyDeletedPresenter.ActionMenuCustomItem, v2);
  *(_BYTE *)(v1 + 120) = 1;
  return v1;
}

uint64_t sub_1004B7180(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];

  v2 = v1;
  v3 = AnyHashable.base.getter(v11, a1);
  if (!swift_dynamicCast(v3, v11, &type metadata for Any[8], &type metadata for TTRIShowRecentlyDeletedPresenter.ActionMenuCustomItem, 6))return 0;
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v4);

  sub_100254C94();
  v6 = static TTRLocalizableStrings.RecentlyDeletedList.deleteAllActionText.getter();
  v8 = v7;
  v9 = swift_allocObject(&unk_10060A180, 24, 7);
  swift_weakInit(v9 + 16, v2);
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v6, v8, 0, 0, v5, 0, 0, 0, 0, 2, 0, sub_1004B87C4, v9);
}

double sub_1004B72A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _BYTE v12[24];

  v3 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v12, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v8 = Strong;
    v9 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
    v10 = (_QWORD *)swift_allocObject(&unk_10060A1A8, 40, 7);
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = v8;
    sub_1001B9C04((uint64_t)v5, (uint64_t)&unk_100662C20, (uint64_t)v10);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1004B7384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = (_QWORD *)swift_task_alloc(dword_1006622EC);
  *(_QWORD *)(v4 + 24) = v5;
  *v5 = v4;
  v5[1] = sub_1004B73D0;
  return sub_1004B7AD0();
}

uint64_t sub_1004B73D0(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 24);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (v1)
    return (*(uint64_t (**)(void))(v6 + 8))();
  *(_BYTE *)(v4 + 72) = a1 & 1;
  return swift_task_switch(sub_1004B7450, 0, 0);
}

uint64_t sub_1004B7450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  if (*(_BYTE *)(v0 + 72) != 1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v1 = OBJC_IVAR____TtC9Reminders32TTRIShowRecentlyDeletedPresenter_dataModelSource;
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 104);
  *(_QWORD *)(v0 + 40) = v1;
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 48) = static MainActor.shared.getter(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor, v3);
  return swift_task_switch(sub_1004B74F0, v4, v5);
}

uint64_t sub_1004B74F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[2];
  swift_release();
  v0[7] = *(_QWORD *)(v2 + v1);
  v0[8] = *(_QWORD *)(v2 + v1 + 8);
  return swift_task_switch(sub_1004B7544, 0, 0);
}

uint64_t sub_1004B7544(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  void *v5;

  v3 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 56), a2);
  v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(ObjectType, v3);
  sub_1001B19F0(v5);

  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_1004B75A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  NSString v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  void *v28;
  id v29;
  const void *v30;
  void *v31;
  void *Strong;
  void *v33;
  id v34;
  uint64_t v35;
  void **aBlock;
  uint64_t v37;
  void (*v38)(uint64_t, void *);
  void *v39;
  void *v40;
  uint64_t v41;

  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  if (qword_10063D840 != -1)
    swift_once(&qword_10063D840, sub_1004B7014);
  v5 = type metadata accessor for Logger(0);
  sub_100012DC4(v5, (uint64_t)qword_100662290);
  v6 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"User request to perform primary action on cell", 46, 2, v6);
  v7 = swift_bridgeObjectRelease(v6);
  static TTRLocalizableStrings.RecentlyDeletedList.recoverReminderAlertTitle.getter(v7);
  v9 = v8;
  static TTRLocalizableStrings.RecentlyDeletedList.recoverReminderAlertMessage.getter();
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v34 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v12, v13, 1);

  static TTRLocalizableStrings.Common.alertCancelButton.getter(v14);
  v16 = v15;
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  v40 = sub_1004B790C;
  v41 = 0;
  aBlock = _NSConcreteStackBlock;
  v37 = 1107296256;
  v38 = sub_1000D4884;
  v39 = &unk_10060A0F8;
  v18 = _Block_copy(&aBlock);
  swift_release();
  v19 = (void *)objc_opt_self(UIAlertAction);
  v20 = objc_msgSend(v19, "actionWithTitle:style:handler:", v17, 1, v18);
  _Block_release(v18);

  static TTRLocalizableStrings.Common.recoverButton.getter();
  v22 = v21;
  sub_1000493D8(a1, (uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = *(unsigned __int8 *)(v3 + 80);
  v24 = (v23 + 24) & ~v23;
  v25 = swift_allocObject(&unk_10060A130, v24 + v4, v23 | 7);
  v26 = v35;
  *(_QWORD *)(v25 + 16) = v35;
  sub_1000894B8((uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24);
  swift_retain();
  v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v22);
  v40 = sub_1004B8760;
  v41 = v25;
  aBlock = _NSConcreteStackBlock;
  v37 = 1107296256;
  v38 = sub_1000D4884;
  v39 = &unk_10060A148;
  v28 = _Block_copy(&aBlock);
  v29 = objc_msgSend(v19, "actionWithTitle:style:handler:", v27, 0, v28, swift_release().n128_f64[0]);
  v30 = v28;
  v31 = v34;
  _Block_release(v30);

  objc_msgSend(v31, "addAction:", v20);
  objc_msgSend(v31, "addAction:", v29);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v26 + 88) + 16);
  if (Strong)
  {
    v33 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v31, 1, 0);

    v20 = v29;
    v29 = v33;
  }

}

double sub_1004B790C()
{
  uint64_t v0;
  unint64_t v1;
  double result;

  if (qword_10063D840 != -1)
    swift_once(&qword_10063D840, sub_1004B7014);
  v0 = type metadata accessor for Logger(0);
  sub_100012DC4(v0, (uint64_t)qword_100662290);
  v1 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"User cancelled recover reminders", 32, 2, v1);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v1).n128_u64[0];
  return result;
}

uint64_t sub_1004B7990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v4 = sub_10002A750((uint64_t *)&unk_100649BE0);
  __chkstk_darwin(v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v8 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = *(unsigned __int8 *)(v8 + 80);
  v11 = (v10 + 32) & ~v10;
  v12 = swift_allocObject(v7, v11 + v9, v10 | 7);
  *(_OWORD *)(v12 + 16) = xmmword_100520250;
  sub_1000493D8(a3, v12 + v11);
  v13 = enum case for REMRDLUserOperationDetail.rdl_tapToRecover(_:);
  v14 = type metadata accessor for REMRDLUserOperationDetail(0);
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 104))(v6, v13, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v6, 0, 1, v14);
  sub_1001AB8F8(v12, 0, (uint64_t)v6);
  swift_bridgeObjectRelease(v12);
  return sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100649BE0);
}

uint64_t sub_1004B7AD0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v1[13] = v0;
  v2 = sub_10002A750(&qword_10063F008);
  v1[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for REMRemindersListDataView.CountByCompleted(0);
  v1[15] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[16] = v4;
  v1[17] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750(&qword_100662C30);
  v1[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for REMRemindersListDataView.FlatModel(0);
  v1[19] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[20] = v7;
  v1[21] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v1[22] = static MainActor.shared.getter(v8);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor, v9);
  v1[23] = v10;
  v1[24] = v11;
  return swift_task_switch(sub_1004B7BD4, v10, v11);
}

uint64_t sub_1004B7BD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t (*v46)(uint64_t, uint64_t, void *, uint64_t, uint64_t);

  if (qword_10063D840 != -1)
    swift_once(&qword_10063D840, sub_1004B7014);
  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 200) = sub_100012DC4(v5, (uint64_t)qword_100662290);
  v6 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Recently Deleted List request to Delete All", 43, 2, v6);
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(v4 + OBJC_IVAR____TtC9Reminders32TTRIShowRecentlyDeletedPresenter_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v4 + OBJC_IVAR____TtC9Reminders32TTRIShowRecentlyDeletedPresenter_dataModelSource), v8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(ObjectType, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v10 = *(_QWORD *)(v0 + 144);
    swift_release();
    v11 = (uint64_t *)&unk_100662C30;
    v12 = v10;
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 120);
    v14 = *(_QWORD *)(v0 + 128);
    v15 = *(_QWORD *)(v0 + 112);
    v16 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 32))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
    REMRemindersListDataView.FlatModel.remindersCount.getter(v16);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13) != 1)
    {
      v26 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 32))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
      v27 = REMRemindersListDataView.CountByCompleted.completed.getter(v26);
      result = REMRemindersListDataView.CountByCompleted.incomplete.getter();
      v28 = v27 + result;
      if (__OFADD__(v27, result))
      {
        __break(1u);
      }
      else
      {
        v29 = *(_QWORD *)(v0 + 104);
        v30 = static TTRLocalizableStrings.RecentlyDeletedList.deleteAllConfirmationAlertTitle.getter();
        v32 = v31;
        *(_QWORD *)(v0 + 208) = v31;
        v33 = static TTRLocalizableStrings.RecentlyDeletedList.deleteAllConfirmationAlertMessage(withCount:)(v28);
        v35 = v34;
        *(_QWORD *)(v0 + 216) = v34;
        v36 = sub_10002A750(&qword_10064A7F8);
        v37 = swift_allocObject(v36, 80, 7);
        *(_QWORD *)(v0 + 224) = v37;
        *(_OWORD *)(v37 + 16) = xmmword_1005201E0;
        v38 = static TTRLocalizableStrings.Common.alertCancelButton.getter((__n128)xmmword_1005201E0);
        *(_QWORD *)(v37 + 32) = v38;
        *(_QWORD *)(v37 + 40) = v39;
        *(_WORD *)(v37 + 48) = 1;
        *(_QWORD *)(v37 + 56) = static TTRLocalizableStrings.Common.alertDeleteButton.getter(v38);
        *(_QWORD *)(v37 + 64) = v40;
        *(_WORD *)(v37 + 72) = 258;
        *(_QWORD *)(v0 + 16) = v30;
        *(_QWORD *)(v0 + 24) = v32;
        *(_QWORD *)(v0 + 32) = v33;
        *(_QWORD *)(v0 + 40) = v35;
        *(_QWORD *)(v0 + 48) = v37;
        *(_BYTE *)(v0 + 56) = 3;
        v41 = *(_QWORD *)(v29 + 96);
        v42 = swift_getObjectType(*(_QWORD *)(v29 + 88), v40);
        v43 = *(_QWORD *)(v41 + 8);
        v44 = *(int **)(v43 + 8);
        v46 = (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t))((char *)v44 + *v44);
        v45 = (_QWORD *)swift_task_alloc(v44[1]);
        *(_QWORD *)(v0 + 232) = v45;
        *v45 = v0;
        v45[1] = sub_1004B7F48;
        return v46(v0 + 57, v0 + 16, &type metadata for Bool, v42, v43);
      }
      return result;
    }
    v17 = *(_QWORD *)(v0 + 112);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
    swift_release();
    v11 = &qword_10063F008;
    v12 = v17;
  }
  v18 = sub_1000073A0(v12, v11);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.error.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "TTRIShowRecentlyDeletedPresenter: failed to fetch reminder count for dataModelSource", v21, 2u);
    swift_slowDealloc(v21, -1, -1);
  }

  v22 = *(_QWORD *)(v0 + 136);
  v23 = *(_QWORD *)(v0 + 144);
  v24 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v23);
  swift_task_dealloc(v22);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1004B7F48()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 224);
  v3 = *(_QWORD *)(*v1 + 232);
  v6 = *(_QWORD *)(*v1 + 208);
  v5 = *(_QWORD *)(*v1 + 216);
  *(_QWORD *)(*v1 + 240) = v0;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  if (v0)
    v7 = sub_1004B8074;
  else
    v7 = sub_1004B7FD4;
  return swift_task_switch(v7, *(_QWORD *)(v2 + 184), *(_QWORD *)(v2 + 192));
}

uint64_t sub_1004B7FD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 176));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v7 = *(unsigned __int8 *)(v0 + 57);
  v9 = *(_QWORD *)(v0 + 136);
  v8 = *(_QWORD *)(v0 + 144);
  v10 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
}

uint64_t sub_1004B8074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 240);
  swift_release();
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 240);
    v26 = *(_QWORD *)(v0 + 152);
    v27 = *(_QWORD *)(v0 + 168);
    v24 = *(_QWORD *)(v0 + 136);
    v25 = *(_QWORD *)(v0 + 160);
    v22 = *(_QWORD *)(v0 + 128);
    v23 = *(_QWORD *)(v0 + 120);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v28 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_getErrorValue(v5, v0 + 88, v0 + 64);
    v8 = Error.rem_errorDescription.getter(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
    v10 = v9;
    *(_QWORD *)(v0 + 96) = sub_100027E40(v8, v9, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 104, v6 + 4, v6 + 12);
    swift_bridgeObjectRelease(v10);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "TTRIShowRecentlyDeletedPresenter: failed to present delete all alert {error: %s}", v6, 0xCu);
    swift_arrayDestroy(v7, 1, &type metadata for Any[8]);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    swift_errorRelease(v5);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v26);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 240);
    v13 = *(_QWORD *)(v0 + 160);
    v12 = *(_QWORD *)(v0 + 168);
    v14 = *(_QWORD *)(v0 + 152);
    v16 = *(_QWORD *)(v0 + 128);
    v15 = *(_QWORD *)(v0 + 136);
    v17 = *(_QWORD *)(v0 + 120);

    swift_errorRelease(v11);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  v18 = *(_QWORD *)(v0 + 136);
  v19 = *(_QWORD *)(v0 + 144);
  v20 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v19);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1004B82CC()
{
  uint64_t v0;

  return swift_unknownObjectRelease(*(_QWORD *)(v0
                                              + OBJC_IVAR____TtC9Reminders32TTRIShowRecentlyDeletedPresenter_dataModelSource));
}

uint64_t sub_1004B82DC()
{
  uint64_t v0;

  v0 = sub_10014866C();
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC9Reminders32TTRIShowRecentlyDeletedPresenter_dataModelSource));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1004B831C()
{
  return type metadata accessor for TTRIShowRecentlyDeletedPresenter(0);
}

uint64_t type metadata accessor for TTRIShowRecentlyDeletedPresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_1006622D8;
  if (!qword_1006622D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIShowRecentlyDeletedPresenter);
  return result;
}

uint64_t sub_1004B8360(uint64_t a1)
{
  void *v2;

  v2 = &unk_100539218;
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 2296);
}

uint64_t sub_1004B83A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release();
  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1004B8760(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8) + 80);
  return sub_1004B7990(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_1004B87A0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1004B87C4(uint64_t a1)
{
  uint64_t v1;

  return sub_1004B72A8(a1, v1);
}

uint64_t sub_1004B87CC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004B87F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_100662C1C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10004A08C;
  v3[2] = v2;
  v4 = (_QWORD *)swift_task_alloc(dword_1006622EC);
  v3[3] = v4;
  *v4 = v3;
  v4[1] = sub_1004B73D0;
  return sub_1004B7AD0();
}

unint64_t sub_1004B8864()
{
  unint64_t result;

  result = qword_100662C28;
  if (!qword_100662C28)
  {
    result = swift_getWitnessTable(&unk_100539270, &type metadata for TTRIShowRecentlyDeletedPresenter.ActionMenuCustomItem);
    atomic_store(result, (unint64_t *)&qword_100662C28);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TTRIShowRecentlyDeletedPresenter.ActionMenuCustomItem(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1004B88E8 + 4 * byte_1005391D7[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1004B8908 + 4 * byte_1005391DC[v4]))();
}

_BYTE *sub_1004B88E8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1004B8908(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1004B8910(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1004B8918(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1004B8920(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1004B8928(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TTRIShowRecentlyDeletedPresenter.ActionMenuCustomItem()
{
  return &type metadata for TTRIShowRecentlyDeletedPresenter.ActionMenuCustomItem;
}

unint64_t sub_1004B8948()
{
  unint64_t result;

  result = qword_100662C38;
  if (!qword_100662C38)
  {
    result = swift_getWitnessTable(&unk_100539248, &type metadata for TTRIShowRecentlyDeletedPresenter.ActionMenuCustomItem);
    atomic_store(result, (unint64_t *)&qword_100662C38);
  }
  return result;
}

uint64_t sub_1004B8994()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[2] = v0;
  v2 = type metadata accessor for UUID(0);
  v1[3] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[4] = v3;
  v1[5] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1004B89F4, v0, 0);
}

uint64_t sub_1004B89F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  Swift::String v26;
  NSString v27;
  uint64_t v28;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD **)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = v3[17];
  v6 = v3[18];
  sub_10001413C(v3 + 14, v5);
  v7 = (void *)v3[19];
  v8 = objc_msgSend(v7, "uuid");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v10 = UUID.uuidString.getter(v9);
  v12 = v11;
  v13 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v13(v1, v4);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(v10, v12, v5, v6);
  *(_QWORD *)(v0 + 48) = v14;
  swift_bridgeObjectRelease(v12);
  if (v14)
  {
    v15 = (_QWORD *)swift_task_alloc(dword_100662C74);
    *(_QWORD *)(v0 + 56) = v15;
    *v15 = v0;
    v15[1] = sub_1004B8C20;
    v16 = *(_QWORD *)(v0 + 16);
    v15[15] = v14;
    v15[16] = v16;
    return swift_task_switch(sub_1004B8D74, v16, 0);
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 40);
    v19 = *(_QWORD *)(v0 + 24);
    v20 = (void *)objc_opt_self(REMError);
    _StringGuts.grow(_:)(39);
    v21 = objc_msgSend(v7, "uuid", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0], 0xD000000000000025);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    v23 = UUID.uuidString.getter(v22);
    v25 = v24;
    v13(v18, v19);
    v26._countAndFlagsBits = v23;
    v26._object = v25;
    String.append(_:)(v26);
    swift_bridgeObjectRelease(v25);
    v27 = String._bridgeToObjectiveC()();
    objc_msgSend(v20, "internalErrorWithDebugDescription:", v27, swift_bridgeObjectRelease(0x800000010057B140).n128_f64[0]);

    swift_willThrow(v28);
    swift_task_dealloc(*(_QWORD *)(v0 + 40));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1004B8C20(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 56);
  *(_QWORD *)(*v2 + 64) = v1;
  swift_task_dealloc(v5);
  v6 = *(_QWORD *)(v4 + 16);
  if (v1)
  {
    v7 = sub_1004B8D20;
  }
  else
  {
    *(_QWORD *)(v4 + 72) = a1;
    v7 = sub_1004B8C94;
  }
  return swift_task_switch(v7, v6, 0);
}

uint64_t sub_1004B8C94()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(void **)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = sub_1004B91B0(*(_QWORD *)(v0 + 72));
  v6 = v5;

  v7 = *(_QWORD *)(v3 + 160);
  v8 = v6 & 0x101;
  *(_QWORD *)(v3 + 160) = v4;
  *(_WORD *)(v3 + 168) = v8;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v7);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v4, v8);
}

uint64_t sub_1004B8D20()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004B8D5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = v1;
  return swift_task_switch(sub_1004B8D74, v1, 0);
}

uint64_t sub_1004B8D74()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = objc_msgSend(objc_allocWithZone((Class)ICDeviceListRequest), "initWithAccount:", *(_QWORD *)(v0 + 120));
  *(_QWORD *)(v0 + 136) = v1;
  if (!v1)
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
  v2 = v0 + 16;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1004B8E44;
  v3 = swift_continuation_init(v0 + 16, 0);
  *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
  v4 = (_QWORD *)(v0 + 80);
  v4[1] = 0x40000000;
  v4[2] = sub_1004B90B0;
  v4[3] = &unk_10060A380;
  v4[4] = v3;
  objc_msgSend(v1, "fetchWithCompletionBlock:", v4);
  return swift_continuation_await(v2);
}

uint64_t sub_1004B8E44()
{
  uint64_t v0;

  return swift_task_switch(sub_1004B8E90, *(_QWORD *)(*(_QWORD *)v0 + 128), 0);
}

id sub_1004B8E90()
{
  uint64_t v0;
  id v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  unsigned __int8 v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;

  v1 = objc_msgSend(*(id *)(v0 + 136), "devices");
  if (!v1)
  {

    return (id)(*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
  }
  v2 = v1;
  v3 = sub_1004B9174();
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v20 = v4;
    else
      v20 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v5 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v4);
    if (v5)
      goto LABEL_4;
    goto LABEL_19;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
  {
LABEL_19:
    v21 = *(void **)(v0 + 136);
    swift_bridgeObjectRelease(v4);

    return (id)(*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
  }
LABEL_4:
  result = (id)sub_1003D8574(0, v5 & ~(v5 >> 63), 0);
  if (v5 < 0)
  {
    __break(1u);
  }
  else
  {
    v7 = 0;
    v22 = v0;
    while (1)
    {
      v8 = (v4 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v4)
         : *(id *)(v4 + 8 * v7 + 32);
      v9 = v8;
      result = objc_msgSend(v8, "name", v22);
      if (!result)
        break;
      v10 = result;
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
      v13 = v12;

      v14 = objc_msgSend(v9, "upgradedToSydneyRomeKincaid");
      v15 = objc_msgSend(v9, "upgradableToSydneyRomeKincaid");

      v17 = _swiftEmptyArrayStorage[2];
      v16 = _swiftEmptyArrayStorage[3];
      if (v17 >= v16 >> 1)
        sub_1003D8574(v16 > 1, v17 + 1, 1);
      ++v7;
      _swiftEmptyArrayStorage[2] = v17 + 1;
      v18 = &_swiftEmptyArrayStorage[3 * v17];
      v18[4] = v11;
      v18[5] = v13;
      *((_BYTE *)v18 + 48) = v14;
      *((_BYTE *)v18 + 49) = v15;
      if (v5 == v7)
      {
        v0 = v22;
        v19 = *(void **)(v22 + 136);
        swift_bridgeObjectRelease(v4);

        return (id)(*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1004B90B0(uint64_t a1)
{
  return swift_continuation_resume(*(_QWORD *)(a1 + 32));
}

uint64_t sub_1004B90B8()
{
  uint64_t v0;
  __n128 v1;

  sub_100027F10((_QWORD *)(v0 + 112));

  v1 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 160));
  swift_defaultActor_destroy(v0, v1);
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_1004B90EC()
{
  uint64_t v0;

  return v0;
}

id sub_1004B90F8()
{
  void **v0;
  void *v1;
  NSString v2;
  id v3;

  v1 = *v0;
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "unsafeUntilSystemReady_icloudACAccountMatchingAccountIdentifier:", v2);

  return v3;
}

uint64_t type metadata accessor for TTRListDetailDeviceInfoProvider()
{
  return objc_opt_self(_TtC9Reminders31TTRListDetailDeviceInfoProvider);
}

ValueMetadata *type metadata accessor for TTRListDetailDeviceInfoProvider.DeviceInfoCache()
{
  return &type metadata for TTRListDetailDeviceInfoProvider.DeviceInfoCache;
}

unint64_t sub_1004B9174()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100642AE8;
  if (!qword_100642AE8)
  {
    v1 = objc_opt_self(ICMigrationDeviceInfo);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100642AE8);
  }
  return result;
}

uint64_t sub_1004B91B0(uint64_t result)
{
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(result + 16);
  if (v1)
  {
    if (*(_BYTE *)(result + 48) == 1)
    {
      if (v1 == 1)
        return result;
      v2 = (_BYTE *)(result + 72);
      v3 = 1;
      do
      {
        v4 = v3 + 1;
        if (__OFADD__(v3, 1))
        {
          __break(1u);
          goto LABEL_21;
        }
        if ((*v2 & 1) == 0)
          goto LABEL_12;
        ++v3;
        v2 += 24;
      }
      while (v4 != v1);
      if ((*(_BYTE *)(result + 49) & 1) == 0)
        return result;
    }
    else
    {
LABEL_12:
      if ((*(_BYTE *)(result + 49) & 1) == 0)
        return result;
    }
    if (v1 != 1)
    {
      v5 = (_BYTE *)(result + 73);
      v6 = 1;
      while (1)
      {
        v7 = v6 + 1;
        if (__OFADD__(v6, 1))
          break;
        if (*v5 == 1)
        {
          ++v6;
          v5 += 24;
          if (v7 != v1)
            continue;
        }
        return result;
      }
LABEL_21:
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1004B9288(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for TTRListDetailDeviceInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t assignWithTake for TTRListDetailDeviceInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

ValueMetadata *type metadata accessor for TTRListDetailDeviceInfo()
{
  return &type metadata for TTRListDetailDeviceInfo;
}

uint64_t TTRListDetailCreationEditor.__allocating_init(changeItem:smartListVersionWarningInteractor:undoManager:userDefaults:)(uint64_t a1, __int128 *a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v9 = swift_allocObject(v4, 112, 7);
  v10 = a4[3];
  v11 = a4[4];
  v12 = sub_100028D48((uint64_t)a4, v10);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v16 + 16))(v15, v13);
  v17 = sub_1004BB9F8(a1, a2, a3, (uint64_t)v15, v9, v10, v11);
  sub_100027F10(a4);
  return v17;
}

uint64_t sub_1004B9444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100662D48);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100662D48);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void *TTRListDetailCreationEditor.undoManager.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

uint64_t TTRListDetailCreationEditor.filterEditingContext.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  a1[3] = *v1;
  a1[4] = &protocol witness table for TTRListDetailCreationEditor;
  *a1 = v1;
  return swift_retain(v1);
}

void TTRListDetailCreationEditor.listTypeEditingContext.getter(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  unsigned int v5;

  v3 = *v1;
  v4 = objc_msgSend(*(id *)(v1[2] + 24), "capabilities");
  v5 = objc_msgSend(v4, "supportsGroceriesList");

  if (v5)
  {
    *(_QWORD *)(a1 + 24) = v3;
    *(_QWORD *)(a1 + 32) = &protocol witness table for TTRListDetailCreationEditor;
    swift_retain(v1);
  }
  else
  {
    v1 = 0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
  }
  *(_QWORD *)a1 = v1;
}

double TTRListDetailCreationEditor.sectionsEditingContext.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  double result;

  if (qword_10063D848 != -1)
    swift_once(&qword_10063D848, sub_1004B9444);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100012DC4(v2, (uint64_t)qword_100662D48);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.fault.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "TTRListDetailCreationEditor#sectionsEditingContext : Not implemented because not expected to be called", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t TTRListDetailCreationEditor.init(changeItem:smartListVersionWarningInteractor:undoManager:userDefaults:)(uint64_t a1, __int128 *a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v9 = a4[3];
  v10 = a4[4];
  v11 = sub_100028D48((uint64_t)a4, v9);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v15 + 16))(v14, v12);
  v16 = sub_1004BB9F8(a1, a2, a3, (uint64_t)v14, v4, v9, v10);
  sub_100027F10(a4);
  return v16;
}

Swift::Void __swiftcall TTRListDetailCreationEditor.edit(name:)(Swift::String name)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  NSObject *log;
  _QWORD *v22;
  void *v23;
  _BYTE v24[24];
  _BYTE v25[24];

  v2 = v1;
  object = name._object;
  countAndFlagsBits = name._countAndFlagsBits;
  v5 = *(_QWORD **)(v1 + 16);
  swift_beginAccess(v5 + 5, v25, 1, 0);
  v7 = v5[5];
  v6 = (void *)v5[6];
  v8 = v7 == countAndFlagsBits && v6 == object;
  if (!v8 && (_stringCompareWithSmolCheck(_:_:expecting:)(v5[5], v5[6], countAndFlagsBits, object, 0) & 1) == 0)
  {
    v9 = qword_10063D848;
    swift_bridgeObjectRetain(v6);
    if (v9 != -1)
      swift_once(&qword_10063D848, sub_1004B9444);
    v10 = type metadata accessor for Logger(0);
    sub_100012DC4(v10, (uint64_t)qword_100662D48);
    v11 = swift_retain_n(v2, 2);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v14 = 138412290;
      swift_beginAccess(v5 + 4, v24, 0, 0);
      log = v12;
      v15 = (void *)v5[4];
      v23 = v15;
      v16 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, v24, v14 + 4, v14 + 12);
      *v22 = v15;
      swift_release_n(v2, 2);
      _os_log_impl((void *)&_mh_execute_header, log, v13, "Updating list name {listID: %@}", v14, 0xCu);
      v17 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v22, 1, v17);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v14, -1, -1);

    }
    else
    {

      swift_release_n(v2, 2);
    }
    v18 = v5[6];
    v5[5] = countAndFlagsBits;
    v5[6] = object;
    swift_bridgeObjectRetain(object);
    swift_bridgeObjectRelease(v18);
    if (*(_QWORD *)(v2 + 24))
    {
      v19 = swift_allocObject(&unk_10060A448, 24, 7);
      swift_weakInit(v19 + 16, v2);
      v20 = (_QWORD *)swift_allocObject(&unk_10060A470, 40, 7);
      v20[2] = v19;
      v20[3] = v7;
      v20[4] = v6;
      swift_retain();
      NSUndoManager.registerUndo(handler:)(sub_1004BBAD4, v20);
      swift_release();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease(v6);
    }
  }
}

double sub_1004B99FC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  double result;
  Swift::String v7;
  _BYTE v8[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  if (swift_weakLoadStrong(v5))
  {
    v7._countAndFlagsBits = a2;
    v7._object = a3;
    TTRListDetailCreationEditor.edit(name:)(v7);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void TTRListDetailCreationEditor.edit(color:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void **v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  double v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void **v30;
  uint64_t v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];

  v2 = v1;
  v4 = (void **)(*(_QWORD *)(v1 + 16) + 56);
  swift_beginAccess(v4, v36, 1, 0);
  v5 = *v4;
  if (!a1)
  {
    if (!v5)
      return;
    v9 = v5;
    goto LABEL_7;
  }
  if (!v5
    || (sub_100005ED8(0, &qword_100656620, REMColor_ptr),
        v6 = v5,
        v7 = a1,
        v8 = static NSObject.== infix(_:_:)(v7, v6),
        v7,
        v6,
        (v8 & 1) == 0))
  {
LABEL_7:
    if (qword_10063D848 != -1)
      swift_once(&qword_10063D848, sub_1004B9444);
    v10 = type metadata accessor for Logger(0);
    sub_100012DC4(v10, (uint64_t)qword_100662D48);
    v11 = a1;
    v12 = v5;
    v13 = v11;
    v6 = v12;
    v14 = Logger.logObject.getter(v6);
    v15 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v32 = v15;
      v33 = v2;
      v16 = swift_slowAlloc(22, -1);
      v31 = swift_slowAlloc(64, -1);
      v35 = v31;
      *(_DWORD *)v16 = 136315394;
      if (v5)
      {
        v17 = objc_msgSend(v6, "hexString");
        v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
        v20 = v19;

      }
      else
      {
        v20 = 0xE300000000000000;
        v18 = 7104878;
      }
      v30 = v4;
      v34 = sub_100027E40(v18, v20, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v16 + 4, v16 + 12);

      *(_QWORD *)&v21 = swift_bridgeObjectRelease(v20).n128_u64[0];
      *(_WORD *)(v16 + 12) = 2080;
      if (a1)
      {
        v22 = objc_msgSend(v13, "hexString", v21);
        v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
        v25 = v24;

      }
      else
      {
        v25 = 0xE300000000000000;
        v23 = 7104878;
      }
      v34 = sub_100027E40(v23, v25, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v16 + 14, v16 + 22);

      swift_bridgeObjectRelease(v25);
      _os_log_impl((void *)&_mh_execute_header, v14, v32, "Changing list color {from: %s, to: %s}", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy(v31, 2, &type metadata for Any[8]);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v16, -1, -1);

      v2 = v33;
      v4 = v30;
    }
    else
    {

    }
    v26 = *v4;
    *v4 = a1;
    v27 = v13;

    if (*(_QWORD *)(v2 + 24))
    {
      v28 = swift_allocObject(&unk_10060A448, 24, 7);
      swift_weakInit(v28 + 16, v2);
      v29 = swift_allocObject(&unk_10060A498, 32, 7);
      *(_QWORD *)(v29 + 16) = v28;
      *(_QWORD *)(v29 + 24) = v5;
      v6 = v6;
      swift_retain();
      NSUndoManager.registerUndo(handler:)(sub_1004BBAE4, v29);
      swift_release();
      swift_release();
    }
  }

}

Swift::Void __swiftcall TTRListDetailCreationEditor.edit(badgeEmblem:)(__C::REMListBadgeEmblem badgeEmblem)
{
  id v1;

  v1 = objc_msgSend(objc_allocWithZone((Class)REMListBadge), "initWithEmblem:", badgeEmblem._rawValue);
  TTRListDetailCreationEditor.edit(badge:)(v1);

}

void TTRListDetailCreationEditor.edit(badge:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void **v5;
  void *v6;
  id v7;
  id v8;
  char v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 16);
  v5 = (void **)(v4 + 64);
  swift_beginAccess(v4 + 64, v35, 1, 0);
  v6 = *(void **)(v4 + 64);
  if (v6)
  {
    if (a1)
    {
      sub_100005ED8(0, &qword_100656618, REMListBadge_ptr);
      v7 = v6;
      v8 = a1;
      v9 = static NSObject.== infix(_:_:)(v7, v8);

      if ((v9 & 1) != 0)
      {
LABEL_15:

        return;
      }
    }
    else
    {
      v10 = v6;
    }
LABEL_8:
    if (qword_10063D848 != -1)
      swift_once(&qword_10063D848, sub_1004B9444);
    v11 = type metadata accessor for Logger(0);
    sub_100012DC4(v11, (uint64_t)qword_100662D48);
    v12 = a1;
    v13 = v6;
    v14 = v12;
    v7 = v13;
    v15 = Logger.logObject.getter(v7);
    v16 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v32 = v2;
      v17 = swift_slowAlloc(22, -1);
      v31 = swift_slowAlloc(64, -1);
      v34 = v31;
      *(_DWORD *)v17 = 136315394;
      v18 = sub_10002A750(&qword_100662D60);
      v19 = Optional.descriptionOrNil.getter(v18);
      v21 = v20;
      v33 = sub_100027E40(v19, v20, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v17 + 4, v17 + 12);

      swift_bridgeObjectRelease(v21);
      *(_WORD *)(v17 + 12) = 2080;
      v33 = (uint64_t)a1;
      v22 = v18;
      v5 = (void **)(v4 + 64);
      v23 = Optional.descriptionOrNil.getter(v22);
      v25 = v24;
      v33 = sub_100027E40(v23, v24, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v17 + 14, v17 + 22);

      swift_bridgeObjectRelease(v25);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Changing list badge {from: %s, to: %s}", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy(v31, 2, &type metadata for Any[8]);
      swift_slowDealloc(v31, -1, -1);
      v26 = v17;
      v2 = v32;
      swift_slowDealloc(v26, -1, -1);

    }
    else
    {

    }
    v27 = *v5;
    *v5 = a1;
    v28 = v14;

    if (*(_QWORD *)(v2 + 24))
    {
      v29 = swift_allocObject(&unk_10060A448, 24, 7);
      swift_weakInit(v29 + 16, v2);
      v30 = swift_allocObject(&unk_10060A4C0, 32, 7);
      *(_QWORD *)(v30 + 16) = v29;
      *(_QWORD *)(v30 + 24) = v6;
      v7 = v7;
      swift_retain();
      NSUndoManager.registerUndo(handler:)(sub_1004BBB08, v30);
      swift_release();
      swift_release();
    }
    goto LABEL_15;
  }
  if (a1)
    goto LABEL_8;
}

Swift::Void __swiftcall TTRListDetailCreationEditor.edit(badgeEmoji:)(Swift::String badgeEmoji)
{
  void *object;
  id v2;
  NSString v3;
  id v4;

  object = badgeEmoji._object;
  v2 = objc_allocWithZone((Class)REMListBadge);
  swift_bridgeObjectRetain(object);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "initWithEmoji:", v3, swift_bridgeObjectRelease(object).n128_f64[0]);

  TTRListDetailCreationEditor.edit(badge:)(v4);
}

void TTRListDetailCreationEditor.edit(filter:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void **v5;
  void *v6;
  id v7;
  id v8;
  char v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 16);
  v5 = (void **)(v4 + 72);
  swift_beginAccess(v4 + 72, v35, 1, 0);
  v6 = *(void **)(v4 + 72);
  if (v6)
  {
    if (a1)
    {
      type metadata accessor for REMCustomSmartListFilterDescriptor(0);
      v7 = v6;
      v8 = a1;
      v9 = static NSObject.== infix(_:_:)(v7, v8);

      if ((v9 & 1) != 0)
      {
LABEL_15:

        return;
      }
    }
    else
    {
      v10 = v6;
    }
LABEL_8:
    if (qword_10063D848 != -1)
      swift_once(&qword_10063D848, sub_1004B9444);
    v11 = type metadata accessor for Logger(0);
    sub_100012DC4(v11, (uint64_t)qword_100662D48);
    v12 = a1;
    v13 = v6;
    v14 = v12;
    v7 = v13;
    v15 = Logger.logObject.getter(v7);
    v16 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v32 = v2;
      v17 = swift_slowAlloc(22, -1);
      v31 = swift_slowAlloc(64, -1);
      v34 = v31;
      *(_DWORD *)v17 = 136315394;
      v18 = sub_10002A750(&qword_100641B48);
      v19 = Optional.descriptionOrNil.getter(v18);
      v21 = v20;
      v33 = sub_100027E40(v19, v20, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v17 + 4, v17 + 12);

      swift_bridgeObjectRelease(v21);
      *(_WORD *)(v17 + 12) = 2080;
      v33 = (uint64_t)a1;
      v22 = v18;
      v5 = (void **)(v4 + 72);
      v23 = Optional.descriptionOrNil.getter(v22);
      v25 = v24;
      v33 = sub_100027E40(v23, v24, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v17 + 14, v17 + 22);

      swift_bridgeObjectRelease(v25);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Changing smart list filter {from: %s, to: %s}", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy(v31, 2, &type metadata for Any[8]);
      swift_slowDealloc(v31, -1, -1);
      v26 = v17;
      v2 = v32;
      swift_slowDealloc(v26, -1, -1);

    }
    else
    {

    }
    v27 = *v5;
    *v5 = a1;
    v28 = v14;

    if (*(_QWORD *)(v2 + 24))
    {
      v29 = swift_allocObject(&unk_10060A448, 24, 7);
      swift_weakInit(v29 + 16, v2);
      v30 = swift_allocObject(&unk_10060A4E8, 32, 7);
      *(_QWORD *)(v30 + 16) = v29;
      *(_QWORD *)(v30 + 24) = v6;
      v7 = v7;
      swift_retain();
      NSUndoManager.registerUndo(handler:)(sub_1004BBB2C, v30);
      swift_release();
      swift_release();
    }
    goto LABEL_15;
  }
  if (a1)
    goto LABEL_8;
}

uint64_t sub_1004BA544(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _BYTE v8[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  result = swift_weakLoadStrong(v5);
  if (result)
  {
    v7 = result;
    a3(a2);
    return swift_release(v7);
  }
  return result;
}

double TTRListDetailCreationEditor.edit(listType:)(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v4;
  double result;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  v2 = v1;
  v4 = (unsigned __int8 *)(*(_QWORD *)(v2 + 16) + 80);
  *(_QWORD *)&result = swift_beginAccess(v4, v9, 1, 0).n128_u64[0];
  v6 = *v4;
  if (v6 != a1)
  {
    *v4 = a1;
    if (*(_QWORD *)(v2 + 24))
    {
      v7 = swift_allocObject(&unk_10060A448, 24, 7);
      swift_weakInit(v7 + 16, v2);
      v8 = swift_allocObject(&unk_10060A510, 25, 7);
      *(_QWORD *)(v8 + 16) = v7;
      *(_BYTE *)(v8 + 24) = v6;
      swift_retain();
      NSUndoManager.registerUndo(handler:)(sub_1004BBB70, v8);
      swift_release();
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_1004BA680(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(result + 16);
    swift_beginAccess(v6 + 80, &v11, 1, 0);
    v7 = *(unsigned __int8 *)(v6 + 80);
    if (v7 == a2 || (*(_BYTE *)(v6 + 80) = a2, !*(_QWORD *)(v5 + 24)))
    {
      v10 = v5;
    }
    else
    {
      v8 = swift_allocObject(&unk_10060A448, 24, 7);
      swift_weakInit(v8 + 16, v5);
      v9 = swift_allocObject(&unk_10060A5D0, 25, 7);
      *(_QWORD *)(v9 + 16) = v8;
      *(_BYTE *)(v9 + 24) = v7;
      swift_retain(v8);
      NSUndoManager.registerUndo(handler:)(sub_1004BBC1C, v9);
      swift_release(v5);
      swift_release(v8);
      v10 = v9;
    }
    return swift_release(v10);
  }
  return result;
}

id TTRListDetailCreationEditor.listDetailSave(completion:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  NSString v21;
  double v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  _QWORD *v28;
  void *v29;
  void (*v30)(uint64_t);
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t ListUserOperation;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  NSString v53;
  double v54;
  id v55;
  double v56;
  BOOL v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  NSString v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __n128 v103;
  uint64_t (*v104)(char *, uint64_t, __n128);
  uint64_t v105;
  int *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  __n128 v117;
  double v118;
  id v119;
  id v120;
  void *v121;
  id v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  double v129;
  id v130;
  uint64_t v132;
  id v133;
  char *v134;
  id v135;
  id v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _BYTE v144[24];
  _QWORD aBlock[3];
  void *v146;
  void (*v147)(uint64_t);
  uint64_t v148;
  _BYTE v149[24];
  _BYTE v150[24];
  _BYTE v151[24];
  char v152[16];

  v3 = v2;
  v142 = a2;
  v141 = a1;
  v143 = *v2;
  v4 = type metadata accessor for Locale(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v132 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = type metadata accessor for REMAnalyticsEvent(0);
  v138 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v9 = (char *)&v132 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v3[2];
  v11 = *(void **)(v10 + 16);
  swift_beginAccess(v10 + 72, v152, 0, 0);
  v12 = *(void **)(v10 + 72);
  v140 = v11;
  if (v12)
  {
    v13 = v3;
    v14 = v9;
    swift_beginAccess(v10 + 32, v151, 0, 0);
    v15 = *(_QWORD *)(v10 + 24);
    v16 = *(void **)(v10 + 32);
    v17 = v11;
    v137 = v16;
    v18 = v12;
    v19 = objc_msgSend(v17, "updateAccount:", v15);
    swift_beginAccess(v10 + 40, v150, 0, 0);
    v20 = *(_QWORD *)(v10 + 48);
    swift_bridgeObjectRetain(v20);
    v21 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v22 = swift_bridgeObjectRelease(v20).n128_u64[0];
    v136 = v19;
    v23 = objc_msgSend(v17, "addCustomSmartListWithName:toAccountChangeItem:smartListObjectID:", v21, v19, 0, v22);

    v24 = objc_msgSend(v23, "customContext");
    if (v24)
    {
      v25 = v24;
      objc_msgSend(v24, "setColor:", *(_QWORD *)(v10 + 56), swift_beginAccess(v10 + 56, v149, 0, 0).n128_f64[0]);
      objc_msgSend(v25, "setBadge:", *(_QWORD *)(v10 + 64), swift_beginAccess(v10 + 64, v144, 0, 0).n128_f64[0]);
      v26 = v18;
      REMSmartListCustomContextChangeItem.filter.setter(v12);

    }
    v133 = objc_msgSend(v23, "objectID");
    v27 = v23;
    v135 = v23;
    v28 = v13;
    sub_100010634((uint64_t)(v13 + 4), (uint64_t)aBlock);
    v134 = (char *)v18;
    v29 = v146;
    v30 = v147;
    sub_10001413C(aBlock, (uint64_t)v146);
    v31 = objc_msgSend(v27, "objectID");
    v32 = v137;
    (*((void (**)(id, id, void *, void (*)(uint64_t)))v30 + 3))(v137, v31, v29, v30);

    sub_100027F10(aBlock);
    v33 = type metadata accessor for REMAnalyticsManager(0);
    static REMAnalyticsManager.shared.getter(v33);
    v34 = sub_10002A750(&qword_100662D68);
    v35 = &v14[*(int *)(v34 + 48)];
    v36 = &v14[*(int *)(v34 + 80)];
    v37 = enum case for REMRemindersCreateListUserOperation.customSmartList(_:);
    ListUserOperation = type metadata accessor for REMRemindersCreateListUserOperation(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(ListUserOperation - 8) + 104))(v14, v37, ListUserOperation);
    swift_beginAccess(v28 + 9, aBlock, 32, 0);
    v40 = v28[12];
    v39 = v28[13];
    sub_10001413C(v28 + 9, v40);
    *(_QWORD *)v35 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v39 + 8) + 8))(v40);
    *((_QWORD *)v35 + 1) = v41;
    v43 = v28[12];
    v42 = v28[13];
    sub_10001413C(v28 + 9, v43);
    (*(void (**)(uint64_t))(*(_QWORD *)(v42 + 8) + 32))(v43);
    swift_endAccess(aBlock);
    *(_QWORD *)v36 = _typeName(_:qualified:)(v143, 0);
    *((_QWORD *)v36 + 1) = v44;
    v45 = v133;
    v46 = v138;
    v47 = v139;
    (*(void (**)(char *, _QWORD, uint64_t))(v138 + 104))(v14, enum case for REMAnalyticsEvent.createListUserOperation(_:), v139);
    REMAnalyticsManager.post(event:)(v14);

    v48 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v46 + 8))(v14, v47, v48);
    goto LABEL_22;
  }
  v49 = *(_QWORD *)(v10 + 24);
  v50 = v11;
  v51 = objc_msgSend(v50, "updateAccount:", v49);
  swift_beginAccess(v10 + 40, v151, 0, 0);
  v52 = *(_QWORD *)(v10 + 48);
  swift_bridgeObjectRetain(v52);
  v53 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v54 = swift_bridgeObjectRelease(v52).n128_u64[0];
  v137 = v51;
  v55 = objc_msgSend(v50, "addListWithName:toAccountChangeItem:", v53, v51, v54);

  *(_QWORD *)&v56 = swift_beginAccess(v10 + 80, v150, 0, 0).n128_u64[0];
  v57 = *(_BYTE *)(v10 + 80) == 1;
  v136 = v55;
  if (v57)
  {
    v58 = objc_msgSend(v55, "groceryContextChangeItem", v56);
    if (v58)
    {
      v59 = v58;
      objc_msgSend(v58, "setShouldCategorizeGroceryItems:", 1);
      v60 = objc_msgSend((id)objc_opt_self(REMUserDefaults), "daemonUserDefaults");
      v61 = objc_msgSend(v60, "preferredLocalizations");

      if (v61)
      {
        v63 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v61, &type metadata for String);

        if (*(_QWORD *)(v63 + 16))
        {
          v64 = *(_QWORD *)(v63 + 40);
          swift_bridgeObjectRetain(v64);
          swift_bridgeObjectRelease(v63);
LABEL_14:
          v82 = String._bridgeToObjectiveC()();
          objc_msgSend(v59, "setGroceryLocaleID:", v82, swift_bridgeObjectRelease(v64).n128_f64[0]);

          if (qword_10063D848 != -1)
            swift_once(&qword_10063D848, sub_1004B9444);
          v135 = v59;
          v83 = type metadata accessor for Logger(0);
          v84 = sub_100012DC4(v83, (uint64_t)qword_100662D48);
          v85 = Logger.logObject.getter(v84);
          v86 = static os_log_type_t.default.getter(v85);
          if (os_log_type_enabled(v85, v86))
          {
            v87 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v87 = 0;
            _os_log_impl((void *)&_mh_execute_header, v85, v86, "TTRUserDefault hasCreatedGroceryList set to true after creating a new grocery list", v87, 2u);
            swift_slowDealloc(v87, -1, -1);
          }

          swift_beginAccess(v3 + 9, aBlock, 33, 0);
          v88 = v3[12];
          v89 = v3[13];
          sub_100028D48((uint64_t)(v3 + 9), v88);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 24))(1, v88, v89);
          swift_endAccess(aBlock);
          v134 = (char *)type metadata accessor for REMAnalyticsManager(0);
          v132 = ((uint64_t (*)(void))static REMAnalyticsManager.shared.getter)();
          v90 = sub_10002A750(&qword_100649F98);
          v91 = &v9[*(int *)(v90 + 48)];
          v92 = &v9[*(int *)(v90 + 80)];
          v93 = enum case for REMUserOperation.createGroceryList(_:);
          v94 = type metadata accessor for REMUserOperation(0);
          (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 104))(v9, v93, v94);
          swift_beginAccess(v3 + 9, aBlock, 32, 0);
          v96 = v3[12];
          v95 = v3[13];
          sub_10001413C(v3 + 9, v96);
          *(_QWORD *)v91 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v95 + 8) + 8))(v96);
          *((_QWORD *)v91 + 1) = v97;
          v99 = v3[12];
          v98 = v3[13];
          sub_10001413C(v3 + 9, v99);
          (*(void (**)(uint64_t))(*(_QWORD *)(v98 + 8) + 32))(v99);
          swift_endAccess(aBlock);
          *(_QWORD *)v92 = _typeName(_:qualified:)(v143, 0);
          *((_QWORD *)v92 + 1) = v100;
          v101 = v138;
          v133 = *(id *)(v138 + 104);
          v102 = v139;
          ((void (*)(char *, _QWORD, uint64_t))v133)(v9, enum case for REMAnalyticsEvent.userOperation(_:), v139);
          REMAnalyticsManager.post(event:)(v9);
          v103 = swift_release();
          v104 = *(uint64_t (**)(char *, uint64_t, __n128))(v101 + 8);
          v105 = v104(v9, v102, v103);
          v138 = static REMAnalyticsManager.shared.getter(v105);
          v106 = (int *)sub_10002A750(&qword_100662D68);
          v107 = &v9[v106[12]];
          v134 = &v9[v106[16]];
          v108 = &v9[v106[20]];
          v109 = enum case for REMRemindersCreateListUserOperation.groceryList(_:);
          v110 = type metadata accessor for REMRemindersCreateListUserOperation(0);
          (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 104))(v9, v109, v110);
          swift_beginAccess(v3 + 9, aBlock, 32, 0);
          v112 = v3[12];
          v111 = v3[13];
          sub_10001413C(v3 + 9, v112);
          *(_QWORD *)v107 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v111 + 8) + 8))(v112);
          *((_QWORD *)v107 + 1) = v113;
          v115 = v3[12];
          v114 = v3[13];
          sub_10001413C(v3 + 9, v115);
          (*(void (**)(uint64_t))(*(_QWORD *)(v114 + 8) + 32))(v115);
          swift_endAccess(aBlock);
          *(_QWORD *)v108 = _typeName(_:qualified:)(v143, 0);
          *((_QWORD *)v108 + 1) = v116;
          ((void (*)(char *, _QWORD, uint64_t))v133)(v9, enum case for REMAnalyticsEvent.createListUserOperation(_:), v102);
          REMAnalyticsManager.post(event:)(v9);

          v117 = swift_release();
          v104(v9, v102, v117);
          goto LABEL_19;
        }
        swift_bridgeObjectRelease(v63);
      }
      v80 = static Locale.current.getter(v62);
      Locale.identifier.getter(v80);
      v64 = v81;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      goto LABEL_14;
    }
  }
  v65 = type metadata accessor for REMAnalyticsManager(0);
  static REMAnalyticsManager.shared.getter(v65);
  v66 = sub_10002A750(&qword_100662D68);
  v67 = &v9[*(int *)(v66 + 48)];
  v68 = &v9[*(int *)(v66 + 80)];
  v69 = enum case for REMRemindersCreateListUserOperation.list(_:);
  v70 = type metadata accessor for REMRemindersCreateListUserOperation(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 104))(v9, v69, v70);
  swift_beginAccess(v3 + 9, aBlock, 32, 0);
  v72 = v3[12];
  v71 = v3[13];
  sub_10001413C(v3 + 9, v72);
  *(_QWORD *)v67 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v71 + 8) + 8))(v72);
  *((_QWORD *)v67 + 1) = v73;
  v75 = v3[12];
  v74 = v3[13];
  sub_10001413C(v3 + 9, v75);
  (*(void (**)(uint64_t))(*(_QWORD *)(v74 + 8) + 32))(v75);
  swift_endAccess(aBlock);
  *(_QWORD *)v68 = _typeName(_:qualified:)(v143, 0);
  *((_QWORD *)v68 + 1) = v76;
  v77 = v138;
  v78 = v139;
  (*(void (**)(char *, _QWORD, uint64_t))(v138 + 104))(v9, enum case for REMAnalyticsEvent.createListUserOperation(_:), v139);
  REMAnalyticsManager.post(event:)(v9);
  v79 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v77 + 8))(v9, v78, v79);
LABEL_19:
  *(_QWORD *)&v118 = swift_beginAccess(v10 + 56, v149, 0, 0).n128_u64[0];
  v119 = v136;
  objc_msgSend(v136, "setColor:", *(_QWORD *)(v10 + 56), v118);
  v120 = objc_msgSend(v119, "appearanceContext");
  if (v120)
  {
    v121 = v120;
    swift_beginAccess(v10 + 64, v144, 0, 0);
    v122 = *(id *)(v10 + 64);
    objc_msgSend(v121, "setBadge:", v122);

  }
  v45 = objc_msgSend(v119, "objectID");

LABEL_22:
  v123 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
  v124 = (void *)static OS_dispatch_queue.main.getter(v123);
  v125 = swift_allocObject(&unk_10060A538, 32, 7);
  v126 = v141;
  v127 = v142;
  *(_QWORD *)(v125 + 16) = v141;
  *(_QWORD *)(v125 + 24) = v127;
  v147 = sub_1004BBBA8;
  v148 = v125;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009944;
  v146 = &unk_10060A550;
  v128 = _Block_copy(aBlock);
  sub_100053DE4(v126, v127);
  *(_QWORD *)&v129 = swift_release().n128_u64[0];
  v130 = v140;
  objc_msgSend(v140, "saveWithQueue:completion:", v124, v128, v129);

  _Block_release(v128);
  return v45;
}

void sub_1004BB3FC(uint64_t a1, void (*a2)(void))
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  _QWORD v19[3];
  _BYTE v20[8];
  uint64_t v21;

  if (a1)
  {
    if (qword_10063D848 != -1)
      swift_once(&qword_10063D848, sub_1004B9444);
    v4 = type metadata accessor for Logger(0);
    sub_100012DC4(v4, (uint64_t)qword_100662D48);
    swift_errorRetain(a1);
    v5 = swift_errorRetain(a1);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.error.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(12, -1);
      v9 = swift_slowAlloc(32, -1);
      v21 = v9;
      *(_DWORD *)v8 = 136315138;
      swift_getErrorValue(a1, v20, v19);
      v10 = Error.localizedDescription.getter(v19[1], v19[2]);
      v12 = v11;
      v18 = sub_100027E40(v10, v11, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, v19, v8 + 4, v8 + 12);
      swift_bridgeObjectRelease(v12);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error saving list: %s", v8, 0xCu);
      swift_arrayDestroy(v9, 1, &type metadata for Any[8]);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);

      if (!a2)
        return;
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);

      if (!a2)
        return;
    }
    goto LABEL_12;
  }
  if (qword_10063D848 != -1)
    swift_once(&qword_10063D848, sub_1004B9444);
  v13 = type metadata accessor for Logger(0);
  v14 = sub_100012DC4(v13, (uint64_t)qword_100662D48);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "List saved!", v17, 2u);
    swift_slowDealloc(v17, -1, -1);
  }

  if (a2)
LABEL_12:
    a2();
}

uint64_t TTRListDetailCreationEditor.deinit()
{
  uint64_t v0;

  swift_release();

  sub_100027F10((_QWORD *)(v0 + 32));
  sub_100027F10((_QWORD *)(v0 + 72));
  return v0;
}

uint64_t TTRListDetailCreationEditor.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();

  sub_100027F10((_QWORD *)(v0 + 32));
  sub_100027F10((_QWORD *)(v0 + 72));
  return swift_deallocClassInstance(v0, 112, 7);
}

uint64_t sub_1004BB6F8()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(*(_QWORD *)v0 + 16));
}

void *sub_1004BB704()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(*(_QWORD *)v0 + 24);
  v2 = v1;
  return v1;
}

uint64_t sub_1004BB72C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  *a1 = v2;
  return swift_retain(v2);
}

uint64_t sub_1004BB73C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  a2[3] = a1;
  a2[4] = &protocol witness table for TTRListDetailCreationEditor;
  *a2 = v3;
  return swift_retain(v3);
}

void sub_1004BB758(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  id v6;
  unsigned int v7;

  v5 = *v2;
  v6 = objc_msgSend(*(id *)(*(_QWORD *)(v5 + 16) + 24), "capabilities");
  v7 = objc_msgSend(v6, "supportsGroceriesList");

  if (v7)
  {
    *(_QWORD *)(a2 + 24) = a1;
    *(_QWORD *)(a2 + 32) = &protocol witness table for TTRListDetailCreationEditor;
    swift_retain(v5);
  }
  else
  {
    v5 = 0;
    *(_OWORD *)(a2 + 24) = 0u;
    *(_OWORD *)(a2 + 8) = 0u;
  }
  *(_QWORD *)a2 = v5;
}

void sub_1004BB7F0(uint64_t a1, uint64_t a2)
{
  TTRListDetailCreationEditor.edit(name:)(*(Swift::String *)&a1);
}

void sub_1004BB810(void *a1)
{
  TTRListDetailCreationEditor.edit(color:)(a1);
}

void sub_1004BB830(uint64_t a1)
{
  id v1;

  v1 = objc_msgSend(objc_allocWithZone((Class)REMListBadge), "initWithEmblem:", a1);
  TTRListDetailCreationEditor.edit(badge:)(v1);

}

void sub_1004BB880(uint64_t a1, uint64_t a2)
{
  id v3;
  NSString v4;
  id v5;

  v3 = objc_allocWithZone((Class)REMListBadge);
  swift_bridgeObjectRetain(a2);
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v3, "initWithEmoji:", v4, swift_bridgeObjectRelease(a2).n128_f64[0]);

  TTRListDetailCreationEditor.edit(badge:)(v5);
}

id sub_1004BB90C(uint64_t a1, uint64_t a2)
{
  return TTRListDetailCreationEditor.listDetailSave(completion:)(a1, a2);
}

void sub_1004BB92C(void *a1)
{
  TTRListDetailCreationEditor.edit(filter:)(a1);
}

double sub_1004BB94C(unsigned __int8 a1)
{
  return TTRListDetailCreationEditor.edit(listType:)(a1);
}

uint64_t sub_1004BB96C()
{
  return TTRUserDefaults.hasCreatedGroceryList.getter() & 1;
}

uint64_t sub_1004BB990()
{
  return TTRUserDefaults.hasCreatedGroceryList.setter();
}

void (*sub_1004BB9B0(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = TTRUserDefaults.hasCreatedGroceryList.modify();
  return sub_1002AA338;
}

uint64_t sub_1004BB9F8(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v16 = a6;
  v17 = a7;
  v13 = sub_100028D70(&v15);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(v13, a4, a6);
  *(_QWORD *)(a5 + 16) = a1;
  sub_10002E37C(a2, a5 + 32);
  *(_QWORD *)(a5 + 24) = a3;
  sub_10002E37C(&v15, a5 + 72);
  return a5;
}

uint64_t sub_1004BBA84()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004BBAA8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_1004BBAD4()
{
  uint64_t v0;

  return sub_1004B99FC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1004BBAE4()
{
  uint64_t v0;

  return sub_1004BA544(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (void (*)(uint64_t))TTRListDetailCreationEditor.edit(color:));
}

uint64_t sub_1004BBB08()
{
  uint64_t v0;

  return sub_1004BA544(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (void (*)(uint64_t))TTRListDetailCreationEditor.edit(badge:));
}

uint64_t sub_1004BBB2C()
{
  uint64_t v0;

  return sub_1004BA544(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (void (*)(uint64_t))TTRListDetailCreationEditor.edit(filter:));
}

uint64_t sub_1004BBB4C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1004BBB70()
{
  uint64_t v0;

  return sub_1004BA680(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1004BBB7C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1004BBBA8(uint64_t a1)
{
  uint64_t v1;

  sub_1004BB3FC(a1, *(void (**)(void))(v1 + 16));
}

unint64_t sub_1004BBBB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100662D90;
  if (!qword_100662D90)
  {
    v1 = type metadata accessor for TTRListDetailCreationChangeItem();
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRListDetailCreationChangeItem, v1);
    atomic_store(result, (unint64_t *)&qword_100662D90);
  }
  return result;
}

uint64_t type metadata accessor for TTRListDetailCreationEditor()
{
  return objc_opt_self(_TtC9Reminders27TTRListDetailCreationEditor);
}

uint64_t sub_1004BBC24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100662EB0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100662EB0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_1004BBCB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_class *ObjectType;
  char *v8;
  void *v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  objc_super v19;

  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  v8 = &v3[OBJC_IVAR____TtC9Reminders29TTRIReminderPrintPageRenderer_pageRange];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v9 = (void *)objc_opt_self(UITraitCollection);
  v10 = v3;
  v11 = objc_msgSend(v9, "traitCollectionWithUserInterfaceStyle:", 1);
  v12 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v13 = objc_msgSend(v12, "resolvedColorWithTraitCollection:", v11);

  sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v14 = static UIFont.roundedSystemFont(ofSize:weight:)(8.0, UIFontWeightRegular);
  v15 = type metadata accessor for TTRRemindersPrintingPageRenderingUtilities(0);
  swift_allocObject(v15, 66, 7);
  *(_QWORD *)&v10[OBJC_IVAR____TtC9Reminders29TTRIReminderPrintPageRenderer_renderingUtils] = TTRRemindersPrintingPageRenderingUtilities.init(footerText:footerFont:footerTextColor:isFlipped:isRightToLeft:)(a1, a2, v14, v13, 1, a3);
  v16 = v13;

  v19.receiver = v10;
  v19.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v19, "init");

  return v17;
}

void sub_1004BBE70(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_class *ObjectType;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  char **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  id v29;
  __n128 v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  __n128 v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  double Height;
  double v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  objc_super v48;
  CGRect v49;
  CGRect v50;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  if (qword_10063D850 != -1)
    swift_once(&qword_10063D850, sub_1004BBC24);
  v4 = type metadata accessor for Logger(0);
  sub_100012DC4(v4, (uint64_t)qword_100662EB0);
  v5 = v2;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  v8 = &selRef_sourceView;
  if (os_log_type_enabled(v6, v7))
  {
    v9 = swift_slowAlloc(22, -1);
    v10 = swift_slowAlloc(64, -1);
    v47 = v10;
    *(_DWORD *)v9 = 136315394;
    objc_msgSend(v5, "paperRect");
    v43 = v11;
    v44 = v12;
    v45 = v13;
    v46 = v14;
    type metadata accessor for CGRect(0);
    v16 = v15;
    v17 = String.init<A>(describing:)(&v43, v15);
    v19 = v18;
    v43 = sub_100027E40(v17, v18, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v9 + 4, v9 + 12);

    *(_QWORD *)&v20 = swift_bridgeObjectRelease(v19).n128_u64[0];
    *(_WORD *)(v9 + 12) = 2080;
    objc_msgSend(v5, "printableRect", v20);
    v43 = v21;
    v44 = v22;
    v45 = v23;
    v46 = v24;
    v25 = String.init<A>(describing:)(&v43, v16);
    v27 = v26;
    v43 = sub_100027E40(v25, v26, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v9 + 14, v9 + 22);

    v28 = v27;
    v8 = &selRef_sourceView;
    swift_bridgeObjectRelease(v28);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "TTRIReminderPrintPageRenderer: computing number of pages {paperRect: %s, printableRect: %s}", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v10, 2, &type metadata for Any[8]);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

  }
  v29 = objc_msgSend(v5, "printFormatters");
  if (!v29)
    goto LABEL_19;
  v31 = v29;
  v32 = sub_100005ED8(0, &qword_100662F00, UIPrintFormatter_ptr);
  v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v31, v32);

  if (!((unint64_t)v33 >> 62))
  {
    if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_9;
    goto LABEL_18;
  }
  if (v33 < 0)
    v38 = v33;
  else
    v38 = v33 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v33);
  v39 = _CocoaArrayWrapper.endIndex.getter(v38);
  swift_bridgeObjectRelease(v33);
  if (!v39)
  {
LABEL_18:
    v30 = swift_bridgeObjectRelease(v33);
LABEL_19:
    v35 = 0;
    v37 = *(double *)TTRRemindersPrintingPageRenderingUtilities.preferredMinMargin.unsafeMutableAddressor(v30);
LABEL_20:
    objc_msgSend(v5, v8[137]);
    Height = CGRectGetHeight(v49);
    objc_msgSend(v5, "printableRect");
    v41 = Height - CGRectGetMaxY(v50);
    type metadata accessor for TTRRemindersPrintingPageRenderingUtilities(0);
    v42 = static TTRRemindersPrintingPageRenderingUtilities.extraMargin(neededFor:toReach:)(v41, v37);
    objc_msgSend(v5, "setFooterHeight:", v42 + TTRRemindersPrintingPageRenderingUtilities.footerHeight.getter());
    v48.receiver = v5;
    v48.super_class = ObjectType;
    objc_msgSendSuper2(&v48, "numberOfPages");

    return;
  }
LABEL_9:
  if ((v33 & 0xC000000000000001) != 0)
  {
    v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v33);
LABEL_12:
    v35 = v34;
    v36 = swift_bridgeObjectRelease(v33);
    v37 = *(double *)TTRRemindersPrintingPageRenderingUtilities.preferredMinMargin.unsafeMutableAddressor(v36);
    if (v35)
      objc_msgSend(v35, "setPerPageContentInsets:", v37, v37, v37, v37);
    goto LABEL_20;
  }
  if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v34 = *(id *)(v33 + 32);
    goto LABEL_12;
  }
  __break(1u);
}

void sub_1004BC330(uint64_t a1, __n128 a2, double a3, double a4, double a5)
{
  unsigned __int8 *v5;
  double v9;
  double v11;
  double MinX;
  double v13;
  double Width;
  CGFloat MaxX;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;

  v9 = a2.n128_f64[0];
  v11 = *(double *)TTRRemindersPrintingPageRenderingUtilities.preferredMinMargin.unsafeMutableAddressor(a2);
  type metadata accessor for TTRRemindersPrintingPageRenderingUtilities(0);
  objc_msgSend(v5, "printableRect");
  MinX = CGRectGetMinX(v23);
  v13 = static TTRRemindersPrintingPageRenderingUtilities.extraMargin(neededFor:toReach:)(MinX, v11);
  objc_msgSend(v5, "paperRect");
  Width = CGRectGetWidth(v24);
  objc_msgSend(v5, "printableRect");
  MaxX = CGRectGetMaxX(v25);
  static TTRRemindersPrintingPageRenderingUtilities.extraMargin(neededFor:toReach:)(Width - MaxX, v11);
  v16 = a1 + 1;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }
  v17 = v5[OBJC_IVAR____TtC9Reminders29TTRIReminderPrintPageRenderer_pageRange + 16];
  v18 = *(_QWORD *)&v5[OBJC_IVAR____TtC9Reminders29TTRIReminderPrintPageRenderer_pageRange];
  if (v5[OBJC_IVAR____TtC9Reminders29TTRIReminderPrintPageRenderer_pageRange + 16])
    v18 = 0;
  v19 = v16 - v18;
  if (__OFSUB__(v16, v18))
    goto LABEL_10;
  v20 = *(_QWORD *)&v5[OBJC_IVAR____TtC9Reminders29TTRIReminderPrintPageRenderer_pageRange + 8];
  v21.n128_f64[0] = sub_100038048(v9, a3, a4, a5, 0.0, v13);
  if (v17)
    v22 = 1;
  else
    v22 = v20;
  TTRRemindersPrintingPageRenderingUtilities.drawFooter(pageNumber:pageCount:in:)(v19, v22, v21);
}

uint64_t type metadata accessor for TTRIReminderPrintPageRenderer()
{
  return objc_opt_self(_TtC9Reminders29TTRIReminderPrintPageRenderer);
}

_UNKNOWN **sub_1004BC53C()
{
  return &off_1005EA2D8;
}

uint64_t sub_1004BC54C()
{
  uint64_t v0;

  v0 = sub_10014866C();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1004BC56C()
{
  return type metadata accessor for TTRIShowCompletedPresenter(0);
}

uint64_t type metadata accessor for TTRIShowCompletedPresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_100662F30;
  if (!qword_100662F30)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIShowCompletedPresenter);
  return result;
}

uint64_t sub_1004BC5B0(uint64_t a1)
{
  _BYTE v2[8];

  return swift_updateClassMetadata2(a1, 256, 0, v2, a1 + 2296);
}

void sub_1004BC5E4(void *a1, uint64_t a2)
{
  sub_100014160(a1, a2, (uint64_t)&unk_10060A640, (uint64_t)sub_10002D4A4);
}

void sub_1004BC614(void *a1, uint64_t a2)
{
  sub_100014160(a1, a2, (uint64_t)&unk_10060A780, (uint64_t)sub_1004C4800);
}

void sub_1004BC644(void *a1, uint64_t a2)
{
  sub_100014160(a1, a2, (uint64_t)&unk_10060A910, (uint64_t)sub_1004C4954);
}

void sub_1004BC674(void *a1, uint64_t a2)
{
  sub_100014160(a1, a2, (uint64_t)&unk_10060AAA0, (uint64_t)sub_1004C4A7C);
}

void sub_1004BC6A4(void *a1, uint64_t a2)
{
  sub_100014160(a1, a2, (uint64_t)&unk_10060ABE0, (uint64_t)sub_1004C4BA0);
}

void sub_1004BC6D4(void *a1, uint64_t a2)
{
  sub_100014160(a1, a2, (uint64_t)&unk_10060AD20, (uint64_t)sub_1004C4CC0);
}

void sub_1004BC704(void *a1, uint64_t a2)
{
  sub_100014160(a1, a2, (uint64_t)&unk_10060AE60, (uint64_t)sub_1004C4DD8);
}

void sub_1004BC734(void *a1, uint64_t a2)
{
  sub_100014160(a1, a2, (uint64_t)&unk_10060AFA0, (uint64_t)sub_1004C4F6C);
}

void sub_1004BC764(void *a1, uint64_t a2)
{
  sub_100014160(a1, a2, (uint64_t)&unk_10060B108, (uint64_t)sub_1004C50C8);
}

void sub_1004BC794(void *a1, uint64_t a2)
{
  sub_100014160(a1, a2, (uint64_t)&unk_10060B248, (uint64_t)sub_1004C51E4);
}

void sub_1004BC7C4(void *a1, uint64_t a2)
{
  sub_100014160(a1, a2, (uint64_t)&unk_10060B3B0, (uint64_t)sub_1004C533C);
}

void sub_1004BC7F4(void *a1, uint64_t a2)
{
  sub_100014160(a1, a2, (uint64_t)&unk_10060B518, (uint64_t)sub_1004C57F0);
}

void sub_1004BC824(void *a1, uint64_t a2)
{
  sub_100014160(a1, a2, (uint64_t)&unk_10060B658, (uint64_t)sub_1004C5908);
}

void sub_1004BC854(void *a1, uint64_t a2)
{
  sub_100014160(a1, a2, (uint64_t)&unk_10060B810, (uint64_t)sub_1004C5A48);
}

void sub_1004BC884(void *a1, uint64_t a2)
{
  sub_100014160(a1, a2, (uint64_t)&unk_10060B900, (uint64_t)sub_1004C5AD4);
}

void sub_1004BC8B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  _QWORD *v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;

  v10 = (_QWORD *)swift_allocObject(&unk_10060A848, 40, 7);
  v10[2] = a4;
  v10[3] = a5;
  v10[4] = a6;
  swift_retain();
  v11 = a6;
  v12 = swift_retain();
  TTRModuleState.readyPromise.getter(v12);
  swift_release();
  v13 = (_QWORD *)swift_allocObject(&unk_10060A870, 40, 7);
  v13[2] = a1;
  v13[3] = sub_1004C48DC;
  v13[4] = v10;
  v14 = swift_allocObject(&unk_10060A898, 32, 7);
  *(_QWORD *)(v14 + 16) = sub_1004C491C;
  *(_QWORD *)(v14 + 24) = v13;
  swift_unknownObjectRetain(a1);
  v15 = swift_retain();
  v16 = (void *)zalgo.getter(v15);
  v17 = sub_10002A750((uint64_t *)&unk_100649CB0);
  dispatch thunk of Promise.then<A>(on:closure:)(v16, sub_1004C4928, v14, v17);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

}

void sub_1004BC9F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  _QWORD *v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;

  v10 = (_QWORD *)swift_allocObject(&unk_10060A9D8, 40, 7);
  v10[2] = a4;
  v10[3] = a5;
  v10[4] = a6;
  swift_retain();
  v11 = a6;
  v12 = swift_retain();
  TTRModuleState.readyPromise.getter(v12);
  swift_release();
  v13 = (_QWORD *)swift_allocObject(&unk_10060AA00, 40, 7);
  v13[2] = a1;
  v13[3] = sub_1004C4A28;
  v13[4] = v10;
  v14 = swift_allocObject(&unk_10060AA28, 32, 7);
  *(_QWORD *)(v14 + 16) = sub_1004C5C9C;
  *(_QWORD *)(v14 + 24) = v13;
  swift_unknownObjectRetain(a1);
  v15 = swift_retain();
  v16 = (void *)zalgo.getter(v15);
  v17 = sub_10002A750((uint64_t *)&unk_100649CB0);
  dispatch thunk of Promise.then<A>(on:closure:)(v16, sub_1004C5C44, v14, v17);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

}

void sub_1004BCB2C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  objc_class *ObjCClassFromMetadata;
  NSString *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  NSString v26;
  uint64_t v27;
  void *v28;
  id v29;
  _QWORD v30[6];

  if (qword_10063D858 != -1)
    swift_once(&qword_10063D858, sub_1000091DC);
  v15 = type metadata accessor for Logger(0);
  v16 = sub_100012DC4(v15, (uint64_t)qword_100663850);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "SCROLLVIEW TEST START", v19, 2u);
    swift_slowDealloc(v19, -1, -1);
  }

  v20 = a5(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v20);
  v22 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v24 = v23;

  v25 = objc_msgSend(objc_allocWithZone((Class)UIScrollTestParameters), "init");
  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v25, "setTestName:", v26);

  objc_msgSend(v25, "setDelta:", 18.0);
  objc_msgSend(v25, "setIterations:", 1);
  swift_bridgeObjectRelease(v24);
  v27 = swift_allocObject(a6, 32, 7);
  *(_QWORD *)(v27 + 16) = a2;
  *(_QWORD *)(v27 + 24) = a3;
  v30[4] = a7;
  v30[5] = v27;
  v30[0] = _NSConcreteStackBlock;
  v30[1] = 1107296256;
  v30[2] = sub_1004BD1F0;
  v30[3] = a8;
  v28 = _Block_copy(v30);
  v29 = v25;
  swift_retain();
  objc_msgSend(a1, "_performScrollTestWithParameters:completionBlock:", v29, v28, swift_release().n128_f64[0]);

  _Block_release(v28);
}

void sub_1004BCD60(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  objc_class *ObjCClassFromMetadata;
  NSString *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  NSString v26;
  double v27;
  double v28;
  uint64_t v29;
  id v30;
  id v31;
  NSString v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  _QWORD v37[6];

  if (qword_10063D858 != -1)
    swift_once(&qword_10063D858, sub_1000091DC);
  v15 = type metadata accessor for Logger(0);
  v16 = sub_100012DC4(v15, (uint64_t)qword_100663850);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "SCROLLVIEW TEST START", v19, 2u);
    swift_slowDealloc(v19, -1, -1);
  }

  v20 = a5(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v20);
  v22 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v24 = v23;

  v25 = objc_msgSend(objc_allocWithZone((Class)UIScrollTestParameters), "init");
  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v25, "setTestName:", v26);

  objc_msgSend(v25, "setDelta:", 18.0);
  objc_msgSend(v25, "setIterations:", 1);
  objc_msgSend(a1, "contentSize");
  v28 = v27 * 0.25;
  v29 = swift_allocObject(a6, 32, 7);
  *(_QWORD *)(v29 + 16) = a2;
  *(_QWORD *)(v29 + 24) = a3;
  v30 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
  v31 = a1;
  swift_retain();
  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v24);
  v37[4] = a7;
  v37[5] = v29;
  v37[0] = _NSConcreteStackBlock;
  v37[1] = 1107296256;
  v37[2] = sub_100006378;
  v37[3] = a8;
  v33 = _Block_copy(v37);
  v34 = objc_msgSend(v30, "initWithTestName:scrollView:completionHandler:", v32, v31, v33, swift_release().n128_f64[0]);

  _Block_release(v33);
  objc_msgSend(v34, "setScrollingContentLength:", v28);
  v35 = (void *)objc_opt_self(RPTTestRunner);
  v36 = v34;
  objc_msgSend(v35, "runTestWithParameters:", v36);

}

uint64_t sub_1004BD028(uint64_t (*a1)(void))
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  if (qword_10063D858 != -1)
    swift_once(&qword_10063D858, sub_1000091DC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100012DC4(v2, (uint64_t)qword_100663850);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "SCROLLVIEW TEST END", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  return a1();
}

uint64_t sub_1004BD10C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  if (qword_10063D858 != -1)
    swift_once(&qword_10063D858, sub_1000091DC);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100012DC4(v3, (uint64_t)qword_100663850);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "SCROLLVIEW TEST END", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  return a2();
}

uint64_t sub_1004BD1F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  v3 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  if (a2)
    v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a2, &type metadata for AnyHashable, &type metadata for Any[8], &protocol witness table for AnyHashable);
  else
    v4 = 0;
  swift_retain(v2);
  v3(v4);
  swift_release(v2);
  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_1004BD268(uint64_t a1, void *a2, uint64_t (*a3)(__n128), uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v8;
  objc_class *ObjCClassFromMetadata;
  NSString *v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  NSString *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __n128 v18;

  v8 = a5(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v8);
  v10 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v12 = v11;

  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(a2, "startedTest:", v13, swift_bridgeObjectRelease(v12).n128_f64[0]);

  v14 = NSStringFromClass(ObjCClassFromMetadata);
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  sub_1004BD34C(v15, v17, a1);
  v18 = swift_bridgeObjectRelease(v17);
  return a3(v18);
}

void sub_1004BD34C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  void *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;
  Swift::String v31;
  void *object;
  Swift::String v33;
  Swift::String v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSString v46;
  void *v47;
  NSString v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[3];
  char v58[8];
  __int128 v59;
  __int128 v60;
  id v61;
  void *v62;

  v4 = v3;
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)_convertErrorToNSError(_:)(a3);
  v13 = objc_msgSend(v12, "userInfo");
  v14 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v13, &type metadata for String, &type metadata for Any[8], &protocol witness table for String);

  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSDebugDescriptionErrorKey);
  v17 = v16;
  if (!*(_QWORD *)(v14 + 16) || (v18 = sub_100005CF4(v15, v16), (v19 & 1) == 0))
  {
    v59 = 0u;
    v60 = 0u;
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v14);
    goto LABEL_7;
  }
  sub_100028CFC(*(_QWORD *)(v14 + 56) + 32 * v18, (uint64_t)&v59);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v14);
  if (!*((_QWORD *)&v60 + 1))
  {
LABEL_7:
    sub_1000073A0((uint64_t)&v59, &qword_100640E50);
    goto LABEL_8;
  }
  if ((swift_dynamicCast(&v61, &v59, &type metadata for Any[8], &type metadata for String, 6) & 1) != 0)
  {
    v20 = v62;
    v54 = v8;
    v55 = (uint64_t)v61;
    v21 = objc_msgSend(v12, "domain");
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v23 = a2;
    v24 = v11;
    v25 = v9;
    v26 = a1;
    v27 = v12;
    v29 = v28;

    *(_QWORD *)&v59 = v22;
    *((_QWORD *)&v59 + 1) = v29;
    v12 = v27;
    a1 = v26;
    v9 = v25;
    v11 = v24;
    a2 = v23;
    v30._countAndFlagsBits = 91;
    v30._object = (void *)0xE100000000000000;
    String.append(_:)(v30);
    v61 = objc_msgSend(v12, "code");
    v31._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v31._object;
    String.append(_:)(v31);
    swift_bridgeObjectRelease(object);
    v33._countAndFlagsBits = 539828317;
    v33._object = (void *)0xE400000000000000;
    String.append(_:)(v33);
    v8 = v54;
    v34._countAndFlagsBits = v55;
    v34._object = v20;
    String.append(_:)(v34);
    swift_bridgeObjectRelease(v20);
    v36 = (void *)*((_QWORD *)&v59 + 1);
    v35 = v59;
    goto LABEL_9;
  }
LABEL_8:
  swift_getErrorValue(a3, v58, v57);
  v35 = Error.localizedDescription.getter(v57[1], v57[2]);
LABEL_9:
  v61 = (id)v35;
  v62 = v36;
  if (qword_10063D858 != -1)
    swift_once(&qword_10063D858, sub_1000091DC);
  v37 = sub_100012DC4(v8, (uint64_t)qword_100663850);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v37, v8);
  v38 = v11;
  v39 = (unint64_t)v62;
  v55 = (uint64_t)v61;
  swift_bridgeObjectRetain_n(a2, 2);
  v40 = swift_bridgeObjectRetain_n(v39, 2);
  v41 = Logger.logObject.getter(v40);
  v42 = static os_log_type_t.error.getter(v41);
  if (!os_log_type_enabled(v41, v42))
  {

    swift_bridgeObjectRelease_n(v39, 2);
    swift_bridgeObjectRelease_n(a2, 2);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v38, v8);
    if (!a2)
    {
      v46 = 0;
      goto LABEL_16;
    }
LABEL_15:
    v46 = String._bridgeToObjectiveC()();
LABEL_16:
    swift_beginAccess(&v61, &v59, 0, 0);
    v47 = v62;
    v48 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "failedTest:withFailure:", v46, v48, swift_bridgeObjectRelease(v47).n128_f64[0]);

    return;
  }
  v50 = v38;
  v51 = v9;
  v53 = v4;
  v54 = v8;
  v52 = v12;
  v43 = swift_slowAlloc(22, -1);
  v44 = swift_slowAlloc(64, -1);
  *(_QWORD *)&v59 = v44;
  *(_DWORD *)v43 = 136446466;
  if (a2)
  {
    v45 = v44;
    swift_bridgeObjectRetain(a2);
    v56 = sub_100027E40(a1, a2, (uint64_t *)&v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, v57, v43 + 4, v43 + 12);
    swift_bridgeObjectRelease_n(a2, 3);
    *(_WORD *)(v43 + 12) = 2082;
    swift_bridgeObjectRetain(v39);
    v56 = sub_100027E40(v55, v39, (uint64_t *)&v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, v57, v43 + 14, v43 + 22);
    swift_bridgeObjectRelease_n(v39, 3);
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "Test failed {name: %{public}s, error: %{public}s}", (uint8_t *)v43, 0x16u);
    swift_arrayDestroy(v45, 2, &type metadata for Any[8]);
    swift_slowDealloc(v45, -1, -1);
    swift_slowDealloc(v43, -1, -1);

    (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v54);
    v12 = v52;
    v4 = v53;
    goto LABEL_15;
  }
  swift_bridgeObjectRelease(v39);
  __break(1u);
}

uint64_t sub_1004BD840@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(_QWORD)@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v15;
  objc_class *ObjCClassFromMetadata;
  NSString *v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  uint64_t v21;
  void *v22;
  _QWORD aBlock[6];

  v15 = a5(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v15);
  v17 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v19 = v18;

  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  v21 = swift_allocObject(a6, 32, 7);
  *(_QWORD *)(v21 + 16) = a3;
  *(_QWORD *)(v21 + 24) = a4;
  aBlock[4] = a7;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100006378;
  aBlock[3] = a8;
  v22 = _Block_copy(aBlock);
  swift_retain();
  objc_msgSend(a2, "finishedTest:waitForCommit:extraResults:withTeardownBlock:", v20, 0, 0, v22, swift_release().n128_f64[0]);
  _Block_release(v22);

  return sub_100010634(a1, a9);
}

double sub_1004BD970(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v4;
  objc_class *ObjCClassFromMetadata;
  NSString *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  double result;

  v4 = a3(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v4);
  v6 = NSStringFromClass(ObjCClassFromMetadata);
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  sub_1004BD34C(v7, v9, a1);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
  return result;
}

void sub_1004BD9E0(_QWORD *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t Reminder;
  objc_class *ObjCClassFromMetadata;
  id v10;
  NSString *v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSString *v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  unint64_t v22;
  Class isa;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  uint64_t v27;
  void *v28;
  _QWORD v29[6];

  Reminder = type metadata accessor for PPTTask_CreateReminder();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(Reminder);
  v10 = a2;
  swift_retain();
  v11 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v13 = v12;

  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "startedTest:", v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

  v15 = a1[3];
  v16 = a1[4];
  sub_10001413C(a1, v15);
  (*(void (**)(uint64_t, uint64_t))(v16 + 32))(v15, v16);
  v17 = UIKeyboardPrivateDidShowNotification;
  v18 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v20 = v19;

  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  v22 = sub_100351178((uint64_t)_swiftEmptyArrayStorage);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v22);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v25 = v24;
  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v25);
  v27 = swift_allocObject(&unk_10060B8B0, 32, 7);
  *(_QWORD *)(v27 + 16) = a3;
  *(_QWORD *)(v27 + 24) = a4;
  v29[4] = sub_10002D4F8;
  v29[5] = v27;
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 1107296256;
  v29[2] = sub_100006378;
  v29[3] = &unk_10060B8C8;
  v28 = _Block_copy(v29);
  swift_retain();
  objc_msgSend(v10, "finishedTest:extraResults:waitForNotification:withTeardownBlock:", v21, isa, v26, v28, swift_release().n128_f64[0]);
  _Block_release(v28);

  swift_release();
}

void sub_1004BDC2C(_QWORD *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  objc_class *ObjCClassFromMetadata;
  id v12;
  NSString *v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  Class isa;
  id v24;
  id v25;
  NSString *v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  unint64_t v30;
  Class v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  double v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  _QWORD aBlock[6];
  uint64_t v45;

  v42 = a3;
  v7 = sub_10002A750(&qword_100650718);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PPTTask_ModifyReminder();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v10);
  v12 = a2;
  v45 = a4;
  swift_retain();
  v13 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v15 = v14;

  v16 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v17 = swift_bridgeObjectRelease(v15).n128_u64[0];
  v43 = v12;
  objc_msgSend(v12, "startedTest:", v16, v17);

  v18 = a1[3];
  v19 = a1[4];
  sub_10001413C(a1, v18);
  UUID.init(uuidString:)(0xD000000000000024, 0x80000001005784B0);
  v20 = type metadata accessor for UUID(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v9, 1, v20) == 1)
  {
    swift_release();
    v40 = v43;

    __break(1u);
  }
  else
  {
    v22 = (void *)objc_opt_self(REMReminder);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
    v24 = objc_msgSend(v22, "objectIDWithUUID:", isa);

    (*(void (**)(id, uint64_t, uint64_t))(v19 + 80))(v24, v18, v19);
    swift_release();

    v25 = UIKeyboardPrivateDidShowNotification;
    v26 = NSStringFromClass(ObjCClassFromMetadata);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v28 = v27;

    v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v28);
    v30 = sub_100351178((uint64_t)_swiftEmptyArrayStorage);
    v31 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v30);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v33 = v32;
    v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v33);
    v35 = swift_allocObject(&unk_10060B9A0, 32, 7);
    v36 = v45;
    *(_QWORD *)(v35 + 16) = v42;
    *(_QWORD *)(v35 + 24) = v36;
    aBlock[4] = sub_10002D4F8;
    aBlock[5] = v35;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100006378;
    aBlock[3] = &unk_10060B9B8;
    v37 = _Block_copy(aBlock);
    swift_retain();
    *(_QWORD *)&v38 = swift_release().n128_u64[0];
    v39 = v43;
    objc_msgSend(v43, "finishedTest:extraResults:waitForNotification:withTeardownBlock:", v29, v31, v34, v37, v38);
    _Block_release(v37);
    swift_release();

  }
}

void sub_1004BDF88(_QWORD *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  objc_class *ObjCClassFromMetadata;
  id v14;
  NSString *v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  Class isa;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;

  v8 = sub_10002A750(&qword_100650718);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)swift_allocObject(&unk_10060B6F8, 40, 7);
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  v12 = type metadata accessor for PPTTask_MarkAsCompleted();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v12);
  v14 = a2;
  swift_retain();
  v15 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v17 = v16;

  v18 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v19 = swift_bridgeObjectRelease(v17).n128_u64[0];
  v32 = v14;
  objc_msgSend(v14, "startedTest:", v18, v19);

  v20 = a1[3];
  v21 = a1[4];
  sub_10001413C(a1, v20);
  UUID.init(uuidString:)(0xD000000000000024, 0x80000001005784B0);
  v22 = type metadata accessor for UUID(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v22) == 1)
  {

    __break(1u);
  }
  else
  {
    v24 = (void *)objc_opt_self(REMReminder);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v22);
    v26 = objc_msgSend(v24, "objectIDWithUUID:", isa);

    (*(void (**)(id, uint64_t, uint64_t))(v21 + 128))(v26, v20, v21);
    v27 = swift_allocObject(&unk_10060B720, 32, 7);
    *(_QWORD *)(v27 + 16) = sub_1004C5A28;
    *(_QWORD *)(v27 + 24) = v11;
    v28 = swift_allocObject(&unk_10060B748, 32, 7);
    *(_QWORD *)(v28 + 16) = sub_1004C5A34;
    *(_QWORD *)(v28 + 24) = v27;
    v29 = swift_retain();
    v30 = (void *)zalgo.getter(v29);
    dispatch thunk of Promise.then<A>(on:closure:)(v30, sub_1002DAD00, v28, (char *)&type metadata for () + 8);

    swift_release();
    swift_release();
    swift_release();
    swift_release();

  }
}

void sub_1004BE230(uint64_t a1, void *a2, void *a3, void (*a4)(__n128), uint64_t a5)
{
  uint64_t v9;
  objc_class *ObjCClassFromMetadata;
  NSString *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v17;
  objc_class *v18;
  id v19;
  NSString *v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  unint64_t v24;
  Class isa;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  objc_class *v32;
  NSString *v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  unint64_t v37;
  Class v38;
  uint64_t v39;
  void *v40;
  void **v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  void *v44;
  uint64_t (*v45)();
  uint64_t v46;

  if (a1)
  {
    v9 = type metadata accessor for PPTTask_MarkAsCompleted();
    ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v9);
    swift_errorRetain(a1);
    v11 = NSStringFromClass(ObjCClassFromMetadata);
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

    sub_1004BD34C(v12, v14, a1);
    v15 = swift_bridgeObjectRelease(v14);
    a4(v15);
    swift_errorRelease(a1);
  }
  else if (a2)
  {
    v17 = type metadata accessor for PPTTask_MarkAsCompleted();
    v18 = (objc_class *)swift_getObjCClassFromMetadata(v17);
    v19 = a2;
    v20 = NSStringFromClass(v18);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v22 = v21;

    v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v22);
    v24 = sub_100351178((uint64_t)_swiftEmptyArrayStorage);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v24);
    static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v27 = v26;
    v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v27);
    v29 = swift_allocObject(&unk_10060B7C0, 32, 7);
    *(_QWORD *)(v29 + 16) = a4;
    *(_QWORD *)(v29 + 24) = a5;
    v45 = sub_10002D4F8;
    v46 = v29;
    v41 = _NSConcreteStackBlock;
    v42 = 1107296256;
    v43 = sub_100006378;
    v44 = &unk_10060B7D8;
    v30 = _Block_copy(&v41);
    swift_retain();
    objc_msgSend(a3, "finishedTest:extraResults:waitForNotification:withTeardownBlock:", v23, isa, v28, v30, swift_release().n128_f64[0]);
    _Block_release(v30);

  }
  else
  {
    v31 = type metadata accessor for PPTTask_MarkAsCompleted();
    v32 = (objc_class *)swift_getObjCClassFromMetadata(v31);
    v33 = NSStringFromClass(v32);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v35 = v34;

    v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v35);
    v37 = sub_100351178((uint64_t)_swiftEmptyArrayStorage);
    v38 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v37);
    v39 = swift_allocObject(&unk_10060B770, 32, 7);
    *(_QWORD *)(v39 + 16) = a4;
    *(_QWORD *)(v39 + 24) = a5;
    v45 = sub_10001B280;
    v46 = v39;
    v41 = _NSConcreteStackBlock;
    v42 = 1107296256;
    v43 = sub_100006378;
    v44 = &unk_10060B788;
    v40 = _Block_copy(&v41);
    swift_retain();
    objc_msgSend(a3, "finishedTest:waitForCommit:extraResults:withTeardownBlock:", v36, 1, v38, v40, swift_release().n128_f64[0]);
    _Block_release(v40);

  }
}

uint64_t sub_1004BE574()
{
  return sub_100007100((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

void sub_1004BE580(_QWORD *a1, void *a2, void *a3, uint64_t a4, unint64_t a5, void *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint8_t *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint8_t *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint8_t *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  id v42;
  id v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  Class isa;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  void *v57;
  id v58;
  id v59;
  void *v60;
  _QWORD *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  char *v67;
  _QWORD *v68;
  void *v69;
  void *v70;
  uint64_t v71[3];
  uint64_t v72;
  _UNKNOWN **v73;
  uint64_t v74;
  uint64_t v75;

  v69 = a2;
  v70 = a3;
  v68 = a1;
  v9 = sub_10002A750(&qword_100650718);
  __chkstk_darwin(v9);
  v67 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for REMNavigationSpecifier(0);
  v64 = *(_QWORD *)(v11 - 8);
  v65 = v11;
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10063D858 != -1)
    swift_once(&qword_10063D858, sub_1000091DC);
  v14 = type metadata accessor for Logger(0);
  v15 = sub_100012DC4(v14, (uint64_t)qword_100663850);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  v18 = a4;
  if (os_log_type_enabled(v16, v17))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "TEST SETUP START", v19, 2u);
    v20 = v19;
    a4 = v18;
    swift_slowDealloc(v20, -1, -1);
  }

  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Default setup", v24, 2u);
    v25 = v24;
    a4 = v18;
    swift_slowDealloc(v25, -1, -1);
  }

  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.default.getter(v27);
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "TEST SETUP END", v29, 2u);
    v30 = v29;
    a4 = v18;
    swift_slowDealloc(v30, -1, -1);
  }

  v31 = swift_bridgeObjectRetain_n(a5, 2);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.default.getter(v32);
  v34 = os_log_type_enabled(v32, v33);
  v66 = a6;
  if (v34)
  {
    v35 = (uint8_t *)swift_slowAlloc(12, -1);
    v36 = swift_slowAlloc(32, -1);
    v71[0] = v36;
    *(_DWORD *)v35 = 136446210;
    swift_bridgeObjectRetain(a5);
    v74 = sub_100027E40(v18, a5, v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, &v75, v35 + 4, v35 + 12);
    swift_bridgeObjectRelease_n(a5, 3);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "TEST RUN START {testName: %{public}s}", v35, 0xCu);
    swift_arrayDestroy(v36, 1, &type metadata for Any[8]);
    v37 = v36;
    a4 = v18;
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v35, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a5, 2);
  }
  v38 = (_QWORD *)swift_allocObject(&unk_10060AC30, 48, 7);
  v38[2] = a4;
  v38[3] = a5;
  v39 = v69;
  v40 = v70;
  v38[4] = v69;
  v38[5] = v40;
  v41 = *sub_10001413C(v68, v68[3]);
  v72 = type metadata accessor for TTRIRootPresenter();
  v73 = &off_1005FA0E0;
  v71[0] = v41;
  sub_10001413C(v71, v72);
  swift_bridgeObjectRetain(a5);
  v42 = v39;
  v43 = v40;
  swift_retain();
  v44 = v67;
  UUID.init(uuidString:)(0xD000000000000024, 0x8000000100578420);
  v45 = type metadata accessor for UUID(0);
  v46 = *(_QWORD *)(v45 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45) == 1)
  {
    __break(1u);
  }
  else
  {
    v47 = (void *)objc_opt_self(REMReminder);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v44, v45);
    v49 = objc_msgSend(v47, "objectIDWithUUID:", isa);

    v50 = sub_10002A750((uint64_t *)&unk_100642D20);
    *v13 = v49;
    static REMNavigationSpecifier.ReminderPathSpecifier.showInList.getter(v50);
    v52 = v64;
    v51 = v65;
    v53 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(v64 + 104))(v13, enum case for REMNavigationSpecifier.reminder(_:), v65);
    __chkstk_darwin(v53);
    *(&v63 - 4) = (uint64_t)v13;
    *(&v63 - 3) = v54;
    *(&v63 - 2) = 0;
    v55 = sub_10002A750((uint64_t *)&unk_100649CC0);
    firstly<A>(closure:)(sub_1004C5CA0, &v63 - 6, v55);
    (*(void (**)(_QWORD *, uint64_t))(v52 + 8))(v13, v51);
    v56 = (_QWORD *)swift_allocObject(&unk_10060AC58, 48, 7);
    v56[2] = v42;
    v56[3] = sub_10002D470;
    v57 = v66;
    v56[4] = v38;
    v56[5] = v57;
    v58 = v42;
    swift_retain();
    v59 = v57;
    v60 = (void *)zalgo.getter(v59);
    dispatch thunk of Promise.then<A>(on:closure:)(v60, sub_1004C4C04, v56, (char *)&type metadata for () + 8);
    swift_release();
    swift_release();

    v61 = (_QWORD *)swift_allocObject(&unk_10060AC80, 40, 7);
    v61[2] = v59;
    v61[3] = sub_10002D470;
    v61[4] = v38;
    swift_retain();
    v62 = (void *)zalgo.getter(v59);
    dispatch thunk of Promise.error(on:closure:)(v62, sub_1004C4C24, v61);
    swift_release();
    swift_release();
    swift_release();

    sub_100027F10(v71);
    swift_release();
  }
}

void sub_1004BEBB0(_QWORD *a1, void *a2, void *a3, uint64_t a4, unint64_t a5, void *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint8_t *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint8_t *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint8_t *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  id v42;
  id v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  Class isa;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  void *v57;
  id v58;
  id v59;
  void *v60;
  _QWORD *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  char *v67;
  _QWORD *v68;
  void *v69;
  void *v70;
  uint64_t v71[3];
  uint64_t v72;
  _UNKNOWN **v73;
  uint64_t v74;
  uint64_t v75;

  v69 = a2;
  v70 = a3;
  v68 = a1;
  v9 = sub_10002A750(&qword_100650718);
  __chkstk_darwin(v9);
  v67 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for REMNavigationSpecifier(0);
  v64 = *(_QWORD *)(v11 - 8);
  v65 = v11;
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10063D858 != -1)
    swift_once(&qword_10063D858, sub_1000091DC);
  v14 = type metadata accessor for Logger(0);
  v15 = sub_100012DC4(v14, (uint64_t)qword_100663850);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  v18 = a4;
  if (os_log_type_enabled(v16, v17))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "TEST SETUP START", v19, 2u);
    v20 = v19;
    a4 = v18;
    swift_slowDealloc(v20, -1, -1);
  }

  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Default setup", v24, 2u);
    v25 = v24;
    a4 = v18;
    swift_slowDealloc(v25, -1, -1);
  }

  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.default.getter(v27);
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "TEST SETUP END", v29, 2u);
    v30 = v29;
    a4 = v18;
    swift_slowDealloc(v30, -1, -1);
  }

  v31 = swift_bridgeObjectRetain_n(a5, 2);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.default.getter(v32);
  v34 = os_log_type_enabled(v32, v33);
  v66 = a6;
  if (v34)
  {
    v35 = (uint8_t *)swift_slowAlloc(12, -1);
    v36 = swift_slowAlloc(32, -1);
    v71[0] = v36;
    *(_DWORD *)v35 = 136446210;
    swift_bridgeObjectRetain(a5);
    v74 = sub_100027E40(v18, a5, v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, &v75, v35 + 4, v35 + 12);
    swift_bridgeObjectRelease_n(a5, 3);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "TEST RUN START {testName: %{public}s}", v35, 0xCu);
    swift_arrayDestroy(v36, 1, &type metadata for Any[8]);
    v37 = v36;
    a4 = v18;
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v35, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a5, 2);
  }
  v38 = (_QWORD *)swift_allocObject(&unk_10060AAF0, 48, 7);
  v38[2] = a4;
  v38[3] = a5;
  v39 = v69;
  v40 = v70;
  v38[4] = v69;
  v38[5] = v40;
  v41 = *sub_10001413C(v68, v68[3]);
  v72 = type metadata accessor for TTRIRootPresenter();
  v73 = &off_1005FA0E0;
  v71[0] = v41;
  sub_10001413C(v71, v72);
  swift_bridgeObjectRetain(a5);
  v42 = v39;
  v43 = v40;
  swift_retain();
  v44 = v67;
  UUID.init(uuidString:)(0xD000000000000024, 0x8000000100578420);
  v45 = type metadata accessor for UUID(0);
  v46 = *(_QWORD *)(v45 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45) == 1)
  {
    __break(1u);
  }
  else
  {
    v47 = (void *)objc_opt_self(REMReminder);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v44, v45);
    v49 = objc_msgSend(v47, "objectIDWithUUID:", isa);

    v50 = sub_10002A750((uint64_t *)&unk_100642D20);
    *v13 = v49;
    static REMNavigationSpecifier.ReminderPathSpecifier.showInList.getter(v50);
    v52 = v64;
    v51 = v65;
    v53 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(v64 + 104))(v13, enum case for REMNavigationSpecifier.reminder(_:), v65);
    __chkstk_darwin(v53);
    *(&v63 - 4) = (uint64_t)v13;
    *(&v63 - 3) = v54;
    *(&v63 - 2) = 0;
    v55 = sub_10002A750((uint64_t *)&unk_100649CC0);
    firstly<A>(closure:)(sub_1004C4AD4, &v63 - 6, v55);
    (*(void (**)(_QWORD *, uint64_t))(v52 + 8))(v13, v51);
    v56 = (_QWORD *)swift_allocObject(&unk_10060AB18, 48, 7);
    v56[2] = v42;
    v56[3] = sub_10002D46C;
    v57 = v66;
    v56[4] = v38;
    v56[5] = v57;
    v58 = v42;
    swift_retain();
    v59 = v57;
    v60 = (void *)zalgo.getter(v59);
    dispatch thunk of Promise.then<A>(on:closure:)(v60, sub_1004C4AEC, v56, (char *)&type metadata for () + 8);
    swift_release();
    swift_release();

    v61 = (_QWORD *)swift_allocObject(&unk_10060AB40, 40, 7);
    v61[2] = v59;
    v61[3] = sub_10002D46C;
    v61[4] = v38;
    swift_retain();
    v62 = (void *)zalgo.getter(v59);
    dispatch thunk of Promise.error(on:closure:)(v62, sub_1004C4B0C, v61);
    swift_release();
    swift_release();
    swift_release();

    sub_100027F10(v71);
    swift_release();
  }
}

double sub_1004BF1E0(_QWORD *a1, void *a2, void *a3, uint64_t a4, unint64_t a5, void *a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  unint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint8_t *v32;
  _QWORD *v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  id v44;
  id v45;
  void *v46;
  _QWORD *v47;
  void *v48;
  double result;
  uint64_t v50;
  _QWORD *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  void *v56;
  void *v57;
  uint64_t v58[3];
  uint64_t v59;
  _UNKNOWN **v60;
  uint64_t v61;
  uint64_t v62;

  v57 = a6;
  v55 = a5;
  v56 = a2;
  v9 = type metadata accessor for REMNavigationSpecifier(0);
  v53 = *(_QWORD *)(v9 - 8);
  v54 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D858 != -1)
    swift_once(&qword_10063D858, sub_1000091DC);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_100012DC4(v12, (uint64_t)qword_100663850);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "TEST SETUP START", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Default setup", v20, 2u);
    swift_slowDealloc(v20, -1, -1);
  }

  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "TEST SETUP END", v24, 2u);
    swift_slowDealloc(v24, -1, -1);
  }

  v25 = v55;
  v26 = swift_bridgeObjectRetain_n(v55, 2);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.default.getter(v27);
  if (os_log_type_enabled(v27, v28))
  {
    v51 = a1;
    v29 = swift_slowAlloc(12, -1);
    v52 = a3;
    v30 = (uint8_t *)v29;
    v31 = swift_slowAlloc(32, -1);
    v58[0] = v31;
    *(_DWORD *)v30 = 136446210;
    swift_bridgeObjectRetain(v25);
    v61 = sub_100027E40(a4, v25, v58);
    a1 = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v30 + 4, v30 + 12);
    swift_bridgeObjectRelease_n(v25, 3);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "TEST RUN START {testName: %{public}s}", v30, 0xCu);
    swift_arrayDestroy(v31, 1, &type metadata for Any[8]);
    swift_slowDealloc(v31, -1, -1);
    v32 = v30;
    a3 = v52;
    swift_slowDealloc(v32, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v25, 2);
  }
  v33 = (_QWORD *)swift_allocObject(&unk_10060A7D0, 48, 7);
  v33[2] = a4;
  v33[3] = v25;
  v34 = v56;
  v33[4] = v56;
  v33[5] = a3;
  v35 = *sub_10001413C(a1, a1[3]);
  v59 = type metadata accessor for TTRIRootPresenter();
  v60 = &off_1005FA0E0;
  v58[0] = v35;
  sub_10001413C(v58, v59);
  swift_bridgeObjectRetain(v25);
  v36 = v34;
  v37 = a3;
  v38 = swift_retain();
  v39 = sub_100400F10(v38);
  __chkstk_darwin(v39);
  *(&v50 - 4) = (uint64_t)v11;
  *(&v50 - 3) = v40;
  *(&v50 - 2) = 0;
  v41 = sub_10002A750(&qword_100651F40);
  firstly<A>(closure:)(sub_1004C487C, &v50 - 6, v41);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v11, v54);
  v42 = (_QWORD *)swift_allocObject(&unk_10060A7F8, 48, 7);
  v42[2] = v36;
  v42[3] = sub_10002D46C;
  v43 = v57;
  v42[4] = v33;
  v42[5] = v43;
  v44 = v36;
  swift_retain();
  v45 = v43;
  v46 = (void *)zalgo.getter(v45);
  dispatch thunk of Promise.then<A>(on:closure:)(v46, sub_1004C4894, v42, (char *)&type metadata for () + 8);
  swift_release();
  swift_release();

  v47 = (_QWORD *)swift_allocObject(&unk_10060A820, 40, 7);
  v47[2] = v45;
  v47[3] = sub_10002D46C;
  v47[4] = v33;
  swift_retain();
  v48 = (void *)zalgo.getter(v45);
  dispatch thunk of Promise.error(on:closure:)(v48, sub_1004C48B4, v47);
  swift_release();
  swift_release();
  swift_release();

  sub_100027F10(v58);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_1004BF6F4(_QWORD *a1, void *a2, void *a3, uint64_t a4, unint64_t a5, void *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint8_t *v18;
  uint8_t *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint8_t *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint8_t *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint8_t *v37;
  _QWORD *v38;
  uint64_t v39;
  id v40;
  id v41;
  _QWORD *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  _QWORD *v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  void *v51;
  double result;
  void *v53;
  uint64_t v54;
  _QWORD *v55;
  void *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59[3];
  uint64_t v60;
  _UNKNOWN **v61;
  uint64_t v62;
  uint64_t v63;

  v55 = a1;
  v56 = a6;
  v10 = type metadata accessor for REMNavigationSpecifier(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v57 = (void **)((char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10063D858 != -1)
    swift_once(&qword_10063D858, sub_1000091DC);
  v13 = type metadata accessor for Logger(0);
  v14 = sub_100012DC4(v13, (uint64_t)qword_100663850);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  v17 = os_log_type_enabled(v15, v16);
  v58 = a4;
  if (v17)
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "TEST SETUP START", v18, 2u);
    v19 = v18;
    a4 = v58;
    swift_slowDealloc(v19, -1, -1);
  }

  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter(v21);
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Default setup", v23, 2u);
    v24 = v23;
    a4 = v58;
    swift_slowDealloc(v24, -1, -1);
  }

  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.default.getter(v26);
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "TEST SETUP END", v28, 2u);
    v29 = v28;
    a4 = v58;
    swift_slowDealloc(v29, -1, -1);
  }

  v30 = swift_bridgeObjectRetain_n(a5, 2);
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.default.getter(v31);
  if (os_log_type_enabled(v31, v32))
  {
    v54 = v11;
    v33 = swift_slowAlloc(12, -1);
    v53 = a3;
    v34 = (uint8_t *)v33;
    v35 = swift_slowAlloc(32, -1);
    v59[0] = v35;
    *(_DWORD *)v34 = 136446210;
    swift_bridgeObjectRetain(a5);
    v62 = sub_100027E40(v58, a5, v59);
    v11 = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v34 + 4, v34 + 12);
    swift_bridgeObjectRelease_n(a5, 3);
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "TEST RUN START {testName: %{public}s}", v34, 0xCu);
    swift_arrayDestroy(v35, 1, &type metadata for Any[8]);
    v36 = v35;
    a4 = v58;
    swift_slowDealloc(v36, -1, -1);
    v37 = v34;
    a3 = v53;
    swift_slowDealloc(v37, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a5, 2);
  }
  v38 = (_QWORD *)swift_allocObject(&unk_10060B860, 48, 7);
  v38[2] = a4;
  v38[3] = a5;
  v38[4] = a2;
  v38[5] = a3;
  v39 = *sub_10001413C(v55, v55[3]);
  v60 = type metadata accessor for TTRIRootPresenter();
  v61 = &off_1005FA0E0;
  v59[0] = v39;
  sub_10001413C(v59, v60);
  swift_bridgeObjectRetain(a5);
  v40 = a2;
  v41 = a3;
  swift_retain();
  v42 = v57;
  v43 = sub_10040122C(v57);
  __chkstk_darwin(v43);
  *(&v53 - 4) = v42;
  *(&v53 - 3) = v44;
  *(&v53 - 2) = 0;
  v45 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1004C5CA0, &v53 - 6, v45);
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v42, v10);
  v46 = (_QWORD *)swift_allocObject(&unk_10060B888, 48, 7);
  v47 = v56;
  v46[2] = v56;
  v46[3] = sub_10002D46C;
  v46[4] = v38;
  v46[5] = v40;
  v48 = v40;
  v49 = v47;
  v50 = swift_retain();
  v51 = (void *)zalgo.getter(v50);
  dispatch thunk of Promise.then<A>(on:closure:)(v51, sub_1004C5AAC, v46, (char *)&type metadata for () + 8);
  swift_release();
  swift_release();
  swift_release();

  sub_100027F10(v59);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1004BFBD0(_QWORD *a1, void *a2, void *a3, uint64_t a4, unint64_t a5, void *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint8_t *v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void *v42;
  Class isa;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  void *v52;
  id v53;
  id v54;
  uint64_t v55;
  void *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  _QWORD *v62;
  void *v63;
  char *v64;
  uint64_t v65[3];
  uint64_t v66;
  _UNKNOWN **v67;
  uint64_t v68;
  uint64_t v69;

  v62 = a1;
  v63 = a3;
  v61 = a2;
  v9 = sub_10002A750(&qword_100650718);
  __chkstk_darwin(v9);
  v64 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for REMNavigationSpecifier(0);
  v58 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v57 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D858 != -1)
    swift_once(&qword_10063D858, sub_1000091DC);
  v13 = type metadata accessor for Logger(0);
  v14 = sub_100012DC4(v13, (uint64_t)qword_100663850);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "TEST SETUP START", v17, 2u);
    swift_slowDealloc(v17, -1, -1);
  }

  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Default setup", v21, 2u);
    swift_slowDealloc(v21, -1, -1);
  }

  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter(v23);
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "TEST SETUP END", v25, 2u);
    swift_slowDealloc(v25, -1, -1);
  }

  v26 = swift_bridgeObjectRetain_n(a5, 2);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.default.getter(v27);
  v29 = os_log_type_enabled(v27, v28);
  v60 = a6;
  v59 = v11;
  if (v29)
  {
    v30 = (uint8_t *)swift_slowAlloc(12, -1);
    v31 = swift_slowAlloc(32, -1);
    v65[0] = v31;
    *(_DWORD *)v30 = 136446210;
    swift_bridgeObjectRetain(a5);
    v68 = sub_100027E40(a4, a5, v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, &v69, v30 + 4, v30 + 12);
    swift_bridgeObjectRelease_n(a5, 3);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "TEST RUN START {testName: %{public}s}", v30, 0xCu);
    swift_arrayDestroy(v31, 1, &type metadata for Any[8]);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v30, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a5, 2);
  }
  v32 = (_QWORD *)swift_allocObject(&unk_10060B950, 48, 7);
  v32[2] = a4;
  v32[3] = a5;
  v33 = v61;
  v34 = v63;
  v32[4] = v61;
  v32[5] = v34;
  v35 = *sub_10001413C(v62, v62[3]);
  v66 = type metadata accessor for TTRIRootPresenter();
  v67 = &off_1005FA0E0;
  v65[0] = v35;
  v62 = sub_10001413C(v65, v66);
  swift_bridgeObjectRetain(a5);
  v36 = v33;
  v37 = v34;
  swift_retain();
  v38 = v64;
  UUID.init(uuidString:)(0xD000000000000024, 0x80000001005784B0);
  v39 = type metadata accessor for UUID(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39) == 1)
  {
    __break(1u);
  }
  else
  {
    sub_10002A750((uint64_t *)&unk_100642D20);
    v41 = v57;
    v42 = (void *)objc_opt_self(REMReminder);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v39);
    v44 = objc_msgSend(v42, "objectIDWithUUID:", isa);

    *(_QWORD *)v41 = v44;
    static REMNavigationSpecifier.ReminderPathSpecifier.showInList.getter(v45);
    v47 = v58;
    v46 = v59;
    v48 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v58 + 104))(v41, enum case for REMNavigationSpecifier.reminder(_:), v59);
    __chkstk_darwin(v48);
    *(&v57 - 4) = v41;
    *(&v57 - 3) = v49;
    *(&v57 - 2) = 0;
    v50 = sub_10002A750((uint64_t *)&unk_100649CC0);
    firstly<A>(closure:)(sub_1004C5CA0, &v57 - 6, v50);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v41, v46);
    v51 = (_QWORD *)swift_allocObject(&unk_10060B978, 48, 7);
    v52 = v60;
    v51[2] = v60;
    v51[3] = sub_10002D46C;
    v51[4] = v32;
    v51[5] = v36;
    v53 = v36;
    v54 = v52;
    v55 = swift_retain();
    v56 = (void *)zalgo.getter(v55);
    dispatch thunk of Promise.then<A>(on:closure:)(v56, sub_1004C5B6C, v51, (char *)&type metadata for () + 8);
    swift_release();
    swift_release();
    swift_release();

    sub_100027F10(v65);
    swift_release();
  }
}

void sub_1004C01A0(_QWORD *a1, void *a2, void *a3, _QWORD *a4, void *a5, void *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _QWORD *v20;
  char *v21;
  void *v22;
  void *v23;
  void *v24;
  uint8_t *v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  id v39;
  NSObject *v40;
  uint64_t v41;
  void *v42;
  uint8_t *v43;
  uint8_t *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  _BOOL4 v48;
  uint64_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  NSString v57;
  _QWORD *v58;
  id v59;
  void *v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  void *v66;
  Class isa;
  id v68;
  uint64_t v69;
  _QWORD *v70;
  os_log_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  _QWORD *v75;
  void *v76;
  void *v77;
  void *v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  void *v83;
  _QWORD *v84;
  void *v85;
  uint64_t v86;
  void *v87;
  void *v88;
  char *v89;
  os_log_t v90;
  _QWORD *v91;
  _QWORD *v92;
  id v93;
  id v94;
  uint64_t v95[3];
  uint64_t v96;
  _UNKNOWN **v97;
  uint64_t v98;
  uint64_t v99;

  v7 = v6;
  v94 = a5;
  v92 = a4;
  v12 = sub_10002A750(&qword_100650718);
  __chkstk_darwin(v12);
  v14 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for REMNavigationSpecifier(0);
  v90 = *(os_log_t *)(v15 - 8);
  v91 = (_QWORD *)v15;
  __chkstk_darwin(v15);
  v89 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D858 != -1)
    swift_once(&qword_10063D858, sub_1000091DC);
  v17 = type metadata accessor for Logger(0);
  v93 = (id)sub_100012DC4(v17, (uint64_t)qword_100663850);
  v18 = Logger.logObject.getter(v93);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = a1;
    v21 = v14;
    v22 = a2;
    v23 = a6;
    v24 = a3;
    v25 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "TEST SETUP START", v25, 2u);
    v26 = v25;
    a3 = v24;
    a6 = v23;
    a2 = v22;
    v14 = v21;
    a1 = v20;
    v7 = v6;
    swift_slowDealloc(v26, -1, -1);
  }

  v27 = v7;
  v28 = sub_1004017E8(a3);
  if (v7)
  {
    v29 = (uint64_t)v92;
    v30 = v94;
    swift_bridgeObjectRetain(v94);
    swift_errorRetain(v27);
    swift_bridgeObjectRetain(v30);
    v31 = swift_errorRetain(v27);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.error.getter(v32);
    if (os_log_type_enabled(v32, v33))
    {
      v34 = swift_slowAlloc(22, -1);
      v91 = (_QWORD *)swift_slowAlloc(8, -1);
      v93 = (id)swift_slowAlloc(32, -1);
      v95[0] = (uint64_t)v93;
      *(_DWORD *)v34 = 136446466;
      v35 = (unint64_t)v94;
      v90 = v32;
      swift_bridgeObjectRetain(v94);
      v98 = sub_100027E40(v29, v35, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, &v99, v34 + 4, v34 + 12);
      swift_bridgeObjectRelease_n(v35, 3);
      *(_WORD *)(v34 + 12) = 2114;
      v36 = _convertErrorToNSError(_:)(v27);
      v98 = v36;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, &v99, v34 + 14, v34 + 22);
      v37 = v91;
      *v91 = v36;
      swift_errorRelease(v27);
      swift_errorRelease(v27);
      v32 = v90;
      _os_log_impl((void *)&_mh_execute_header, v90, v33, "TEST END ERROR {testName: %{public}s, error: %{public}@}", (uint8_t *)v34, 0x16u);
      v38 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v37, 1, v38);
      swift_slowDealloc(v37, -1, -1);
      v39 = v93;
      swift_arrayDestroy(v93, 1, &type metadata for Any[8]);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v34, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(v94, 2);
      swift_errorRelease(v27);
      swift_errorRelease(v27);
    }

    v56 = (unint64_t)v94;
    v57 = String._bridgeToObjectiveC()();
    objc_msgSend(a6, "startedTest:", v57);

    sub_1004BD34C(v29, v56, v27);
    swift_errorRelease(v27);
  }
  else
  {
    v88 = (void *)v28;
    v86 = 0;
    v40 = Logger.logObject.getter(v28);
    v41 = static os_log_type_t.default.getter(v40);
    if (os_log_type_enabled(v40, (os_log_type_t)v41))
    {
      v42 = a3;
      v43 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v40, (os_log_type_t)v41, "TEST SETUP END", v43, 2u);
      v44 = v43;
      a3 = v42;
      swift_slowDealloc(v44, -1, -1);
    }

    v45 = swift_bridgeObjectRetain_n(v94, 2);
    v46 = Logger.logObject.getter(v45);
    v47 = static os_log_type_t.default.getter(v46);
    v48 = os_log_type_enabled(v46, v47);
    v49 = (uint64_t)v92;
    v87 = a6;
    if (v48)
    {
      v85 = a2;
      v50 = (uint8_t *)swift_slowAlloc(12, -1);
      v51 = swift_slowAlloc(32, -1);
      v93 = a3;
      v52 = v51;
      v95[0] = v51;
      *(_DWORD *)v50 = 136446210;
      v84 = a1;
      v53 = (unint64_t)v94;
      swift_bridgeObjectRetain(v94);
      v98 = sub_100027E40(v49, v53, v95);
      a2 = v85;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, &v99, v50 + 4, v50 + 12);
      v54 = v53;
      a1 = v84;
      swift_bridgeObjectRelease_n(v54, 3);
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "TEST RUN START {testName: %{public}s}", v50, 0xCu);
      swift_arrayDestroy(v52, 1, &type metadata for Any[8]);
      v55 = v52;
      a3 = v93;
      swift_slowDealloc(v55, -1, -1);
      swift_slowDealloc(v50, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v94, 2);
    }
    v58 = (_QWORD *)swift_allocObject(&unk_10060B6A8, 56, 7);
    v58[2] = v49;
    v59 = v94;
    v58[3] = v94;
    v58[4] = a2;
    v60 = v88;
    v58[5] = v88;
    v58[6] = a3;
    v61 = *sub_10001413C(a1, a1[3]);
    v96 = type metadata accessor for TTRIRootPresenter();
    v97 = &off_1005FA0E0;
    v95[0] = v61;
    v92 = sub_10001413C(v95, v96);
    swift_bridgeObjectRetain(v59);
    v94 = a2;
    v93 = v60;
    v62 = a3;
    swift_retain();
    UUID.init(uuidString:)(0xD000000000000024, 0x80000001005784B0);
    v63 = type metadata accessor for UUID(0);
    v64 = *(_QWORD *)(v63 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v14, 1, v63) == 1)
    {
      __break(1u);
    }
    else
    {
      sub_10002A750((uint64_t *)&unk_100642D20);
      v65 = v89;
      v66 = (void *)objc_opt_self(REMReminder);
      isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v64 + 8))(v14, v63);
      v68 = objc_msgSend(v66, "objectIDWithUUID:", isa);

      *v65 = v68;
      static REMNavigationSpecifier.ReminderPathSpecifier.showInList.getter(v69);
      v71 = v90;
      v70 = v91;
      v72 = ((uint64_t (*)(_QWORD *, _QWORD, _QWORD *))v90[13].isa)(v65, enum case for REMNavigationSpecifier.reminder(_:), v91);
      __chkstk_darwin(v72);
      *(&v84 - 4) = v65;
      *(&v84 - 3) = v73;
      *(&v84 - 2) = 0;
      v74 = sub_10002A750((uint64_t *)&unk_100649CC0);
      firstly<A>(closure:)(sub_1004C5CA0, &v84 - 6, v74);
      ((void (*)(_QWORD *, _QWORD *))v71[1].isa)(v65, v70);
      v75 = (_QWORD *)swift_allocObject(&unk_10060B6D0, 56, 7);
      v76 = v87;
      v75[2] = v87;
      v75[3] = sub_1004C5B8C;
      v78 = v93;
      v77 = v94;
      v75[4] = v58;
      v75[5] = v77;
      v75[6] = v78;
      v79 = v77;
      v80 = v78;
      v81 = v76;
      v82 = swift_retain();
      v83 = (void *)zalgo.getter(v82);
      dispatch thunk of Promise.then<A>(on:closure:)(v83, sub_1004C59D8, v75, (char *)&type metadata for () + 8);
      swift_release();
      swift_release();
      swift_release();

      sub_100027F10(v95);
      swift_release();
    }
  }
}

double sub_1004C09D4(_QWORD *a1, void *a2, void *a3, uint64_t a4, unint64_t a5, void *a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  unint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint8_t *v32;
  _QWORD *v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  id v44;
  id v45;
  void *v46;
  _QWORD *v47;
  void *v48;
  double result;
  uint64_t v50;
  _QWORD *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  void *v56;
  void *v57;
  uint64_t v58[3];
  uint64_t v59;
  _UNKNOWN **v60;
  uint64_t v61;
  uint64_t v62;

  v57 = a6;
  v55 = a5;
  v56 = a2;
  v9 = type metadata accessor for REMNavigationSpecifier(0);
  v53 = *(_QWORD *)(v9 - 8);
  v54 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D858 != -1)
    swift_once(&qword_10063D858, sub_1000091DC);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_100012DC4(v12, (uint64_t)qword_100663850);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "TEST SETUP START", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Default setup", v20, 2u);
    swift_slowDealloc(v20, -1, -1);
  }

  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "TEST SETUP END", v24, 2u);
    swift_slowDealloc(v24, -1, -1);
  }

  v25 = v55;
  v26 = swift_bridgeObjectRetain_n(v55, 2);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.default.getter(v27);
  if (os_log_type_enabled(v27, v28))
  {
    v51 = a1;
    v29 = swift_slowAlloc(12, -1);
    v52 = a3;
    v30 = (uint8_t *)v29;
    v31 = swift_slowAlloc(32, -1);
    v58[0] = v31;
    *(_DWORD *)v30 = 136446210;
    swift_bridgeObjectRetain(v25);
    v61 = sub_100027E40(a4, v25, v58);
    a1 = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v30 + 4, v30 + 12);
    swift_bridgeObjectRelease_n(v25, 3);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "TEST RUN START {testName: %{public}s}", v30, 0xCu);
    swift_arrayDestroy(v31, 1, &type metadata for Any[8]);
    swift_slowDealloc(v31, -1, -1);
    v32 = v30;
    a3 = v52;
    swift_slowDealloc(v32, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v25, 2);
  }
  v33 = (_QWORD *)swift_allocObject(&unk_10060A960, 48, 7);
  v33[2] = a4;
  v33[3] = v25;
  v34 = v56;
  v33[4] = v56;
  v33[5] = a3;
  v35 = *sub_10001413C(a1, a1[3]);
  v59 = type metadata accessor for TTRIRootPresenter();
  v60 = &off_1005FA0E0;
  v58[0] = v35;
  sub_10001413C(v58, v59);
  swift_bridgeObjectRetain(v25);
  v36 = v34;
  v37 = a3;
  v38 = swift_retain();
  v39 = sub_100400F10(v38);
  __chkstk_darwin(v39);
  *(&v50 - 4) = (uint64_t)v11;
  *(&v50 - 3) = v40;
  *(&v50 - 2) = 0;
  v41 = sub_10002A750(&qword_100651F40);
  firstly<A>(closure:)(sub_1004C5C98, &v50 - 6, v41);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v11, v54);
  v42 = (_QWORD *)swift_allocObject(&unk_10060A988, 48, 7);
  v42[2] = v36;
  v42[3] = sub_10002D46C;
  v43 = v57;
  v42[4] = v33;
  v42[5] = v43;
  v44 = v36;
  swift_retain();
  v45 = v43;
  v46 = (void *)zalgo.getter(v45);
  dispatch thunk of Promise.then<A>(on:closure:)(v46, sub_1004C49B8, v42, (char *)&type metadata for () + 8);
  swift_release();
  swift_release();

  v47 = (_QWORD *)swift_allocObject(&unk_10060A9B0, 40, 7);
  v47[2] = v45;
  v47[3] = sub_10002D46C;
  v47[4] = v33;
  swift_retain();
  v48 = (void *)zalgo.getter(v45);
  dispatch thunk of Promise.error(on:closure:)(v48, sub_1004C4A00, v47);
  swift_release();
  swift_release();
  swift_release();

  sub_100027F10(v58);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1004C0EE8(uint64_t *a1, void *a2, char *a3, uint64_t a4, unint64_t a5, void *a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  char *v19;
  unint64_t v20;
  uint8_t *v21;
  uint8_t *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  id v33;
  void *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  void *v39;
  char *v40;
  unint64_t v41;
  uint8_t *v42;
  uint8_t *v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  _BOOL4 v47;
  uint64_t v48;
  uint8_t *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint8_t *v54;
  NSString v55;
  uint64_t *v56;
  _QWORD *v57;
  void *v58;
  uint64_t v59;
  id v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  Class isa;
  id v66;
  uint64_t v67;
  _QWORD *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  unint64_t v77;
  void *v78;
  _QWORD *v79;
  void *v80;
  id v81;
  id v82;
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  void *v88;
  char *v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  id v95;
  id v96;
  uint64_t v97[3];
  uint64_t v98;
  _UNKNOWN **v99;
  uint64_t v100;
  uint64_t v101;

  v95 = a2;
  v96 = a6;
  v94 = a1;
  v10 = sub_10002A750(&qword_100650718);
  __chkstk_darwin(v10);
  v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for REMNavigationSpecifier(0);
  v92 = *(_QWORD *)(v13 - 8);
  v93 = v13;
  __chkstk_darwin(v13);
  v91 = (void **)((char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10063D858 != -1)
    swift_once(&qword_10063D858, sub_1000091DC);
  v15 = type metadata accessor for Logger(0);
  v16 = sub_100012DC4(v15, (uint64_t)qword_100663850);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = a3;
    v20 = a5;
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "TEST SETUP START", v21, 2u);
    v22 = v21;
    a5 = v20;
    a3 = v19;
    swift_slowDealloc(v22, -1, -1);
  }

  v23 = sub_100401644(a3);
  v24 = v6;
  if (v6)
  {
    v25 = a4;
    swift_bridgeObjectRetain(a5);
    swift_errorRetain(v6);
    swift_bridgeObjectRetain(a5);
    v26 = swift_errorRetain(v6);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.error.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc(22, -1);
      v94 = (uint64_t *)swift_slowAlloc(8, -1);
      v95 = (id)swift_slowAlloc(32, -1);
      v97[0] = (uint64_t)v95;
      *(_DWORD *)v29 = 136446466;
      swift_bridgeObjectRetain(a5);
      v100 = sub_100027E40(v25, a5, v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, &v101, v29 + 4, v29 + 12);
      swift_bridgeObjectRelease_n(a5, 3);
      *(_WORD *)(v29 + 12) = 2114;
      v30 = _convertErrorToNSError(_:)(v6);
      v100 = v30;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, &v101, v29 + 14, v29 + 22);
      v31 = v94;
      *v94 = v30;
      v24 = v6;
      swift_errorRelease(v6);
      swift_errorRelease(v6);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "TEST END ERROR {testName: %{public}s, error: %{public}@}", (uint8_t *)v29, 0x16u);
      v32 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v31, 1, v32);
      swift_slowDealloc(v31, -1, -1);
      v33 = v95;
      swift_arrayDestroy(v95, 1, &type metadata for Any[8]);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v29, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(a5, 2);
      swift_errorRelease(v6);
      swift_errorRelease(v6);
    }

    v55 = String._bridgeToObjectiveC()();
    objc_msgSend(v96, "startedTest:", v55);

    sub_1004BD34C(v25, a5, v24);
    swift_errorRelease(v24);
  }
  else
  {
    v34 = v23;
    v35 = Logger.logObject.getter(v23);
    v36 = static os_log_type_t.default.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(2, -1);
      v89 = v12;
      v38 = a4;
      v39 = v34;
      v40 = a3;
      v41 = a5;
      v42 = v37;
      *(_WORD *)v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "TEST SETUP END", v37, 2u);
      v43 = v42;
      a5 = v41;
      a3 = v40;
      v34 = v39;
      a4 = v38;
      v12 = v89;
      swift_slowDealloc(v43, -1, -1);
    }

    v44 = swift_bridgeObjectRetain_n(a5, 2);
    v45 = Logger.logObject.getter(v44);
    v46 = static os_log_type_t.default.getter(v45);
    v47 = os_log_type_enabled(v45, v46);
    v90 = 0;
    if (v47)
    {
      v48 = swift_slowAlloc(12, -1);
      v88 = v34;
      v49 = (uint8_t *)v48;
      v50 = swift_slowAlloc(32, -1);
      v89 = a3;
      v51 = a5;
      v52 = v50;
      v97[0] = v50;
      *(_DWORD *)v49 = 136446210;
      swift_bridgeObjectRetain(v51);
      v100 = sub_100027E40(a4, v51, v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, &v101, v49 + 4, v49 + 12);
      swift_bridgeObjectRelease_n(v51, 3);
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "TEST RUN START {testName: %{public}s}", v49, 0xCu);
      swift_arrayDestroy(v52, 1, &type metadata for Any[8]);
      v53 = v52;
      a5 = v51;
      a3 = v89;
      swift_slowDealloc(v53, -1, -1);
      v54 = v49;
      v34 = v88;
      swift_slowDealloc(v54, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a5, 2);
    }
    v56 = v94;
    v57 = (_QWORD *)swift_allocObject(&unk_10060B568, 56, 7);
    v57[2] = a4;
    v57[3] = a5;
    v58 = v95;
    v57[4] = v95;
    v57[5] = v34;
    v57[6] = a3;
    v59 = *sub_10001413C(v56, v56[3]);
    v98 = type metadata accessor for TTRIRootPresenter();
    v99 = &off_1005FA0E0;
    v97[0] = v59;
    v94 = sub_10001413C(v97, v98);
    swift_bridgeObjectRetain(a5);
    v95 = v58;
    v60 = v34;
    v61 = a3;
    swift_retain();
    UUID.init(uuidString:)(0xD000000000000024, 0x800000010057B2F0);
    v62 = type metadata accessor for UUID(0);
    v63 = *(_QWORD *)(v62 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v12, 1, v62) == 1)
    {
      __break(1u);
    }
    else
    {
      v64 = (void *)objc_opt_self(REMList);
      isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v63 + 8))(v12, v62);
      v66 = objc_msgSend(v64, "objectIDWithUUID:", isa);

      v67 = sub_10002A750((uint64_t *)&unk_100665610);
      v68 = v91;
      v69 = (char *)v91 + *(int *)(v67 + 48);
      *v91 = v66;
      v70 = enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:);
      v71 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 104))(v69, v70, v71);
      v73 = v92;
      v72 = v93;
      v74 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(v92 + 104))(v68, enum case for REMNavigationSpecifier.list(_:), v93);
      __chkstk_darwin(v74);
      *(&v88 - 4) = v68;
      *(&v88 - 3) = v75;
      *(&v88 - 2) = 0;
      v76 = sub_10002A750((uint64_t *)&unk_100649CC0);
      firstly<A>(closure:)(sub_1004C5CA0, &v88 - 6, v76);
      (*(void (**)(_QWORD *, uint64_t))(v73 + 8))(v68, v72);
      v77 = sub_10002CDD8();
      v78 = (void *)static OS_dispatch_queue.main.getter(v77);
      v79 = (_QWORD *)swift_allocObject(&unk_10060B590, 56, 7);
      v80 = v95;
      v81 = v96;
      v79[2] = v96;
      v79[3] = v80;
      v79[4] = v60;
      v79[5] = sub_1004C5848;
      v79[6] = v57;
      v82 = v80;
      v83 = v60;
      v84 = v81;
      swift_retain();
      v85 = sub_10002A750(&qword_100663878);
      dispatch thunk of Promise.then<A>(on:additionalDelay:closure:)(v78, sub_1004C58A0, v79, v85, 3.0);
      swift_release();

      swift_release();
      v86 = swift_allocObject(&unk_10060B5B8, 24, 7);
      *(_QWORD *)(v86 + 16) = v84;
      v87 = (void *)zalgo.getter(v84);
      dispatch thunk of Promise.error(on:closure:)(v87, sub_1004C58BC, v86);
      swift_release();
      swift_release();
      swift_release();

      sub_100027F10(v97);
      swift_release();
    }
  }
}

double sub_1004C1778(_QWORD *a1, void *a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t, uint64_t, _QWORD *, id))
{
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint8_t *v32;
  _QWORD *v33;
  uint64_t v34;
  id v35;
  id v36;
  double result;
  void *v38;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  if (qword_10063D858 != -1)
    swift_once(&qword_10063D858, sub_1000091DC);
  v14 = type metadata accessor for Logger(0);
  v15 = sub_100012DC4(v14, (uint64_t)qword_100663850);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "TEST SETUP START", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }

  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Default setup", v22, 2u);
    swift_slowDealloc(v22, -1, -1);
  }

  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "TEST SETUP END", v26, 2u);
    swift_slowDealloc(v26, -1, -1);
  }

  v27 = swift_bridgeObjectRetain_n(a5, 2);
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.default.getter(v28);
  if (os_log_type_enabled(v28, v29))
  {
    v38 = a3;
    v30 = (uint8_t *)swift_slowAlloc(12, -1);
    v31 = swift_slowAlloc(32, -1);
    v44 = v31;
    *(_DWORD *)v30 = 136446210;
    swift_bridgeObjectRetain(a5);
    v42 = sub_100027E40(a4, a5, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v30 + 4, v30 + 12);
    swift_bridgeObjectRelease_n(a5, 3);
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "TEST RUN START {testName: %{public}s}", v30, 0xCu);
    swift_arrayDestroy(v31, 1, &type metadata for Any[8]);
    swift_slowDealloc(v31, -1, -1);
    v32 = v30;
    a3 = v38;
    swift_slowDealloc(v32, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a5, 2);
  }
  v33 = (_QWORD *)swift_allocObject(a7, 48, 7);
  v33[2] = a4;
  v33[3] = a5;
  v33[4] = a2;
  v33[5] = a3;
  v34 = *sub_10001413C(a1, a1[3]);
  swift_bridgeObjectRetain(a5);
  v35 = a2;
  v36 = a3;
  a9(a6, v34, a8, v33, v35);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1004C1AF8(_QWORD *a1, void *a2, void *a3, uint64_t a4, unint64_t a5, void *a6, uint64_t (*a7)(void *), uint64_t a8, uint64_t a9, void (*a10)(id, void *, uint64_t, uint64_t, _QWORD *, id))
{
  uint64_t v10;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  NSObject *v29;
  os_log_type_t v30;
  void *v31;
  uint8_t *v32;
  uint8_t *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSString v41;
  _QWORD *v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  void *v48;
  void *v49;
  uint64_t *v51;
  uint64_t v53;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (qword_10063D858 != -1)
    swift_once(&qword_10063D858, sub_1000091DC);
  v15 = type metadata accessor for Logger(0);
  v16 = sub_100012DC4(v15, (uint64_t)qword_100663850);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "TEST SETUP START", v19, 2u);
    swift_slowDealloc(v19, -1, -1);
  }

  v20 = a7(a3);
  if (v10)
  {
    swift_bridgeObjectRetain(a5);
    swift_errorRetain(v10);
    swift_bridgeObjectRetain(a5);
    v21 = swift_errorRetain(v10);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.error.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc(22, -1);
      v51 = (uint64_t *)swift_slowAlloc(8, -1);
      v53 = swift_slowAlloc(32, -1);
      v58 = v53;
      *(_DWORD *)v24 = 136446466;
      swift_bridgeObjectRetain(a5);
      v56 = sub_100027E40(a4, a5, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v24 + 4, v24 + 12);
      swift_bridgeObjectRelease_n(a5, 3);
      *(_WORD *)(v24 + 12) = 2114;
      v25 = _convertErrorToNSError(_:)(v10);
      v56 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v24 + 14, v24 + 22);
      *v51 = v25;
      v26 = a4;
      swift_errorRelease(v10);
      swift_errorRelease(v10);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "TEST END ERROR {testName: %{public}s, error: %{public}@}", (uint8_t *)v24, 0x16u);
      v27 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v51, 1, v27);
      swift_slowDealloc(v51, -1, -1);
      swift_arrayDestroy(v53, 1, &type metadata for Any[8]);
      swift_slowDealloc(v53, -1, -1);
      swift_slowDealloc(v24, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n(a5, 2);
      swift_errorRelease(v10);
      swift_errorRelease(v10);

      v26 = a4;
    }
    v41 = String._bridgeToObjectiveC()();
    objc_msgSend(a6, "startedTest:", v41);

    sub_1004BD34C(v26, a5, v10);
    swift_errorRelease(v10);
  }
  else
  {
    v28 = (void *)v20;
    v29 = Logger.logObject.getter(v20);
    v30 = static os_log_type_t.default.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = v28;
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "TEST SETUP END", v32, 2u);
      v33 = v32;
      v28 = v31;
      swift_slowDealloc(v33, -1, -1);
    }
    v48 = a3;
    v49 = a6;

    v34 = swift_bridgeObjectRetain_n(a5, 2);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.default.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      v47 = v28;
      v38 = swift_slowAlloc(32, -1);
      v58 = v38;
      *(_DWORD *)v37 = 136446210;
      swift_bridgeObjectRetain(a5);
      v39 = a4;
      v56 = sub_100027E40(a4, a5, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v37 + 4, v37 + 12);
      swift_bridgeObjectRelease_n(a5, 3);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "TEST RUN START {testName: %{public}s}", v37, 0xCu);
      swift_arrayDestroy(v38, 1, &type metadata for Any[8]);
      v40 = v38;
      v28 = v47;
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v37, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a5, 2);
      v39 = a4;
    }
    v42 = (_QWORD *)swift_allocObject(a8, 56, 7);
    v42[2] = v39;
    v42[3] = a5;
    v42[4] = a2;
    v42[5] = v28;
    v42[6] = v48;
    v43 = *sub_10001413C(a1, a1[3]);
    swift_bridgeObjectRetain(a5);
    v44 = a2;
    v45 = v28;
    v46 = v48;
    a10(v45, v49, v43, a9, v42, v44);

    swift_release();
  }
}

uint64_t sub_1004C2084()
{
  uint64_t v0;

  return sub_100269DB0(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(void **)(v0 + 32));
}

double sub_1004C2090(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void (*)(void *), _QWORD *, uint64_t, uint64_t);
  id v14;
  double result;

  v10 = (_QWORD *)swift_allocObject(&unk_10060ACA8, 40, 7);
  v10[2] = a4;
  v10[3] = a5;
  v10[4] = a6;
  v11 = a1[3];
  v12 = a1[4];
  sub_10001413C(a1, v11);
  v13 = *(void (**)(void (*)(void *), _QWORD *, uint64_t, uint64_t))(v12 + 120);
  swift_retain();
  v14 = a6;
  v13(sub_1004C4C78, v10, v11, v12);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_1004C2140(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void (*)(void *), _QWORD *, uint64_t, uint64_t);
  id v14;
  double result;

  v10 = (_QWORD *)swift_allocObject(&unk_10060AB68, 40, 7);
  v10[2] = a4;
  v10[3] = a5;
  v10[4] = a6;
  v11 = a1[3];
  v12 = a1[4];
  sub_10001413C(a1, v11);
  v13 = *(void (**)(void (*)(void *), _QWORD *, uint64_t, uint64_t))(v12 + 120);
  swift_retain();
  v14 = a6;
  v13(sub_1004C4B34, v10, v11, v12);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1004C21F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  _QWORD *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  _BYTE v28[16];
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[3];
  uint64_t v33;
  _UNKNOWN **v34;

  v10 = type metadata accessor for REMNavigationSpecifier(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v28[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v33 = type metadata accessor for TTRIRootPresenter();
  v34 = &off_1005FA0E0;
  v32[0] = a2;
  v14 = sub_10001413C(v32, v33);
  v15 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
  v16 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v13, v15, v16);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for REMNavigationSpecifier.root(_:), v10);
  v17 = *v14;
  v29 = v13;
  v30 = v17;
  v31 = 0;
  swift_retain();
  v18 = sub_10002A750(&qword_100651F48);
  firstly<A>(closure:)(sub_1004C5C94, v28, v18);
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  v19 = sub_10002CDD8();
  v20 = (void *)static OS_dispatch_queue.main.getter(v19);
  v21 = (_QWORD *)swift_allocObject(&unk_10060AED8, 48, 7);
  v21[2] = a1;
  v21[3] = a5;
  v21[4] = a3;
  v21[5] = a4;
  v22 = a1;
  v23 = a5;
  swift_retain();
  v24 = sub_10002A750(&qword_100653120);
  dispatch thunk of Promise.then<A>(on:additionalDelay:closure:)(v20, sub_1004C4EB0, v21, v24, 0.0);
  swift_release();

  swift_release();
  v25 = swift_allocObject(&unk_10060AF00, 24, 7);
  *(_QWORD *)(v25 + 16) = v22;
  v26 = (void *)zalgo.getter(v22);
  dispatch thunk of Promise.error(on:closure:)(v26, sub_1004C4F00, v25);
  swift_release();
  swift_release();
  swift_release();

  return sub_100027F10(v32);
}

uint64_t sub_1004C2420(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v31;
  uint64_t v32;
  char v33[16];
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  _UNKNOWN **v39;

  v32 = a4;
  v11 = type metadata accessor for REMNavigationSpecifier(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for TTRIRootPresenter();
  v39 = &off_1005FA0E0;
  v37[0] = a3;
  v15 = sub_10001413C(v37, v38);
  v16 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
  v17 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v14, v16, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for REMNavigationSpecifier.root(_:), v11);
  v18 = *v15;
  v34 = v14;
  v35 = v18;
  v36 = 0;
  swift_retain();
  v19 = sub_10002A750(&qword_100651F48);
  firstly<A>(closure:)(sub_1004C5C94, v33, v19);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v20 = sub_10002CDD8();
  v21 = (void *)static OS_dispatch_queue.main.getter(v20);
  v22 = (_QWORD *)swift_allocObject(&unk_10060B018, 56, 7);
  v22[2] = a2;
  v22[3] = a6;
  v23 = v32;
  v22[4] = a1;
  v22[5] = v23;
  v22[6] = a5;
  v24 = a2;
  v25 = a6;
  v26 = a1;
  swift_retain();
  v27 = sub_10002A750(&qword_100653158);
  dispatch thunk of Promise.then<A>(on:additionalDelay:closure:)(v21, sub_1004C501C, v22, v27, 0.0);
  swift_release();

  swift_release();
  v28 = swift_allocObject(&unk_10060B040, 24, 7);
  *(_QWORD *)(v28 + 16) = v24;
  v29 = (void *)zalgo.getter(v24);
  dispatch thunk of Promise.error(on:closure:)(v29, sub_1004C5038, v28);
  swift_release();
  swift_release();
  swift_release();

  return sub_100027F10(v37);
}

double sub_1004C2658@<D0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  double result;

  v7 = sub_1004C46B0(*a1, a1[1], a2, a3, a4);
  if (!v5)
  {
    *a5 = v7;
    a5[1] = v8;
    *(_QWORD *)&result = swift_unknownObjectRetain(v7).n128_u64[0];
  }
  return result;
}

uint64_t sub_1004C2698(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v31;
  uint64_t v32;
  char v33[16];
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  _UNKNOWN **v39;

  v32 = a4;
  v11 = type metadata accessor for REMNavigationSpecifier(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for TTRIRootPresenter();
  v39 = &off_1005FA0E0;
  v37[0] = a3;
  v15 = sub_10001413C(v37, v38);
  v16 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
  v17 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v14, v16, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for REMNavigationSpecifier.root(_:), v11);
  v18 = *v15;
  v34 = v14;
  v35 = v18;
  v36 = 0;
  swift_retain();
  v19 = sub_10002A750(&qword_100651F48);
  firstly<A>(closure:)(sub_1004C5C94, v33, v19);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v20 = sub_10002CDD8();
  v21 = (void *)static OS_dispatch_queue.main.getter(v20);
  v22 = (_QWORD *)swift_allocObject(&unk_10060B180, 56, 7);
  v22[2] = a2;
  v22[3] = a6;
  v23 = v32;
  v22[4] = a1;
  v22[5] = v23;
  v22[6] = a5;
  v24 = a2;
  v25 = a6;
  v26 = a1;
  swift_retain();
  v27 = sub_10002A750(&qword_100653168);
  dispatch thunk of Promise.then<A>(on:additionalDelay:closure:)(v21, sub_1004C513C, v22, v27, 0.0);
  swift_release();

  swift_release();
  v28 = swift_allocObject(&unk_10060B1A8, 24, 7);
  *(_QWORD *)(v28 + 16) = v24;
  v29 = (void *)zalgo.getter(v24);
  dispatch thunk of Promise.error(on:closure:)(v29, sub_1004C516C, v28);
  swift_release();
  swift_release();
  swift_release();

  return sub_100027F10(v37);
}

uint64_t sub_1004C28D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  _QWORD *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  _BYTE v28[16];
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[3];
  uint64_t v33;
  _UNKNOWN **v34;

  v10 = type metadata accessor for REMNavigationSpecifier(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v28[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v33 = type metadata accessor for TTRIRootPresenter();
  v34 = &off_1005FA0E0;
  v32[0] = a2;
  v14 = sub_10001413C(v32, v33);
  v15 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
  v16 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v13, v15, v16);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for REMNavigationSpecifier.root(_:), v10);
  v17 = *v14;
  v29 = v13;
  v30 = v17;
  v31 = 0;
  swift_retain();
  v18 = sub_10002A750(&qword_100651F48);
  firstly<A>(closure:)(sub_1004C5C94, v28, v18);
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  v19 = sub_10002CDD8();
  v20 = (void *)static OS_dispatch_queue.main.getter(v19);
  v21 = (_QWORD *)swift_allocObject(&unk_10060AD98, 48, 7);
  v21[2] = a1;
  v21[3] = a5;
  v21[4] = a3;
  v21[5] = a4;
  v22 = a1;
  v23 = a5;
  swift_retain();
  v24 = sub_10002A750(&qword_100653120);
  dispatch thunk of Promise.then<A>(on:additionalDelay:closure:)(v20, sub_1004C4D2C, v21, v24, 0.0);
  swift_release();

  swift_release();
  v25 = swift_allocObject(&unk_10060ADC0, 24, 7);
  *(_QWORD *)(v25 + 16) = v22;
  v26 = (void *)zalgo.getter(v22);
  dispatch thunk of Promise.error(on:closure:)(v26, sub_1004C4D6C, v25);
  swift_release();
  swift_release();
  swift_release();

  return sub_100027F10(v32);
}

uint64_t sub_1004C2AF8(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v31;
  uint64_t v32;
  char v33[16];
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  _UNKNOWN **v39;

  v32 = a4;
  v11 = type metadata accessor for REMNavigationSpecifier(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for TTRIRootPresenter();
  v39 = &off_1005FA0E0;
  v37[0] = a3;
  v15 = sub_10001413C(v37, v38);
  v16 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
  v17 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v14, v16, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for REMNavigationSpecifier.root(_:), v11);
  v18 = *v15;
  v34 = v14;
  v35 = v18;
  v36 = 0;
  swift_retain();
  v19 = sub_10002A750(&qword_100651F48);
  firstly<A>(closure:)(sub_1004C5C94, v33, v19);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v20 = sub_10002CDD8();
  v21 = (void *)static OS_dispatch_queue.main.getter(v20);
  v22 = (_QWORD *)swift_allocObject(&unk_10060B2C0, 56, 7);
  v22[2] = a2;
  v22[3] = a6;
  v23 = v32;
  v22[4] = a1;
  v22[5] = v23;
  v22[6] = a5;
  v24 = a2;
  v25 = a6;
  v26 = a1;
  swift_retain();
  v27 = sub_10002A750(&qword_100653178);
  dispatch thunk of Promise.then<A>(on:additionalDelay:closure:)(v21, sub_1004C5258, v22, v27, 0.0);
  swift_release();

  swift_release();
  v28 = swift_allocObject(&unk_10060B2E8, 24, 7);
  *(_QWORD *)(v28 + 16) = v24;
  v29 = (void *)zalgo.getter(v24);
  dispatch thunk of Promise.error(on:closure:)(v29, sub_1004C52AC, v28);
  swift_release();
  swift_release();
  swift_release();

  return sub_100027F10(v37);
}

uint64_t sub_1004C2D30(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v31;
  uint64_t v32;
  char v33[16];
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  _UNKNOWN **v39;

  v32 = a4;
  v11 = type metadata accessor for REMNavigationSpecifier(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for TTRIRootPresenter();
  v39 = &off_1005FA0E0;
  v37[0] = a3;
  v15 = sub_10001413C(v37, v38);
  v16 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
  v17 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v14, v16, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for REMNavigationSpecifier.root(_:), v11);
  v18 = *v15;
  v34 = v14;
  v35 = v18;
  v36 = 0;
  swift_retain();
  v19 = sub_10002A750(&qword_100651F48);
  firstly<A>(closure:)(sub_1004C5C94, v33, v19);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v20 = sub_10002CDD8();
  v21 = (void *)static OS_dispatch_queue.main.getter(v20);
  v22 = (_QWORD *)swift_allocObject(&unk_10060B428, 56, 7);
  v22[2] = a2;
  v22[3] = a6;
  v23 = v32;
  v22[4] = a1;
  v22[5] = v23;
  v22[6] = a5;
  v24 = a2;
  v25 = a6;
  v26 = a1;
  swift_retain();
  v27 = sub_10002A750(&qword_100653188);
  dispatch thunk of Promise.then<A>(on:additionalDelay:closure:)(v21, sub_1004C53B0, v22, v27, 0.0);
  swift_release();

  swift_release();
  v28 = swift_allocObject(&unk_10060B450, 24, 7);
  *(_QWORD *)(v28 + 16) = v24;
  v29 = (void *)zalgo.getter(v24);
  dispatch thunk of Promise.error(on:closure:)(v29, sub_1004C53CC, v28);
  swift_release();
  swift_release();
  swift_release();

  return sub_100027F10(v37);
}

uint64_t sub_1004C2F68(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  NSString *v12;
  Class v13;
  uint64_t ObjCClassMetadata;
  uint64_t v15;
  objc_class *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  __int128 v34[2];
  uint64_t v35;
  id v36;
  uint64_t v37[3];
  uint64_t v38;
  uint64_t v39;

  if (qword_10063D858 != -1)
    swift_once(&qword_10063D858, sub_1000091DC);
  v6 = type metadata accessor for Logger(0);
  sub_100012DC4(v6, (uint64_t)qword_100663850);
  v7 = swift_bridgeObjectRetain_n(a2, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v37[0] = v11;
    *(_DWORD *)v10 = 136446210;
    swift_bridgeObjectRetain(a2);
    *(_QWORD *)&v34[0] = sub_100027E40(a1, a2, v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v34, (char *)v34 + 8, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "TEST START {testName: %{public}s}", v10, 0xCu);
    swift_arrayDestroy(v11, 1, &type metadata for Any[8]);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  v12 = (NSString *)String._bridgeToObjectiveC()();
  v13 = NSClassFromString(v12);

  if (!v13)
  {
    v22 = swift_bridgeObjectRetain_n(a2, 2);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.fault.getter(v23);
    if (os_log_type_enabled(v23, (os_log_type_t)v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v26 = swift_slowAlloc(32, -1);
      v37[0] = v26;
      *(_DWORD *)v25 = 136446210;
      swift_bridgeObjectRetain(a2);
      *(_QWORD *)&v34[0] = sub_100027E40(a1, a2, v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v34, (char *)v34 + 8, v25 + 4, v25 + 12);
      swift_bridgeObjectRelease_n(a2, 3);
      v27 = "TEST END ERROR -- No class for test name {testName: %{public}s}";
LABEL_17:
      _os_log_impl((void *)&_mh_execute_header, v23, (os_log_type_t)v24, v27, v25, 0xCu);
      swift_arrayDestroy(v26, 1, &type metadata for Any[8]);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);

      return 0;
    }
LABEL_18:

    swift_bridgeObjectRelease_n(a2, 2);
    return 0;
  }
  ObjCClassMetadata = swift_getObjCClassMetadata(v13);
  v15 = type metadata accessor for PPTTestClass();
  v16 = (objc_class *)swift_dynamicCastMetatype(ObjCClassMetadata, v15);
  if (!v16)
  {
    v28 = swift_bridgeObjectRetain_n(a2, 2);
    v23 = Logger.logObject.getter(v28);
    LOBYTE(v24) = static os_log_type_t.fault.getter(v23);
    if (os_log_type_enabled(v23, (os_log_type_t)v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v26 = swift_slowAlloc(32, -1);
      v37[0] = v26;
      *(_DWORD *)v25 = 136446210;
      swift_bridgeObjectRetain(a2);
      *(_QWORD *)&v34[0] = sub_100027E40(a1, a2, v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v34, (char *)v34 + 8, v25 + 4, v25 + 12);
      swift_bridgeObjectRelease_n(a2, 3);
      v27 = "TEST END ERROR -- testClass is not a pptTestClass subclass {testName: %{public}s}";
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  v36 = objc_msgSend(objc_allocWithZone(v16), "init");
  v17 = v36;
  v18 = sub_10002A750(&qword_100663890);
  if (!swift_dynamicCast(v34, &v36, v15, v18, 6))
  {
    v35 = 0;
    memset(v34, 0, sizeof(v34));
    sub_1000073A0((uint64_t)v34, &qword_100663898);
    v29 = swift_bridgeObjectRetain_n(a2, 2);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.fault.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(12, -1);
      v33 = swift_slowAlloc(32, -1);
      v37[0] = v33;
      *(_DWORD *)v32 = 136446210;
      swift_bridgeObjectRetain(a2);
      *(_QWORD *)&v34[0] = sub_100027E40(a1, a2, v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v34, (char *)v34 + 8, v32 + 4, v32 + 12);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "TEST END ERROR -- pptInstance does not confrom to PPTITest. Did you forget to provide a concrete implementation in TTRITests {testName: %{public}s}", v32, 0xCu);
      swift_arrayDestroy(v33, 1, &type metadata for Any[8]);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v32, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
    return 0;
  }
  sub_10002E37C(v34, (uint64_t)v37);
  v19 = v38;
  v20 = v39;
  sub_10001413C(v37, v38);
  if (qword_10063D860 != -1)
    swift_once(&qword_10063D860, sub_100005CB4);
  result = DeferredPromise.promise.getter();
  if (result)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8))(a3, result, v19, v20);
    swift_release();

    sub_100027F10(v37);
    return 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004C3554(_QWORD *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  objc_class *ObjCClassFromMetadata;
  NSString *v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  void *v24;
  Class isa;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;

  v43 = a4;
  v41 = a3;
  v6 = type metadata accessor for REMNavigationSpecifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_10002A750(&qword_100650718);
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PPTNavigation_List_Simple();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v13);
  v15 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v17 = v16;

  v18 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v19 = swift_bridgeObjectRelease(v17).n128_u64[0];
  v42 = a2;
  objc_msgSend(a2, "startedTest:", v18, v19);

  v20 = *sub_10001413C(a1, a1[3]);
  swift_retain();
  UUID.init(uuidString:)(0xD000000000000024, 0x800000010057B2F0);
  v21 = type metadata accessor for UUID(0);
  v22 = *(_QWORD *)(v21 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 1, v21);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v24 = (void *)objc_opt_self(REMList);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v21);
    v26 = objc_msgSend(v24, "objectIDWithUUID:", isa);

    v27 = (char *)v9 + *(int *)(sub_10002A750((uint64_t *)&unk_100665610) + 48);
    *v9 = v26;
    v28 = enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:);
    v29 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v27, v28, v29);
    v30 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for REMNavigationSpecifier.list(_:), v6);
    __chkstk_darwin(v30);
    *(&v40 - 4) = (uint64_t)v9;
    *(&v40 - 3) = v20;
    *(&v40 - 2) = 1;
    v31 = v26;
    v32 = sub_10002A750((uint64_t *)&unk_100649CC0);
    firstly<A>(closure:)(sub_1004C5CA0, &v40 - 6, v32);

    (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
    swift_release();
    v33 = (_QWORD *)swift_allocObject(&unk_10060AF28, 40, 7);
    v35 = v41;
    v34 = v42;
    v33[2] = v42;
    v33[3] = v35;
    v33[4] = v43;
    v36 = v34;
    v37 = swift_retain();
    v38 = (void *)zalgo.getter(v37);
    v39 = dispatch thunk of Promise.then<A>(on:closure:)(v38, sub_1004C4F24, v33, v32);
    swift_release();
    swift_release();

    return v39;
  }
  return result;
}

uint64_t sub_1004C387C(_QWORD *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  objc_class *ObjCClassFromMetadata;
  NSString *v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  char v36[16];
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v34 = a4;
  v35 = a5;
  v33 = a2;
  v8 = type metadata accessor for REMNavigationSpecifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PPTNavigation_Smartlist_All();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v12);
  v14 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v16 = v15;

  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(a2, "startedTest:", v17, swift_bridgeObjectRelease(v16).n128_f64[0]);

  v18 = *sub_10001413C(a1, a1[3]);
  v19 = enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:);
  v20 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v11, v19, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for REMNavigationSpecifier.allReminders(_:), v8);
  v37 = v11;
  v38 = v18;
  v39 = 1;
  swift_retain();
  v21 = sub_10002A750(&qword_100653150);
  firstly<A>(closure:)(sub_1004C5058, v36, v21);
  v22 = swift_allocObject(&unk_10060B068, 24, 7);
  *(_QWORD *)(v22 + 16) = a3;
  v23 = (void *)zalgo.getter(a3);
  dispatch thunk of Promise.then<A>(on:closure:)(v23, sub_1004C5064, v22, v21);
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_release();
  v24 = (_QWORD *)swift_allocObject(&unk_10060B090, 40, 7);
  v25 = v33;
  v26 = v34;
  v24[2] = v33;
  v24[3] = v26;
  v24[4] = v35;
  v27 = v25;
  v28 = swift_retain();
  v29 = (void *)zalgo.getter(v28);
  v30 = dispatch thunk of Promise.then<A>(on:closure:)(v29, sub_1004C5080, v24, v21);
  swift_release();
  swift_release();

  return v30;
}

uint64_t sub_1004C3ADC(_QWORD *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  objc_class *ObjCClassFromMetadata;
  NSString *v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;

  v31 = a4;
  v32 = a5;
  v8 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PPTNavigation_ReminderDetails();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v12);
  v14 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v16 = v15;

  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(a2, "startedTest:", v17, swift_bridgeObjectRelease(v16).n128_f64[0]);

  v18 = a1[3];
  v19 = a1[4];
  sub_10001413C(a1, v18);
  v20 = enum case for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection.none(_:);
  v21 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v11, v20, v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for REMNavigationSpecifier.ReminderPathSpecifier.showDetail(_:), v8);
  v22 = sub_10002A750(&qword_100663880);
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 40))(a3, v11, v22, v22, v18, v19);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v23 = (_QWORD *)swift_allocObject(&unk_10060B5E0, 40, 7);
  v24 = v31;
  v25 = v32;
  v23[2] = a2;
  v23[3] = v24;
  v23[4] = v25;
  v26 = a2;
  v27 = swift_retain();
  v28 = (void *)zalgo.getter(v27);
  v29 = dispatch thunk of Promise.then<A>(on:closure:)(v28, sub_1004C58E0, v23, v22);
  swift_release();
  swift_release();

  return v29;
}

uint64_t sub_1004C3CD4(_QWORD *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  objc_class *ObjCClassFromMetadata;
  NSString *v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char v32[16];
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v31 = a3;
  v7 = type metadata accessor for REMNavigationSpecifier(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PPTNavigation_SmartList_Today();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v11);
  v13 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v15 = v14;

  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(a2, "startedTest:", v16, swift_bridgeObjectRelease(v15).n128_f64[0]);

  v17 = *sub_10001413C(a1, a1[3]);
  v18 = swift_retain();
  v19 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v18);
  TTRUserDefaults.todayListIsGrouped.setter(1);

  v20 = enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:);
  v21 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v10, v20, v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for REMNavigationSpecifier.today(_:), v7);
  v33 = v10;
  v34 = v17;
  v35 = 1;
  v22 = sub_10002A750(&qword_100653160);
  firstly<A>(closure:)(sub_1004C518C, v32, v22);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  v23 = (_QWORD *)swift_allocObject(&unk_10060B1D0, 40, 7);
  v24 = v31;
  v23[2] = a2;
  v23[3] = v24;
  v23[4] = a4;
  v25 = a2;
  v26 = swift_retain();
  v27 = (void *)zalgo.getter(v26);
  v28 = dispatch thunk of Promise.then<A>(on:closure:)(v27, sub_1004C519C, v23, v22);
  swift_release();
  swift_release();

  return v28;
}

uint64_t sub_1004C3EF0(_QWORD *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  objc_class *ObjCClassFromMetadata;
  NSString *v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  void *v24;
  Class isa;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;

  v40 = a4;
  v38 = a3;
  v6 = type metadata accessor for REMNavigationSpecifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_10002A750(&qword_100650718);
  __chkstk_darwin(v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PPTNavigation_List_MixedContent();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v13);
  v15 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v17 = v16;

  v18 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v19 = swift_bridgeObjectRelease(v17).n128_u64[0];
  v39 = a2;
  objc_msgSend(a2, "startedTest:", v18, v19);

  v20 = *sub_10001413C(a1, a1[3]);
  swift_retain();
  UUID.init(uuidString:)(0xD000000000000024, 0x8000000100578420);
  v21 = type metadata accessor for UUID(0);
  v22 = *(_QWORD *)(v21 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 1, v21);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v24 = (void *)objc_opt_self(REMReminder);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v21);
    v26 = objc_msgSend(v24, "objectIDWithUUID:", isa);

    sub_10002A750((uint64_t *)&unk_100642D20);
    *v9 = v26;
    v27 = v26;
    static REMNavigationSpecifier.ReminderPathSpecifier.showInList.getter(v27);
    v28 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for REMNavigationSpecifier.reminder(_:), v6);
    __chkstk_darwin(v28);
    *(&v37 - 4) = (uint64_t)v9;
    *(&v37 - 3) = v20;
    *(&v37 - 2) = 1;
    v29 = sub_10002A750((uint64_t *)&unk_100649CC0);
    firstly<A>(closure:)(sub_1004C5CA0, &v37 - 6, v29);

    (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
    swift_release();
    v30 = (_QWORD *)swift_allocObject(&unk_10060ADE8, 40, 7);
    v32 = v38;
    v31 = v39;
    v30[2] = v39;
    v30[3] = v32;
    v30[4] = v40;
    v33 = v31;
    v34 = swift_retain();
    v35 = (void *)zalgo.getter(v34);
    v36 = dispatch thunk of Promise.then<A>(on:closure:)(v35, sub_1004C4D90, v30, v29);
    swift_release();
    swift_release();

    return v36;
  }
  return result;
}

uint64_t sub_1004C41F0(_QWORD *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  objc_class *ObjCClassFromMetadata;
  NSString *v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  char v36[16];
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v34 = a4;
  v35 = a5;
  v33 = a2;
  v8 = type metadata accessor for REMNavigationSpecifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PPTNavigation_SmartList_Flagged();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v12);
  v14 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v16 = v15;

  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(a2, "startedTest:", v17, swift_bridgeObjectRelease(v16).n128_f64[0]);

  v18 = *sub_10001413C(a1, a1[3]);
  v19 = enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:);
  v20 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v11, v19, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for REMNavigationSpecifier.flagged(_:), v8);
  v37 = v11;
  v38 = v18;
  v39 = 1;
  swift_retain();
  v21 = sub_10002A750(&qword_100653170);
  firstly<A>(closure:)(sub_1004C52CC, v36, v21);
  v22 = swift_allocObject(&unk_10060B310, 24, 7);
  *(_QWORD *)(v22 + 16) = a3;
  v23 = (void *)zalgo.getter(a3);
  dispatch thunk of Promise.then<A>(on:closure:)(v23, sub_1004C52D8, v22, v21);
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_release();
  v24 = (_QWORD *)swift_allocObject(&unk_10060B338, 40, 7);
  v25 = v33;
  v26 = v34;
  v24[2] = v33;
  v24[3] = v26;
  v24[4] = v35;
  v27 = v25;
  v28 = swift_retain();
  v29 = (void *)zalgo.getter(v28);
  v30 = dispatch thunk of Promise.then<A>(on:closure:)(v29, sub_1004C52F4, v24, v21);
  swift_release();
  swift_release();

  return v30;
}

uint64_t sub_1004C4450(_QWORD *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  objc_class *ObjCClassFromMetadata;
  NSString *v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  char v36[16];
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v34 = a4;
  v35 = a5;
  v33 = a2;
  v8 = type metadata accessor for REMNavigationSpecifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PPTNavigation_SmartList_Scheduled();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v12);
  v14 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v16 = v15;

  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(a2, "startedTest:", v17, swift_bridgeObjectRelease(v16).n128_f64[0]);

  v18 = *sub_10001413C(a1, a1[3]);
  v19 = enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:);
  v20 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v11, v19, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for REMNavigationSpecifier.scheduled(_:), v8);
  v37 = v11;
  v38 = v18;
  v39 = 1;
  swift_retain();
  v21 = sub_10002A750(&qword_100653180);
  firstly<A>(closure:)(sub_1004C53EC, v36, v21);
  v22 = swift_allocObject(&unk_10060B478, 24, 7);
  *(_QWORD *)(v22 + 16) = a3;
  v23 = (void *)zalgo.getter(a3);
  dispatch thunk of Promise.then<A>(on:closure:)(v23, sub_1004C53F8, v22, v21);
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_release();
  v24 = (_QWORD *)swift_allocObject(&unk_10060B4A0, 40, 7);
  v25 = v33;
  v26 = v34;
  v24[2] = v33;
  v24[3] = v26;
  v24[4] = v35;
  v27 = v25;
  v28 = swift_retain();
  v29 = (void *)zalgo.getter(v28);
  v30 = dispatch thunk of Promise.then<A>(on:closure:)(v29, sub_1004C5414, v24, v21);
  swift_release();
  swift_release();

  return v30;
}

uint64_t sub_1004C46B0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  objc_class *ObjCClassFromMetadata;
  NSString *v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  uint64_t v15;
  void *v16;
  _QWORD v18[6];

  v9 = type metadata accessor for PPTNavigation_ReminderDetails();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v9);
  v11 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v13 = v12;

  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
  v15 = swift_allocObject(&unk_10060B608, 32, 7);
  *(_QWORD *)(v15 + 16) = a4;
  *(_QWORD *)(v15 + 24) = a5;
  v18[4] = sub_10002D4F8;
  v18[5] = v15;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_100006378;
  v18[3] = &unk_10060B620;
  v16 = _Block_copy(v18);
  swift_retain();
  objc_msgSend(a3, "finishedTest:waitForCommit:extraResults:withTeardownBlock:", v14, 0, 0, v16, swift_release().n128_f64[0]);
  _Block_release(v16);

  return a1;
}

uint64_t sub_1004C47F4()
{
  return sub_100007100((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004C4800(uint64_t a1)
{
  uint64_t v1;

  return sub_10000DDB8(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), (uint64_t)sub_1004C5C94, (uint64_t)&unk_10060A7A8, (uint64_t)sub_1004C4838);
}

uint64_t sub_1004C4838(uint64_t a1)
{
  return sub_1004C4854(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004BF1E0);
}

uint64_t sub_1004C4854(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1004C487C()
{
  uint64_t v0;

  return sub_10026B160(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1004C4888()
{
  return sub_100007100((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1004C4894(_QWORD *a1)
{
  return sub_1004C49D4(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004BC8B4);
}

uint64_t sub_1004C48B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1004BD268(a1, *(void **)(v1 + 16), *(uint64_t (**)(__n128))(v1 + 24), *(_QWORD *)(v1 + 32), (uint64_t (*)(_QWORD))type metadata accessor for PPTScroll_AccountsList);
}

void sub_1004C48DC(void *a1)
{
  uint64_t *v1;

  sub_1004BCB2C(a1, v1[2], v1[3], v1[4], (uint64_t (*)(_QWORD))type metadata accessor for PPTScroll_AccountsList, (uint64_t)&unk_10060A8C0, (uint64_t)sub_1004C4940, (uint64_t)&unk_10060A8D8);
}

BOOL sub_1004C491C()
{
  uint64_t v0;

  return sub_100341424(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_1004C4928@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_100171A60(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1004C4940(uint64_t a1)
{
  uint64_t v1;

  return sub_1004BD10C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1004C4948()
{
  return sub_100007100((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004C4954(uint64_t a1)
{
  uint64_t v1;

  return sub_10000DDB8(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), (uint64_t)sub_1004C5C94, (uint64_t)&unk_10060A938, (uint64_t)sub_1004C498C);
}

uint64_t sub_1004C498C(uint64_t a1)
{
  return sub_1004C4854(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C09D4);
}

uint64_t sub_1004C49AC()
{
  return sub_100007100((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1004C49B8(_QWORD *a1)
{
  return sub_1004C49D4(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004BC9F0);
}

uint64_t sub_1004C49D4(_QWORD *a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(*a1, a1[1], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1004C4A00(uint64_t a1)
{
  uint64_t v1;

  return sub_1004BD268(a1, *(void **)(v1 + 16), *(uint64_t (**)(__n128))(v1 + 24), *(_QWORD *)(v1 + 32), (uint64_t (*)(_QWORD))type metadata accessor for PPTScroll_AccountsListGlitch);
}

void sub_1004C4A28(void *a1)
{
  uint64_t *v1;

  sub_1004BCD60(a1, v1[2], v1[3], v1[4], (uint64_t (*)(_QWORD))type metadata accessor for PPTScroll_AccountsListGlitch, (uint64_t)&unk_10060AA50, (uint64_t)sub_1004C4A68, (uint64_t)&unk_10060AA68);
}

uint64_t sub_1004C4A68()
{
  uint64_t v0;

  return sub_1004BD028(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1004C4A70()
{
  return sub_100007100((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004C4A7C(uint64_t a1)
{
  uint64_t v1;

  return sub_10000DDB8(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), (uint64_t)sub_1004C5C94, (uint64_t)&unk_10060AAC8, (uint64_t)sub_1004C4AB4);
}

uint64_t sub_1004C4AB4(uint64_t a1)
{
  return sub_1004C4854(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004BEBB0);
}

uint64_t sub_1004C4AD4()
{
  uint64_t v0;

  return sub_100268A00(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1004C4AE0()
{
  return sub_100007100((void (*)(_QWORD))&_swift_release);
}

double sub_1004C4AEC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1004C2140(a1, *(_QWORD *)(v3 + 16), a3, *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_1004C4B0C(uint64_t a1)
{
  uint64_t v1;

  return sub_1004BD268(a1, *(void **)(v1 + 16), *(uint64_t (**)(__n128))(v1 + 24), *(_QWORD *)(v1 + 32), (uint64_t (*)(_QWORD))type metadata accessor for PPTScroll_RemindersList);
}

void sub_1004C4B34(void *a1)
{
  uint64_t *v1;

  sub_1004BCB2C(a1, v1[2], v1[3], v1[4], (uint64_t (*)(_QWORD))type metadata accessor for PPTScroll_RemindersList, (uint64_t)&unk_10060AB90, (uint64_t)sub_1004C5CA4, (uint64_t)&unk_10060ABA8);
}

uint64_t sub_1004C4B70()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004C4B94()
{
  return sub_100007100((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004C4BA0(uint64_t a1)
{
  uint64_t v1;

  return sub_10000DDB8(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), (uint64_t)sub_1004C5C94, (uint64_t)&unk_10060AC08, (uint64_t)sub_1004C4BD8);
}

uint64_t sub_1004C4BD8(uint64_t a1)
{
  return sub_1004C4854(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004BE580);
}

uint64_t sub_1004C4BF8()
{
  return sub_100007100((void (*)(_QWORD))&_swift_release);
}

double sub_1004C4C04(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1004C2090(a1, *(_QWORD *)(v3 + 16), a3, *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_1004C4C24(uint64_t a1)
{
  uint64_t v1;

  return sub_1004BD268(a1, *(void **)(v1 + 16), *(uint64_t (**)(__n128))(v1 + 24), *(_QWORD *)(v1 + 32), (uint64_t (*)(_QWORD))type metadata accessor for PPTScroll_RemindersListGlitch);
}

uint64_t sub_1004C4C4C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_1004C4C78(void *a1)
{
  uint64_t *v1;

  sub_1004BCD60(a1, v1[2], v1[3], v1[4], (uint64_t (*)(_QWORD))type metadata accessor for PPTScroll_RemindersListGlitch, (uint64_t)&unk_10060ACD0, (uint64_t)sub_1004C5B88, (uint64_t)&unk_10060ACE8);
}

uint64_t sub_1004C4CB4()
{
  return sub_100007100((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004C4CC0(uint64_t a1)
{
  uint64_t v1;

  return sub_10000DDB8(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), (uint64_t)sub_1004C5C94, (uint64_t)&unk_10060AD48, (uint64_t)sub_1004C4CF8);
}

double sub_1004C4CF8(_QWORD *a1)
{
  return sub_1004C4E3C(a1, (uint64_t)&unk_10060AD70, (uint64_t)sub_10002D46C, (void (*)(uint64_t, uint64_t, uint64_t, _QWORD *, id))sub_1004C28D0);
}

uint64_t sub_1004C4D2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1004C4ECC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1004C3EF0, a2);
}

uint64_t sub_1004C4D48()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_1004C4D6C(uint64_t a1)
{
  uint64_t v1;

  return sub_1004BD970(a1, *(_QWORD *)(v1 + 16), (uint64_t (*)(_QWORD))type metadata accessor for PPTNavigation_List_MixedContent);
}

uint64_t sub_1004C4D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1004BD840(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), (uint64_t (*)(_QWORD))type metadata accessor for PPTNavigation_List_MixedContent, (uint64_t)&unk_10060AE10, (uint64_t)sub_10002D4F8, (uint64_t)&unk_10060AE28, a2);
}

uint64_t sub_1004C4DCC()
{
  return sub_100007100((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004C4DD8(uint64_t a1)
{
  uint64_t v1;

  return sub_10000DDB8(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), (uint64_t)sub_1004C5C94, (uint64_t)&unk_10060AE88, (uint64_t)sub_1004C4E10);
}

double sub_1004C4E10(_QWORD *a1)
{
  return sub_1004C4E3C(a1, (uint64_t)&unk_10060AEB0, (uint64_t)sub_10002D46C, (void (*)(uint64_t, uint64_t, uint64_t, _QWORD *, id))sub_1004C21F8);
}

double sub_1004C4E3C(_QWORD *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, _QWORD *, id))
{
  uint64_t v4;

  return sub_1004C1778(a1, *(void **)(v4 + 16), *(void **)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), a2, a3, a4);
}

uint64_t sub_1004C4E7C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004C4EB0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1004C4ECC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1004C3554, a2);
}

uint64_t sub_1004C4ECC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD)@<X1>, uint64_t *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;

  result = a2(a1, v3[2], v3[4], v3[5]);
  if (!v4)
    *a3 = result;
  return result;
}

double sub_1004C4F00(uint64_t a1)
{
  uint64_t v1;

  return sub_1004BD970(a1, *(_QWORD *)(v1 + 16), (uint64_t (*)(_QWORD))type metadata accessor for PPTNavigation_List_Simple);
}

uint64_t sub_1004C4F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1004BD840(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), (uint64_t (*)(_QWORD))type metadata accessor for PPTNavigation_List_Simple, (uint64_t)&unk_10060AF50, (uint64_t)sub_10002D4F8, (uint64_t)&unk_10060AF68, a2);
}

uint64_t sub_1004C4F60()
{
  return sub_100007100((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004C4F6C(uint64_t a1)
{
  uint64_t v1;

  return sub_10000DDB8(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), (uint64_t)sub_1004C5C94, (uint64_t)&unk_10060AFC8, (uint64_t)sub_1004C4FA4);
}

void sub_1004C4FA4(_QWORD *a1)
{
  sub_1004C4FD8(a1, (uint64_t (*)(void *))sub_1004013A0, (uint64_t)&unk_10060AFF0, (uint64_t)sub_1004C5B8C, (void (*)(id, void *, uint64_t, uint64_t, _QWORD *, id))sub_1004C2420);
}

void sub_1004C4FD8(_QWORD *a1, uint64_t (*a2)(void *), uint64_t a3, uint64_t a4, void (*a5)(id, void *, uint64_t, uint64_t, _QWORD *, id))
{
  uint64_t v5;

  sub_1004C1AF8(a1, *(void **)(v5 + 16), *(void **)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), *(void **)(v5 + 48), a2, a3, a4, a5);
}

uint64_t sub_1004C501C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1004C5274(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C387C, a2);
}

double sub_1004C5038(uint64_t a1)
{
  uint64_t v1;

  return sub_1004BD970(a1, *(_QWORD *)(v1 + 16), (uint64_t (*)(_QWORD))type metadata accessor for PPTNavigation_Smartlist_All);
}

uint64_t sub_1004C5058()
{
  uint64_t v0;

  return sub_10026C510(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1004C5064(_QWORD *a1)
{
  uint64_t v1;

  return sub_1004010C4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1004C5080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1004BD840(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), (uint64_t (*)(_QWORD))type metadata accessor for PPTNavigation_Smartlist_All, (uint64_t)&unk_10060B0B8, (uint64_t)sub_10002D4F8, (uint64_t)&unk_10060B0D0, a2);
}

uint64_t sub_1004C50BC()
{
  return sub_100007100((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004C50C8(uint64_t a1)
{
  uint64_t v1;

  return sub_10000DDB8(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), (uint64_t)sub_1004C5C94, (uint64_t)&unk_10060B130, (uint64_t)sub_1004C5100);
}

void sub_1004C5100(_QWORD *a1)
{
  sub_1004C4FD8(a1, (uint64_t (*)(void *))sub_1004013F8, (uint64_t)&unk_10060B158, (uint64_t)sub_1004C5B8C, (void (*)(id, void *, uint64_t, uint64_t, _QWORD *, id))sub_1004C2698);
}

uint64_t sub_1004C513C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = sub_1004C3CD4(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
  if (!v3)
    *a2 = result;
  return result;
}

double sub_1004C516C(uint64_t a1)
{
  uint64_t v1;

  return sub_1004BD970(a1, *(_QWORD *)(v1 + 16), (uint64_t (*)(_QWORD))type metadata accessor for PPTNavigation_SmartList_Today);
}

uint64_t sub_1004C518C()
{
  uint64_t v0;

  return sub_10026D8C0(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1004C519C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1004BD840(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), (uint64_t (*)(_QWORD))type metadata accessor for PPTNavigation_SmartList_Today, (uint64_t)&unk_10060B1F8, (uint64_t)sub_10002D4F8, (uint64_t)&unk_10060B210, a2);
}

uint64_t sub_1004C51D8()
{
  return sub_100007100((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004C51E4(uint64_t a1)
{
  uint64_t v1;

  return sub_10000DDB8(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), (uint64_t)sub_1004C5C94, (uint64_t)&unk_10060B270, (uint64_t)sub_1004C521C);
}

void sub_1004C521C(_QWORD *a1)
{
  sub_1004C4FD8(a1, (uint64_t (*)(void *))sub_100401450, (uint64_t)&unk_10060B298, (uint64_t)sub_1004C5B8C, (void (*)(id, void *, uint64_t, uint64_t, _QWORD *, id))sub_1004C2AF8);
}

uint64_t sub_1004C5258@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1004C5274(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C41F0, a2);
}

uint64_t sub_1004C5274@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD)@<X1>, uint64_t *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;

  result = a2(a1, v3[2], v3[4], v3[5], v3[6]);
  if (!v4)
    *a3 = result;
  return result;
}

double sub_1004C52AC(uint64_t a1)
{
  uint64_t v1;

  return sub_1004BD970(a1, *(_QWORD *)(v1 + 16), (uint64_t (*)(_QWORD))type metadata accessor for PPTNavigation_SmartList_Flagged);
}

uint64_t sub_1004C52CC()
{
  uint64_t v0;

  return sub_10026EC70(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1004C52D8(_QWORD *a1)
{
  uint64_t v1;

  return sub_1004010E0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1004C52F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1004BD840(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), (uint64_t (*)(_QWORD))type metadata accessor for PPTNavigation_SmartList_Flagged, (uint64_t)&unk_10060B360, (uint64_t)sub_10002D4F8, (uint64_t)&unk_10060B378, a2);
}

uint64_t sub_1004C5330()
{
  return sub_100007100((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004C533C(uint64_t a1)
{
  uint64_t v1;

  return sub_10000DDB8(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), (uint64_t)sub_1004C5C94, (uint64_t)&unk_10060B3D8, (uint64_t)sub_1004C5374);
}

void sub_1004C5374(_QWORD *a1)
{
  sub_1004C4FD8(a1, (uint64_t (*)(void *))sub_1004013F8, (uint64_t)&unk_10060B400, (uint64_t)sub_1004C5B8C, (void (*)(id, void *, uint64_t, uint64_t, _QWORD *, id))sub_1004C2D30);
}

uint64_t sub_1004C53B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1004C5274(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C4450, a2);
}

double sub_1004C53CC(uint64_t a1)
{
  uint64_t v1;

  return sub_1004BD970(a1, *(_QWORD *)(v1 + 16), (uint64_t (*)(_QWORD))type metadata accessor for PPTNavigation_SmartList_Scheduled);
}

uint64_t sub_1004C53EC()
{
  uint64_t v0;

  return sub_100270020(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1004C53F8(_QWORD *a1)
{
  uint64_t v1;

  return sub_1004010FC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1004C5414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1004BD840(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), (uint64_t (*)(_QWORD))type metadata accessor for PPTNavigation_SmartList_Scheduled, (uint64_t)&unk_10060B4C8, (uint64_t)sub_10002D4F8, (uint64_t)&unk_10060B4E0, a2);
}

void sub_1004C5450(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  if (qword_10063D858 != -1)
    swift_once(&qword_10063D858, sub_1000091DC);
  v3 = type metadata accessor for Logger(0);
  sub_100012DC4(v3, (uint64_t)qword_100663850);
  v4 = swift_bridgeObjectRetain_n(a2, 2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v24 = v8;
    *(_DWORD *)v7 = 136446210;
    swift_bridgeObjectRetain(a2);
    v23 = sub_100027E40(a1, a2, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v7 + 4, v7 + 12);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "TEST RUN END {testName: %{public}s}", v7, 0xCu);
    swift_arrayDestroy(v8, 1, &type metadata for Any[8]);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {

    v9 = swift_bridgeObjectRelease_n(a2, 2);
  }
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "TEST TEARDOWN START", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "TEST TEARDOWN END", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  v17 = swift_bridgeObjectRetain_n(a2, 2);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(12, -1);
    v21 = swift_slowAlloc(32, -1);
    v24 = v21;
    *(_DWORD *)v20 = 136446210;
    swift_bridgeObjectRetain(a2);
    v23 = sub_100027E40(a1, a2, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v20 + 4, v20 + 12);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "TEST END {testName: %{public}s}", v20, 0xCu);
    swift_arrayDestroy(v21, 1, &type metadata for Any[8]);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v20, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
}

uint64_t sub_1004C57E4()
{
  return sub_100007100((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004C57F0(uint64_t a1)
{
  uint64_t v1;

  return sub_10000DDB8(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), (uint64_t)sub_1004C5C94, (uint64_t)&unk_10060B540, (uint64_t)sub_1004C5828);
}

uint64_t sub_1004C5828(uint64_t a1)
{
  return sub_1004C4854(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C0EE8);
}

void sub_1004C5848()
{
  uint64_t v0;

  sub_1004C5450(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1004C5864()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004C58A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1004C5274(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C3ADC, a2);
}

double sub_1004C58BC(uint64_t a1)
{
  uint64_t v1;

  return sub_1004BD970(a1, *(_QWORD *)(v1 + 16), (uint64_t (*)(_QWORD))type metadata accessor for PPTNavigation_ReminderDetails);
}

double sub_1004C58E0@<D0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1004C2658(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_1004C58FC()
{
  return sub_100007100((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004C5908(uint64_t a1)
{
  uint64_t v1;

  return sub_10000DDB8(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), (uint64_t)sub_1004C5C94, (uint64_t)&unk_10060B680, (uint64_t)sub_1004C5940);
}

uint64_t sub_1004C5940(uint64_t a1)
{
  return sub_1004C4854(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C01A0);
}

uint64_t sub_1004C5960()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004C599C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 56, 7);
}

void sub_1004C59D8(_QWORD *a1)
{
  uint64_t v1;

  sub_1004BDF88(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1004C59FC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1004C5A28(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1004BE230(a1, a2, *(void **)(v2 + 16), *(void (**)(__n128))(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1004C5A34()
{
  uint64_t v0;

  return sub_100401200(*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16));
}

uint64_t sub_1004C5A3C()
{
  return sub_100007100((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004C5A48(uint64_t a1)
{
  uint64_t v1;

  return sub_10000DDB8(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), (uint64_t)sub_1004C5C94, (uint64_t)&unk_10060B838, (uint64_t)sub_1004C5A80);
}

uint64_t sub_1004C5A80(uint64_t a1)
{
  return sub_1004C4854(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004BF6F4);
}

uint64_t sub_1004C5AA0()
{
  return sub_100007100((void (*)(_QWORD))&_swift_release);
}

void sub_1004C5AAC(_QWORD *a1)
{
  uint64_t v1;

  sub_1004BD9E0(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1004C5AC8()
{
  return sub_100007100((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004C5AD4(uint64_t a1)
{
  uint64_t v1;

  return sub_10000DDB8(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), (uint64_t)sub_1004C5C94, (uint64_t)&unk_10060B928, (uint64_t)sub_1004C5B0C);
}

uint64_t sub_1004C5B0C(uint64_t a1)
{
  return sub_1004C4854(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004BFBD0);
}

uint64_t sub_1004C5B2C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004C5B60()
{
  return sub_100007100((void (*)(_QWORD))&_swift_release);
}

void sub_1004C5B6C(_QWORD *a1)
{
  uint64_t v1;

  sub_1004BDC2C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1004C5C44@<X0>(_BYTE *a1@<X8>)
{
  return sub_1004C4928(a1);
}

id TTRIListSharingAssembly.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIListSharingAssembly();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for TTRIListSharingAssembly()
{
  return objc_opt_self(_TtC9Reminders23TTRIListSharingAssembly);
}

id TTRIListSharingAssembly.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIListSharingAssembly();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t storeEnumTagSinglePayload for TTRIListSharingPresentationStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1004C5DB0 + 4 * byte_1005395E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1004C5DE4 + 4 * asc_1005395E0[v4]))();
}

uint64_t sub_1004C5DE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004C5DEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004C5DF4);
  return result;
}

uint64_t sub_1004C5E00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004C5E08);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1004C5E0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004C5E14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIListSharingPresentationStyle()
{
  return &type metadata for TTRIListSharingPresentationStyle;
}

unint64_t sub_1004C5E34()
{
  unint64_t result;

  result = qword_1006638C8;
  if (!qword_1006638C8)
  {
    result = swift_getWitnessTable(&unk_1005396B4, &type metadata for TTRIListSharingPresentationStyle);
    atomic_store(result, (unint64_t *)&qword_1006638C8);
  }
  return result;
}

id sub_1004C607C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRITreeTableView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

double sub_1004C60BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  id v24[2];

  v3 = v2;
  ObjectType = swift_getObjectType(v2, a2);
  v4 = sub_10002A750(&qword_1006547E0);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride(0);
  v7 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_1006639C0);
  v22 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[1] = *(id *)(v2
                 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeViewDidScrollPassthroughSubject);
  swift_retain();
  static NSRunLoop.SchedulerTimeType.Stride.milliseconds(_:)(50);
  v24[0] = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v13 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
  v14 = sub_10002A750((uint64_t *)&unk_1006639C8);
  v15 = sub_100005ED8(0, (unint64_t *)&qword_100642D90, NSRunLoop_ptr);
  v16 = sub_100023FEC((unint64_t *)&unk_1006639D8, (uint64_t *)&unk_1006639C8, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  sub_1000A2B9C();
  Publisher.debounce<A>(for:scheduler:options:)(v9, v24, v6, v14, v15, v16);
  sub_1000073A0((uint64_t)v6, &qword_1006547E0);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v21);
  swift_release();
  v17 = sub_100023FEC(&qword_1006639E8, &qword_1006639C0, (uint64_t)&protocol conformance descriptor for Publishers.Debounce<A, B>);
  v18 = Publisher.sink<A>(weakTarget:receiveValue:receiveCompletion:)(v2, sub_1004C65B4, 0, 0, 0, v10, ObjectType, v17);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v10);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeViewDidStopScrollingCancellable) = v18;
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1004C6340(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  _BYTE v27[24];
  _BYTE v28[24];

  v3 = sub_10002A750(&qword_1006639A0);
  __chkstk_darwin(v3);
  v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v27[-v7];
  v9 = sub_10002A750(&qword_1006639A8);
  __chkstk_darwin(v9);
  v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_pendingStartEditingItem;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_pendingStartEditingItem, v28, 0, 0);
  sub_1004C7458(v12, (uint64_t)v8);
  v13 = sub_10002A750((uint64_t *)&unk_100663990);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13) == 1)
  {
    sub_1000073A0((uint64_t)v8, &qword_1006639A0);
  }
  else
  {
    v15 = *(_QWORD *)&v8[*(int *)(v13 + 48)];
    v16 = *(int *)(v9 + 48);
    sub_1000894B8((uint64_t)v8, (uint64_t)v11);
    *(_QWORD *)&v11[v16] = v15;
    sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v17 = type metadata accessor for PromiseError(0);
    v18 = sub_1000A60A8();
    v19 = swift_allocError(v17, v18, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v20, enum case for PromiseError.cancelled(_:), v17);
    DeferredPromise.reject(_:)(v19);
    swift_errorRelease(v19);
    swift_release();
  }
  v21 = sub_10002A750((uint64_t *)&unk_1006639B0);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  v22 = DeferredPromise.init()();
  v23 = *(int *)(v13 + 48);
  sub_1000493D8(a1, (uint64_t)v5);
  *(_QWORD *)&v5[v23] = v22;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v5, 0, 1, v13);
  swift_beginAccess(v12, v27, 33, 0);
  swift_retain();
  sub_1004C74A0((uint64_t)v5, v12);
  v24 = swift_endAccess(v27);
  result = DeferredPromise.promise.getter(v24);
  if (result)
  {
    v26 = result;
    swift_release();
    return v26;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1004C65B4()
{
  sub_1004C76A0();
}

void sub_1004C65D4()
{
  uint64_t v0;
  _QWORD *v1;
  double v2;
  uint64_t v3;
  void *v4;
  void (*v5)(_QWORD *, __n128);
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __n128 v9;
  uint64_t v10;
  _BYTE v11[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_itemsPendingUpdate);
  *(_QWORD *)&v2 = swift_beginAccess(v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_itemsPendingUpdate, v11, 1, 0).n128_u64[0];
  if (*(_QWORD *)(*v1 + 16))
  {
    v3 = *(_QWORD *)(*(_QWORD *)(v0
                               + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_scrollSessionController)
                   + 24);
    if (!v3 || (*(_BYTE *)(v3 + 24) & 1) == 0)
    {
      v4 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeView)
                    + qword_10065D8D8);
      if (v4)
      {
        if ((objc_msgSend(v4, "hasActiveDrop", v2) & 1) == 0)
        {
          v5 = *(void (**)(_QWORD *, __n128))(v0
                                                       + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_reloadItemsImmediately);
          v6 = *v1;
          swift_bridgeObjectRetain(*v1);
          v8 = sub_1002AC6BC(v7);
          v9 = swift_bridgeObjectRelease(v6);
          v5(v8, v9);
          swift_release();
          v10 = *v1;
          *v1 = &_swiftEmptySetSingleton;
          swift_bridgeObjectRelease(v10);
        }
      }
      else
      {
        __break(1u);
      }
    }
  }
}

id sub_1004C66CC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  char *v9;
  uint64_t v10;
  id v11;
  id result;
  id v13;
  _BYTE v14[24];

  v7 = a3 + 16;
  swift_beginAccess(a3 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (!Strong)
    return 0;
  v9 = (char *)Strong;
  v10 = OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeView;
  v11 = *(id *)(Strong + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeView);
  sub_10032C7CC(a1, a4, a2 & 1);

  result = *(id *)(*(_QWORD *)&v9[v10] + qword_10065D8D8);
  if (result)
  {
    v13 = objc_msgSend(result, "_isAnimatingScroll");

    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004C6794(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  void *v10;
  char *v11;
  void *v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v28[24];

  v3 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v3);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v8 = &v28[-v7 - 8];
  a2 += 16;
  swift_beginAccess(a2, v28, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v10 = (void *)result;
    v11 = *(char **)(*(_QWORD *)(result + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeView)
                   + qword_10065D8E0);
    if (v11)
    {
      v12 = *(void **)&v11[qword_100645F00];
      v13 = v11;
      v14 = objc_msgSend(v12, "indexPathsForVisibleRows");
      if (v14)
      {
        v15 = v14;
        v16 = type metadata accessor for IndexPath(0);
        v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

        v18 = v13;
        v19 = (_QWORD *)sub_1002D61F4(v17, (uint64_t)v18);
        swift_bridgeObjectRelease(v17);

      }
      else
      {
        v19 = _swiftEmptyArrayStorage;
      }

      v20 = v19[2];
      if (v20)
      {
        v21 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
        v22 = (char *)v19
            + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
        v23 = *(_QWORD *)(v21 + 72);
        swift_bridgeObjectRetain(v19);
        while (1)
        {
          v25 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v24);
          TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v25);
          v26 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v8, v5);
          sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          v24 = sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          if ((v26 & 1) != 0)
            break;
          v22 += v23;
          if (!--v20)
          {

            swift_bridgeObjectRelease_n(v19, 2);
            return 0;
          }
        }

        swift_bridgeObjectRelease_n(v19, 2);
        return 1;
      }
      else
      {
        swift_bridgeObjectRelease(v19);

        return 0;
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_1004C69C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_1004C65D4();

  }
}

_QWORD *sub_1004C6A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v4[6];

  v4[2] = a3;
  v4[3] = a1;
  return sub_100476DEC((void (*)(_OWORD *__return_ptr, char *, __n128))sub_1004C7440, (uint64_t)v4, a2);
}

uint64_t sub_1004C6A50@<X0>(unsigned __int8 *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[5];

  v6 = a2[3];
  v7 = a2[4];
  v8 = *a1;
  sub_10001413C(a2, v6);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(v10, v8, a3, v6, v7);
  return sub_10029A308((uint64_t)v10, a4);
}

void sub_1004C6AD4(uint64_t (*a1)(id), uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v11;
  Swift::OpaquePointer v12;
  uint64_t Strong;
  void *v14;
  void *v15;
  id v16;
  id v17;

  v4 = v3;
  v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeView);
  v6 = qword_10065D8D8;
  v7 = *(void **)(v5 + qword_10065D8D8);
  if (v7)
  {
    v11 = v7;
    v17 = v11;
    if ((a3 & 1) != 0)
    {
      v12._rawValue = (void *)a1(v11);
      UIScrollView.scrollRectToFullyVisibleAnimated(_:)(v12);

      swift_bridgeObjectRelease(v12._rawValue);
      *(_BYTE *)(v4
               + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_contentScrollViewNeedsAdjustmentAfterScrollingAnimation) = 1;
      return;
    }
    UIScrollView.iterativelyScrollRectToFullyVisible(with:)(a1, a2);
    Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_hostViewController);
    if (!Strong)
      goto LABEL_7;
    v14 = *(void **)(v5 + v6);
    if (v14)
    {
      v15 = (void *)Strong;
      v16 = v14;
      UIViewController.scrollContentScrollViewToAvoidPartiallyCollapsedNavBarIfNeeded(_:animated:wantsDispatchAsync:)((UIScrollView)v16, 0, 1);

LABEL_7:
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1004C6BE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t ObjectType;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD v37[3];
  _BYTE v38[24];

  v1 = sub_10002A750(&qword_1006639A0);
  __chkstk_darwin(v1);
  v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - v5;
  v7 = sub_10002A750(&qword_1006639A8);
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_pendingStartEditingItem;
  swift_beginAccess(v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_pendingStartEditingItem, v38, 0, 0);
  sub_1004C7458(v13, (uint64_t)v6);
  v14 = sub_10002A750((uint64_t *)&unk_100663990);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v6, 1, v14) == 1)
  {
    sub_1000073A0((uint64_t)v6, &qword_1006639A0);
    return;
  }
  v36 = v3;
  v16 = *(_QWORD *)&v6[*(int *)(v14 + 48)];
  v17 = *(int *)(v7 + 48);
  sub_1000894B8((uint64_t)v6, (uint64_t)v9);
  *(_QWORD *)&v9[v17] = v16;
  sub_1000894B8((uint64_t)v9, (uint64_t)v12);
  v18 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeView)
                 + qword_10065D8E0);
  if (v18)
  {
    v19 = v18;
    v20 = sub_10006B3DC();
    v22 = v21;
    v24 = v23;
    sub_1000701C4((uint64_t)v12, v20, v21, v23, v25 & 1);
    v27 = v26;

    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v20);
    if (v27)
    {
      ObjectType = swift_getObjectType(v27, v28);
      v30 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIShowRemindersEditableCell);
      if (v30)
        v31 = v30;
      else
        v31 = 0;
      if (v30)
        v32 = v27;
      else
        v32 = 0;
      if (v32)
      {
        v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
        v34 = (uint64_t)v36;
        v33(v36, 1, 1, v14);
        swift_beginAccess(v13, v37, 33, 0);
        sub_1004C74A0(v34, v13);
        swift_endAccess(v37);
        v37[0] = v32;
        v37[1] = v31;
        DeferredPromise.resolve(_:)(v37);
        swift_release();
        sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);

        return;
      }

    }
    swift_release();
    sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1004C6F94()
{
  return type metadata accessor for TTRIRemindersListScrollingController(0);
}

uint64_t type metadata accessor for TTRIRemindersListScrollingController(uint64_t a1)
{
  uint64_t result;

  result = qword_100663978;
  if (!qword_100663978)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIRemindersListScrollingController);
  return result;
}

void sub_1004C6FD8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[10];

  v4[0] = "\b";
  v4[1] = "\b";
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for () + 64;
  v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_1004C70A0(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    v4[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[7] = &unk_100539780;
    v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[9] = &unk_100539798;
    swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 80);
  }
}

void sub_1004C70A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100663988)
  {
    v2 = sub_10002CA5C((uint64_t *)&unk_100663990);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100663988);
  }
}

void sub_1004C722C(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v4;
  uint64_t v5;

  v2 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeView)
                + qword_10065D8D8);
  if (v2)
  {
    sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
    v4 = v2;
    LOBYTE(a1) = static NSObject.== infix(_:_:)(a1, v4);

    if ((a1 & 1) != 0)
    {
      v5 = swift_retain();
      PassthroughSubject.send(_:)(v5);
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1004C7338(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v4;
  char v5;
  uint64_t v6;

  v2 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeView)
                + qword_10065D8D8);
  if (v2)
  {
    sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
    v4 = v2;
    v5 = static NSObject.== infix(_:_:)(a1, v4);

    if ((v5 & 1) != 0)
    {
      v6 = a1;
      swift_retain();
      PassthroughSubject.send(_:)(&v6);
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1004C7440@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1004C6A50(a1, *(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1004C7458(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_1006639A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004C74A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_1006639A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_1004C74E8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  objc_class *ObjectType;
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType(v4, a2);
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_extenalScrollViewDelegate], 0);
  v9 = &v4[OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_hostViewController];
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_hostViewController], 0);
  v10 = OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_scrollSessionController;
  v11 = type metadata accessor for TTRIRemindersListScrollSessionController();
  v12 = swift_allocObject(v11, 32, 7);
  v13 = sub_10002A750(&qword_100646F60);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v14 = v4;
  *(_QWORD *)(v12 + 16) = PassthroughSubject.init()();
  *(_QWORD *)(v12 + 24) = 0;
  *(_QWORD *)&v4[v10] = v12;
  v15 = &v14[OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_pendingStartEditingItem];
  v16 = sub_10002A750((uint64_t *)&unk_100663990);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(_QWORD *)&v14[OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_itemsPendingUpdate] = &_swiftEmptySetSingleton;
  v14[OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_contentScrollViewNeedsAdjustmentAfterScrollingAnimation] = 0;
  v17 = OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeViewDidScrollPassthroughSubject;
  v18 = sub_10002A750((uint64_t *)&unk_1006639C8);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  *(_QWORD *)&v14[v17] = PassthroughSubject.init()();
  *(_QWORD *)&v14[OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeViewDidStopScrollingCancellable] = 0;
  swift_unknownObjectWeakAssign(v9, a1);
  *(_QWORD *)&v14[OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeView] = a2;
  v19 = &v14[OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_reloadItemsImmediately];
  *(_QWORD *)v19 = a3;
  *((_QWORD *)v19 + 1) = a4;
  v20 = a2;
  swift_retain();

  v23.receiver = v14;
  v23.super_class = ObjectType;
  return objc_msgSendSuper2(&v23, "init");
}

void sub_1004C76A0()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;
  void *v3;
  id v4;

  if (*(_BYTE *)(v0
                + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_contentScrollViewNeedsAdjustmentAfterScrollingAnimation) != 1)
    goto LABEL_5;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_contentScrollViewNeedsAdjustmentAfterScrollingAnimation) = 0;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_hostViewController);
  if (!Strong)
    goto LABEL_5;
  v2 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeView)
                + qword_10065D8D8);
  if (v2)
  {
    v3 = (void *)Strong;
    v4 = v2;
    UIViewController.scrollContentScrollViewToAvoidPartiallyCollapsedNavBarIfNeeded(_:animated:wantsDispatchAsync:)((UIScrollView)v4, 1, 0);

LABEL_5:
    sub_1004C65D4();
    sub_1004C6BE4();
    return;
  }
  __break(1u);
}

uint64_t sub_1004C7738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_1006639F0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_1006639F0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t type metadata accessor for TTRIEditSectionsRouter()
{
  return objc_opt_self(_TtC9Reminders22TTRIEditSectionsRouter);
}

uint64_t static TTRLocalizableStrings.ListDetail.ConvertGroceryListToRegularListAlert.keepExistingSectionConfirmationTitle(listLayout:)(char a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  if ((a1 & 1) != 0)
  {
    v2 = 0x80000001005626A0;
    v3 = 0x6C6F43207065654BLL;
    v4 = 0xED00003F736E6D75;
    v1 = 0xD000000000000082;
  }
  else
  {
    v1 = 0xD000000000000083;
    v2 = 0x80000001005624D0;
    v3 = 0x636553207065654BLL;
    v4 = 0xEE003F736E6F6974;
  }
  return TTRLocalizedString(_:comment:)(*(Swift::String *)&v3, *(Swift::String *)&v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.ConvertGroceryListToRegularListAlert.keepExistingSectionConfirmationMessage(listLayout:)(char a1)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  if ((a1 & 1) != 0)
  {
    v2 = 0xD000000000000084;
    v3 = 0x8000000100562730;
    v4 = 0x8000000100562750;
    v1 = 0xD00000000000001ELL;
  }
  else
  {
    v1 = 0xD00000000000001FLL;
    v2 = 0xD000000000000085;
    v3 = 0x8000000100562560;
    v4 = 0x8000000100562580;
  }
  return TTRLocalizedString(_:comment:)(*(Swift::String *)&v1, *(Swift::String *)&v2)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.ConvertGroceryListToRegularListAlert.keepExistingSectionsButton.getter()
{
  Swift::String v0;
  Swift::String v1;

  v0._object = (void *)0x8000000100562610;
  v1._countAndFlagsBits = 1885693259;
  v1._object = (void *)0xE400000000000000;
  v0._countAndFlagsBits = 0xD000000000000084;
  return TTRLocalizedString(_:comment:)(v1, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.ConvertGroceryListToRegularListAlert.removeExistingSectionsButton.getter()
{
  Swift::String v0;
  Swift::String v1;

  v0._object = (void *)0x8000000100562610;
  v1._countAndFlagsBits = 0x65766F6D6552;
  v1._object = (void *)0xE600000000000000;
  v0._countAndFlagsBits = 0xD000000000000084;
  return TTRLocalizedString(_:comment:)(v1, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.Filters.hashtags.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._object = (void *)0x8000000100569700;
  v0._countAndFlagsBits = 0xD00000000000001BLL;
  v1._countAndFlagsBits = 1936154964;
  v1._object = (void *)0xE400000000000000;
  v2._countAndFlagsBits = 0x6E207265746C6946;
  v2._object = (void *)0xEB00000000656D61;
  return TTRLocalizedString(_:value:comment:)(v0, v1, v2)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.Filters.date.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._object = (void *)0x8000000100569AB0;
  v0._countAndFlagsBits = 0xD000000000000017;
  v1._countAndFlagsBits = 1702125892;
  v1._object = (void *)0xE400000000000000;
  v2._countAndFlagsBits = 0x6E207265746C6946;
  v2._object = (void *)0xEB00000000656D61;
  return TTRLocalizedString(_:value:comment:)(v0, v1, v2)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.Filters.time.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._object = (void *)0x800000010056A4B0;
  v0._countAndFlagsBits = 0xD000000000000017;
  v1._countAndFlagsBits = 1701669204;
  v1._object = (void *)0xE400000000000000;
  v2._countAndFlagsBits = 0x6E207265746C6946;
  v2._object = (void *)0xEB00000000656D61;
  return TTRLocalizedString(_:value:comment:)(v0, v1, v2)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.Filters.priorities.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._object = (void *)0x800000010056A110;
  v0._countAndFlagsBits = 0xD00000000000001BLL;
  v1._countAndFlagsBits = 0x797469726F697250;
  v1._object = (void *)0xE800000000000000;
  v2._countAndFlagsBits = 0x6E207265746C6946;
  v2._object = (void *)0xEB00000000656D61;
  return TTRLocalizedString(_:value:comment:)(v0, v1, v2)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.Filters.location.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._object = (void *)0x8000000100569C80;
  v0._countAndFlagsBits = 0xD00000000000001BLL;
  v1._countAndFlagsBits = 0x6E6F697461636F4CLL;
  v1._object = (void *)0xE800000000000000;
  v2._countAndFlagsBits = 0x6E207265746C6946;
  v2._object = (void *)0xEB00000000656D61;
  return TTRLocalizedString(_:value:comment:)(v0, v1, v2)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.Filters.lists.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._object = (void *)0x8000000100569DB0;
  v0._countAndFlagsBits = 0xD000000000000018;
  v1._countAndFlagsBits = 0x737473694CLL;
  v1._object = (void *)0xE500000000000000;
  v2._countAndFlagsBits = 0x6E207265746C6946;
  v2._object = (void *)0xEB00000000656D61;
  return TTRLocalizedString(_:value:comment:)(v0, v1, v2)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.includedFiltersMessage.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000045;
  v1._countAndFlagsBits = 0xD000000000000194;
  v0._object = (void *)0x800000010056A5B0;
  v2._object = (void *)0x800000010056A600;
  v1._object = (void *)0x800000010056A650;
  v2._countAndFlagsBits = 0xD000000000000044;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.enabledFiltersSectionTitle.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000002BLL;
  v1._object = (void *)0x8000000100569DD0;
  v0._object = (void *)0x8000000100569E00;
  v1._countAndFlagsBits = 0xD000000000000029;
  v2._countAndFlagsBits = 0x2064656C62616E45;
  v2._object = (void *)0xEF737265746C6946;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.makeIntoGroceryListSubtitle.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000030;
  v1._countAndFlagsBits = 0xD000000000000034;
  v2._object = (void *)0x800000010056CEC0;
  v1._object = (void *)0x800000010056CEF0;
  v0._object = (void *)0x800000010056CF30;
  v2._countAndFlagsBits = 0xD00000000000002BLL;
  return TTRLocalizedString(_:value:comment:)(v2, v1, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.makeIntoSmartListSubtitle.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000029;
  v1._countAndFlagsBits = 0xD00000000000002ELL;
  v0._object = (void *)0x800000010056CE30;
  v2._object = (void *)0x800000010056CE60;
  v1._object = (void *)0x800000010056CE90;
  v2._countAndFlagsBits = 0xD000000000000026;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.dateOptionsRelativeRangeOrder.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000050;
  v1._countAndFlagsBits = 0xD000000000000201;
  v0._object = (void *)0x800000010056F850;
  v2._object = (void *)0x800000010056F8B0;
  v1._object = (void *)0x800000010056F8D0;
  v2._countAndFlagsBits = 0xD000000000000019;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.newListTitle.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._object = (void *)0x8000000100570FB0;
  v1._object = (void *)0x8000000100570FD0;
  v0._countAndFlagsBits = 0xD00000000000001ALL;
  v2._countAndFlagsBits = 0x7473694C2077654ELL;
  v2._object = (void *)0xE800000000000000;
  v1._countAndFlagsBits = 0xD00000000000001ALL;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.templatesTab.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000001ELL;
  v1._object = (void *)0x80000001005712F0;
  v0._object = (void *)0x8000000100563230;
  v1._countAndFlagsBits = 0xD000000000000019;
  v2._countAndFlagsBits = 0x6574616C706D6554;
  v2._object = (void *)0xE900000000000073;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.UndoAction.filterOperatorChanged.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000002ELL;
  v1._countAndFlagsBits = 0xD000000000000042;
  v0._object = (void *)0x8000000100573190;
  v2._object = (void *)0x80000001005731C0;
  v1._object = (void *)0x80000001005731E0;
  v2._countAndFlagsBits = 0xD000000000000016;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.UndoAction.dateChanged.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000023;
  v1._countAndFlagsBits = 0xD000000000000037;
  v0._object = (void *)0x8000000100572D00;
  v2._object = (void *)0x8000000100572D30;
  v1._object = (void *)0x8000000100572D50;
  v2._countAndFlagsBits = 0xD000000000000012;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.UndoAction.timeChanged.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000023;
  v1._countAndFlagsBits = 0xD000000000000037;
  v0._object = (void *)0x80000001005730C0;
  v2._object = (void *)0x80000001005730F0;
  v1._object = (void *)0x8000000100573110;
  v2._countAndFlagsBits = 0xD000000000000012;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.UndoAction.prioritiesChanged.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000029;
  v1._countAndFlagsBits = 0xD00000000000003DLL;
  v0._object = (void *)0x8000000100572F80;
  v2._object = (void *)0x8000000100572FB0;
  v1._object = (void *)0x8000000100572FD0;
  v2._countAndFlagsBits = 0xD000000000000018;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.UndoAction.flaggedChanged.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000026;
  v1._countAndFlagsBits = 0xD00000000000003ALL;
  v0._object = (void *)0x8000000100573030;
  v2._object = (void *)0x8000000100573060;
  v1._object = (void *)0x8000000100573080;
  v2._countAndFlagsBits = 0xD000000000000015;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.UndoAction.locationChanged.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000027;
  v1._countAndFlagsBits = 0xD00000000000003BLL;
  v0._object = (void *)0x8000000100572DF0;
  v2._object = (void *)0x8000000100572E20;
  v1._object = (void *)0x8000000100572E40;
  v2._countAndFlagsBits = 0xD000000000000016;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.UndoAction.hashtagsChanged.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000023;
  v1._countAndFlagsBits = 0xD000000000000037;
  v0._object = (void *)0x8000000100572B90;
  v2._object = (void *)0x8000000100572BC0;
  v1._object = (void *)0x8000000100572BE0;
  v2._countAndFlagsBits = 0xD000000000000012;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.UndoAction.listsChanged.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000025;
  v1._countAndFlagsBits = 0xD000000000000039;
  v0._object = (void *)0x8000000100572EC0;
  v2._object = (void *)0x8000000100572EF0;
  v1._object = (void *)0x8000000100572F10;
  v2._countAndFlagsBits = 0xD000000000000012;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.smartListHiddenTitle.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000023;
  v1._countAndFlagsBits = 0xD00000000000003BLL;
  v0._object = (void *)0x8000000100572AC0;
  v2._object = (void *)0x8000000100572AF0;
  v1._object = (void *)0x8000000100572B20;
  v2._countAndFlagsBits = 0xD000000000000021;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.UndoAction.addTag.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000036;
  v1._object = (void *)0x8000000100572C40;
  v0._object = (void *)0x8000000100572C60;
  v1._countAndFlagsBits = 0xD00000000000001FLL;
  v2._countAndFlagsBits = 0x67615420646441;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.listInfoTitle.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000020;
  v1._object = (void *)0x8000000100573950;
  v0._object = (void *)0x8000000100573970;
  v1._countAndFlagsBits = 0xD00000000000001BLL;
  v2._countAndFlagsBits = 0x666E49207473694CLL;
  v2._object = (void *)0xE90000000000006FLL;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.listTypeTitle.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000020;
  v1._object = (void *)0x8000000100573820;
  v0._object = (void *)0x8000000100573840;
  v1._countAndFlagsBits = 0xD00000000000001BLL;
  v2._countAndFlagsBits = 0x707954207473694CLL;
  v2._object = (void *)0xE900000000000065;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.manageSmartListTitle.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000023;
  v1._countAndFlagsBits = 0xD000000000000028;
  v0._object = (void *)0x8000000100573870;
  v2._object = (void *)0x80000001005738A0;
  v1._object = (void *)0x80000001005738C0;
  v2._countAndFlagsBits = 0xD000000000000011;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.smartListInfoTitle.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000026;
  v1._object = (void *)0x80000001005738F0;
  v0._object = (void *)0x8000000100573920;
  v1._countAndFlagsBits = 0xD000000000000021;
  v2._countAndFlagsBits = 0x694C207472616D53;
  v2._object = (void *)0xEF6F666E49207473;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.makeIntoSmartListTitle.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000026;
  v1._countAndFlagsBits = 0xD00000000000002BLL;
  v0._object = (void *)0x8000000100573740;
  v2._object = (void *)0x8000000100573770;
  v1._object = (void *)0x8000000100573790;
  v2._countAndFlagsBits = 0xD000000000000014;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.newSmartListTitle.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._object = (void *)0x80000001005737C0;
  v1._object = (void *)0x80000001005737F0;
  v0._countAndFlagsBits = 0xD000000000000020;
  v2._countAndFlagsBits = 0x72616D532077654ELL;
  v2._object = (void *)0xEE007473694C2074;
  v1._countAndFlagsBits = 0xD000000000000020;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.templateInfoTitle.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000024;
  v1._object = (void *)0x80000001005736F0;
  v0._object = (void *)0x8000000100573710;
  v1._countAndFlagsBits = 0xD00000000000001FLL;
  v2._countAndFlagsBits = 0x6574616C706D6554;
  v2._object = (void *)0xED00006F666E4920;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.dateRangeFromLabel.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000030;
  v1._object = (void *)0x80000001005776B0;
  v0._object = (void *)0x80000001005776D0;
  v1._countAndFlagsBits = 0xD00000000000001BLL;
  v2._countAndFlagsBits = 1836020294;
  v2._object = (void *)0xE400000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.dateRangeToLabel.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000002ELL;
  v1._object = (void *)0x8000000100577710;
  v0._object = (void *)0x8000000100577730;
  v1._countAndFlagsBits = 0xD000000000000019;
  v2._countAndFlagsBits = 28500;
  v2._object = (void *)0xE200000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.anyIncludedFiltersOption.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000045;
  v1._object = (void *)0x800000010056A4D0;
  v0._object = (void *)0x800000010056A4F0;
  v1._countAndFlagsBits = 0xD000000000000016;
  v2._countAndFlagsBits = 7958113;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.allIncludedFiltersOption.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000044;
  v1._object = (void *)0x800000010056A540;
  v0._object = (void *)0x800000010056A560;
  v1._countAndFlagsBits = 0xD000000000000016;
  v2._countAndFlagsBits = 7105633;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.hashtagOptionOff.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000029;
  v1._object = (void *)0x80000001005694F0;
  v0._object = (void *)0x8000000100569510;
  v1._countAndFlagsBits = 0xD00000000000001ALL;
  v2._countAndFlagsBits = 6710863;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.hashtagOptionAny.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000002DLL;
  v1._object = (void *)0x8000000100569540;
  v0._object = (void *)0x8000000100569560;
  v1._countAndFlagsBits = 0xD00000000000001ALL;
  v2._countAndFlagsBits = 0x67615420796E41;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.hashtagOptionAnySelected.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000023;
  v1._countAndFlagsBits = 0xD000000000000037;
  v0._object = (void *)0x8000000100569590;
  v2._object = (void *)0x80000001005695C0;
  v1._object = (void *)0x80000001005695E0;
  v2._countAndFlagsBits = 0xD000000000000011;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.hashtagOptionAllSelected.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000022;
  v1._countAndFlagsBits = 0xD000000000000038;
  v0._object = (void *)0x8000000100569620;
  v2._object = (void *)0x8000000100569650;
  v1._object = (void *)0x8000000100569670;
  v2._countAndFlagsBits = 0xD000000000000011;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.hashtagOptionUntagged.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000002DLL;
  v1._object = (void *)0x80000001005696B0;
  v0._object = (void *)0x80000001005696D0;
  v1._countAndFlagsBits = 0xD00000000000001FLL;
  v2._countAndFlagsBits = 0x73676154206F4ELL;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.dateOptionOff.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000002ALL;
  v1._object = (void *)0x8000000100569750;
  v0._object = (void *)0x8000000100569770;
  v1._countAndFlagsBits = 0xD00000000000001BLL;
  v2._countAndFlagsBits = 6710863;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.dateOptionAny.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000002ALL;
  v1._object = (void *)0x80000001005697A0;
  v0._object = (void *)0x80000001005697C0;
  v1._countAndFlagsBits = 0xD00000000000001BLL;
  v2._countAndFlagsBits = 7958081;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.dateOptionToday.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000002CLL;
  v1._object = (void *)0x80000001005697F0;
  v0._object = (void *)0x8000000100569810;
  v1._countAndFlagsBits = 0xD00000000000001DLL;
  v2._countAndFlagsBits = 0x7961646F54;
  v2._object = (void *)0xE500000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.dateOptionOnDate.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000030;
  v1._object = (void *)0x8000000100569840;
  v0._object = (void *)0x8000000100569860;
  v1._countAndFlagsBits = 0xD00000000000001FLL;
  v2._countAndFlagsBits = 0x7461442061206E4FLL;
  v2._object = (void *)0xE900000000000065;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.dateOptionBeforeDate.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000034;
  v1._object = (void *)0x80000001005698A0;
  v0._object = (void *)0x80000001005698D0;
  v1._countAndFlagsBits = 0xD000000000000023;
  v2._countAndFlagsBits = 0x612065726F666542;
  v2._object = (void *)0xED00006574614420;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.dateOptionAfterDate.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000033;
  v1._object = (void *)0x8000000100569910;
  v0._object = (void *)0x8000000100569940;
  v1._countAndFlagsBits = 0xD000000000000022;
  v2._countAndFlagsBits = 0x2061207265746641;
  v2._object = (void *)0xEC00000065746144;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.dateOptionSpecifiedRange.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000036;
  v1._object = (void *)0x8000000100569980;
  v0._object = (void *)0x80000001005699B0;
  v1._countAndFlagsBits = 0xD000000000000027;
  v2._countAndFlagsBits = 0x6569666963657053;
  v2._object = (void *)0xEF65676E61522064;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.dateOptionRelativeRange.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000035;
  v1._object = (void *)0x80000001005699F0;
  v0._object = (void *)0x8000000100569A20;
  v1._countAndFlagsBits = 0xD000000000000026;
  v2._countAndFlagsBits = 0x65766974616C6552;
  v2._object = (void *)0xEE0065676E615220;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.dateOptionNoDate.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000002ELL;
  v1._object = (void *)0x8000000100569A60;
  v0._object = (void *)0x8000000100569A80;
  v1._countAndFlagsBits = 0xD00000000000001FLL;
  v2._countAndFlagsBits = 0x65746144206F4ELL;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.timeOptionOff.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000002ALL;
  v1._object = (void *)0x800000010056A260;
  v0._object = (void *)0x800000010056A280;
  v1._countAndFlagsBits = 0xD00000000000001BLL;
  v2._countAndFlagsBits = 6710863;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.timeOptionAny.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000002ALL;
  v1._object = (void *)0x800000010056A2B0;
  v0._object = (void *)0x800000010056A2D0;
  v1._countAndFlagsBits = 0xD00000000000001BLL;
  v2._countAndFlagsBits = 7958081;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.timeOptionMorning.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000002ELL;
  v1._object = (void *)0x800000010056A300;
  v0._object = (void *)0x800000010056A320;
  v1._countAndFlagsBits = 0xD00000000000001FLL;
  v2._countAndFlagsBits = 0x676E696E726F4DLL;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.timeOptionAfternoon.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000030;
  v1._object = (void *)0x800000010056A350;
  v0._object = (void *)0x800000010056A380;
  v1._countAndFlagsBits = 0xD000000000000021;
  v2._countAndFlagsBits = 0x6F6F6E7265746641;
  v2._object = (void *)0xE90000000000006ELL;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.timeOptionEvening.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000002ELL;
  v1._object = (void *)0x800000010056A3C0;
  v0._object = (void *)0x800000010056A3E0;
  v1._countAndFlagsBits = 0xD00000000000001FLL;
  v2._countAndFlagsBits = 0x676E696E657645;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.timeOptionNight.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000002CLL;
  v1._object = (void *)0x800000010056A410;
  v0._object = (void *)0x800000010056A430;
  v1._countAndFlagsBits = 0xD00000000000001DLL;
  v2._countAndFlagsBits = 0x746867694ELL;
  v2._object = (void *)0xE500000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.timeOptionNoTime.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000002ELL;
  v1._object = (void *)0x800000010056A460;
  v0._object = (void *)0x800000010056A480;
  v1._countAndFlagsBits = 0xD00000000000001ELL;
  v2._countAndFlagsBits = 0x656D6954206F4ELL;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.prioritiesOptionOff.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000030;
  v1._object = (void *)0x8000000100569E70;
  v0._object = (void *)0x8000000100569EA0;
  v1._countAndFlagsBits = 0xD000000000000021;
  v2._countAndFlagsBits = 6710863;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.prioritiesOptionAny.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000030;
  v1._object = (void *)0x8000000100569EE0;
  v0._object = (void *)0x8000000100569F10;
  v1._countAndFlagsBits = 0xD000000000000021;
  v2._countAndFlagsBits = 7958081;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.prioritiesOptionLow.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000030;
  v1._object = (void *)0x8000000100569F50;
  v0._object = (void *)0x8000000100569F80;
  v1._countAndFlagsBits = 0xD000000000000021;
  v2._countAndFlagsBits = 7827276;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.prioritiesOptionMedium.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000033;
  v1._object = (void *)0x8000000100569FC0;
  v0._object = (void *)0x8000000100569FF0;
  v1._countAndFlagsBits = 0xD000000000000024;
  v2._countAndFlagsBits = 0x6D756964654DLL;
  v2._object = (void *)0xE600000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.prioritiesOptionHigh.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000031;
  v1._object = (void *)0x800000010056A030;
  v0._object = (void *)0x800000010056A060;
  v1._countAndFlagsBits = 0xD000000000000022;
  v2._countAndFlagsBits = 1751607624;
  v2._object = (void *)0xE400000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.prioritiesOptionNoPriority.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000038;
  v1._object = (void *)0x800000010056A0A0;
  v0._object = (void *)0x800000010056A0D0;
  v1._countAndFlagsBits = 0xD000000000000029;
  v2._countAndFlagsBits = 0x726F697250206F4ELL;
  v2._object = (void *)0xEB00000000797469;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.flaggedOptionOff.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000002DLL;
  v1._object = (void *)0x800000010056A130;
  v0._object = (void *)0x800000010056A150;
  v1._countAndFlagsBits = 0xD00000000000001ELL;
  v2._countAndFlagsBits = 6710863;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.flaggedOptionFlagged.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000031;
  v1._object = (void *)0x800000010056A180;
  v0._object = (void *)0x800000010056A1B0;
  v1._countAndFlagsBits = 0xD000000000000022;
  v2._countAndFlagsBits = 0x64656767616C46;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.flaggedOptionNotFlagged.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000035;
  v1._object = (void *)0x800000010056A1F0;
  v0._object = (void *)0x800000010056A220;
  v1._countAndFlagsBits = 0xD000000000000026;
  v2._countAndFlagsBits = 0x67616C4620746F4ELL;
  v2._object = (void *)0xEB00000000646567;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.locationOptionOff.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000002ELL;
  v1._object = (void *)0x8000000100569B50;
  v0._object = (void *)0x8000000100569B70;
  v1._countAndFlagsBits = 0xD00000000000001FLL;
  v2._countAndFlagsBits = 6710863;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.locationOptionSpecific.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000033;
  v1._object = (void *)0x8000000100569BA0;
  v0._object = (void *)0x8000000100569BD0;
  v1._countAndFlagsBits = 0xD000000000000024;
  v2._countAndFlagsBits = 0x6369666963657053;
  v2._object = (void *)0xE800000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.locationOptionNoLocation.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000036;
  v1._object = (void *)0x8000000100569C10;
  v0._object = (void *)0x8000000100569C40;
  v1._countAndFlagsBits = 0xD000000000000027;
  v2._countAndFlagsBits = 0x7461636F4C206F4ELL;
  v2._object = (void *)0xEB000000006E6F69;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.listsOptionOff.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000002BLL;
  v1._object = (void *)0x8000000100569CA0;
  v0._object = (void *)0x8000000100569CC0;
  v1._countAndFlagsBits = 0xD00000000000001CLL;
  v2._countAndFlagsBits = 6710863;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.listsOptionInclude.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000002FLL;
  v1._object = (void *)0x8000000100569CF0;
  v0._object = (void *)0x8000000100569D20;
  v1._countAndFlagsBits = 0xD000000000000020;
  v2._countAndFlagsBits = 0x6564756C636E49;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.listsOptionExclude.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000002FLL;
  v1._object = (void *)0x8000000100569D50;
  v0._object = (void *)0x8000000100569D80;
  v1._countAndFlagsBits = 0xD000000000000020;
  v2._countAndFlagsBits = 0x6564756C637845;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.locationArriving.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000002CLL;
  v1._object = (void *)0x800000010057B580;
  v0._object = (void *)0x800000010057B5A0;
  v1._countAndFlagsBits = 0xD00000000000001DLL;
  v2._countAndFlagsBits = 0x676E697669727241;
  v2._object = (void *)0xE800000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.locationLeaving.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000002BLL;
  v1._object = (void *)0x800000010057B5D0;
  v0._object = (void *)0x800000010057B5F0;
  v1._countAndFlagsBits = 0xD00000000000001CLL;
  v2._countAndFlagsBits = 0x676E697661654CLL;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.newInfoTitle(name:)(uint64_t a1, uint64_t a2)
{
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4._object = (void *)0x800000010057B620;
  v5._object = (void *)0x800000010057B640;
  v4._countAndFlagsBits = 0xD000000000000016;
  v6._countAndFlagsBits = 0x9D80E240259C80E2;
  v6._object = (void *)0xAD00006F666E4920;
  v5._countAndFlagsBits = 0xD000000000000016;
  v7 = TTRLocalizedString(_:value:comment:)(v4, v6, v5);
  v8 = sub_10002A750((uint64_t *)&unk_100640FD0);
  v9 = swift_allocObject(v8, 72, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100520250;
  *(_QWORD *)(v9 + 56) = &type metadata for String;
  *(_QWORD *)(v9 + 64) = sub_1000770A4();
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = a2;
  swift_bridgeObjectRetain(a2);
  v10 = static String.localizedStringWithFormat(_:_:)(v7._countAndFlagsBits, v7._object, v9);
  swift_bridgeObjectRelease(v7._object);
  swift_bridgeObjectRelease(v9);
  return v10;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO22enabledFiltersSubtitle5countSSSi_tFZ_0(uint64_t a1)
{
  id v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String_optional v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v11;

  v2 = *(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
  v3._countAndFlagsBits = 0xD000000000000012;
  v4._countAndFlagsBits = 0xD00000000000001ELL;
  v11._countAndFlagsBits = 0xD00000000000002FLL;
  v11._object = (void *)0x800000010057C180;
  v4._object = (void *)0x800000010057C140;
  v5.value._object = (void *)0x800000010057BAA0;
  v3._object = (void *)0x800000010057C160;
  v5.value._countAndFlagsBits = 0xD000000000000011;
  v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v2, v3, v11);

  v7 = sub_10002A750((uint64_t *)&unk_100640FD0);
  v8 = swift_allocObject(v7, 72, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100520250;
  *(_QWORD *)(v8 + 56) = &type metadata for Int;
  *(_QWORD *)(v8 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v8 + 32) = a1;
  v9 = static String.localizedStringWithFormat(_:_:)(v6._countAndFlagsBits, v6._object, v8);
  swift_bridgeObjectRelease(v6._object);
  swift_bridgeObjectRelease(v8);
  return v9;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO30dateOptionRelativeRangeDetailsySS19ReminderKitInternal014REMCustomSmartE16FilterDescriptorC0Q4DateO0iJ0VFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  objc_class *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  const char *v20;
  int v21;
  unint64_t v22;
  unint64_t v23;
  NSBundle v24;
  unint64_t v25;
  const char *v26;
  unint64_t v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  unint64_t v34;
  uint64_t v35;

  v0 = sub_10002A750((uint64_t *)&unk_100663AB0);
  __chkstk_darwin(v0);
  v2 = (char *)&v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.direction.getter(v9);
  REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.units.getter(v12);
  v13 = &v2[*(int *)(v0 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v2, v11, v7);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v13, v6, v3);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v2, v7);
  if (v14 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inPast(_:))
  {
    v15 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v13, v3);
    if (v15 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.hour(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000011;
      v18 = 0xD000000000000022;
      v34 = 0x800000010057BAC0;
      v19 = 0x800000010057BAA0;
      v20 = "In the Past %d Hours";
LABEL_7:
      v22 = (unint64_t)(v20 - 32) | 0x8000000000000000;
      v23 = 0xD000000000000014;
      v24.super.isa = v16;
      v25 = 0xD000000000000014;
LABEL_13:
      v27 = v22;
      v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v23, *(Swift::String_optional *)&v17, v24, *(Swift::String *)&v25, *(Swift::String *)&v18);

      v29 = sub_10002A750((uint64_t *)&unk_100640FD0);
      v30 = swift_allocObject(v29, 72, 7);
      *(_OWORD *)(v30 + 16) = xmmword_100520250;
      v31 = REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.magnitude.getter();
      *(_QWORD *)(v30 + 56) = &type metadata for Int;
      *(_QWORD *)(v30 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v30 + 32) = v31;
      v32 = static String.localizedStringWithFormat(_:_:)(v28._countAndFlagsBits, v28._object, v30);
      swift_bridgeObjectRelease(v28._object);
      swift_bridgeObjectRelease(v30);
      return v32;
    }
    if (v15 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.day(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000011;
      v23 = 0xD000000000000013;
      v18 = 0xD000000000000022;
      v34 = 0x800000010057BAC0;
      v19 = 0x800000010057BAA0;
      v26 = "In the Past %d Days";
LABEL_12:
      v22 = (unint64_t)(v26 - 32) | 0x8000000000000000;
      v24.super.isa = v16;
      v25 = v23;
      goto LABEL_13;
    }
    if (v15 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.week(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000011;
      v18 = 0xD000000000000022;
      v34 = 0x800000010057BAC0;
      v19 = 0x800000010057BAA0;
      v20 = "In the Past %d Weeks";
      goto LABEL_7;
    }
    if (v15 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.month(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000011;
      v23 = 0xD000000000000015;
      v18 = 0xD000000000000022;
      v34 = 0x800000010057BAC0;
      v19 = 0x800000010057BAA0;
      v26 = "In the Past %d Months";
      goto LABEL_12;
    }
    if (v15 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.year(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000011;
      v18 = 0xD000000000000022;
      v34 = 0x800000010057BAC0;
      v19 = 0x800000010057BAA0;
      v20 = "In the Past %d Years";
      goto LABEL_7;
    }
  }
  else if (v14 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inNext(_:))
  {
    v21 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v13, v3);
    if (v21 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.hour(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000011;
      v18 = 0xD000000000000022;
      v34 = 0x800000010057BAC0;
      v19 = 0x800000010057BAA0;
      v20 = "In the Next %d Hours";
      goto LABEL_7;
    }
    if (v21 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.day(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000011;
      v23 = 0xD000000000000013;
      v18 = 0xD000000000000022;
      v34 = 0x800000010057BAC0;
      v19 = 0x800000010057BAA0;
      v26 = "In the Next %d Days";
      goto LABEL_12;
    }
    if (v21 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.week(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000011;
      v18 = 0xD000000000000022;
      v34 = 0x800000010057BAC0;
      v19 = 0x800000010057BAA0;
      v20 = "In the Next %d Weeks";
      goto LABEL_7;
    }
    if (v21 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.month(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000011;
      v23 = 0xD000000000000015;
      v18 = 0xD000000000000022;
      v34 = 0x800000010057BAC0;
      v19 = 0x800000010057BAA0;
      v26 = "In the Next %d Months";
      goto LABEL_12;
    }
    if (v21 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.year(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000011;
      v18 = 0xD000000000000022;
      v34 = 0x800000010057BAC0;
      v19 = 0x800000010057BAA0;
      v20 = "In the Next %d Years";
      goto LABEL_7;
    }
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v0, v0);
  __break(1u);
  return result;
}

id _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO05smartE14VersionWarningSo18NSAttributedStringCvgZ_0()
{
  Swift::String v0;
  Swift::String v1;
  void *object;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  id v6;
  NSString v7;
  id v8;
  Swift::Int location;
  Swift::Int length;
  NSString v11;
  __C::_NSRange_optional v13;

  v0._object = (void *)0x800000010057C000;
  v1._object = (void *)0x800000010057C050;
  v0._countAndFlagsBits = 0x1000000000000047;
  v1._countAndFlagsBits = 0xD000000000000056;
  object = TTRLocalizedString(_:comment:)(v0, v1)._object;
  v3._countAndFlagsBits = 0x100000000000008ELL;
  v3._object = (void *)0x800000010057C0B0;
  v4._countAndFlagsBits = 0x6F6D206E7261654CLL;
  v4._object = (void *)0xAD0000A680E26572;
  v5 = TTRLocalizedString(_:comment:)(v4, v3);
  v6 = objc_allocWithZone((Class)NSMutableAttributedString);
  swift_bridgeObjectRetain(object);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v8 = objc_msgSend(v6, "initWithString:", v7);

  v13 = String.nsRange(of:)(v5);
  location = v13.value.location;
  length = v13.value.length;
  LOBYTE(v7) = v13.is_nil;
  swift_bridgeObjectRelease(v5._object);
  swift_bridgeObjectRelease(object);
  if ((v7 & 1) == 0)
  {
    v11 = String._bridgeToObjectiveC()();
    objc_msgSend(v8, "addAttribute:value:range:", NSLinkAttributeName, v11, location, length);

  }
  return v8;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO32dateOptionRelativeRangeDirectionySS19ReminderKitInternal014REMCustomSmartE16FilterDescriptorC0Q4DateO0iJ0VFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  objc_class *v16;
  unint64_t v17;
  unint64_t v18;
  const char *v19;
  int v20;
  unint64_t v21;
  const char *v22;
  unint64_t v23;
  unint64_t v24;
  NSBundle v25;
  uint64_t v26;
  unint64_t v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  unint64_t v34;
  uint64_t v35;

  v0 = sub_10002A750((uint64_t *)&unk_100663AB0);
  __chkstk_darwin(v0);
  v2 = (char *)&v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.direction.getter(v9);
  REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.units.getter(v12);
  v13 = &v2[*(int *)(v0 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v2, v11, v7);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v13, v6, v3);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v2, v7);
  if (v14 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inPast(_:))
  {
    v15 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v13, v3);
    if (v15 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.hour(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000027;
      v18 = 0xD00000000000002ALL;
      v34 = 0x800000010057BAC0;
      v19 = "LIST_DETAIL_DIRECTION_IN_THE_PAST %d HOURS";
LABEL_21:
      v23 = (unint64_t)(v19 - 32) | 0x8000000000000000;
      v24 = 0x800000010057BC40;
      v25.super.isa = v16;
      v26 = 0x5020656874206E49;
      v21 = 0xEB00000000747361;
LABEL_25:
      v27 = 0xD000000000000022;
      v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v18, *(Swift::String_optional *)&v17, v25, *(Swift::String *)(&v21 - 1), *(Swift::String *)(&v34 - 1));

      v29 = sub_10002A750((uint64_t *)&unk_100640FD0);
      v30 = swift_allocObject(v29, 72, 7);
      *(_OWORD *)(v30 + 16) = xmmword_100520250;
      v31 = REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.magnitude.getter(v30);
      *(_QWORD *)(v30 + 56) = &type metadata for Int;
      *(_QWORD *)(v30 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v30 + 32) = v31;
      v32 = static String.localizedStringWithFormat(_:_:)(v28._countAndFlagsBits, v28._object, v30);
      swift_bridgeObjectRelease(v28._object);
      swift_bridgeObjectRelease(v30);
      return v32;
    }
    if (v15 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.day(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000027;
      v18 = 0xD000000000000029;
      v34 = 0x800000010057BAC0;
      v19 = "LIST_DETAIL_DIRECTION_IN_THE_PAST %d DAYS";
      goto LABEL_21;
    }
    if (v15 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.week(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000027;
      v18 = 0xD00000000000002ALL;
      v34 = 0x800000010057BAC0;
      v19 = "LIST_DETAIL_DIRECTION_IN_THE_PAST %d WEEKS";
      goto LABEL_21;
    }
    if (v15 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.month(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000027;
      v18 = 0xD00000000000002BLL;
      v34 = 0x800000010057BAC0;
      v19 = "LIST_DETAIL_DIRECTION_IN_THE_PAST %d MONTHS";
      goto LABEL_21;
    }
    if (v15 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.year(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000027;
      v18 = 0xD00000000000002ALL;
      v34 = 0x800000010057BAC0;
      v19 = "LIST_DETAIL_DIRECTION_IN_THE_PAST %d YEARS";
      goto LABEL_21;
    }
  }
  else if (v14 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inNext(_:))
  {
    v20 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v13, v3);
    if (v20 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.hour(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000027;
      v18 = 0xD00000000000002ALL;
      v21 = 0xEB00000000747865;
      v34 = 0x800000010057BAC0;
      v22 = "LIST_DETAIL_DIRECTION_IN_THE_NEXT %d HOURS";
    }
    else if (v20 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.day(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000027;
      v18 = 0xD000000000000029;
      v21 = 0xEB00000000747865;
      v34 = 0x800000010057BAC0;
      v22 = "LIST_DETAIL_DIRECTION_IN_THE_NEXT %d DAYS";
    }
    else if (v20 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.week(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000027;
      v18 = 0xD00000000000002ALL;
      v21 = 0xEB00000000747865;
      v34 = 0x800000010057BAC0;
      v22 = "LIST_DETAIL_DIRECTION_IN_THE_NEXT %d WEEKS";
    }
    else if (v20 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.month(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000027;
      v18 = 0xD00000000000002BLL;
      v21 = 0xEB00000000747865;
      v34 = 0x800000010057BAC0;
      v22 = "LIST_DETAIL_DIRECTION_IN_THE_NEXT %d MONTHS";
    }
    else
    {
      if (v20 != enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.year(_:))
        goto LABEL_26;
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000027;
      v18 = 0xD00000000000002ALL;
      v21 = 0xEB00000000747865;
      v34 = 0x800000010057BAC0;
      v22 = "LIST_DETAIL_DIRECTION_IN_THE_NEXT %d YEARS";
    }
    v23 = (unint64_t)(v22 - 32) | 0x8000000000000000;
    v24 = 0x800000010057BC40;
    v25.super.isa = v16;
    v26 = 0x4E20656874206E49;
    goto LABEL_25;
  }
LABEL_26:
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v0, v0);
  __break(1u);
  return result;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO28dateOptionRelativeRangeUnitsySS19ReminderKitInternal014REMCustomSmartE16FilterDescriptorC0Q4DateO0iJ0VFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  objc_class *v16;
  unint64_t v17;
  unint64_t v18;
  const char *v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  NSBundle v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  const char *v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  const char *v35;
  const char *v36;
  const char *v37;
  unint64_t v38;
  uint64_t v39;

  v0 = sub_10002A750((uint64_t *)&unk_100663AB0);
  __chkstk_darwin(v0);
  v2 = (char *)&v39 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.direction.getter(v9);
  REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.units.getter(v12);
  v13 = &v2[*(int *)(v0 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v2, v11, v7);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v13, v6, v3);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v2, v7);
  if (v14 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inPast(_:))
  {
    v15 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v13, v3);
    if (v15 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.hour(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000022;
      v18 = 0xD000000000000026;
      v38 = 0x800000010057BAC0;
      v19 = "LIST_DETAIL_UNITS_IN_THE_PAST %d HOURS";
LABEL_7:
      v21 = (unint64_t)(v19 - 32) | 0x8000000000000000;
      v22 = 0x800000010057BC40;
      v23 = 0xD000000000000027;
      v24.super.isa = v16;
      v25 = 1920298824;
LABEL_8:
      v26 = v25 & 0xFFFF0000FFFFFFFFLL | 0x7300000000;
      v27 = 0xE500000000000000;
LABEL_14:
      v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v18, *(Swift::String_optional *)&v23, v24, *(Swift::String *)&v26, *(Swift::String *)&v17);

      v30 = sub_10002A750((uint64_t *)&unk_100640FD0);
      v31 = swift_allocObject(v30, 72, 7);
      *(_OWORD *)(v31 + 16) = xmmword_100520250;
      v32 = REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.magnitude.getter(v31);
      *(_QWORD *)(v31 + 56) = &type metadata for Int;
      *(_QWORD *)(v31 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v31 + 32) = v32;
      v33 = static String.localizedStringWithFormat(_:_:)(v29._countAndFlagsBits, v29._object, v31);
      swift_bridgeObjectRelease(v29._object);
      swift_bridgeObjectRelease(v31);
      return v33;
    }
    if (v15 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.day(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000022;
      v18 = 0xD000000000000025;
      v38 = 0x800000010057BAC0;
      v28 = "LIST_DETAIL_UNITS_IN_THE_PAST %d DAYS";
LABEL_13:
      v21 = (unint64_t)(v28 - 32) | 0x8000000000000000;
      v22 = 0x800000010057BC40;
      v23 = 0xD000000000000027;
      v24.super.isa = v16;
      v26 = 1937334596;
      v27 = 0xE400000000000000;
      goto LABEL_14;
    }
    if (v15 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.week(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000022;
      v18 = 0xD000000000000026;
      v38 = 0x800000010057BAC0;
      v35 = "LIST_DETAIL_UNITS_IN_THE_PAST %d WEEKS";
LABEL_19:
      v21 = (unint64_t)(v35 - 32) | 0x8000000000000000;
      v22 = 0x800000010057BC40;
      v23 = 0xD000000000000027;
      v24.super.isa = v16;
      v25 = 1801807191;
      goto LABEL_8;
    }
    if (v15 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.month(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000022;
      v38 = 0x800000010057BAC0;
      v36 = "LIST_DETAIL_UNITS_IN_THE_PAST %d MONTHS";
LABEL_24:
      v21 = (unint64_t)(v36 - 32) | 0x8000000000000000;
      v22 = 0x800000010057BC40;
      v18 = 0xD000000000000027;
      v23 = 0xD000000000000027;
      v24.super.isa = v16;
      v26 = 0x7368746E6F4DLL;
      v27 = 0xE600000000000000;
      goto LABEL_14;
    }
    if (v15 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.year(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000022;
      v18 = 0xD000000000000026;
      v38 = 0x800000010057BAC0;
      v37 = "LIST_DETAIL_UNITS_IN_THE_PAST %d YEARS";
LABEL_29:
      v21 = (unint64_t)(v37 - 32) | 0x8000000000000000;
      v22 = 0x800000010057BC40;
      v23 = 0xD000000000000027;
      v24.super.isa = v16;
      v25 = 1918985561;
      goto LABEL_8;
    }
  }
  else if (v14 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inNext(_:))
  {
    v20 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v13, v3);
    if (v20 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.hour(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000022;
      v18 = 0xD000000000000026;
      v38 = 0x800000010057BAC0;
      v19 = "LIST_DETAIL_UNITS_IN_THE_NEXT %d HOURS";
      goto LABEL_7;
    }
    if (v20 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.day(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000022;
      v18 = 0xD000000000000025;
      v38 = 0x800000010057BAC0;
      v28 = "LIST_DETAIL_UNITS_IN_THE_NEXT %d DAYS";
      goto LABEL_13;
    }
    if (v20 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.week(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000022;
      v18 = 0xD000000000000026;
      v38 = 0x800000010057BAC0;
      v35 = "LIST_DETAIL_UNITS_IN_THE_NEXT %d WEEKS";
      goto LABEL_19;
    }
    if (v20 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.month(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000022;
      v38 = 0x800000010057BAC0;
      v36 = "LIST_DETAIL_UNITS_IN_THE_NEXT %d MONTHS";
      goto LABEL_24;
    }
    if (v20 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.year(_:))
    {
      v16 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      v17 = 0xD000000000000022;
      v18 = 0xD000000000000026;
      v38 = 0x800000010057BAC0;
      v37 = "LIST_DETAIL_UNITS_IN_THE_NEXT %d YEARS";
      goto LABEL_29;
    }
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v0, v0);
  __break(1u);
  return result;
}

void _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO05smartE21HiddenInformativeText7devicesSSSaySS4name_Sb15cannotBeUpdatedtG_tFZ_0(uint64_t a1)
{
  int64_t v2;
  unsigned __int8 *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  const char *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_1003D7FFC(0, v2, 0);
    v3 = (unsigned __int8 *)(a1 + 48);
    v38 = v2;
    v4 = v2;
    do
    {
      v6 = *((_QWORD *)v3 - 2);
      v5 = *((_QWORD *)v3 - 1);
      v7 = *v3;
      swift_bridgeObjectRetain(v5);
      if (v7 == 1)
      {
        v8._countAndFlagsBits = 0xD000000000000060;
        v9._countAndFlagsBits = 0xD00000000000003CLL;
        v9._object = (void *)0x800000010057B9D0;
        v10._countAndFlagsBits = 2768933;
        v10._object = (void *)0xE300000000000000;
        v8._object = (void *)0x800000010057BA10;
        v11 = TTRLocalizedString(_:value:comment:)(v9, v10, v8);
        v12 = sub_10002A750((uint64_t *)&unk_100640FD0);
        v13 = swift_allocObject(v12, 72, 7);
        *(_OWORD *)(v13 + 16) = xmmword_100520250;
        *(_QWORD *)(v13 + 56) = &type metadata for String;
        *(_QWORD *)(v13 + 64) = sub_1000770A4();
        *(_QWORD *)(v13 + 32) = v6;
        *(_QWORD *)(v13 + 40) = v5;
        swift_bridgeObjectRetain(v5);
        v6 = static String.localizedStringWithFormat(_:_:)(v11._countAndFlagsBits, v11._object, v13);
        v15 = v14;
        swift_bridgeObjectRelease(v5);
        swift_bridgeObjectRelease(v13);
        swift_bridgeObjectRelease(v11._object);
        v5 = v15;
      }
      v17 = _swiftEmptyArrayStorage[2];
      v16 = _swiftEmptyArrayStorage[3];
      v18 = v17 + 1;
      if (v17 >= v16 >> 1)
        sub_1003D7FFC(v16 > 1, v17 + 1, 1);
      v3 += 24;
      _swiftEmptyArrayStorage[2] = v18;
      v19 = &_swiftEmptyArrayStorage[2 * v17];
      v19[4] = v6;
      v19[5] = v5;
      --v4;
    }
    while (v4);
    v2 = v38;
  }
  else
  {
    v18 = _swiftEmptyArrayStorage[2];
  }
  v20 = sub_10002A750(&qword_1006466D0);
  v21 = sub_1000923A8();
  v22 = BidirectionalCollection<>.joined(separator:)(10, 0xE100000000000000, v20, v21);
  v24 = v23;
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  if (!v2)
    goto LABEL_19;
  if ((*(_BYTE *)(a1 + 48) & 1) != 0)
  {
LABEL_12:
    if (v18 == 1)
    {
      v25 = 0x1000000000000087;
      v26 = 0xD000000000000049;
      v27 = 0x800000010057B8F0;
      v28 = "To view this Smart List everywhere, you’ll need to install the latest OS on the following device:\n"
            "\n"
            "%@\n"
            "\n"
            "* Device can’t be upgraded.\n";
    }
    else
    {
      v25 = 0x1000000000000088;
      v26 = 0xD000000000000047;
      v27 = 0x800000010057B810;
      v28 = "To view this Smart List everywhere, you’ll need to install the latest OS on the following devices:\n"
            "\n"
            "%@\n"
            "\n"
            "* Device can’t be upgraded.\n";
    }
    goto LABEL_23;
  }
  if (v2 == 1)
  {
LABEL_19:
    if (v18 == 1)
    {
      v26 = 0xD000000000000037;
      v27 = 0x800000010057B760;
      v32 = 0x800000010057B7A0;
      v33 = 0x800000010057B710;
      v25 = 0x1000000000000068;
LABEL_24:
      v34 = 0xD000000000000046;
      v35 = TTRLocalizedString(_:value:comment:)(*(Swift::String *)&v26, *(Swift::String *)&v25, *(Swift::String *)(&v33 - 1));
      v36 = sub_10002A750((uint64_t *)&unk_100640FD0);
      v37 = swift_allocObject(v36, 72, 7);
      *(_OWORD *)(v37 + 16) = xmmword_100520250;
      *(_QWORD *)(v37 + 56) = &type metadata for String;
      *(_QWORD *)(v37 + 64) = sub_1000770A4();
      *(_QWORD *)(v37 + 32) = v22;
      *(_QWORD *)(v37 + 40) = v24;
      static String.localizedStringWithFormat(_:_:)(v35._countAndFlagsBits, v35._object, v37);
      swift_bridgeObjectRelease(v35._object);
      swift_bridgeObjectRelease(v37);
      return;
    }
    v25 = 0x1000000000000069;
    v26 = 0xD000000000000035;
    v27 = 0x800000010057B660;
    v28 = "To view this Smart List everywhere, you’ll need to install the latest OS on the following devices:\n\n%@\n";
LABEL_23:
    v32 = (unint64_t)(v28 - 32) | 0x8000000000000000;
    v33 = 0x800000010057B710;
    goto LABEL_24;
  }
  v29 = (_BYTE *)(a1 + 72);
  v30 = 1;
  while (1)
  {
    v31 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if ((*v29 & 1) != 0)
      goto LABEL_12;
    ++v30;
    v29 += 24;
    if (v31 == v2)
      goto LABEL_19;
  }
  __break(1u);
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.ListDetail()
{
  return &type metadata for TTRLocalizableStrings.ListDetail;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.ListDetail.UndoAction()
{
  return &type metadata for TTRLocalizableStrings.ListDetail.UndoAction;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.ListDetail.Filters()
{
  return &type metadata for TTRLocalizableStrings.ListDetail.Filters;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.ListDetail.ConvertGroceryListToRegularListAlert()
{
  return &type metadata for TTRLocalizableStrings.ListDetail.ConvertGroceryListToRegularListAlert;
}

uint64_t sub_1004CA908(uint64_t a1, uint64_t a2)
{
  return sub_1004CC37C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)a2, *(_BYTE *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

void sub_1004CA934(uint64_t a1)
{
  _QWORD *v1;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  _QWORD *v15;
  void *v16;
  uint64_t v17;
  char v18[24];

  v3 = *(char **)(a1 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_gridView);
  v4 = objc_msgSend(v3, "subviews");
  v5 = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v17 = v6;
    else
      v17 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v6);
  if (!v7)
    sub_1004CAB1C(a1);
  v8 = (char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x78);
  swift_beginAccess(v8, v18, 0, 0);
  v9 = v8[8];
  v10 = &v3[OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_indexOfSelectedItem];
  *(_QWORD *)v10 = *(_QWORD *)v8;
  v10[8] = v9;
  v11 = (uint64_t)sub_100245324();
  v12 = v11;
  if ((unint64_t)v11 >> 62)
  {
    if (v11 >= 0)
      v11 &= 0xFFFFFFFFFFFFFF8uLL;
    v13 = _CocoaArrayWrapper.endIndex.getter(v11);
    if (!v13)
      goto LABEL_20;
  }
  else
  {
    v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v13)
    {
LABEL_20:
      swift_bridgeObjectRelease(v12);
      return;
    }
  }
  if (v13 >= 1)
  {
    for (i = 0; i != v13; ++i)
    {
      if ((v12 & 0xC000000000000001) != 0)
        v15 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v12);
      else
        v15 = *(id *)(v12 + 8 * i + 32);
      v16 = v15;
      (*(void (**)(_QWORD))((swift_isaMask & *v15) + 0x1B8))((i == *(_QWORD *)v10) & ~v10[8]);

    }
    goto LABEL_20;
  }
  __break(1u);
}

void sub_1004CAB1C(uint64_t a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[6];

  v3 = objc_msgSend((id)objc_opt_self(UIColor), "quaternarySystemFillColor");
  v4 = *(void **)TTRCommonAsset.Color.emblemPickerForeground.unsafeMutableAddressor();
  v5 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeView);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeView) = 0;
  v6 = v4;

  v7 = a1 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeViewIndex;
  *(_QWORD *)v7 = 0;
  *(_BYTE *)(v7 + 8) = 1;
  v8 = *(_QWORD *)(v1 + qword_100663AC8);
  v15[2] = v3;
  v15[3] = v6;
  v15[4] = a1;
  swift_bridgeObjectRetain(v8);
  v10 = (uint64_t)sub_1004CC400(v9, (uint64_t (*)(uint64_t, id, uint64_t, uint64_t, id))sub_1004CC67C, (uint64_t)v15);
  swift_bridgeObjectRelease(v8);
  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v13 = v10;
    else
      v13 = v10 & 0xFFFFFFFFFFFFFF8;
    v14 = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
    swift_bridgeObjectRetain(v10);
    v12 = _bridgeCocoaArray<A>(_:)(v13, v14);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    swift_bridgeObjectRetain(v10);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v11);
    sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
    v12 = v10;
  }
  swift_bridgeObjectRelease(v10);
  TTRListAppearanceGridView.arrangedSubviews.setter(v12);

}

uint64_t sub_1004CAC98(uint64_t a1)
{
  uint64_t v1;

  v1 = a1 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_delegate;
  *(_QWORD *)(v1 + 8) = 0;
  return swift_unknownObjectWeakAssign(v1, 0);
}

uint64_t sub_1004CACB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = a1 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_delegate;
  *(_QWORD *)(v2 + 8) = &off_10060BBE0;
  return swift_unknownObjectWeakAssign(v2, v1);
}

_QWORD *sub_1004CACD0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  void **v19;
  void (*v20)(void *);
  id v21;
  void (*v22)(void *);
  id v23;
  void (*v24)(uint64_t, uint64_t, __n128);
  __n128 v25;
  void *v26;
  void (*v27)(_QWORD *);
  id v28;
  void *v29;
  _QWORD *v30;
  uint64_t v31;
  _BYTE v33[24];
  _BYTE v34[24];
  _QWORD v35[5];

  v16 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TTRListBadgeView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17 = v16;
  if (a5)
  {
    objc_msgSend(v16, "setTintColor:", a6);

  }
  else
  {
    v18 = (_QWORD *)UIColor.emojiBadgeSelectionBackgroundColor.unsafeMutableAddressor();
    objc_msgSend(v17, "setTintColor:", *v18, swift_beginAccess(v18, v33, 0, 0).n128_f64[0]);

    v19 = (void **)UIColor.emojiBadgeHighlightColor.unsafeMutableAddressor();
    swift_beginAccess(v19, v34, 0, 0);
    a7 = *v19;
  }
  v20 = *(void (**)(void *))((swift_isaMask & *v17) + 0x188);
  v21 = a7;
  v20(a7);
  v22 = *(void (**)(void *))((swift_isaMask & *v17) + 0x140);
  v23 = a2;
  v22(a2);
  v24 = *(void (**)(uint64_t, uint64_t, __n128))((swift_isaMask & *v17) + 0x390);
  v25 = swift_bridgeObjectRetain(a4);
  v24(a3, a4, v25);
  (*(void (**)(uint64_t))((swift_isaMask & *v17) + 0x3C0))(1);
  TTRListBadgeView.enableCursorInteraction()();
  if (qword_10063D870 != -1)
    swift_once(&qword_10063D870, sub_1004CB050);
  TTRListBadgeView.enableHoverEffectIfApplicable(padding:)(*(double *)&qword_1006739D8 * 0.5);
  v26 = *(void **)(a8 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_gridView);
  v35[3] = type metadata accessor for TTRListAppearanceBadgeGridView();
  v35[4] = &off_1005F8BC0;
  v35[0] = v26;
  v27 = *(void (**)(_QWORD *))((swift_isaMask & *v17) + 0x3E8);
  v28 = v26;
  v27(v35);
  if (!a5)
  {
    v29 = *(void **)(a8 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeView);
    *(_QWORD *)(a8 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeView) = v17;
    v30 = v17;

    v31 = a8 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeViewIndex;
    *(_QWORD *)v31 = a1;
    *(_BYTE *)(v31 + 8) = 0;
  }
  return v17;
}

uint64_t sub_1004CAEFC()
{
  uint64_t v0;

  sub_1000381B8(*(_QWORD *)(v0 + qword_100663AC0), *(_QWORD *)(v0 + qword_100663AC0 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_100663AC8));
  return swift_unknownObjectWeakDestroy(v0 + qword_100663AD0);
}

uint64_t sub_1004CAF3C(uint64_t a1)
{
  sub_1000381B8(*(_QWORD *)(a1 + qword_100663AC0), *(_QWORD *)(a1 + qword_100663AC0 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100663AC8));
  return swift_unknownObjectWeakDestroy(a1 + qword_100663AD0);
}

uint64_t type metadata accessor for TTRIListDetailEmblemsContent(uint64_t a1)
{
  uint64_t result;

  result = qword_100663B00;
  if (!qword_100663B00)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIListDetailEmblemsContent);
  return result;
}

uint64_t sub_1004CAFC4(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = &unk_100539890;
  v2[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[2] = &unk_1005398A8;
  return swift_initClassMetadata2(a1, 256, 3, v2, a1 + 232);
}

void sub_1004CB01C()
{
  _swift_stdlib_reportUnimplementedInitializer("Reminders.TTRIListDetailEmblemsContent", 38, "init(state:prototypeCellView:reuseIdentifier:)", 46, 0);
  __break(1u);
}

uint64_t sub_1004CB048()
{
  return type metadata accessor for TTRIListDetailEmblemsContent(0);
}

void sub_1004CB050()
{
  qword_1006739D8 = 0x4024000000000000;
}

id sub_1004CB060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  objc_class *ObjectType;
  char *v7;
  char *v8;
  id v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  char *v16;
  double v17;
  NSString v18;
  id v19;
  char *v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  Class isa;
  char *v44;
  Swift::String v45;
  Swift::String v46;
  void *object;
  NSString v48;
  objc_super v50;

  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeView] = 0;
  v7 = &v3[OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeViewIndex];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  v8 = &v3[OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_delegate];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8, 0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell____lazy_storage___emojiTextField] = 0;
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiCoverView], 0);
  v3[OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiWasSelected] = 0;
  v9 = objc_allocWithZone((Class)type metadata accessor for TTRListAppearanceBadgeGridView());
  v10 = v3;
  v11 = objc_msgSend(v9, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  TTRListAppearanceGridView.badgeSize.setter(40.0, 40.0);
  v12 = v11;
  TTRListAppearanceGridView.horizontalMargins.setter(0x4030000000000000, 0);

  v13 = v12;
  TTRListAppearanceGridView.topMargin.setter(0x4030000000000000, 0);

  v14 = qword_10063D870;
  v15 = v13;
  if (v14 != -1)
    swift_once(&qword_10063D870, sub_1004CB050);
  TTRListAppearanceGridView.minimumGap.setter(*(double *)&qword_1006739D8);

  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v10[OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_gridView] = v15;
  v16 = (char *)v15;

  if (a3)
  {
    v18 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v17 = swift_bridgeObjectRelease(a3).n128_u64[0];
  }
  else
  {
    v18 = 0;
  }
  v50.receiver = v10;
  v50.super_class = ObjectType;
  v19 = objc_msgSendSuper2(&v50, "initWithStyle:reuseIdentifier:", a1, v18, v17);

  v20 = &v16[OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_delegate];
  *((_QWORD *)v20 + 1) = &off_10060BBC8;
  swift_unknownObjectWeakAssign(v20, v19);
  v21 = v19;
  v22 = objc_msgSend(v21, "contentView");
  objc_msgSend(v22, "addSubview:", v16);

  v23 = (void *)objc_opt_self(NSLayoutConstraint);
  v24 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v25 = swift_allocObject(v24, 64, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100520050;
  v26 = objc_msgSend(v21, "contentView");
  v27 = objc_msgSend(v26, "leadingAnchor");

  v28 = objc_msgSend(v16, "leadingAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v25 + 32) = v29;
  v30 = objc_msgSend(v21, "contentView");
  v31 = objc_msgSend(v30, "trailingAnchor");

  v32 = objc_msgSend(v16, "trailingAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

  *(_QWORD *)(v25 + 40) = v33;
  v34 = objc_msgSend(v21, "contentView");
  v35 = objc_msgSend(v34, "topAnchor");

  v36 = objc_msgSend(v16, "topAnchor");
  v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

  *(_QWORD *)(v25 + 48) = v37;
  v38 = objc_msgSend(v21, "contentView");
  v39 = objc_msgSend(v38, "bottomAnchor");

  v40 = objc_msgSend(v16, "bottomAnchor");
  v41 = objc_msgSend(v39, "constraintEqualToAnchor:", v40);

  *(_QWORD *)(v25 + 56) = v41;
  specialized Array._endMutation()(v42);
  sub_100005ED8(0, (unint64_t *)&qword_10064BB60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v23, "activateConstraints:", isa, swift_bridgeObjectRelease(v25).n128_f64[0]);

  objc_msgSend(v16, "setAccessibilityContainerType:", 4);
  v44 = v16;
  v45._object = (void *)0x800000010057C370;
  v46._countAndFlagsBits = 0x736E6F6349;
  v46._object = (void *)0xE500000000000000;
  v45._countAndFlagsBits = 0xD000000000000040;
  object = TTRLocalizedString(_:comment:)(v46, v45)._object;
  v48 = String._bridgeToObjectiveC()();
  objc_msgSend(v44, "setAccessibilityLabel:", v48, swift_bridgeObjectRelease(object).n128_f64[0]);

  return v21;
}

id sub_1004CB64C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell____lazy_storage___emojiTextField;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell____lazy_storage___emojiTextField);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell____lazy_storage___emojiTextField);
  }
  else
  {
    v4 = sub_1004CB6AC(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1004CB6AC(uint64_t a1)
{
  uint64_t Strong;
  uint64_t v3;
  void *v4;
  id v5;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_delegate);
  if (Strong)
  {
    v3 = Strong;
    v4 = (void *)swift_unknownObjectWeakLoadStrong(Strong + qword_100663AD0);
    swift_unknownObjectRelease(v3);
  }
  else
  {
    v4 = 0;
  }
  v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for EmojiTextField()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v5, "setDelegate:", a1);
  if (v4)
    objc_msgSend(v4, "addSubview:", v5);
  objc_msgSend(v5, "setKeyboardType:", 124);
  objc_msgSend(v5, "setBorderStyle:", 0);
  objc_msgSend(v5, "setAlpha:", 0.0);
  objc_msgSend(v5, "setBackgroundColor:", 0);
  objc_msgSend(v5, "setForceDisableDictation:", 1);
  objc_msgSend(v5, "setTextAlignment:", 1);

  return v5;
}

void sub_1004CB7E0()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  NSString v8;
  id v9;
  uint64_t v10;
  id v11;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_delegate);
  if (Strong)
  {
    v2 = Strong;
    v3 = (void *)swift_unknownObjectWeakLoadStrong(Strong + qword_100663AD0);
    swift_unknownObjectRelease(v2);
    if (v3)
    {
      *(_BYTE *)(v0 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiWasSelected) = 0;
      v4 = (id)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiCoverView);
      if (!v4)
        v4 = sub_1004CB958(v3, v0);
      v5 = sub_1004CB64C();
      objc_msgSend(v3, "insertSubview:belowSubview:", v5, v4);

      v6 = sub_1004CB64C();
      objc_msgSend(v6, "setHidden:", 0);

      sub_1004CBADC();
      v7 = sub_1004CB64C();
      v8 = String._bridgeToObjectiveC()();
      objc_msgSend(v7, "setText:", v8);

      v9 = sub_1004CB64C();
      v10 = type metadata accessor for EmojiTextField();
      UITextInput<>.ttrBeginEditing()(v10);

      LODWORD(v9) = UIAccessibilityLayoutChangedNotification;
      v11 = (id)TTRIAccessibilityKeyboardWindow();
      UIAccessibilityPostNotification((UIAccessibilityNotifications)v9, v11);

    }
  }
}

id sub_1004CB958(void *a1, uint64_t a2)
{
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  Class isa;

  objc_msgSend(a1, "bounds");
  v8 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v4, v5, v6, v7);
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v8, "setBackgroundColor:", 0);
  v9 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", a2, "cancelEmojiSelection");
  objc_msgSend(v8, "addGestureRecognizer:", v9);
  objc_msgSend(a1, "addSubview:", v8);
  v10 = (void *)objc_opt_self(NSLayoutConstraint);
  v11 = UIView.constraintsEqualTo(_:edges:)(a1, 15);
  sub_100005ED8(0, (unint64_t *)&qword_10064BB60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v10, "activateConstraints:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

  swift_unknownObjectWeakAssign(a2 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiCoverView, v8);
  return v8;
}

void sub_1004CBADC()
{
  uint64_t v0;
  void *v1;
  id v2;
  unsigned __int8 v3;
  id v4;
  id v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  void *v14;
  double v15;
  double v16;
  double x;
  double y;
  double width;
  double height;
  id v21;
  id v22;
  void *v23;
  id v24;
  _QWORD *v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeView);
  if (v1)
  {
    v25 = v1;
    v2 = sub_1004CB64C();
    v3 = objc_msgSend(v2, "isHidden");

    if ((v3 & 1) == 0)
    {
      v4 = sub_1004CB64C();
      v5 = objc_msgSend(v4, "superview");

      if (v5)
      {
        objc_msgSend(v25, "bounds");
        objc_msgSend(v5, "convertRect:fromCoordinateSpace:", v25);
        v7 = v6;
        v9 = v8;
        v11 = v10;
        v13 = v12;

        v14 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v25) + 0x210))();
        v16 = v15;

        v26.origin.x = v7;
        v26.origin.y = v9;
        v26.size.width = v11;
        v26.size.height = v13;
        v27 = CGRectInset(v26, -(v16 + 3.0), -(v16 + 3.0));
        x = v27.origin.x;
        y = v27.origin.y;
        width = v27.size.width;
        height = v27.size.height;
        v21 = sub_1004CB64C();
        objc_msgSend(v21, "setFrame:", x, y, width, height);

        v22 = sub_1004CB64C();
        v23 = (void *)objc_opt_self(UIFont);
        v28.origin.x = x;
        v28.origin.y = y;
        v28.size.width = width;
        v28.size.height = height;
        v24 = objc_msgSend(v23, "systemFontOfSize:", round(CGRectGetHeight(v28)));
        objc_msgSend(v22, "setFont:", v24);

      }
    }

  }
}

void sub_1004CBCD8()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  void *Strong;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  char v23[24];

  v1 = sub_1004CB64C();
  objc_msgSend(v1, "resignFirstResponder");

  v2 = sub_1004CB64C();
  objc_msgSend(v2, "setHidden:", 1);

  v3 = v0 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiCoverView;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiCoverView);
  if (Strong)
  {
    v5 = Strong;
    objc_msgSend(Strong, "removeFromSuperview");

  }
  swift_unknownObjectWeakAssign(v3, 0);
  v6 = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_delegate);
  if (v6)
  {
    v7 = (_QWORD *)v6;
    v8 = *(char **)(v0 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_gridView);
    v9 = objc_msgSend(v8, "subviews");
    v10 = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
    v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

    if ((unint64_t)v11 >> 62)
    {
      if (v11 < 0)
        v22 = v11;
      else
        v22 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v11);
      v12 = _CocoaArrayWrapper.endIndex.getter(v22);
      swift_bridgeObjectRelease(v11);
    }
    else
    {
      v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v11);
    if (!v12)
      sub_1004CAB1C(v0);
    v13 = (char *)v7 + *(_QWORD *)((swift_isaMask & *v7) + 0x78);
    swift_beginAccess(v13, v23, 0, 0);
    v14 = v13[8];
    v15 = &v8[OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_indexOfSelectedItem];
    *(_QWORD *)v15 = *(_QWORD *)v13;
    v15[8] = v14;
    v16 = (uint64_t)sub_100245324();
    v17 = v16;
    if ((unint64_t)v16 >> 62)
    {
      if (v16 >= 0)
        v16 &= 0xFFFFFFFFFFFFFF8uLL;
      v18 = _CocoaArrayWrapper.endIndex.getter(v16);
      if (v18)
        goto LABEL_10;
    }
    else
    {
      v18 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v18)
      {
LABEL_10:
        if (v18 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v18; ++i)
        {
          if ((v17 & 0xC000000000000001) != 0)
            v20 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v17);
          else
            v20 = *(id *)(v17 + 8 * i + 32);
          v21 = v20;
          (*(void (**)(_QWORD))((swift_isaMask & *v20) + 0x1B8))((i == *(_QWORD *)v15) & ~v15[8]);

        }
      }
    }
    swift_unknownObjectRelease(v7);
    swift_bridgeObjectRelease(v17);
  }
}

uint64_t type metadata accessor for TTRIListDetailEmblemsTableCell()
{
  return objc_opt_self(_TtC9Reminders30TTRIListDetailEmblemsTableCell);
}

void sub_1004CC104(uint64_t a1, uint64_t a2)
{
  sub_1004CC540(a2);
}

uint64_t type metadata accessor for EmojiTextField()
{
  return objc_opt_self(_TtC9RemindersP33_4FE8BD245B420E02FDB196B5E5563CD014EmojiTextField);
}

uint64_t destroy for TTRIListDetailEmblemsContentState(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for TTRIListDetailEmblemsContentState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for TTRIListDetailEmblemsContentState(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 16) = a2[2];
  v4 = a2[3];
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t assignWithTake for TTRIListDetailEmblemsContentState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIListDetailEmblemsContentState(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIListDetailEmblemsContentState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIListDetailEmblemsContentState()
{
  return &type metadata for TTRIListDetailEmblemsContentState;
}

uint64_t sub_1004CC37C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;

  if ((a2 & 1) != 0)
  {
    if ((a6 & 1) == 0)
      return 0;
LABEL_6:
    if (a4)
    {
      if (a8)
      {
        if (a3 == a7 && a4 == a8)
          return 1;
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a7, a8, 0) & 1) != 0)
          return 1;
      }
    }
    else if (!a8)
    {
      return 1;
    }
    return 0;
  }
  result = 0;
  if ((a6 & 1) == 0 && a1 == a5)
    goto LABEL_6;
  return result;
}

_QWORD *sub_1004CC400(uint64_t a1, uint64_t (*a2)(uint64_t, id, uint64_t, uint64_t, id), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  id *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  specialized ContiguousArray.reserveCapacity(_:)(0);
  v6 = *(_QWORD *)(a1 + 16);
  v22 = a1;
  swift_bridgeObjectRetain(a1);
  if (v6)
  {
    v7 = 0;
    v8 = (id *)(a1 + 56);
    do
    {
      v10 = (uint64_t)*(v8 - 1);
      v9 = *v8;
      v11 = a3;
      v12 = *(v8 - 3);
      v13 = (uint64_t)*(v8 - 2);
      v14 = *v8;
      v15 = v12;
      swift_bridgeObjectRetain(v10);
      v16 = v13;
      a3 = v11;
      v17 = a2(v7, v15, v16, v10, v9);

      swift_bridgeObjectRelease(v10);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v18);
      v19 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
      v20 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
      specialized ContiguousArray._endMutation()(v20);
      v8 += 4;
      ++v7;
    }
    while (v6 != v7);
  }
  swift_bridgeObjectRelease(v22);
  return _swiftEmptyArrayStorage;
}

void sub_1004CC540(uint64_t a1)
{
  uint64_t v1;
  id v3;
  id v4;
  uint64_t v5;
  void *Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, _QWORD, _QWORD, _QWORD);
  uint64_t v11;

  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeViewIndex + 8) & 1) != 0
    || *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeViewIndex) != a1)
  {
    v3 = sub_1004CB64C();
    objc_msgSend(v3, "resignFirstResponder");

    v4 = sub_1004CB64C();
    objc_msgSend(v4, "setHidden:", 1);

    v5 = v1 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiCoverView;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiCoverView);
    if (Strong)
    {
      v7 = Strong;
      objc_msgSend(Strong, "removeFromSuperview");

    }
    swift_unknownObjectWeakAssign(v5, 0);
    v8 = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_delegate);
    if (v8)
    {
      v9 = v8;
      v10 = *(void (**)(uint64_t, _QWORD, _QWORD, _QWORD))(v8 + qword_100663AC0);
      if (v10)
      {
        v11 = *(_QWORD *)(v8 + qword_100663AC0 + 8);
        swift_retain();
        v10(a1, 0, 0, 0);
        sub_1000381B8((uint64_t)v10, v11);
      }
      swift_unknownObjectRelease(v9);
    }
  }
  else
  {
    sub_1004CB7E0();
  }
}

_QWORD *sub_1004CC67C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_1004CACD0(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), *(void **)(v5 + 24), *(_QWORD *)(v5 + 32));
}

void sub_1004CC688()
{
  _BYTE *v0;
  char *v1;
  char *v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeView] = 0;
  v1 = &v0[OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeViewIndex];
  *(_QWORD *)v1 = 0;
  v1[8] = 1;
  v2 = &v0[OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_delegate];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2, 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell____lazy_storage___emojiTextField] = 0;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiCoverView], 0);
  v0[OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiWasSelected] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010055F310, "Reminders/TTRIListDetailEmblemsCellContent.swift", 48, 2, 153, 0);
  __break(1u);
}

uint64_t sub_1004CC74C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSString v6;
  int IsSingleEmoji;
  uint64_t Strong;
  uint64_t v9;
  void (*v10)(_QWORD, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v11;
  __n128 v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;

  v3 = v2;
  v6 = String._bridgeToObjectiveC()();
  IsSingleEmoji = CEMStringIsSingleEmoji();

  if (IsSingleEmoji)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_delegate);
    if (Strong)
    {
      v9 = Strong;
      v10 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t, __n128))(Strong + qword_100663AC0);
      if (v10)
      {
        v11 = *(_QWORD *)(Strong + qword_100663AC0 + 8);
        sub_100053DE4(*(_QWORD *)(Strong + qword_100663AC0), v11);
        v12 = swift_bridgeObjectRetain(a2);
        v10(0, 1, a1, a2, v12);
        sub_1000381B8((uint64_t)v10, v11);
        swift_unknownObjectRelease(v9);
        swift_bridgeObjectRelease(a2);
      }
      else
      {
        swift_unknownObjectRelease(Strong);
      }
    }
    *(_BYTE *)(v3 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiWasSelected) = 1;
  }
  v13 = sub_1004CB64C();
  objc_msgSend(v13, "resignFirstResponder");

  v14 = sub_1004CB64C();
  objc_msgSend(v14, "setHidden:", 1);

  v15 = v3 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiCoverView;
  v16 = (void *)swift_unknownObjectWeakLoadStrong(v15);
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v16, "removeFromSuperview");

  }
  swift_unknownObjectWeakAssign(v15, 0);
  return 1;
}

uint64_t sub_1004CC8AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id *v43;
  unint64_t v44;

  v42 = a1;
  v5 = type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
  v41 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v40 = (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v39 = (uint64_t)&v37 - v9;
  __chkstk_darwin(v8);
  v11 = (char *)&v37 - v10;
  v12 = type metadata accessor for TTRIRemindersBoardDragItemSources.Source(0);
  __chkstk_darwin(v12);
  v15 = (id *)((char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44 = (unint64_t)_swiftEmptyArrayStorage;
  v16 = *(_QWORD *)(a3 + 16);
  if (v16)
  {
    v17 = a3 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v18 = *(_QWORD *)(v13 + 72);
    v38 = a2;
    swift_unknownObjectRetain(a2);
    v37 = a3;
    swift_bridgeObjectRetain(a3);
    v19 = _swiftEmptyArrayStorage;
    v20 = _swiftEmptyArrayStorage;
    v43 = v15;
    do
    {
      sub_10002B1E8(v17, (uint64_t)v15, type metadata accessor for TTRIRemindersBoardDragItemSources.Source);
      if (swift_getEnumCaseMultiPayload(v15, v12) == 1)
      {
        v23 = v11;
        v24 = v20;
        v25 = v19;
        v26 = v18;
        v27 = v12;
        v28 = *v15;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
        v30 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v29 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v30 >= v29 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
        v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v28);
        specialized Array._endMutation()(v31);

        v12 = v27;
        v18 = v26;
        v19 = v25;
        v20 = v24;
        v11 = v23;
      }
      else
      {
        sub_10001F580((uint64_t)v15, (uint64_t)v11, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
        if ((static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v11, v42) & 1) != 0)
        {
          sub_10002B1E8((uint64_t)v11, v39, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
          if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
            v20 = (_QWORD *)sub_100455AD4(0, v20[2] + 1, 1, (unint64_t)v20);
          v33 = v20[2];
          v32 = v20[3];
          if (v33 >= v32 >> 1)
            v20 = (_QWORD *)sub_100455AD4(v32 > 1, v33 + 1, 1, (unint64_t)v20);
          v20[2] = v33 + 1;
          v22 = (uint64_t)v20
              + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))
              + *(_QWORD *)(v41 + 72) * v33;
          v21 = v39;
        }
        else
        {
          sub_10002B1E8((uint64_t)v11, v40, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
          if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
            v19 = (_QWORD *)sub_100455AD4(0, v19[2] + 1, 1, (unint64_t)v19);
          v35 = v19[2];
          v34 = v19[3];
          if (v35 >= v34 >> 1)
            v19 = (_QWORD *)sub_100455AD4(v34 > 1, v35 + 1, 1, (unint64_t)v19);
          v19[2] = v35 + 1;
          v21 = v40;
          v22 = (uint64_t)v19
              + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))
              + *(_QWORD *)(v41 + 72) * v35;
        }
        sub_10001F580(v21, v22, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
        sub_10001F544((uint64_t)v11, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
      }
      v17 += v18;
      --v16;
      v15 = v43;
    }
    while (v16);
    swift_bridgeObjectRelease(v37);
    return v38;
  }
  else
  {
    swift_unknownObjectRetain(a2);
  }
  return a2;
}

uint64_t (*sub_1004CCC64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>))(_BYTE *, _QWORD)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t (*v12)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t (*result)(_BYTE *, _QWORD);
  _QWORD *v15;
  _QWORD *v16;
  _BYTE v17[32];

  v6 = type metadata accessor for TTRAdjustedIndexPath(0);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
  __chkstk_darwin(v9);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002B1E8(a1, (uint64_t)v11, v12);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v9);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      return (uint64_t (*)(_BYTE *, _QWORD))sub_10001F580((uint64_t)v11, a3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
    }
    else
    {
      sub_10001F580((uint64_t)v11, a3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
      result = (uint64_t (*)(_BYTE *, _QWORD))IndexPath.item.modify(v17);
      if (__OFADD__(*v16, 1))
      {
        __break(1u);
      }
      else
      {
        ++*v16;
        return (uint64_t (*)(_BYTE *, _QWORD))result(v17, 0);
      }
    }
  }
  else
  {
    sub_10001F580((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath);
    v15 = sub_1004CCFB8(a2);
    TTRAdjustedIndexPath.unadjusted(forOriginalItemIndexPaths:)(v15);
    swift_bridgeObjectRelease(v15);
    return (uint64_t (*)(_BYTE *, _QWORD))sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath);
  }
  return result;
}

void (*sub_1004CCDD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>))(_BYTE *, _QWORD)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t (*v15)(_QWORD);
  int EnumCaseMultiPayload;
  _QWORD *v17;
  uint64_t v18;
  void (*result)(_BYTE *, _QWORD);
  _QWORD *v20;
  _QWORD *v21;
  _BYTE v22[32];

  v6 = type metadata accessor for TTRUnadjustedIndexPath(0);
  __chkstk_darwin(v6);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v22[-v10];
  v12 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002B1E8(a1, (uint64_t)v14, v15);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v12);
  if (!EnumCaseMultiPayload)
    return (void (*)(_BYTE *, _QWORD))sub_10001F580((uint64_t)v14, a3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath);
  if (EnumCaseMultiPayload == 1)
  {
    sub_10001F580((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
    v17 = sub_1004CCFB8(a2);
    TTRUnadjustedIndexPath.adjusted(forOriginalItemIndexPaths:)();
    swift_bridgeObjectRelease(v17);
    v18 = (uint64_t)v11;
  }
  else
  {
    sub_10001F580((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
    result = (void (*)(_BYTE *, _QWORD))IndexPath.item.modify(v22);
    if (__OFADD__(*v20, 1))
    {
      __break(1u);
      return result;
    }
    ++*v20;
    result(v22, 0);
    sub_10002B1E8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
    v21 = sub_1004CCFB8(a2);
    TTRUnadjustedIndexPath.adjusted(forOriginalItemIndexPaths:)();
    swift_bridgeObjectRelease(v21);
    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
    v18 = (uint64_t)v11;
  }
  return (void (*)(_BYTE *, _QWORD))sub_10001F544(v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
}

_QWORD *sub_1004CCFB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v18 = type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
  v2 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    v19 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(a1);
    sub_1003D80C8(0, v9, 0);
    v11 = *(unsigned __int8 *)(v2 + 80);
    v16 = a1;
    v12 = a1 + ((v11 + 32) & ~v11);
    v17 = *(_QWORD *)(v2 + 72);
    do
    {
      sub_10002B1E8(v12, (uint64_t)v4, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, &v4[*(int *)(v18 + 20)], v5);
      sub_10001F544((uint64_t)v4, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
      v10 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
      {
        sub_1003D80C8(0, v10[2] + 1, 1);
        v10 = v19;
      }
      v14 = v10[2];
      v13 = v10[3];
      if (v14 >= v13 >> 1)
      {
        sub_1003D80C8(v13 > 1, v14 + 1, 1);
        v10 = v19;
      }
      v10[2] = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))((unint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v14, v8, v5);
      v19 = v10;
      v12 += v17;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease(v16);
  }
  return v10;
}

uint64_t sub_1004CD1A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  Swift::String v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  Swift::String v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  unint64_t v45;
  Swift::String v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;

  v62 = type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
  v6 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    v58 = a2;
    v59 = a3;
    v64 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(a1);
    sub_1003D7FFC(0, v9, 0);
    v11 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v12 = *(_QWORD *)(v6 + 72);
    v60 = a1;
    v61 = v12;
    v13 = v64;
    do
    {
      v14 = sub_10002B1E8(v11, (uint64_t)v8, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
      v15 = IndexPath.description.getter(v14);
      v17 = v16;
      sub_10001F544((uint64_t)v8, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
      if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      {
        sub_1003D7FFC(0, *(_QWORD *)(v13 + 16) + 1, 1);
        v13 = v64;
      }
      v19 = *(_QWORD *)(v13 + 16);
      v18 = *(_QWORD *)(v13 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1003D7FFC(v18 > 1, v19 + 1, 1);
        v13 = v64;
      }
      *(_QWORD *)(v13 + 16) = v19 + 1;
      v20 = v13 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v15;
      *(_QWORD *)(v20 + 40) = v17;
      v11 += v61;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease(v60);
    v64 = v13;
    v21 = sub_10002A750(&qword_1006466D0);
    v22 = sub_1000923A8();
    v23 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v21, v22);
    v25 = v24;
    swift_release();
    v64 = 0x202D206C61636F6CLL;
    v65 = 0xE800000000000000;
    v26._countAndFlagsBits = v23;
    v26._object = v25;
    String.append(_:)(v26);
    swift_bridgeObjectRelease(v25);
    v27 = v64;
    v28 = v65;
    v29 = sub_10001D840(0, 1, 1, _swiftEmptyArrayStorage);
    v10 = v29;
    v31 = v29[2];
    v30 = v29[3];
    if (v31 >= v30 >> 1)
      v10 = sub_10001D840((_QWORD *)(v30 > 1), v31 + 1, 1, v29);
    a2 = v58;
    a3 = v59;
    v10[2] = v31 + 1;
    v32 = &v10[2 * v31];
    v32[4] = v27;
    v32[5] = v28;
  }
  v33 = *(_QWORD *)(a2 + 16);
  if (v33)
  {
    v64 = 0;
    v65 = 0xE000000000000000;
    _StringGuts.grow(_:)(18);
    v34 = v65;
    v63 = v33;
    v35 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v37 = v36;
    swift_bridgeObjectRelease(v34);
    v64 = v35;
    v65 = v37;
    v38._object = (void *)0x800000010057C3F0;
    v38._countAndFlagsBits = 0xD000000000000010;
    String.append(_:)(v38);
    v39 = v64;
    v40 = v65;
    if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
      v10 = sub_10001D840(0, v10[2] + 1, 1, v10);
    v42 = v10[2];
    v41 = v10[3];
    if (v42 >= v41 >> 1)
      v10 = sub_10001D840((_QWORD *)(v41 > 1), v42 + 1, 1, v10);
    v10[2] = v42 + 1;
    v43 = &v10[2 * v42];
    v43[4] = v39;
    v43[5] = v40;
  }
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v56 = a3;
    else
      v56 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v57 = _CocoaArrayWrapper.endIndex.getter(v56);
    swift_bridgeObjectRelease(a3);
    if (!v57)
      goto LABEL_24;
    swift_bridgeObjectRetain(a3);
    v44 = _CocoaArrayWrapper.endIndex.getter(v56);
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v44 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v44)
      goto LABEL_24;
  }
  v63 = v44;
  v64 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v65 = v45;
  v46._countAndFlagsBits = 0x726568746F207820;
  v46._object = (void *)0xE900000000000073;
  String.append(_:)(v46);
  v47 = v64;
  v48 = v65;
  if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
    v10 = sub_10001D840(0, v10[2] + 1, 1, v10);
  v50 = v10[2];
  v49 = v10[3];
  if (v50 >= v49 >> 1)
    v10 = sub_10001D840((_QWORD *)(v49 > 1), v50 + 1, 1, v10);
  v10[2] = v50 + 1;
  v51 = &v10[2 * v50];
  v51[4] = v47;
  v51[5] = v48;
LABEL_24:
  v64 = (uint64_t)v10;
  v52 = sub_10002A750(&qword_1006466D0);
  v53 = sub_1000923A8();
  v54 = BidirectionalCollection<>.joined(separator:)(8251, 0xE200000000000000, v52, v53);
  swift_bridgeObjectRelease(v10);
  return v54;
}

uint64_t type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(uint64_t a1)
{
  return sub_100007328(a1, qword_100663DD8, (uint64_t)&nominal type descriptor for TTRIRemindersBoardDragItemSources.ItemInfo);
}

uint64_t type metadata accessor for TTRIRemindersBoardDragItemSources.Source(uint64_t a1)
{
  return sub_100007328(a1, qword_100663D48, (uint64_t)&nominal type descriptor for TTRIRemindersBoardDragItemSources.Source);
}

uint64_t destroy for TTRIRemindersBoardDragItemSources(_QWORD *a1)
{
  swift_unknownObjectRelease(*a1);
  return swift_bridgeObjectRelease(a1[1]);
}

uint64_t *_s9Reminders33TTRIRemindersBoardDragItemSourcesVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_unknownObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t *assignWithCopy for TTRIRemindersBoardDragItemSources(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_unknownObjectRetain(v5);
  swift_unknownObjectRelease(v4);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

_QWORD *assignWithTake for TTRIRemindersBoardDragItemSources(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_unknownObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for TTRIRemindersBoardDragItemSources()
{
  return &type metadata for TTRIRemindersBoardDragItemSources;
}

void **sub_1004CD760(void **a1, void **a2, uint64_t a3)
{
  int v5;
  void *v7;
  id v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  void *v16;
  id v17;
  void **v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  void **v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void **v28;
  void **v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(void **, uint64_t, uint64_t);
  id v33;
  uint64_t v34;
  void *v35;
  id v36;
  void **v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  void *v56;
  id v57;
  int *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void **v64;
  void **v65;
  int v66;
  uint64_t v67;
  void *v68;
  id v69;
  void **v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  void **v80;
  void **v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int (*v84)(void **, uint64_t, uint64_t);
  id v85;
  uint64_t v86;
  void **v87;
  void *v88;
  void **v89;
  id v90;
  void **v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  id v100;
  void *v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  id v109;
  void *v110;
  id v111;
  void **v113;
  uint64_t v114;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = *a2;
      *a1 = *a2;
      v8 = v7;
      v9 = a1;
      v10 = a3;
      v11 = 1;
LABEL_72:
      swift_storeEnumTagMultiPayload(v9, v10, v11);
      return a1;
    }
    v13 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v13);
    if (EnumCaseMultiPayload == 2)
    {
      v21 = *a2;
      *a1 = *a2;
      v22 = v21;
      v23 = a1;
      v24 = v13;
      v25 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v26 = *a2;
      *a1 = *a2;
      v27 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v28 = (void **)((char *)a1 + v27);
      v29 = (void **)((char *)a2 + v27);
      v30 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v31 = *(_QWORD *)(v30 - 8);
      v32 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v31 + 48);
      v33 = v26;
      if (v32(v29, 1, v30))
      {
        v34 = sub_10002A750(&qword_100644980);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v29, v30))
        {
          case 1u:
            v35 = *v29;
            *v28 = *v29;
            v36 = v35;
            v37 = v28;
            v38 = v30;
            v39 = 1;
            goto LABEL_34;
          case 2u:
            v49 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v28, v29, v49);
            v37 = v28;
            v38 = v30;
            v39 = 2;
            goto LABEL_34;
          case 3u:
            v50 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v28, v29, v50);
            v37 = v28;
            v38 = v30;
            v39 = 3;
            goto LABEL_34;
          case 4u:
            v51 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v28, v29, v51);
            v37 = v28;
            v38 = v30;
            v39 = 4;
            goto LABEL_34;
          case 5u:
            v52 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v28, v29, v52);
            v37 = v28;
            v38 = v30;
            v39 = 5;
            goto LABEL_34;
          case 6u:
            v53 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v28, v29, v53);
            v37 = v28;
            v38 = v30;
            v39 = 6;
            goto LABEL_34;
          case 8u:
            v54 = *v29;
            *v28 = *v29;
            v55 = v54;
            v37 = v28;
            v38 = v30;
            v39 = 8;
            goto LABEL_34;
          case 9u:
            v56 = *v29;
            *v28 = *v29;
            v57 = v56;
            v37 = v28;
            v38 = v30;
            v39 = 9;
LABEL_34:
            swift_storeEnumTagMultiPayload(v37, v38, v39);
            break;
          default:
            memcpy(v28, v29, *(_QWORD *)(v31 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      v23 = a1;
      v24 = v13;
      v25 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        goto LABEL_38;
      }
      v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v15))
      {
        case 1u:
          v16 = *a2;
          *a1 = *a2;
          v17 = v16;
          v18 = a1;
          v19 = v15;
          v20 = 1;
          goto LABEL_24;
        case 2u:
          v40 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(a1, a2, v40);
          v18 = a1;
          v19 = v15;
          v20 = 2;
          goto LABEL_24;
        case 3u:
          v41 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(a1, a2, v41);
          v18 = a1;
          v19 = v15;
          v20 = 3;
          goto LABEL_24;
        case 4u:
          v42 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(a1, a2, v42);
          v18 = a1;
          v19 = v15;
          v20 = 4;
          goto LABEL_24;
        case 5u:
          v43 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(a1, a2, v43);
          v18 = a1;
          v19 = v15;
          v20 = 5;
          goto LABEL_24;
        case 6u:
          v44 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(a1, a2, v44);
          v18 = a1;
          v19 = v15;
          v20 = 6;
          goto LABEL_24;
        case 8u:
          v45 = *a2;
          *a1 = *a2;
          v46 = v45;
          v18 = a1;
          v19 = v15;
          v20 = 8;
          goto LABEL_24;
        case 9u:
          v47 = *a2;
          *a1 = *a2;
          v48 = v47;
          v18 = a1;
          v19 = v15;
          v20 = 9;
LABEL_24:
          swift_storeEnumTagMultiPayload(v18, v19, v20);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
          break;
      }
      v23 = a1;
      v24 = v13;
      v25 = 0;
    }
    swift_storeEnumTagMultiPayload(v23, v24, v25);
LABEL_38:
    v58 = (int *)type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
    v59 = v58[5];
    v60 = (char *)a1 + v59;
    v61 = (char *)a2 + v59;
    v62 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
    v63 = v58[6];
    v64 = (void **)((char *)a1 + v63);
    v65 = (void **)((char *)a2 + v63);
    v66 = swift_getEnumCaseMultiPayload((char *)a2 + v63, v13);
    if (v66 == 2)
    {
      v73 = *v65;
      *v64 = *v65;
      v74 = v73;
      v75 = v64;
      v76 = v13;
      v77 = 2;
    }
    else if (v66 == 1)
    {
      v114 = v13;
      v78 = *v65;
      *v64 = *v65;
      v79 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v113 = v64;
      v80 = (void **)((char *)v64 + v79);
      v81 = (void **)((char *)v65 + v79);
      v82 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v83 = *(_QWORD *)(v82 - 8);
      v84 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v83 + 48);
      v85 = v78;
      if (v84(v81, 1, v82))
      {
        v86 = sub_10002A750(&qword_100644980);
        memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
        v87 = v113;
        v76 = v114;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v81, v82))
        {
          case 1u:
            v88 = *v81;
            v89 = v80;
            *v80 = *v81;
            v90 = v88;
            v91 = v80;
            v92 = v82;
            v93 = 1;
            goto LABEL_67;
          case 2u:
            v103 = type metadata accessor for Date(0);
            v89 = v80;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v80, v81, v103);
            v91 = v80;
            v92 = v82;
            v93 = 2;
            goto LABEL_67;
          case 3u:
            v104 = type metadata accessor for Date(0);
            v89 = v80;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(v80, v81, v104);
            v91 = v80;
            v92 = v82;
            v93 = 3;
            goto LABEL_67;
          case 4u:
            v105 = type metadata accessor for Date(0);
            v89 = v80;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v80, v81, v105);
            v91 = v80;
            v92 = v82;
            v93 = 4;
            goto LABEL_67;
          case 5u:
            v106 = type metadata accessor for Date(0);
            v89 = v80;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v80, v81, v106);
            v91 = v80;
            v92 = v82;
            v93 = 5;
            goto LABEL_67;
          case 6u:
            v107 = type metadata accessor for Date(0);
            v89 = v80;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v80, v81, v107);
            v91 = v80;
            v92 = v82;
            v93 = 6;
            goto LABEL_67;
          case 8u:
            v108 = *v81;
            v89 = v80;
            *v80 = *v81;
            v109 = v108;
            v91 = v80;
            v92 = v82;
            v93 = 8;
            goto LABEL_67;
          case 9u:
            v110 = *v81;
            v89 = v80;
            *v80 = *v81;
            v111 = v110;
            v91 = v80;
            v92 = v82;
            v93 = 9;
LABEL_67:
            swift_storeEnumTagMultiPayload(v91, v92, v93);
            break;
          default:
            v89 = v80;
            memcpy(v80, v81, *(_QWORD *)(v83 + 64));
            break;
        }
        v87 = v113;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v83 + 56))(v89, 0, 1, v82);
        v76 = v114;
      }
      v75 = v87;
      v77 = 1;
    }
    else
    {
      if (v66)
      {
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_71:
        *((_BYTE *)a1 + v58[7]) = *((_BYTE *)a2 + v58[7]);
        v9 = a1;
        v10 = a3;
        v11 = 0;
        goto LABEL_72;
      }
      v67 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v65, v67))
      {
        case 1u:
          v68 = *v65;
          *v64 = *v65;
          v69 = v68;
          v70 = v64;
          v71 = v67;
          v72 = 1;
          goto LABEL_57;
        case 2u:
          v94 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v64, v65, v94);
          v70 = v64;
          v71 = v67;
          v72 = 2;
          goto LABEL_57;
        case 3u:
          v95 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v64, v65, v95);
          v70 = v64;
          v71 = v67;
          v72 = 3;
          goto LABEL_57;
        case 4u:
          v96 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(v64, v65, v96);
          v70 = v64;
          v71 = v67;
          v72 = 4;
          goto LABEL_57;
        case 5u:
          v97 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v64, v65, v97);
          v70 = v64;
          v71 = v67;
          v72 = 5;
          goto LABEL_57;
        case 6u:
          v98 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v64, v65, v98);
          v70 = v64;
          v71 = v67;
          v72 = 6;
          goto LABEL_57;
        case 8u:
          v99 = *v65;
          *v64 = *v65;
          v100 = v99;
          v70 = v64;
          v71 = v67;
          v72 = 8;
          goto LABEL_57;
        case 9u:
          v101 = *v65;
          *v64 = *v65;
          v102 = v101;
          v70 = v64;
          v71 = v67;
          v72 = 9;
LABEL_57:
          swift_storeEnumTagMultiPayload(v70, v71, v72);
          break;
        default:
          memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
          break;
      }
      v75 = v64;
      v76 = v13;
      v77 = 0;
    }
    swift_storeEnumTagMultiPayload(v75, v76, v77);
    goto LABEL_71;
  }
  v12 = (char *)*a2;
  *a1 = *a2;
  a1 = (void **)&v12[(v5 + 16) & ~(unint64_t)v5];
  swift_retain();
  return a1;
}

void sub_1004CE0E0(id *a1, uint64_t a2)
{
  id *v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = a1;
  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
    goto LABEL_2;
  v3 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v2, v3);
  switch(EnumCaseMultiPayload)
  {
    case 2:
LABEL_8:
      v7 = *v2;
LABEL_9:

      break;
    case 1:

      v8 = (id *)((char *)v2 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload(v8, v9))
        {
          case 1u:
          case 8u:
          case 9u:
            v7 = *v8;
            goto LABEL_9;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            v10 = type metadata accessor for Date(0);
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
            break;
          default:
            goto LABEL_13;
        }
      }
      break;
    case 0:
      v5 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v2, v5))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_8;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          v6 = type metadata accessor for Date(0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v2, v6);
          break;
        default:
          goto LABEL_13;
      }
      break;
  }
LABEL_13:
  v11 = type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
  v12 = (char *)v2 + *(int *)(v11 + 20);
  v13 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v2 = (id *)((char *)v2 + *(int *)(v11 + 24));
  v14 = swift_getEnumCaseMultiPayload(v2, v3);
  switch(v14)
  {
    case 2:
LABEL_2:

      break;
    case 1:

      v2 = (id *)((char *)v2 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v2, 1, v16))
      {
        switch(swift_getEnumCaseMultiPayload(v2, v16))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_2;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_20:
            v17 = type metadata accessor for Date(0);
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v2, v17);
            break;
          default:
            return;
        }
      }
      break;
    case 0:
      v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v2, v15))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_2;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_20;
        default:
          return;
      }
  }
}

void **sub_1004CE36C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v3;
  void *v6;
  id v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void **v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void **v26;
  void **v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(void **, uint64_t, uint64_t);
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  void **v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  void *v54;
  id v55;
  int *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void **v62;
  void **v63;
  int v64;
  uint64_t v65;
  void *v66;
  id v67;
  void **v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  void **v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  void **v78;
  void **v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(void **, uint64_t, uint64_t);
  id v83;
  uint64_t v84;
  void *v85;
  id v86;
  void **v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  id v96;
  void *v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  id v106;
  void *v107;
  id v108;
  uint64_t v110;
  uint64_t v111;

  v3 = a3;
  if (swift_getEnumCaseMultiPayload(a2, a3) != 1)
  {
    v11 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v11);
    if (EnumCaseMultiPayload == 2)
    {
      v19 = *a2;
      *a1 = *a2;
      v20 = v19;
      v21 = a1;
      v22 = v11;
      v23 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v24 = *a2;
      *a1 = *a2;
      v25 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v26 = (void **)((char *)a1 + v25);
      v27 = (void **)((char *)a2 + v25);
      v28 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v29 = *(_QWORD *)(v28 - 8);
      v30 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v29 + 48);
      v31 = v24;
      if (v30(v27, 1, v28))
      {
        v32 = sub_10002A750(&qword_100644980);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v27, v28))
        {
          case 1u:
            v33 = *v27;
            *v26 = *v27;
            v34 = v33;
            v35 = v26;
            v36 = v28;
            v37 = 1;
            goto LABEL_32;
          case 2u:
            v47 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v26, v27, v47);
            v35 = v26;
            v36 = v28;
            v37 = 2;
            goto LABEL_32;
          case 3u:
            v48 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v26, v27, v48);
            v35 = v26;
            v36 = v28;
            v37 = 3;
            goto LABEL_32;
          case 4u:
            v49 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v26, v27, v49);
            v35 = v26;
            v36 = v28;
            v37 = 4;
            goto LABEL_32;
          case 5u:
            v50 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v26, v27, v50);
            v35 = v26;
            v36 = v28;
            v37 = 5;
            goto LABEL_32;
          case 6u:
            v51 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v26, v27, v51);
            v35 = v26;
            v36 = v28;
            v37 = 6;
            goto LABEL_32;
          case 8u:
            v52 = *v27;
            *v26 = *v27;
            v53 = v52;
            v35 = v26;
            v36 = v28;
            v37 = 8;
            goto LABEL_32;
          case 9u:
            v54 = *v27;
            *v26 = *v27;
            v55 = v54;
            v35 = v26;
            v36 = v28;
            v37 = 9;
LABEL_32:
            swift_storeEnumTagMultiPayload(v35, v36, v37);
            break;
          default:
            memcpy(v26, v27, *(_QWORD *)(v29 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      v21 = a1;
      v22 = v11;
      v23 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        goto LABEL_36;
      }
      v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v13))
      {
        case 1u:
          v14 = *a2;
          *a1 = *a2;
          v15 = v14;
          v16 = a1;
          v17 = v13;
          v18 = 1;
          goto LABEL_22;
        case 2u:
          v38 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(a1, a2, v38);
          v16 = a1;
          v17 = v13;
          v18 = 2;
          goto LABEL_22;
        case 3u:
          v39 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(a1, a2, v39);
          v16 = a1;
          v17 = v13;
          v18 = 3;
          goto LABEL_22;
        case 4u:
          v40 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(a1, a2, v40);
          v16 = a1;
          v17 = v13;
          v18 = 4;
          goto LABEL_22;
        case 5u:
          v41 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(a1, a2, v41);
          v16 = a1;
          v17 = v13;
          v18 = 5;
          goto LABEL_22;
        case 6u:
          v42 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(a1, a2, v42);
          v16 = a1;
          v17 = v13;
          v18 = 6;
          goto LABEL_22;
        case 8u:
          v43 = *a2;
          *a1 = *a2;
          v44 = v43;
          v16 = a1;
          v17 = v13;
          v18 = 8;
          goto LABEL_22;
        case 9u:
          v45 = *a2;
          *a1 = *a2;
          v46 = v45;
          v16 = a1;
          v17 = v13;
          v18 = 9;
LABEL_22:
          swift_storeEnumTagMultiPayload(v16, v17, v18);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          break;
      }
      v21 = a1;
      v22 = v11;
      v23 = 0;
    }
    swift_storeEnumTagMultiPayload(v21, v22, v23);
LABEL_36:
    v56 = (int *)type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
    v57 = v56[5];
    v58 = (char *)a1 + v57;
    v59 = (char *)a2 + v57;
    v60 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
    v61 = v56[6];
    v62 = (void **)((char *)a1 + v61);
    v63 = (void **)((char *)a2 + v61);
    v64 = swift_getEnumCaseMultiPayload((char *)a2 + v61, v11);
    if (v64 == 2)
    {
      v71 = *v63;
      *v62 = *v63;
      v72 = v71;
      v73 = v62;
      v74 = v11;
      v75 = 2;
    }
    else if (v64 == 1)
    {
      v110 = v3;
      v111 = v11;
      v76 = *v63;
      *v62 = *v63;
      v77 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v78 = (void **)((char *)v62 + v77);
      v79 = (void **)((char *)v63 + v77);
      v80 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v81 = *(_QWORD *)(v80 - 8);
      v82 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v81 + 48);
      v83 = v76;
      if (v82(v79, 1, v80))
      {
        v84 = sub_10002A750(&qword_100644980);
        memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
        v3 = v110;
        v74 = v111;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v79, v80))
        {
          case 1u:
            v85 = *v79;
            *v78 = *v79;
            v86 = v85;
            v87 = v78;
            v88 = v80;
            v89 = 1;
            goto LABEL_65;
          case 2u:
            v99 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v78, v79, v99);
            v87 = v78;
            v88 = v80;
            v89 = 2;
            goto LABEL_65;
          case 3u:
            v100 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(v78, v79, v100);
            v87 = v78;
            v88 = v80;
            v89 = 3;
            goto LABEL_65;
          case 4u:
            v101 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v78, v79, v101);
            v87 = v78;
            v88 = v80;
            v89 = 4;
            goto LABEL_65;
          case 5u:
            v102 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v78, v79, v102);
            v87 = v78;
            v88 = v80;
            v89 = 5;
            goto LABEL_65;
          case 6u:
            v103 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v78, v79, v103);
            v87 = v78;
            v88 = v80;
            v89 = 6;
            goto LABEL_65;
          case 8u:
            v105 = *v79;
            *v78 = *v79;
            v106 = v105;
            v87 = v78;
            v88 = v80;
            v89 = 8;
            goto LABEL_65;
          case 9u:
            v107 = *v79;
            *v78 = *v79;
            v108 = v107;
            v87 = v78;
            v88 = v80;
            v89 = 9;
LABEL_65:
            swift_storeEnumTagMultiPayload(v87, v88, v89);
            v104 = v81;
            break;
          default:
            v104 = v81;
            memcpy(v78, v79, *(_QWORD *)(v81 + 64));
            break;
        }
        v3 = v110;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v104 + 56))(v78, 0, 1, v80);
        v74 = v111;
      }
      v73 = v62;
      v75 = 1;
    }
    else
    {
      if (v64)
      {
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_69:
        *((_BYTE *)a1 + v56[7]) = *((_BYTE *)a2 + v56[7]);
        v8 = a1;
        v9 = v3;
        v10 = 0;
        goto LABEL_70;
      }
      v65 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v63, v65))
      {
        case 1u:
          v66 = *v63;
          *v62 = *v63;
          v67 = v66;
          v68 = v62;
          v69 = v65;
          v70 = 1;
          goto LABEL_55;
        case 2u:
          v90 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v62, v63, v90);
          v68 = v62;
          v69 = v65;
          v70 = 2;
          goto LABEL_55;
        case 3u:
          v91 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(v62, v63, v91);
          v68 = v62;
          v69 = v65;
          v70 = 3;
          goto LABEL_55;
        case 4u:
          v92 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(v62, v63, v92);
          v68 = v62;
          v69 = v65;
          v70 = 4;
          goto LABEL_55;
        case 5u:
          v93 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v62, v63, v93);
          v68 = v62;
          v69 = v65;
          v70 = 5;
          goto LABEL_55;
        case 6u:
          v94 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v62, v63, v94);
          v68 = v62;
          v69 = v65;
          v70 = 6;
          goto LABEL_55;
        case 8u:
          v95 = *v63;
          *v62 = *v63;
          v96 = v95;
          v68 = v62;
          v69 = v65;
          v70 = 8;
          goto LABEL_55;
        case 9u:
          v97 = *v63;
          *v62 = *v63;
          v98 = v97;
          v68 = v62;
          v69 = v65;
          v70 = 9;
LABEL_55:
          swift_storeEnumTagMultiPayload(v68, v69, v70);
          break;
        default:
          memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
          break;
      }
      v73 = v62;
      v74 = v11;
      v75 = 0;
    }
    swift_storeEnumTagMultiPayload(v73, v74, v75);
    goto LABEL_69;
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6;
  v8 = a1;
  v9 = v3;
  v10 = 1;
LABEL_70:
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  return a1;
}

void **sub_1004CEC9C(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  void *v12;
  id v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void **v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(void **, uint64_t, uint64_t);
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  void **v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  int *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void **v60;
  void **v61;
  int v62;
  uint64_t v63;
  void *v64;
  id v65;
  void **v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  void **v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  void **v76;
  void **v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(void **, uint64_t, uint64_t);
  id v81;
  uint64_t v82;
  uint64_t v83;
  void **v84;
  void *v85;
  void **v86;
  id v87;
  void **v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  id v97;
  void *v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  id v106;
  void *v107;
  id v108;
  void **v110;
  uint64_t v111;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRIRemindersBoardDragItemSources.Source);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = *a2;
      *a1 = *a2;
      v7 = v6;
      v8 = 1;
LABEL_71:
      swift_storeEnumTagMultiPayload(a1, a3, v8);
      return a1;
    }
    v9 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v9);
    if (EnumCaseMultiPayload == 2)
    {
      v17 = *a2;
      *a1 = *a2;
      v18 = v17;
      v19 = a1;
      v20 = v9;
      v21 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v22 = *a2;
      *a1 = *a2;
      v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v24 = (void **)((char *)a1 + v23);
      v25 = (void **)((char *)a2 + v23);
      v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v27 = *(_QWORD *)(v26 - 8);
      v28 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v27 + 48);
      v29 = v22;
      if (v28(v25, 1, v26))
      {
        v30 = sub_10002A750(&qword_100644980);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v25, v26))
        {
          case 1u:
            v31 = *v25;
            *v24 = *v25;
            v32 = v31;
            v33 = v24;
            v34 = v26;
            v35 = 1;
            goto LABEL_33;
          case 2u:
            v45 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v24, v25, v45);
            v33 = v24;
            v34 = v26;
            v35 = 2;
            goto LABEL_33;
          case 3u:
            v46 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v24, v25, v46);
            v33 = v24;
            v34 = v26;
            v35 = 3;
            goto LABEL_33;
          case 4u:
            v47 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v24, v25, v47);
            v33 = v24;
            v34 = v26;
            v35 = 4;
            goto LABEL_33;
          case 5u:
            v48 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v24, v25, v48);
            v33 = v24;
            v34 = v26;
            v35 = 5;
            goto LABEL_33;
          case 6u:
            v49 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v24, v25, v49);
            v33 = v24;
            v34 = v26;
            v35 = 6;
            goto LABEL_33;
          case 8u:
            v50 = *v25;
            *v24 = *v25;
            v51 = v50;
            v33 = v24;
            v34 = v26;
            v35 = 8;
            goto LABEL_33;
          case 9u:
            v52 = *v25;
            *v24 = *v25;
            v53 = v52;
            v33 = v24;
            v34 = v26;
            v35 = 9;
LABEL_33:
            swift_storeEnumTagMultiPayload(v33, v34, v35);
            break;
          default:
            memcpy(v24, v25, *(_QWORD *)(v27 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      v19 = a1;
      v20 = v9;
      v21 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        goto LABEL_37;
      }
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v11))
      {
        case 1u:
          v12 = *a2;
          *a1 = *a2;
          v13 = v12;
          v14 = a1;
          v15 = v11;
          v16 = 1;
          goto LABEL_23;
        case 2u:
          v36 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(a1, a2, v36);
          v14 = a1;
          v15 = v11;
          v16 = 2;
          goto LABEL_23;
        case 3u:
          v37 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(a1, a2, v37);
          v14 = a1;
          v15 = v11;
          v16 = 3;
          goto LABEL_23;
        case 4u:
          v38 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(a1, a2, v38);
          v14 = a1;
          v15 = v11;
          v16 = 4;
          goto LABEL_23;
        case 5u:
          v39 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(a1, a2, v39);
          v14 = a1;
          v15 = v11;
          v16 = 5;
          goto LABEL_23;
        case 6u:
          v40 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(a1, a2, v40);
          v14 = a1;
          v15 = v11;
          v16 = 6;
          goto LABEL_23;
        case 8u:
          v41 = *a2;
          *a1 = *a2;
          v42 = v41;
          v14 = a1;
          v15 = v11;
          v16 = 8;
          goto LABEL_23;
        case 9u:
          v43 = *a2;
          *a1 = *a2;
          v44 = v43;
          v14 = a1;
          v15 = v11;
          v16 = 9;
LABEL_23:
          swift_storeEnumTagMultiPayload(v14, v15, v16);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
          break;
      }
      v19 = a1;
      v20 = v9;
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v19, v20, v21);
LABEL_37:
    v54 = (int *)type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
    v55 = v54[5];
    v56 = (char *)a1 + v55;
    v57 = (char *)a2 + v55;
    v58 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
    v59 = v54[6];
    v60 = (void **)((char *)a1 + v59);
    v61 = (void **)((char *)a2 + v59);
    v62 = swift_getEnumCaseMultiPayload((char *)a2 + v59, v9);
    if (v62 == 2)
    {
      v69 = *v61;
      *v60 = *v61;
      v70 = v69;
      v71 = v60;
      v72 = v9;
      v73 = 2;
    }
    else if (v62 == 1)
    {
      v111 = v9;
      v74 = *v61;
      *v60 = *v61;
      v75 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v110 = v60;
      v76 = (void **)((char *)v60 + v75);
      v77 = (void **)((char *)v61 + v75);
      v78 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v79 = *(_QWORD *)(v78 - 8);
      v80 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v79 + 48);
      v81 = v74;
      if (v80(v77, 1, v78))
      {
        v82 = sub_10002A750(&qword_100644980);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
        v84 = v110;
        v83 = v111;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v77, v78))
        {
          case 1u:
            v85 = *v77;
            v86 = v76;
            *v76 = *v77;
            v87 = v85;
            v88 = v76;
            v89 = v78;
            v90 = 1;
            goto LABEL_66;
          case 2u:
            v100 = type metadata accessor for Date(0);
            v86 = v76;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(v76, v77, v100);
            v88 = v76;
            v89 = v78;
            v90 = 2;
            goto LABEL_66;
          case 3u:
            v101 = type metadata accessor for Date(0);
            v86 = v76;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v76, v77, v101);
            v88 = v76;
            v89 = v78;
            v90 = 3;
            goto LABEL_66;
          case 4u:
            v102 = type metadata accessor for Date(0);
            v86 = v76;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v76, v77, v102);
            v88 = v76;
            v89 = v78;
            v90 = 4;
            goto LABEL_66;
          case 5u:
            v103 = type metadata accessor for Date(0);
            v86 = v76;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v76, v77, v103);
            v88 = v76;
            v89 = v78;
            v90 = 5;
            goto LABEL_66;
          case 6u:
            v104 = type metadata accessor for Date(0);
            v86 = v76;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(v76, v77, v104);
            v88 = v76;
            v89 = v78;
            v90 = 6;
            goto LABEL_66;
          case 8u:
            v105 = *v77;
            v86 = v76;
            *v76 = *v77;
            v106 = v105;
            v88 = v76;
            v89 = v78;
            v90 = 8;
            goto LABEL_66;
          case 9u:
            v107 = *v77;
            v86 = v76;
            *v76 = *v77;
            v108 = v107;
            v88 = v76;
            v89 = v78;
            v90 = 9;
LABEL_66:
            swift_storeEnumTagMultiPayload(v88, v89, v90);
            break;
          default:
            v86 = v76;
            memcpy(v76, v77, *(_QWORD *)(v79 + 64));
            break;
        }
        v84 = v110;
        v83 = v111;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v79 + 56))(v86, 0, 1, v78);
      }
      v71 = v84;
      v72 = v83;
      v73 = 1;
    }
    else
    {
      if (v62)
      {
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
LABEL_70:
        v8 = 0;
        *((_BYTE *)a1 + v54[7]) = *((_BYTE *)a2 + v54[7]);
        goto LABEL_71;
      }
      v63 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v61, v63))
      {
        case 1u:
          v64 = *v61;
          *v60 = *v61;
          v65 = v64;
          v66 = v60;
          v67 = v63;
          v68 = 1;
          goto LABEL_56;
        case 2u:
          v91 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(v60, v61, v91);
          v66 = v60;
          v67 = v63;
          v68 = 2;
          goto LABEL_56;
        case 3u:
          v92 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(v60, v61, v92);
          v66 = v60;
          v67 = v63;
          v68 = 3;
          goto LABEL_56;
        case 4u:
          v93 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v60, v61, v93);
          v66 = v60;
          v67 = v63;
          v68 = 4;
          goto LABEL_56;
        case 5u:
          v94 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v60, v61, v94);
          v66 = v60;
          v67 = v63;
          v68 = 5;
          goto LABEL_56;
        case 6u:
          v95 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v60, v61, v95);
          v66 = v60;
          v67 = v63;
          v68 = 6;
          goto LABEL_56;
        case 8u:
          v96 = *v61;
          *v60 = *v61;
          v97 = v96;
          v66 = v60;
          v67 = v63;
          v68 = 8;
          goto LABEL_56;
        case 9u:
          v98 = *v61;
          *v60 = *v61;
          v99 = v98;
          v66 = v60;
          v67 = v63;
          v68 = 9;
LABEL_56:
          swift_storeEnumTagMultiPayload(v66, v67, v68);
          break;
        default:
          memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
          break;
      }
      v71 = v60;
      v72 = v9;
      v73 = 0;
    }
    swift_storeEnumTagMultiPayload(v71, v72, v73);
    goto LABEL_70;
  }
  return a1;
}

_QWORD *sub_1004CF5FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  if (!swift_getEnumCaseMultiPayload(a2, a3))
  {
    v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v13 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        v18 = sub_10002A750(&qword_100644980);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v15, v16))
        {
          case 2u:
            v19 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v14, v15, v19);
            v20 = v14;
            v21 = v16;
            v22 = 2;
            goto LABEL_24;
          case 3u:
            v30 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v14, v15, v30);
            v20 = v14;
            v21 = v16;
            v22 = 3;
            goto LABEL_24;
          case 4u:
            v31 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v14, v15, v31);
            v20 = v14;
            v21 = v16;
            v22 = 4;
            goto LABEL_24;
          case 5u:
            v32 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v14, v15, v32);
            v20 = v14;
            v21 = v16;
            v22 = 5;
            goto LABEL_24;
          case 6u:
            v33 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v14, v15, v33);
            v20 = v14;
            v21 = v16;
            v22 = 6;
LABEL_24:
            swift_storeEnumTagMultiPayload(v20, v21, v22);
            break;
          default:
            memcpy(v14, v15, *(_QWORD *)(v17 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      v27 = a1;
      v28 = v6;
      v29 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_28;
      }
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v8))
      {
        case 2u:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
          v10 = a1;
          v11 = v8;
          v12 = 2;
          goto LABEL_17;
        case 3u:
          v23 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
          v10 = a1;
          v11 = v8;
          v12 = 3;
          goto LABEL_17;
        case 4u:
          v24 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a1, a2, v24);
          v10 = a1;
          v11 = v8;
          v12 = 4;
          goto LABEL_17;
        case 5u:
          v25 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a1, a2, v25);
          v10 = a1;
          v11 = v8;
          v12 = 5;
          goto LABEL_17;
        case 6u:
          v26 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(a1, a2, v26);
          v10 = a1;
          v11 = v8;
          v12 = 6;
LABEL_17:
          swift_storeEnumTagMultiPayload(v10, v11, v12);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
          break;
      }
      v27 = a1;
      v28 = v6;
      v29 = 0;
    }
    swift_storeEnumTagMultiPayload(v27, v28, v29);
LABEL_28:
    v34 = (int *)type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
    v35 = v34[5];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    v38 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
    v39 = v34[6];
    v40 = (_QWORD *)((char *)a1 + v39);
    v41 = (_QWORD *)((char *)a2 + v39);
    v42 = swift_getEnumCaseMultiPayload((char *)a2 + v39, v6);
    if (v42 == 1)
    {
      *v40 = *v41;
      v48 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v49 = (char *)v40 + v48;
      v50 = (char *)v41 + v48;
      v51 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v52 = *(_QWORD *)(v51 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
      {
        v53 = sub_10002A750(&qword_100644980);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v50, v51))
        {
          case 2u:
            v54 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v49, v50, v54);
            v55 = v49;
            v56 = v51;
            v57 = 2;
            goto LABEL_49;
          case 3u:
            v65 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v49, v50, v65);
            v55 = v49;
            v56 = v51;
            v57 = 3;
            goto LABEL_49;
          case 4u:
            v66 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v49, v50, v66);
            v55 = v49;
            v56 = v51;
            v57 = 4;
            goto LABEL_49;
          case 5u:
            v67 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v49, v50, v67);
            v55 = v49;
            v56 = v51;
            v57 = 5;
            goto LABEL_49;
          case 6u:
            v68 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v49, v50, v68);
            v55 = v49;
            v56 = v51;
            v57 = 6;
LABEL_49:
            swift_storeEnumTagMultiPayload(v55, v56, v57);
            break;
          default:
            memcpy(v49, v50, *(_QWORD *)(v52 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      }
      v62 = v40;
      v63 = v6;
      v64 = 1;
    }
    else
    {
      if (v42)
      {
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_53:
        *((_BYTE *)a1 + v34[7]) = *((_BYTE *)a2 + v34[7]);
        swift_storeEnumTagMultiPayload(a1, a3, 0);
        return a1;
      }
      v43 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v41, v43))
      {
        case 2u:
          v44 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v40, v41, v44);
          v45 = v40;
          v46 = v43;
          v47 = 2;
          goto LABEL_42;
        case 3u:
          v58 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v40, v41, v58);
          v45 = v40;
          v46 = v43;
          v47 = 3;
          goto LABEL_42;
        case 4u:
          v59 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v40, v41, v59);
          v45 = v40;
          v46 = v43;
          v47 = 4;
          goto LABEL_42;
        case 5u:
          v60 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v40, v41, v60);
          v45 = v40;
          v46 = v43;
          v47 = 5;
          goto LABEL_42;
        case 6u:
          v61 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v40, v41, v61);
          v45 = v40;
          v46 = v43;
          v47 = 6;
LABEL_42:
          swift_storeEnumTagMultiPayload(v45, v46, v47);
          break;
        default:
          memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
          break;
      }
      v62 = v40;
      v63 = v6;
      v64 = 0;
    }
    swift_storeEnumTagMultiPayload(v62, v63, v64);
    goto LABEL_53;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *sub_1004CFD68(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRIRemindersBoardDragItemSources.Source);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v13 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        v18 = sub_10002A750(&qword_100644980);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v15, v16))
        {
          case 2u:
            v19 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v14, v15, v19);
            v20 = v14;
            v21 = v16;
            v22 = 2;
            goto LABEL_25;
          case 3u:
            v30 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v14, v15, v30);
            v20 = v14;
            v21 = v16;
            v22 = 3;
            goto LABEL_25;
          case 4u:
            v31 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v14, v15, v31);
            v20 = v14;
            v21 = v16;
            v22 = 4;
            goto LABEL_25;
          case 5u:
            v32 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v14, v15, v32);
            v20 = v14;
            v21 = v16;
            v22 = 5;
            goto LABEL_25;
          case 6u:
            v33 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v14, v15, v33);
            v20 = v14;
            v21 = v16;
            v22 = 6;
LABEL_25:
            swift_storeEnumTagMultiPayload(v20, v21, v22);
            break;
          default:
            memcpy(v14, v15, *(_QWORD *)(v17 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      v27 = a1;
      v28 = v6;
      v29 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_29;
      }
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v8))
      {
        case 2u:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
          v10 = a1;
          v11 = v8;
          v12 = 2;
          goto LABEL_18;
        case 3u:
          v23 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
          v10 = a1;
          v11 = v8;
          v12 = 3;
          goto LABEL_18;
        case 4u:
          v24 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a1, a2, v24);
          v10 = a1;
          v11 = v8;
          v12 = 4;
          goto LABEL_18;
        case 5u:
          v25 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a1, a2, v25);
          v10 = a1;
          v11 = v8;
          v12 = 5;
          goto LABEL_18;
        case 6u:
          v26 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(a1, a2, v26);
          v10 = a1;
          v11 = v8;
          v12 = 6;
LABEL_18:
          swift_storeEnumTagMultiPayload(v10, v11, v12);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
          break;
      }
      v27 = a1;
      v28 = v6;
      v29 = 0;
    }
    swift_storeEnumTagMultiPayload(v27, v28, v29);
LABEL_29:
    v34 = (int *)type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
    v35 = v34[5];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    v38 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
    v39 = v34[6];
    v40 = (_QWORD *)((char *)a1 + v39);
    v41 = (_QWORD *)((char *)a2 + v39);
    v42 = swift_getEnumCaseMultiPayload((char *)a2 + v39, v6);
    if (v42 == 1)
    {
      *v40 = *v41;
      v48 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v49 = (char *)v40 + v48;
      v50 = (char *)v41 + v48;
      v51 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v52 = *(_QWORD *)(v51 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
      {
        v53 = sub_10002A750(&qword_100644980);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v50, v51))
        {
          case 2u:
            v54 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v49, v50, v54);
            v55 = v49;
            v56 = v51;
            v57 = 2;
            goto LABEL_50;
          case 3u:
            v65 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v49, v50, v65);
            v55 = v49;
            v56 = v51;
            v57 = 3;
            goto LABEL_50;
          case 4u:
            v66 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v49, v50, v66);
            v55 = v49;
            v56 = v51;
            v57 = 4;
            goto LABEL_50;
          case 5u:
            v67 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v49, v50, v67);
            v55 = v49;
            v56 = v51;
            v57 = 5;
            goto LABEL_50;
          case 6u:
            v68 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v49, v50, v68);
            v55 = v49;
            v56 = v51;
            v57 = 6;
LABEL_50:
            swift_storeEnumTagMultiPayload(v55, v56, v57);
            break;
          default:
            memcpy(v49, v50, *(_QWORD *)(v52 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      }
      v62 = v40;
      v63 = v6;
      v64 = 1;
    }
    else
    {
      if (v42)
      {
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_54:
        *((_BYTE *)a1 + v34[7]) = *((_BYTE *)a2 + v34[7]);
        swift_storeEnumTagMultiPayload(a1, a3, 0);
        return a1;
      }
      v43 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v41, v43))
      {
        case 2u:
          v44 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v40, v41, v44);
          v45 = v40;
          v46 = v43;
          v47 = 2;
          goto LABEL_43;
        case 3u:
          v58 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v40, v41, v58);
          v45 = v40;
          v46 = v43;
          v47 = 3;
          goto LABEL_43;
        case 4u:
          v59 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v40, v41, v59);
          v45 = v40;
          v46 = v43;
          v47 = 4;
          goto LABEL_43;
        case 5u:
          v60 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v40, v41, v60);
          v45 = v40;
          v46 = v43;
          v47 = 5;
          goto LABEL_43;
        case 6u:
          v61 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v40, v41, v61);
          v45 = v40;
          v46 = v43;
          v47 = 6;
LABEL_43:
          swift_storeEnumTagMultiPayload(v45, v46, v47);
          break;
        default:
          memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
          break;
      }
      v62 = v40;
      v63 = v6;
      v64 = 0;
    }
    swift_storeEnumTagMultiPayload(v62, v63, v64);
    goto LABEL_54;
  }
  return a1;
}

uint64_t sub_1004D04EC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

void **sub_1004D055C(void **a1, void **a2, int *a3)
{
  int v5;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  void *v10;
  id v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  void **v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void **v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(void **, uint64_t, uint64_t);
  id v28;
  uint64_t v29;
  void *v30;
  id v31;
  void **v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void **v58;
  void **v59;
  int v60;
  uint64_t v61;
  void *v62;
  id v63;
  void **v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  id v68;
  void **v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  void **v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int (*v78)(void **, uint64_t, uint64_t);
  id v79;
  uint64_t v80;
  void *v81;
  id v82;
  void **v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  id v92;
  void *v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  id v101;
  void *v102;
  id v103;
  uint64_t v105;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v7);
    if (EnumCaseMultiPayload == 2)
    {
      v16 = *a2;
      *a1 = *a2;
      v17 = v16;
      v18 = a1;
      v19 = v7;
      v20 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v21 = *a2;
      *a1 = *a2;
      v22 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v23 = (void **)((char *)a1 + v22);
      v24 = (void **)((char *)a2 + v22);
      v25 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v26 + 48);
      v28 = v21;
      if (v27(v24, 1, v25))
      {
        v29 = sub_10002A750(&qword_100644980);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v24, v25))
        {
          case 1u:
            v30 = *v24;
            *v23 = *v24;
            v31 = v30;
            v32 = v23;
            v33 = v25;
            v34 = 1;
            goto LABEL_32;
          case 2u:
            v44 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v23, v24, v44);
            v32 = v23;
            v33 = v25;
            v34 = 2;
            goto LABEL_32;
          case 3u:
            v45 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v23, v24, v45);
            v32 = v23;
            v33 = v25;
            v34 = 3;
            goto LABEL_32;
          case 4u:
            v46 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v23, v24, v46);
            v32 = v23;
            v33 = v25;
            v34 = 4;
            goto LABEL_32;
          case 5u:
            v47 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v23, v24, v47);
            v32 = v23;
            v33 = v25;
            v34 = 5;
            goto LABEL_32;
          case 6u:
            v48 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v23, v24, v48);
            v32 = v23;
            v33 = v25;
            v34 = 6;
            goto LABEL_32;
          case 8u:
            v49 = *v24;
            *v23 = *v24;
            v50 = v49;
            v32 = v23;
            v33 = v25;
            v34 = 8;
            goto LABEL_32;
          case 9u:
            v51 = *v24;
            *v23 = *v24;
            v52 = v51;
            v32 = v23;
            v33 = v25;
            v34 = 9;
LABEL_32:
            swift_storeEnumTagMultiPayload(v32, v33, v34);
            break;
          default:
            memcpy(v23, v24, *(_QWORD *)(v26 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
      v18 = a1;
      v19 = v7;
      v20 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        goto LABEL_36;
      }
      v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v9))
      {
        case 1u:
          v10 = *a2;
          *a1 = *a2;
          v11 = v10;
          v12 = a1;
          v13 = v9;
          v14 = 1;
          goto LABEL_22;
        case 2u:
          v35 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(a1, a2, v35);
          v12 = a1;
          v13 = v9;
          v14 = 2;
          goto LABEL_22;
        case 3u:
          v36 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(a1, a2, v36);
          v12 = a1;
          v13 = v9;
          v14 = 3;
          goto LABEL_22;
        case 4u:
          v37 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(a1, a2, v37);
          v12 = a1;
          v13 = v9;
          v14 = 4;
          goto LABEL_22;
        case 5u:
          v38 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(a1, a2, v38);
          v12 = a1;
          v13 = v9;
          v14 = 5;
          goto LABEL_22;
        case 6u:
          v39 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(a1, a2, v39);
          v12 = a1;
          v13 = v9;
          v14 = 6;
          goto LABEL_22;
        case 8u:
          v40 = *a2;
          *a1 = *a2;
          v41 = v40;
          v12 = a1;
          v13 = v9;
          v14 = 8;
          goto LABEL_22;
        case 9u:
          v42 = *a2;
          *a1 = *a2;
          v43 = v42;
          v12 = a1;
          v13 = v9;
          v14 = 9;
LABEL_22:
          swift_storeEnumTagMultiPayload(v12, v13, v14);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
          break;
      }
      v18 = a1;
      v19 = v7;
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v18, v19, v20);
LABEL_36:
    v53 = a3[5];
    v54 = (char *)a1 + v53;
    v55 = (char *)a2 + v53;
    v56 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v54, v55, v56);
    v57 = a3[6];
    v58 = (void **)((char *)a1 + v57);
    v59 = (void **)((char *)a2 + v57);
    v60 = swift_getEnumCaseMultiPayload((char *)a2 + v57, v7);
    if (v60 == 2)
    {
      v67 = *v59;
      *v58 = *v59;
      v68 = v67;
      v69 = v58;
      v70 = v7;
      v71 = 2;
    }
    else if (v60 == 1)
    {
      v105 = v7;
      v72 = *v59;
      *v58 = *v59;
      v73 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v74 = (void **)((char *)v58 + v73);
      v75 = (void **)((char *)v59 + v73);
      v76 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v77 = *(_QWORD *)(v76 - 8);
      v78 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v77 + 48);
      v79 = v72;
      if (v78(v75, 1, v76))
      {
        v80 = sub_10002A750(&qword_100644980);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v75, v76))
        {
          case 1u:
            v81 = *v75;
            *v74 = *v75;
            v82 = v81;
            v83 = v74;
            v84 = v76;
            v85 = 1;
            goto LABEL_65;
          case 2u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v74, v75, v95);
            v83 = v74;
            v84 = v76;
            v85 = 2;
            goto LABEL_65;
          case 3u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(v74, v75, v96);
            v83 = v74;
            v84 = v76;
            v85 = 3;
            goto LABEL_65;
          case 4u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v74, v75, v97);
            v83 = v74;
            v84 = v76;
            v85 = 4;
            goto LABEL_65;
          case 5u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v74, v75, v98);
            v83 = v74;
            v84 = v76;
            v85 = 5;
            goto LABEL_65;
          case 6u:
            v99 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v74, v75, v99);
            v83 = v74;
            v84 = v76;
            v85 = 6;
            goto LABEL_65;
          case 8u:
            v100 = *v75;
            *v74 = *v75;
            v101 = v100;
            v83 = v74;
            v84 = v76;
            v85 = 8;
            goto LABEL_65;
          case 9u:
            v102 = *v75;
            *v74 = *v75;
            v103 = v102;
            v83 = v74;
            v84 = v76;
            v85 = 9;
LABEL_65:
            swift_storeEnumTagMultiPayload(v83, v84, v85);
            break;
          default:
            memcpy(v74, v75, *(_QWORD *)(v77 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
      }
      v70 = v105;
      v69 = v58;
      v71 = 1;
    }
    else
    {
      if (v60)
      {
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_69:
        *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
        return a1;
      }
      v61 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v59, v61))
      {
        case 1u:
          v62 = *v59;
          *v58 = *v59;
          v63 = v62;
          v64 = v58;
          v65 = v61;
          v66 = 1;
          goto LABEL_55;
        case 2u:
          v86 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v58, v59, v86);
          v64 = v58;
          v65 = v61;
          v66 = 2;
          goto LABEL_55;
        case 3u:
          v87 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v58, v59, v87);
          v64 = v58;
          v65 = v61;
          v66 = 3;
          goto LABEL_55;
        case 4u:
          v88 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v58, v59, v88);
          v64 = v58;
          v65 = v61;
          v66 = 4;
          goto LABEL_55;
        case 5u:
          v89 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v58, v59, v89);
          v64 = v58;
          v65 = v61;
          v66 = 5;
          goto LABEL_55;
        case 6u:
          v90 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v58, v59, v90);
          v64 = v58;
          v65 = v61;
          v66 = 6;
          goto LABEL_55;
        case 8u:
          v91 = *v59;
          *v58 = *v59;
          v92 = v91;
          v64 = v58;
          v65 = v61;
          v66 = 8;
          goto LABEL_55;
        case 9u:
          v93 = *v59;
          *v58 = *v59;
          v94 = v93;
          v64 = v58;
          v65 = v61;
          v66 = 9;
LABEL_55:
          swift_storeEnumTagMultiPayload(v64, v65, v66);
          break;
        default:
          memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
          break;
      }
      v69 = v58;
      v70 = v7;
      v71 = 0;
    }
    swift_storeEnumTagMultiPayload(v69, v70, v71);
    goto LABEL_69;
  }
  v15 = (char *)*a2;
  *a1 = *a2;
  a1 = (void **)&v15[(v5 + 16) & ~(unint64_t)v5];
  swift_retain();
  return a1;
}

void sub_1004D0E5C(id *a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, v4);
  switch(EnumCaseMultiPayload)
  {
    case 2:
LABEL_6:
      v8 = *a1;
LABEL_7:

      break;
    case 1:

      v9 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v9, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            v8 = *v9;
            goto LABEL_7;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            v11 = type metadata accessor for Date(0);
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
            break;
          default:
            goto LABEL_11;
        }
      }
      break;
    case 0:
      v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a1, v6))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_6;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          v7 = type metadata accessor for Date(0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
          break;
        default:
          goto LABEL_11;
      }
      break;
  }
LABEL_11:
  v12 = (char *)a1 + *(int *)(a2 + 20);
  v13 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v14 = (id *)((char *)a1 + *(int *)(a2 + 24));
  v15 = swift_getEnumCaseMultiPayload(v14, v4);
  switch(v15)
  {
    case 2:
LABEL_19:

      break;
    case 1:

      v14 = (id *)((char *)v14 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v17 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v14, 1, v17))
      {
        switch(swift_getEnumCaseMultiPayload(v14, v17))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_19;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_18:
            v18 = type metadata accessor for Date(0);
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v14, v18);
            break;
          default:
            return;
        }
      }
      break;
    case 0:
      v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v14, v16))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_19;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_18;
        default:
          return;
      }
  }
}

void **sub_1004D10E4(void **a1, void **a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  void *v9;
  id v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void **v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(void **, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  void **v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void **v56;
  void **v57;
  int v58;
  uint64_t v59;
  void *v60;
  id v61;
  void **v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  void **v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  void **v72;
  void **v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(void **, uint64_t, uint64_t);
  id v77;
  uint64_t v78;
  void *v79;
  id v80;
  void **v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  id v90;
  void *v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  id v99;
  void *v100;
  id v101;
  int *v103;

  v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
  if (EnumCaseMultiPayload == 2)
  {
    v14 = *a2;
    *a1 = *a2;
    v15 = v14;
    v16 = a1;
    v17 = v6;
    v18 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v19 = *a2;
    *a1 = *a2;
    v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
    v21 = (void **)((char *)a1 + v20);
    v22 = (void **)((char *)a2 + v20);
    v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v24 + 48);
    v26 = v19;
    if (v25(v22, 1, v23))
    {
      v27 = sub_10002A750(&qword_100644980);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(v22, v23))
      {
        case 1u:
          v28 = *v22;
          *v21 = *v22;
          v29 = v28;
          v30 = v21;
          v31 = v23;
          v32 = 1;
          goto LABEL_30;
        case 2u:
          v42 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v21, v22, v42);
          v30 = v21;
          v31 = v23;
          v32 = 2;
          goto LABEL_30;
        case 3u:
          v43 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v21, v22, v43);
          v30 = v21;
          v31 = v23;
          v32 = 3;
          goto LABEL_30;
        case 4u:
          v44 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v21, v22, v44);
          v30 = v21;
          v31 = v23;
          v32 = 4;
          goto LABEL_30;
        case 5u:
          v45 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v21, v22, v45);
          v30 = v21;
          v31 = v23;
          v32 = 5;
          goto LABEL_30;
        case 6u:
          v46 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v21, v22, v46);
          v30 = v21;
          v31 = v23;
          v32 = 6;
          goto LABEL_30;
        case 8u:
          v47 = *v22;
          *v21 = *v22;
          v48 = v47;
          v30 = v21;
          v31 = v23;
          v32 = 8;
          goto LABEL_30;
        case 9u:
          v49 = *v22;
          *v21 = *v22;
          v50 = v49;
          v30 = v21;
          v31 = v23;
          v32 = 9;
LABEL_30:
          swift_storeEnumTagMultiPayload(v30, v31, v32);
          break;
        default:
          memcpy(v21, v22, *(_QWORD *)(v24 + 64));
          break;
      }
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    v16 = a1;
    v17 = v6;
    v18 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_34;
    }
    v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(a2, v8))
    {
      case 1u:
        v9 = *a2;
        *a1 = *a2;
        v10 = v9;
        v11 = a1;
        v12 = v8;
        v13 = 1;
        goto LABEL_20;
      case 2u:
        v33 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(a1, a2, v33);
        v11 = a1;
        v12 = v8;
        v13 = 2;
        goto LABEL_20;
      case 3u:
        v34 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(a1, a2, v34);
        v11 = a1;
        v12 = v8;
        v13 = 3;
        goto LABEL_20;
      case 4u:
        v35 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(a1, a2, v35);
        v11 = a1;
        v12 = v8;
        v13 = 4;
        goto LABEL_20;
      case 5u:
        v36 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(a1, a2, v36);
        v11 = a1;
        v12 = v8;
        v13 = 5;
        goto LABEL_20;
      case 6u:
        v37 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(a1, a2, v37);
        v11 = a1;
        v12 = v8;
        v13 = 6;
        goto LABEL_20;
      case 8u:
        v38 = *a2;
        *a1 = *a2;
        v39 = v38;
        v11 = a1;
        v12 = v8;
        v13 = 8;
        goto LABEL_20;
      case 9u:
        v40 = *a2;
        *a1 = *a2;
        v41 = v40;
        v11 = a1;
        v12 = v8;
        v13 = 9;
LABEL_20:
        swift_storeEnumTagMultiPayload(v11, v12, v13);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        break;
    }
    v16 = a1;
    v17 = v6;
    v18 = 0;
  }
  swift_storeEnumTagMultiPayload(v16, v17, v18);
LABEL_34:
  v51 = a3[5];
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  v54 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  v55 = a3[6];
  v56 = (void **)((char *)a1 + v55);
  v57 = (void **)((char *)a2 + v55);
  v58 = swift_getEnumCaseMultiPayload((char *)a2 + v55, v6);
  switch(v58)
  {
    case 2:
      v65 = *v57;
      *v56 = *v57;
      v66 = v65;
      v67 = v56;
      v68 = v6;
      v69 = 2;
LABEL_66:
      swift_storeEnumTagMultiPayload(v67, v68, v69);
      goto LABEL_67;
    case 1:
      v103 = a3;
      v70 = *v57;
      *v56 = *v57;
      v71 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v72 = (void **)((char *)v56 + v71);
      v73 = (void **)((char *)v57 + v71);
      v74 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v75 = *(_QWORD *)(v74 - 8);
      v76 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v75 + 48);
      v77 = v70;
      if (v76(v73, 1, v74))
      {
        v78 = sub_10002A750(&qword_100644980);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v73, v74))
        {
          case 1u:
            v79 = *v73;
            *v72 = *v73;
            v80 = v79;
            v81 = v72;
            v82 = v74;
            v83 = 1;
            goto LABEL_63;
          case 2u:
            v93 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v72, v73, v93);
            v81 = v72;
            v82 = v74;
            v83 = 2;
            goto LABEL_63;
          case 3u:
            v94 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v72, v73, v94);
            v81 = v72;
            v82 = v74;
            v83 = 3;
            goto LABEL_63;
          case 4u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v72, v73, v95);
            v81 = v72;
            v82 = v74;
            v83 = 4;
            goto LABEL_63;
          case 5u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(v72, v73, v96);
            v81 = v72;
            v82 = v74;
            v83 = 5;
            goto LABEL_63;
          case 6u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v72, v73, v97);
            v81 = v72;
            v82 = v74;
            v83 = 6;
            goto LABEL_63;
          case 8u:
            v98 = *v73;
            *v72 = *v73;
            v99 = v98;
            v81 = v72;
            v82 = v74;
            v83 = 8;
            goto LABEL_63;
          case 9u:
            v100 = *v73;
            *v72 = *v73;
            v101 = v100;
            v81 = v72;
            v82 = v74;
            v83 = 9;
LABEL_63:
            swift_storeEnumTagMultiPayload(v81, v82, v83);
            break;
          default:
            memcpy(v72, v73, *(_QWORD *)(v75 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
      }
      a3 = v103;
      v67 = v56;
      v68 = v6;
      v69 = 1;
      goto LABEL_66;
    case 0:
      v59 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v57, v59))
      {
        case 1u:
          v60 = *v57;
          *v56 = *v57;
          v61 = v60;
          v62 = v56;
          v63 = v59;
          v64 = 1;
          goto LABEL_53;
        case 2u:
          v84 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v56, v57, v84);
          v62 = v56;
          v63 = v59;
          v64 = 2;
          goto LABEL_53;
        case 3u:
          v85 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v56, v57, v85);
          v62 = v56;
          v63 = v59;
          v64 = 3;
          goto LABEL_53;
        case 4u:
          v86 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v56, v57, v86);
          v62 = v56;
          v63 = v59;
          v64 = 4;
          goto LABEL_53;
        case 5u:
          v87 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v56, v57, v87);
          v62 = v56;
          v63 = v59;
          v64 = 5;
          goto LABEL_53;
        case 6u:
          v88 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v56, v57, v88);
          v62 = v56;
          v63 = v59;
          v64 = 6;
          goto LABEL_53;
        case 8u:
          v89 = *v57;
          *v56 = *v57;
          v90 = v89;
          v62 = v56;
          v63 = v59;
          v64 = 8;
          goto LABEL_53;
        case 9u:
          v91 = *v57;
          *v56 = *v57;
          v92 = v91;
          v62 = v56;
          v63 = v59;
          v64 = 9;
LABEL_53:
          swift_storeEnumTagMultiPayload(v62, v63, v64);
          break;
        default:
          memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
          break;
      }
      v67 = v56;
      v68 = v6;
      v69 = 0;
      goto LABEL_66;
  }
  memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_67:
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

void **sub_1004D19BC(void **a1, void **a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  void *v9;
  id v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void **v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(void **, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  void **v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void **v56;
  void **v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  void *v61;
  id v62;
  void **v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  void **v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  void **v73;
  void **v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int (*v77)(void **, uint64_t, uint64_t);
  id v78;
  uint64_t v79;
  void *v80;
  void **v81;
  id v82;
  void **v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  id v92;
  void *v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  id v101;
  void *v102;
  id v103;
  int *v105;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
    if (EnumCaseMultiPayload == 2)
    {
      v14 = *a2;
      *a1 = *a2;
      v15 = v14;
      v16 = a1;
      v17 = v6;
      v18 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v19 = *a2;
      *a1 = *a2;
      v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v21 = (void **)((char *)a1 + v20);
      v22 = (void **)((char *)a2 + v20);
      v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v24 = *(_QWORD *)(v23 - 8);
      v25 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v24 + 48);
      v26 = v19;
      if (v25(v22, 1, v23))
      {
        v27 = sub_10002A750(&qword_100644980);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v22, v23))
        {
          case 1u:
            v28 = *v22;
            *v21 = *v22;
            v29 = v28;
            v30 = v21;
            v31 = v23;
            v32 = 1;
            goto LABEL_31;
          case 2u:
            v42 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v21, v22, v42);
            v30 = v21;
            v31 = v23;
            v32 = 2;
            goto LABEL_31;
          case 3u:
            v43 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v21, v22, v43);
            v30 = v21;
            v31 = v23;
            v32 = 3;
            goto LABEL_31;
          case 4u:
            v44 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v21, v22, v44);
            v30 = v21;
            v31 = v23;
            v32 = 4;
            goto LABEL_31;
          case 5u:
            v45 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v21, v22, v45);
            v30 = v21;
            v31 = v23;
            v32 = 5;
            goto LABEL_31;
          case 6u:
            v46 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v21, v22, v46);
            v30 = v21;
            v31 = v23;
            v32 = 6;
            goto LABEL_31;
          case 8u:
            v47 = *v22;
            *v21 = *v22;
            v48 = v47;
            v30 = v21;
            v31 = v23;
            v32 = 8;
            goto LABEL_31;
          case 9u:
            v49 = *v22;
            *v21 = *v22;
            v50 = v49;
            v30 = v21;
            v31 = v23;
            v32 = 9;
LABEL_31:
            swift_storeEnumTagMultiPayload(v30, v31, v32);
            break;
          default:
            memcpy(v21, v22, *(_QWORD *)(v24 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      v16 = a1;
      v17 = v6;
      v18 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_35;
      }
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v8))
      {
        case 1u:
          v9 = *a2;
          *a1 = *a2;
          v10 = v9;
          v11 = a1;
          v12 = v8;
          v13 = 1;
          goto LABEL_21;
        case 2u:
          v33 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(a1, a2, v33);
          v11 = a1;
          v12 = v8;
          v13 = 2;
          goto LABEL_21;
        case 3u:
          v34 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(a1, a2, v34);
          v11 = a1;
          v12 = v8;
          v13 = 3;
          goto LABEL_21;
        case 4u:
          v35 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(a1, a2, v35);
          v11 = a1;
          v12 = v8;
          v13 = 4;
          goto LABEL_21;
        case 5u:
          v36 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(a1, a2, v36);
          v11 = a1;
          v12 = v8;
          v13 = 5;
          goto LABEL_21;
        case 6u:
          v37 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(a1, a2, v37);
          v11 = a1;
          v12 = v8;
          v13 = 6;
          goto LABEL_21;
        case 8u:
          v38 = *a2;
          *a1 = *a2;
          v39 = v38;
          v11 = a1;
          v12 = v8;
          v13 = 8;
          goto LABEL_21;
        case 9u:
          v40 = *a2;
          *a1 = *a2;
          v41 = v40;
          v11 = a1;
          v12 = v8;
          v13 = 9;
LABEL_21:
          swift_storeEnumTagMultiPayload(v11, v12, v13);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
          break;
      }
      v16 = a1;
      v17 = v6;
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v17, v18);
  }
LABEL_35:
  v51 = a3[5];
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  v54 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  if (a1 != a2)
  {
    v55 = a3[6];
    v56 = (void **)((char *)a1 + v55);
    v57 = (void **)((char *)a2 + v55);
    sub_10001F544((uint64_t)a1 + v55, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v58 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    v59 = swift_getEnumCaseMultiPayload(v57, v58);
    switch(v59)
    {
      case 2:
        v66 = *v57;
        *v56 = *v57;
        v67 = v66;
        v68 = v56;
        v69 = v58;
        v70 = 2;
LABEL_68:
        swift_storeEnumTagMultiPayload(v68, v69, v70);
        goto LABEL_69;
      case 1:
        v105 = a3;
        v71 = *v57;
        *v56 = *v57;
        v72 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v73 = (void **)((char *)v56 + v72);
        v74 = (void **)((char *)v57 + v72);
        v75 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v76 = *(_QWORD *)(v75 - 8);
        v77 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v76 + 48);
        v78 = v71;
        if (v77(v74, 1, v75))
        {
          v79 = sub_10002A750(&qword_100644980);
          memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
          a3 = v105;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v74, v75))
          {
            case 1u:
              v80 = *v74;
              v81 = v73;
              *v73 = *v74;
              v82 = v80;
              v83 = v73;
              v84 = v75;
              v85 = 1;
              goto LABEL_65;
            case 2u:
              v95 = type metadata accessor for Date(0);
              v81 = v73;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v73, v74, v95);
              v83 = v73;
              v84 = v75;
              v85 = 2;
              goto LABEL_65;
            case 3u:
              v96 = type metadata accessor for Date(0);
              v81 = v73;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(v73, v74, v96);
              v83 = v73;
              v84 = v75;
              v85 = 3;
              goto LABEL_65;
            case 4u:
              v97 = type metadata accessor for Date(0);
              v81 = v73;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v73, v74, v97);
              v83 = v73;
              v84 = v75;
              v85 = 4;
              goto LABEL_65;
            case 5u:
              v98 = type metadata accessor for Date(0);
              v81 = v73;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v73, v74, v98);
              v83 = v73;
              v84 = v75;
              v85 = 5;
              goto LABEL_65;
            case 6u:
              v99 = type metadata accessor for Date(0);
              v81 = v73;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v73, v74, v99);
              v83 = v73;
              v84 = v75;
              v85 = 6;
              goto LABEL_65;
            case 8u:
              v100 = *v74;
              v81 = v73;
              *v73 = *v74;
              v101 = v100;
              v83 = v73;
              v84 = v75;
              v85 = 8;
              goto LABEL_65;
            case 9u:
              v102 = *v74;
              v81 = v73;
              *v73 = *v74;
              v103 = v102;
              v83 = v73;
              v84 = v75;
              v85 = 9;
LABEL_65:
              swift_storeEnumTagMultiPayload(v83, v84, v85);
              break;
            default:
              v81 = v73;
              memcpy(v73, v74, *(_QWORD *)(v76 + 64));
              break;
          }
          a3 = v105;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v76 + 56))(v81, 0, 1, v75);
        }
        v68 = v56;
        v69 = v58;
        v70 = 1;
        goto LABEL_68;
      case 0:
        v60 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v57, v60))
        {
          case 1u:
            v61 = *v57;
            *v56 = *v57;
            v62 = v61;
            v63 = v56;
            v64 = v60;
            v65 = 1;
            goto LABEL_55;
          case 2u:
            v86 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v56, v57, v86);
            v63 = v56;
            v64 = v60;
            v65 = 2;
            goto LABEL_55;
          case 3u:
            v87 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v56, v57, v87);
            v63 = v56;
            v64 = v60;
            v65 = 3;
            goto LABEL_55;
          case 4u:
            v88 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v56, v57, v88);
            v63 = v56;
            v64 = v60;
            v65 = 4;
            goto LABEL_55;
          case 5u:
            v89 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v56, v57, v89);
            v63 = v56;
            v64 = v60;
            v65 = 5;
            goto LABEL_55;
          case 6u:
            v90 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v56, v57, v90);
            v63 = v56;
            v64 = v60;
            v65 = 6;
            goto LABEL_55;
          case 8u:
            v91 = *v57;
            *v56 = *v57;
            v92 = v91;
            v63 = v56;
            v64 = v60;
            v65 = 8;
            goto LABEL_55;
          case 9u:
            v93 = *v57;
            *v56 = *v57;
            v94 = v93;
            v63 = v56;
            v64 = v60;
            v65 = 9;
LABEL_55:
            swift_storeEnumTagMultiPayload(v63, v64, v65);
            break;
          default:
            memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
            break;
        }
        v68 = v56;
        v69 = v58;
        v70 = 0;
        goto LABEL_68;
    }
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
LABEL_69:
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

_QWORD *sub_1004D22F8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    v13 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = sub_10002A750(&qword_100644980);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(v15, v16))
      {
        case 2u:
          v19 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v14, v15, v19);
          v20 = v14;
          v21 = v16;
          v22 = 2;
          goto LABEL_22;
        case 3u:
          v30 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v14, v15, v30);
          v20 = v14;
          v21 = v16;
          v22 = 3;
          goto LABEL_22;
        case 4u:
          v31 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v14, v15, v31);
          v20 = v14;
          v21 = v16;
          v22 = 4;
          goto LABEL_22;
        case 5u:
          v32 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v14, v15, v32);
          v20 = v14;
          v21 = v16;
          v22 = 5;
          goto LABEL_22;
        case 6u:
          v33 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v14, v15, v33);
          v20 = v14;
          v21 = v16;
          v22 = 6;
LABEL_22:
          swift_storeEnumTagMultiPayload(v20, v21, v22);
          break;
        default:
          memcpy(v14, v15, *(_QWORD *)(v17 + 64));
          break;
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v27 = a1;
    v28 = v6;
    v29 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_26;
    }
    v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(a2, v8))
    {
      case 2u:
        v9 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
        v10 = a1;
        v11 = v8;
        v12 = 2;
        goto LABEL_15;
      case 3u:
        v23 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
        v10 = a1;
        v11 = v8;
        v12 = 3;
        goto LABEL_15;
      case 4u:
        v24 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a1, a2, v24);
        v10 = a1;
        v11 = v8;
        v12 = 4;
        goto LABEL_15;
      case 5u:
        v25 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a1, a2, v25);
        v10 = a1;
        v11 = v8;
        v12 = 5;
        goto LABEL_15;
      case 6u:
        v26 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(a1, a2, v26);
        v10 = a1;
        v11 = v8;
        v12 = 6;
LABEL_15:
        swift_storeEnumTagMultiPayload(v10, v11, v12);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        break;
    }
    v27 = a1;
    v28 = v6;
    v29 = 0;
  }
  swift_storeEnumTagMultiPayload(v27, v28, v29);
LABEL_26:
  v34 = a3[5];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
  v38 = a3[6];
  v39 = (_QWORD *)((char *)a1 + v38);
  v40 = (_QWORD *)((char *)a2 + v38);
  v41 = swift_getEnumCaseMultiPayload((char *)a2 + v38, v6);
  if (v41 == 1)
  {
    *v39 = *v40;
    v47 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
    v48 = (char *)v39 + v47;
    v49 = (char *)v40 + v47;
    v50 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v51 = *(_QWORD *)(v50 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
    {
      v52 = sub_10002A750(&qword_100644980);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(v49, v50))
      {
        case 2u:
          v53 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v48, v49, v53);
          v54 = v48;
          v55 = v50;
          v56 = 2;
          goto LABEL_47;
        case 3u:
          v64 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v48, v49, v64);
          v54 = v48;
          v55 = v50;
          v56 = 3;
          goto LABEL_47;
        case 4u:
          v65 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v48, v49, v65);
          v54 = v48;
          v55 = v50;
          v56 = 4;
          goto LABEL_47;
        case 5u:
          v66 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v48, v49, v66);
          v54 = v48;
          v55 = v50;
          v56 = 5;
          goto LABEL_47;
        case 6u:
          v67 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v48, v49, v67);
          v54 = v48;
          v55 = v50;
          v56 = 6;
LABEL_47:
          swift_storeEnumTagMultiPayload(v54, v55, v56);
          break;
        default:
          memcpy(v48, v49, *(_QWORD *)(v51 + 64));
          break;
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
    }
    v61 = v39;
    v62 = v6;
    v63 = 1;
    goto LABEL_50;
  }
  if (!v41)
  {
    v42 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(v40, v42))
    {
      case 2u:
        v43 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v39, v40, v43);
        v44 = v39;
        v45 = v42;
        v46 = 2;
        goto LABEL_40;
      case 3u:
        v57 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v39, v40, v57);
        v44 = v39;
        v45 = v42;
        v46 = 3;
        goto LABEL_40;
      case 4u:
        v58 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v39, v40, v58);
        v44 = v39;
        v45 = v42;
        v46 = 4;
        goto LABEL_40;
      case 5u:
        v59 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v39, v40, v59);
        v44 = v39;
        v45 = v42;
        v46 = 5;
        goto LABEL_40;
      case 6u:
        v60 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v39, v40, v60);
        v44 = v39;
        v45 = v42;
        v46 = 6;
LABEL_40:
        swift_storeEnumTagMultiPayload(v44, v45, v46);
        break;
      default:
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        break;
    }
    v61 = v39;
    v62 = v6;
    v63 = 0;
LABEL_50:
    swift_storeEnumTagMultiPayload(v61, v62, v63);
    goto LABEL_51;
  }
  memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_51:
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

_QWORD *sub_1004D2A20(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v13 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        v18 = sub_10002A750(&qword_100644980);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v15, v16))
        {
          case 2u:
            v19 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v14, v15, v19);
            v20 = v14;
            v21 = v16;
            v22 = 2;
            goto LABEL_23;
          case 3u:
            v30 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v14, v15, v30);
            v20 = v14;
            v21 = v16;
            v22 = 3;
            goto LABEL_23;
          case 4u:
            v31 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v14, v15, v31);
            v20 = v14;
            v21 = v16;
            v22 = 4;
            goto LABEL_23;
          case 5u:
            v32 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v14, v15, v32);
            v20 = v14;
            v21 = v16;
            v22 = 5;
            goto LABEL_23;
          case 6u:
            v33 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v14, v15, v33);
            v20 = v14;
            v21 = v16;
            v22 = 6;
LABEL_23:
            swift_storeEnumTagMultiPayload(v20, v21, v22);
            break;
          default:
            memcpy(v14, v15, *(_QWORD *)(v17 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      v27 = a1;
      v28 = v6;
      v29 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_27;
      }
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v8))
      {
        case 2u:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
          v10 = a1;
          v11 = v8;
          v12 = 2;
          goto LABEL_16;
        case 3u:
          v23 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
          v10 = a1;
          v11 = v8;
          v12 = 3;
          goto LABEL_16;
        case 4u:
          v24 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a1, a2, v24);
          v10 = a1;
          v11 = v8;
          v12 = 4;
          goto LABEL_16;
        case 5u:
          v25 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a1, a2, v25);
          v10 = a1;
          v11 = v8;
          v12 = 5;
          goto LABEL_16;
        case 6u:
          v26 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(a1, a2, v26);
          v10 = a1;
          v11 = v8;
          v12 = 6;
LABEL_16:
          swift_storeEnumTagMultiPayload(v10, v11, v12);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
          break;
      }
      v27 = a1;
      v28 = v6;
      v29 = 0;
    }
    swift_storeEnumTagMultiPayload(v27, v28, v29);
  }
LABEL_27:
  v34 = a3[5];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 40))(v35, v36, v37);
  if (a1 != a2)
  {
    v38 = a3[6];
    v39 = (_QWORD *)((char *)a1 + v38);
    v40 = (_QWORD *)((char *)a2 + v38);
    sub_10001F544((uint64_t)a1 + v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v41 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    v42 = swift_getEnumCaseMultiPayload(v40, v41);
    if (v42 == 1)
    {
      *v39 = *v40;
      v48 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v49 = (char *)v39 + v48;
      v50 = (char *)v40 + v48;
      v51 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v52 = *(_QWORD *)(v51 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
      {
        v53 = sub_10002A750(&qword_100644980);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v50, v51))
        {
          case 2u:
            v54 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v49, v50, v54);
            v55 = v49;
            v56 = v51;
            v57 = 2;
            goto LABEL_49;
          case 3u:
            v65 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v49, v50, v65);
            v55 = v49;
            v56 = v51;
            v57 = 3;
            goto LABEL_49;
          case 4u:
            v66 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v49, v50, v66);
            v55 = v49;
            v56 = v51;
            v57 = 4;
            goto LABEL_49;
          case 5u:
            v67 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v49, v50, v67);
            v55 = v49;
            v56 = v51;
            v57 = 5;
            goto LABEL_49;
          case 6u:
            v68 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v49, v50, v68);
            v55 = v49;
            v56 = v51;
            v57 = 6;
LABEL_49:
            swift_storeEnumTagMultiPayload(v55, v56, v57);
            break;
          default:
            memcpy(v49, v50, *(_QWORD *)(v52 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      }
      v62 = v39;
      v63 = v41;
      v64 = 1;
      goto LABEL_52;
    }
    if (!v42)
    {
      v43 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v40, v43))
      {
        case 2u:
          v44 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v39, v40, v44);
          v45 = v39;
          v46 = v43;
          v47 = 2;
          goto LABEL_42;
        case 3u:
          v58 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v39, v40, v58);
          v45 = v39;
          v46 = v43;
          v47 = 3;
          goto LABEL_42;
        case 4u:
          v59 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v39, v40, v59);
          v45 = v39;
          v46 = v43;
          v47 = 4;
          goto LABEL_42;
        case 5u:
          v60 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v39, v40, v60);
          v45 = v39;
          v46 = v43;
          v47 = 5;
          goto LABEL_42;
        case 6u:
          v61 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v39, v40, v61);
          v45 = v39;
          v46 = v43;
          v47 = 6;
LABEL_42:
          swift_storeEnumTagMultiPayload(v45, v46, v47);
          break;
        default:
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
          break;
      }
      v62 = v39;
      v63 = v41;
      v64 = 0;
LABEL_52:
      swift_storeEnumTagMultiPayload(v62, v63, v64);
      goto LABEL_53;
    }
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
LABEL_53:
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

uint64_t sub_1004D3184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004D3190);
}

uint64_t sub_1004D3190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 2)
    return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1004D3248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004D3254);
}

uint64_t sub_1004D3254(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  return result;
}

uint64_t sub_1004D32F8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  result = type metadata accessor for TTRRemindersListViewModel.ItemID(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    v6[0] = v4;
    result = type metadata accessor for IndexPath(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(result - 8) + 64;
      v6[2] = v4;
      v6[3] = &unk_100539B38;
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t destroy for TTRIRemindersBoardDragItemSourcesRelativeToColumn(_QWORD *a1)
{
  swift_unknownObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  return swift_bridgeObjectRelease(a1[3]);
}

uint64_t *initializeWithCopy for TTRIRemindersBoardDragItemSourcesRelativeToColumn(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  swift_unknownObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t *assignWithCopy for TTRIRemindersBoardDragItemSourcesRelativeToColumn(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_unknownObjectRetain(v5);
  swift_unknownObjectRelease(v4);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = a2[3];
  v11 = a1[3];
  a1[3] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  return a1;
}

_QWORD *assignWithTake for TTRIRemindersBoardDragItemSourcesRelativeToColumn(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_unknownObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersBoardDragItemSourcesRelativeToColumn(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersBoardDragItemSourcesRelativeToColumn(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersBoardDragItemSourcesRelativeToColumn()
{
  return &type metadata for TTRIRemindersBoardDragItemSourcesRelativeToColumn;
}

uint64_t sub_1004D358C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  result = type metadata accessor for TTRITreeViewTableUpdates.IndexAndAnimation(0, a3, a4, v9);
  *(_QWORD *)(a5 + *(int *)(result + 36)) = a2;
  return result;
}

uint64_t sub_1004D35E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100663E18);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100663E18);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

BOOL sub_1004D3678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  if ((dispatch thunk of static Equatable.== infix(_:_:)(a1, a2, a3, a4) & 1) == 0)
    return 0;
  v9 = type metadata accessor for TTRITreeViewTableUpdates.IndexAndAnimation(0, a3, a4, v8);
  return *(_QWORD *)(a1 + *(int *)(v9 + 36)) == *(_QWORD *)(a2 + *(int *)(v9 + 36));
}

BOOL sub_1004D36DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1004D3678(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1004D36E8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  __n128 v50;
  void (*v51)(char *, uint64_t, __n128);
  char *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  char *v75;
  __n128 v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96[2];

  v94 = sub_10002A750(qword_100642230);
  v2 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v93 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v74 - v5;
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v85 = (char *)&v74 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)&v74 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v74 - v17;
  v19 = sub_10002A750(&qword_10063F658);
  v84 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v92 = (uint64_t)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10002A750((uint64_t *)&unk_100646310);
  __chkstk_darwin(v21);
  v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = a1;
  v24 = a1[7];
  v25 = *(_QWORD *)(v24 + 16);
  if (!v25)
    return 0;
  v26 = v95[6];
  v27 = *(_QWORD *)(v26 + 16);
  if (!v27)
    return 0;
  v28 = *(_QWORD *)(v2 + 72);
  v29 = *(int *)(v94 + 36);
  v91 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v30 = (_QWORD *)(v26 + v29 + v91);
  v31 = v85;
  while (*v30 == 5)
  {
    v30 = (_QWORD *)((char *)v30 + v28);
    if (!--v27)
      return 0;
  }
  v83 = v6;
  v90 = v28;
  v33 = v24 + ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80));
  v79 = *(_QWORD *)(v84 + 72);
  v74 = v24;
  v34 = swift_bridgeObjectRetain(v24);
  v35 = v33;
  v34.n128_u64[0] = 136315394;
  v76 = v34;
  v75 = &type metadata for Any[8];
  v81 = v15;
  v82 = v8;
  v86 = v10;
  v89 = v18;
  v80 = v19;
  while (1)
  {
    v87 = v35;
    v88 = v25;
    sub_10000735C(v35, (uint64_t)v23, &qword_10063F658);
    v36 = (uint64_t)v23;
    v37 = v84;
    v78 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56);
    v78(v36, 0, 1, v19);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v36, 1, v19) == 1)
      break;
    v38 = v92;
    sub_10000F614(v36, v92, &qword_10063F658);
    v39 = v19;
    v40 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v40(v18, v38, v7);
    v40(v15, v38 + *(int *)(v39 + 36), v7);
    if (qword_10063D878 != -1)
      swift_once(&qword_10063D878, sub_1004D35E8);
    v41 = type metadata accessor for Logger(0);
    sub_100012DC4(v41, (uint64_t)qword_100663E18);
    v40(v31, (uint64_t)v18, v7);
    v42 = ((uint64_t (*)(char *, char *, uint64_t))v40)(v10, v15, v7);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.default.getter(v43);
    if (os_log_type_enabled(v43, v44))
    {
      v45 = swift_slowAlloc(22, -1);
      v77 = swift_slowAlloc(64, -1);
      v96[0] = v77;
      *(_DWORD *)v45 = v76.n128_u32[0];
      v46 = sub_1000175C8((unint64_t *)&qword_100644910, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v47 = dispatch thunk of CustomStringConvertible.description.getter(v7, v46);
      v49 = v48;
      *(_QWORD *)(v45 + 4) = sub_100027E40(v47, v48, v96);
      v50 = swift_bridgeObjectRelease(v49);
      v51 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
      v51(v31, v7, v50);
      *(_WORD *)(v45 + 12) = 2080;
      v52 = v86;
      v53 = dispatch thunk of CustomStringConvertible.description.getter(v7, v46);
      v55 = v54;
      *(_QWORD *)(v45 + 14) = sub_100027E40(v53, v54, v96);
      v56 = swift_bridgeObjectRelease(v55);
      v51(v52, v7, v56);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "TTRITreeViewTableUpdates: move potentially conflicts with hard reload, convert it to delete+insert {from: %s, to: %s}", (uint8_t *)v45, 0x16u);
      v57 = v77;
      swift_arrayDestroy(v77, 2, v75);
      swift_slowDealloc(v57, -1, -1);
      swift_slowDealloc(v45, -1, -1);
    }
    else
    {
      v51 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
      ((void (*)(char *, uint64_t))v51)(v31, v7);
      ((void (*)(char *, uint64_t))v51)(v10, v7);
    }

    v23 = (char *)v36;
    v58 = (uint64_t)v83;
    v40(v83, (uint64_t)v89, v7);
    *(_QWORD *)(v58 + *(int *)(v94 + 36)) = 0;
    v59 = v95[5];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v59);
    v15 = v81;
    v61 = v88;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v59 = sub_100455688(0, *(_QWORD *)(v59 + 16) + 1, 1, v59);
    v63 = *(_QWORD *)(v59 + 16);
    v62 = *(_QWORD *)(v59 + 24);
    v64 = v90;
    if (v63 >= v62 >> 1)
    {
      v71 = sub_100455688(v62 > 1, v63 + 1, 1, v59);
      v64 = v90;
      v59 = v71;
    }
    *(_QWORD *)(v59 + 16) = v63 + 1;
    sub_10000F614(v58, v59 + v91 + v63 * v64, qword_100642230);
    v65 = v95;
    v95[5] = v59;
    v66 = (uint64_t)v93;
    v40(v93, (uint64_t)v15, v7);
    *(_QWORD *)(v66 + *(int *)(v94 + 36)) = 0;
    v67 = v65[4];
    if ((swift_isUniquelyReferenced_nonNull_native(v67) & 1) == 0)
      v67 = sub_100455688(0, *(_QWORD *)(v67 + 16) + 1, 1, v67);
    v19 = v80;
    v69 = *(_QWORD *)(v67 + 16);
    v68 = *(_QWORD *)(v67 + 24);
    v70 = v90;
    if (v69 >= v68 >> 1)
    {
      v72 = sub_100455688(v68 > 1, v69 + 1, 1, v67);
      v70 = v90;
      v67 = v72;
    }
    *(_QWORD *)(v67 + 16) = v69 + 1;
    sub_10000F614((uint64_t)v93, v67 + v91 + v69 * v70, qword_100642230);
    v95[4] = v67;
    ((void (*)(char *, uint64_t))v51)(v15, v7);
    v18 = v89;
    ((void (*)(char *, uint64_t))v51)(v89, v7);
    sub_1000073A0(v92, &qword_10063F658);
    v10 = v86;
    v35 = v87 + v79;
    v25 = v61 - 1;
    v8 = v82;
    v31 = v85;
    if (!v25)
    {
      v78((uint64_t)v23, 1, 1, v19);
      break;
    }
  }
  swift_bridgeObjectRelease(v74);
  v73 = v95;
  swift_bridgeObjectRelease(v95[7]);
  v73[7] = _swiftEmptyArrayStorage;
  return 1;
}

void sub_1004D3DD0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[40];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v1 = sub_10002A750(qword_100642230);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v46 - v9;
  v11 = *v0;
  v12 = *(_QWORD *)(*v0 + 16);
  if (v12)
  {
    if (*(_QWORD *)(v11 + 40) != 5)
      return;
    if (v12 != 1)
    {
      v13 = (_QWORD *)(v11 + 56);
      v14 = 1;
      while (1)
      {
        v15 = v14 + 1;
        if (__OFADD__(v14, 1))
          break;
        if (*v13 != 5)
          return;
        v13 += 2;
        ++v14;
        if (v15 == v12)
          goto LABEL_8;
      }
      __break(1u);
      goto LABEL_52;
    }
  }
LABEL_8:
  v16 = (_QWORD *)v0[1];
  v17 = v16[2];
  if (v17)
  {
    if (v16[5] != 5)
      return;
    if (v17 != 1)
    {
      v18 = v16 + 7;
      v19 = 1;
      while (1)
      {
        v20 = v19 + 1;
        if (__OFADD__(v19, 1))
          break;
        if (*v18 != 5)
          return;
        v18 += 2;
        ++v19;
        if (v20 == v17)
          goto LABEL_15;
      }
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      return;
    }
  }
LABEL_15:
  v21 = (_QWORD *)v0[2];
  v22 = v21[2];
  if (v22)
  {
    if (v21[5] != 5)
      return;
    if (v22 != 1)
    {
      v23 = v21 + 7;
      v24 = 1;
      do
      {
        v25 = v24 + 1;
        if (__OFADD__(v24, 1))
          goto LABEL_53;
        if (*v23 != 5)
          return;
        v23 += 2;
        ++v24;
      }
      while (v25 != v22);
    }
  }
  if (!*(_QWORD *)(v0[3] + 16))
  {
    v26 = v0[4];
    v53 = v26;
    v27 = *(_QWORD *)(v26 + 16);
    if (v27)
    {
      v28 = v26 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
      v47 = v2;
      v29 = *(_QWORD *)(v2 + 72);
      swift_bridgeObjectRetain(v26);
      while (1)
      {
        sub_10000735C(v28, (uint64_t)v10, qword_100642230);
        v30 = *(_QWORD *)&v10[*(int *)(v1 + 36)];
        sub_1000073A0((uint64_t)v10, qword_100642230);
        if (v30 != 5)
          break;
        v28 += v29;
        if (!--v27)
        {
          sub_1000522B0(&v53);
          v2 = v47;
          goto LABEL_28;
        }
      }
      v45 = &v53;
      goto LABEL_49;
    }
LABEL_28:
    v31 = v0[5];
    v52 = v31;
    v32 = *(_QWORD *)(v31 + 16);
    if (v32)
    {
      v33 = v31 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
      v34 = *(_QWORD *)(v2 + 72);
      swift_bridgeObjectRetain(v31);
      while (1)
      {
        sub_10000735C(v33, (uint64_t)v7, qword_100642230);
        v35 = *(_QWORD *)&v7[*(int *)(v1 + 36)];
        sub_1000073A0((uint64_t)v7, qword_100642230);
        if (v35 != 5)
          break;
        v33 += v34;
        if (!--v32)
        {
          sub_1000522B0(&v52);
          goto LABEL_33;
        }
      }
      v45 = &v52;
      goto LABEL_49;
    }
LABEL_33:
    v36 = v0[6];
    v51 = v36;
    v37 = *(_QWORD *)(v36 + 16);
    if (v37)
    {
      v38 = v36 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
      v39 = *(_QWORD *)(v2 + 72);
      swift_bridgeObjectRetain(v36);
      while (1)
      {
        sub_10000735C(v38, (uint64_t)v4, qword_100642230);
        v40 = *(_QWORD *)&v4[*(int *)(v1 + 36)];
        sub_1000073A0((uint64_t)v4, qword_100642230);
        if (v40 != 5)
          break;
        v38 += v39;
        if (!--v37)
        {
          sub_1000522B0(&v51);
          goto LABEL_38;
        }
      }
      v45 = &v51;
      goto LABEL_49;
    }
LABEL_38:
    if (!*(_QWORD *)(v0[7] + 16))
    {
      v41 = v0[8];
      v50 = v41;
      v42 = *(_QWORD *)(v41 + 16);
      if (v42)
      {
        v43 = v41 + 32;
        swift_bridgeObjectRetain(v41);
        while (1)
        {
          sub_10000735C(v43, (uint64_t)v48, &qword_10063F668);
          v44 = v49;
          sub_1000073A0((uint64_t)v48, &qword_10063F668);
          if (v44 != 5)
            break;
          v43 += 48;
          if (!--v42)
          {
            sub_1000522B0(&v50);
            return;
          }
        }
        v45 = &v50;
LABEL_49:
        sub_1000522B0(v45);
      }
    }
  }
}

uint64_t sub_1004D416C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Swift::String v17;
  Swift::String v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  Swift::String v28;
  Swift::String v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v37[128];
  _BYTE v38[136];

  v1 = sub_10002A750(&qword_100663E68);
  inited = swift_initStackObject(v1, v38);
  *(_OWORD *)(inited + 16) = xmmword_1005275D0;
  *(_QWORD *)(inited + 32) = 73;
  *(_QWORD *)(inited + 40) = 0xE100000000000000;
  v3 = v0[5];
  *(_QWORD *)(inited + 48) = *(_QWORD *)(v0[4] + 16);
  *(_QWORD *)(inited + 56) = 68;
  *(_QWORD *)(inited + 64) = 0xE100000000000000;
  *(_QWORD *)(inited + 72) = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(inited + 80) = 82;
  *(_QWORD *)(inited + 88) = 0xE100000000000000;
  v4 = v0[7];
  *(_QWORD *)(inited + 96) = *(_QWORD *)(v0[6] + 16);
  *(_QWORD *)(inited + 104) = 77;
  *(_QWORD *)(inited + 112) = 0xE100000000000000;
  *(_QWORD *)(inited + 120) = *(_QWORD *)(v4 + 16);
  v5 = swift_initStackObject(v1, v37);
  *(_OWORD *)(v5 + 16) = xmmword_1005275D0;
  *(_QWORD *)(v5 + 32) = 73;
  *(_QWORD *)(v5 + 40) = 0xE100000000000000;
  v6 = v0[1];
  *(_QWORD *)(v5 + 48) = *(_QWORD *)(*v0 + 16);
  *(_QWORD *)(v5 + 56) = 68;
  *(_QWORD *)(v5 + 64) = 0xE100000000000000;
  *(_QWORD *)(v5 + 72) = *(_QWORD *)(v6 + 16);
  *(_QWORD *)(v5 + 80) = 82;
  *(_QWORD *)(v5 + 88) = 0xE100000000000000;
  v7 = v0[3];
  *(_QWORD *)(v5 + 96) = *(_QWORD *)(v0[2] + 16);
  *(_QWORD *)(v5 + 104) = 77;
  *(_QWORD *)(v5 + 112) = 0xE100000000000000;
  *(_QWORD *)(v5 + 120) = *(_QWORD *)(v7 + 16);
  v8 = sub_1004D4580(inited);
  swift_bridgeObjectRelease(inited);
  v9 = sub_1004D4580(v5);
  swift_setDeallocating(v5);
  v10 = *(_QWORD *)(v5 + 16);
  v11 = sub_10002A750(qword_100663E70);
  swift_arrayDestroy(v5 + 32, v10, v11);
  if (v9[2])
  {
    v12 = sub_10002A750(&qword_1006466D0);
    v13 = sub_100023FEC((unint64_t *)&qword_10064C980, &qword_1006466D0, (uint64_t)&protocol conformance descriptor for [A]);
    v14 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v12, v13);
    v16 = v15;
    swift_bridgeObjectRelease(v9);
    v17._countAndFlagsBits = v14;
    v17._object = v16;
    String.append(_:)(v17);
    swift_bridgeObjectRelease(v16);
    v18._countAndFlagsBits = 125;
    v18._object = (void *)0xE100000000000000;
    String.append(_:)(v18);
    v19 = sub_10001D840(0, 1, 1, _swiftEmptyArrayStorage);
    v21 = v19[2];
    v20 = v19[3];
    if (v21 >= v20 >> 1)
      v19 = sub_10001D840((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
    v19[2] = v21 + 1;
    v22 = &v19[2 * v21];
    v22[4] = 0x3A6E6F6974636573;
    v22[5] = 0xEA00000000007B20;
    if (v8[2])
      goto LABEL_5;
  }
  else
  {
    swift_bridgeObjectRelease(v9);
    v19 = _swiftEmptyArrayStorage;
    if (v8[2])
    {
LABEL_5:
      v23 = sub_10002A750(&qword_1006466D0);
      v24 = sub_100023FEC((unint64_t *)&qword_10064C980, &qword_1006466D0, (uint64_t)&protocol conformance descriptor for [A]);
      v25 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v23, v24);
      v27 = v26;
      swift_bridgeObjectRelease(v8);
      v28._countAndFlagsBits = v25;
      v28._object = v27;
      String.append(_:)(v28);
      swift_bridgeObjectRelease(v27);
      v29._countAndFlagsBits = 125;
      v29._object = (void *)0xE100000000000000;
      String.append(_:)(v29);
      if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
        v19 = sub_10001D840(0, v19[2] + 1, 1, v19);
      v31 = v19[2];
      v30 = v19[3];
      if (v31 >= v30 >> 1)
        v19 = sub_10001D840((_QWORD *)(v30 > 1), v31 + 1, 1, v19);
      v19[2] = v31 + 1;
      v32 = &v19[2 * v31];
      v32[4] = 0x7B203A776F72;
      v32[5] = 0xE600000000000000;
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease(v8);
  if (!v19[2])
  {
    swift_bridgeObjectRelease(v19);
    return 0x61647075206F6E28;
  }
LABEL_12:
  v33 = sub_10002A750(&qword_1006466D0);
  v34 = sub_100023FEC((unint64_t *)&qword_10064C980, &qword_1006466D0, (uint64_t)&protocol conformance descriptor for [A]);
  v35 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v33, v34);
  swift_bridgeObjectRelease(v19);
  return v35;
}

_QWORD *sub_1004D4580(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  _QWORD *v7;
  uint64_t v8;
  Swift::String v9;
  Swift::String v10;
  void *object;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(a1);
  v3 = _swiftEmptyArrayStorage;
  v5 = (uint64_t *)(v4 + 48);
  v6 = (uint64_t *)(v4 + 48);
  do
  {
    v8 = *v6;
    v6 += 3;
    if (v8 >= 1)
    {
      v15 = *(v5 - 2);
      v16 = *(v5 - 1);
      swift_bridgeObjectRetain_n(v16, 2);
      v9._countAndFlagsBits = 8250;
      v9._object = (void *)0xE200000000000000;
      String.append(_:)(v9);
      v10._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      object = v10._object;
      String.append(_:)(v10);
      swift_bridgeObjectRelease(v16);
      swift_bridgeObjectRelease(object);
      if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        v3 = sub_10001D840(0, v3[2] + 1, 1, v3);
      v13 = v3[2];
      v12 = v3[3];
      if (v13 >= v12 >> 1)
        v3 = sub_10001D840((_QWORD *)(v12 > 1), v13 + 1, 1, v3);
      v3[2] = v13 + 1;
      v7 = &v3[2 * v13];
      v7[4] = v15;
      v7[5] = v16;
    }
    v5 = v6;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease(a1);
  return v3;
}

uint64_t sub_1004D46E4(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[5];
  uint64_t v8;
  _OWORD v9[5];
  uint64_t v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 80);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1004D5EA4((uint64_t)v7, (uint64_t)v9) & 1;
}

void sub_1004D474C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  void *v8;
  char v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  char isEscapingClosureAtFileLocation;
  id v25;
  _QWORD aBlock[6];

  v8 = v7;
  sub_1004D3DD0();
  if ((v16 & 1) != 0)
  {
    v25 = (id)objc_opt_self(UIView);
    v17 = swift_allocObject(&unk_10060BD90, 160, 7);
    v18 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v17 + 56) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v17 + 72) = v18;
    *(_OWORD *)(v17 + 88) = *(_OWORD *)(a1 + 64);
    v19 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v17 + 24) = *(_OWORD *)a1;
    *(_QWORD *)(v17 + 16) = v8;
    v20 = *(_QWORD *)(a1 + 80);
    *(_OWORD *)(v17 + 40) = v19;
    *(_QWORD *)(v17 + 104) = v20;
    *(_QWORD *)(v17 + 112) = a2;
    *(_QWORD *)(v17 + 120) = a3;
    *(_QWORD *)(v17 + 128) = a4;
    *(_QWORD *)(v17 + 136) = a5;
    *(_QWORD *)(v17 + 144) = a6;
    *(_QWORD *)(v17 + 152) = a7;
    v21 = swift_allocObject(&unk_10060BDB8, 32, 7);
    *(_QWORD *)(v21 + 16) = sub_1004D5C78;
    *(_QWORD *)(v21 + 24) = v17;
    aBlock[4] = sub_10001B278;
    aBlock[5] = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001B258;
    aBlock[3] = &unk_10060BDD0;
    v22 = _Block_copy(aBlock);
    v23 = v8;
    sub_1004D5CBC((_QWORD *)a1);
    swift_retain();
    sub_100053DE4(a4, a5);
    sub_100053DE4(a6, a7);
    swift_retain();
    objc_msgSend(v25, "performWithoutAnimation:", v22, swift_release().n128_f64[0]);
    _Block_release(v22);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v21, "", 161, 170, 44, 1);
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
  else
  {
    sub_1004D4958(a1, a2, a3, a4, a5, a6, a7);
  }
}

void sub_1004D4958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  void *v24;
  id v25;
  void **aBlock;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;

  v13 = swift_allocObject(&unk_10060BE08, 128, 7);
  v14 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v13 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v13 + 64) = v14;
  *(_OWORD *)(v13 + 80) = *(_OWORD *)(a1 + 64);
  v15 = *(_QWORD *)(a1 + 80);
  v16 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v13 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v13 + 32) = v16;
  *(_QWORD *)(v13 + 96) = v15;
  *(_QWORD *)(v13 + 104) = a4;
  *(_QWORD *)(v13 + 112) = a5;
  *(_QWORD *)(v13 + 120) = v7;
  v17 = swift_allocObject(&unk_10060BE30, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_1004D5DE4;
  *(_QWORD *)(v17 + 24) = v13;
  v32 = sub_1000381EC;
  v33 = v17;
  aBlock = _NSConcreteStackBlock;
  v29 = 1107296256;
  v30 = sub_10001B258;
  v31 = &unk_10060BE48;
  v18 = _Block_copy(&aBlock);
  sub_1004D5CBC((_QWORD *)a1);
  sub_100053DE4(a4, a5);
  v19 = v7;
  swift_retain();
  swift_release();
  v20 = swift_allocObject(&unk_10060BE80, 144, 7);
  v21 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v20 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v20 + 64) = v21;
  *(_OWORD *)(v20 + 80) = *(_OWORD *)(a1 + 64);
  v22 = *(_QWORD *)(a1 + 80);
  v23 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v20 + 32) = v23;
  *(_QWORD *)(v20 + 96) = v22;
  *(_QWORD *)(v20 + 104) = a2;
  *(_QWORD *)(v20 + 112) = a3;
  *(_QWORD *)(v20 + 120) = a6;
  *(_QWORD *)(v20 + 128) = a7;
  *(_QWORD *)(v20 + 136) = v19;
  v32 = sub_1004D5E90;
  v33 = v20;
  aBlock = _NSConcreteStackBlock;
  v29 = 1107296256;
  v30 = sub_1000D3A2C;
  v31 = &unk_10060BE98;
  v24 = _Block_copy(&aBlock);
  sub_1004D5CBC((_QWORD *)a1);
  v25 = v19;
  swift_retain();
  sub_100053DE4(a6, a7);
  objc_msgSend(v25, "performBatchUpdates:completion:", v18, v24, swift_release().n128_f64[0]);
  _Block_release(v24);
  _Block_release(v18);
  swift_release();
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v17, "", 161, 187, 29, 1);
  swift_release();
  if ((v13 & 1) != 0)
    __break(1u);
}

double sub_1004D4B9C(__int128 *a1, void (*a2)(_QWORD), uint64_t a3, _BYTE *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _QWORD *v14;
  NSObject *v15;
  os_log_type_t v16;
  int v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  _QWORD *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  void (*v49)(_QWORD);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  _BYTE *v56;
  void (*v57)(_QWORD, _QWORD, _QWORD);
  Class isa;
  Class v59;
  void (*v60)(_QWORD, _QWORD);
  uint64_t v61;
  _BYTE *v62;
  int64_t v63;
  uint64_t v64;
  _BYTE *v65;
  int64_t v66;
  uint64_t v67;
  _BYTE *v68;
  int64_t v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  _BYTE *v75;
  double v76;
  _QWORD *v77;
  double result;
  _BYTE v79[4];
  int v80;
  uint64_t v81;
  void (*v82)(_QWORD);
  uint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91[3];
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  unint64_t v97;
  _OWORD v98[4];
  __int128 v99;
  unint64_t v100;

  v88 = a4;
  v84 = type metadata accessor for IndexPath(0);
  v86 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v85 = &v79[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v79[-v9];
  v83 = sub_10002A750(&qword_10063F658);
  v87 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v12 = &v79[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10063D878 != -1)
    swift_once(&qword_10063D878, sub_1004D35E8);
  v13 = type metadata accessor for Logger(0);
  sub_100012DC4(v13, (uint64_t)qword_100663E18);
  sub_1004D5CBC(a1);
  v14 = sub_1004D5CBC(a1);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  v17 = v16;
  v18 = os_log_type_enabled(v15, v16);
  v89 = v12;
  if (v18)
  {
    v19 = swift_slowAlloc(22, -1);
    v81 = swift_slowAlloc(64, -1);
    *(_QWORD *)&v98[0] = v81;
    *(_DWORD *)v19 = 136315394;
    v82 = a2;
    v20 = a3;
    v80 = v17;
    v21 = v10;
    v23 = *((_QWORD *)a1 + 9);
    v22 = *((_QWORD *)a1 + 10);
    swift_bridgeObjectRetain(v22);
    *(_QWORD *)&v92 = sub_100027E40(v23, v22, (uint64_t *)v98);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, (char *)&v92 + 8, v19 + 4, v19 + 12);
    swift_bridgeObjectRelease(v22);
    *(_WORD *)(v19 + 12) = 2080;
    v24 = sub_1004D416C();
    v26 = v25;
    *(_QWORD *)&v92 = sub_100027E40(v24, v25, (uint64_t *)v98);
    a3 = v20;
    a2 = v82;
    v10 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, (char *)&v92 + 8, v19 + 14, v19 + 22);
    swift_bridgeObjectRelease(v26);
    sub_1004D61C4((uint64_t *)a1);
    sub_1004D61C4((uint64_t *)a1);
    _os_log_impl((void *)&_mh_execute_header, v15, (os_log_type_t)v80, "Performing table updates for %s: %s", (uint8_t *)v19, 0x16u);
    v27 = v81;
    swift_arrayDestroy(v81, 2, &type metadata for Any[8]);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v19, -1, -1);
  }
  else
  {
    sub_1004D61C4((uint64_t *)a1);
    sub_1004D61C4((uint64_t *)a1);
  }

  v28 = a1[3];
  v94 = a1[2];
  v95 = v28;
  v96 = a1[4];
  v97 = *((_QWORD *)a1 + 10);
  v29 = a1[1];
  v92 = *a1;
  v93 = v29;
  sub_1004D5CBC(a1);
  if (a2 && (sub_1004D36E8(&v92) & 1) != 0)
  {
    v82 = (void (*)(_QWORD))a3;
    v98[2] = v94;
    v98[3] = v95;
    v99 = v96;
    v100 = v97;
    v98[0] = v92;
    v98[1] = v93;
    sub_1004D5CBC(v98);
    v30 = sub_1004D5CBC(v98);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.default.getter(v31);
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc(22, -1);
      v34 = swift_slowAlloc(64, -1);
      v91[0] = v34;
      *(_DWORD *)v33 = 136315394;
      v81 = (uint64_t)v10;
      v36 = *((_QWORD *)&v99 + 1);
      v35 = v100;
      swift_bridgeObjectRetain(v100);
      v90 = sub_100027E40(v36, v35, v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, v91, v33 + 4, v33 + 12);
      swift_bridgeObjectRelease(v35);
      *(_WORD *)(v33 + 12) = 2080;
      v37 = sub_1004D416C();
      v39 = v38;
      v90 = sub_100027E40(v37, v38, v91);
      v10 = (_BYTE *)v81;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, v91, v33 + 14, v33 + 22);
      swift_bridgeObjectRelease(v39);
      sub_1004D61C4((uint64_t *)v98);
      sub_1004D61C4((uint64_t *)v98);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Table updates adjusted for %s: %s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy(v34, 2, &type metadata for Any[8]);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v33, -1, -1);
    }
    else
    {
      sub_1004D61C4((uint64_t *)v98);
      sub_1004D61C4((uint64_t *)v98);
    }

    a3 = (uint64_t)v82;
  }
  swift_beginAccess(&v92, v91, 0, 0);
  v40 = v94;
  v41 = v88;
  swift_bridgeObjectRetain(v40);
  sub_1004D6294(v42, v41, (SEL *)&selRef_insertRowsAtIndexPaths_withRowAnimation_);
  swift_bridgeObjectRelease(v40);

  v43 = *((_QWORD *)&v94 + 1);
  v44 = v41;
  swift_bridgeObjectRetain(v43);
  sub_1004D6294(v45, v44, (SEL *)&selRef_deleteRowsAtIndexPaths_withRowAnimation_);
  swift_bridgeObjectRelease(v43);

  v46 = v95;
  v47 = v44;
  sub_100053DE4((uint64_t)a2, a3);
  swift_bridgeObjectRetain(v46);
  sub_1004D68A0(v48, a2, a3, v47);

  sub_1000381B8((uint64_t)a2, a3);
  swift_bridgeObjectRelease(v46);
  v49 = (void (*)(_QWORD))*((_QWORD *)&v95 + 1);
  v50 = *(_QWORD *)(*((_QWORD *)&v95 + 1) + 16);
  if (v50)
  {
    v51 = (uint64_t)v89;
    v88 = &v89[*(int *)(v83 + 36)];
    v52 = *((_QWORD *)&v95 + 1)
        + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80));
    v53 = v86;
    v54 = v85;
    v55 = v84;
    v87 = *(_QWORD *)(v87 + 72);
    v83 = (uint64_t)v47;
    v56 = v47;
    v82 = v49;
    swift_bridgeObjectRetain(v49);
    do
    {
      sub_10000735C(v52, v51, &qword_10063F658);
      v57 = *(void (**)(_QWORD, _QWORD, _QWORD))(v53 + 16);
      v57(v10, v51, v55);
      v57(v54, v88, v55);
      sub_1000073A0(v51, &qword_10063F658);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v59 = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v56, "moveRowAtIndexPath:toIndexPath:", isa, v59);

      v51 = (uint64_t)v89;
      v60 = *(void (**)(_QWORD, _QWORD))(v53 + 8);
      v60(v54, v55);
      v60(v10, v55);
      v52 += v87;
      --v50;
    }
    while (v50);
    swift_bridgeObjectRelease(v82);

    v47 = (_BYTE *)v83;
  }
  v61 = v92;
  v62 = v47;
  swift_bridgeObjectRetain(v61);
  sub_1004D6F20(v63, v62, (SEL *)&selRef_insertSections_withRowAnimation_);
  swift_bridgeObjectRelease(v61);

  v64 = *((_QWORD *)&v92 + 1);
  v65 = v62;
  swift_bridgeObjectRetain(v64);
  sub_1004D6F20(v66, v65, (SEL *)&selRef_deleteSections_withRowAnimation_);
  swift_bridgeObjectRelease(v64);

  v67 = v93;
  v68 = v65;
  swift_bridgeObjectRetain(v67);
  sub_1004D6F20(v69, v68, (SEL *)&selRef_reloadSections_withRowAnimation_);
  swift_bridgeObjectRelease(v67);

  v70 = *((_QWORD *)&v93 + 1);
  v71 = v94;
  v73 = v95;
  v72 = v96;
  swift_bridgeObjectRelease(v97);
  swift_bridgeObjectRelease(v72);
  swift_bridgeObjectRelease(*((_QWORD *)&v73 + 1));
  swift_bridgeObjectRelease(v73);
  swift_bridgeObjectRelease(*((_QWORD *)&v71 + 1));
  swift_bridgeObjectRelease(v71);
  swift_bridgeObjectRelease(v67);
  swift_bridgeObjectRelease(v64);
  swift_bridgeObjectRelease(v61);
  v74 = *(_QWORD *)(v70 + 16);
  if (v74)
  {
    v75 = v68;
    *(_QWORD *)&v76 = swift_bridgeObjectRetain(v70).n128_u64[0];
    v77 = (_QWORD *)(v70 + 40);
    do
    {
      objc_msgSend(v75, "moveSection:toSection:", *(v77 - 1), *v77, v76);
      v77 += 2;
      --v74;
    }
    while (v74);

    swift_bridgeObjectRelease(v70);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v70).n128_u64[0];
  return result;
}

void sub_1004D53F8(int a1, uint64_t a2, uint64_t (*a3)(uint64_t *, __n128), uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  void *v24;
  id v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  unint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[4];
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void **aBlock;
  uint64_t v47;
  void *v48;
  void *v49;
  void *v50;
  _QWORD *v51;

  v44 = a5;
  v45 = a6;
  v41 = a1;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v43 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = &v40[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v42 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v15 = &v40[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_bridgeObjectRetain(v16);
  v18 = sub_1004D5F88(v17, a3);
  swift_bridgeObjectRelease(v16);
  swift_release();
  if (v18[2])
  {
    v19 = swift_allocObject(&unk_10060BED0, 120, 7);
    v20 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(v19 + 48) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(v19 + 64) = v20;
    *(_OWORD *)(v19 + 80) = *(_OWORD *)(a2 + 64);
    v21 = *(_QWORD *)(a2 + 80);
    v22 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v19 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v19 + 32) = v22;
    *(_QWORD *)(v19 + 96) = v21;
    *(_QWORD *)(v19 + 104) = v18;
    *(_QWORD *)(v19 + 112) = a7;
    v23 = swift_allocObject(&unk_10060BEF8, 32, 7);
    *(_QWORD *)(v23 + 16) = sub_1004D6110;
    *(_QWORD *)(v23 + 24) = v19;
    v50 = sub_1000381EC;
    v51 = (_QWORD *)v23;
    aBlock = _NSConcreteStackBlock;
    v47 = 1107296256;
    v48 = sub_10001B258;
    v49 = &unk_10060BF10;
    v24 = _Block_copy(&aBlock);
    sub_1004D5CBC((_QWORD *)a2);
    v25 = a7;
    swift_release();
    v26 = (_QWORD *)swift_allocObject(&unk_10060BF48, 40, 7);
    v28 = v44;
    v27 = v45;
    v26[2] = v25;
    v26[3] = v28;
    v26[4] = v27;
    v50 = sub_1004D6160;
    v51 = v26;
    aBlock = _NSConcreteStackBlock;
    v47 = 1107296256;
    v48 = sub_1000D3A2C;
    v49 = &unk_10060BF60;
    v29 = _Block_copy(&aBlock);
    sub_100053DE4(v28, v27);
    objc_msgSend(v25, "performBatchUpdates:completion:", v24, v29, swift_release().n128_f64[0]);
    _Block_release(v29);
    _Block_release(v24);
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease(v18);
    v30 = sub_10002CDD8();
    v31 = (void *)static OS_dispatch_queue.main.getter(v30);
    v32 = swift_allocObject(&unk_10060BF98, 33, 7);
    v34 = v44;
    v33 = v45;
    *(_QWORD *)(v32 + 16) = v44;
    *(_QWORD *)(v32 + 24) = v33;
    *(_BYTE *)(v32 + 32) = v41 & 1;
    v50 = sub_1004D6198;
    v51 = (_QWORD *)v32;
    aBlock = _NSConcreteStackBlock;
    v47 = 1107296256;
    v48 = sub_100006378;
    v49 = &unk_10060BFB0;
    v35 = _Block_copy(&aBlock);
    sub_100053DE4(v34, v33);
    swift_release();
    static DispatchQoS.unspecified.getter(v36);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v37 = sub_1000175C8((unint64_t *)&qword_1006447D0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v38 = sub_10002A750((uint64_t *)&unk_100640F40);
    v39 = sub_100023FEC((unint64_t *)&qword_1006447E0, (uint64_t *)&unk_100640F40, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v38, v39, v10, v37);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v35);
    _Block_release(v35);

    (*(void (**)(_BYTE *, uint64_t))(v43 + 8))(v12, v10);
    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v15, v42);
  }
}

uint64_t sub_1004D57D8(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v17;
  uint64_t v18;

  if (qword_10063D878 != -1)
    swift_once(&qword_10063D878, sub_1004D35E8);
  v6 = type metadata accessor for Logger(0);
  sub_100012DC4(v6, (uint64_t)qword_100663E18);
  sub_1004D5CBC(a1);
  swift_bridgeObjectRetain(a2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(32, -1);
    v18 = v11;
    *(_DWORD *)v10 = 136315394;
    v12 = a1[9];
    v13 = a1[10];
    swift_bridgeObjectRetain(v13);
    v17 = sub_100027E40(v12, v13, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v13);
    sub_1004D61C4(a1);
    *(_WORD *)(v10 + 12) = 2048;
    v17 = *(_QWORD *)(a2 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v10 + 14, v10 + 22);
    swift_bridgeObjectRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Reloading section header footer for %s: count=%ld", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 1, &type metadata for Any[8]);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {
    sub_1004D61C4(a1);

    swift_bridgeObjectRelease(a2);
  }
  v14 = swift_allocObject(&unk_10060C010, 24, 7);
  *(_QWORD *)(v14 + 16) = a3;
  swift_retain();
  v15 = a3;
  sub_1004D7438(a2, sub_1004D628C, v14);
  return swift_release_n(v14, 2);
}

void sub_1004D59FC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSIndexSet *v11;
  void *v12;
  void *v13;
  uint64_t v14;

  v6 = sub_10002A750(&qword_100663E60);
  __chkstk_darwin(v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(a1, (uint64_t)v8, &qword_100663E60);
  v9 = type metadata accessor for IndexSet(0);
  v10 = *(_QWORD *)(v9 - 8);
  v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    IndexSet._bridgeToObjectiveC()(v11);
    v12 = v13;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  objc_msgSend(a3, "_reloadSectionHeaderFooters:withRowAnimation:", v12, a2);

}

void sub_1004D5AE4(double a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  _QWORD v7[6];

  if (a4)
  {
    v7[4] = a4;
    v7[5] = a5;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    v7[2] = sub_1000D3A2C;
    v7[3] = &unk_10060BFD8;
    v6 = _Block_copy(v7);
    swift_retain();
    *(_QWORD *)&a1 = swift_release().n128_u64[0];
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(a3, "performBatchUpdates:completion:", 0, v6, a1);
  _Block_release(v6);
}

id sub_1004D5B90()
{
  id *v0;

  return objc_msgSend(*v0, "beginUpdates");
}

id sub_1004D5BA0()
{
  id *v0;

  return objc_msgSend(*v0, "endUpdates");
}

void sub_1004D5BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1004D474C(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t type metadata accessor for TTRITreeViewTableUpdates.IndexAndAnimation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRITreeViewTableUpdates.IndexAndAnimation);
}

uint64_t sub_1004D5BDC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 104));
  swift_release(*(_QWORD *)(v0 + 120));
  if (*(_QWORD *)(v0 + 128))
    swift_release(*(_QWORD *)(v0 + 136));
  if (*(_QWORD *)(v0 + 144))
    swift_release(*(_QWORD *)(v0 + 152));
  return swift_deallocObject(v0, 160, 7);
}

void sub_1004D5C78()
{
  uint64_t *v0;

  sub_1004D4958((uint64_t)(v0 + 3), v0[14], v0[15], v0[16], v0[17], v0[18], v0[19]);
}

uint64_t sub_1004D5CAC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_1004D5CBC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  v7 = a1[6];
  v8 = a1[7];
  v9 = a1[8];
  v10 = a1[10];
  swift_bridgeObjectRetain(*a1);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  return a1;
}

uint64_t sub_1004D5D60()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  if (*(_QWORD *)(v0 + 104))
    swift_release(*(_QWORD *)(v0 + 112));

  return swift_deallocObject(v0, 128, 7);
}

double sub_1004D5DE4()
{
  uint64_t v0;

  return sub_1004D4B9C((__int128 *)(v0 + 16), *(void (**)(_QWORD))(v0 + 104), *(_QWORD *)(v0 + 112), *(_BYTE **)(v0 + 120));
}

uint64_t sub_1004D5DF4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004D5E04()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  swift_release(*(_QWORD *)(v0 + 112));
  if (*(_QWORD *)(v0 + 120))
    swift_release(*(_QWORD *)(v0 + 128));

  return swift_deallocObject(v0, 144, 7);
}

void sub_1004D5E90(int a1)
{
  uint64_t v1;

  sub_1004D53F8(a1, v1 + 16, *(uint64_t (**)(uint64_t *, __n128))(v1 + 104), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128), *(void **)(v1 + 136));
}

uint64_t sub_1004D5EA4(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!sub_100095CD8(*(_QWORD **)a1, *(_QWORD **)a2))
    return 0;
  if (!sub_100095CD8(*(_QWORD **)(a1 + 8), *(_QWORD **)(a2 + 8)))
    return 0;
  if (!sub_100095CD8(*(_QWORD **)(a1 + 16), *(_QWORD **)(a2 + 16)))
    return 0;
  sub_100095D5C(*(int64x2_t **)(a1 + 24), *(int64x2_t **)(a2 + 24));
  if ((v4 & 1) == 0
    || !sub_100095DDC(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32))
    || !sub_100095DDC(*(_QWORD *)(a1 + 40), *(_QWORD *)(a2 + 40))
    || !sub_100095DDC(*(_QWORD *)(a1 + 48), *(_QWORD *)(a2 + 48))
    || (sub_100095F90(*(_QWORD *)(a1 + 56), *(_QWORD *)(a2 + 56)) & 1) == 0
    || !sub_100096150(*(_QWORD *)(a1 + 64), *(_QWORD *)(a2 + 64)))
  {
    return 0;
  }
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a2 + 72);
  v8 = *(_QWORD *)(a2 + 80);
  if (v5 == v7 && v6 == v8)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v7, v8, 0);
}

_QWORD *sub_1004D5F88(uint64_t a1, uint64_t (*a2)(uint64_t *, __n128))
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  uint64_t *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = swift_bridgeObjectRetain(a1);
  v18 = v5;
  v6 = (uint64_t *)(v5 + 72);
  v7 = _swiftEmptyArrayStorage;
  do
  {
    v9 = v6 - 5;
    v11 = *v6;
    v6 += 6;
    v10 = v11;
    v12 = a2(v9, v4);
    if ((v13 & 1) == 0)
    {
      v14 = v12;
      if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
        v7 = sub_10045569C(0, v7[2] + 1, 1, v7);
      v16 = v7[2];
      v15 = v7[3];
      if (v16 >= v15 >> 1)
        v7 = sub_10045569C((_QWORD *)(v15 > 1), v16 + 1, 1, v7);
      v7[2] = v16 + 1;
      v8 = &v7[2 * v16];
      v8[4] = v14;
      v8[5] = v10;
    }
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease(v18);
  return v7;
}

uint64_t sub_1004D6094()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 104));

  return swift_deallocObject(v0, 120, 7);
}

uint64_t sub_1004D6110()
{
  uint64_t v0;

  return sub_1004D57D8((uint64_t *)(v0 + 16), *(_QWORD *)(v0 + 104), *(void **)(v0 + 112));
}

uint64_t sub_1004D611C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004D612C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1004D6160(uint64_t a1, double a2)
{
  uint64_t v2;

  sub_1004D5AE4(a2, a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1004D616C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 33, 7);
}

uint64_t sub_1004D6198()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t result;

  v1 = *(uint64_t (**)(_QWORD))(v0 + 16);
  if (v1)
    return v1(*(unsigned __int8 *)(v0 + 32));
  return result;
}

uint64_t *sub_1004D61C4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v9 = a1[7];
  v10 = a1[8];
  swift_bridgeObjectRelease(a1[10]);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_1004D6268()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1004D628C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1004D59FC(a1, a2, *(void **)(v2 + 16));
}

void sub_1004D6294(uint64_t a1, void *a2, SEL *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  int64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  Swift::UInt v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  Class isa;
  unint64_t v51;
  unint64_t v52;
  int64_t v53;
  unint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  int64_t v74;
  SEL *v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  int64_t v79;
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;

  v75 = a3;
  v76 = a2;
  v78 = sub_10002A750(qword_100642230);
  v4 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v77 = (uint64_t)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v81 = (uint64_t)&v67 - v7;
  __chkstk_darwin(v8);
  v10 = (char *)&v67 - v9;
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = _swiftEmptyDictionarySingleton;
  v15 = *(_QWORD *)(a1 + 16);
  v72 = v4;
  if (v15)
  {
    v16 = *(unsigned __int8 *)(v4 + 80);
    v17 = (v16 + 32) & ~v16;
    v18 = a1 + v17;
    v19 = *(_QWORD **)(v4 + 72);
    v74 = v17;
    v70 = v16 | 7;
    v71 = (uint64_t)v19 + v17;
    v68 = a1;
    swift_bridgeObjectRetain(a1);
    v20 = _swiftEmptyDictionarySingleton;
    v69 = xmmword_100520250;
    v73 = v19;
    do
    {
      v79 = v15;
      v24 = v81;
      sub_10000735C(v18, v81, qword_100642230);
      v25 = *(_QWORD *)(v24 + *(int *)(v78 + 36));
      v27 = sub_1002AA8F8(v25);
      v28 = v20[2];
      v29 = (v26 & 1) == 0;
      v30 = v28 + v29;
      if (__OFADD__(v28, v29))
      {
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      v31 = v26;
      if (v20[3] < v30)
      {
        sub_10045D4E0(v30, 1);
        v20 = v82;
        v32 = sub_1002AA8F8(v25);
        if ((v31 & 1) != (v33 & 1))
          goto LABEL_51;
        v27 = v32;
      }
      if ((v31 & 1) != 0)
      {
        v80 = v20;
        v34 = v20[7];
        sub_10000F614(v81, v77, qword_100642230);
        v35 = *(_QWORD *)(v34 + 8 * v27);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v35);
        *(_QWORD *)(v34 + 8 * v27) = v35;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v35 = sub_100455688(0, *(_QWORD *)(v35 + 16) + 1, 1, v35);
          *(_QWORD *)(v34 + 8 * v27) = v35;
        }
        v38 = *(_QWORD *)(v35 + 16);
        v37 = *(_QWORD *)(v35 + 24);
        if (v38 >= v37 >> 1)
        {
          v35 = sub_100455688(v37 > 1, v38 + 1, 1, v35);
          *(_QWORD *)(v34 + 8 * v27) = v35;
        }
        v21 = v79;
        *(_QWORD *)(v35 + 16) = v38 + 1;
        v22 = v35 + v74 + v38 * (_QWORD)v73;
        v23 = v73;
        sub_10000F614(v77, v22, qword_100642230);
        v20 = v80;
      }
      else
      {
        v39 = sub_10002A750(&qword_10065F470);
        v40 = swift_allocObject(v39, v71, v70);
        *(_OWORD *)(v40 + 16) = v69;
        sub_10000F614(v81, v40 + v74, qword_100642230);
        v20[(v27 >> 6) + 8] |= 1 << v27;
        v41 = 8 * v27;
        *(_QWORD *)(v20[6] + v41) = v25;
        *(_QWORD *)(v20[7] + v41) = v40;
        v42 = v20[2];
        v43 = __OFADD__(v42, 1);
        v44 = v42 + 1;
        if (v43)
          goto LABEL_49;
        v20[2] = v44;
        v21 = v79;
        v23 = v73;
      }
      v18 += (uint64_t)v23;
      v15 = v21 - 1;
    }
    while (v15);
    v80 = v20;
    swift_bridgeObjectRelease(v68);
    v4 = v72;
  }
  else
  {
    v80 = _swiftEmptyDictionarySingleton;
  }
  v45 = 0;
  v46 = v80[8];
  v73 = v80 + 8;
  v47 = 1 << *((_BYTE *)v80 + 32);
  v48 = -1;
  if (v47 < 64)
    v48 = ~(-1 << v47);
  v49 = v48 & v46;
  v74 = (unint64_t)(v47 + 63) >> 6;
  while (1)
  {
    if (v49)
    {
      v51 = __clz(__rbit64(v49));
      v49 &= v49 - 1;
      v52 = v51 | (v45 << 6);
      goto LABEL_37;
    }
    v53 = v45 + 1;
    if (__OFADD__(v45, 1))
      goto LABEL_48;
    if (v53 >= v74)
    {
LABEL_46:
      swift_release();
      return;
    }
    v54 = v73[v53];
    ++v45;
    if (!v54)
    {
      v45 = v53 + 1;
      if (v53 + 1 >= v74)
        goto LABEL_46;
      v54 = v73[v45];
      if (!v54)
      {
        v45 = v53 + 2;
        if (v53 + 2 >= v74)
          goto LABEL_46;
        v54 = v73[v45];
        if (!v54)
        {
          v55 = v53 + 3;
          if (v55 >= v74)
            goto LABEL_46;
          v54 = v73[v55];
          v45 = v55;
          if (!v54)
            break;
        }
      }
    }
LABEL_36:
    v49 = (v54 - 1) & v54;
    v52 = __clz(__rbit64(v54)) + (v45 << 6);
LABEL_37:
    v56 = 8 * v52;
    v57 = v80[7];
    v81 = *(_QWORD *)(v80[6] + v56);
    v58 = *(_QWORD *)(v57 + v56);
    v59 = *(_QWORD *)(v58 + 16);
    if (v59)
    {
      v78 = v49;
      v79 = v45;
      v82 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v58);
      sub_1003D80C8(0, v59, 0);
      v60 = *(unsigned __int8 *)(v4 + 80);
      v77 = v58;
      v61 = v58 + ((v60 + 32) & ~v60);
      v62 = *(_QWORD *)(v4 + 72);
      do
      {
        sub_10000735C(v61, (uint64_t)v10, qword_100642230);
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v10, v11);
        sub_1000073A0((uint64_t)v10, qword_100642230);
        v63 = v82;
        if ((swift_isUniquelyReferenced_nonNull_native(v82) & 1) == 0)
        {
          sub_1003D80C8(0, v63[2] + 1, 1);
          v63 = v82;
        }
        v65 = v63[2];
        v64 = v63[3];
        if (v65 >= v64 >> 1)
        {
          sub_1003D80C8(v64 > 1, v65 + 1, 1);
          v63 = v82;
        }
        v63[2] = v65 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))((unint64_t)v63+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v65, v14, v11);
        v82 = v63;
        v61 += v62;
        --v59;
      }
      while (v59);
      swift_bridgeObjectRelease(v77);
      v4 = v72;
      v49 = v78;
      v45 = v79;
    }
    else
    {
      v63 = _swiftEmptyArrayStorage;
    }
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v76, *v75, isa, v81);
    swift_bridgeObjectRelease(v63);

  }
  while (1)
  {
    v45 = v55 + 1;
    if (__OFADD__(v55, 1))
      break;
    if (v45 >= v74)
      goto LABEL_46;
    v54 = v73[v45];
    ++v55;
    if (v54)
      goto LABEL_36;
  }
LABEL_50:
  __break(1u);
LABEL_51:

  type metadata accessor for RowAnimation(0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v66);
  __break(1u);
}

void sub_1004D68A0(uint64_t a1, void (*a2)(_QWORD), uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  Swift::UInt v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  Class isa;
  unint64_t i;
  int64_t v52;
  unint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  int64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  id v74;
  void (*v75)(_QWORD);
  uint64_t v76;
  uint64_t v77;
  int64_t v78;
  _QWORD *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  _QWORD *v86;

  v73 = a3;
  v74 = a4;
  v83 = sub_10002A750(qword_100642230);
  v6 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v82 = (uint64_t)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v80 = (char *)&v70 - v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v70 - v11;
  v13 = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v84 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = v16;
  v86 = _swiftEmptyDictionarySingleton;
  v17 = *(_QWORD *)(a1 + 16);
  v75 = a2;
  v76 = v6;
  if (v17)
  {
    v18 = *(unsigned __int8 *)(v6 + 80);
    v19 = (v18 + 32) & ~v18;
    v20 = a1 + v19;
    v21 = *(_QWORD **)(v6 + 72);
    v81 = v19;
    v77 = v18 | 7;
    v78 = (int64_t)v21 + v19;
    v71 = a1;
    swift_bridgeObjectRetain(a1);
    v22 = _swiftEmptyDictionarySingleton;
    v72 = xmmword_100520250;
    v23 = (uint64_t)v80;
    v79 = v21;
    while (1)
    {
      sub_10000735C(v20, v23, qword_100642230);
      v24 = *(_QWORD *)(v23 + *(int *)(v83 + 36));
      v26 = sub_1002AA8F8(v24);
      v27 = v22[2];
      v28 = (v25 & 1) == 0;
      v29 = v27 + v28;
      if (__OFADD__(v27, v28))
        break;
      v30 = v25;
      if (v22[3] < v29)
      {
        sub_10045D4E0(v29, 1);
        v22 = v86;
        v31 = sub_1002AA8F8(v24);
        if ((v30 & 1) != (v32 & 1))
          goto LABEL_55;
        v26 = v31;
      }
      if ((v30 & 1) != 0)
      {
        v33 = v22[7];
        sub_10000F614(v23, v82, qword_100642230);
        v34 = *(_QWORD *)(v33 + 8 * v26);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v34);
        *(_QWORD *)(v33 + 8 * v26) = v34;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v34 = sub_100455688(0, *(_QWORD *)(v34 + 16) + 1, 1, v34);
          *(_QWORD *)(v33 + 8 * v26) = v34;
        }
        v37 = *(_QWORD *)(v34 + 16);
        v36 = *(_QWORD *)(v34 + 24);
        if (v37 >= v36 >> 1)
        {
          v34 = sub_100455688(v36 > 1, v37 + 1, 1, v34);
          *(_QWORD *)(v33 + 8 * v26) = v34;
        }
        *(_QWORD *)(v34 + 16) = v37 + 1;
        v21 = v79;
        sub_10000F614(v82, v34 + v81 + v37 * (_QWORD)v79, qword_100642230);
        v23 = (uint64_t)v80;
      }
      else
      {
        v38 = sub_10002A750(&qword_10065F470);
        v39 = swift_allocObject(v38, v78, v77);
        *(_OWORD *)(v39 + 16) = v72;
        sub_10000F614(v23, v39 + v81, qword_100642230);
        v22[(v26 >> 6) + 8] |= 1 << v26;
        v40 = 8 * v26;
        *(_QWORD *)(v22[6] + v40) = v24;
        *(_QWORD *)(v22[7] + v40) = v39;
        v41 = v22[2];
        v42 = __OFADD__(v41, 1);
        v43 = v41 + 1;
        if (v42)
          goto LABEL_53;
        v22[2] = v43;
      }
      v20 += (uint64_t)v21;
      if (!--v17)
      {
        v79 = v22;
        swift_bridgeObjectRelease(v71);
        a2 = v75;
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v79 = _swiftEmptyDictionarySingleton;
LABEL_18:
  v44 = 0;
  v45 = v79[8];
  v77 = (uint64_t)(v79 + 8);
  v46 = 1 << *((_BYTE *)v79 + 32);
  v47 = -1;
  if (v46 < 64)
    v47 = ~(-1 << v46);
  v48 = v47 & v45;
  v78 = (unint64_t)(v46 + 63) >> 6;
  v49 = v76;
  if (v48)
    goto LABEL_23;
LABEL_24:
  v52 = v44 + 1;
  if (__OFADD__(v44, 1))
    goto LABEL_52;
  if (v52 >= v78)
    goto LABEL_50;
  v53 = *(_QWORD *)(v77 + 8 * v52);
  ++v44;
  if (v53)
  {
LABEL_36:
    v83 = (v53 - 1) & v53;
    for (i = __clz(__rbit64(v53)) + (v44 << 6); ; i = __clz(__rbit64(v48)) | (v44 << 6))
    {
      v55 = 8 * i;
      v56 = *(_QWORD *)(v79[6] + v55);
      v57 = *(char **)(v79[7] + v55);
      v58 = *((_QWORD *)v57 + 2);
      if (v58)
      {
        v81 = *(_QWORD *)(v79[6] + v55);
        v82 = v44;
        v86 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain(v57);
        sub_1003D80C8(0, v58, 0);
        v59 = v84;
        v60 = v85;
        v61 = *(unsigned __int8 *)(v49 + 80);
        v80 = v57;
        v62 = (uint64_t)&v57[(v61 + 32) & ~v61];
        v63 = *(_QWORD *)(v49 + 72);
        do
        {
          sub_10000735C(v62, (uint64_t)v12, qword_100642230);
          (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v59, v12, v60);
          sub_1000073A0((uint64_t)v12, qword_100642230);
          v64 = v86;
          if ((swift_isUniquelyReferenced_nonNull_native(v86) & 1) == 0)
          {
            sub_1003D80C8(0, v64[2] + 1, 1);
            v59 = v84;
            v60 = v85;
            v64 = v86;
          }
          v66 = v64[2];
          v65 = v64[3];
          if (v66 >= v65 >> 1)
          {
            sub_1003D80C8(v65 > 1, v66 + 1, 1);
            v59 = v84;
            v60 = v85;
            v64 = v86;
          }
          v64[2] = v66 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))((unint64_t)v64+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v66, v59, v60);
          v86 = v64;
          v62 += v63;
          --v58;
        }
        while (v58);
        swift_bridgeObjectRelease(v80);
        a2 = v75;
        v49 = v76;
        v56 = v81;
        v44 = v82;
        if (!v75)
        {
LABEL_22:
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v74, "reloadRowsAtIndexPaths:withRowAnimation:", isa, v56);
          swift_bridgeObjectRelease(v64);

          v48 = v83;
          if (!v83)
            goto LABEL_24;
          goto LABEL_23;
        }
      }
      else
      {
        v64 = _swiftEmptyArrayStorage;
        if (!a2)
          goto LABEL_22;
      }
      if (v56 != 5)
        goto LABEL_22;
      v67 = v73;
      swift_retain();
      a2(v64);
      sub_1000381B8((uint64_t)a2, v67);
      swift_bridgeObjectRelease(v64);
      v48 = v83;
      if (!v83)
        goto LABEL_24;
LABEL_23:
      v83 = (v48 - 1) & v48;
    }
  }
  v44 = v52 + 1;
  if (v52 + 1 >= v78)
  {
LABEL_50:
    swift_release();
    return;
  }
  v53 = *(_QWORD *)(v77 + 8 * v44);
  if (v53)
    goto LABEL_36;
  v44 = v52 + 2;
  if (v52 + 2 >= v78)
    goto LABEL_50;
  v53 = *(_QWORD *)(v77 + 8 * v44);
  if (v53)
    goto LABEL_36;
  v54 = v52 + 3;
  if (v54 >= v78)
    goto LABEL_50;
  v53 = *(_QWORD *)(v77 + 8 * v54);
  v44 = v54;
  if (v53)
    goto LABEL_36;
  while (1)
  {
    v44 = v54 + 1;
    if (__OFADD__(v54, 1))
      break;
    if (v44 >= v78)
      goto LABEL_50;
    v53 = *(_QWORD *)(v77 + 8 * v44);
    ++v54;
    if (v53)
      goto LABEL_36;
  }
LABEL_54:
  __break(1u);
LABEL_55:
  type metadata accessor for RowAnimation(0);
  v69 = v68;
  sub_1000381B8((uint64_t)v75, v73);

  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v69);
  __break(1u);
}

void sub_1004D6F20(int64_t a1, void *a2, SEL *a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::UInt v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  __n128 v38;
  char *v39;
  uint64_t v40;
  NSIndexSet *v41;
  void *v42;
  void *v43;
  unint64_t v44;
  unint64_t v45;
  int64_t v46;
  unint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  _QWORD *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  int64_t v65;
  _QWORD *i;
  char *v67;
  uint64_t v68;
  SEL *v69;
  id v70;
  __int128 v71;
  int64_t v72;
  __int128 v73;
  uint64_t v74;
  _QWORD *v75;

  v69 = a3;
  v70 = a2;
  v4 = type metadata accessor for IndexSet(0);
  v68 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v67 = (char *)&v63 - v8;
  v9 = _swiftEmptyDictionarySingleton;
  v75 = _swiftEmptyDictionarySingleton;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    swift_bridgeObjectRetain(a1);
    v11 = 0;
    v71 = xmmword_100520250;
    v72 = a1;
    do
    {
      v73 = *(_OWORD *)(a1 + 16 * v11 + 32);
      v12 = *((_QWORD *)&v73 + 1);
      v14 = sub_1002AA8F8(*((Swift::UInt *)&v73 + 1));
      v15 = v9[2];
      v16 = (v13 & 1) == 0;
      v17 = v15 + v16;
      if (__OFADD__(v15, v16))
      {
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
      v18 = v13;
      if (v9[3] < v17)
      {
        sub_10045D4D4(v17, 1);
        v9 = v75;
        v19 = sub_1002AA8F8(v12);
        if ((v18 & 1) != (v20 & 1))
          goto LABEL_52;
        v14 = v19;
      }
      if ((v18 & 1) != 0)
      {
        v21 = v9[7];
        v22 = *(_QWORD **)(v21 + 8 * v14);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v22);
        *(_QWORD *)(v21 + 8 * v14) = v22;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v22 = sub_10045569C(0, v22[2] + 1, 1, v22);
          *(_QWORD *)(v21 + 8 * v14) = v22;
        }
        v25 = v22[2];
        v24 = v22[3];
        if (v25 >= v24 >> 1)
        {
          v22 = sub_10045569C((_QWORD *)(v24 > 1), v25 + 1, 1, v22);
          *(_QWORD *)(v21 + 8 * v14) = v22;
        }
        v22[2] = v25 + 1;
        *(_OWORD *)&v22[2 * v25 + 4] = v73;
        a1 = v72;
      }
      else
      {
        v26 = sub_10002A750(&qword_10065F478);
        v27 = swift_allocObject(v26, 48, 7);
        v28 = v73;
        *(_OWORD *)(v27 + 16) = v71;
        *(_OWORD *)(v27 + 32) = v28;
        v9[(v14 >> 6) + 8] |= 1 << v14;
        v29 = 8 * v14;
        *(_QWORD *)(v9[6] + v29) = v12;
        *(_QWORD *)(v9[7] + v29) = v27;
        v30 = v9[2];
        v31 = __OFADD__(v30, 1);
        v32 = v30 + 1;
        if (v31)
          goto LABEL_50;
        v9[2] = v32;
      }
      ++v11;
    }
    while (v10 != v11);
    swift_bridgeObjectRelease(a1);
  }
  v33 = 0;
  v34 = v9[8];
  v64 = v9 + 8;
  v35 = 1 << *((_BYTE *)v9 + 32);
  v36 = -1;
  if (v35 < 64)
    v36 = ~(-1 << v35);
  v37 = v36 & v34;
  v65 = (unint64_t)(v35 + 63) >> 6;
  for (i = v9; ; v9 = i)
  {
    if (v37)
    {
      v44 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      v45 = v44 | (v33 << 6);
      goto LABEL_36;
    }
    v46 = v33 + 1;
    if (__OFADD__(v33, 1))
      goto LABEL_49;
    if (v46 >= v65)
    {
LABEL_47:
      swift_release();
      return;
    }
    v47 = v64[v46];
    ++v33;
    if (!v47)
    {
      v33 = v46 + 1;
      if (v46 + 1 >= v65)
        goto LABEL_47;
      v47 = v64[v33];
      if (!v47)
      {
        v33 = v46 + 2;
        if (v46 + 2 >= v65)
          goto LABEL_47;
        v47 = v64[v33];
        if (!v47)
        {
          v48 = v46 + 3;
          if (v48 >= v65)
            goto LABEL_47;
          v47 = v64[v48];
          v33 = v48;
          if (!v47)
            break;
        }
      }
    }
LABEL_35:
    v37 = (v47 - 1) & v47;
    v45 = __clz(__rbit64(v47)) + (v33 << 6);
LABEL_36:
    v49 = 8 * v45;
    v50 = v9[7];
    *(_QWORD *)&v73 = *(_QWORD *)(v9[6] + v49);
    v51 = *(_QWORD *)(v50 + v49);
    v52 = *(_QWORD *)(v51 + 16);
    if (v52)
    {
      *(_QWORD *)&v71 = v37;
      v72 = v33;
      v75 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v51);
      sub_1003D7E10(0, v52, 0);
      v53 = v75;
      v54 = v75[2];
      v55 = 32;
      do
      {
        v56 = *(_QWORD *)(v51 + v55);
        v75 = v53;
        v57 = v53[3];
        if (v54 >= v57 >> 1)
        {
          sub_1003D7E10(v57 > 1, v54 + 1, 1);
          v53 = v75;
        }
        v53[2] = v54 + 1;
        v53[v54 + 4] = v56;
        v55 += 16;
        ++v54;
        --v52;
      }
      while (v52);
      swift_bridgeObjectRelease(v51);
      v33 = v72;
      v37 = v71;
    }
    else
    {
      v53 = _swiftEmptyArrayStorage;
    }
    v58 = sub_1000175C8((unint64_t *)&qword_100646370, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
    dispatch thunk of SetAlgebra.init()(v4, v58);
    v59 = v53[2];
    if (v59)
    {
      v60 = v53 + 4;
      do
      {
        v61 = *v60++;
        v74 = v61;
        dispatch thunk of SetAlgebra.insert(_:)(&v75, &v74, v4, v58);
        --v59;
      }
      while (v59);
    }
    v38 = swift_bridgeObjectRelease(v53);
    v39 = v67;
    v40 = v68;
    (*(void (**)(char *, char *, uint64_t, __n128))(v68 + 32))(v67, v6, v4, v38);
    IndexSet._bridgeToObjectiveC()(v41);
    v43 = v42;
    objc_msgSend(v70, *v69, v42, (_QWORD)v73);

    (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v4);
  }
  while (1)
  {
    v33 = v48 + 1;
    if (__OFADD__(v48, 1))
      break;
    if (v33 >= v65)
      goto LABEL_47;
    v47 = v64[v33];
    ++v48;
    if (v47)
      goto LABEL_35;
  }
LABEL_51:
  __break(1u);
LABEL_52:

  type metadata accessor for RowAnimation(0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v62);
  __break(1u);
}

void sub_1004D7438(uint64_t a1, void (*a2)(uint64_t, _QWORD), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  Swift::UInt v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  __n128 v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  int64_t v47;
  unint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  _QWORD *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  int64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  void (*v70)(uint64_t, _QWORD);
  uint64_t v71;
  __int128 v72;
  int64_t v73;
  __int128 v74;
  uint64_t v75;
  _QWORD *v76;

  v70 = a2;
  v71 = a3;
  v4 = sub_10002A750(&qword_100663E60);
  __chkstk_darwin(v4);
  v69 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexSet(0);
  v68 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v67 = (char *)&v64 - v10;
  v11 = _swiftEmptyDictionarySingleton;
  v76 = _swiftEmptyDictionarySingleton;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain(a1);
    v13 = 0;
    v72 = xmmword_100520250;
    v73 = v12;
    do
    {
      v74 = *(_OWORD *)(a1 + 16 * v13 + 32);
      v14 = *((_QWORD *)&v74 + 1);
      v16 = sub_1002AA8F8(*((Swift::UInt *)&v74 + 1));
      v17 = v11[2];
      v18 = (v15 & 1) == 0;
      v19 = v17 + v18;
      if (__OFADD__(v17, v18))
      {
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
      v20 = v15;
      if (v11[3] < v19)
      {
        sub_10045D4D4(v19, 1);
        v11 = v76;
        v21 = sub_1002AA8F8(v14);
        if ((v20 & 1) != (v22 & 1))
          goto LABEL_52;
        v16 = v21;
      }
      if ((v20 & 1) != 0)
      {
        v23 = v11[7];
        v24 = *(_QWORD **)(v23 + 8 * v16);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v24);
        *(_QWORD *)(v23 + 8 * v16) = v24;
        v26 = v11;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v24 = sub_10045569C(0, v24[2] + 1, 1, v24);
          *(_QWORD *)(v23 + 8 * v16) = v24;
        }
        v28 = v24[2];
        v27 = v24[3];
        if (v28 >= v27 >> 1)
        {
          v24 = sub_10045569C((_QWORD *)(v27 > 1), v28 + 1, 1, v24);
          *(_QWORD *)(v23 + 8 * v16) = v24;
        }
        v24[2] = v28 + 1;
        *(_OWORD *)&v24[2 * v28 + 4] = v74;
        v11 = v26;
        v12 = v73;
      }
      else
      {
        v29 = sub_10002A750(&qword_10065F478);
        v30 = swift_allocObject(v29, 48, 7);
        v31 = v74;
        *(_OWORD *)(v30 + 16) = v72;
        *(_OWORD *)(v30 + 32) = v31;
        v11[(v16 >> 6) + 8] |= 1 << v16;
        v32 = 8 * v16;
        *(_QWORD *)(v11[6] + v32) = v14;
        *(_QWORD *)(v11[7] + v32) = v30;
        v33 = v11[2];
        v34 = __OFADD__(v33, 1);
        v35 = v33 + 1;
        if (v34)
          goto LABEL_50;
        v11[2] = v35;
      }
      ++v13;
    }
    while (v12 != v13);
    swift_bridgeObjectRelease(a1);
  }
  v36 = 0;
  v37 = v11[8];
  v64 = v11;
  v65 = v11 + 8;
  v38 = 1 << *((_BYTE *)v11 + 32);
  v39 = -1;
  if (v38 < 64)
    v39 = ~(-1 << v38);
  v40 = v39 & v37;
  v66 = (unint64_t)(v38 + 63) >> 6;
  while (1)
  {
    if (v40)
    {
      v45 = __clz(__rbit64(v40));
      v40 &= v40 - 1;
      v46 = v45 | (v36 << 6);
      goto LABEL_36;
    }
    v47 = v36 + 1;
    if (__OFADD__(v36, 1))
      goto LABEL_49;
    if (v47 >= v66)
    {
LABEL_47:
      swift_release();
      return;
    }
    v48 = v65[v47];
    ++v36;
    if (!v48)
    {
      v36 = v47 + 1;
      if (v47 + 1 >= v66)
        goto LABEL_47;
      v48 = v65[v36];
      if (!v48)
      {
        v36 = v47 + 2;
        if (v47 + 2 >= v66)
          goto LABEL_47;
        v48 = v65[v36];
        if (!v48)
        {
          v49 = v47 + 3;
          if (v49 >= v66)
            goto LABEL_47;
          v48 = v65[v49];
          v36 = v49;
          if (!v48)
            break;
        }
      }
    }
LABEL_35:
    v40 = (v48 - 1) & v48;
    v46 = __clz(__rbit64(v48)) + (v36 << 6);
LABEL_36:
    v50 = 8 * v46;
    v51 = v11[7];
    *(_QWORD *)&v74 = *(_QWORD *)(v11[6] + v50);
    v52 = *(_QWORD *)(v51 + v50);
    v53 = *(_QWORD *)(v52 + 16);
    if (v53)
    {
      *(_QWORD *)&v72 = v40;
      v73 = v36;
      v76 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v52);
      sub_1003D7E10(0, v53, 0);
      v54 = v76;
      v55 = v76[2];
      v56 = 32;
      do
      {
        v57 = *(_QWORD *)(v52 + v56);
        v76 = v54;
        v58 = v54[3];
        if (v55 >= v58 >> 1)
        {
          sub_1003D7E10(v58 > 1, v55 + 1, 1);
          v54 = v76;
        }
        v54[2] = v55 + 1;
        v54[v55 + 4] = v57;
        v56 += 16;
        ++v55;
        --v53;
      }
      while (v53);
      swift_bridgeObjectRelease(v52);
      v11 = v64;
      v36 = v73;
      v40 = v72;
    }
    else
    {
      v54 = _swiftEmptyArrayStorage;
    }
    v59 = sub_1000175C8((unint64_t *)&qword_100646370, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
    dispatch thunk of SetAlgebra.init()(v6, v59);
    v60 = v54[2];
    if (v60)
    {
      v61 = v54 + 4;
      do
      {
        v62 = *v61++;
        v75 = v62;
        dispatch thunk of SetAlgebra.insert(_:)(&v76, &v75, v6, v59);
        --v60;
      }
      while (v60);
    }
    v41 = swift_bridgeObjectRelease(v54);
    v43 = v67;
    v42 = v68;
    (*(void (**)(char *, char *, uint64_t, __n128))(v68 + 32))(v67, v8, v6, v41);
    v44 = (uint64_t)v69;
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v69, v43, v6);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v44, 0, 1, v6);
    v70(v44, v74);
    sub_1000073A0(v44, &qword_100663E60);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v6);
  }
  while (1)
  {
    v36 = v49 + 1;
    if (__OFADD__(v49, 1))
      break;
    if (v36 >= v66)
      goto LABEL_47;
    v48 = v65[v36];
    ++v49;
    if (v48)
      goto LABEL_35;
  }
LABEL_51:
  __break(1u);
LABEL_52:
  swift_release();
  type metadata accessor for RowAnimation(0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v63);
  __break(1u);
}

uint64_t destroy for TTRITreeViewTableUpdates(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[4]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[6]);
  swift_bridgeObjectRelease(a1[7]);
  swift_bridgeObjectRelease(a1[8]);
  return swift_bridgeObjectRelease(a1[10]);
}

uint64_t *initializeWithCopy for TTRITreeViewTableUpdates(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  v7 = a2[4];
  v8 = a2[5];
  a1[4] = v7;
  a1[5] = v8;
  v9 = a2[6];
  v10 = a2[7];
  a1[6] = v9;
  a1[7] = v10;
  v12 = a2[8];
  v11 = a2[9];
  a1[8] = v12;
  a1[9] = v11;
  v13 = a2[10];
  a1[10] = v13;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v13);
  return a1;
}

uint64_t *assignWithCopy for TTRITreeViewTableUpdates(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = a2[3];
  v11 = a1[3];
  a1[3] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = a2[4];
  v13 = a1[4];
  a1[4] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  v14 = a2[5];
  v15 = a1[5];
  a1[5] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  v16 = a2[6];
  v17 = a1[6];
  a1[6] = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  v18 = a2[7];
  v19 = a1[7];
  a1[7] = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  v20 = a2[8];
  v21 = a1[8];
  a1[8] = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  a1[9] = a2[9];
  v22 = a2[10];
  v23 = a1[10];
  a1[10] = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v23);
  return a1;
}

_QWORD *assignWithTake for TTRITreeViewTableUpdates(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(a1[4]);
  v6 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(a1[6]);
  v7 = a1[7];
  *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease(v7);
  v8 = a1[8];
  a1[8] = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(a2 + 80);
  v10 = a1[10];
  a1[9] = *(_QWORD *)(a2 + 72);
  a1[10] = v9;
  swift_bridgeObjectRelease(v10);
  return a1;
}

ValueMetadata *type metadata accessor for TTRITreeViewTableUpdates()
{
  return &type metadata for TTRITreeViewTableUpdates;
}

uint64_t sub_1004D7CD0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_1004D7D48(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain(v9);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_1004D7DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1004D7E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1004D7EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1004D7F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1004D7F68(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 >= a2)
  {
    if (v5)
      return (*(uint64_t (**)(void))(v4 + 48))();
    return 0;
  }
  if (((((*(_QWORD *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
    v6 = 2;
  else
    v6 = a2 - v5 + 1;
  if (v6 >= 0x10000)
    v7 = 4;
  else
    v7 = 2;
  if (v6 < 0x100)
    v7 = 1;
  if (v6 >= 2)
    v8 = v7;
  else
    v8 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1004D7FD8 + 4 * byte_100539B90[v8]))();
}

void sub_1004D8030(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 >= a3)
  {
    v11 = 0;
    if (a2 <= v7)
      goto LABEL_14;
  }
  else
  {
    v8 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v9 = v8 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v7)
LABEL_14:
      __asm { BR              X11 }
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v12 = ~v7 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_1004D8118()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1004D8120(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1004D8128);
}

void sub_1004D8144()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1004D814C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_1004D8154(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v4 + v5) = 0;
  if (!a2)
    JUMPOUT(0x1004D815CLL);
  return (*(uint64_t (**)(uint64_t))(v3 + 56))(v4);
}

id sub_1004D81A4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  double v5;
  double v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC9Reminders21TTRILocationIndicator____lazy_storage___iconImageView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders21TTRILocationIndicator____lazy_storage___iconImageView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders21TTRILocationIndicator____lazy_storage___iconImageView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
    LODWORD(v5) = 1148846080;
    LODWORD(v6) = 1148846080;
    objc_msgSend(v4, "setLayoutSize:withHorizontalContentPriority:verticalContentPriority:", NUIContainerViewSizeUseDefault[0], NUIContainerViewSizeUseDefault[1], v5, v6);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

void sub_1004D823C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _BOOL8 v9;
  id v10;
  id v11;

  v1 = sub_1004D8318();
  v2 = OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_attributedLocationText;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_attributedLocationText);
  if (v3)
  {
    v4 = objc_msgSend(v3, "string");
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v7 = v6;

    swift_bridgeObjectRelease(v7);
    v8 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0)
      v8 = v5 & 0xFFFFFFFFFFFFLL;
    v9 = v8 == 0;
  }
  else
  {
    v9 = 1;
  }
  objc_msgSend(v1, "setHidden:", v9);

  v11 = sub_1004D8318();
  v10 = *(id *)(v0 + v2);
  objc_msgSend(v11, "setAttributedText:", v10);

}

id sub_1004D8318()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  double v5;
  double v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC9Reminders21TTRILocationIndicator____lazy_storage___textLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders21TTRILocationIndicator____lazy_storage___textLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders21TTRILocationIndicator____lazy_storage___textLabel);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
    objc_msgSend(v4, "setNumberOfLines:", 0);
    objc_msgSend(v4, "setTextAlignment:", 4);
    objc_msgSend(v4, "setLineBreakMode:", 0);
    objc_msgSend(v4, "setAdjustsFontForContentSizeCategory:", 1);
    LODWORD(v5) = 1144750080;
    LODWORD(v6) = 1144750080;
    objc_msgSend(v4, "setLayoutSize:withHorizontalContentPriority:verticalContentPriority:", NUIContainerViewSizeUseDefault[0], NUIContainerViewSizeUseDefault[1], v5, v6);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_1004D8420(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  objc_class *ObjectType;
  id v12;
  objc_super v14;

  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_icon] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_attributedLocationText] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_textColor] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders21TTRILocationIndicator____lazy_storage___iconImageView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders21TTRILocationIndicator____lazy_storage___textLabel] = 0;
  v14.receiver = v6;
  v14.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v14, "initWithFrame:", a1, a2, a3, a4);
  sub_1004D84DC();

  return v12;
}

void sub_1004D84DC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  _QWORD v5[6];

  objc_msgSend(v0, "setAxis:", 0);
  objc_msgSend(v0, "setDistribution:", 6);
  objc_msgSend(v0, "setAlignment:", 2);
  v1 = swift_allocObject(&unk_10060C140, 24, 7);
  *(_QWORD *)(v1 + 16) = v0;
  v2 = swift_allocObject(&unk_10060C168, 32, 7);
  *(_QWORD *)(v2 + 16) = sub_1004D88A4;
  *(_QWORD *)(v2 + 24) = v1;
  v5[4] = sub_10001B278;
  v5[5] = v2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_10001B258;
  v5[3] = &unk_10060C180;
  v3 = _Block_copy(v5);
  v4 = v0;
  swift_retain();
  objc_msgSend(v4, "performBatchUpdates:", v3, swift_release().n128_f64[0]);
  _Block_release(v3);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation(v2, "", 144, 81, 29, 1);
  swift_release();
  swift_release();
  if ((v4 & 1) != 0)
    __break(1u);
}

void sub_1004D8684(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  Class isa;

  v2 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v3 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10051FF90;
  *(_QWORD *)(v3 + 32) = sub_1004D81A4();
  v4 = sub_1004D8318();
  *(_QWORD *)(v3 + 40) = v4;
  specialized Array._endMutation()(v4);
  sub_10043CAD4();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "setArrangedSubviews:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

}

uint64_t type metadata accessor for TTRILocationIndicator()
{
  return objc_opt_self(_TtC9Reminders21TTRILocationIndicator);
}

void sub_1004D87E8()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_icon] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_attributedLocationText] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_textColor] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders21TTRILocationIndicator____lazy_storage___iconImageView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders21TTRILocationIndicator____lazy_storage___textLabel] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010055F310, "Reminders/TTRILocationIndicator.swift", 37, 2, 55, 0);
  __break(1u);
}

uint64_t sub_1004D8880()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1004D88A4()
{
  uint64_t v0;

  sub_1004D8684(*(void **)(v0 + 16));
}

uint64_t sub_1004D88AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004D88BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100663F48);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100663F48);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1004D894C(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t (*v24)(_QWORD *);
  uint64_t v25;
  uint64_t ObjCClassFromMetadata;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  unint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v36;

  v3 = v2;
  v6 = type metadata accessor for UTType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v12 = sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
    v13 = objc_msgSend(a1, "canLoadObjectOfClass:", swift_getObjCClassFromMetadata(v12));
    if ((v13 & 1) != 0)
      return sub_1004DA848(a1);
    v14 = static UTType.image.getter(v13);
    UTType.identifier.getter(v14);
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend(a1, "hasItemConformingToTypeIdentifier:", v17, swift_bridgeObjectRelease(v16).n128_f64[0]);

    if (v18)
      return sub_1004DA848(a1);
  }
  if ((a2 & 2) != 0)
  {
    v10 = sub_100005ED8(0, &qword_100649BC8, NSURL_ptr);
    if (objc_msgSend(a1, "canLoadObjectOfClass:", swift_getObjCClassFromMetadata(v10)))
      return sub_1004D8C80(a1);
  }
  if ((a2 & 4) == 0
    || (v19 = sub_100005ED8(0, (unint64_t *)&qword_100649BD0, NSUserActivity_ptr),
        v20 = swift_getObjCClassFromMetadata(v19),
        !objc_msgSend(a1, "canLoadObjectOfClass:", v20)))
  {
    if ((a2 & 8) == 0
      || (v25 = sub_100005ED8(0, (unint64_t *)&qword_100649BD8, NSString_ptr),
          ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v25),
          !objc_msgSend(a1, "canLoadObjectOfClass:", ObjCClassFromMetadata)))
    {
      v29 = sub_1004D8C3C();
      v30 = swift_allocError(&_s11ImportErrorON, v29, 0, 0);
      *v31 = 1;
LABEL_19:
      v34 = sub_10002A750(&qword_100641730);
      swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
      return Promise.init(error:)(v30);
    }
    if (objc_msgSend(a1, "canLoadObjectOfClass:", ObjCClassFromMetadata))
    {
      v27 = NSItemProvider.loadObject<A>(ofType:)(v25, v25);
      v22 = zalgo.getter(v27);
      v23 = (void *)v22;
      v24 = sub_1004DA650;
      goto LABEL_16;
    }
LABEL_18:
    v32 = sub_1004D8C3C();
    v30 = swift_allocError(&_s11ImportErrorON, v32, 0, 0);
    *v33 = 0;
    goto LABEL_19;
  }
  if (!objc_msgSend(a1, "canLoadObjectOfClass:", v20))
    goto LABEL_18;
  v21 = NSItemProvider.loadObject<A>(ofType:)(v19, v19);
  v22 = zalgo.getter(v21);
  v23 = (void *)v22;
  v24 = sub_1004DA1B0;
LABEL_16:
  v28 = dispatch thunk of Promise.then<A>(on:closure:)(v22, v24, 0, v3);
  swift_release();

  return v28;
}

unint64_t sub_1004D8C3C()
{
  unint64_t result;

  result = qword_100663F60;
  if (!qword_100663F60)
  {
    result = swift_getWitnessTable(&unk_100539D78, &_s11ImportErrorON);
    atomic_store(result, (unint64_t *)&qword_100663F60);
  }
  return result;
}

uint64_t sub_1004D8C80(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;

  v2 = v1;
  v4 = sub_100005ED8(0, &qword_100649BC8, NSURL_ptr);
  if (objc_msgSend(a1, "canLoadObjectOfClass:", swift_getObjCClassFromMetadata(v4)))
  {
    NSItemProvider.loadObject<A>(ofType:)(v4, v4);
    v5 = swift_allocObject(&unk_10060C280, 32, 7);
    *(_QWORD *)(v5 + 16) = v2;
    *(_QWORD *)(v5 + 24) = a1;
    v6 = (void *)zalgo.getter(a1);
    v7 = dispatch thunk of Promise.then<A>(on:closure:)(v6, sub_1004DAE70, v5, v2);
    swift_release();
    swift_release();

    return v7;
  }
  else
  {
    v9 = sub_1004D8C3C();
    v10 = swift_allocError(&_s11ImportErrorON, v9, 0, 0);
    *v11 = 0;
    v12 = sub_10002A750(&qword_100641730);
    swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    return Promise.init(error:)(v10);
  }
}

uint64_t sub_1004D8DA0@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  _QWORD v23[2];

  v4 = sub_10002A750((uint64_t *)&unk_100649EA0);
  __chkstk_darwin(v4);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UTType(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v23 - v12;
  v14 = *a1;
  v15 = a1[1];
  v16 = swift_bridgeObjectRetain(v15);
  UTType.init(_:)(v14, v15, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100649EA0);
LABEL_6:
    v21 = 1;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v21, 1, v7);
  }
  v17 = *(uint64_t (**)(char *, char *, uint64_t))(v8 + 32);
  v18 = v17(v13, v6, v7);
  static UTType.image.getter(v18);
  v19 = UTType.conforms(to:)(v10);
  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v10, v7);
  if ((v19 & 1) == 0)
  {
    v20(v13, v7);
    goto LABEL_6;
  }
  v17(a2, v13, v7);
  v21 = 0;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v21, 1, v7);
}

void sub_1004D8F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  _QWORD *v13;
  void *v14;
  id v15;
  _QWORD v16[6];

  UTType.identifier.getter(a1);
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v13 = (_QWORD *)swift_allocObject(&unk_10060C1B8, 48, 7);
  v13[2] = a1;
  v13[3] = a2;
  v13[4] = a3;
  v13[5] = a4;
  v16[4] = sub_1004DADA0;
  v16[5] = v13;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_1004D97E4;
  v16[3] = &unk_10060C1D0;
  v14 = _Block_copy(v16);
  swift_retain();
  swift_retain();
  v15 = objc_msgSend(a5, "loadInPlaceFileRepresentationForTypeIdentifier:completionHandler:", v12, v14, swift_release().n128_f64[0]);
  _Block_release(v14);

}

void sub_1004D9058(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD), uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  char *v39;
  void *v40;
  NSString v41;
  id v42;
  id v43;
  NSURL *v44;
  char *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  void (*v54)(_QWORD);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD v63[3];
  char v64[8];
  uint64_t v65;
  uint64_t aBlock;
  _QWORD v67[6];

  v57 = a4;
  v58 = a5;
  v59 = a2;
  v11 = type metadata accessor for URL(0);
  v62 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v61 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750((uint64_t *)&unk_100640EE0);
  __chkstk_darwin(v13);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v53 - v17;
  if (qword_10063D880 != -1)
    swift_once(&qword_10063D880, sub_1004D88BC);
  v19 = type metadata accessor for Logger(0);
  sub_100012DC4(v19, (uint64_t)qword_100663F48);
  v60 = a1;
  sub_10000735C(a1, (uint64_t)v18, (uint64_t *)&unk_100640EE0);
  swift_errorRetain(a3);
  v20 = swift_errorRetain(a3);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v54 = a6;
    v56 = a7;
    v23 = swift_slowAlloc(32, -1);
    v53 = swift_slowAlloc(96, -1);
    v65 = v53;
    *(_DWORD *)v23 = 136315650;
    v24 = Optional.descriptionOrNil.getter(v13);
    v26 = v25;
    aBlock = sub_100027E40(v24, v25, &v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v67, v23 + 4, v23 + 12);
    swift_bridgeObjectRelease(v26);
    sub_1000073A0((uint64_t)v18, (uint64_t *)&unk_100640EE0);
    *(_WORD *)(v23 + 12) = 2080;
    if ((v59 & 1) != 0)
      v27 = 1702195828;
    else
      v27 = 0x65736C6166;
    if ((v59 & 1) != 0)
      v28 = 0xE400000000000000;
    else
      v28 = 0xE500000000000000;
    aBlock = sub_100027E40(v27, v28, &v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v67, v23 + 14, v23 + 22);
    swift_bridgeObjectRelease(v28);
    *(_WORD *)(v23 + 22) = 2080;
    v55 = v11;
    if (a3)
    {
      swift_getErrorValue(a3, v64, v63);
      v29 = Error.rem_errorDescription.getter(v63[1], v63[2]);
      v31 = v30;
    }
    else
    {
      v29 = 0;
      v31 = 0;
    }
    aBlock = v29;
    v67[0] = v31;
    v32 = sub_10002A750(&qword_100646428);
    v33 = Optional.descriptionOrNil.getter(v32);
    v35 = v34;
    swift_bridgeObjectRelease(v31);
    aBlock = sub_100027E40(v33, v35, &v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v67, v23 + 24, v23 + 32);
    swift_bridgeObjectRelease(v35);
    swift_errorRelease(a3);
    swift_errorRelease(a3);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "TTRRemindersListImportedContent: finish loading in place file representation {url: %s, isInPlace: %s, error: %s}", (uint8_t *)v23, 0x20u);
    v36 = v53;
    swift_arrayDestroy(v53, 3, &type metadata for Any[8]);
    swift_slowDealloc(v36, -1, -1);
    swift_slowDealloc(v23, -1, -1);

    v11 = v55;
    a7 = v56;
    a6 = v54;
  }
  else
  {
    sub_1000073A0((uint64_t)v18, (uint64_t *)&unk_100640EE0);
    swift_errorRelease(a3);
    swift_errorRelease(a3);

  }
  sub_10000735C(v60, (uint64_t)v15, (uint64_t *)&unk_100640EE0);
  v37 = v62;
  v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48))(v15, 1, v11);
  v39 = v61;
  if (v38 == 1)
  {
    sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_100640EE0);
    if (!a3)
    {
      v40 = (void *)objc_opt_self(REMError);
      v41 = String._bridgeToObjectiveC()();
      v42 = objc_msgSend(v40, "internalErrorWithDebugDescription:", v41);

      a6(v42);
      return;
    }
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v61, v15, v11);
  if (a3)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v11);
LABEL_20:
    swift_errorRetain(a3);
    a6(a3);
    swift_errorRelease(a3);
    return;
  }
  v43 = objc_msgSend(objc_allocWithZone((Class)NSFileCoordinator), "initWithFilePresenter:", 0);
  URL._bridgeToObjectiveC()(v44);
  v45 = v39;
  v47 = v46;
  v48 = v11;
  v49 = (_QWORD *)swift_allocObject(&unk_10060C208, 48, 7);
  v50 = v58;
  v49[2] = v57;
  v49[3] = v50;
  v49[4] = a6;
  v49[5] = a7;
  v51 = swift_allocObject(&unk_10060C230, 32, 7);
  *(_QWORD *)(v51 + 16) = sub_1004DADB0;
  *(_QWORD *)(v51 + 24) = v49;
  v67[3] = sub_10001B280;
  v67[4] = v51;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v67[0] = 1107296256;
  v67[1] = sub_1004D9750;
  v67[2] = &unk_10060C248;
  v52 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  objc_msgSend(v43, "coordinateReadingItemAtURL:options:error:byAccessor:", v47, 1, 0, v52, swift_release().n128_f64[0]);
  _Block_release(v52);

  (*(void (**)(char *, uint64_t))(v62 + 8))(v45, v48);
  LOBYTE(v43) = swift_isEscapingClosureAtFileLocation(v51, "", 153, 125, 132, 1);
  swift_release();
  swift_release();
  if ((v43 & 1) != 0)
    __break(1u);
}

uint64_t sub_1004D965C(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;

  v4 = type metadata accessor for TTRDirectlySavableImageData(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = Data.init(contentsOf:options:)(a1, 0);
  v9 = v8;
  sub_1001804A4(v7, v8);
  TTRDirectlySavableImageData.init(data:)(v7, v9);
  a2(v6);
  sub_1000A2B58(v7, v9);
  return sub_1004DADCC((uint64_t)v6);
}

uint64_t sub_1004D9750(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *);
  uint64_t v10;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void (**)(char *))(a1 + 32);
  static URL._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v8(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1004D97E4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, void *);
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v16;

  v8 = sub_10002A750((uint64_t *)&unk_100640EE0);
  __chkstk_darwin(v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void (**)(char *, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v12 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 0, 1, v12);
  }
  else
  {
    v13 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v10, 1, 1, v13);
  }
  swift_retain();
  v14 = a4;
  v11(v10, a3, a4);
  swift_release();

  return sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100640EE0);
}

char *sub_1004D98F0(void **a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];

  v3 = sub_10002A750((uint64_t *)&unk_100649EA0);
  __chkstk_darwin(v3);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRDirectlySavableImageData(0);
  __chkstk_darwin(v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v16 - v10;
  v12 = *a1;
  v13 = type metadata accessor for UTType(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v5, 1, 1, v13);
  TTRDirectlySavableImageData.init(image:sourceUTI:)(v12, v5);
  if (!v1)
  {
    sub_1004DAE08((uint64_t)v11, (uint64_t)v8);
    v14 = sub_10002A750(&qword_100663F68);
    swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
    v8 = (char *)Promise.init(value:)(v8);
    sub_1004DADCC((uint64_t)v11);
  }
  return v8;
}

uint64_t sub_1004D9A3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v2 = sub_10002A750(&qword_100663F70);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750((uint64_t *)&unk_100640EE0);
  __chkstk_darwin(v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8._countAndFlagsBits = 0xD00000000000004ELL;
  v9._object = (void *)0x800000010057C5B0;
  v8._object = (void *)0x800000010057C5D0;
  v9._countAndFlagsBits = 0xD000000000000013;
  v10 = TTRLocalizedString(_:comment:)(v9, v8);
  v11 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
  sub_1004DAE08(a1, (uint64_t)v4);
  v12 = type metadata accessor for TTRDirectlySavableImageData(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 0, 1, v12);
  v13 = objc_allocWithZone((Class)type metadata accessor for TTRRemindersListImportedContent(0));
  v17 = TTRRemindersListImportedContent.init(title:notes:url:userActivity:image:)(v10._countAndFlagsBits, v10._object, 0, 0, v7, 0, v4);
  v14 = sub_10002A750(&qword_100641730);
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  return Promise.init(value:)(&v17);
}

uint64_t sub_1004D9BD8(void **a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v30;
  void *v31;
  unint64_t v32;
  Swift::String v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v5 = sub_10002A750(&qword_100663F70);
  __chkstk_darwin(v5);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750((uint64_t *)&unk_100640EE0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = objc_msgSend(v12, "absoluteString", v9);
  if (v13 && (v14 = v13, v15 = objc_msgSend(v13, "isMailURL"), v14, v15))
  {
    v16 = sub_100005ED8(0, (unint64_t *)&qword_100649BD0, NSUserActivity_ptr);
    if (objc_msgSend(a3, "canLoadObjectOfClass:", swift_getObjCClassFromMetadata(v16)))
    {
      v17 = NSItemProvider.loadObject<A>(ofType:)(v16, v16);
      v18 = (void *)zalgo.getter(v17);
      v19 = type metadata accessor for TTRRemindersListImportedContent(0);
      dispatch thunk of Promise.then<A>(on:closure:)(v18, sub_1004DA1B0, 0, v19);
      swift_release();

    }
    else
    {
      v43 = sub_1004D8C3C();
      v44 = swift_allocError(&_s11ImportErrorON, v43, 0, 0);
      *v45 = 0;
      v46 = sub_10002A750(&qword_100641730);
      swift_allocObject(v46, *(unsigned int *)(v46 + 48), *(unsigned __int16 *)(v46 + 52));
      Promise.init(error:)(v44);
    }
    v47 = swift_allocObject(&unk_10060C2A8, 24, 7);
    *(_QWORD *)(v47 + 16) = v12;
    v48 = (void *)zalgo.getter(v12);
    v49 = type metadata accessor for TTRRemindersListImportedContent(0);
    v50 = dispatch thunk of Promise.then<A>(on:closure:)(v48, sub_1004DAEAC, v47, v49);
    swift_release();
    swift_release();

    return v50;
  }
  else
  {
    v20 = objc_msgSend(v12, "_title");
    if (v20)
    {
      v21 = v20;
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v24 = v23;

    }
    else
    {
      v30 = objc_msgSend(v12, "resourceSpecifier");
      if (v30)
      {
        v31 = v30;
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
        v24 = v32;

        v33._countAndFlagsBits = 12079;
        v33._object = (void *)0xE200000000000000;
        if (String.hasPrefix(_:)(v33))
        {
          v34 = sub_1004DA7AC(2uLL, v22, v24);
          v36 = v35;
          v38 = v37;
          v40 = v39;
          v41 = swift_bridgeObjectRelease(v24);
          v22 = static String._fromSubstring(_:)(v34, v36, v38, v40, v41);
          v24 = v42;
          swift_bridgeObjectRelease(v40);
        }
      }
      else
      {
        v22 = 0;
        v24 = 0;
      }
    }
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v25 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v11, 0, 1, v25);
    v26 = type metadata accessor for TTRDirectlySavableImageData(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v7, 1, 1, v26);
    v27 = objc_allocWithZone((Class)type metadata accessor for TTRRemindersListImportedContent(0));
    v52 = TTRRemindersListImportedContent.init(title:notes:url:userActivity:image:)(v22, v24, 0, 0, v11, 0, v7);
    v28 = sub_10002A750(&qword_100641730);
    swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
    return Promise.init(value:)(&v52);
  }
}

uint64_t sub_1004D9F98(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  NSURL *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v4 = sub_10002A750(&qword_100663F70);
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_100640EE0);
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v15 = objc_allocWithZone((Class)REMUserActivity);
  URL._bridgeToObjectiveC()(v16);
  v18 = v17;
  v19 = objc_msgSend(v15, "initWithUniversalLink:", v17);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v20 = *(_QWORD *)(v14 + direct field offset for TTRRemindersListImportedContent.title);
  v21 = *(_QWORD *)(v14 + direct field offset for TTRRemindersListImportedContent.title + 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  v22 = type metadata accessor for TTRDirectlySavableImageData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v6, 1, 1, v22);
  objc_allocWithZone((Class)type metadata accessor for TTRRemindersListImportedContent(0));
  swift_bridgeObjectRetain(v21);
  v23 = v19;
  v28 = TTRRemindersListImportedContent.init(title:notes:url:userActivity:image:)(v20, v21, 0, 0, v9, v19, v6);
  v24 = sub_10002A750(&qword_100641730);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  v25 = Promise.init(value:)(&v28);

  return v25;
}

uint64_t sub_1004DA1B0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  double v38;
  id v39;
  void *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  char *v55;
  char *v56;
  id v57;
  char *v58;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v61;

  v2 = sub_10002A750(&qword_100663F70);
  __chkstk_darwin(v2);
  v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v55 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750((uint64_t *)&unk_100640EE0);
  __chkstk_darwin(v8);
  v58 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v55 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v55 - v14;
  v16 = (void *)*a1;
  v57 = objc_msgSend(objc_allocWithZone((Class)REMUserActivity), "initWithUserActivity:", *a1);
  v17 = objc_msgSend(v16, "title");
  if (v17)
  {
    v18 = v17;
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    object = v20;
    countAndFlagsBits = v19;

  }
  else
  {
    v21._object = (void *)0x800000010057C620;
    v22._countAndFlagsBits = 0x7265646E696D6552;
    v22._object = (void *)0xE800000000000000;
    v21._countAndFlagsBits = 0xD00000000000006ELL;
    v23 = TTRLocalizedString(_:comment:)(v22, v21);
    object = v23._object;
    countAndFlagsBits = v23._countAndFlagsBits;
  }
  v24 = objc_msgSend(v16, "contentAttributeSet");
  if (v24)
  {
    v25 = v24;
    v26 = objc_msgSend(v24, "textSelected");

    if (v26)
    {
      v27 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v29 = v28;

LABEL_23:
      v42 = v58;
      goto LABEL_24;
    }
  }
  v56 = v4;
  v30 = objc_msgSend(v16, "activityType");
  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  v33 = v32;

  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUserActivityTypeBrowsingWeb);
  v36 = v34;
  if (v31 != v35 || v33 != v34)
  {
    v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v33, v35, v34, 0);
    swift_bridgeObjectRelease(v33);
    *(_QWORD *)&v38 = swift_bridgeObjectRelease(v36).n128_u64[0];
    if ((v37 & 1) != 0)
      goto LABEL_11;
    v46 = objc_msgSend(v16, "contentAttributeSet", v38);
    v27 = v46;
    if (v46)
    {
      v47 = objc_msgSend(v46, "contentDescription");

      if (v47)
      {
        v27 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
        v29 = v48;

LABEL_22:
        v4 = v56;
        goto LABEL_23;
      }
      v27 = 0;
    }
    v29 = 0;
    goto LABEL_22;
  }
  swift_bridgeObjectRelease_n(v33, 2);
LABEL_11:
  v39 = objc_msgSend(v16, "webpageURL");
  if (v39)
  {
    v40 = v39;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v39);

    v41 = 0;
  }
  else
  {
    v41 = 1;
  }
  v4 = v56;
  v42 = v58;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v12, v41, 1, v5);
  sub_10005FE98((uint64_t)v12, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v15, 1, v5))
  {
    sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_100640EE0);
    v27 = 0;
    v29 = 0;
  }
  else
  {
    v43 = v55;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v55, v15, v5);
    v44 = sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_100640EE0);
    v27 = (void *)URL.host.getter(v44);
    v29 = v45;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v43, v5);
  }
LABEL_24:
  v49 = v57;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v42, 1, 1, v5);
  v50 = type metadata accessor for TTRDirectlySavableImageData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v4, 1, 1, v50);
  v51 = objc_allocWithZone((Class)type metadata accessor for TTRRemindersListImportedContent(0));
  v61 = TTRRemindersListImportedContent.init(title:notes:url:userActivity:image:)(countAndFlagsBits, object, v27, v29, v42, v49, v4);
  v52 = sub_10002A750(&qword_100641730);
  swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
  v53 = Promise.init(value:)(&v61);

  return v53;
}

uint64_t sub_1004DA650(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v2 = sub_10002A750(&qword_100663F70);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750((uint64_t *)&unk_100640EE0);
  __chkstk_darwin(v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v10 = v9;
  v11 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
  v12 = type metadata accessor for TTRDirectlySavableImageData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 1, 1, v12);
  v13 = objc_allocWithZone((Class)type metadata accessor for TTRRemindersListImportedContent(0));
  v17 = TTRRemindersListImportedContent.init(title:notes:url:userActivity:image:)(v8, v10, 0, 0, v7, 0, v4);
  v14 = sub_10002A750(&qword_100641730);
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  return Promise.init(value:)(&v17);
}

unint64_t sub_1004DA7AC(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v5 = HIBYTE(a3) & 0xF;
    else
      v5 = a2 & 0xFFFFFFFFFFFFLL;
    v6 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v6 = 11;
    v7 = v6 | (v5 << 16);
    result = String.index(_:offsetBy:limitedBy:)(15, result, v7, a2, a3);
    if ((v8 & 1) != 0)
      result = v7;
    if (4 * v5 >= result >> 14)
      return String.subscript.getter(result, v7, a2, a3);
  }
  __break(1u);
  return result;
}

uint64_t sub_1004DA848(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  __n128 v36;
  void (*v37)(char *, uint64_t, __n128);
  uint8_t *v38;
  void *v39;
  NSString v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint8_t *v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v2 = type metadata accessor for UTType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v53 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v49 - v6;
  v8 = sub_10002A750((uint64_t *)&unk_100649EA0);
  __chkstk_darwin(v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v49 - v13);
  v15 = objc_msgSend(a1, "registeredTypeIdentifiers", v12);
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, &type metadata for String);

  v56 = v16;
  v17 = sub_10002A750(&qword_1006466D0);
  v18 = sub_1004DAD48();
  Sequence.firstMap<A>(_:)(v14, sub_1004D8DA0, 0, v17, v2, v18);
  swift_bridgeObjectRelease(v16);
  sub_10000735C((uint64_t)v14, (uint64_t)v10, (uint64_t *)&unk_100649EA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2) == 1)
  {
    sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100649EA0);
    v19 = sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
    if (objc_msgSend(a1, "canLoadObjectOfClass:", swift_getObjCClassFromMetadata(v19)))
    {
      v20 = NSItemProvider.loadObject<A>(ofType:)(v19, v19);
      v21 = (void *)zalgo.getter(v20);
      v22 = type metadata accessor for TTRDirectlySavableImageData(0);
      dispatch thunk of Promise.then<A>(on:closure:)(v21, sub_1004D98F0, 0, v22);
      swift_release();

    }
    else
    {
      v39 = (void *)objc_opt_self(REMError);
      v40 = String._bridgeToObjectiveC()();
      v41 = objc_msgSend(v39, "internalErrorWithDebugDescription:", v40);

      v42 = sub_10002A750(&qword_100663F68);
      swift_allocObject(v42, *(unsigned int *)(v42 + 48), *(unsigned __int16 *)(v42 + 52));
      v23 = Promise.init(error:)(v41);
    }
  }
  else
  {
    v52 = (uint64_t)a1;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v7, v10, v2);
    v24 = v7;
    if (qword_10063D880 != -1)
      swift_once(&qword_10063D880, sub_1004D88BC);
    v25 = type metadata accessor for Logger(0);
    sub_100012DC4(v25, (uint64_t)qword_100663F48);
    v26 = v53;
    v27 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 16))(v53, v24, v2);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc(12, -1);
      v51 = v14;
      v31 = (uint8_t *)v30;
      v32 = swift_slowAlloc(32, -1);
      v56 = v32;
      *(_DWORD *)v31 = 136315138;
      v50 = v31 + 4;
      v33 = UTType.identifier.getter(v32);
      v35 = v34;
      v54 = sub_100027E40(v33, v34, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v50, v31 + 12);
      v36 = swift_bridgeObjectRelease(v35);
      v37 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
      v37(v26, v2, v36);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "TTRRemindersListImportedContent: loading in place file representation from NSItemProvider {UTI: %s}", v31, 0xCu);
      swift_arrayDestroy(v32, 1, &type metadata for Any[8]);
      swift_slowDealloc(v32, -1, -1);
      v38 = v31;
      v14 = v51;
      swift_slowDealloc(v38, -1, -1);
    }
    else
    {
      v37 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
      ((void (*)(char *, uint64_t))v37)(v26, v2);
    }

    __chkstk_darwin(v43);
    *(&v49 - 2) = v52;
    *(&v49 - 1) = (uint64_t)v24;
    v44 = sub_10002A750(&qword_100663F68);
    swift_allocObject(v44, *(unsigned int *)(v44 + 48), *(unsigned __int16 *)(v44 + 52));
    Promise.init(resolver:)(sub_1004DAD94, &v49 - 4);
    v23 = ((uint64_t (*)(char *, uint64_t))v37)(v24, v2);
  }
  v45 = (void *)zalgo.getter(v23);
  v46 = type metadata accessor for TTRRemindersListImportedContent(0);
  v47 = dispatch thunk of Promise.then<A>(on:closure:)(v45, sub_1004D9A3C, 0, v46);
  swift_release();

  sub_1000073A0((uint64_t)v14, (uint64_t *)&unk_100649EA0);
  return v47;
}

unint64_t sub_1004DAD48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100654F90;
  if (!qword_100654F90)
  {
    v1 = sub_10002CA5C(&qword_1006466D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100654F90);
  }
  return result;
}

void sub_1004DAD94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1004D8F40(a1, a2, a3, a4, *(void **)(v4 + 16));
}

void sub_1004DADA0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;

  sub_1004D9058(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(void (**)(_QWORD))(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_1004DADB0(uint64_t a1)
{
  uint64_t v1;

  return sub_1004D965C(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_1004DADBC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004DADCC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRDirectlySavableImageData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004DAE08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRDirectlySavableImageData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004DAE4C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004DAE70(void **a1)
{
  uint64_t v1;

  return sub_1004D9BD8(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1004DAE88()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004DAEAC(uint64_t *a1)
{
  uint64_t v1;

  return sub_1004D9F98(a1, *(_QWORD *)(v1 + 16));
}

uint64_t _s11ImportErrorOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1004DAF10 + 4 * byte_100539CFD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1004DAF44 + 4 * asc_100539CF8[v4]))();
}

uint64_t sub_1004DAF44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004DAF4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004DAF54);
  return result;
}

uint64_t sub_1004DAF60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004DAF68);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1004DAF6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004DAF74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11ImportErrorOMa()
{
  return &_s11ImportErrorON;
}

unint64_t sub_1004DAF94()
{
  unint64_t result;

  result = qword_100663F78;
  if (!qword_100663F78)
  {
    result = swift_getWitnessTable(&unk_100539D50, &_s11ImportErrorON);
    atomic_store(result, (unint64_t *)&qword_100663F78);
  }
  return result;
}

void sub_1004DAFE0(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  char *v4;
  void *v5;
  uint64_t ObjectType;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  __int128 v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  v3 = v2;
  v4 = &v2[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_contentView];
  v5 = *(void **)&v2[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_contentView];
  if (v5)
  {
    v25 = *((_QWORD *)v4 + 1);
    ObjectType = swift_getObjectType(v5, a2);
    v7 = &v3[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration];
    v9 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration];
    v8 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration + 8];
    v10 = *((_WORD *)v7 + 8);
    v11 = v7[18];
    v12 = *((_QWORD *)v7 + 3);
    v13 = *((_QWORD *)v7 + 4);
    v14 = *((_QWORD *)v7 + 5);
    v15 = *((_QWORD *)v7 + 6);
    *((_QWORD *)&v27 + 1) = &type metadata for TTRIRemindersListCompletedCellContentConfiguration;
    *(_QWORD *)&v28 = sub_1002DCEAC();
    v16 = swift_allocObject(&unk_10060C3C0, 72, 7);
    *(_QWORD *)&v26 = v16;
    *(_QWORD *)(v16 + 16) = v9;
    *(_QWORD *)(v16 + 24) = v8;
    *(_WORD *)(v16 + 32) = v10;
    *(_BYTE *)(v16 + 34) = v11;
    *(_QWORD *)(v16 + 40) = v12;
    *(_QWORD *)(v16 + 48) = v13;
    *(_QWORD *)(v16 + 56) = v14;
    *(_QWORD *)(v16 + 64) = v15;
    v17 = v5;
    swift_bridgeObjectRetain(v8);
    sub_100053DE4(v12, v13);
    sub_100053DE4(v14, v15);
    dispatch thunk of UIContentView.configuration.setter(&v26, ObjectType, v25);
  }
  else
  {
    v18 = *(_OWORD *)&v3[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration + 16];
    v26 = *(_OWORD *)&v3[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration];
    v27 = v18;
    v28 = *(_OWORD *)&v3[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration + 32];
    v29 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration + 48];
    v19 = objc_allocWithZone((Class)type metadata accessor for CompletedCellContentView());
    sub_100405BC8(&v26);
    sub_100405BC8(&v26);
    sub_100403E04((uint64_t)&v26, v20);
    v22 = v21;
    v23 = sub_1004DB9B8();
    sub_100405CAC(&v26);
    v24 = *(void **)v4;
    *(_QWORD *)v4 = v22;
    *((_QWORD *)v4 + 1) = v23;
    v17 = v22;

    objc_msgSend(v3, "insertArrangedSubview:atIndex:", v17, 1);
    objc_msgSend(v3, "setAlignment:forView:inAxis:", 3, v17, 1);
  }

}

void sub_1004DB194(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  objc_class *ObjectType;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  _QWORD v31[6];
  objc_super v32;

  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  v12 = &v6[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0xE000000000000000;
  *((_WORD *)v12 + 8) = 0;
  v12[18] = 1;
  *(_OWORD *)(v12 + 24) = 0u;
  *(_OWORD *)(v12 + 40) = 0u;
  v13 = &v6[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_contentView];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v14 = OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_viewHeightSubject;
  v15 = sub_10002A750(&qword_10063F868);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v16 = v6;
  *(_QWORD *)&v6[v14] = PassthroughSubject.init()();
  v17 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v18 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v17, "setBackgroundColor:", v18);

  *(_QWORD *)&v16[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_backgroundView] = v17;
  v19 = objc_allocWithZone((Class)type metadata accessor for TTRISeparator(0));
  v20 = v17;
  v21 = (void *)TTRISeparator.init(axis:)(0);
  objc_msgSend(v21, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  *(_QWORD *)&v16[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_separator] = v21;
  v22 = v21;

  v32.receiver = v16;
  v32.super_class = ObjectType;
  v23 = objc_msgSendSuper2(&v32, "initWithFrame:", a1, a2, a3, a4);
  v24 = (_QWORD *)swift_allocObject(&unk_10060C3E8, 40, 7);
  v24[2] = v23;
  v24[3] = v20;
  v24[4] = v22;
  v25 = swift_allocObject(&unk_10060C410, 32, 7);
  *(_QWORD *)(v25 + 16) = sub_1004DBB48;
  *(_QWORD *)(v25 + 24) = v24;
  v31[4] = sub_10001B278;
  v31[5] = v25;
  v31[0] = _NSConcreteStackBlock;
  v31[1] = 1107296256;
  v31[2] = sub_10001B258;
  v31[3] = &unk_10060C428;
  v26 = _Block_copy(v31);
  v27 = v23;
  v28 = v20;
  v29 = v22;
  v30 = v27;
  swift_retain();
  objc_msgSend(v30, "performBatchUpdates:", v26, swift_release().n128_f64[0]);

  _Block_release(v26);
  LOBYTE(v26) = swift_isEscapingClosureAtFileLocation(v25, "", 156, 49, 29, 1);
  swift_release();
  swift_release();
  if ((v26 & 1) != 0)
    __break(1u);
}

void sub_1004DB480(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  Class isa;
  id v11;
  uint64_t v12;
  uint64_t v13;

  objc_msgSend(a1, "setHorizontalAlignment:", 0);
  objc_msgSend(a1, "setVerticalAlignment:", 0);
  objc_msgSend(a1, "setDirectionalLayoutMargins:", 8.0, 16.0, 8.0, 16.0);
  objc_msgSend(a1, "setLayoutMarginsRelativeArrangement:", 0);
  objc_msgSend(a1, "setDebugBoundingBoxesEnabled:", 0);
  objc_msgSend(a1, "setEdgesPreservingSuperviewLayoutMargins:", 10);
  v6 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v7 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10051FF90;
  *(_QWORD *)(v7 + 32) = a2;
  *(_QWORD *)(v7 + 40) = a3;
  v13 = v7;
  specialized Array._endMutation()(v7);
  sub_10043CAD4();
  v8 = a2;
  v9 = a3;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "setArrangedSubviews:", isa, swift_bridgeObjectRelease(v13).n128_f64[0]);

  v11 = objc_msgSend(a1, "setAlignment:forView:inAxis:", 4, v9, 1);
  sub_1004DAFE0((uint64_t)v11, v12);
}

uint64_t sub_1004DB624(uint64_t a1, uint64_t a2)
{
  char *v2;
  id v3;
  id v4;
  uint64_t v5;
  CGFloat Height;
  objc_super v8;
  CGRect v9;

  v8.receiver = v2;
  v8.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v8, "layoutSubviews");
  v3 = objc_msgSend(v2, "traitCollection");
  v4 = objc_msgSend(v3, "layoutDirection");

  if (v4 == (id)1)
    v5 = 8;
  else
    v5 = 2;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_separator], "setEdgesPreservingSuperviewLayoutMargins:", v5);
  objc_msgSend(v2, "bounds");
  Height = CGRectGetHeight(v9);
  return PassthroughSubject.send(_:)(&Height);
}

uint64_t sub_1004DB78C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_contentView);
  if (!v1)
    return 0;
  v2 = objc_msgSend(v1, "accessibilityElements");
  if (!v2)
    return 0;
  v3 = v2;
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for Any[8]);

  return v4;
}

uint64_t sub_1004DB85C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_contentView);
  if (!v1)
    return 0;
  v2 = objc_msgSend(v1, "accessibilityLabel");
  if (!v2)
    return 0;
  v3 = v2;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v4;
}

uint64_t type metadata accessor for TTRIRemindersBoardCompletedHeaderView()
{
  return objc_opt_self(_TtC9Reminders37TTRIRemindersBoardCompletedHeaderView);
}

unint64_t sub_1004DB9B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10065ACB8;
  if (!qword_10065ACB8)
  {
    v1 = type metadata accessor for CompletedCellContentView();
    result = swift_getWitnessTable("u\x1B\r", v1);
    atomic_store(result, (unint64_t *)&qword_10065ACB8);
  }
  return result;
}

uint64_t sub_1004DBA00()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  if (v0[5])
    swift_release(v0[6]);
  if (v0[7])
    swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

void sub_1004DBA44()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = &v0[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0xE000000000000000;
  *((_WORD *)v1 + 8) = 0;
  v1[18] = 1;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  v2 = &v0[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_contentView];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v3 = OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_viewHeightSubject;
  v4 = sub_10002A750(&qword_10063F868);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  *(_QWORD *)&v0[v3] = PassthroughSubject.init()();

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010055F310, "Reminders/TTRIRemindersBoardCompletedHeaderView.swift", 53, 2, 63, 0);
  __break(1u);
}

uint64_t sub_1004DBB14()
{
  id *v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_1004DBB48()
{
  void **v0;

  sub_1004DB480(v0[2], v0[3], v0[4]);
}

uint64_t sub_1004DBB54()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004DBB64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100663FD0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100663FD0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1004DBBF4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;

  swift_unknownObjectWeakInit(v2 + 16, 0);
  swift_unknownObjectWeakInit(v2 + 24, 0);
  v5 = type metadata accessor for TTRIActivityAlertRouterCapability();
  v6 = swift_allocObject(v5, 24, 7);
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v2 + 96) = v6;
  swift_unknownObjectWeakAssign(v2 + 16, a1);
  sub_1000A25CC(a2, v2 + 32);
  sub_10017C154(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000A7020);
  v7 = objc_msgSend(a1, "viewIfLoaded");
  v8 = objc_msgSend(v7, "window");
  sub_10017C154(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000866B0);

  swift_unknownObjectWeakAssign(v2 + 24, v8);
  return v2;
}

id sub_1004DBCE8()
{
  uint64_t v0;
  uint64_t Strong;
  id v2;
  id result;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  double v13;
  id v14;
  id v15;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
    return (id)Strong;
  v4 = (void *)swift_unknownObjectWeakLoadStrong(v0 + 24);
  if (v4)
  {
    v5 = v4;
    v2 = objc_msgSend(v4, "rootViewController");

    if (v2)
      return v2;
  }
  result = (id)UIApp;
  if (UIApp)
  {
    v6 = objc_msgSend(UIApp, "connectedScenes");
    v7 = sub_100005ED8(0, &qword_100651F50, UIScene_ptr);
    v8 = sub_100359E7C();
    v9 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v6, v7, v8);

    v10 = sub_10002A750(&qword_100651F60);
    v11 = sub_100005ED8(0, &qword_10065F240, UIWindow_ptr);
    v12 = sub_1004DBF5C();
    Sequence.firstMap<A>(_:)(&v15, sub_1004DBE54, 0, v10, v11, v12);
    *(_QWORD *)&v13 = swift_bridgeObjectRelease(v9).n128_u64[0];
    v14 = v15;
    if (!v15)
      return 0;
    v2 = objc_msgSend(v15, "rootViewController", v13);

    return v2;
  }
  __break(1u);
  return result;
}

void sub_1004DBE54(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  uint64_t v4;
  id v5;
  id v6;

  v3 = *a1;
  v4 = objc_opt_self(UIWindowScene);
  v5 = (id)swift_dynamicCastObjCClass(v3, v4);
  if (v5)
  {
    v6 = v3;
    if (objc_msgSend(v5, "_isKeyWindowScene"))
    {
      v5 = objc_msgSend(v5, "keyWindow");

    }
    else
    {

      v5 = 0;
    }
  }
  *a2 = v5;
}

uint64_t sub_1004DBEF0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_unknownObjectWeakDestroy(v0 + 24);
  sub_1000866B0(*(id *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
  swift_release();
  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t type metadata accessor for TTRIHashtagAssociationRouter()
{
  return objc_opt_self(_TtC9Reminders28TTRIHashtagAssociationRouter);
}

unint64_t sub_1004DBF5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100651F68;
  if (!qword_100651F68)
  {
    v1 = sub_10002CA5C(&qword_100651F60);
    result = swift_getWitnessTable(&protocol conformance descriptor for Set<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100651F68);
  }
  return result;
}

void sub_1004DBFA8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v2 = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1004E9788(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = &unk_10053A4A0;
      swift_initStructMetadata(a1, 0, 3, v6, a1 + 24);
    }
  }
}

uint64_t *sub_1004DC038(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  size_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  void (*v31)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  int v34;
  char v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  _BYTE *v40;
  _BYTE *v41;
  int v42;
  char v43;
  int v44;
  int v45;
  char v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  unsigned int v52;
  unsigned int v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  char v57;
  int v58;
  unsigned int v59;
  int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  char v64;
  int v65;
  unsigned int v66;
  int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  char *v77;
  unsigned __int8 *v78;
  int v79;
  id v80;
  void *v81;
  char *v82;
  unsigned __int8 *v83;
  int v84;
  id v85;
  void *v86;
  char *v87;
  unsigned __int8 *v88;
  int v89;
  id v90;
  void *v91;
  id v92;
  char v93;
  unint64_t v94;
  uint64_t v95;
  int v96;
  unsigned int v97;
  uint64_t v98;
  void *v99;
  id v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(unint64_t, unint64_t, uint64_t, __n128);
  __n128 v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  void *v112;
  id v113;
  __int128 v114;
  int v115;
  void *v116;
  char v117;
  __int128 v118;
  void *v119;
  char v120;
  __int128 v121;
  id v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  void *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  id v147;
  id v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  void *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  int v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  void *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  void *v172;
  id v173;
  void *v174;
  char v175;
  __int128 v176;
  id v177;
  void *v178;
  char v179;
  __int128 v180;
  id v181;
  void *v182;
  char v183;
  __int128 v184;
  id v185;
  unsigned int v186;
  uint64_t v187;
  BOOL v188;
  uint64_t v189;
  unint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t *v193;
  uint64_t v194;
  unsigned int v195;
  uint64_t v196;
  unint64_t v197;
  unsigned int v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t *result;
  unint64_t v202;
  unsigned int v203;
  int v204;
  unint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  size_t __n;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  size_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  unsigned __int8 v223;
  char v224;
  unsigned __int8 v225;
  char v226;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  if (*(_DWORD *)(v4 + 84))
    v5 = *(_QWORD *)(v4 + 64);
  else
    v5 = *(_QWORD *)(v4 + 64) + 1;
  v217 = v5;
  v213 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v213 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7 & 0xF8;
  v9 = v8 | 7;
  v211 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v10 = *(_QWORD *)(v211 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = type metadata accessor for AnyTip(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = v11 | v14 | v8 | 7;
  v216 = v6;
  v16 = *(_QWORD *)(v6 + 64);
  v17 = 25;
  if (v16 > 0x19)
    v17 = *(_QWORD *)(v6 + 64);
  v18 = v17 + 1;
  v214 = v17;
  v215 = v7 & 0xF8 | 7;
  v19 = (((v17 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  v20 = v8 + 15;
  v210 = v11 + 8;
  v21 = *(_QWORD *)(v10 + 64) + (v210 & ~(unint64_t)v11);
  if (v18 + ((v8 + 15) & ~v9) > v19)
    v19 = v18 + ((v8 + 15) & ~v9);
  if (v19 <= ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 24)
    v19 = ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  v212 = *(_QWORD *)(v6 + 64);
  if (v19 <= (v16 & 0xFFFFFFFFFFFFFFF8) + 16)
    v19 = (v16 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v19 <= *(_QWORD *)(v13 + 64) + ((v14 + 1) & ~v14))
    v19 = *(_QWORD *)(v13 + 64) + ((v14 + 1) & ~v14);
  if (v19 <= 0x18)
    v22 = 24;
  else
    v22 = v19;
  if (v22 > 3)
    goto LABEL_21;
  v23 = ((1 << (8 * v22)) + 1) >> (8 * v22);
  v24 = 2;
  if (v23 > 0xFFF5)
    v24 = 4;
  if (v23 <= 0xF5)
LABEL_21:
    v24 = 1;
  v25 = v15 | *(_DWORD *)(v4 + 80);
  if (v25 == 7 && ((v11 | v7 | *(_DWORD *)(v13 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) == 0)
  {
    v26 = v15 + v217;
    if (((v15 + v217) & ~v15)
       + ((((((v24 + v22) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 9 <= 0x18)
    {
      v205 = v14 + 1;
      v206 = *(_QWORD *)(v12 - 8);
      v208 = v21 + 7;
      __n = v18;
      v27 = *(_DWORD *)(v13 + 80);
      v28 = v20;
      v207 = v12;
      v202 = *(_QWORD *)(v10 + 64) + ((v11 + 8) & ~(unint64_t)v11);
      v203 = *(_DWORD *)(v216 + 84);
      v204 = *(_DWORD *)(v10 + 84);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v4 + 48))(a2, 1, v3))
      {
        v29 = a1;
        memcpy(a1, a2, v217);
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16))(a1, a2, v3);
        v31 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v4 + 56);
        v29 = a1;
        v31(a1, 0, 1, v3);
      }
      v32 = v28;
      v33 = ~v15;
      if (v22 <= 3)
      {
        v39 = ((1 << (8 * v22)) + 1) >> (8 * v22);
        if (v39 > 0xFFF5)
        {
          v37 = 0x7FFFFFFF;
          goto LABEL_41;
        }
        v34 = v39 + 10;
        if (v39 > 0xF5)
        {
          v35 = 16;
LABEL_32:
          v36 = (1 << v35) - v34;
          v37 = 0x7FFFFFFF;
          if (v36 <= 0x7FFFFFFF)
            v38 = 0x7FFFFFFF;
          else
            v38 = v36;
          if ((v36 & 0x80000000) == 0)
            v37 = v38;
LABEL_41:
          v40 = (_BYTE *)(((unint64_t)v29 + v26) & v33);
          v41 = (_BYTE *)(((unint64_t)a2 + v26) & v33);
          if (v22 <= 3)
          {
            v48 = ((1 << (8 * v22)) + 1) >> (8 * v22);
            if (v48 > 0xFFF5)
              goto LABEL_55;
            v42 = v48 + 10;
            if (v48 > 0xF5)
            {
              v43 = 16;
LABEL_44:
              v44 = (1 << v43) - v42;
              if ((v44 & 0x80000000) == 0)
              {
                if (v44 == v37)
                  goto LABEL_46;
                goto LABEL_56;
              }
LABEL_55:
              if (v37 == 0x7FFFFFFF)
              {
LABEL_46:
                if (v22 <= 3)
                {
                  v52 = ((1 << (8 * v22)) + 1) >> (8 * v22);
                  if (v52 > 0xFFF5)
                    goto LABEL_68;
                  v45 = v52 + 10;
                  if (v52 > 0xF5)
                  {
                    v46 = 16;
LABEL_49:
                    v47 = (1 << v46) - v45;
                    if ((v47 & 0x80000000) == 0)
                    {
                      if (v22 > 3)
                        goto LABEL_72;
LABEL_69:
                      v53 = ((1 << (8 * v22)) + 1) >> (8 * v22);
                      v54 = 2;
                      if (v53 > 0xFFF5)
                        v54 = 4;
                      if (v53 > 0xF5)
                      {
LABEL_73:
                        v55 = v37 - v47;
                        if (v37 <= v47)
                          goto LABEL_89;
                        v56 = v54 + v22;
                        v57 = 8 * (v54 + v22);
                        if (v56 > 3)
                        {
LABEL_75:
                          v58 = v41[v56];
                          if (!v41[v56])
                            goto LABEL_89;
                          goto LABEL_82;
                        }
                        v59 = ((v55 + ~(-1 << v57)) >> v57) + 1;
                        if (HIWORD(v59))
                        {
                          v58 = *(_DWORD *)&v41[v56];
                          if (!v58)
                            goto LABEL_89;
                        }
                        else
                        {
                          if (v59 <= 0xFF)
                          {
                            if (v59 < 2)
                            {
LABEL_89:
                              if (!v47)
                                goto LABEL_102;
                              if (v22 <= 3)
                              {
                                v66 = ((1 << (8 * v22)) + 1) >> (8 * v22);
                                if (v66 > 0xFFF5)
                                {
                                  v62 = *(_DWORD *)&v41[v22];
                                  v63 = ~v62;
                                  goto LABEL_100;
                                }
                                v65 = v66 + 10;
                                if (v66 > 0xF5)
                                {
                                  v68 = *(unsigned __int16 *)&v41[v22];
                                  v62 = v68 | 0xFFFF0000;
                                  v63 = v68 ^ 0xFFFF;
                                  v64 = 16;
                                }
                                else
                                {
                                  v67 = v41[v22];
                                  v62 = v67 | 0xFFFFFF00;
                                  v63 = v67 ^ 0xFF;
                                  v64 = 8;
                                }
                              }
                              else
                              {
                                v61 = v41[v22];
                                v62 = v61 | 0xFFFFFF00;
                                v63 = v61 ^ 0xFF;
                                v64 = 8;
                                v65 = 11;
                              }
                              v69 = (1 << v64) - v65;
                              if ((v69 & 0x80000000) == 0)
                              {
                                if (v69 <= v63)
                                  goto LABEL_102;
                                goto LABEL_101;
                              }
LABEL_100:
                              if (v63 >= 0x7FFFFFFF)
                                goto LABEL_102;
LABEL_101:
                              if (!v62)
                                goto LABEL_102;
LABEL_167:
                              if (v22 > 3)
                                goto LABEL_171;
                              v104 = ((1 << (8 * v22)) + 1) >> (8 * v22);
                              v105 = 2;
                              if (v104 > 0xFFF5)
                                v105 = 4;
                              if (v104 <= 0xF5)
LABEL_171:
                                v105 = 1;
                              memcpy(v40, v41, ((((((v105 + v22) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
                              if (v22 <= 3)
                              {
LABEL_303:
                                v198 = ((1 << (8 * v22)) + 1) >> (8 * v22);
                                v199 = 2;
                                if (v198 > 0xFFF5)
                                  v199 = 4;
                                if (v198 > 0xF5)
                                  goto LABEL_307;
                              }
LABEL_306:
                              v199 = 1;
LABEL_307:
                              v200 = ((((((v199 + v22) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                   + 8;
                              v40[v200] = v41[v200];
                              return v29;
                            }
                            goto LABEL_75;
                          }
                          v58 = *(unsigned __int16 *)&v41[v56];
                          if (!*(_WORD *)&v41[v56])
                            goto LABEL_89;
                        }
LABEL_82:
                        v60 = (v58 - 1) << v57;
                        if (v56 > 3)
                          v60 = 0;
                        if ((_DWORD)v56)
                        {
                          if (v56 > 3)
                            LODWORD(v56) = 4;
                          __asm { BR              X12 }
                        }
                        if (v47 + v60 != -1)
                          goto LABEL_167;
                        goto LABEL_102;
                      }
LABEL_72:
                      v54 = 1;
                      goto LABEL_73;
                    }
LABEL_68:
                    v47 = 0x7FFFFFFF;
                    if (v22 > 3)
                      goto LABEL_72;
                    goto LABEL_69;
                  }
                }
                else
                {
                  v45 = 11;
                }
                v46 = 8;
                goto LABEL_49;
              }
LABEL_56:
              if (v22 > 3)
                goto LABEL_60;
              v49 = ((1 << (8 * v22)) + 1) >> (8 * v22);
              v50 = 2;
              if (v49 > 0xFFF5)
                v50 = 4;
              if (v49 <= 0xF5)
LABEL_60:
                v50 = 1;
              v51 = *(_QWORD *)((((unint64_t)&v41[v22 + v50] & 0xFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8);
              if (v51 >= 0xFFFFFFFF)
                LODWORD(v51) = -1;
              if ((_DWORD)v51 != -1)
                goto LABEL_167;
LABEL_102:
              if (v22 > 3)
              {
LABEL_103:
                v70 = v41[v22];
                goto LABEL_108;
              }
              v71 = ((1 << (8 * v22)) + 1) >> (8 * v22);
              if (v71 > 0xFFF5)
              {
                v70 = *(_DWORD *)&v41[v22];
              }
              else
              {
                if (v71 <= 0xF5)
                  goto LABEL_103;
                v70 = *(unsigned __int16 *)&v41[v22];
              }
LABEL_108:
              if (v70 >= 0xA)
              {
                if (v22 <= 3)
                  v72 = v22;
                else
                  v72 = 4;
                __asm { BR              X12 }
              }
              v73 = ~v215;
              switch(v70)
              {
                case 0u:
                  switch(v41[v214])
                  {
                    case 0:
                      *v40 = *v41;
                      v40[v214] = 0;
                      goto LABEL_214;
                    case 1:
                      v116 = *(void **)v41;
                      *(_QWORD *)v40 = *(_QWORD *)v41;
                      v117 = 1;
                      goto LABEL_213;
                    case 2:
                      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v216 + 16))(v40, v41, v213);
                      v40[v214] = 2;
                      goto LABEL_214;
                    case 3:
                      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v216 + 16))(v40, v41, v213);
                      v40[v214] = 3;
                      goto LABEL_214;
                    case 4:
                      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v216 + 16))(v40, v41, v213);
                      v40[v214] = 4;
                      goto LABEL_214;
                    case 5:
                      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v216 + 16))(v40, v41, v213);
                      v40[v214] = 5;
                      goto LABEL_214;
                    case 6:
                      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v216 + 16))(v40, v41, v213);
                      v40[v214] = 6;
                      goto LABEL_214;
                    case 7:
                      v118 = *(_OWORD *)v41;
                      *(_OWORD *)(v40 + 9) = *(_OWORD *)(v41 + 9);
                      *(_OWORD *)v40 = v118;
                      v40[v214] = 7;
                      goto LABEL_214;
                    case 8:
                      v116 = *(void **)v41;
                      *(_QWORD *)v40 = *(_QWORD *)v41;
                      v117 = 8;
                      goto LABEL_213;
                    case 9:
                      v116 = *(void **)v41;
                      *(_QWORD *)v40 = *(_QWORD *)v41;
                      v117 = 9;
LABEL_213:
                      v40[v214] = v117;
                      v122 = v116;
LABEL_214:
                      v123 = (unint64_t)&v40[v214 + 8] & 0xFFFFFFFFFFFFFFF8;
                      v124 = (unint64_t)&v41[v214 + 8] & 0xFFFFFFFFFFFFFFF8;
                      if (*(_QWORD *)(v124 + 8) < 0xFFFFFFFFuLL)
                      {
                        v135 = *(_OWORD *)v124;
                        v136 = *(_OWORD *)(v124 + 16);
                        v137 = *(_OWORD *)(v124 + 48);
                        *(_OWORD *)(v123 + 32) = *(_OWORD *)(v124 + 32);
                        *(_OWORD *)(v123 + 48) = v137;
                        *(_OWORD *)v123 = v135;
                        *(_OWORD *)(v123 + 16) = v136;
                        v138 = *(_OWORD *)(v124 + 64);
                        v139 = *(_OWORD *)(v124 + 80);
                        v140 = *(_OWORD *)(v124 + 96);
                        *(_OWORD *)(v123 + 106) = *(_OWORD *)(v124 + 106);
                        *(_OWORD *)(v123 + 80) = v139;
                        *(_OWORD *)(v123 + 96) = v140;
                        *(_OWORD *)(v123 + 64) = v138;
                      }
                      else
                      {
                        *(_QWORD *)v123 = *(_QWORD *)v124;
                        v125 = *(_QWORD *)(v124 + 8);
                        *(_QWORD *)(v123 + 8) = v125;
                        v126 = *(void **)(v124 + 16);
                        v127 = *(_QWORD *)(v124 + 24);
                        v128 = *(_QWORD *)(v124 + 32);
                        v129 = *(_QWORD *)(v124 + 40);
                        v130 = *(_QWORD *)(v124 + 48);
                        v218 = *(_QWORD *)(v124 + 56);
                        v223 = *(_BYTE *)(v124 + 64);
                        swift_bridgeObjectRetain(v125);
                        sub_10003E1F0(v126, v127, v128, v129, v130, v218, v223);
                        *(_QWORD *)(v123 + 16) = v126;
                        *(_QWORD *)(v123 + 24) = v127;
                        *(_QWORD *)(v123 + 32) = v128;
                        *(_QWORD *)(v123 + 40) = v129;
                        *(_QWORD *)(v123 + 48) = v130;
                        *(_QWORD *)(v123 + 56) = v218;
                        *(_BYTE *)(v123 + 64) = v223;
                        *(_BYTE *)(v123 + 65) = *(_BYTE *)(v124 + 65);
                        *(_BYTE *)(v123 + 66) = *(_BYTE *)(v124 + 66);
                        *(_BYTE *)(v123 + 67) = *(_BYTE *)(v124 + 67);
                        *(_BYTE *)(v123 + 68) = *(_BYTE *)(v124 + 68);
                        v131 = *(unsigned __int8 *)(v124 + 120);
                        if (v131 == 255)
                        {
                          v132 = *(_OWORD *)(v124 + 72);
                          v133 = *(_OWORD *)(v124 + 88);
                          v134 = *(_OWORD *)(v124 + 104);
                          *(_BYTE *)(v123 + 120) = *(_BYTE *)(v124 + 120);
                          *(_OWORD *)(v123 + 88) = v133;
                          *(_OWORD *)(v123 + 104) = v134;
                          *(_OWORD *)(v123 + 72) = v132;
                        }
                        else
                        {
                          v224 = v131 & 1;
                          v141 = *(void **)(v124 + 72);
                          v142 = *(_QWORD *)(v124 + 80);
                          v143 = *(_QWORD *)(v124 + 88);
                          v144 = *(_QWORD *)(v124 + 96);
                          v145 = *(_QWORD *)(v124 + 104);
                          v219 = *(_QWORD *)(v124 + 112);
                          sub_10002B764(v141, v142, v143, v144, v145, v219, v131 & 1);
                          *(_QWORD *)(v123 + 72) = v141;
                          *(_QWORD *)(v123 + 80) = v142;
                          *(_QWORD *)(v123 + 88) = v143;
                          *(_QWORD *)(v123 + 96) = v144;
                          *(_QWORD *)(v123 + 104) = v145;
                          *(_QWORD *)(v123 + 112) = v219;
                          *(_BYTE *)(v123 + 120) = v224;
                        }
                        *(_BYTE *)(v123 + 121) = *(_BYTE *)(v124 + 121);
                      }
                      *(_BYTE *)(v123 + 122) = *(_BYTE *)(v124 + 122);
                      *(_BYTE *)(v123 + 123) = *(_BYTE *)(v124 + 123);
                      *(_BYTE *)(v123 + 124) = *(_BYTE *)(v124 + 124);
                      *(_BYTE *)(v123 + 125) = *(_BYTE *)(v124 + 125);
                      *(_BYTE *)(v123 + 126) = *(_BYTE *)(v124 + 126);
                      v146 = *(void **)((v124 + 134) & 0xFFFFFFFFFFFFF8);
                      *(_QWORD *)((v123 + 134) & 0xFFFFFFFFFFFFF8) = v146;
                      v147 = v146;
                      v29 = a1;
                      if (v22 > 3)
                        goto LABEL_221;
                      v101 = ((1 << (8 * v22)) + 1) >> (8 * v22);
                      if (v101 > 0xFFF5)
                      {
                        *(_DWORD *)&v40[v22] = 0;
                      }
                      else
                      {
                        if (v101 <= 0xF5)
                        {
LABEL_221:
                          v40[v22] = 0;
                          goto LABEL_285;
                        }
                        *(_WORD *)&v40[v22] = 0;
                      }
                      break;
                    default:
                      if (v214 <= 3)
                        v74 = v214;
                      else
                        v74 = 4;
                      __asm { BR              X12 }
                      return result;
                  }
                  goto LABEL_295;
                case 1u:
                  switch(v41[v214])
                  {
                    case 0:
                      *v40 = *v41;
                      v40[v214] = 0;
                      goto LABEL_229;
                    case 1:
                      v119 = *(void **)v41;
                      *(_QWORD *)v40 = *(_QWORD *)v41;
                      v120 = 1;
                      goto LABEL_228;
                    case 2:
                      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v216 + 16))(v40, v41, v213);
                      v40[v214] = 2;
                      goto LABEL_229;
                    case 3:
                      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v216 + 16))(v40, v41, v213);
                      v40[v214] = 3;
                      goto LABEL_229;
                    case 4:
                      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v216 + 16))(v40, v41, v213);
                      v40[v214] = 4;
                      goto LABEL_229;
                    case 5:
                      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v216 + 16))(v40, v41, v213);
                      v40[v214] = 5;
                      goto LABEL_229;
                    case 6:
                      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v216 + 16))(v40, v41, v213);
                      v40[v214] = 6;
                      goto LABEL_229;
                    case 7:
                      v121 = *(_OWORD *)v41;
                      *(_OWORD *)(v40 + 9) = *(_OWORD *)(v41 + 9);
                      *(_OWORD *)v40 = v121;
                      v40[v214] = 7;
                      goto LABEL_229;
                    case 8:
                      v119 = *(void **)v41;
                      *(_QWORD *)v40 = *(_QWORD *)v41;
                      v120 = 8;
                      goto LABEL_228;
                    case 9:
                      v119 = *(void **)v41;
                      *(_QWORD *)v40 = *(_QWORD *)v41;
                      v120 = 9;
LABEL_228:
                      v40[v214] = v120;
                      v148 = v119;
LABEL_229:
                      v149 = (unint64_t)&v40[v214 + 8] & 0xFFFFFFFFFFFFFFF8;
                      v150 = (unint64_t)&v41[v214 + 8] & 0xFFFFFFFFFFFFFFF8;
                      if (*(_QWORD *)(v150 + 8) < 0xFFFFFFFFuLL)
                      {
                        v161 = *(_OWORD *)v150;
                        v162 = *(_OWORD *)(v150 + 16);
                        v163 = *(_OWORD *)(v150 + 48);
                        *(_OWORD *)(v149 + 32) = *(_OWORD *)(v150 + 32);
                        *(_OWORD *)(v149 + 48) = v163;
                        *(_OWORD *)v149 = v161;
                        *(_OWORD *)(v149 + 16) = v162;
                        v164 = *(_OWORD *)(v150 + 64);
                        v165 = *(_OWORD *)(v150 + 80);
                        v166 = *(_OWORD *)(v150 + 96);
                        *(_OWORD *)(v149 + 106) = *(_OWORD *)(v150 + 106);
                        *(_OWORD *)(v149 + 80) = v165;
                        *(_OWORD *)(v149 + 96) = v166;
                        *(_OWORD *)(v149 + 64) = v164;
                      }
                      else
                      {
                        *(_QWORD *)v149 = *(_QWORD *)v150;
                        v151 = *(_QWORD *)(v150 + 8);
                        *(_QWORD *)(v149 + 8) = v151;
                        v152 = *(void **)(v150 + 16);
                        v153 = *(_QWORD *)(v150 + 24);
                        v154 = *(_QWORD *)(v150 + 32);
                        v155 = *(_QWORD *)(v150 + 40);
                        v156 = *(_QWORD *)(v150 + 48);
                        v220 = *(_QWORD *)(v150 + 56);
                        v225 = *(_BYTE *)(v150 + 64);
                        swift_bridgeObjectRetain(v151);
                        sub_10003E1F0(v152, v153, v154, v155, v156, v220, v225);
                        *(_QWORD *)(v149 + 16) = v152;
                        *(_QWORD *)(v149 + 24) = v153;
                        *(_QWORD *)(v149 + 32) = v154;
                        *(_QWORD *)(v149 + 40) = v155;
                        *(_QWORD *)(v149 + 48) = v156;
                        *(_QWORD *)(v149 + 56) = v220;
                        *(_BYTE *)(v149 + 64) = v225;
                        *(_BYTE *)(v149 + 65) = *(_BYTE *)(v150 + 65);
                        *(_BYTE *)(v149 + 66) = *(_BYTE *)(v150 + 66);
                        *(_BYTE *)(v149 + 67) = *(_BYTE *)(v150 + 67);
                        *(_BYTE *)(v149 + 68) = *(_BYTE *)(v150 + 68);
                        v157 = *(unsigned __int8 *)(v150 + 120);
                        if (v157 == 255)
                        {
                          v158 = *(_OWORD *)(v150 + 72);
                          v159 = *(_OWORD *)(v150 + 88);
                          v160 = *(_OWORD *)(v150 + 104);
                          *(_BYTE *)(v149 + 120) = *(_BYTE *)(v150 + 120);
                          *(_OWORD *)(v149 + 88) = v159;
                          *(_OWORD *)(v149 + 104) = v160;
                          *(_OWORD *)(v149 + 72) = v158;
                        }
                        else
                        {
                          v226 = v157 & 1;
                          v167 = *(void **)(v150 + 72);
                          v168 = *(_QWORD *)(v150 + 80);
                          v169 = *(_QWORD *)(v150 + 88);
                          v170 = *(_QWORD *)(v150 + 96);
                          v171 = *(_QWORD *)(v150 + 104);
                          v221 = *(_QWORD *)(v150 + 112);
                          sub_10002B764(v167, v168, v169, v170, v171, v221, v157 & 1);
                          *(_QWORD *)(v149 + 72) = v167;
                          *(_QWORD *)(v149 + 80) = v168;
                          *(_QWORD *)(v149 + 88) = v169;
                          *(_QWORD *)(v149 + 96) = v170;
                          *(_QWORD *)(v149 + 104) = v171;
                          *(_QWORD *)(v149 + 112) = v221;
                          *(_BYTE *)(v149 + 120) = v226;
                        }
                        *(_BYTE *)(v149 + 121) = *(_BYTE *)(v150 + 121);
                      }
                      *(_BYTE *)(v149 + 122) = *(_BYTE *)(v150 + 122);
                      *(_BYTE *)(v149 + 123) = *(_BYTE *)(v150 + 123);
                      *(_BYTE *)(v149 + 124) = *(_BYTE *)(v150 + 124);
                      *(_BYTE *)(v149 + 125) = *(_BYTE *)(v150 + 125);
                      *(_BYTE *)(v149 + 126) = *(_BYTE *)(v150 + 126);
                      v172 = *(void **)((v150 + 134) & 0xFFFFFFFFFFFFF8);
                      *(_QWORD *)((v149 + 134) & 0xFFFFFFFFFFFFF8) = v172;
                      v173 = v172;
                      v29 = a1;
                      if (v22 > 3)
                        goto LABEL_236;
                      v115 = 1;
                      v101 = ((1 << (8 * v22)) + 1) >> (8 * v22);
                      if (v101 > 0xFFF5)
                        goto LABEL_294;
                      if (v101 <= 0xF5)
                      {
LABEL_236:
                        v93 = 1;
                        goto LABEL_284;
                      }
                      *(_WORD *)&v40[v22] = 1;
                      break;
                    default:
                      if (v214 <= 3)
                        v75 = v214;
                      else
                        v75 = 4;
                      __asm { BR              X12 }
                      return result;
                  }
                  goto LABEL_295;
                case 2u:
                  v76 = *(void **)v41;
                  *(_QWORD *)v40 = *(_QWORD *)v41;
                  v77 = (char *)((unint64_t)&v40[v32] & v73);
                  v78 = (unsigned __int8 *)((unint64_t)&v41[v32] & v73);
                  v79 = v78[v214];
                  v80 = v76;
                  switch(v79)
                  {
                    case 0:
                      *v77 = *v78;
                      v77[v214] = 0;
                      break;
                    case 1:
                      v174 = *(void **)v78;
                      *(_QWORD *)v77 = *(_QWORD *)v78;
                      v175 = 1;
                      goto LABEL_249;
                    case 2:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v216 + 16))(v77, v78, v213);
                      v77[v214] = 2;
                      break;
                    case 3:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v216 + 16))(v77, v78, v213);
                      v77[v214] = 3;
                      break;
                    case 4:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v216 + 16))(v77, v78, v213);
                      v77[v214] = 4;
                      break;
                    case 5:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v216 + 16))(v77, v78, v213);
                      v77[v214] = 5;
                      break;
                    case 6:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v216 + 16))(v77, v78, v213);
                      v77[v214] = 6;
                      break;
                    case 7:
                      v176 = *(_OWORD *)v78;
                      *(_OWORD *)(v77 + 9) = *(_OWORD *)(v78 + 9);
                      *(_OWORD *)v77 = v176;
                      v77[v214] = 7;
                      break;
                    case 8:
                      v174 = *(void **)v78;
                      *(_QWORD *)v77 = *(_QWORD *)v78;
                      v175 = 8;
                      goto LABEL_249;
                    case 9:
                      v174 = *(void **)v78;
                      *(_QWORD *)v77 = *(_QWORD *)v78;
                      v175 = 9;
LABEL_249:
                      v77[v214] = v175;
                      v177 = v174;
                      break;
                    default:
                      memcpy(v77, v78, __n);
                      break;
                  }
                  v29 = a1;
                  if (v22 > 3)
                    goto LABEL_251;
                  v101 = ((1 << (8 * v22)) + 1) >> (8 * v22);
                  if (v101 > 0xFFF5)
                  {
                    v115 = 2;
                    goto LABEL_294;
                  }
                  if (v101 <= 0xF5)
                  {
LABEL_251:
                    v93 = 2;
                    goto LABEL_284;
                  }
                  *(_WORD *)&v40[v22] = 2;
                  goto LABEL_295;
                case 3u:
                  v81 = *(void **)v41;
                  *(_QWORD *)v40 = *(_QWORD *)v41;
                  v82 = (char *)((unint64_t)&v40[v32] & v73);
                  v83 = (unsigned __int8 *)((unint64_t)&v41[v32] & v73);
                  v84 = v83[v214];
                  v85 = v81;
                  switch(v84)
                  {
                    case 0:
                      *v82 = *v83;
                      v82[v214] = 0;
                      break;
                    case 1:
                      v178 = *(void **)v83;
                      *(_QWORD *)v82 = *(_QWORD *)v83;
                      v179 = 1;
                      goto LABEL_265;
                    case 2:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v216 + 16))(v82, v83, v213);
                      v82[v214] = 2;
                      break;
                    case 3:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v216 + 16))(v82, v83, v213);
                      v82[v214] = 3;
                      break;
                    case 4:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v216 + 16))(v82, v83, v213);
                      v82[v214] = 4;
                      break;
                    case 5:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v216 + 16))(v82, v83, v213);
                      v82[v214] = 5;
                      break;
                    case 6:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v216 + 16))(v82, v83, v213);
                      v82[v214] = 6;
                      break;
                    case 7:
                      v180 = *(_OWORD *)v83;
                      *(_OWORD *)(v82 + 9) = *(_OWORD *)(v83 + 9);
                      *(_OWORD *)v82 = v180;
                      v82[v214] = 7;
                      break;
                    case 8:
                      v178 = *(void **)v83;
                      *(_QWORD *)v82 = *(_QWORD *)v83;
                      v179 = 8;
                      goto LABEL_265;
                    case 9:
                      v178 = *(void **)v83;
                      *(_QWORD *)v82 = *(_QWORD *)v83;
                      v179 = 9;
LABEL_265:
                      v82[v214] = v179;
                      v181 = v178;
                      break;
                    default:
                      memcpy(v82, v83, __n);
                      break;
                  }
                  v29 = a1;
                  if (v22 > 3)
                    goto LABEL_267;
                  v101 = ((1 << (8 * v22)) + 1) >> (8 * v22);
                  if (v101 > 0xFFF5)
                  {
                    v115 = 3;
                    goto LABEL_294;
                  }
                  if (v101 <= 0xF5)
                  {
LABEL_267:
                    v93 = 3;
                    goto LABEL_284;
                  }
                  *(_WORD *)&v40[v22] = 3;
                  goto LABEL_295;
                case 4u:
                  v86 = *(void **)v41;
                  *(_QWORD *)v40 = *(_QWORD *)v41;
                  v87 = (char *)((unint64_t)&v40[v32] & v73);
                  v88 = (unsigned __int8 *)((unint64_t)&v41[v32] & v73);
                  v89 = v88[v214];
                  v90 = v86;
                  switch(v89)
                  {
                    case 0:
                      *v87 = *v88;
                      v87[v214] = 0;
                      break;
                    case 1:
                      v182 = *(void **)v88;
                      *(_QWORD *)v87 = *(_QWORD *)v88;
                      v183 = 1;
                      goto LABEL_281;
                    case 2:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v216 + 16))(v87, v88, v213);
                      v87[v214] = 2;
                      break;
                    case 3:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v216 + 16))(v87, v88, v213);
                      v87[v214] = 3;
                      break;
                    case 4:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v216 + 16))(v87, v88, v213);
                      v87[v214] = 4;
                      break;
                    case 5:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v216 + 16))(v87, v88, v213);
                      v87[v214] = 5;
                      break;
                    case 6:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v216 + 16))(v87, v88, v213);
                      v87[v214] = 6;
                      break;
                    case 7:
                      v184 = *(_OWORD *)v88;
                      *(_OWORD *)(v87 + 9) = *(_OWORD *)(v88 + 9);
                      *(_OWORD *)v87 = v184;
                      v87[v214] = 7;
                      break;
                    case 8:
                      v182 = *(void **)v88;
                      *(_QWORD *)v87 = *(_QWORD *)v88;
                      v183 = 8;
                      goto LABEL_281;
                    case 9:
                      v182 = *(void **)v88;
                      *(_QWORD *)v87 = *(_QWORD *)v88;
                      v183 = 9;
LABEL_281:
                      v87[v214] = v183;
                      v185 = v182;
                      break;
                    default:
                      memcpy(v87, v88, __n);
                      break;
                  }
                  v29 = a1;
                  if (v22 > 3)
                    goto LABEL_283;
                  v101 = ((1 << (8 * v22)) + 1) >> (8 * v22);
                  if (v101 > 0xFFF5)
                  {
                    v115 = 4;
                    goto LABEL_294;
                  }
                  if (v101 <= 0xF5)
                  {
LABEL_283:
                    v93 = 4;
                    goto LABEL_284;
                  }
                  *(_WORD *)&v40[v22] = 4;
                  goto LABEL_295;
                case 5u:
                  *(_QWORD *)v40 = *(_QWORD *)v41;
                  v40[8] = v41[8];
                  v40[9] = v41[9];
                  v40[10] = v41[10];
                  v91 = (void *)*((_QWORD *)v41 + 2);
                  *((_QWORD *)v40 + 2) = v91;
                  v92 = v91;
                  if (v22 > 3)
                    goto LABEL_129;
                  v101 = ((1 << (8 * v22)) + 1) >> (8 * v22);
                  if (v101 > 0xFFF5)
                  {
                    v115 = 5;
                    goto LABEL_294;
                  }
                  if (v101 <= 0xF5)
                  {
LABEL_129:
                    v93 = 5;
                    goto LABEL_284;
                  }
                  *(_WORD *)&v40[v22] = 5;
                  goto LABEL_295;
                case 6u:
                  v99 = *(void **)v41;
                  *(_QWORD *)v40 = *(_QWORD *)v41;
                  v100 = v99;
                  if (v22 > 3)
                    goto LABEL_145;
                  v101 = ((1 << (8 * v22)) + 1) >> (8 * v22);
                  if (v101 > 0xFFF5)
                  {
                    v115 = 6;
                    goto LABEL_294;
                  }
                  if (v101 <= 0xF5)
                  {
LABEL_145:
                    v93 = 6;
                    goto LABEL_284;
                  }
                  *(_WORD *)&v40[v22] = 6;
                  goto LABEL_295;
                case 7u:
                  v94 = ~(unint64_t)v11;
                  if (v204 < 0)
                  {
                    v96 = (*(uint64_t (**)(unint64_t))(v10 + 48))((unint64_t)&v41[v210] & v94);
                  }
                  else
                  {
                    v95 = *(_QWORD *)v41;
                    if (*(_QWORD *)v41 >= 0xFFFFFFFFuLL)
                      LODWORD(v95) = -1;
                    v96 = v95 + 1;
                  }
                  if (v96)
                  {
                    memcpy(v40, v41, v202);
                  }
                  else
                  {
                    v106 = *(_QWORD *)v41;
                    *(_QWORD *)v40 = *(_QWORD *)v41;
                    v107 = *(void (**)(unint64_t, unint64_t, uint64_t, __n128))(v10 + 16);
                    v108 = swift_bridgeObjectRetain(v106);
                    v107((unint64_t)&v40[v210] & v94, (unint64_t)&v41[v210] & v94, v211, v108);
                  }
                  v109 = (unint64_t)&v40[v208] & 0xFFFFFFFFFFFFFFF8;
                  v110 = (unint64_t)&v41[v208] & 0xFFFFFFFFFFFFFFF8;
                  if (*(_QWORD *)(v110 + 8) < 0xFFFFFFFFuLL)
                  {
                    v114 = *(_OWORD *)v110;
                    *(_QWORD *)(v109 + 16) = *(_QWORD *)(v110 + 16);
                    *(_OWORD *)v109 = v114;
                  }
                  else
                  {
                    *(_QWORD *)v109 = *(_QWORD *)v110;
                    v111 = *(_QWORD *)(v110 + 8);
                    *(_QWORD *)(v109 + 8) = v111;
                    v112 = *(void **)(v110 + 16);
                    *(_QWORD *)(v109 + 16) = v112;
                    swift_bridgeObjectRetain(v111);
                    v113 = v112;
                  }
                  v29 = a1;
                  if (v22 > 3)
                    goto LABEL_182;
                  v101 = ((1 << (8 * v22)) + 1) >> (8 * v22);
                  if (v101 > 0xFFF5)
                  {
                    v115 = 7;
                    goto LABEL_294;
                  }
                  if (v101 <= 0xF5)
                  {
LABEL_182:
                    v93 = 7;
                    goto LABEL_284;
                  }
                  *(_WORD *)&v40[v22] = 7;
                  goto LABEL_295;
                case 8u:
                  if (v203 < 0xFD)
                  {
                    v103 = v41[v212];
                    if (v103 < 3)
                      goto LABEL_161;
                    v102 = v103 - 2;
                  }
                  else
                  {
                    v102 = (*(uint64_t (**)(_BYTE *))(v216 + 48))(v41);
                  }
                  if (v102)
                  {
                    memcpy(v40, v41, v212 + 1);
                    goto LABEL_162;
                  }
LABEL_161:
                  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v216 + 16))(v40, v41, v213);
                  v40[v212] = v41[v212];
LABEL_162:
                  *(_QWORD *)((unint64_t)&v40[v212 + 8] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&v41[v212 + 8] & 0xFFFFFFFFFFFFF8);
                  if (v22 > 3)
                    goto LABEL_165;
                  v101 = ((1 << (8 * v22)) + 1) >> (8 * v22);
                  if (v101 > 0xFFF5)
                  {
                    v115 = 8;
                    goto LABEL_294;
                  }
                  if (v101 <= 0xF5)
                  {
LABEL_165:
                    v93 = 8;
                    goto LABEL_284;
                  }
                  *(_WORD *)&v40[v22] = 8;
                  goto LABEL_295;
                case 9u:
                  *v40 = *v41;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v206 + 16))((unint64_t)&v40[v205] & ~v27, (unint64_t)&v41[v205] & ~v27, v207);
                  if (v22 > 3)
                    goto LABEL_135;
                  v101 = ((1 << (8 * v22)) + 1) >> (8 * v22);
                  if (v101 > 0xFFF5)
                  {
                    v115 = 9;
LABEL_294:
                    *(_DWORD *)&v40[v22] = v115;
                    goto LABEL_295;
                  }
                  if (v101 > 0xF5)
                  {
                    *(_WORD *)&v40[v22] = 9;
LABEL_295:
                    v188 = v101 > 0xFFF5;
                    v187 = 2;
                    if (v188)
                      v187 = 4;
                    goto LABEL_297;
                  }
LABEL_135:
                  v93 = 9;
LABEL_284:
                  v40[v22] = v93;
LABEL_285:
                  if (v22 > 3)
                    goto LABEL_289;
                  v186 = ((1 << (8 * v22)) + 1) >> (8 * v22);
                  v187 = 2;
                  if (v186 > 0xFFF5)
                    v187 = 4;
                  if (v186 <= 0xF5)
LABEL_289:
                    v187 = 1;
LABEL_297:
                  v189 = v187 + v22;
                  v190 = (unint64_t)&v40[v189];
                  v191 = (unint64_t)&v41[v189];
                  *(_BYTE *)v190 = *(_BYTE *)v191;
                  v190 &= 0xFFFFFFFFFFFFFFF8;
                  v191 &= 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)(v190 + 8) = *(_QWORD *)(v191 + 8);
                  v192 = *(_QWORD *)(v191 + 16);
                  *(_QWORD *)(v190 + 16) = v192;
                  v193 = (uint64_t *)((v191 + 31) & 0xFFFFFFFFFFFFF8);
                  v194 = *v193;
                  *(_QWORD *)((v190 + 31) & 0xFFFFFFFFFFFFF8) = *v193;
                  swift_bridgeObjectRetain(v192);
                  swift_bridgeObjectRetain(v194);
                  if (v22 > 3)
                    goto LABEL_301;
                  v195 = ((1 << (8 * v22)) + 1) >> (8 * v22);
                  v196 = 2;
                  if (v195 > 0xFFF5)
                    v196 = 4;
                  if (v195 <= 0xF5)
LABEL_301:
                    v196 = 1;
                  v197 = ((((v196 + v22) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
                  *(_QWORD *)((unint64_t)&v40[v197] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&v41[v197] & 0xFFFFFFFFFFFFF8);
                  if (v22 <= 3)
                    goto LABEL_303;
                  goto LABEL_306;
                default:
                  if (v22 > 3)
                    goto LABEL_140;
                  v97 = ((1 << (8 * v22)) + 1) >> (8 * v22);
                  v98 = 2;
                  if (v97 > 0xFFF5)
                    v98 = 4;
                  if (v97 <= 0xF5)
LABEL_140:
                    v98 = 1;
                  memcpy(v40, v41, v98 + v22);
                  goto LABEL_285;
              }
            }
          }
          else
          {
            v42 = 11;
          }
          v43 = 8;
          goto LABEL_44;
        }
      }
      else
      {
        v34 = 11;
      }
      v35 = 8;
      goto LABEL_32;
    }
  }
  v30 = *a2;
  *a1 = *a2;
  v29 = (uint64_t *)(v30 + ((v25 + 16) & ~v25));
  swift_retain();
  return v29;
}

double sub_1004DD970(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  char v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  unint64_t v33;
  int v34;
  char v35;
  int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  unsigned int v42;
  char v43;
  unsigned int v44;
  unsigned int v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  char v49;
  int v50;
  unsigned int v51;
  int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  char v56;
  int v57;
  unsigned int v58;
  int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id *v68;
  uint64_t v69;
  id v70;
  __n128 v71;
  unint64_t v72;
  unint64_t v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  int v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(v4 + 64);
  v83 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v83 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v82 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v9 = *(_QWORD *)(v82 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = type metadata accessor for AnyTip(0);
  v13 = v8 & 0xF8 | 7;
  v14 = *(_QWORD *)(v11 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  if (v5)
    v16 = v6 + a1;
  else
    v16 = v6 + a1 + 1;
  v17 = *(_QWORD *)(v7 + 64);
  if (v17 <= 0x19)
    v18 = 25;
  else
    v18 = *(_QWORD *)(v7 + 64);
  v19 = v18 + 1;
  v20 = *(_QWORD *)(v9 + 64) + ((v10 + 8) & ~v10);
  v21 = v18 + 1 + (((v8 & 0xF8) + 15) & ~v13);
  if (v21 <= (((v18 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8)
    v21 = (((v18 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v21 <= ((v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 24)
    v21 = ((v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  v22 = (v17 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v21 > v22)
    v22 = v21;
  if (v22 <= *(_QWORD *)(v14 + 64) + ((v15 + 1) & (unint64_t)~v15))
    v22 = *(_QWORD *)(v14 + 64) + ((v15 + 1) & ~v15);
  if (v22 <= 0x18)
    v23 = 24;
  else
    v23 = v22;
  v24 = 8 * v23;
  v25 = v10 | v15 | v13;
  v26 = v16 + v25;
  if (v23 > 3)
  {
    v27 = 11;
LABEL_22:
    v28 = 8;
    goto LABEL_23;
  }
  v32 = ((1 << v24) + 1) >> v24;
  if (v32 > 0xFFF5)
  {
    v30 = 0x7FFFFFFF;
    goto LABEL_32;
  }
  v27 = v32 + 10;
  if (v32 <= 0xF5)
    goto LABEL_22;
  v28 = 16;
LABEL_23:
  v29 = (1 << v28) - v27;
  v30 = 0x7FFFFFFF;
  if (v29 <= 0x7FFFFFFF)
    v31 = 0x7FFFFFFF;
  else
    v31 = v29;
  if ((v29 & 0x80000000) == 0)
    v30 = v31;
LABEL_32:
  v33 = v26 & ~v25;
  if (v23 > 3)
  {
    v34 = 11;
    goto LABEL_34;
  }
  v37 = ((1 << v24) + 1) >> v24;
  if (v37 <= 0xFFF5)
  {
    v34 = v37 + 10;
    if (v37 > 0xF5)
    {
      v35 = 16;
LABEL_35:
      v36 = (1 << v35) - v34;
      if ((v36 & 0x80000000) == 0)
        goto LABEL_41;
      goto LABEL_40;
    }
LABEL_34:
    v35 = 8;
    goto LABEL_35;
  }
LABEL_40:
  v36 = 0x7FFFFFFF;
LABEL_41:
  if (v36 != v30)
  {
    if (v23 > 3)
      goto LABEL_48;
    v39 = ((1 << v24) + 1) >> v24;
    v40 = 2;
    if (v39 > 0xFFF5)
      v40 = 4;
    if (v39 <= 0xF5)
LABEL_48:
      v40 = 1;
    v41 = *(_QWORD *)((((v23 + v33 + v40) & 0xFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8);
    if (v41 >= 0xFFFFFFFF)
      LODWORD(v41) = -1;
    if ((_DWORD)v41 != -1)
      return result;
    goto LABEL_94;
  }
  if (v23 > 3)
  {
    v38 = 11;
LABEL_55:
    v43 = 8;
    goto LABEL_56;
  }
  v42 = ((1 << v24) + 1) >> v24;
  if (v42 > 0xFFF5)
    goto LABEL_59;
  v38 = v42 + 10;
  if (v42 <= 0xF5)
    goto LABEL_55;
  v43 = 16;
LABEL_56:
  v44 = (1 << v43) - v38;
  if ((v44 & 0x80000000) == 0)
  {
    if (v23 > 3)
      goto LABEL_63;
LABEL_60:
    v45 = ((1 << v24) + 1) >> v24;
    v46 = 2;
    if (v45 > 0xFFF5)
      v46 = 4;
    if (v45 > 0xF5)
      goto LABEL_64;
    goto LABEL_63;
  }
LABEL_59:
  v44 = 0x7FFFFFFF;
  if (v23 <= 3)
    goto LABEL_60;
LABEL_63:
  v46 = 1;
LABEL_64:
  v47 = v30 - v44;
  if (v30 <= v44)
    goto LABEL_81;
  v48 = v46 + v23;
  v49 = 8 * (v46 + v23);
  if (v48 > 3)
    goto LABEL_66;
  v51 = ((v47 + ~(-1 << v49)) >> v49) + 1;
  if (HIWORD(v51))
  {
    v50 = *(_DWORD *)(v33 + v48);
    if (!v50)
      goto LABEL_81;
    goto LABEL_74;
  }
  if (v51 > 0xFF)
  {
    v50 = *(unsigned __int16 *)(v33 + v48);
    if (!*(_WORD *)(v33 + v48))
      goto LABEL_81;
    goto LABEL_74;
  }
  if (v51 >= 2)
  {
LABEL_66:
    v50 = *(unsigned __int8 *)(v33 + v48);
    if (!*(_BYTE *)(v33 + v48))
      goto LABEL_81;
LABEL_74:
    v52 = (v50 - 1) << v49;
    if (v48 > 3)
      v52 = 0;
    if ((_DWORD)v48)
    {
      if (v48 > 3)
        LODWORD(v48) = 4;
      __asm { BR              X0 }
    }
    if (v44 + v52 != -1)
      return result;
    goto LABEL_94;
  }
LABEL_81:
  if (!v44)
    goto LABEL_94;
  if (v23 > 3)
  {
    v53 = *(unsigned __int8 *)(v33 + v23);
    v54 = v53 | 0xFFFFFF00;
    v55 = v53 ^ 0xFF;
    v56 = 8;
    v57 = 11;
    goto LABEL_89;
  }
  v58 = ((1 << v24) + 1) >> v24;
  if (v58 <= 0xFFF5)
  {
    v57 = v58 + 10;
    if (v58 > 0xF5)
    {
      v60 = *(unsigned __int16 *)(v33 + v23);
      v54 = v60 | 0xFFFF0000;
      v55 = v60 ^ 0xFFFF;
      v56 = 16;
    }
    else
    {
      v59 = *(unsigned __int8 *)(v33 + v23);
      v54 = v59 | 0xFFFFFF00;
      v55 = v59 ^ 0xFF;
      v56 = 8;
    }
LABEL_89:
    v61 = (1 << v56) - v57;
    if ((v61 & 0x80000000) == 0)
    {
      if (v61 <= v55)
        goto LABEL_94;
LABEL_93:
      if (v54)
        return result;
      goto LABEL_94;
    }
    goto LABEL_92;
  }
  v54 = *(_DWORD *)(v33 + v23);
  v55 = ~v54;
LABEL_92:
  if (v55 < 0x7FFFFFFF)
    goto LABEL_93;
LABEL_94:
  if (v23 > 3)
    goto LABEL_95;
  v63 = ((1 << v24) + 1) >> v24;
  if (v63 > 0xFFF5)
  {
    v62 = *(_DWORD *)(v33 + v23);
    goto LABEL_100;
  }
  if (v63 <= 0xF5)
LABEL_95:
    v62 = *(unsigned __int8 *)(v33 + v23);
  else
    v62 = *(unsigned __int16 *)(v33 + v23);
LABEL_100:
  if (v62 >= 0xA)
  {
    if (v23 <= 3)
      v64 = v23;
    else
      v64 = 4;
    __asm { BR              X0 }
  }
  v65 = ~v13;
  switch(v62)
  {
    case 0u:
      switch(*(_BYTE *)(v33 + v18))
      {
        case 0:
        case 7:
          goto LABEL_148;
        case 1:
        case 8:
        case 9:
          goto LABEL_146;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_145;
        default:
          if (v18 <= 3)
            v66 = v18;
          else
            v66 = 4;
          __asm { BR              X12 }
          return result;
      }
    case 1u:
      switch(*(_BYTE *)(v33 + v18))
      {
        case 0:
        case 7:
          goto LABEL_148;
        case 1:
        case 8:
        case 9:
LABEL_146:
          v75 = v18 + 1;

          goto LABEL_147;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
LABEL_145:
          v75 = v18 + 1;
          (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v33, v83);
LABEL_147:
          v19 = v75;
LABEL_148:
          v76 = ((v33 | 7) + v19) & 0xFFFFFFFFFFFFFFF8;
          v77 = *(_QWORD *)(v76 + 8);
          if (v77 >= 0xFFFFFFFF)
          {
            swift_bridgeObjectRelease(v77);
            sub_10003E2EC(*(void **)(v76 + 16), *(_QWORD *)(v76 + 24), *(_QWORD *)(v76 + 32), *(_QWORD *)(v76 + 40), *(_QWORD *)(v76 + 48), *(_QWORD *)(v76 + 56), *(_BYTE *)(v76 + 64));
            v78 = *(unsigned __int8 *)(v76 + 120);
            if (v78 != 255)
              sub_10002B328(*(void **)(v76 + 72), *(_QWORD *)(v76 + 80), *(_QWORD *)(v76 + 88), *(_QWORD *)(v76 + 96), *(_QWORD *)(v76 + 104), *(_QWORD *)(v76 + 112), v78 & 1);
          }
          v74 = *(id *)((v76 + 134) & 0xFFFFFFFFFFFFF8);
          break;
        default:
          if (v18 <= 3)
            v67 = v18;
          else
            v67 = 4;
          __asm { BR              X12 }
          return result;
      }
      goto LABEL_152;
    case 2u:

      v68 = (id *)((v33 + v13 + 8) & v65);
      switch(*((_BYTE *)v68 + v18))
      {
        case 1:
        case 8:
        case 9:
          goto LABEL_138;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_117;
        default:
          goto LABEL_139;
      }
    case 3u:

      v68 = (id *)((v33 + v13 + 8) & v65);
      switch(*((_BYTE *)v68 + v18))
      {
        case 1:
        case 8:
        case 9:
          goto LABEL_138;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_117;
        default:
          goto LABEL_139;
      }
    case 4u:

      v68 = (id *)((v33 + v13 + 8) & v65);
      switch(*((_BYTE *)v68 + v18))
      {
        case 1:
        case 8:
        case 9:
LABEL_138:

          goto LABEL_139;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
LABEL_117:
          (*(void (**)(id *, uint64_t))(v7 + 8))(v68, v83);
          goto LABEL_134;
        default:
          goto LABEL_139;
      }
    case 5u:
      v74 = *(id *)(v33 + 16);
      goto LABEL_152;
    case 6u:
      v74 = *(id *)v33;
      goto LABEL_152;
    case 7u:
      v69 = ~v10;
      if ((*(_DWORD *)(v9 + 84) & 0x80000000) != 0)
      {
        if (!(*(unsigned int (**)(unint64_t))(v9 + 48))((v33 + v10 + 8) & v69))
        {
LABEL_122:
          v71 = swift_bridgeObjectRelease(*(_QWORD *)v33);
          (*(void (**)(unint64_t, uint64_t, __n128))(v9 + 8))((v33 + v10 + 8) & v69, v82, v71);
        }
      }
      else
      {
        v70 = *(id *)v33;
        if (*(_QWORD *)v33 >= 0xFFFFFFFFuLL)
          LODWORD(v70) = -1;
        if ((_DWORD)v70 == -1)
          goto LABEL_122;
      }
      v72 = ((v33 | 7) + v20) & 0xFFFFFFFFFFFFFFF8;
      v73 = *(_QWORD *)(v72 + 8);
      if (v73 < 0xFFFFFFFF)
      {
LABEL_139:
        if (v23 > 3)
        {
LABEL_156:
          v80 = 1;
          goto LABEL_157;
        }
      }
      else
      {
        swift_bridgeObjectRelease(v73);
        v74 = *(id *)(v72 + 16);
LABEL_152:

        if (v23 > 3)
          goto LABEL_156;
      }
LABEL_153:
      v79 = ((1 << v24) + 1) >> v24;
      v80 = 2;
      if (v79 > 0xFFF5)
        v80 = 4;
      if (v79 <= 0xF5)
        goto LABEL_156;
LABEL_157:
      v81 = (v23 + v33 + v80) & 0xFFFFFFFFFFFFFFF8;
      swift_bridgeObjectRelease(*(_QWORD *)(v81 + 16));
      *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)((v81 + 31) & 0xFFFFFFFFFFFFF8)).n128_u64[0];
      break;
    case 8u:
      if (*(_DWORD *)(v7 + 84) < 0xFDu)
      {
        if (*(unsigned __int8 *)(v33 + v17) >= 3u)
          goto LABEL_139;
      }
      else if ((*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v7 + 48))(v33, *(unsigned int *)(v7 + 84), v83))
      {
        goto LABEL_139;
      }
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v33, v83);
LABEL_134:
      if (v23 > 3)
        goto LABEL_156;
      goto LABEL_153;
    case 9u:
      (*(void (**)(unint64_t, uint64_t))(v14 + 8))((v15 + 1 + v33) & ~v15, v11);
      if (v23 > 3)
        goto LABEL_156;
      goto LABEL_153;
    default:
      goto LABEL_139;
  }
  return result;
}

void *sub_1004DE360(void *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  int v33;
  char v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  unint64_t v39;
  uint64_t v40;
  int v41;
  char v42;
  int v43;
  unsigned int v44;
  int v45;
  char v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  unsigned int v51;
  unsigned int v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  char v56;
  int v57;
  unsigned int v58;
  int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  char v63;
  int v64;
  unsigned int v65;
  int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  char *v76;
  unsigned __int8 *v77;
  uint64_t v78;
  int v79;
  id v80;
  void *v81;
  void *v82;
  char *v83;
  unsigned __int8 *v84;
  uint64_t v85;
  int v86;
  id v87;
  void *v88;
  char *v89;
  unsigned __int8 *v90;
  uint64_t v91;
  int v92;
  id v93;
  void *v94;
  id v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  unsigned int v99;
  uint64_t v100;
  void *v101;
  id v102;
  unsigned int v103;
  unsigned int v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  _BYTE *v108;
  unint64_t v109;
  uint64_t v110;
  void (*v111)(unint64_t, uint64_t, uint64_t, __n128);
  __n128 v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  void *v116;
  id v117;
  __int128 v118;
  int v119;
  void *v120;
  char v121;
  void (*v122)(unint64_t, uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  void (*v125)(unint64_t, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  void (*v128)(unint64_t, uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  void (*v131)(unint64_t, uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  __int128 v134;
  void *v135;
  char v136;
  void (*v137)(unint64_t, uint64_t, uint64_t);
  uint64_t v138;
  uint64_t v139;
  void (*v140)(unint64_t, uint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;
  void (*v143)(unint64_t, uint64_t, uint64_t);
  uint64_t v144;
  uint64_t v145;
  void (*v146)(unint64_t, uint64_t, uint64_t);
  uint64_t v147;
  uint64_t v148;
  __int128 v149;
  void (*v150)(unint64_t, uint64_t, uint64_t);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  int v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  void *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  id v177;
  void (*v178)(unint64_t, uint64_t, uint64_t);
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  id v182;
  unint64_t v183;
  unint64_t v184;
  uint64_t v185;
  void *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  int v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  void *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  void *v204;
  id v205;
  void *v206;
  char v207;
  __int128 v208;
  id v209;
  void *v210;
  char v211;
  __int128 v212;
  id v213;
  void *v214;
  char v215;
  __int128 v216;
  id v217;
  unsigned int v218;
  uint64_t v219;
  BOOL v220;
  uint64_t v221;
  unint64_t v222;
  unint64_t v223;
  uint64_t v224;
  uint64_t *v225;
  uint64_t v226;
  unsigned int v227;
  uint64_t v228;
  unint64_t v229;
  unsigned int v230;
  uint64_t v231;
  unint64_t v232;
  void *result;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  unsigned __int8 v239;
  uint64_t v240;
  unsigned __int8 v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char v245;
  uint64_t v246;
  char v247;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (v7)
    v10 = v8;
  else
    v10 = v8 + 1;
  v243 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v243 - 8);
  v12 = *(_DWORD *)(v11 + 80) & 0xF8;
  v13 = v12 | 7;
  v238 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v14 = *(_QWORD *)(v238 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = type metadata accessor for AnyTip(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = v15 | v18 | v12 | 7;
  v20 = *(_QWORD *)(v11 + 64);
  if (v20 <= 0x19)
    v21 = 25;
  else
    v21 = *(_QWORD *)(v11 + 64);
  v22 = v21 + 1;
  v23 = (((v21 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  v24 = v12 + 15;
  v25 = (v12 + 15) & ~v13;
  v26 = v15 + 8;
  v27 = *(_QWORD *)(v14 + 64) + ((v15 + 8) & ~v15);
  v28 = v21 + 1 + v25;
  if (v28 > v23)
    v23 = v28;
  if (v23 <= ((v27 + 7) & 0xFFFFFFFFFFFFFFF8) + 24)
    v23 = ((v27 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  v29 = (v20 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v23 > v29)
    v29 = v23;
  if (v29 <= *(_QWORD *)(v17 + 64) + ((v18 + 1) & (unint64_t)~v18))
    v29 = *(_QWORD *)(v17 + 64) + ((v18 + 1) & ~v18);
  if (v29 <= 0x18)
    v30 = 24;
  else
    v30 = v29;
  v31 = 8 * v30;
  v32 = (unint64_t)&a2[v19 + v10];
  if (v30 > 3)
  {
    v33 = 11;
LABEL_26:
    v34 = 8;
    goto LABEL_27;
  }
  v38 = ((1 << v31) + 1) >> v31;
  if (v38 > 0xFFF5)
  {
    v36 = 0x7FFFFFFF;
    goto LABEL_36;
  }
  v33 = v38 + 10;
  if (v38 <= 0xF5)
    goto LABEL_26;
  v34 = 16;
LABEL_27:
  v35 = (1 << v34) - v33;
  v36 = 0x7FFFFFFF;
  if (v35 <= 0x7FFFFFFF)
    v37 = 0x7FFFFFFF;
  else
    v37 = v35;
  if ((v35 & 0x80000000) == 0)
    v36 = v37;
LABEL_36:
  v39 = ((unint64_t)a1 + v19 + v10) & ~v19;
  v40 = v32 & ~v19;
  if (v30 > 3)
  {
    v41 = 11;
    goto LABEL_38;
  }
  v44 = ((1 << v31) + 1) >> v31;
  if (v44 <= 0xFFF5)
  {
    v41 = v44 + 10;
    if (v44 > 0xF5)
    {
      v42 = 16;
LABEL_39:
      v43 = (1 << v42) - v41;
      if ((v43 & 0x80000000) == 0)
        goto LABEL_45;
      goto LABEL_44;
    }
LABEL_38:
    v42 = 8;
    goto LABEL_39;
  }
LABEL_44:
  v43 = 0x7FFFFFFF;
LABEL_45:
  if (v43 == v36)
  {
    if (v30 <= 3)
    {
      v51 = ((1 << v31) + 1) >> v31;
      if (v51 > 0xFFF5)
        goto LABEL_64;
      v45 = v51 + 10;
      if (v51 > 0xF5)
      {
        v46 = 16;
LABEL_49:
        v47 = (1 << v46) - v45;
        if ((v47 & 0x80000000) == 0)
        {
          if (v30 > 3)
            goto LABEL_68;
LABEL_65:
          v52 = ((1 << v31) + 1) >> v31;
          v53 = 2;
          if (v52 > 0xFFF5)
            v53 = 4;
          if (v52 > 0xF5)
          {
LABEL_69:
            v54 = v36 - v47;
            if (v36 <= v47)
              goto LABEL_85;
            v55 = v53 + v30;
            v56 = 8 * (v53 + v30);
            if (v55 > 3)
            {
LABEL_71:
              v57 = *(unsigned __int8 *)(v40 + v55);
              if (!*(_BYTE *)(v40 + v55))
                goto LABEL_85;
              goto LABEL_78;
            }
            v58 = ((v54 + ~(-1 << v56)) >> v56) + 1;
            if (HIWORD(v58))
            {
              v57 = *(_DWORD *)(v40 + v55);
              if (!v57)
                goto LABEL_85;
            }
            else
            {
              if (v58 <= 0xFF)
              {
                if (v58 < 2)
                {
LABEL_85:
                  if (!v47)
                    goto LABEL_98;
                  if (v30 <= 3)
                  {
                    v65 = ((1 << v31) + 1) >> v31;
                    if (v65 > 0xFFF5)
                    {
                      v61 = *(_DWORD *)(v40 + v30);
                      v62 = ~v61;
                      goto LABEL_96;
                    }
                    v64 = v65 + 10;
                    if (v65 > 0xF5)
                    {
                      v67 = *(unsigned __int16 *)(v40 + v30);
                      v61 = v67 | 0xFFFF0000;
                      v62 = v67 ^ 0xFFFF;
                      v63 = 16;
                    }
                    else
                    {
                      v66 = *(unsigned __int8 *)(v40 + v30);
                      v61 = v66 | 0xFFFFFF00;
                      v62 = v66 ^ 0xFF;
                      v63 = 8;
                    }
                  }
                  else
                  {
                    v60 = *(unsigned __int8 *)(v40 + v30);
                    v61 = v60 | 0xFFFFFF00;
                    v62 = v60 ^ 0xFF;
                    v63 = 8;
                    v64 = 11;
                  }
                  v68 = (1 << v63) - v64;
                  if ((v68 & 0x80000000) == 0)
                  {
                    if (v68 <= v62)
                      goto LABEL_98;
                    goto LABEL_97;
                  }
LABEL_96:
                  if (v62 >= 0x7FFFFFFF)
                    goto LABEL_98;
LABEL_97:
                  if (!v61)
                    goto LABEL_98;
LABEL_164:
                  if (v30 > 3)
                    goto LABEL_168;
                  v104 = ((1 << v31) + 1) >> v31;
                  v105 = 2;
                  if (v104 > 0xFFF5)
                    v105 = 4;
                  if (v104 <= 0xF5)
LABEL_168:
                    v105 = 1;
                  v81 = a1;
                  memcpy((void *)v39, (const void *)v40, ((((((v105 + v30) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
                  if (v30 > 3)
                    goto LABEL_301;
                  goto LABEL_298;
                }
                goto LABEL_71;
              }
              v57 = *(unsigned __int16 *)(v40 + v55);
              if (!*(_WORD *)(v40 + v55))
                goto LABEL_85;
            }
LABEL_78:
            v59 = (v57 - 1) << v56;
            if (v55 > 3)
              v59 = 0;
            if ((_DWORD)v55)
            {
              if (v55 > 3)
                LODWORD(v55) = 4;
              __asm { BR              X17 }
            }
            if (v47 + v59 != -1)
              goto LABEL_164;
            goto LABEL_98;
          }
LABEL_68:
          v53 = 1;
          goto LABEL_69;
        }
LABEL_64:
        v47 = 0x7FFFFFFF;
        if (v30 > 3)
          goto LABEL_68;
        goto LABEL_65;
      }
    }
    else
    {
      v45 = 11;
    }
    v46 = 8;
    goto LABEL_49;
  }
  if (v30 > 3)
    goto LABEL_56;
  v48 = ((1 << v31) + 1) >> v31;
  v49 = 2;
  if (v48 > 0xFFF5)
    v49 = 4;
  if (v48 <= 0xF5)
LABEL_56:
    v49 = 1;
  v50 = *(_QWORD *)((((v30 + v40 + v49) & 0xFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8);
  if (v50 >= 0xFFFFFFFF)
    LODWORD(v50) = -1;
  if ((_DWORD)v50 != -1)
    goto LABEL_164;
LABEL_98:
  if (v30 > 3)
  {
LABEL_99:
    v69 = *(unsigned __int8 *)(v40 + v30);
    goto LABEL_104;
  }
  v70 = ((1 << v31) + 1) >> v31;
  if (v70 > 0xFFF5)
  {
    v69 = *(_DWORD *)(v40 + v30);
  }
  else
  {
    if (v70 <= 0xF5)
      goto LABEL_99;
    v69 = *(unsigned __int16 *)(v40 + v30);
  }
LABEL_104:
  if (v69 >= 0xA)
  {
    if (v30 <= 3)
      v71 = v30;
    else
      v71 = 4;
    __asm { BR              X17 }
  }
  v72 = ~v13;
  switch(v69)
  {
    case 0u:
      switch(*(_BYTE *)(v40 + v21))
      {
        case 0:
          *(_BYTE *)v39 = *(_BYTE *)v40;
          *(_BYTE *)(v39 + v21) = 0;
          goto LABEL_209;
        case 1:
          v120 = *(void **)v40;
          *(_QWORD *)v39 = *(_QWORD *)v40;
          v121 = 1;
          goto LABEL_208;
        case 2:
          v122 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 16);
          v123 = v21;
          v124 = v21 + 1;
          v122(v39, v40, v243);
          v22 = v124;
          *(_BYTE *)(v39 + v123) = 2;
          goto LABEL_209;
        case 3:
          v125 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 16);
          v126 = v21;
          v127 = v21 + 1;
          v125(v39, v40, v243);
          v22 = v127;
          *(_BYTE *)(v39 + v126) = 3;
          goto LABEL_209;
        case 4:
          v128 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 16);
          v129 = v21;
          v130 = v21 + 1;
          v128(v39, v40, v243);
          v22 = v130;
          *(_BYTE *)(v39 + v129) = 4;
          goto LABEL_209;
        case 5:
          v131 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 16);
          v132 = v21;
          v133 = v21 + 1;
          v131(v39, v40, v243);
          v22 = v133;
          *(_BYTE *)(v39 + v132) = 5;
          goto LABEL_209;
        case 6:
          v150 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 16);
          v151 = v21;
          v152 = v21 + 1;
          v150(v39, v40, v243);
          v22 = v152;
          *(_BYTE *)(v39 + v151) = 6;
          goto LABEL_209;
        case 7:
          v134 = *(_OWORD *)v40;
          *(_OWORD *)(v39 + 9) = *(_OWORD *)(v40 + 9);
          *(_OWORD *)v39 = v134;
          *(_BYTE *)(v39 + v21) = 7;
          goto LABEL_209;
        case 8:
          v120 = *(void **)v40;
          *(_QWORD *)v39 = *(_QWORD *)v40;
          v121 = 8;
          goto LABEL_208;
        case 9:
          v120 = *(void **)v40;
          *(_QWORD *)v39 = *(_QWORD *)v40;
          v121 = 9;
LABEL_208:
          *(_BYTE *)(v39 + v21) = v121;
          v153 = v21 + 1;
          v154 = v120;
          v22 = v153;
LABEL_209:
          v155 = ((v39 | 7) + v22) & 0xFFFFFFFFFFFFFFF8;
          v156 = ((v40 | 7) + v22) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v156 + 8) < 0xFFFFFFFFuLL)
          {
            v166 = *(_OWORD *)v156;
            v167 = *(_OWORD *)(v156 + 16);
            v168 = *(_OWORD *)(v156 + 48);
            *(_OWORD *)(v155 + 32) = *(_OWORD *)(v156 + 32);
            *(_OWORD *)(v155 + 48) = v168;
            *(_OWORD *)v155 = v166;
            *(_OWORD *)(v155 + 16) = v167;
            v169 = *(_OWORD *)(v156 + 64);
            v170 = *(_OWORD *)(v156 + 80);
            v171 = *(_OWORD *)(v156 + 96);
            *(_OWORD *)(v155 + 106) = *(_OWORD *)(v156 + 106);
            *(_OWORD *)(v155 + 80) = v170;
            *(_OWORD *)(v155 + 96) = v171;
            *(_OWORD *)(v155 + 64) = v169;
            v81 = a1;
          }
          else
          {
            *(_QWORD *)v155 = *(_QWORD *)v156;
            v157 = *(_QWORD *)(v156 + 8);
            *(_QWORD *)(v155 + 8) = v157;
            v158 = *(void **)(v156 + 16);
            v159 = *(_QWORD *)(v156 + 24);
            v160 = *(_QWORD *)(v156 + 32);
            v161 = *(_QWORD *)(v156 + 40);
            v234 = *(_QWORD *)(v156 + 48);
            v244 = *(_QWORD *)(v156 + 56);
            v239 = *(_BYTE *)(v156 + 64);
            swift_bridgeObjectRetain(v157);
            sub_10003E1F0(v158, v159, v160, v161, v234, v244, v239);
            *(_QWORD *)(v155 + 16) = v158;
            *(_QWORD *)(v155 + 24) = v159;
            *(_QWORD *)(v155 + 32) = v160;
            *(_QWORD *)(v155 + 40) = v161;
            *(_QWORD *)(v155 + 48) = v234;
            *(_QWORD *)(v155 + 56) = v244;
            *(_BYTE *)(v155 + 64) = v239;
            *(_BYTE *)(v155 + 65) = *(_BYTE *)(v156 + 65);
            *(_BYTE *)(v155 + 66) = *(_BYTE *)(v156 + 66);
            *(_BYTE *)(v155 + 67) = *(_BYTE *)(v156 + 67);
            *(_BYTE *)(v155 + 68) = *(_BYTE *)(v156 + 68);
            v162 = *(unsigned __int8 *)(v156 + 120);
            if (v162 == 255)
            {
              v163 = *(_OWORD *)(v156 + 72);
              v164 = *(_OWORD *)(v156 + 88);
              v165 = *(_OWORD *)(v156 + 104);
              *(_BYTE *)(v155 + 120) = *(_BYTE *)(v156 + 120);
              *(_OWORD *)(v155 + 88) = v164;
              *(_OWORD *)(v155 + 104) = v165;
              *(_OWORD *)(v155 + 72) = v163;
            }
            else
            {
              v245 = v162 & 1;
              v172 = *(void **)(v156 + 72);
              v173 = *(_QWORD *)(v156 + 80);
              v174 = *(_QWORD *)(v156 + 88);
              v175 = *(_QWORD *)(v156 + 112);
              v235 = *(_QWORD *)(v156 + 104);
              v240 = *(_QWORD *)(v156 + 96);
              sub_10002B764(v172, v173, v174, v240, v235, v175, v162 & 1);
              *(_QWORD *)(v155 + 72) = v172;
              *(_QWORD *)(v155 + 80) = v173;
              *(_QWORD *)(v155 + 88) = v174;
              *(_QWORD *)(v155 + 96) = v240;
              *(_QWORD *)(v155 + 104) = v235;
              *(_QWORD *)(v155 + 112) = v175;
              *(_BYTE *)(v155 + 120) = v245;
            }
            v81 = a1;
            *(_BYTE *)(v155 + 121) = *(_BYTE *)(v156 + 121);
          }
          *(_BYTE *)(v155 + 122) = *(_BYTE *)(v156 + 122);
          *(_BYTE *)(v155 + 123) = *(_BYTE *)(v156 + 123);
          *(_BYTE *)(v155 + 124) = *(_BYTE *)(v156 + 124);
          *(_BYTE *)(v155 + 125) = *(_BYTE *)(v156 + 125);
          *(_BYTE *)(v155 + 126) = *(_BYTE *)(v156 + 126);
          v176 = *(void **)((v156 + 134) & 0xFFFFFFFFFFFFF8);
          *(_QWORD *)((v155 + 134) & 0xFFFFFFFFFFFFF8) = v176;
          v177 = v176;
          if (v30 > 3)
            goto LABEL_216;
          v103 = ((1 << v31) + 1) >> v31;
          if (v103 > 0xFFF5)
          {
            *(_DWORD *)(v39 + v30) = 0;
            goto LABEL_290;
          }
          if (v103 > 0xF5)
          {
            *(_WORD *)(v39 + v30) = 0;
            goto LABEL_290;
          }
LABEL_216:
          *(_BYTE *)(v39 + v30) = 0;
          if (v30 <= 3)
            goto LABEL_281;
          break;
        default:
          if (v21 <= 3)
            v73 = v21;
          else
            v73 = 4;
          __asm { BR              X12 }
          return result;
      }
      goto LABEL_284;
    case 1u:
      switch(*(_BYTE *)(v40 + v21))
      {
        case 0:
          *(_BYTE *)v39 = *(_BYTE *)v40;
          *(_BYTE *)(v39 + v21) = 0;
          goto LABEL_225;
        case 1:
          v135 = *(void **)v40;
          *(_QWORD *)v39 = *(_QWORD *)v40;
          v136 = 1;
          goto LABEL_224;
        case 2:
          v137 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 16);
          v138 = v21;
          v139 = v21 + 1;
          v137(v39, v40, v243);
          v22 = v139;
          *(_BYTE *)(v39 + v138) = 2;
          goto LABEL_225;
        case 3:
          v140 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 16);
          v141 = v21;
          v142 = v21 + 1;
          v140(v39, v40, v243);
          v22 = v142;
          *(_BYTE *)(v39 + v141) = 3;
          goto LABEL_225;
        case 4:
          v143 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 16);
          v144 = v21;
          v145 = v21 + 1;
          v143(v39, v40, v243);
          v22 = v145;
          *(_BYTE *)(v39 + v144) = 4;
          goto LABEL_225;
        case 5:
          v146 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 16);
          v147 = v21;
          v148 = v21 + 1;
          v146(v39, v40, v243);
          v22 = v148;
          *(_BYTE *)(v39 + v147) = 5;
          goto LABEL_225;
        case 6:
          v178 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 16);
          v179 = v21;
          v180 = v21 + 1;
          v178(v39, v40, v243);
          v22 = v180;
          *(_BYTE *)(v39 + v179) = 6;
          goto LABEL_225;
        case 7:
          v149 = *(_OWORD *)v40;
          *(_OWORD *)(v39 + 9) = *(_OWORD *)(v40 + 9);
          *(_OWORD *)v39 = v149;
          *(_BYTE *)(v39 + v21) = 7;
          goto LABEL_225;
        case 8:
          v135 = *(void **)v40;
          *(_QWORD *)v39 = *(_QWORD *)v40;
          v136 = 8;
          goto LABEL_224;
        case 9:
          v135 = *(void **)v40;
          *(_QWORD *)v39 = *(_QWORD *)v40;
          v136 = 9;
LABEL_224:
          *(_BYTE *)(v39 + v21) = v136;
          v181 = v21 + 1;
          v182 = v135;
          v22 = v181;
LABEL_225:
          v183 = ((v39 | 7) + v22) & 0xFFFFFFFFFFFFFFF8;
          v184 = ((v40 | 7) + v22) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v184 + 8) < 0xFFFFFFFFuLL)
          {
            v194 = *(_OWORD *)v184;
            v195 = *(_OWORD *)(v184 + 16);
            v196 = *(_OWORD *)(v184 + 48);
            *(_OWORD *)(v183 + 32) = *(_OWORD *)(v184 + 32);
            *(_OWORD *)(v183 + 48) = v196;
            *(_OWORD *)v183 = v194;
            *(_OWORD *)(v183 + 16) = v195;
            v197 = *(_OWORD *)(v184 + 64);
            v198 = *(_OWORD *)(v184 + 80);
            v199 = *(_OWORD *)(v184 + 96);
            *(_OWORD *)(v183 + 106) = *(_OWORD *)(v184 + 106);
            *(_OWORD *)(v183 + 80) = v198;
            *(_OWORD *)(v183 + 96) = v199;
            *(_OWORD *)(v183 + 64) = v197;
            v81 = a1;
          }
          else
          {
            *(_QWORD *)v183 = *(_QWORD *)v184;
            v185 = *(_QWORD *)(v184 + 8);
            *(_QWORD *)(v183 + 8) = v185;
            v186 = *(void **)(v184 + 16);
            v187 = *(_QWORD *)(v184 + 24);
            v188 = *(_QWORD *)(v184 + 32);
            v189 = *(_QWORD *)(v184 + 40);
            v236 = *(_QWORD *)(v184 + 48);
            v246 = *(_QWORD *)(v184 + 56);
            v241 = *(_BYTE *)(v184 + 64);
            swift_bridgeObjectRetain(v185);
            sub_10003E1F0(v186, v187, v188, v189, v236, v246, v241);
            *(_QWORD *)(v183 + 16) = v186;
            *(_QWORD *)(v183 + 24) = v187;
            *(_QWORD *)(v183 + 32) = v188;
            *(_QWORD *)(v183 + 40) = v189;
            *(_QWORD *)(v183 + 48) = v236;
            *(_QWORD *)(v183 + 56) = v246;
            *(_BYTE *)(v183 + 64) = v241;
            *(_BYTE *)(v183 + 65) = *(_BYTE *)(v184 + 65);
            *(_BYTE *)(v183 + 66) = *(_BYTE *)(v184 + 66);
            *(_BYTE *)(v183 + 67) = *(_BYTE *)(v184 + 67);
            *(_BYTE *)(v183 + 68) = *(_BYTE *)(v184 + 68);
            v190 = *(unsigned __int8 *)(v184 + 120);
            if (v190 == 255)
            {
              v191 = *(_OWORD *)(v184 + 72);
              v192 = *(_OWORD *)(v184 + 88);
              v193 = *(_OWORD *)(v184 + 104);
              *(_BYTE *)(v183 + 120) = *(_BYTE *)(v184 + 120);
              *(_OWORD *)(v183 + 88) = v192;
              *(_OWORD *)(v183 + 104) = v193;
              *(_OWORD *)(v183 + 72) = v191;
            }
            else
            {
              v247 = v190 & 1;
              v200 = *(void **)(v184 + 72);
              v201 = *(_QWORD *)(v184 + 80);
              v202 = *(_QWORD *)(v184 + 88);
              v203 = *(_QWORD *)(v184 + 112);
              v237 = *(_QWORD *)(v184 + 104);
              v242 = *(_QWORD *)(v184 + 96);
              sub_10002B764(v200, v201, v202, v242, v237, v203, v190 & 1);
              *(_QWORD *)(v183 + 72) = v200;
              *(_QWORD *)(v183 + 80) = v201;
              *(_QWORD *)(v183 + 88) = v202;
              *(_QWORD *)(v183 + 96) = v242;
              *(_QWORD *)(v183 + 104) = v237;
              *(_QWORD *)(v183 + 112) = v203;
              *(_BYTE *)(v183 + 120) = v247;
            }
            v81 = a1;
            *(_BYTE *)(v183 + 121) = *(_BYTE *)(v184 + 121);
          }
          *(_BYTE *)(v183 + 122) = *(_BYTE *)(v184 + 122);
          *(_BYTE *)(v183 + 123) = *(_BYTE *)(v184 + 123);
          *(_BYTE *)(v183 + 124) = *(_BYTE *)(v184 + 124);
          *(_BYTE *)(v183 + 125) = *(_BYTE *)(v184 + 125);
          *(_BYTE *)(v183 + 126) = *(_BYTE *)(v184 + 126);
          v204 = *(void **)((v184 + 134) & 0xFFFFFFFFFFFFF8);
          *(_QWORD *)((v183 + 134) & 0xFFFFFFFFFFFFF8) = v204;
          v205 = v204;
          if (v30 > 3)
            goto LABEL_232;
          v119 = 1;
          v103 = ((1 << v31) + 1) >> v31;
          if (v103 > 0xFFF5)
            goto LABEL_289;
          if (v103 <= 0xF5)
          {
LABEL_232:
            v96 = 1;
            goto LABEL_280;
          }
          *(_WORD *)(v39 + v30) = 1;
          break;
        default:
          if (v21 <= 3)
            v74 = v21;
          else
            v74 = 4;
          __asm { BR              X12 }
          return result;
      }
      goto LABEL_290;
    case 2u:
      v75 = *(void **)v40;
      *(_QWORD *)v39 = *(_QWORD *)v40;
      v76 = (char *)((v24 + v39) & v72);
      v77 = (unsigned __int8 *)((v24 + v40) & v72);
      v78 = v21;
      v79 = v77[v21];
      v80 = v75;
      v81 = a1;
      switch(v79)
      {
        case 0:
          *v76 = *v77;
          v76[v78] = 0;
          break;
        case 1:
          v206 = *(void **)v77;
          *(_QWORD *)v76 = *(_QWORD *)v77;
          v207 = 1;
          goto LABEL_245;
        case 2:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v11 + 16))(v76, v77, v243);
          v76[v78] = 2;
          break;
        case 3:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v11 + 16))(v76, v77, v243);
          v76[v78] = 3;
          break;
        case 4:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v11 + 16))(v76, v77, v243);
          v76[v78] = 4;
          break;
        case 5:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v11 + 16))(v76, v77, v243);
          v76[v78] = 5;
          break;
        case 6:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v11 + 16))(v76, v77, v243);
          v76[v78] = 6;
          break;
        case 7:
          v208 = *(_OWORD *)v77;
          *(_OWORD *)(v76 + 9) = *(_OWORD *)(v77 + 9);
          *(_OWORD *)v76 = v208;
          v76[v78] = 7;
          break;
        case 8:
          v206 = *(void **)v77;
          *(_QWORD *)v76 = *(_QWORD *)v77;
          v207 = 8;
          goto LABEL_245;
        case 9:
          v206 = *(void **)v77;
          *(_QWORD *)v76 = *(_QWORD *)v77;
          v207 = 9;
LABEL_245:
          v76[v78] = v207;
          v209 = v206;
          break;
        default:
          memcpy(v76, v77, (size_t)a1);
          v81 = a1;
          break;
      }
      if (v30 > 3)
        goto LABEL_247;
      v103 = ((1 << v31) + 1) >> v31;
      if (v103 > 0xFFF5)
      {
        v119 = 2;
        goto LABEL_289;
      }
      if (v103 <= 0xF5)
      {
LABEL_247:
        v96 = 2;
        goto LABEL_280;
      }
      *(_WORD *)(v39 + v30) = 2;
      goto LABEL_290;
    case 3u:
      v82 = *(void **)v40;
      *(_QWORD *)v39 = *(_QWORD *)v40;
      v83 = (char *)((v24 + v39) & v72);
      v84 = (unsigned __int8 *)((v24 + v40) & v72);
      v85 = v21;
      v86 = v84[v21];
      v87 = v82;
      v81 = a1;
      switch(v86)
      {
        case 0:
          *v83 = *v84;
          v83[v85] = 0;
          break;
        case 1:
          v210 = *(void **)v84;
          *(_QWORD *)v83 = *(_QWORD *)v84;
          v211 = 1;
          goto LABEL_261;
        case 2:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v11 + 16))(v83, v84, v243);
          v83[v85] = 2;
          break;
        case 3:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v11 + 16))(v83, v84, v243);
          v83[v85] = 3;
          break;
        case 4:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v11 + 16))(v83, v84, v243);
          v83[v85] = 4;
          break;
        case 5:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v11 + 16))(v83, v84, v243);
          v83[v85] = 5;
          break;
        case 6:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v11 + 16))(v83, v84, v243);
          v83[v85] = 6;
          break;
        case 7:
          v212 = *(_OWORD *)v84;
          *(_OWORD *)(v83 + 9) = *(_OWORD *)(v84 + 9);
          *(_OWORD *)v83 = v212;
          v83[v85] = 7;
          break;
        case 8:
          v210 = *(void **)v84;
          *(_QWORD *)v83 = *(_QWORD *)v84;
          v211 = 8;
          goto LABEL_261;
        case 9:
          v210 = *(void **)v84;
          *(_QWORD *)v83 = *(_QWORD *)v84;
          v211 = 9;
LABEL_261:
          v83[v85] = v211;
          v213 = v210;
          break;
        default:
          memcpy(v83, v84, (size_t)a1);
          v81 = a1;
          break;
      }
      if (v30 > 3)
        goto LABEL_263;
      v103 = ((1 << v31) + 1) >> v31;
      if (v103 > 0xFFF5)
      {
        v119 = 3;
        goto LABEL_289;
      }
      if (v103 <= 0xF5)
      {
LABEL_263:
        v96 = 3;
        goto LABEL_280;
      }
      *(_WORD *)(v39 + v30) = 3;
      goto LABEL_290;
    case 4u:
      v88 = *(void **)v40;
      *(_QWORD *)v39 = *(_QWORD *)v40;
      v89 = (char *)((v24 + v39) & v72);
      v90 = (unsigned __int8 *)((v24 + v40) & v72);
      v91 = v21;
      v92 = v90[v21];
      v93 = v88;
      v81 = a1;
      switch(v92)
      {
        case 0:
          *v89 = *v90;
          v89[v91] = 0;
          break;
        case 1:
          v214 = *(void **)v90;
          *(_QWORD *)v89 = *(_QWORD *)v90;
          v215 = 1;
          goto LABEL_277;
        case 2:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v11 + 16))(v89, v90, v243);
          v89[v91] = 2;
          break;
        case 3:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v11 + 16))(v89, v90, v243);
          v89[v91] = 3;
          break;
        case 4:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v11 + 16))(v89, v90, v243);
          v89[v91] = 4;
          break;
        case 5:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v11 + 16))(v89, v90, v243);
          v89[v91] = 5;
          break;
        case 6:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v11 + 16))(v89, v90, v243);
          v89[v91] = 6;
          break;
        case 7:
          v216 = *(_OWORD *)v90;
          *(_OWORD *)(v89 + 9) = *(_OWORD *)(v90 + 9);
          *(_OWORD *)v89 = v216;
          v89[v91] = 7;
          break;
        case 8:
          v214 = *(void **)v90;
          *(_QWORD *)v89 = *(_QWORD *)v90;
          v215 = 8;
          goto LABEL_277;
        case 9:
          v214 = *(void **)v90;
          *(_QWORD *)v89 = *(_QWORD *)v90;
          v215 = 9;
LABEL_277:
          v89[v91] = v215;
          v217 = v214;
          break;
        default:
          memcpy(v89, v90, (size_t)a1);
          v81 = a1;
          break;
      }
      if (v30 > 3)
        goto LABEL_279;
      v103 = ((1 << v31) + 1) >> v31;
      if (v103 > 0xFFF5)
      {
        v119 = 4;
        goto LABEL_289;
      }
      if (v103 <= 0xF5)
      {
LABEL_279:
        v96 = 4;
        goto LABEL_280;
      }
      *(_WORD *)(v39 + v30) = 4;
      goto LABEL_290;
    case 5u:
      *(_QWORD *)v39 = *(_QWORD *)v40;
      *(_BYTE *)(v39 + 8) = *(_BYTE *)(v40 + 8);
      *(_BYTE *)(v39 + 9) = *(_BYTE *)(v40 + 9);
      *(_BYTE *)(v39 + 10) = *(_BYTE *)(v40 + 10);
      v94 = *(void **)(v40 + 16);
      *(_QWORD *)(v39 + 16) = v94;
      v95 = v94;
      v81 = a1;
      if (v30 > 3)
        goto LABEL_125;
      v103 = ((1 << v31) + 1) >> v31;
      if (v103 > 0xFFF5)
      {
        v119 = 5;
        goto LABEL_289;
      }
      if (v103 <= 0xF5)
      {
LABEL_125:
        v96 = 5;
        goto LABEL_280;
      }
      *(_WORD *)(v39 + v30) = 5;
      goto LABEL_290;
    case 6u:
      v101 = *(void **)v40;
      *(_QWORD *)v39 = *(_QWORD *)v40;
      v102 = v101;
      v81 = a1;
      if (v30 > 3)
        goto LABEL_143;
      v103 = ((1 << v31) + 1) >> v31;
      if (v103 > 0xFFF5)
      {
        v119 = 6;
        goto LABEL_289;
      }
      if (v103 <= 0xF5)
      {
LABEL_143:
        v96 = 6;
        goto LABEL_280;
      }
      *(_WORD *)(v39 + v30) = 6;
      goto LABEL_290;
    case 7u:
      v97 = ~v15;
      if ((*(_DWORD *)(v14 + 84) & 0x80000000) != 0)
      {
        v106 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v14 + 48))((v40 + v15 + 8) & v97, *(unsigned int *)(v14 + 84), v238);
        v26 = v15 + 8;
        if (v106)
        {
LABEL_130:
          memcpy((void *)v39, (const void *)v40, v27);
          goto LABEL_173;
        }
      }
      else
      {
        v98 = *(_QWORD *)v40;
        if (*(_QWORD *)v40 >= 0xFFFFFFFFuLL)
          LODWORD(v98) = -1;
        if ((_DWORD)v98 != -1)
          goto LABEL_130;
      }
      v107 = *(_QWORD *)v40;
      *(_QWORD *)v39 = *(_QWORD *)v40;
      v108 = (_BYTE *)(v40 + v15);
      v109 = (v26 + v39) & v97;
      v110 = (unint64_t)(v108 + 8) & v97;
      v111 = *(void (**)(unint64_t, uint64_t, uint64_t, __n128))(v14 + 16);
      v112 = swift_bridgeObjectRetain(v107);
      v111(v109, v110, v238, v112);
LABEL_173:
      v81 = a1;
      v113 = ((v39 | 7) + v27) & 0xFFFFFFFFFFFFFFF8;
      v114 = ((v40 | 7) + v27) & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v114 + 8) < 0xFFFFFFFFuLL)
      {
        v118 = *(_OWORD *)v114;
        *(_QWORD *)(v113 + 16) = *(_QWORD *)(v114 + 16);
        *(_OWORD *)v113 = v118;
        if (v30 > 3)
        {
LABEL_179:
          v96 = 7;
          goto LABEL_280;
        }
      }
      else
      {
        *(_QWORD *)v113 = *(_QWORD *)v114;
        v115 = *(_QWORD *)(v114 + 8);
        *(_QWORD *)(v113 + 8) = v115;
        v116 = *(void **)(v114 + 16);
        *(_QWORD *)(v113 + 16) = v116;
        swift_bridgeObjectRetain(v115);
        v117 = v116;
        if (v30 > 3)
          goto LABEL_179;
      }
      v103 = ((1 << v31) + 1) >> v31;
      if (v103 > 0xFFF5)
      {
        v119 = 7;
        goto LABEL_289;
      }
      if (v103 <= 0xF5)
        goto LABEL_179;
      *(_WORD *)(v39 + v30) = 7;
      goto LABEL_290;
    case 8u:
      if (*(_DWORD *)(v11 + 84) >= 0xFDu)
      {
        v81 = a1;
        if (!(*(unsigned int (**)(uint64_t))(v11 + 48))(v40))
          goto LABEL_158;
LABEL_157:
        memcpy((void *)v39, (const void *)v40, v20 + 1);
        goto LABEL_159;
      }
      v81 = a1;
      if (*(unsigned __int8 *)(v40 + v20) >= 3u)
        goto LABEL_157;
LABEL_158:
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 16))(v39, v40, v243);
      *(_BYTE *)(v39 + v20) = *(_BYTE *)(v40 + v20);
LABEL_159:
      *(_QWORD *)(((v39 | 7) + v20 + 1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v40 | 7) + v20 + 1) & 0xFFFFFFFFFFFFF8);
      if (v30 <= 3)
      {
        v103 = ((1 << v31) + 1) >> v31;
        if (v103 > 0xFFF5)
        {
          v119 = 8;
LABEL_289:
          *(_DWORD *)(v39 + v30) = v119;
        }
        else
        {
          if (v103 <= 0xF5)
            goto LABEL_162;
          *(_WORD *)(v39 + v30) = 8;
        }
LABEL_290:
        v220 = v103 > 0xFFF5;
        v219 = 2;
        if (v220)
          v219 = 4;
        goto LABEL_292;
      }
LABEL_162:
      v96 = 8;
LABEL_280:
      *(_BYTE *)(v39 + v30) = v96;
      if (v30 > 3)
        goto LABEL_284;
LABEL_281:
      v218 = ((1 << v31) + 1) >> v31;
      v219 = 2;
      if (v218 > 0xFFF5)
        v219 = 4;
      if (v218 <= 0xF5)
LABEL_284:
        v219 = 1;
LABEL_292:
      v221 = v219 + v30;
      v222 = v221 + v39;
      v223 = v221 + v40;
      *(_BYTE *)v222 = *(_BYTE *)v223;
      v222 &= 0xFFFFFFFFFFFFFFF8;
      v223 &= 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)(v222 + 8) = *(_QWORD *)(v223 + 8);
      v224 = *(_QWORD *)(v223 + 16);
      *(_QWORD *)(v222 + 16) = v224;
      v225 = (uint64_t *)((v223 + 31) & 0xFFFFFFFFFFFFF8);
      v226 = *v225;
      *(_QWORD *)((v222 + 31) & 0xFFFFFFFFFFFFF8) = *v225;
      swift_bridgeObjectRetain(v224);
      swift_bridgeObjectRetain(v226);
      if (v30 > 3)
        goto LABEL_296;
      v227 = ((1 << v31) + 1) >> v31;
      v228 = 2;
      if (v227 > 0xFFF5)
        v228 = 4;
      if (v227 <= 0xF5)
LABEL_296:
        v228 = 1;
      v229 = ((((v228 + v30) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
      *(_QWORD *)((v39 + v229) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v40 + v229) & 0xFFFFFFFFFFFFF8);
      if (v30 > 3)
        goto LABEL_301;
LABEL_298:
      v230 = ((1 << v31) + 1) >> v31;
      v231 = 2;
      if (v230 > 0xFFF5)
        v231 = 4;
      if (v230 <= 0xF5)
LABEL_301:
        v231 = 1;
      v232 = ((((((v231 + v30) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
      *(_BYTE *)(v232 + v39) = *(_BYTE *)(v232 + v40);
      return v81;
    case 9u:
      *(_BYTE *)v39 = *(_BYTE *)v40;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v17 + 16))((v18 + 1 + v39) & ~v18, (v18 + 1 + v40) & ~v18, v16);
      v81 = a1;
      if (v30 > 3)
        goto LABEL_132;
      v103 = ((1 << v31) + 1) >> v31;
      if (v103 > 0xFFF5)
      {
        v119 = 9;
        goto LABEL_289;
      }
      if (v103 <= 0xF5)
      {
LABEL_132:
        v96 = 9;
        goto LABEL_280;
      }
      *(_WORD *)(v39 + v30) = 9;
      goto LABEL_290;
    default:
      if (v30 > 3)
        goto LABEL_137;
      v99 = ((1 << v31) + 1) >> v31;
      v100 = 2;
      if (v99 > 0xFFF5)
        v100 = 4;
      if (v99 <= 0xF5)
LABEL_137:
        v100 = 1;
      v81 = a1;
      memcpy((void *)v39, (const void *)v40, v100 + v30);
      if (v30 > 3)
        goto LABEL_284;
      goto LABEL_281;
  }
}

void *sub_1004DFBC8(void *a1, char *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  char v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  size_t v40;
  int v41;
  char v42;
  int v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  char v50;
  unsigned int v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  unsigned int v55;
  unsigned int v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  char v60;
  int v61;
  unsigned int v62;
  int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  char v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  int v72;
  unsigned int v73;
  char v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  int v78;
  unsigned int v79;
  char v80;
  int v81;
  int v82;
  unsigned int v83;
  uint64_t v84;
  unint64_t v85;
  unsigned int v86;
  char v87;
  unsigned int v88;
  unsigned int v89;
  uint64_t v90;
  unsigned int v91;
  uint64_t v92;
  char v93;
  int v94;
  unsigned int v95;
  int v96;
  int v97;
  int v98;
  unsigned int v99;
  char v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  int v104;
  unsigned int v105;
  char v106;
  int v107;
  int v108;
  unsigned int v109;
  uint64_t v110;
  unint64_t v111;
  unsigned int v112;
  char v113;
  unsigned int v114;
  unsigned int v115;
  uint64_t v116;
  unsigned int v117;
  uint64_t v118;
  char v119;
  int v120;
  unsigned int v121;
  int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  char v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  unsigned int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  size_t v136;
  id *v137;
  id v138;
  id v139;
  int v140;
  unint64_t v141;
  void (*v142)(unint64_t, uint64_t);
  uint64_t v143;
  uint64_t v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  char v149;
  int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  unsigned int v154;
  unsigned int v155;
  uint64_t v156;
  uint64_t v157;
  unsigned int v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  char *v162;
  unsigned __int8 *v163;
  int v164;
  id v165;
  void *v166;
  char *v167;
  unsigned __int8 *v168;
  int v169;
  id v170;
  void *v171;
  char *v172;
  unsigned __int8 *v173;
  int v174;
  id v175;
  void *v176;
  id v177;
  unsigned int v178;
  char v179;
  void *v180;
  id v181;
  size_t v182;
  uint64_t v183;
  uint64_t v184;
  int v185;
  unsigned int v186;
  int v187;
  int v188;
  unsigned int v189;
  unsigned int v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  void **v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  id v201;
  uint64_t v202;
  id v203;
  int v204;
  unsigned int v205;
  unsigned int v206;
  size_t v207;
  unsigned int v208;
  size_t v209;
  __n128 v210;
  unint64_t v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  void (*v216)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v217;
  unint64_t v218;
  unint64_t v219;
  uint64_t v220;
  void *v221;
  id v222;
  __int128 v223;
  uint64_t v224;
  unsigned int v225;
  uint64_t v226;
  uint64_t v227;
  size_t v228;
  size_t v229;
  __n128 v230;
  unint64_t v231;
  unint64_t v232;
  __int16 v233;
  uint64_t v234;
  unint64_t v235;
  unint64_t v236;
  int v237;
  unsigned int v238;
  uint64_t v239;
  unint64_t v240;
  unsigned int v241;
  uint64_t v242;
  void *v243;
  char v244;
  __int128 v245;
  id v246;
  unint64_t v247;
  unint64_t v248;
  uint64_t v249;
  void *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  int v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;
  __int128 v264;
  void *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  void *v270;
  id v271;
  void *v272;
  char v273;
  __int128 v274;
  id v275;
  unint64_t v276;
  unint64_t v277;
  uint64_t v278;
  void *v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  int v284;
  __int128 v285;
  __int128 v286;
  __int128 v287;
  __int128 v288;
  __int128 v289;
  __int128 v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  void *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  void *v299;
  id v300;
  unint64_t v301;
  unint64_t v302;
  int v303;
  unsigned int v304;
  unsigned int v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  void *v309;
  char *v310;
  unsigned __int8 *v311;
  int v312;
  id v313;
  void *v314;
  char *v315;
  unsigned __int8 *v316;
  int v317;
  id v318;
  void *v319;
  char *v320;
  unsigned __int8 *v321;
  int v322;
  id v323;
  void *v324;
  id v325;
  char v326;
  uint64_t v327;
  uint64_t v328;
  int v329;
  unsigned int v330;
  uint64_t v331;
  void *v332;
  id v333;
  unsigned int v334;
  size_t v335;
  unsigned int v336;
  unsigned int v337;
  size_t v338;
  size_t v339;
  size_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  void (*v344)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v345;
  unint64_t v346;
  unint64_t v347;
  uint64_t v348;
  void *v349;
  id v350;
  __int128 v351;
  int v352;
  void *v353;
  char v354;
  __int128 v355;
  void *v356;
  char v357;
  __int128 v358;
  id v359;
  unint64_t v360;
  unint64_t v361;
  uint64_t v362;
  void *v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  int v368;
  __int128 v369;
  __int128 v370;
  __int128 v371;
  __int128 v372;
  __int128 v373;
  __int128 v374;
  __int128 v375;
  __int128 v376;
  __int128 v377;
  void *v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  void *v383;
  id v384;
  id v385;
  unint64_t v386;
  unint64_t v387;
  uint64_t v388;
  void *v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  int v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  __int128 v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  void *v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  void *v409;
  id v410;
  void *v411;
  char v412;
  __int128 v413;
  id v414;
  void *v415;
  char v416;
  __int128 v417;
  id v418;
  void *v419;
  char v420;
  __int128 v421;
  id v422;
  unsigned int v423;
  uint64_t v424;
  BOOL v425;
  uint64_t v426;
  unint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t *v430;
  uint64_t v431;
  void *v432;
  char v433;
  __int128 v434;
  id v435;
  void *v436;
  char v437;
  __int128 v438;
  id v439;
  void *v440;
  char v441;
  __int128 v442;
  id v443;
  unsigned int v444;
  uint64_t v445;
  uint64_t v446;
  unint64_t v447;
  unint64_t v448;
  unint64_t v449;
  unint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t *v453;
  uint64_t *v454;
  uint64_t v455;
  uint64_t v456;
  unsigned int v457;
  uint64_t v458;
  unint64_t v459;
  unsigned int v460;
  uint64_t v461;
  unint64_t v462;
  void *result;
  size_t v464;
  size_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  size_t __n;
  uint64_t v473;
  unsigned int v474;
  uint64_t v475;
  unsigned int v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  unsigned __int8 v490;
  char v491;
  unsigned __int8 v492;
  char v493;
  unsigned __int8 v494;
  char v495;
  unsigned __int8 v496;
  char v497;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (v7)
  {
    if (v8)
    {
      if (*(_DWORD *)(v5 + 84))
        v9 = *(_QWORD *)(v5 + 64);
      else
        v9 = *(_QWORD *)(v5 + 64) + 1;
      v10 = a1;
LABEL_12:
      memcpy(v10, a2, v9);
      goto LABEL_15;
    }
    (*(void (**)(void *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  else
  {
    if (v8)
    {
      (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
      if (*(_DWORD *)(v5 + 84))
        v9 = *(_QWORD *)(v5 + 64);
      else
        v9 = *(_QWORD *)(v5 + 64) + 1;
      v10 = a1;
      goto LABEL_12;
    }
    (*(void (**)(void *, char *, uint64_t))(v5 + 24))(a1, a2, v4);
  }
LABEL_15:
  if (*(_DWORD *)(v5 + 84))
    v11 = *(_QWORD *)(v5 + 64);
  else
    v11 = *(_QWORD *)(v5 + 64) + 1;
  v489 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v489 - 8);
  v13 = *(_DWORD *)(v12 + 80) & 0xF8;
  v14 = v13 | 7;
  v480 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v15 = *(_QWORD *)(v480 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = type metadata accessor for AnyTip(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = v16 | v19 | v13 | 7;
  v21 = *(_QWORD *)(v12 + 64);
  if (v21 <= 0x19)
    v22 = 25;
  else
    v22 = *(_QWORD *)(v12 + 64);
  v23 = v22 + 1;
  v24 = (((v22 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  v25 = v13 + 15;
  v26 = v16 + 8;
  v27 = *(_QWORD *)(v15 + 64) + ((v16 + 8) & ~v16);
  if (v22 + 1 + ((v13 + 15) & (unint64_t)~v14) > v24)
    v24 = v22 + 1 + ((v13 + 15) & ~v14);
  if (v24 <= ((v27 + 7) & 0xFFFFFFFFFFFFFFF8) + 24)
    v24 = ((v27 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v24 <= (v21 & 0xFFFFFFFFFFFFFFF8) + 16)
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 16;
  v28 = v19 + 1;
  if (v24 <= *(_QWORD *)(v18 + 64) + ((v19 + 1) & (unint64_t)~v19))
    v24 = *(_QWORD *)(v18 + 64) + ((v19 + 1) & ~v19);
  if (v24 <= 0x18)
    v29 = 24;
  else
    v29 = v24;
  v30 = (unint64_t)&a2[v20 + v11];
  if (v29 > 3)
  {
    v31 = 11;
LABEL_34:
    v32 = 8;
    goto LABEL_35;
  }
  v36 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  if (v36 > 0xFFF5)
  {
    v34 = 0x7FFFFFFF;
    goto LABEL_44;
  }
  v31 = v36 + 10;
  if (v36 <= 0xF5)
    goto LABEL_34;
  v32 = 16;
LABEL_35:
  v33 = (1 << v32) - v31;
  v34 = 0x7FFFFFFF;
  if (v33 <= 0x7FFFFFFF)
    v35 = 0x7FFFFFFF;
  else
    v35 = v33;
  if ((v33 & 0x80000000) == 0)
    v34 = v35;
LABEL_44:
  v37 = ((unint64_t)a1 + v20 + v11) & ~v20;
  v38 = v30 & ~v20;
  v39 = *(_DWORD *)(v12 + 84);
  v40 = v21 + 1;
  if (v29 > 3)
  {
    v41 = 11;
    goto LABEL_46;
  }
  v44 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  if (v44 <= 0xFFF5)
  {
    v41 = v44 + 10;
    if (v44 > 0xF5)
    {
      v42 = 16;
LABEL_47:
      v43 = (1 << v42) - v41;
      if ((v43 & 0x80000000) == 0)
        goto LABEL_53;
      goto LABEL_52;
    }
LABEL_46:
    v42 = 8;
    goto LABEL_47;
  }
LABEL_52:
  v43 = 0x7FFFFFFF;
LABEL_53:
  v45 = ~v14;
  v46 = *(unsigned int *)(v15 + 84);
  v47 = ~v16;
  v48 = ~v19;
  if (v43 == v34)
  {
    if (v29 <= 3)
    {
      v55 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      if (v55 > 0xFFF5)
        goto LABEL_72;
      v49 = v55 + 10;
      if (v55 > 0xF5)
      {
        v50 = 16;
LABEL_57:
        v51 = (1 << v50) - v49;
        if ((v51 & 0x80000000) == 0)
        {
          if (v29 > 3)
            goto LABEL_76;
LABEL_73:
          v56 = ((1 << (8 * v29)) + 1) >> (8 * v29);
          v57 = 2;
          if (v56 > 0xFFF5)
            v57 = 4;
          if (v56 > 0xF5)
          {
LABEL_77:
            v58 = v34 - v51;
            if (v34 <= v51)
              goto LABEL_93;
            v59 = v57 + v29;
            v60 = 8 * (v57 + v29);
            if (v59 > 3)
            {
LABEL_79:
              v61 = *(unsigned __int8 *)(v37 + v59);
              if (!*(_BYTE *)(v37 + v59))
                goto LABEL_93;
              goto LABEL_86;
            }
            v62 = ((v58 + ~(-1 << v60)) >> v60) + 1;
            if (HIWORD(v62))
            {
              v61 = *(_DWORD *)(v37 + v59);
              if (!v61)
                goto LABEL_93;
            }
            else
            {
              if (v62 <= 0xFF)
              {
                if (v62 < 2)
                {
LABEL_93:
                  if (!v51)
                    goto LABEL_105;
                  if (v29 <= 3)
                  {
                    v70 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                    if (v70 > 0xFFF5)
                    {
                      v65 = *(_DWORD *)(v37 + v29);
                      v66 = ~v65;
                      goto LABEL_103;
                    }
                    v68 = v70 + 10;
                    if (v70 > 0xF5)
                    {
                      v97 = *(unsigned __int16 *)(v37 + v29);
                      v65 = v97 | 0xFFFF0000;
                      v66 = v97 ^ 0xFFFF;
                      v67 = 16;
                    }
                    else
                    {
                      v71 = *(unsigned __int8 *)(v37 + v29);
                      v65 = v71 | 0xFFFFFF00;
                      v66 = v71 ^ 0xFF;
                      v67 = 8;
                    }
                  }
                  else
                  {
                    v64 = *(unsigned __int8 *)(v37 + v29);
                    v65 = v64 | 0xFFFFFF00;
                    v66 = v64 ^ 0xFF;
                    v67 = 8;
                    v68 = 11;
                  }
                  v69 = (1 << v67) - v68;
                  if ((v69 & 0x80000000) == 0)
                  {
                    if (v69 <= v66)
                      goto LABEL_105;
                    goto LABEL_104;
                  }
LABEL_103:
                  if (v66 >= 0x7FFFFFFF)
                    goto LABEL_105;
LABEL_104:
                  if (!v65)
                    goto LABEL_105;
LABEL_166:
                  if (v29 <= 3)
                  {
                    v99 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                    if (v99 > 0xFFF5)
                    {
                      v102 = 0x7FFFFFFF;
                      if (v29 > 3)
                      {
LABEL_177:
                        v104 = 11;
                        goto LABEL_181;
                      }
LABEL_179:
                      v105 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                      if (v105 > 0xFFF5)
                        goto LABEL_186;
                      v104 = v105 + 10;
                      if (v105 > 0xF5)
                      {
                        v106 = 16;
LABEL_182:
                        v107 = (1 << v106) - v104;
                        if ((v107 & 0x80000000) == 0)
                        {
                          if (v107 == v102)
                            goto LABEL_184;
                          goto LABEL_187;
                        }
LABEL_186:
                        if (v102 == 0x7FFFFFFF)
                        {
LABEL_184:
                          if (v29 <= 3)
                          {
                            v112 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                            if (v112 > 0xFFF5)
                              goto LABEL_202;
                            v108 = v112 + 10;
                            if (v112 > 0xF5)
                            {
                              v113 = 16;
LABEL_199:
                              v114 = (1 << v113) - v108;
                              if ((v114 & 0x80000000) == 0)
                              {
                                if (v29 > 3)
                                  goto LABEL_206;
LABEL_203:
                                v115 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                v116 = 2;
                                if (v115 > 0xFFF5)
                                  v116 = 4;
                                if (v115 > 0xF5)
                                {
LABEL_207:
                                  v117 = v102 - v114;
                                  if (v102 <= v114)
                                    goto LABEL_276;
                                  v118 = v116 + v29;
                                  v119 = 8 * (v116 + v29);
                                  if (v118 <= 3)
                                  {
                                    v121 = ((v117 + ~(-1 << v119)) >> v119) + 1;
                                    if (HIWORD(v121))
                                    {
                                      v120 = *(_DWORD *)(v38 + v118);
                                      if (!v120)
                                        goto LABEL_276;
                                      goto LABEL_219;
                                    }
                                    if (v121 > 0xFF)
                                    {
                                      v120 = *(unsigned __int16 *)(v38 + v118);
                                      if (!*(_WORD *)(v38 + v118))
                                        goto LABEL_276;
                                      goto LABEL_219;
                                    }
                                    if (v121 < 2)
                                    {
LABEL_276:
                                      if (!v114)
                                        goto LABEL_288;
                                      if (v29 <= 3)
                                      {
                                        v152 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                        if (v152 > 0xFFF5)
                                        {
                                          v147 = *(_DWORD *)(v38 + v29);
                                          v148 = ~v147;
LABEL_286:
                                          if (v148 < 0x7FFFFFFF)
                                            goto LABEL_287;
                                          if (v29 > 3)
                                            goto LABEL_291;
LABEL_288:
                                          v154 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                          if (v154 > 0xFFF5)
                                          {
                                            v155 = *(_DWORD *)(v38 + v29);
                                            if (v155 < 0xA)
                                              goto LABEL_300;
                                            goto LABEL_296;
                                          }
                                          if (v154 > 0xF5)
                                          {
                                            v155 = *(unsigned __int16 *)(v38 + v29);
                                            if (v155 < 0xA)
                                            {
LABEL_300:
                                              switch(v155)
                                              {
                                                case 0u:
                                                  switch(*(_BYTE *)(v38 + v22))
                                                  {
                                                    case 0:
                                                      *(_BYTE *)v37 = *(_BYTE *)v38;
                                                      *(_BYTE *)(v37 + v22) = 0;
                                                      goto LABEL_474;
                                                    case 1:
                                                      v243 = *(void **)v38;
                                                      *(_QWORD *)v37 = *(_QWORD *)v38;
                                                      v244 = 1;
                                                      goto LABEL_473;
                                                    case 2:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v38, v489);
                                                      v23 = v22 + 1;
                                                      *(_BYTE *)(v37 + v22) = 2;
                                                      goto LABEL_474;
                                                    case 3:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v38, v489);
                                                      v23 = v22 + 1;
                                                      *(_BYTE *)(v37 + v22) = 3;
                                                      goto LABEL_474;
                                                    case 4:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v38, v489);
                                                      v23 = v22 + 1;
                                                      *(_BYTE *)(v37 + v22) = 4;
                                                      goto LABEL_474;
                                                    case 5:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v38, v489);
                                                      v23 = v22 + 1;
                                                      *(_BYTE *)(v37 + v22) = 5;
                                                      goto LABEL_474;
                                                    case 6:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v38, v489);
                                                      v23 = v22 + 1;
                                                      *(_BYTE *)(v37 + v22) = 6;
                                                      goto LABEL_474;
                                                    case 7:
                                                      v245 = *(_OWORD *)v38;
                                                      *(_OWORD *)(v37 + 9) = *(_OWORD *)(v38 + 9);
                                                      *(_OWORD *)v37 = v245;
                                                      *(_BYTE *)(v37 + v22) = 7;
                                                      goto LABEL_474;
                                                    case 8:
                                                      v243 = *(void **)v38;
                                                      *(_QWORD *)v37 = *(_QWORD *)v38;
                                                      v244 = 8;
                                                      goto LABEL_473;
                                                    case 9:
                                                      v243 = *(void **)v38;
                                                      *(_QWORD *)v37 = *(_QWORD *)v38;
                                                      v244 = 9;
LABEL_473:
                                                      *(_BYTE *)(v37 + v22) = v244;
                                                      v246 = v243;
                                                      v23 = v22 + 1;
LABEL_474:
                                                      v247 = ((v37 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
                                                      v248 = (v22 + v38 + 8) & 0xFFFFFFFFFFFFFFF8;
                                                      if (*(_QWORD *)(v248 + 8) < 0xFFFFFFFFuLL)
                                                      {
                                                        v259 = *(_OWORD *)v248;
                                                        v260 = *(_OWORD *)(v248 + 16);
                                                        v261 = *(_OWORD *)(v248 + 48);
                                                        *(_OWORD *)(v247 + 32) = *(_OWORD *)(v248 + 32);
                                                        *(_OWORD *)(v247 + 48) = v261;
                                                        *(_OWORD *)v247 = v259;
                                                        *(_OWORD *)(v247 + 16) = v260;
                                                        v262 = *(_OWORD *)(v248 + 64);
                                                        v263 = *(_OWORD *)(v248 + 80);
                                                        v264 = *(_OWORD *)(v248 + 96);
                                                        *(_OWORD *)(v247 + 106) = *(_OWORD *)(v248 + 106);
                                                        *(_OWORD *)(v247 + 80) = v263;
                                                        *(_OWORD *)(v247 + 96) = v264;
                                                        *(_OWORD *)(v247 + 64) = v262;
                                                      }
                                                      else
                                                      {
                                                        *(_QWORD *)v247 = *(_QWORD *)v248;
                                                        v249 = *(_QWORD *)(v248 + 8);
                                                        *(_QWORD *)(v247 + 8) = v249;
                                                        v250 = *(void **)(v248 + 16);
                                                        v251 = *(_QWORD *)(v248 + 24);
                                                        v252 = *(_QWORD *)(v248 + 32);
                                                        v253 = *(_QWORD *)(v248 + 40);
                                                        v254 = *(_QWORD *)(v248 + 48);
                                                        v481 = *(_QWORD *)(v248 + 56);
                                                        v490 = *(_BYTE *)(v248 + 64);
                                                        swift_bridgeObjectRetain(v249);
                                                        sub_10003E1F0(v250, v251, v252, v253, v254, v481, v490);
                                                        *(_QWORD *)(v247 + 16) = v250;
                                                        *(_QWORD *)(v247 + 24) = v251;
                                                        *(_QWORD *)(v247 + 32) = v252;
                                                        *(_QWORD *)(v247 + 40) = v253;
                                                        *(_QWORD *)(v247 + 48) = v254;
                                                        *(_QWORD *)(v247 + 56) = v481;
                                                        *(_BYTE *)(v247 + 64) = v490;
                                                        *(_BYTE *)(v247 + 65) = *(_BYTE *)(v248 + 65);
                                                        *(_BYTE *)(v247 + 66) = *(_BYTE *)(v248 + 66);
                                                        *(_BYTE *)(v247 + 67) = *(_BYTE *)(v248 + 67);
                                                        *(_BYTE *)(v247 + 68) = *(_BYTE *)(v248 + 68);
                                                        v255 = *(unsigned __int8 *)(v248 + 120);
                                                        if (v255 == 255)
                                                        {
                                                          v256 = *(_OWORD *)(v248 + 72);
                                                          v257 = *(_OWORD *)(v248 + 88);
                                                          v258 = *(_OWORD *)(v248 + 104);
                                                          *(_BYTE *)(v247 + 120) = *(_BYTE *)(v248 + 120);
                                                          *(_OWORD *)(v247 + 88) = v257;
                                                          *(_OWORD *)(v247 + 104) = v258;
                                                          *(_OWORD *)(v247 + 72) = v256;
                                                        }
                                                        else
                                                        {
                                                          v491 = v255 & 1;
                                                          v265 = *(void **)(v248 + 72);
                                                          v266 = *(_QWORD *)(v248 + 80);
                                                          v267 = *(_QWORD *)(v248 + 88);
                                                          v268 = *(_QWORD *)(v248 + 96);
                                                          v269 = *(_QWORD *)(v248 + 112);
                                                          v482 = *(_QWORD *)(v248 + 104);
                                                          sub_10002B764(v265, v266, v267, v268, v482, v269, v255 & 1);
                                                          *(_QWORD *)(v247 + 72) = v265;
                                                          *(_QWORD *)(v247 + 80) = v266;
                                                          *(_QWORD *)(v247 + 88) = v267;
                                                          *(_QWORD *)(v247 + 96) = v268;
                                                          *(_QWORD *)(v247 + 104) = v482;
                                                          *(_QWORD *)(v247 + 112) = v269;
                                                          *(_BYTE *)(v247 + 120) = v491;
                                                        }
                                                        *(_BYTE *)(v247 + 121) = *(_BYTE *)(v248 + 121);
                                                      }
                                                      *(_BYTE *)(v247 + 122) = *(_BYTE *)(v248 + 122);
                                                      *(_BYTE *)(v247 + 123) = *(_BYTE *)(v248 + 123);
                                                      *(_BYTE *)(v247 + 124) = *(_BYTE *)(v248 + 124);
                                                      *(_BYTE *)(v247 + 125) = *(_BYTE *)(v248 + 125);
                                                      *(_BYTE *)(v247 + 126) = *(_BYTE *)(v248 + 126);
                                                      v270 = *(void **)((v248 + 134) & 0xFFFFFFFFFFFFF8);
                                                      *(_QWORD *)((v247 + 134) & 0xFFFFFFFFFFFFF8) = v270;
                                                      v271 = v270;
                                                      if (v29 > 3)
                                                        goto LABEL_483;
                                                      v178 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                      if (v178 > 0xFFF5)
                                                      {
                                                        *(_DWORD *)(v37 + v29) = 0;
                                                      }
                                                      else
                                                      {
                                                        if (v178 <= 0xF5)
                                                        {
LABEL_483:
                                                          *(_BYTE *)(v37 + v29) = 0;
                                                          goto LABEL_693;
                                                        }
                                                        *(_WORD *)(v37 + v29) = 0;
                                                      }
                                                      break;
                                                    default:
                                                      if (v22 <= 3)
                                                        v157 = v22;
                                                      else
                                                        v157 = 4;
                                                      __asm { BR              X12 }
                                                      return result;
                                                  }
                                                  goto LABEL_701;
                                                case 1u:
                                                  switch(*(_BYTE *)(v38 + v22))
                                                  {
                                                    case 0:
                                                      *(_BYTE *)v37 = *(_BYTE *)v38;
                                                      *(_BYTE *)(v37 + v22) = 0;
                                                      goto LABEL_496;
                                                    case 1:
                                                      v272 = *(void **)v38;
                                                      *(_QWORD *)v37 = *(_QWORD *)v38;
                                                      v273 = 1;
                                                      goto LABEL_495;
                                                    case 2:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v38, v489);
                                                      v23 = v22 + 1;
                                                      *(_BYTE *)(v37 + v22) = 2;
                                                      goto LABEL_496;
                                                    case 3:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v38, v489);
                                                      v23 = v22 + 1;
                                                      *(_BYTE *)(v37 + v22) = 3;
                                                      goto LABEL_496;
                                                    case 4:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v38, v489);
                                                      v23 = v22 + 1;
                                                      *(_BYTE *)(v37 + v22) = 4;
                                                      goto LABEL_496;
                                                    case 5:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v38, v489);
                                                      v23 = v22 + 1;
                                                      *(_BYTE *)(v37 + v22) = 5;
                                                      goto LABEL_496;
                                                    case 6:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v38, v489);
                                                      v23 = v22 + 1;
                                                      *(_BYTE *)(v37 + v22) = 6;
                                                      goto LABEL_496;
                                                    case 7:
                                                      v274 = *(_OWORD *)v38;
                                                      *(_OWORD *)(v37 + 9) = *(_OWORD *)(v38 + 9);
                                                      *(_OWORD *)v37 = v274;
                                                      *(_BYTE *)(v37 + v22) = 7;
                                                      goto LABEL_496;
                                                    case 8:
                                                      v272 = *(void **)v38;
                                                      *(_QWORD *)v37 = *(_QWORD *)v38;
                                                      v273 = 8;
                                                      goto LABEL_495;
                                                    case 9:
                                                      v272 = *(void **)v38;
                                                      *(_QWORD *)v37 = *(_QWORD *)v38;
                                                      v273 = 9;
LABEL_495:
                                                      *(_BYTE *)(v37 + v22) = v273;
                                                      v275 = v272;
                                                      v23 = v22 + 1;
LABEL_496:
                                                      v276 = ((v37 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
                                                      v277 = (v22 + v38 + 8) & 0xFFFFFFFFFFFFFFF8;
                                                      if (*(_QWORD *)(v277 + 8) < 0xFFFFFFFFuLL)
                                                      {
                                                        v288 = *(_OWORD *)v277;
                                                        v289 = *(_OWORD *)(v277 + 16);
                                                        v290 = *(_OWORD *)(v277 + 48);
                                                        *(_OWORD *)(v276 + 32) = *(_OWORD *)(v277 + 32);
                                                        *(_OWORD *)(v276 + 48) = v290;
                                                        *(_OWORD *)v276 = v288;
                                                        *(_OWORD *)(v276 + 16) = v289;
                                                        v291 = *(_OWORD *)(v277 + 64);
                                                        v292 = *(_OWORD *)(v277 + 80);
                                                        v293 = *(_OWORD *)(v277 + 96);
                                                        *(_OWORD *)(v276 + 106) = *(_OWORD *)(v277 + 106);
                                                        *(_OWORD *)(v276 + 80) = v292;
                                                        *(_OWORD *)(v276 + 96) = v293;
                                                        *(_OWORD *)(v276 + 64) = v291;
                                                      }
                                                      else
                                                      {
                                                        *(_QWORD *)v276 = *(_QWORD *)v277;
                                                        v278 = *(_QWORD *)(v277 + 8);
                                                        *(_QWORD *)(v276 + 8) = v278;
                                                        v279 = *(void **)(v277 + 16);
                                                        v280 = *(_QWORD *)(v277 + 24);
                                                        v281 = *(_QWORD *)(v277 + 32);
                                                        v282 = *(_QWORD *)(v277 + 40);
                                                        v283 = *(_QWORD *)(v277 + 48);
                                                        v483 = *(_QWORD *)(v277 + 56);
                                                        v492 = *(_BYTE *)(v277 + 64);
                                                        swift_bridgeObjectRetain(v278);
                                                        sub_10003E1F0(v279, v280, v281, v282, v283, v483, v492);
                                                        *(_QWORD *)(v276 + 16) = v279;
                                                        *(_QWORD *)(v276 + 24) = v280;
                                                        *(_QWORD *)(v276 + 32) = v281;
                                                        *(_QWORD *)(v276 + 40) = v282;
                                                        *(_QWORD *)(v276 + 48) = v283;
                                                        *(_QWORD *)(v276 + 56) = v483;
                                                        *(_BYTE *)(v276 + 64) = v492;
                                                        *(_BYTE *)(v276 + 65) = *(_BYTE *)(v277 + 65);
                                                        *(_BYTE *)(v276 + 66) = *(_BYTE *)(v277 + 66);
                                                        *(_BYTE *)(v276 + 67) = *(_BYTE *)(v277 + 67);
                                                        *(_BYTE *)(v276 + 68) = *(_BYTE *)(v277 + 68);
                                                        v284 = *(unsigned __int8 *)(v277 + 120);
                                                        if (v284 == 255)
                                                        {
                                                          v285 = *(_OWORD *)(v277 + 72);
                                                          v286 = *(_OWORD *)(v277 + 88);
                                                          v287 = *(_OWORD *)(v277 + 104);
                                                          *(_BYTE *)(v276 + 120) = *(_BYTE *)(v277 + 120);
                                                          *(_OWORD *)(v276 + 88) = v286;
                                                          *(_OWORD *)(v276 + 104) = v287;
                                                          *(_OWORD *)(v276 + 72) = v285;
                                                        }
                                                        else
                                                        {
                                                          v493 = v284 & 1;
                                                          v294 = *(void **)(v277 + 72);
                                                          v295 = *(_QWORD *)(v277 + 80);
                                                          v296 = *(_QWORD *)(v277 + 88);
                                                          v297 = *(_QWORD *)(v277 + 96);
                                                          v298 = *(_QWORD *)(v277 + 112);
                                                          v484 = *(_QWORD *)(v277 + 104);
                                                          sub_10002B764(v294, v295, v296, v297, v484, v298, v284 & 1);
                                                          *(_QWORD *)(v276 + 72) = v294;
                                                          *(_QWORD *)(v276 + 80) = v295;
                                                          *(_QWORD *)(v276 + 88) = v296;
                                                          *(_QWORD *)(v276 + 96) = v297;
                                                          *(_QWORD *)(v276 + 104) = v484;
                                                          *(_QWORD *)(v276 + 112) = v298;
                                                          *(_BYTE *)(v276 + 120) = v493;
                                                        }
                                                        *(_BYTE *)(v276 + 121) = *(_BYTE *)(v277 + 121);
                                                      }
                                                      *(_BYTE *)(v276 + 122) = *(_BYTE *)(v277 + 122);
                                                      *(_BYTE *)(v276 + 123) = *(_BYTE *)(v277 + 123);
                                                      *(_BYTE *)(v276 + 124) = *(_BYTE *)(v277 + 124);
                                                      *(_BYTE *)(v276 + 125) = *(_BYTE *)(v277 + 125);
                                                      *(_BYTE *)(v276 + 126) = *(_BYTE *)(v277 + 126);
                                                      v299 = *(void **)((v277 + 134) & 0xFFFFFFFFFFFFF8);
                                                      *(_QWORD *)((v276 + 134) & 0xFFFFFFFFFFFFF8) = v299;
                                                      v300 = v299;
                                                      if (v29 > 3)
                                                        goto LABEL_505;
                                                      v233 = 1;
                                                      v178 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                      if (v178 > 0xFFF5)
                                                      {
                                                        *(_DWORD *)(v37 + v29) = 1;
                                                        goto LABEL_701;
                                                      }
                                                      if (v178 > 0xF5)
                                                        goto LABEL_700;
LABEL_505:
                                                      v179 = 1;
                                                      break;
                                                    default:
                                                      if (v22 <= 3)
                                                        v160 = v22;
                                                      else
                                                        v160 = 4;
                                                      __asm { BR              X12 }
                                                      return result;
                                                  }
                                                  goto LABEL_692;
                                                case 2u:
                                                  v161 = *(void **)v38;
                                                  *(_QWORD *)v37 = *(_QWORD *)v38;
                                                  v162 = (char *)((v25 + v37) & v45);
                                                  v163 = (unsigned __int8 *)((v25 + v38) & v45);
                                                  v164 = v163[v22];
                                                  v165 = v161;
                                                  switch(v164)
                                                  {
                                                    case 0:
                                                      *v162 = *v163;
                                                      v162[v22] = 0;
                                                      break;
                                                    case 1:
                                                      v411 = *(void **)v163;
                                                      *(_QWORD *)v162 = *(_QWORD *)v163;
                                                      v412 = 1;
                                                      goto LABEL_655;
                                                    case 2:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v162, v163, v489);
                                                      v162[v22] = 2;
                                                      break;
                                                    case 3:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v162, v163, v489);
                                                      v162[v22] = 3;
                                                      break;
                                                    case 4:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v162, v163, v489);
                                                      v162[v22] = 4;
                                                      break;
                                                    case 5:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v162, v163, v489);
                                                      v162[v22] = 5;
                                                      break;
                                                    case 6:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v162, v163, v489);
                                                      v162[v22] = 6;
                                                      break;
                                                    case 7:
                                                      v413 = *(_OWORD *)v163;
                                                      *(_OWORD *)(v162 + 9) = *(_OWORD *)(v163 + 9);
                                                      *(_OWORD *)v162 = v413;
                                                      v162[v22] = 7;
                                                      break;
                                                    case 8:
                                                      v411 = *(void **)v163;
                                                      *(_QWORD *)v162 = *(_QWORD *)v163;
                                                      v412 = 8;
                                                      goto LABEL_655;
                                                    case 9:
                                                      v411 = *(void **)v163;
                                                      *(_QWORD *)v162 = *(_QWORD *)v163;
                                                      v412 = 9;
LABEL_655:
                                                      v162[v22] = v412;
                                                      v414 = v411;
                                                      break;
                                                    default:
                                                      memcpy(v162, v163, v22 + 1);
                                                      break;
                                                  }
                                                  if (v29 > 3)
                                                    goto LABEL_659;
                                                  v178 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v178 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 2;
                                                    goto LABEL_701;
                                                  }
                                                  if (v178 <= 0xF5)
                                                  {
LABEL_659:
                                                    v179 = 2;
                                                    goto LABEL_692;
                                                  }
                                                  v233 = 2;
                                                  goto LABEL_700;
                                                case 3u:
                                                  v166 = *(void **)v38;
                                                  *(_QWORD *)v37 = *(_QWORD *)v38;
                                                  v167 = (char *)((v25 + v37) & v45);
                                                  v168 = (unsigned __int8 *)((v25 + v38) & v45);
                                                  v169 = v168[v22];
                                                  v170 = v166;
                                                  switch(v169)
                                                  {
                                                    case 0:
                                                      *v167 = *v168;
                                                      v167[v22] = 0;
                                                      break;
                                                    case 1:
                                                      v415 = *(void **)v168;
                                                      *(_QWORD *)v167 = *(_QWORD *)v168;
                                                      v416 = 1;
                                                      goto LABEL_671;
                                                    case 2:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v167, v168, v489);
                                                      v167[v22] = 2;
                                                      break;
                                                    case 3:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v167, v168, v489);
                                                      v167[v22] = 3;
                                                      break;
                                                    case 4:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v167, v168, v489);
                                                      v167[v22] = 4;
                                                      break;
                                                    case 5:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v167, v168, v489);
                                                      v167[v22] = 5;
                                                      break;
                                                    case 6:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v167, v168, v489);
                                                      v167[v22] = 6;
                                                      break;
                                                    case 7:
                                                      v417 = *(_OWORD *)v168;
                                                      *(_OWORD *)(v167 + 9) = *(_OWORD *)(v168 + 9);
                                                      *(_OWORD *)v167 = v417;
                                                      v167[v22] = 7;
                                                      break;
                                                    case 8:
                                                      v415 = *(void **)v168;
                                                      *(_QWORD *)v167 = *(_QWORD *)v168;
                                                      v416 = 8;
                                                      goto LABEL_671;
                                                    case 9:
                                                      v415 = *(void **)v168;
                                                      *(_QWORD *)v167 = *(_QWORD *)v168;
                                                      v416 = 9;
LABEL_671:
                                                      v167[v22] = v416;
                                                      v418 = v415;
                                                      break;
                                                    default:
                                                      memcpy(v167, v168, v22 + 1);
                                                      break;
                                                  }
                                                  if (v29 > 3)
                                                    goto LABEL_675;
                                                  v178 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v178 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 3;
                                                    goto LABEL_701;
                                                  }
                                                  if (v178 <= 0xF5)
                                                  {
LABEL_675:
                                                    v179 = 3;
                                                    goto LABEL_692;
                                                  }
                                                  v233 = 3;
                                                  goto LABEL_700;
                                                case 4u:
                                                  v171 = *(void **)v38;
                                                  *(_QWORD *)v37 = *(_QWORD *)v38;
                                                  v172 = (char *)((v25 + v37) & v45);
                                                  v173 = (unsigned __int8 *)((v25 + v38) & v45);
                                                  v174 = v173[v22];
                                                  v175 = v171;
                                                  switch(v174)
                                                  {
                                                    case 0:
                                                      *v172 = *v173;
                                                      v172[v22] = 0;
                                                      break;
                                                    case 1:
                                                      v419 = *(void **)v173;
                                                      *(_QWORD *)v172 = *(_QWORD *)v173;
                                                      v420 = 1;
                                                      goto LABEL_687;
                                                    case 2:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v172, v173, v489);
                                                      v172[v22] = 2;
                                                      break;
                                                    case 3:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v172, v173, v489);
                                                      v172[v22] = 3;
                                                      break;
                                                    case 4:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v172, v173, v489);
                                                      v172[v22] = 4;
                                                      break;
                                                    case 5:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v172, v173, v489);
                                                      v172[v22] = 5;
                                                      break;
                                                    case 6:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v172, v173, v489);
                                                      v172[v22] = 6;
                                                      break;
                                                    case 7:
                                                      v421 = *(_OWORD *)v173;
                                                      *(_OWORD *)(v172 + 9) = *(_OWORD *)(v173 + 9);
                                                      *(_OWORD *)v172 = v421;
                                                      v172[v22] = 7;
                                                      break;
                                                    case 8:
                                                      v419 = *(void **)v173;
                                                      *(_QWORD *)v172 = *(_QWORD *)v173;
                                                      v420 = 8;
                                                      goto LABEL_687;
                                                    case 9:
                                                      v419 = *(void **)v173;
                                                      *(_QWORD *)v172 = *(_QWORD *)v173;
                                                      v420 = 9;
LABEL_687:
                                                      v172[v22] = v420;
                                                      v422 = v419;
                                                      break;
                                                    default:
                                                      memcpy(v172, v173, v22 + 1);
                                                      break;
                                                  }
                                                  if (v29 > 3)
                                                    goto LABEL_691;
                                                  v178 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v178 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 4;
                                                    goto LABEL_701;
                                                  }
                                                  if (v178 <= 0xF5)
                                                  {
LABEL_691:
                                                    v179 = 4;
                                                    goto LABEL_692;
                                                  }
                                                  v233 = 4;
                                                  goto LABEL_700;
                                                case 5u:
                                                  *(_QWORD *)v37 = *(_QWORD *)v38;
                                                  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
                                                  *(_BYTE *)(v37 + 9) = *(_BYTE *)(v38 + 9);
                                                  *(_BYTE *)(v37 + 10) = *(_BYTE *)(v38 + 10);
                                                  v176 = *(void **)(v38 + 16);
                                                  *(_QWORD *)(v37 + 16) = v176;
                                                  v177 = v176;
                                                  if (v29 > 3)
                                                    goto LABEL_324;
                                                  v178 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v178 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 5;
                                                    goto LABEL_701;
                                                  }
                                                  if (v178 <= 0xF5)
                                                  {
LABEL_324:
                                                    v179 = 5;
                                                    goto LABEL_692;
                                                  }
                                                  v233 = 5;
                                                  goto LABEL_700;
                                                case 6u:
                                                  v180 = *(void **)v38;
                                                  *(_QWORD *)v37 = *(_QWORD *)v38;
                                                  v181 = v180;
                                                  if (v29 > 3)
                                                    goto LABEL_328;
                                                  v178 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v178 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 6;
                                                    goto LABEL_701;
                                                  }
                                                  if (v178 <= 0xF5)
                                                  {
LABEL_328:
                                                    v179 = 6;
                                                    goto LABEL_692;
                                                  }
                                                  v233 = 6;
                                                  goto LABEL_700;
                                                case 7u:
                                                  v182 = *(_QWORD *)(v15 + 64) + ((v16 + 8) & ~v16);
                                                  if ((v46 & 0x80000000) != 0)
                                                  {
                                                    v183 = v16 + 8;
                                                    v185 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v15 + 48))((v26 + v38) & v47, *(unsigned int *)(v15 + 84), v480);
                                                  }
                                                  else
                                                  {
                                                    v183 = v16 + 8;
                                                    v184 = *(_QWORD *)v38;
                                                    if (*(_QWORD *)v38 >= 0xFFFFFFFFuLL)
                                                      LODWORD(v184) = -1;
                                                    v185 = v184 + 1;
                                                  }
                                                  if (v185)
                                                  {
                                                    v209 = v182;
                                                    memcpy((void *)v37, (const void *)v38, v182);
                                                  }
                                                  else
                                                  {
                                                    v213 = *(_QWORD *)v38;
                                                    *(_QWORD *)v37 = *(_QWORD *)v38;
                                                    v214 = (v37 + v16 + 8) & v47;
                                                    v215 = (v183 + v38) & v47;
                                                    v216 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v15 + 16);
                                                    v217 = swift_bridgeObjectRetain(v213);
                                                    v216(v214, v215, v480, v217);
                                                    v209 = v182;
                                                  }
                                                  v218 = ((v37 | 7) + v209) & 0xFFFFFFFFFFFFFFF8;
                                                  v219 = ((v38 | 7) + v209) & 0xFFFFFFFFFFFFFFF8;
                                                  if (*(_QWORD *)(v219 + 8) < 0xFFFFFFFFuLL)
                                                  {
                                                    v223 = *(_OWORD *)v219;
                                                    *(_QWORD *)(v218 + 16) = *(_QWORD *)(v219 + 16);
                                                    *(_OWORD *)v218 = v223;
                                                  }
                                                  else
                                                  {
                                                    *(_QWORD *)v218 = *(_QWORD *)v219;
                                                    v220 = *(_QWORD *)(v219 + 8);
                                                    *(_QWORD *)(v218 + 8) = v220;
                                                    v221 = *(void **)(v219 + 16);
                                                    *(_QWORD *)(v218 + 16) = v221;
                                                    swift_bridgeObjectRetain(v220);
                                                    v222 = v221;
                                                  }
                                                  if (v29 > 3)
                                                    goto LABEL_412;
                                                  v178 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v178 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 7;
                                                    goto LABEL_701;
                                                  }
                                                  if (v178 <= 0xF5)
                                                  {
LABEL_412:
                                                    v179 = 7;
                                                    goto LABEL_692;
                                                  }
                                                  v233 = 7;
                                                  goto LABEL_700;
                                                case 8u:
                                                  if (v39 < 0xFD)
                                                  {
                                                    v206 = *(unsigned __int8 *)(v38 + v21);
                                                    if (v206 < 3)
                                                      goto LABEL_383;
                                                    v186 = v206 - 2;
                                                  }
                                                  else
                                                  {
                                                    v186 = (*(uint64_t (**)(uint64_t))(v12 + 48))(v38);
                                                    v40 = v21 + 1;
                                                  }
                                                  if (v186)
                                                  {
                                                    v207 = v40;
                                                    memcpy((void *)v37, (const void *)v38, v40);
                                                    goto LABEL_384;
                                                  }
LABEL_383:
                                                  v207 = v40;
                                                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v38, v489);
                                                  *(_BYTE *)(v37 + v21) = *(_BYTE *)(v38 + v21);
LABEL_384:
                                                  *(_QWORD *)(((v37 | 7) + v207) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v38 | 7) + v207) & 0xFFFFFFFFFFFFF8);
                                                  if (v29 > 3)
                                                    goto LABEL_387;
                                                  v178 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v178 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 8;
                                                    goto LABEL_701;
                                                  }
                                                  if (v178 <= 0xF5)
                                                  {
LABEL_387:
                                                    v179 = 8;
                                                    goto LABEL_692;
                                                  }
                                                  v233 = 8;
                                                  goto LABEL_700;
                                                case 9u:
                                                  *(_BYTE *)v37 = *(_BYTE *)v38;
                                                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))((v28 + v37) & v48, (v28 + v38) & v48, v17);
                                                  if (v29 > 3)
                                                    goto LABEL_338;
                                                  v178 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v178 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 9;
                                                  }
                                                  else
                                                  {
                                                    if (v178 <= 0xF5)
                                                    {
LABEL_338:
                                                      v179 = 9;
LABEL_692:
                                                      *(_BYTE *)(v37 + v29) = v179;
LABEL_693:
                                                      if (v29 > 3)
                                                        goto LABEL_697;
                                                      v423 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                      v424 = 2;
                                                      if (v423 > 0xFFF5)
                                                        v424 = 4;
                                                      if (v423 <= 0xF5)
LABEL_697:
                                                        v424 = 1;
LABEL_703:
                                                      v426 = v424 + v29;
                                                      v427 = v426 + v37;
                                                      v428 = v426 + v38;
                                                      *(_BYTE *)v427 = *(_BYTE *)v428;
                                                      v427 &= 0xFFFFFFFFFFFFFFF8;
                                                      v428 &= 0xFFFFFFFFFFFFFFF8;
                                                      *(_QWORD *)(v427 + 8) = *(_QWORD *)(v428 + 8);
                                                      v429 = *(_QWORD *)(v428 + 16);
                                                      *(_QWORD *)(v427 + 16) = v429;
                                                      v430 = (uint64_t *)((v428 + 31) & 0xFFFFFFFFFFFFF8);
                                                      v431 = *v430;
                                                      *(_QWORD *)((v427 + 31) & 0xFFFFFFFFFFFFF8) = *v430;
                                                      swift_bridgeObjectRetain(v429);
                                                      swift_bridgeObjectRetain(v431);
                                                      if (v29 > 3)
                                                        goto LABEL_766;
                                                      goto LABEL_763;
                                                    }
                                                    v233 = 9;
LABEL_700:
                                                    *(_WORD *)(v37 + v29) = v233;
                                                  }
LABEL_701:
                                                  v425 = v178 > 0xFFF5;
                                                  v424 = 2;
                                                  if (v425)
                                                    v424 = 4;
                                                  goto LABEL_703;
                                                default:
                                                  if (v29 > 3)
                                                    goto LABEL_309;
                                                  v158 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  v159 = 2;
                                                  if (v158 > 0xFFF5)
                                                    v159 = 4;
                                                  if (v158 <= 0xF5)
LABEL_309:
                                                    v159 = 1;
                                                  memcpy((void *)v37, (const void *)v38, v159 + v29);
                                                  goto LABEL_693;
                                              }
                                            }
                                          }
                                          else
                                          {
LABEL_291:
                                            v155 = *(unsigned __int8 *)(v38 + v29);
                                            if (v155 < 0xA)
                                              goto LABEL_300;
                                          }
LABEL_296:
                                          if (v29 <= 3)
                                            v156 = v29;
                                          else
                                            v156 = 4;
                                          __asm { BR              X12 }
                                        }
                                        v150 = v152 + 10;
                                        if (v152 > 0xF5)
                                        {
                                          v188 = *(unsigned __int16 *)(v38 + v29);
                                          v147 = v188 | 0xFFFF0000;
                                          v148 = v188 ^ 0xFFFF;
                                          v149 = 16;
                                        }
                                        else
                                        {
                                          v153 = *(unsigned __int8 *)(v38 + v29);
                                          v147 = v153 | 0xFFFFFF00;
                                          v148 = v153 ^ 0xFF;
                                          v149 = 8;
                                        }
                                      }
                                      else
                                      {
                                        v146 = *(unsigned __int8 *)(v38 + v29);
                                        v147 = v146 | 0xFFFFFF00;
                                        v148 = v146 ^ 0xFF;
                                        v149 = 8;
                                        v150 = 11;
                                      }
                                      v151 = (1 << v149) - v150;
                                      if ((v151 & 0x80000000) == 0)
                                      {
                                        if (v151 <= v148)
                                          goto LABEL_288;
LABEL_287:
                                        if (!v147)
                                          goto LABEL_288;
LABEL_394:
                                        if (v29 <= 3)
                                        {
LABEL_458:
                                          v241 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                          v242 = 2;
                                          if (v241 > 0xFFF5)
                                            v242 = 4;
                                          if (v241 > 0xF5)
                                          {
LABEL_462:
                                            memcpy((void *)v37, (const void *)v38, ((((((v242 + v29) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
                                            if (v29 <= 3)
                                              goto LABEL_768;
LABEL_771:
                                            v461 = 1;
                                            goto LABEL_772;
                                          }
                                        }
LABEL_461:
                                        v242 = 1;
                                        goto LABEL_462;
                                      }
                                      goto LABEL_286;
                                    }
                                  }
                                  v120 = *(unsigned __int8 *)(v38 + v118);
                                  if (!*(_BYTE *)(v38 + v118))
                                    goto LABEL_276;
LABEL_219:
                                  v122 = (v120 - 1) << v119;
                                  if (v118 > 3)
                                    v122 = 0;
                                  if ((_DWORD)v118)
                                  {
                                    if (v118 > 3)
                                      LODWORD(v118) = 4;
                                    __asm { BR              X12 }
                                  }
                                  if (v114 + v122 == -1)
                                    goto LABEL_288;
                                  goto LABEL_394;
                                }
LABEL_206:
                                v116 = 1;
                                goto LABEL_207;
                              }
LABEL_202:
                              v114 = 0x7FFFFFFF;
                              if (v29 > 3)
                                goto LABEL_206;
                              goto LABEL_203;
                            }
                          }
                          else
                          {
                            v108 = 11;
                          }
                          v113 = 8;
                          goto LABEL_199;
                        }
LABEL_187:
                        if (v29 > 3)
                          goto LABEL_191;
                        v109 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                        v110 = 2;
                        if (v109 > 0xFFF5)
                          v110 = 4;
                        if (v109 <= 0xF5)
LABEL_191:
                          v110 = 1;
                        v111 = *(_QWORD *)((((v29 + v38 + v110) & 0xFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8);
                        if (v111 >= 0xFFFFFFFF)
                          LODWORD(v111) = -1;
                        if ((_DWORD)v111 == -1)
                          goto LABEL_288;
                        goto LABEL_394;
                      }
LABEL_181:
                      v106 = 8;
                      goto LABEL_182;
                    }
                    v98 = v99 + 10;
                    if (v99 > 0xF5)
                    {
                      v100 = 16;
LABEL_171:
                      v101 = (1 << v100) - v98;
                      v102 = 0x7FFFFFFF;
                      if (v101 <= 0x7FFFFFFF)
                        v103 = 0x7FFFFFFF;
                      else
                        v103 = v101;
                      if ((v101 & 0x80000000) == 0)
                        v102 = v103;
                      if (v29 > 3)
                        goto LABEL_177;
                      goto LABEL_179;
                    }
                  }
                  else
                  {
                    v98 = 11;
                  }
                  v100 = 8;
                  goto LABEL_171;
                }
                goto LABEL_79;
              }
              v61 = *(unsigned __int16 *)(v37 + v59);
              if (!*(_WORD *)(v37 + v59))
                goto LABEL_93;
            }
LABEL_86:
            v63 = (v61 - 1) << v60;
            if (v59 > 3)
              v63 = 0;
            if ((_DWORD)v59)
            {
              if (v59 > 3)
                LODWORD(v59) = 4;
              __asm { BR              X12 }
            }
            if (v51 + v63 != -1)
              goto LABEL_166;
            goto LABEL_105;
          }
LABEL_76:
          v57 = 1;
          goto LABEL_77;
        }
LABEL_72:
        v51 = 0x7FFFFFFF;
        if (v29 > 3)
          goto LABEL_76;
        goto LABEL_73;
      }
    }
    else
    {
      v49 = 11;
    }
    v50 = 8;
    goto LABEL_57;
  }
  if (v29 > 3)
    goto LABEL_64;
  v52 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  v53 = 2;
  if (v52 > 0xFFF5)
    v53 = 4;
  if (v52 <= 0xF5)
LABEL_64:
    v53 = 1;
  v54 = *(_QWORD *)((((v29 + v37 + v53) & 0xFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8);
  if (v54 >= 0xFFFFFFFF)
    LODWORD(v54) = -1;
  if ((_DWORD)v54 != -1)
    goto LABEL_166;
LABEL_105:
  if (v29 > 3)
  {
    v72 = 11;
    goto LABEL_109;
  }
  v73 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  if (v73 <= 0xFFF5)
  {
    v72 = v73 + 10;
    if (v73 > 0xF5)
    {
      v74 = 16;
LABEL_110:
      v75 = (1 << v74) - v72;
      v76 = 0x7FFFFFFF;
      if (v75 <= 0x7FFFFFFF)
        v77 = 0x7FFFFFFF;
      else
        v77 = v75;
      if ((v75 & 0x80000000) == 0)
        v76 = v77;
      if (v29 > 3)
        goto LABEL_116;
      goto LABEL_118;
    }
LABEL_109:
    v74 = 8;
    goto LABEL_110;
  }
  v76 = 0x7FFFFFFF;
  if (v29 > 3)
  {
LABEL_116:
    v78 = 11;
LABEL_120:
    v80 = 8;
    goto LABEL_121;
  }
LABEL_118:
  v79 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  if (v79 > 0xFFF5)
    goto LABEL_125;
  v78 = v79 + 10;
  if (v79 <= 0xF5)
    goto LABEL_120;
  v80 = 16;
LABEL_121:
  v81 = (1 << v80) - v78;
  if ((v81 & 0x80000000) == 0)
  {
    if (v81 == v76)
      goto LABEL_123;
LABEL_126:
    if (v29 > 3)
      goto LABEL_130;
    v83 = ((1 << (8 * v29)) + 1) >> (8 * v29);
    v84 = 2;
    if (v83 > 0xFFF5)
      v84 = 4;
    if (v83 <= 0xF5)
LABEL_130:
      v84 = 1;
    v85 = *(_QWORD *)((((v29 + v38 + v84) & 0xFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8);
    if (v85 >= 0xFFFFFFFF)
      LODWORD(v85) = -1;
    if ((_DWORD)v85 != -1)
      goto LABEL_342;
    goto LABEL_238;
  }
LABEL_125:
  if (v76 != 0x7FFFFFFF)
    goto LABEL_126;
LABEL_123:
  if (v29 > 3)
  {
    v82 = 11;
LABEL_137:
    v87 = 8;
    goto LABEL_138;
  }
  v86 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  if (v86 > 0xFFF5)
    goto LABEL_141;
  v82 = v86 + 10;
  if (v86 <= 0xF5)
    goto LABEL_137;
  v87 = 16;
LABEL_138:
  v88 = (1 << v87) - v82;
  if ((v88 & 0x80000000) == 0)
  {
    if (v29 > 3)
      goto LABEL_145;
    goto LABEL_142;
  }
LABEL_141:
  v88 = 0x7FFFFFFF;
  if (v29 > 3)
  {
LABEL_145:
    v90 = 1;
    goto LABEL_146;
  }
LABEL_142:
  v89 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  v90 = 2;
  if (v89 > 0xFFF5)
    v90 = 4;
  if (v89 <= 0xF5)
    goto LABEL_145;
LABEL_146:
  v91 = v76 - v88;
  if (v76 <= v88)
    goto LABEL_226;
  v92 = v90 + v29;
  v93 = 8 * (v90 + v29);
  if (v92 <= 3)
  {
    v95 = ((v91 + ~(-1 << v93)) >> v93) + 1;
    if (HIWORD(v95))
    {
      v94 = *(_DWORD *)(v38 + v92);
      if (!v94)
        goto LABEL_226;
      goto LABEL_158;
    }
    if (v95 > 0xFF)
    {
      v94 = *(unsigned __int16 *)(v38 + v92);
      if (!*(_WORD *)(v38 + v92))
        goto LABEL_226;
      goto LABEL_158;
    }
    if (v95 < 2)
    {
LABEL_226:
      if (!v88)
        goto LABEL_238;
      if (v29 <= 3)
      {
        v129 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        if (v129 > 0xFFF5)
        {
          v124 = *(_DWORD *)(v38 + v29);
          v125 = ~v124;
          goto LABEL_236;
        }
        v127 = v129 + 10;
        if (v129 > 0xF5)
        {
          v187 = *(unsigned __int16 *)(v38 + v29);
          v124 = v187 | 0xFFFF0000;
          v125 = v187 ^ 0xFFFF;
          v126 = 16;
        }
        else
        {
          v130 = *(unsigned __int8 *)(v38 + v29);
          v124 = v130 | 0xFFFFFF00;
          v125 = v130 ^ 0xFF;
          v126 = 8;
        }
      }
      else
      {
        v123 = *(unsigned __int8 *)(v38 + v29);
        v124 = v123 | 0xFFFFFF00;
        v125 = v123 ^ 0xFF;
        v126 = 8;
        v127 = 11;
      }
      v128 = (1 << v126) - v127;
      if ((v128 & 0x80000000) == 0)
      {
        if (v128 <= v125)
          goto LABEL_238;
        goto LABEL_237;
      }
LABEL_236:
      if (v125 >= 0x7FFFFFFF)
        goto LABEL_238;
LABEL_237:
      if (!v124)
        goto LABEL_238;
      goto LABEL_342;
    }
  }
  v94 = *(unsigned __int8 *)(v38 + v92);
  if (!*(_BYTE *)(v38 + v92))
    goto LABEL_226;
LABEL_158:
  v96 = (v94 - 1) << v93;
  if (v92 > 3)
    v96 = 0;
  if ((_DWORD)v92)
  {
    if (v92 > 3)
      LODWORD(v92) = 4;
    __asm { BR              X12 }
  }
  if (v88 + v96 != -1)
  {
    if (v29 > 3)
      goto LABEL_345;
LABEL_342:
    v189 = ((1 << (8 * v29)) + 1) >> (8 * v29);
    if (v189 > 0xFFF5)
    {
      v190 = *(_DWORD *)(v37 + v29);
      if (v190 < 0xA)
        goto LABEL_354;
      goto LABEL_350;
    }
    if (v189 > 0xF5)
    {
      v190 = *(unsigned __int16 *)(v37 + v29);
      if (v190 < 0xA)
      {
LABEL_354:
        switch(v190)
        {
          case 0u:
            switch(*(_BYTE *)(v37 + v22))
            {
              case 0:
              case 7:
                goto LABEL_447;
              case 1:
              case 8:
              case 9:
                goto LABEL_445;
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
                goto LABEL_444;
              default:
                if (v22 <= 3)
                  v192 = v22;
                else
                  v192 = 4;
                __asm { BR              X12 }
                return result;
            }
          case 1u:
            switch(*(_BYTE *)(v37 + v22))
            {
              case 0:
              case 7:
                goto LABEL_447;
              case 1:
              case 8:
              case 9:
LABEL_445:
                v234 = v22 + 1;

                goto LABEL_446;
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
LABEL_444:
                v234 = v22 + 1;
                (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v37, v489);
LABEL_446:
                v23 = v234;
LABEL_447:
                v235 = ((v37 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
                v236 = *(_QWORD *)(v235 + 8);
                if (v236 >= 0xFFFFFFFF)
                {
                  swift_bridgeObjectRelease(v236);
                  sub_10003E2EC(*(void **)(v235 + 16), *(_QWORD *)(v235 + 24), *(_QWORD *)(v235 + 32), *(_QWORD *)(v235 + 40), *(_QWORD *)(v235 + 48), *(_QWORD *)(v235 + 56), *(_BYTE *)(v235 + 64));
                  v237 = *(unsigned __int8 *)(v235 + 120);
                  if (v237 != 255)
                    sub_10002B328(*(void **)(v235 + 72), *(_QWORD *)(v235 + 80), *(_QWORD *)(v235 + 88), *(_QWORD *)(v235 + 96), *(_QWORD *)(v235 + 104), *(_QWORD *)(v235 + 112), v237 & 1);
                }
                v201 = *(id *)((v235 + 134) & 0xFFFFFFFFFFFFF8);
                break;
              default:
                if (v22 <= 3)
                  v193 = v22;
                else
                  v193 = 4;
                __asm { BR              X12 }
                return result;
            }
            goto LABEL_451;
          case 2u:
            v194 = v25;
            v195 = v45;

            v196 = (void **)((v194 + v37) & v195);
            switch(*((_BYTE *)v196 + v22))
            {
              case 1:
              case 8:
              case 9:
                goto LABEL_396;
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
                goto LABEL_366;
              default:
                goto LABEL_452;
            }
            goto LABEL_452;
          case 3u:
            v197 = v25;
            v198 = v45;

            v196 = (void **)((v197 + v37) & v198);
            switch(*((_BYTE *)v196 + v22))
            {
              case 1:
              case 8:
              case 9:
                goto LABEL_396;
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
                goto LABEL_366;
              default:
                goto LABEL_452;
            }
            goto LABEL_452;
          case 4u:
            v199 = v25;
            v200 = v45;

            v196 = (void **)((v199 + v37) & v200);
            switch(*((_BYTE *)v196 + v22))
            {
              case 1:
              case 8:
              case 9:
LABEL_396:
                v201 = *v196;
                goto LABEL_451;
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
LABEL_366:
                (*(void (**)(void **, uint64_t))(v12 + 8))(v196, v489);
                break;
              default:
                goto LABEL_452;
            }
            goto LABEL_452;
          case 5u:
            v201 = *(id *)(v37 + 16);
            goto LABEL_451;
          case 6u:
            v201 = *(id *)v37;
            goto LABEL_451;
          case 7u:
            v202 = *(_QWORD *)(v15 + 64) + ((v16 + 8) & ~v16);
            if ((v46 & 0x80000000) != 0)
            {
              v204 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v15 + 48))((v37 + v16 + 8) & v47, *(unsigned int *)(v15 + 84), v480);
            }
            else
            {
              v203 = *(id *)v37;
              if (*(_QWORD *)v37 >= 0xFFFFFFFFuLL)
                LODWORD(v203) = -1;
              v204 = (_DWORD)v203 + 1;
            }
            if (!v204)
            {
              v210 = swift_bridgeObjectRelease(*(_QWORD *)v37);
              (*(void (**)(uint64_t, uint64_t, __n128))(v15 + 8))((v37 + v16 + 8) & v47, v480, v210);
            }
            v211 = ((v37 | 7) + v202) & 0xFFFFFFFFFFFFFFF8;
            v212 = *(_QWORD *)(v211 + 8);
            if (v212 < 0xFFFFFFFF)
              goto LABEL_452;
            swift_bridgeObjectRelease(v212);
            v201 = *(id *)(v211 + 16);
LABEL_451:

            goto LABEL_452;
          case 8u:
            if (v39 < 0xFD)
            {
              v208 = *(unsigned __int8 *)(v37 + v21);
              if (v208 < 3)
                goto LABEL_391;
              v205 = v208 - 2;
            }
            else
            {
              v205 = (*(uint64_t (**)(uint64_t))(v12 + 48))(v37);
            }
            if (v205)
              goto LABEL_452;
LABEL_391:
            (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v37, v489);
LABEL_452:
            if (v29 > 3)
              goto LABEL_456;
            v238 = ((1 << (8 * v29)) + 1) >> (8 * v29);
            v239 = 2;
            if (v238 > 0xFFF5)
              v239 = 4;
            if (v238 <= 0xF5)
LABEL_456:
              v239 = 1;
            v240 = (v29 + v37 + v239) & 0xFFFFFFFFFFFFFFF8;
            swift_bridgeObjectRelease(*(_QWORD *)(v240 + 16));
            swift_bridgeObjectRelease(*(_QWORD *)((v240 + 31) & 0xFFFFFFFFFFFFF8));
            if (v29 <= 3)
              goto LABEL_458;
            goto LABEL_461;
          case 9u:
            (*(void (**)(uint64_t, uint64_t))(v18 + 8))((v28 + v37) & v48, v17);
            goto LABEL_452;
          default:
            goto LABEL_452;
        }
      }
    }
    else
    {
LABEL_345:
      v190 = *(unsigned __int8 *)(v37 + v29);
      if (v190 < 0xA)
        goto LABEL_354;
    }
LABEL_350:
    if (v29 <= 3)
      v191 = v29;
    else
      v191 = 4;
    __asm { BR              X12 }
  }
LABEL_238:
  if (v37 == v38)
    goto LABEL_750;
  if (v29 > 3)
    goto LABEL_240;
  v132 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  if (v132 > 0xFFF5)
  {
    v131 = *(_DWORD *)(v37 + v29);
  }
  else
  {
    if (v132 <= 0xF5)
    {
LABEL_240:
      v131 = *(unsigned __int8 *)(v37 + v29);
      goto LABEL_245;
    }
    v131 = *(unsigned __int16 *)(v37 + v29);
  }
LABEL_245:
  if (v131 >= 0xA)
  {
    if (v29 <= 3)
      v133 = v29;
    else
      v133 = 4;
    __asm { BR              X12 }
  }
  v479 = ~v16;
  v470 = *(_QWORD *)(v15 + 64) + ((v16 + 8) & ~v16);
  v471 = v17;
  __n = v22 + 1;
  v477 = v28;
  v478 = v25;
  v476 = *(_DWORD *)(v12 + 84);
  v475 = v45;
  v474 = *(_DWORD *)(v15 + 84);
  v473 = v48;
  switch(v131)
  {
    case 0u:
      v464 = v21 + 1;
      v224 = v22 + 1;
      v469 = v16 + 8;
      switch(*(_BYTE *)(v37 + v22))
      {
        case 0:
        case 7:
          goto LABEL_512;
        case 1:
        case 8:
        case 9:
          goto LABEL_510;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_509;
        default:
          if (v22 <= 3)
            v134 = v22;
          else
            v134 = 4;
          __asm { BR              X12 }
          return result;
      }
    case 1u:
      v464 = v21 + 1;
      v224 = v22 + 1;
      v469 = v16 + 8;
      switch(*(_BYTE *)(v37 + v22))
      {
        case 0:
        case 7:
          goto LABEL_512;
        case 1:
        case 8:
        case 9:
LABEL_510:

          goto LABEL_511;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
LABEL_509:
          (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v37, v489);
LABEL_511:
          v224 = v22 + 1;
LABEL_512:
          v301 = ((v37 | 7) + v224) & 0xFFFFFFFFFFFFFFF8;
          v302 = *(_QWORD *)(v301 + 8);
          if (v302 >= 0xFFFFFFFF)
          {
            swift_bridgeObjectRelease(v302);
            sub_10003E2EC(*(void **)(v301 + 16), *(_QWORD *)(v301 + 24), *(_QWORD *)(v301 + 32), *(_QWORD *)(v301 + 40), *(_QWORD *)(v301 + 48), *(_QWORD *)(v301 + 56), *(_BYTE *)(v301 + 64));
            v303 = *(unsigned __int8 *)(v301 + 120);
            if (v303 != 255)
              sub_10002B328(*(void **)(v301 + 72), *(_QWORD *)(v301 + 80), *(_QWORD *)(v301 + 88), *(_QWORD *)(v301 + 96), *(_QWORD *)(v301 + 104), *(_QWORD *)(v301 + 112), v303 & 1);
          }

          v28 = v477;
          v25 = v478;
          v40 = v464;
          v26 = v469;
          v39 = v476;
          v45 = v475;
          v46 = v474;
          v48 = v473;
          break;
        default:
          if (v22 <= 3)
            v135 = v22;
          else
            v135 = 4;
          __asm { BR              X12 }
          return result;
      }
      goto LABEL_516;
    case 2u:
      v466 = v16 + 8;
      v136 = v21 + 1;

      v48 = v473;
      v46 = v474;
      v45 = v475;
      v40 = v21 + 1;
      v39 = v476;
      v26 = v16 + 8;
      v28 = v477;
      v25 = v478;
      v137 = (id *)((v478 + v37) & v475);
      switch(*((_BYTE *)v137 + v22))
      {
        case 1:
        case 8:
        case 9:
          goto LABEL_419;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_264;
        default:
          goto LABEL_516;
      }
      goto LABEL_516;
    case 3u:
      v466 = v16 + 8;
      v136 = v21 + 1;

      v48 = v473;
      v46 = v474;
      v45 = v475;
      v40 = v21 + 1;
      v39 = v476;
      v26 = v16 + 8;
      v28 = v477;
      v25 = v478;
      v137 = (id *)((v478 + v37) & v475);
      switch(*((_BYTE *)v137 + v22))
      {
        case 1:
        case 8:
        case 9:
          goto LABEL_419;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_264;
        default:
          goto LABEL_516;
      }
      goto LABEL_516;
    case 4u:
      v466 = v16 + 8;
      v136 = v21 + 1;

      v48 = v473;
      v46 = v474;
      v45 = v475;
      v40 = v21 + 1;
      v39 = v476;
      v26 = v16 + 8;
      v28 = v477;
      v25 = v478;
      v137 = (id *)((v478 + v37) & v475);
      switch(*((_BYTE *)v137 + v22))
      {
        case 1:
        case 8:
        case 9:
LABEL_419:

          goto LABEL_420;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
LABEL_264:
          (*(void (**)(void))(v12 + 8))();
LABEL_420:
          v48 = v473;
          v46 = v474;
          v45 = v475;
          v40 = v136;
          goto LABEL_426;
        default:
          goto LABEL_516;
      }
    case 5u:
      v138 = *(id *)(v37 + 16);
      goto LABEL_272;
    case 6u:
      v138 = *(id *)v37;
LABEL_272:
      v144 = v16 + 8;

      v48 = v473;
      v46 = v474;
      v45 = v475;
      v40 = v21 + 1;
      goto LABEL_418;
    case 7u:
      if ((v46 & 0x80000000) != 0)
      {
        v140 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))((v37 + v16 + 8) & v479, v46, v480);
        v48 = v473;
        v46 = v474;
        v45 = v475;
        v40 = v21 + 1;
        v39 = v476;
        v26 = v16 + 8;
        v28 = v477;
        v25 = v478;
      }
      else
      {
        v139 = *(id *)v37;
        if (*(_QWORD *)v37 >= 0xFFFFFFFFuLL)
          LODWORD(v139) = -1;
        v140 = (_DWORD)v139 + 1;
      }
      if (!v140)
      {
        v468 = v26;
        v229 = v40;
        v230 = swift_bridgeObjectRelease(*(_QWORD *)v37);
        (*(void (**)(uint64_t, uint64_t, __n128))(v15 + 8))((v37 + v16 + 8) & v479, v480, v230);
        v48 = v473;
        v46 = v474;
        v45 = v475;
        v40 = v229;
        v39 = v476;
        v26 = v468;
        v28 = v477;
        v25 = v478;
      }
      v231 = ((v37 | 7) + v470) & 0xFFFFFFFFFFFFFFF8;
      v232 = *(_QWORD *)(v231 + 8);
      if (v232 < 0xFFFFFFFF)
        goto LABEL_516;
      v465 = v40;
      v466 = v26;
      swift_bridgeObjectRelease(v232);

      v48 = v473;
      v46 = v474;
      v45 = v475;
      v40 = v465;
LABEL_426:
      v39 = v476;
      v26 = v466;
      goto LABEL_427;
    case 8u:
      if (v39 < 0xFD)
      {
        v225 = *(unsigned __int8 *)(v37 + v21);
        if (v225 < 3)
          goto LABEL_416;
        v145 = v225 - 2;
      }
      else
      {
        v145 = (*(uint64_t (**)(uint64_t))(v12 + 48))(v37);
        v48 = v473;
        v46 = v474;
        v45 = v475;
        v40 = v21 + 1;
        v39 = v476;
        v26 = v16 + 8;
        v28 = v477;
        v25 = v478;
      }
      if (v145)
        goto LABEL_516;
LABEL_416:
      v142 = *(void (**)(unint64_t, uint64_t))(v12 + 8);
      v141 = v37;
      v143 = v489;
LABEL_417:
      v144 = v26;
      v467 = v18;
      v226 = v38;
      v227 = v22;
      v228 = v40;
      v142(v141, v143);
      v48 = v473;
      v46 = v474;
      v45 = v475;
      v40 = v228;
      v22 = v227;
      v38 = v226;
      v18 = v467;
LABEL_418:
      v39 = v476;
      v26 = v144;
LABEL_427:
      v28 = v477;
      v25 = v478;
LABEL_516:
      if (v29 > 3)
        goto LABEL_517;
      v305 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      if (v305 > 0xFFF5)
      {
        v304 = *(_DWORD *)(v38 + v29);
      }
      else if (v305 <= 0xF5)
      {
LABEL_517:
        v304 = *(unsigned __int8 *)(v38 + v29);
      }
      else
      {
        v304 = *(unsigned __int16 *)(v38 + v29);
      }
      if (v304 >= 0xA)
      {
        if (v29 <= 3)
          v306 = v29;
        else
          v306 = 4;
        __asm { BR              X12 }
      }
      return result;
    case 9u:
      v141 = (v28 + v37) & v48;
      v142 = *(void (**)(unint64_t, uint64_t))(v18 + 8);
      v143 = v471;
      goto LABEL_417;
    default:
      goto LABEL_516;
  }
  switch(v304)
  {
    case 0u:
      switch(*(_BYTE *)(v38 + v22))
      {
        case 0:
          *(_BYTE *)v37 = *(_BYTE *)v38;
          *(_BYTE *)(v37 + v22) = 0;
          goto LABEL_620;
        case 1:
          v353 = *(void **)v38;
          *(_QWORD *)v37 = *(_QWORD *)v38;
          v354 = 1;
          goto LABEL_619;
        case 2:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v38, v489);
          *(_BYTE *)(v37 + v22) = 2;
          goto LABEL_620;
        case 3:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v38, v489);
          *(_BYTE *)(v37 + v22) = 3;
          goto LABEL_620;
        case 4:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v38, v489);
          *(_BYTE *)(v37 + v22) = 4;
          goto LABEL_620;
        case 5:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v38, v489);
          *(_BYTE *)(v37 + v22) = 5;
          goto LABEL_620;
        case 6:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v38, v489);
          *(_BYTE *)(v37 + v22) = 6;
          goto LABEL_620;
        case 7:
          v355 = *(_OWORD *)v38;
          *(_OWORD *)(v37 + 9) = *(_OWORD *)(v38 + 9);
          *(_OWORD *)v37 = v355;
          *(_BYTE *)(v37 + v22) = 7;
          goto LABEL_620;
        case 8:
          v353 = *(void **)v38;
          *(_QWORD *)v37 = *(_QWORD *)v38;
          v354 = 8;
          goto LABEL_619;
        case 9:
          v353 = *(void **)v38;
          *(_QWORD *)v37 = *(_QWORD *)v38;
          v354 = 9;
LABEL_619:
          *(_BYTE *)(v37 + v22) = v354;
          v359 = v353;
LABEL_620:
          v360 = ((v37 | 7) + __n) & 0xFFFFFFFFFFFFFFF8;
          v361 = (v22 + v38 + 8) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v361 + 8) < 0xFFFFFFFFuLL)
          {
            v372 = *(_OWORD *)v361;
            v373 = *(_OWORD *)(v361 + 16);
            v374 = *(_OWORD *)(v361 + 48);
            *(_OWORD *)(v360 + 32) = *(_OWORD *)(v361 + 32);
            *(_OWORD *)(v360 + 48) = v374;
            *(_OWORD *)v360 = v372;
            *(_OWORD *)(v360 + 16) = v373;
            v375 = *(_OWORD *)(v361 + 64);
            v376 = *(_OWORD *)(v361 + 80);
            v377 = *(_OWORD *)(v361 + 96);
            *(_OWORD *)(v360 + 106) = *(_OWORD *)(v361 + 106);
            *(_OWORD *)(v360 + 80) = v376;
            *(_OWORD *)(v360 + 96) = v377;
            *(_OWORD *)(v360 + 64) = v375;
          }
          else
          {
            *(_QWORD *)v360 = *(_QWORD *)v361;
            v362 = *(_QWORD *)(v361 + 8);
            *(_QWORD *)(v360 + 8) = v362;
            v363 = *(void **)(v361 + 16);
            v364 = *(_QWORD *)(v361 + 24);
            v365 = *(_QWORD *)(v361 + 32);
            v366 = *(_QWORD *)(v361 + 40);
            v367 = *(_QWORD *)(v361 + 48);
            v485 = *(_QWORD *)(v361 + 56);
            v494 = *(_BYTE *)(v361 + 64);
            swift_bridgeObjectRetain(v362);
            sub_10003E1F0(v363, v364, v365, v366, v367, v485, v494);
            *(_QWORD *)(v360 + 16) = v363;
            *(_QWORD *)(v360 + 24) = v364;
            *(_QWORD *)(v360 + 32) = v365;
            *(_QWORD *)(v360 + 40) = v366;
            *(_QWORD *)(v360 + 48) = v367;
            *(_QWORD *)(v360 + 56) = v485;
            *(_BYTE *)(v360 + 64) = v494;
            *(_BYTE *)(v360 + 65) = *(_BYTE *)(v361 + 65);
            *(_BYTE *)(v360 + 66) = *(_BYTE *)(v361 + 66);
            *(_BYTE *)(v360 + 67) = *(_BYTE *)(v361 + 67);
            *(_BYTE *)(v360 + 68) = *(_BYTE *)(v361 + 68);
            v368 = *(unsigned __int8 *)(v361 + 120);
            if (v368 == 255)
            {
              v369 = *(_OWORD *)(v361 + 72);
              v370 = *(_OWORD *)(v361 + 88);
              v371 = *(_OWORD *)(v361 + 104);
              *(_BYTE *)(v360 + 120) = *(_BYTE *)(v361 + 120);
              *(_OWORD *)(v360 + 88) = v370;
              *(_OWORD *)(v360 + 104) = v371;
              *(_OWORD *)(v360 + 72) = v369;
            }
            else
            {
              v495 = v368 & 1;
              v378 = *(void **)(v361 + 72);
              v379 = *(_QWORD *)(v361 + 80);
              v380 = *(_QWORD *)(v361 + 88);
              v381 = *(_QWORD *)(v361 + 96);
              v382 = *(_QWORD *)(v361 + 112);
              v486 = *(_QWORD *)(v361 + 104);
              sub_10002B764(v378, v379, v380, v381, v486, v382, v368 & 1);
              *(_QWORD *)(v360 + 72) = v378;
              *(_QWORD *)(v360 + 80) = v379;
              *(_QWORD *)(v360 + 88) = v380;
              *(_QWORD *)(v360 + 96) = v381;
              *(_QWORD *)(v360 + 104) = v486;
              *(_QWORD *)(v360 + 112) = v382;
              *(_BYTE *)(v360 + 120) = v495;
            }
            *(_BYTE *)(v360 + 121) = *(_BYTE *)(v361 + 121);
          }
          *(_BYTE *)(v360 + 122) = *(_BYTE *)(v361 + 122);
          *(_BYTE *)(v360 + 123) = *(_BYTE *)(v361 + 123);
          *(_BYTE *)(v360 + 124) = *(_BYTE *)(v361 + 124);
          *(_BYTE *)(v360 + 125) = *(_BYTE *)(v361 + 125);
          *(_BYTE *)(v360 + 126) = *(_BYTE *)(v361 + 126);
          v383 = *(void **)((v361 + 134) & 0xFFFFFFFFFFFFF8);
          *(_QWORD *)((v360 + 134) & 0xFFFFFFFFFFFFF8) = v383;
          v384 = v383;
          if (v29 > 3)
            goto LABEL_627;
          v334 = ((1 << (8 * v29)) + 1) >> (8 * v29);
          if (v334 > 0xFFF5)
          {
            *(_DWORD *)(v37 + v29) = 0;
          }
          else
          {
            if (v334 <= 0xF5)
            {
LABEL_627:
              *(_BYTE *)(v37 + v29) = 0;
              goto LABEL_750;
            }
            *(_WORD *)(v37 + v29) = 0;
          }
          break;
        default:
          if (v22 <= 3)
            v307 = v22;
          else
            v307 = 4;
          __asm { BR              X12 }
          return result;
      }
      goto LABEL_760;
    case 1u:
      switch(*(_BYTE *)(v38 + v22))
      {
        case 0:
          *(_BYTE *)v37 = *(_BYTE *)v38;
          *(_BYTE *)(v37 + v22) = 0;
          goto LABEL_635;
        case 1:
          v356 = *(void **)v38;
          *(_QWORD *)v37 = *(_QWORD *)v38;
          v357 = 1;
          goto LABEL_634;
        case 2:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v38, v489);
          *(_BYTE *)(v37 + v22) = 2;
          goto LABEL_635;
        case 3:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v38, v489);
          *(_BYTE *)(v37 + v22) = 3;
          goto LABEL_635;
        case 4:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v38, v489);
          *(_BYTE *)(v37 + v22) = 4;
          goto LABEL_635;
        case 5:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v38, v489);
          *(_BYTE *)(v37 + v22) = 5;
          goto LABEL_635;
        case 6:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v38, v489);
          *(_BYTE *)(v37 + v22) = 6;
          goto LABEL_635;
        case 7:
          v358 = *(_OWORD *)v38;
          *(_OWORD *)(v37 + 9) = *(_OWORD *)(v38 + 9);
          *(_OWORD *)v37 = v358;
          *(_BYTE *)(v37 + v22) = 7;
          goto LABEL_635;
        case 8:
          v356 = *(void **)v38;
          *(_QWORD *)v37 = *(_QWORD *)v38;
          v357 = 8;
          goto LABEL_634;
        case 9:
          v356 = *(void **)v38;
          *(_QWORD *)v37 = *(_QWORD *)v38;
          v357 = 9;
LABEL_634:
          *(_BYTE *)(v37 + v22) = v357;
          v385 = v356;
LABEL_635:
          v386 = ((v37 | 7) + __n) & 0xFFFFFFFFFFFFFFF8;
          v387 = (v22 + v38 + 8) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v387 + 8) < 0xFFFFFFFFuLL)
          {
            v398 = *(_OWORD *)v387;
            v399 = *(_OWORD *)(v387 + 16);
            v400 = *(_OWORD *)(v387 + 48);
            *(_OWORD *)(v386 + 32) = *(_OWORD *)(v387 + 32);
            *(_OWORD *)(v386 + 48) = v400;
            *(_OWORD *)v386 = v398;
            *(_OWORD *)(v386 + 16) = v399;
            v401 = *(_OWORD *)(v387 + 64);
            v402 = *(_OWORD *)(v387 + 80);
            v403 = *(_OWORD *)(v387 + 96);
            *(_OWORD *)(v386 + 106) = *(_OWORD *)(v387 + 106);
            *(_OWORD *)(v386 + 80) = v402;
            *(_OWORD *)(v386 + 96) = v403;
            *(_OWORD *)(v386 + 64) = v401;
          }
          else
          {
            *(_QWORD *)v386 = *(_QWORD *)v387;
            v388 = *(_QWORD *)(v387 + 8);
            *(_QWORD *)(v386 + 8) = v388;
            v389 = *(void **)(v387 + 16);
            v390 = *(_QWORD *)(v387 + 24);
            v391 = *(_QWORD *)(v387 + 32);
            v392 = *(_QWORD *)(v387 + 40);
            v393 = *(_QWORD *)(v387 + 48);
            v487 = *(_QWORD *)(v387 + 56);
            v496 = *(_BYTE *)(v387 + 64);
            swift_bridgeObjectRetain(v388);
            sub_10003E1F0(v389, v390, v391, v392, v393, v487, v496);
            *(_QWORD *)(v386 + 16) = v389;
            *(_QWORD *)(v386 + 24) = v390;
            *(_QWORD *)(v386 + 32) = v391;
            *(_QWORD *)(v386 + 40) = v392;
            *(_QWORD *)(v386 + 48) = v393;
            *(_QWORD *)(v386 + 56) = v487;
            *(_BYTE *)(v386 + 64) = v496;
            *(_BYTE *)(v386 + 65) = *(_BYTE *)(v387 + 65);
            *(_BYTE *)(v386 + 66) = *(_BYTE *)(v387 + 66);
            *(_BYTE *)(v386 + 67) = *(_BYTE *)(v387 + 67);
            *(_BYTE *)(v386 + 68) = *(_BYTE *)(v387 + 68);
            v394 = *(unsigned __int8 *)(v387 + 120);
            if (v394 == 255)
            {
              v395 = *(_OWORD *)(v387 + 72);
              v396 = *(_OWORD *)(v387 + 88);
              v397 = *(_OWORD *)(v387 + 104);
              *(_BYTE *)(v386 + 120) = *(_BYTE *)(v387 + 120);
              *(_OWORD *)(v386 + 88) = v396;
              *(_OWORD *)(v386 + 104) = v397;
              *(_OWORD *)(v386 + 72) = v395;
            }
            else
            {
              v497 = v394 & 1;
              v404 = *(void **)(v387 + 72);
              v405 = *(_QWORD *)(v387 + 80);
              v406 = *(_QWORD *)(v387 + 88);
              v407 = *(_QWORD *)(v387 + 96);
              v408 = *(_QWORD *)(v387 + 112);
              v488 = *(_QWORD *)(v387 + 104);
              sub_10002B764(v404, v405, v406, v407, v488, v408, v394 & 1);
              *(_QWORD *)(v386 + 72) = v404;
              *(_QWORD *)(v386 + 80) = v405;
              *(_QWORD *)(v386 + 88) = v406;
              *(_QWORD *)(v386 + 96) = v407;
              *(_QWORD *)(v386 + 104) = v488;
              *(_QWORD *)(v386 + 112) = v408;
              *(_BYTE *)(v386 + 120) = v497;
            }
            *(_BYTE *)(v386 + 121) = *(_BYTE *)(v387 + 121);
          }
          *(_BYTE *)(v386 + 122) = *(_BYTE *)(v387 + 122);
          *(_BYTE *)(v386 + 123) = *(_BYTE *)(v387 + 123);
          *(_BYTE *)(v386 + 124) = *(_BYTE *)(v387 + 124);
          *(_BYTE *)(v386 + 125) = *(_BYTE *)(v387 + 125);
          *(_BYTE *)(v386 + 126) = *(_BYTE *)(v387 + 126);
          v409 = *(void **)((v387 + 134) & 0xFFFFFFFFFFFFF8);
          *(_QWORD *)((v386 + 134) & 0xFFFFFFFFFFFFF8) = v409;
          v410 = v409;
          if (v29 > 3)
            goto LABEL_642;
          v352 = 1;
          v334 = ((1 << (8 * v29)) + 1) >> (8 * v29);
          if (v334 > 0xFFF5)
            goto LABEL_759;
          if (v334 <= 0xF5)
          {
LABEL_642:
            v326 = 1;
            goto LABEL_749;
          }
          *(_WORD *)(v37 + v29) = 1;
          break;
        default:
          if (v22 <= 3)
            v308 = v22;
          else
            v308 = 4;
          __asm { BR              X12 }
          return result;
      }
      goto LABEL_760;
    case 2u:
      v309 = *(void **)v38;
      *(_QWORD *)v37 = *(_QWORD *)v38;
      v310 = (char *)((v25 + v37) & v45);
      v311 = (unsigned __int8 *)((v25 + v38) & v45);
      v312 = v311[v22];
      v313 = v309;
      switch(v312)
      {
        case 0:
          *v310 = *v311;
          v310[v22] = 0;
          break;
        case 1:
          v432 = *(void **)v311;
          *(_QWORD *)v310 = *(_QWORD *)v311;
          v433 = 1;
          goto LABEL_714;
        case 2:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v310, v311, v489);
          v310[v22] = 2;
          break;
        case 3:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v310, v311, v489);
          v310[v22] = 3;
          break;
        case 4:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v310, v311, v489);
          v310[v22] = 4;
          break;
        case 5:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v310, v311, v489);
          v310[v22] = 5;
          break;
        case 6:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v310, v311, v489);
          v310[v22] = 6;
          break;
        case 7:
          v434 = *(_OWORD *)v311;
          *(_OWORD *)(v310 + 9) = *(_OWORD *)(v311 + 9);
          *(_OWORD *)v310 = v434;
          v310[v22] = 7;
          break;
        case 8:
          v432 = *(void **)v311;
          *(_QWORD *)v310 = *(_QWORD *)v311;
          v433 = 8;
          goto LABEL_714;
        case 9:
          v432 = *(void **)v311;
          *(_QWORD *)v310 = *(_QWORD *)v311;
          v433 = 9;
LABEL_714:
          v310[v22] = v433;
          v435 = v432;
          break;
        default:
          memcpy(v310, v311, __n);
          break;
      }
      if (v29 > 3)
        goto LABEL_716;
      v334 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      if (v334 > 0xFFF5)
      {
        v352 = 2;
        goto LABEL_759;
      }
      if (v334 <= 0xF5)
      {
LABEL_716:
        v326 = 2;
        goto LABEL_749;
      }
      *(_WORD *)(v37 + v29) = 2;
      goto LABEL_760;
    case 3u:
      v314 = *(void **)v38;
      *(_QWORD *)v37 = *(_QWORD *)v38;
      v315 = (char *)((v25 + v37) & v45);
      v316 = (unsigned __int8 *)((v25 + v38) & v45);
      v317 = v316[v22];
      v318 = v314;
      switch(v317)
      {
        case 0:
          *v315 = *v316;
          v315[v22] = 0;
          break;
        case 1:
          v436 = *(void **)v316;
          *(_QWORD *)v315 = *(_QWORD *)v316;
          v437 = 1;
          goto LABEL_730;
        case 2:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v315, v316, v489);
          v315[v22] = 2;
          break;
        case 3:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v315, v316, v489);
          v315[v22] = 3;
          break;
        case 4:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v315, v316, v489);
          v315[v22] = 4;
          break;
        case 5:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v315, v316, v489);
          v315[v22] = 5;
          break;
        case 6:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v315, v316, v489);
          v315[v22] = 6;
          break;
        case 7:
          v438 = *(_OWORD *)v316;
          *(_OWORD *)(v315 + 9) = *(_OWORD *)(v316 + 9);
          *(_OWORD *)v315 = v438;
          v315[v22] = 7;
          break;
        case 8:
          v436 = *(void **)v316;
          *(_QWORD *)v315 = *(_QWORD *)v316;
          v437 = 8;
          goto LABEL_730;
        case 9:
          v436 = *(void **)v316;
          *(_QWORD *)v315 = *(_QWORD *)v316;
          v437 = 9;
LABEL_730:
          v315[v22] = v437;
          v439 = v436;
          break;
        default:
          memcpy(v315, v316, __n);
          break;
      }
      if (v29 > 3)
        goto LABEL_732;
      v334 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      if (v334 > 0xFFF5)
      {
        v352 = 3;
        goto LABEL_759;
      }
      if (v334 <= 0xF5)
      {
LABEL_732:
        v326 = 3;
        goto LABEL_749;
      }
      *(_WORD *)(v37 + v29) = 3;
      goto LABEL_760;
    case 4u:
      v319 = *(void **)v38;
      *(_QWORD *)v37 = *(_QWORD *)v38;
      v320 = (char *)((v25 + v37) & v45);
      v321 = (unsigned __int8 *)((v25 + v38) & v45);
      v322 = v321[v22];
      v323 = v319;
      switch(v322)
      {
        case 0:
          *v320 = *v321;
          v320[v22] = 0;
          break;
        case 1:
          v440 = *(void **)v321;
          *(_QWORD *)v320 = *(_QWORD *)v321;
          v441 = 1;
          goto LABEL_746;
        case 2:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v320, v321, v489);
          v320[v22] = 2;
          break;
        case 3:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v320, v321, v489);
          v320[v22] = 3;
          break;
        case 4:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v320, v321, v489);
          v320[v22] = 4;
          break;
        case 5:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v320, v321, v489);
          v320[v22] = 5;
          break;
        case 6:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v320, v321, v489);
          v320[v22] = 6;
          break;
        case 7:
          v442 = *(_OWORD *)v321;
          *(_OWORD *)(v320 + 9) = *(_OWORD *)(v321 + 9);
          *(_OWORD *)v320 = v442;
          v320[v22] = 7;
          break;
        case 8:
          v440 = *(void **)v321;
          *(_QWORD *)v320 = *(_QWORD *)v321;
          v441 = 8;
          goto LABEL_746;
        case 9:
          v440 = *(void **)v321;
          *(_QWORD *)v320 = *(_QWORD *)v321;
          v441 = 9;
LABEL_746:
          v320[v22] = v441;
          v443 = v440;
          break;
        default:
          memcpy(v320, v321, __n);
          break;
      }
      if (v29 > 3)
        goto LABEL_748;
      v334 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      if (v334 > 0xFFF5)
      {
        v352 = 4;
        goto LABEL_759;
      }
      if (v334 <= 0xF5)
      {
LABEL_748:
        v326 = 4;
        goto LABEL_749;
      }
      *(_WORD *)(v37 + v29) = 4;
      goto LABEL_760;
    case 5u:
      *(_QWORD *)v37 = *(_QWORD *)v38;
      *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
      *(_BYTE *)(v37 + 9) = *(_BYTE *)(v38 + 9);
      *(_BYTE *)(v37 + 10) = *(_BYTE *)(v38 + 10);
      v324 = *(void **)(v38 + 16);
      *(_QWORD *)(v37 + 16) = v324;
      v325 = v324;
      if (v29 > 3)
        goto LABEL_543;
      v334 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      if (v334 > 0xFFF5)
      {
        v352 = 5;
        goto LABEL_759;
      }
      if (v334 <= 0xF5)
      {
LABEL_543:
        v326 = 5;
        goto LABEL_749;
      }
      *(_WORD *)(v37 + v29) = 5;
      goto LABEL_760;
    case 6u:
      v332 = *(void **)v38;
      *(_QWORD *)v37 = *(_QWORD *)v38;
      v333 = v332;
      if (v29 > 3)
        goto LABEL_559;
      v334 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      if (v334 > 0xFFF5)
      {
        v352 = 6;
        goto LABEL_759;
      }
      if (v334 <= 0xF5)
      {
LABEL_559:
        v326 = 6;
        goto LABEL_749;
      }
      *(_WORD *)(v37 + v29) = 6;
      goto LABEL_760;
    case 7u:
      if ((v46 & 0x80000000) != 0)
      {
        v327 = v26;
        v329 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))((v26 + v38) & v479, v46, v480);
      }
      else
      {
        v327 = v26;
        v328 = *(_QWORD *)v38;
        if (*(_QWORD *)v38 >= 0xFFFFFFFFuLL)
          LODWORD(v328) = -1;
        v329 = v328 + 1;
      }
      if (v329)
      {
        v341 = v470;
        memcpy((void *)v37, (const void *)v38, v470);
      }
      else
      {
        v342 = *(_QWORD *)v38;
        *(_QWORD *)v37 = *(_QWORD *)v38;
        v343 = (v327 + v38) & v479;
        v344 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v15 + 16);
        v345 = swift_bridgeObjectRetain(v342);
        v344((v37 + v16 + 8) & v479, v343, v480, v345);
        v341 = v470;
      }
      v346 = ((v37 | 7) + v341) & 0xFFFFFFFFFFFFFFF8;
      v347 = ((v38 | 7) + v341) & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v347 + 8) < 0xFFFFFFFFuLL)
      {
        v351 = *(_OWORD *)v347;
        *(_QWORD *)(v346 + 16) = *(_QWORD *)(v347 + 16);
        *(_OWORD *)v346 = v351;
      }
      else
      {
        *(_QWORD *)v346 = *(_QWORD *)v347;
        v348 = *(_QWORD *)(v347 + 8);
        *(_QWORD *)(v346 + 8) = v348;
        v349 = *(void **)(v347 + 16);
        *(_QWORD *)(v346 + 16) = v349;
        swift_bridgeObjectRetain(v348);
        v350 = v349;
      }
      if (v29 > 3)
        goto LABEL_588;
      v334 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      if (v334 > 0xFFF5)
      {
        v352 = 7;
        goto LABEL_759;
      }
      if (v334 <= 0xF5)
      {
LABEL_588:
        v326 = 7;
        goto LABEL_749;
      }
      *(_WORD *)(v37 + v29) = 7;
      goto LABEL_760;
    case 8u:
      if (v39 < 0xFD)
      {
        v337 = *(unsigned __int8 *)(v38 + v21);
        if (v337 < 3)
          goto LABEL_575;
        v336 = v337 - 2;
      }
      else
      {
        v335 = v40;
        v336 = (*(uint64_t (**)(uint64_t))(v12 + 48))(v38);
        v40 = v335;
      }
      if (v336)
      {
        v338 = v40;
        memcpy((void *)v37, (const void *)v38, v40);
        v339 = v338;
        goto LABEL_576;
      }
LABEL_575:
      v340 = v40;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v38, v489);
      v339 = v340;
      *(_BYTE *)(v37 + v21) = *(_BYTE *)(v38 + v21);
LABEL_576:
      *(_QWORD *)(((v37 | 7) + v339) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v38 | 7) + v339) & 0xFFFFFFFFFFFFF8);
      if (v29 > 3)
        goto LABEL_579;
      v334 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      if (v334 > 0xFFF5)
      {
        v352 = 8;
        goto LABEL_759;
      }
      if (v334 <= 0xF5)
      {
LABEL_579:
        v326 = 8;
        goto LABEL_749;
      }
      *(_WORD *)(v37 + v29) = 8;
      goto LABEL_760;
    case 9u:
      *(_BYTE *)v37 = *(_BYTE *)v38;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))((v28 + v37) & v48, (v28 + v38) & v48, v471);
      if (v29 > 3)
        goto LABEL_549;
      v334 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      if (v334 > 0xFFF5)
      {
        v352 = 9;
LABEL_759:
        *(_DWORD *)(v37 + v29) = v352;
        goto LABEL_760;
      }
      if (v334 > 0xF5)
      {
        *(_WORD *)(v37 + v29) = 9;
LABEL_760:
        v425 = v334 > 0xFFF5;
        v445 = 2;
        if (v425)
          v445 = 4;
        goto LABEL_762;
      }
LABEL_549:
      v326 = 9;
LABEL_749:
      *(_BYTE *)(v37 + v29) = v326;
      break;
    default:
      if (v29 > 3)
        goto LABEL_554;
      v330 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      v331 = 2;
      if (v330 > 0xFFF5)
        v331 = 4;
      if (v330 <= 0xF5)
LABEL_554:
        v331 = 1;
      memcpy((void *)v37, (const void *)v38, v331 + v29);
      break;
  }
LABEL_750:
  if (v29 > 3)
    goto LABEL_754;
  v444 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  v445 = 2;
  if (v444 > 0xFFF5)
    v445 = 4;
  if (v444 <= 0xF5)
LABEL_754:
    v445 = 1;
LABEL_762:
  v446 = v445 + v29;
  v447 = v446 + v37;
  v448 = v446 + v38;
  *(_BYTE *)v447 = *(_BYTE *)v448;
  v449 = v447 & 0xFFFFFFFFFFFFFFF8;
  v450 = v448 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v449 + 8) = *(_QWORD *)((v448 & 0xFFFFFFFFFFFFFFF8) + 8);
  v451 = *(_QWORD *)((v448 & 0xFFFFFFFFFFFFFFF8) + 16);
  v452 = *(_QWORD *)((v447 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_QWORD *)(v449 + 16) = v451;
  swift_bridgeObjectRetain(v451);
  swift_bridgeObjectRelease(v452);
  v453 = (uint64_t *)((v449 + 31) & 0xFFFFFFFFFFFFFFF8);
  v454 = (uint64_t *)((v450 + 31) & 0xFFFFFFFFFFFFF8);
  v455 = *v454;
  v456 = *v453;
  *v453 = *v454;
  swift_bridgeObjectRetain(v455);
  swift_bridgeObjectRelease(v456);
  if (v29 > 3)
    goto LABEL_766;
LABEL_763:
  v457 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  v458 = 2;
  if (v457 > 0xFFF5)
    v458 = 4;
  if (v457 <= 0xF5)
LABEL_766:
    v458 = 1;
  v459 = ((((v458 + v29) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  *(_QWORD *)((v37 + v459) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v38 + v459) & 0xFFFFFFFFFFFFF8);
  if (v29 > 3)
    goto LABEL_771;
LABEL_768:
  v460 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  v461 = 2;
  if (v460 > 0xFFF5)
    v461 = 4;
  if (v460 <= 0xF5)
    goto LABEL_771;
LABEL_772:
  v462 = ((((((v461 + v29) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  *(_BYTE *)(v462 + v37) = *(_BYTE *)(v462 + v38);
  return a1;
}

void *sub_1004E3800(void *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  int v33;
  char v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  unint64_t v39;
  uint64_t v40;
  int v41;
  char v42;
  int v43;
  unsigned int v44;
  int v45;
  char v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  unsigned int v51;
  unsigned int v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  char v56;
  int v57;
  unsigned int v58;
  int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  char v63;
  int v64;
  unsigned int v65;
  int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  _BYTE *v76;
  void *v77;
  _BYTE *v78;
  _BYTE *v79;
  _BYTE *v80;
  _BYTE *v81;
  __int128 v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int v86;
  uint64_t v87;
  unsigned int v88;
  unsigned int v89;
  uint64_t v90;
  int v91;
  unint64_t v92;
  __int128 v93;
  unint64_t v94;
  int v95;
  char v96;
  char v97;
  void (*v98)(unint64_t, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  void (*v101)(unint64_t, uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  void (*v104)(unint64_t, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  void (*v107)(unint64_t, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  __int128 v110;
  void (*v111)(unint64_t, uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  void (*v114)(unint64_t, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  void (*v117)(unint64_t, uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  void (*v120)(unint64_t, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  void (*v124)(unint64_t, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  void (*v135)(unint64_t, uint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  unsigned int v146;
  uint64_t v147;
  BOOL v148;
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  unsigned int v152;
  uint64_t v153;
  unint64_t v154;
  unsigned int v155;
  uint64_t v156;
  unint64_t v157;
  void *result;
  void (*v159)(unint64_t);
  uint64_t v160;
  void (*v161)(unint64_t);
  uint64_t v162;
  void (*v163)(unint64_t);
  uint64_t v164;
  void (*v165)(unint64_t);
  uint64_t v166;
  void (*v167)(unint64_t);
  uint64_t v168;
  __int128 v169;
  void (*v170)(unint64_t);
  uint64_t v171;
  void (*v172)(unint64_t);
  uint64_t v173;
  void (*v174)(unint64_t);
  uint64_t v175;
  void (*v176)(unint64_t);
  uint64_t v177;
  void (*v178)(unint64_t);
  uint64_t v179;
  __int128 v180;
  void (*v181)(unint64_t);
  uint64_t v182;
  void (*v183)(unint64_t);
  uint64_t v184;
  void (*v185)(unint64_t);
  uint64_t v186;
  void (*v187)(unint64_t);
  uint64_t v188;
  void (*v189)(unint64_t);
  uint64_t v190;
  __int128 v191;
  uint64_t v192;
  uint64_t v193;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (v7)
    v10 = v8;
  else
    v10 = v8 + 1;
  v193 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v193 - 8);
  v12 = *(_DWORD *)(v11 + 80) & 0xF8;
  v13 = v12 | 7;
  v192 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v14 = *(_QWORD *)(v192 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = type metadata accessor for AnyTip(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = v15 | v18 | v12 | 7;
  v20 = *(_QWORD *)(v11 + 64);
  if (v20 <= 0x19)
    v21 = 25;
  else
    v21 = *(_QWORD *)(v11 + 64);
  v22 = v21 + 1;
  v23 = (((v21 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  v24 = v12 + 15;
  v25 = (v12 + 15) & ~v13;
  v26 = v15 + 8;
  v27 = *(_QWORD *)(v14 + 64) + ((v15 + 8) & ~v15);
  v28 = v21 + 1 + v25;
  if (v28 > v23)
    v23 = v28;
  if (v23 <= ((v27 + 7) & 0xFFFFFFFFFFFFFFF8) + 24)
    v23 = ((v27 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  v29 = (v20 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v23 > v29)
    v29 = v23;
  if (v29 <= *(_QWORD *)(v17 + 64) + ((v18 + 1) & (unint64_t)~v18))
    v29 = *(_QWORD *)(v17 + 64) + ((v18 + 1) & ~v18);
  if (v29 <= 0x18)
    v30 = 24;
  else
    v30 = v29;
  v31 = 8 * v30;
  v32 = (unint64_t)&a2[v19 + v10];
  if (v30 > 3)
  {
    v33 = 11;
LABEL_26:
    v34 = 8;
    goto LABEL_27;
  }
  v38 = ((1 << v31) + 1) >> v31;
  if (v38 > 0xFFF5)
  {
    v36 = 0x7FFFFFFF;
    goto LABEL_36;
  }
  v33 = v38 + 10;
  if (v38 <= 0xF5)
    goto LABEL_26;
  v34 = 16;
LABEL_27:
  v35 = (1 << v34) - v33;
  v36 = 0x7FFFFFFF;
  if (v35 <= 0x7FFFFFFF)
    v37 = 0x7FFFFFFF;
  else
    v37 = v35;
  if ((v35 & 0x80000000) == 0)
    v36 = v37;
LABEL_36:
  v39 = ((unint64_t)a1 + v19 + v10) & ~v19;
  v40 = v32 & ~v19;
  if (v30 > 3)
  {
    v41 = 11;
    goto LABEL_38;
  }
  v44 = ((1 << v31) + 1) >> v31;
  if (v44 <= 0xFFF5)
  {
    v41 = v44 + 10;
    if (v44 > 0xF5)
    {
      v42 = 16;
LABEL_39:
      v43 = (1 << v42) - v41;
      if ((v43 & 0x80000000) == 0)
        goto LABEL_45;
      goto LABEL_44;
    }
LABEL_38:
    v42 = 8;
    goto LABEL_39;
  }
LABEL_44:
  v43 = 0x7FFFFFFF;
LABEL_45:
  if (v43 == v36)
  {
    if (v30 <= 3)
    {
      v51 = ((1 << v31) + 1) >> v31;
      if (v51 > 0xFFF5)
        goto LABEL_64;
      v45 = v51 + 10;
      if (v51 > 0xF5)
      {
        v46 = 16;
LABEL_49:
        v47 = (1 << v46) - v45;
        if ((v47 & 0x80000000) == 0)
        {
          if (v30 > 3)
            goto LABEL_68;
LABEL_65:
          v52 = ((1 << v31) + 1) >> v31;
          v53 = 2;
          if (v52 > 0xFFF5)
            v53 = 4;
          if (v52 > 0xF5)
          {
LABEL_69:
            v54 = v36 - v47;
            if (v36 <= v47)
              goto LABEL_85;
            v55 = v53 + v30;
            v56 = 8 * (v53 + v30);
            if (v55 > 3)
            {
LABEL_71:
              v57 = *(unsigned __int8 *)(v40 + v55);
              if (!*(_BYTE *)(v40 + v55))
                goto LABEL_85;
              goto LABEL_78;
            }
            v58 = ((v54 + ~(-1 << v56)) >> v56) + 1;
            if (HIWORD(v58))
            {
              v57 = *(_DWORD *)(v40 + v55);
              if (!v57)
                goto LABEL_85;
            }
            else
            {
              if (v58 <= 0xFF)
              {
                if (v58 < 2)
                {
LABEL_85:
                  if (!v47)
                    goto LABEL_98;
                  if (v30 <= 3)
                  {
                    v65 = ((1 << v31) + 1) >> v31;
                    if (v65 > 0xFFF5)
                    {
                      v61 = *(_DWORD *)(v40 + v30);
                      v62 = ~v61;
                      goto LABEL_96;
                    }
                    v64 = v65 + 10;
                    if (v65 > 0xF5)
                    {
                      v67 = *(unsigned __int16 *)(v40 + v30);
                      v61 = v67 | 0xFFFF0000;
                      v62 = v67 ^ 0xFFFF;
                      v63 = 16;
                    }
                    else
                    {
                      v66 = *(unsigned __int8 *)(v40 + v30);
                      v61 = v66 | 0xFFFFFF00;
                      v62 = v66 ^ 0xFF;
                      v63 = 8;
                    }
                  }
                  else
                  {
                    v60 = *(unsigned __int8 *)(v40 + v30);
                    v61 = v60 | 0xFFFFFF00;
                    v62 = v60 ^ 0xFF;
                    v63 = 8;
                    v64 = 11;
                  }
                  v68 = (1 << v63) - v64;
                  if ((v68 & 0x80000000) == 0)
                  {
                    if (v68 <= v62)
                      goto LABEL_98;
                    goto LABEL_97;
                  }
LABEL_96:
                  if (v62 >= 0x7FFFFFFF)
                    goto LABEL_98;
LABEL_97:
                  if (!v61)
                    goto LABEL_98;
LABEL_179:
                  if (v30 > 3)
                    goto LABEL_183;
                  v89 = ((1 << v31) + 1) >> v31;
                  v90 = 2;
                  if (v89 > 0xFFF5)
                    v90 = 4;
                  if (v89 <= 0xF5)
LABEL_183:
                    v90 = 1;
                  v77 = a1;
                  memcpy((void *)v39, (const void *)v40, ((((((v90 + v30) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
                  if (v30 > 3)
                    goto LABEL_254;
                  goto LABEL_251;
                }
                goto LABEL_71;
              }
              v57 = *(unsigned __int16 *)(v40 + v55);
              if (!*(_WORD *)(v40 + v55))
                goto LABEL_85;
            }
LABEL_78:
            v59 = (v57 - 1) << v56;
            if (v55 > 3)
              v59 = 0;
            if ((_DWORD)v55)
            {
              if (v55 > 3)
                LODWORD(v55) = 4;
              __asm { BR              X17 }
            }
            if (v47 + v59 != -1)
              goto LABEL_179;
            goto LABEL_98;
          }
LABEL_68:
          v53 = 1;
          goto LABEL_69;
        }
LABEL_64:
        v47 = 0x7FFFFFFF;
        if (v30 > 3)
          goto LABEL_68;
        goto LABEL_65;
      }
    }
    else
    {
      v45 = 11;
    }
    v46 = 8;
    goto LABEL_49;
  }
  if (v30 > 3)
    goto LABEL_56;
  v48 = ((1 << v31) + 1) >> v31;
  v49 = 2;
  if (v48 > 0xFFF5)
    v49 = 4;
  if (v48 <= 0xF5)
LABEL_56:
    v49 = 1;
  v50 = *(_QWORD *)((((v30 + v40 + v49) & 0xFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8);
  if (v50 >= 0xFFFFFFFF)
    LODWORD(v50) = -1;
  if ((_DWORD)v50 != -1)
    goto LABEL_179;
LABEL_98:
  if (v30 > 3)
  {
LABEL_99:
    v69 = *(unsigned __int8 *)(v40 + v30);
    goto LABEL_104;
  }
  v70 = ((1 << v31) + 1) >> v31;
  if (v70 > 0xFFF5)
  {
    v69 = *(_DWORD *)(v40 + v30);
  }
  else
  {
    if (v70 <= 0xF5)
      goto LABEL_99;
    v69 = *(unsigned __int16 *)(v40 + v30);
  }
LABEL_104:
  if (v69 >= 0xA)
  {
    if (v30 <= 3)
      v71 = v30;
    else
      v71 = 4;
    __asm { BR              X17 }
  }
  v72 = ~v13;
  switch(v69)
  {
    case 0u:
      v77 = a1;
      switch(*(_BYTE *)(v40 + v21))
      {
        case 0:
          v96 = 0;
          *(_BYTE *)v39 = *(_BYTE *)v40;
          break;
        case 1:
          *(_QWORD *)v39 = *(_QWORD *)v40;
          v96 = 1;
          break;
        case 2:
          v98 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 32);
          v99 = v21;
          v100 = v21 + 1;
          v98(v39, v40, v193);
          v22 = v100;
          v21 = v99;
          v96 = 2;
          break;
        case 3:
          v101 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 32);
          v102 = v21;
          v103 = v21 + 1;
          v101(v39, v40, v193);
          v22 = v103;
          v21 = v102;
          v96 = 3;
          break;
        case 4:
          v104 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 32);
          v105 = v21;
          v106 = v21 + 1;
          v104(v39, v40, v193);
          v22 = v106;
          v21 = v105;
          v96 = 4;
          break;
        case 5:
          v107 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 32);
          v108 = v21;
          v109 = v21 + 1;
          v107(v39, v40, v193);
          v22 = v109;
          v21 = v108;
          v96 = 5;
          break;
        case 6:
          v124 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 32);
          v125 = v21;
          v126 = v21 + 1;
          v124(v39, v40, v193);
          v22 = v126;
          v21 = v125;
          v96 = 6;
          break;
        case 7:
          v110 = *(_OWORD *)v40;
          *(_OWORD *)(v39 + 9) = *(_OWORD *)(v40 + 9);
          *(_OWORD *)v39 = v110;
          v96 = 7;
          break;
        case 8:
          *(_QWORD *)v39 = *(_QWORD *)v40;
          v96 = 8;
          break;
        case 9:
          *(_QWORD *)v39 = *(_QWORD *)v40;
          v96 = 9;
          break;
        default:
          if (v21 <= 3)
            v73 = v21;
          else
            v73 = 4;
          __asm { BR              X12 }
          return result;
      }
      *(_BYTE *)(v39 + v21) = v96;
      v127 = ((v39 | 7) + v22) & 0xFFFFFFFFFFFFFFF8;
      v128 = ((v40 | 7) + v22) & 0xFFFFFFFFFFFFFFF8;
      v129 = *(_OWORD *)v128;
      v130 = *(_OWORD *)(v128 + 16);
      v131 = *(_OWORD *)(v128 + 48);
      *(_OWORD *)(v127 + 32) = *(_OWORD *)(v128 + 32);
      *(_OWORD *)(v127 + 48) = v131;
      *(_OWORD *)v127 = v129;
      *(_OWORD *)(v127 + 16) = v130;
      v132 = *(_OWORD *)(v128 + 64);
      v133 = *(_OWORD *)(v128 + 80);
      v134 = *(_OWORD *)(v128 + 96);
      *(_OWORD *)(v127 + 106) = *(_OWORD *)(v128 + 106);
      *(_OWORD *)(v127 + 80) = v133;
      *(_OWORD *)(v127 + 96) = v134;
      *(_OWORD *)(v127 + 64) = v132;
      *(_BYTE *)(v127 + 122) = *(_BYTE *)(v128 + 122);
      *(_BYTE *)(v127 + 123) = *(_BYTE *)(v128 + 123);
      *(_BYTE *)(v127 + 124) = *(_BYTE *)(v128 + 124);
      *(_BYTE *)(v127 + 125) = *(_BYTE *)(v128 + 125);
      *(_BYTE *)(v127 + 126) = *(_BYTE *)(v128 + 126);
      *(_QWORD *)((v127 + 134) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v128 + 134) & 0xFFFFFFFFFFFFF8);
      if (v30 <= 3)
      {
        v88 = ((1 << v31) + 1) >> v31;
        if (v88 > 0xFFF5)
        {
          *(_DWORD *)(v39 + v30) = 0;
          goto LABEL_243;
        }
        if (v88 > 0xF5)
        {
          *(_WORD *)(v39 + v30) = 0;
          goto LABEL_243;
        }
      }
      *(_BYTE *)(v39 + v30) = 0;
      if (v30 <= 3)
        goto LABEL_235;
      goto LABEL_238;
    case 1u:
      v77 = a1;
      switch(*(_BYTE *)(v40 + v21))
      {
        case 0:
          v97 = 0;
          *(_BYTE *)v39 = *(_BYTE *)v40;
          break;
        case 1:
          *(_QWORD *)v39 = *(_QWORD *)v40;
          v97 = 1;
          break;
        case 2:
          v111 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 32);
          v112 = v21;
          v113 = v21 + 1;
          v111(v39, v40, v193);
          v22 = v113;
          v21 = v112;
          v97 = 2;
          break;
        case 3:
          v114 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 32);
          v115 = v21;
          v116 = v21 + 1;
          v114(v39, v40, v193);
          v22 = v116;
          v21 = v115;
          v97 = 3;
          break;
        case 4:
          v117 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 32);
          v118 = v21;
          v119 = v21 + 1;
          v117(v39, v40, v193);
          v22 = v119;
          v21 = v118;
          v97 = 4;
          break;
        case 5:
          v120 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 32);
          v121 = v21;
          v122 = v21 + 1;
          v120(v39, v40, v193);
          v22 = v122;
          v21 = v121;
          v97 = 5;
          break;
        case 6:
          v135 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 32);
          v136 = v21;
          v137 = v21 + 1;
          v135(v39, v40, v193);
          v22 = v137;
          v21 = v136;
          v97 = 6;
          break;
        case 7:
          v123 = *(_OWORD *)v40;
          *(_OWORD *)(v39 + 9) = *(_OWORD *)(v40 + 9);
          *(_OWORD *)v39 = v123;
          v97 = 7;
          break;
        case 8:
          *(_QWORD *)v39 = *(_QWORD *)v40;
          v97 = 8;
          break;
        case 9:
          *(_QWORD *)v39 = *(_QWORD *)v40;
          v97 = 9;
          break;
        default:
          if (v21 <= 3)
            v74 = v21;
          else
            v74 = 4;
          __asm { BR              X12 }
          return result;
      }
      *(_BYTE *)(v39 + v21) = v97;
      v138 = ((v39 | 7) + v22) & 0xFFFFFFFFFFFFFFF8;
      v139 = ((v40 | 7) + v22) & 0xFFFFFFFFFFFFFFF8;
      v140 = *(_OWORD *)v139;
      v141 = *(_OWORD *)(v139 + 16);
      v142 = *(_OWORD *)(v139 + 48);
      *(_OWORD *)(v138 + 32) = *(_OWORD *)(v139 + 32);
      *(_OWORD *)(v138 + 48) = v142;
      *(_OWORD *)v138 = v140;
      *(_OWORD *)(v138 + 16) = v141;
      v143 = *(_OWORD *)(v139 + 64);
      v144 = *(_OWORD *)(v139 + 80);
      v145 = *(_OWORD *)(v139 + 96);
      *(_OWORD *)(v138 + 106) = *(_OWORD *)(v139 + 106);
      *(_OWORD *)(v138 + 80) = v144;
      *(_OWORD *)(v138 + 96) = v145;
      *(_OWORD *)(v138 + 64) = v143;
      *(_BYTE *)(v138 + 122) = *(_BYTE *)(v139 + 122);
      *(_BYTE *)(v138 + 123) = *(_BYTE *)(v139 + 123);
      *(_BYTE *)(v138 + 124) = *(_BYTE *)(v139 + 124);
      *(_BYTE *)(v138 + 125) = *(_BYTE *)(v139 + 125);
      *(_BYTE *)(v138 + 126) = *(_BYTE *)(v139 + 126);
      *(_QWORD *)((v138 + 134) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v139 + 134) & 0xFFFFFFFFFFFFF8);
      if (v30 > 3)
        goto LABEL_233;
      v95 = 1;
      v88 = ((1 << v31) + 1) >> v31;
      if (v88 > 0xFFF5)
        goto LABEL_242;
      if (v88 <= 0xF5)
      {
LABEL_233:
        v83 = 1;
        goto LABEL_234;
      }
      *(_WORD *)(v39 + v30) = 1;
      goto LABEL_243;
    case 2u:
      *(_QWORD *)v39 = *(_QWORD *)v40;
      v75 = (_BYTE *)((v24 + v39) & v72);
      v76 = (_BYTE *)((v24 + v40) & v72);
      v77 = a1;
      switch(v76[v21])
      {
        case 0:
          *v75 = *v76;
          v75[v21] = 0;
          break;
        case 1:
          *(_QWORD *)v75 = *(_QWORD *)v76;
          v75[v21] = 1;
          break;
        case 2:
          v159 = *(void (**)(unint64_t))(v11 + 32);
          v160 = v21;
          v159((v24 + v39) & v72);
          v75[v160] = 2;
          break;
        case 3:
          v161 = *(void (**)(unint64_t))(v11 + 32);
          v162 = v21;
          v161((v24 + v39) & v72);
          v75[v162] = 3;
          break;
        case 4:
          v163 = *(void (**)(unint64_t))(v11 + 32);
          v164 = v21;
          v163((v24 + v39) & v72);
          v75[v164] = 4;
          break;
        case 5:
          v165 = *(void (**)(unint64_t))(v11 + 32);
          v166 = v21;
          v165((v24 + v39) & v72);
          v75[v166] = 5;
          break;
        case 6:
          v167 = *(void (**)(unint64_t))(v11 + 32);
          v168 = v21;
          v167((v24 + v39) & v72);
          v75[v168] = 6;
          break;
        case 7:
          v169 = *(_OWORD *)v76;
          *(_OWORD *)(((v24 + v39) & v72) + 9) = *(_OWORD *)(((v24 + v40) & v72) + 9);
          *(_OWORD *)v75 = v169;
          v75[v21] = 7;
          break;
        case 8:
          *(_QWORD *)v75 = *(_QWORD *)v76;
          v75[v21] = 8;
          break;
        case 9:
          *(_QWORD *)v75 = *(_QWORD *)v76;
          v75[v21] = 9;
          break;
        default:
          memcpy((void *)((v24 + v39) & v72), v76, v21 + 1);
          v77 = a1;
          break;
      }
      if (v30 > 3)
        goto LABEL_149;
      v88 = ((1 << v31) + 1) >> v31;
      if (v88 > 0xFFF5)
      {
        v95 = 2;
        goto LABEL_242;
      }
      if (v88 <= 0xF5)
      {
LABEL_149:
        v83 = 2;
        goto LABEL_234;
      }
      *(_WORD *)(v39 + v30) = 2;
      goto LABEL_243;
    case 3u:
      *(_QWORD *)v39 = *(_QWORD *)v40;
      v78 = (_BYTE *)((v24 + v39) & v72);
      v79 = (_BYTE *)((v24 + v40) & v72);
      v77 = a1;
      switch(v79[v21])
      {
        case 0:
          *v78 = *v79;
          v78[v21] = 0;
          break;
        case 1:
          *(_QWORD *)v78 = *(_QWORD *)v79;
          v78[v21] = 1;
          break;
        case 2:
          v170 = *(void (**)(unint64_t))(v11 + 32);
          v171 = v21;
          v170((v24 + v39) & v72);
          v78[v171] = 2;
          break;
        case 3:
          v172 = *(void (**)(unint64_t))(v11 + 32);
          v173 = v21;
          v172((v24 + v39) & v72);
          v78[v173] = 3;
          break;
        case 4:
          v174 = *(void (**)(unint64_t))(v11 + 32);
          v175 = v21;
          v174((v24 + v39) & v72);
          v78[v175] = 4;
          break;
        case 5:
          v176 = *(void (**)(unint64_t))(v11 + 32);
          v177 = v21;
          v176((v24 + v39) & v72);
          v78[v177] = 5;
          break;
        case 6:
          v178 = *(void (**)(unint64_t))(v11 + 32);
          v179 = v21;
          v178((v24 + v39) & v72);
          v78[v179] = 6;
          break;
        case 7:
          v180 = *(_OWORD *)v79;
          *(_OWORD *)(((v24 + v39) & v72) + 9) = *(_OWORD *)(((v24 + v40) & v72) + 9);
          *(_OWORD *)v78 = v180;
          v78[v21] = 7;
          break;
        case 8:
          *(_QWORD *)v78 = *(_QWORD *)v79;
          v78[v21] = 8;
          break;
        case 9:
          *(_QWORD *)v78 = *(_QWORD *)v79;
          v78[v21] = 9;
          break;
        default:
          memcpy((void *)((v24 + v39) & v72), v79, v21 + 1);
          v77 = a1;
          break;
      }
      if (v30 > 3)
        goto LABEL_152;
      v88 = ((1 << v31) + 1) >> v31;
      if (v88 > 0xFFF5)
      {
        v95 = 3;
        goto LABEL_242;
      }
      if (v88 <= 0xF5)
      {
LABEL_152:
        v83 = 3;
        goto LABEL_234;
      }
      *(_WORD *)(v39 + v30) = 3;
      goto LABEL_243;
    case 4u:
      *(_QWORD *)v39 = *(_QWORD *)v40;
      v80 = (_BYTE *)((v24 + v39) & v72);
      v81 = (_BYTE *)((v24 + v40) & v72);
      v77 = a1;
      switch(v81[v21])
      {
        case 0:
          *v80 = *v81;
          v80[v21] = 0;
          break;
        case 1:
          *(_QWORD *)v80 = *(_QWORD *)v81;
          v80[v21] = 1;
          break;
        case 2:
          v181 = *(void (**)(unint64_t))(v11 + 32);
          v182 = v21;
          v181((v24 + v39) & v72);
          v80[v182] = 2;
          break;
        case 3:
          v183 = *(void (**)(unint64_t))(v11 + 32);
          v184 = v21;
          v183((v24 + v39) & v72);
          v80[v184] = 3;
          break;
        case 4:
          v185 = *(void (**)(unint64_t))(v11 + 32);
          v186 = v21;
          v185((v24 + v39) & v72);
          v80[v186] = 4;
          break;
        case 5:
          v187 = *(void (**)(unint64_t))(v11 + 32);
          v188 = v21;
          v187((v24 + v39) & v72);
          v80[v188] = 5;
          break;
        case 6:
          v189 = *(void (**)(unint64_t))(v11 + 32);
          v190 = v21;
          v189((v24 + v39) & v72);
          v80[v190] = 6;
          break;
        case 7:
          v191 = *(_OWORD *)v81;
          *(_OWORD *)(((v24 + v39) & v72) + 9) = *(_OWORD *)(((v24 + v40) & v72) + 9);
          *(_OWORD *)v80 = v191;
          v80[v21] = 7;
          break;
        case 8:
          *(_QWORD *)v80 = *(_QWORD *)v81;
          v80[v21] = 8;
          break;
        case 9:
          *(_QWORD *)v80 = *(_QWORD *)v81;
          v80[v21] = 9;
          break;
        default:
          memcpy((void *)((v24 + v39) & v72), v81, v21 + 1);
          v77 = a1;
          break;
      }
      if (v30 > 3)
        goto LABEL_155;
      v88 = ((1 << v31) + 1) >> v31;
      if (v88 > 0xFFF5)
      {
        v95 = 4;
        goto LABEL_242;
      }
      if (v88 <= 0xF5)
      {
LABEL_155:
        v83 = 4;
        goto LABEL_234;
      }
      *(_WORD *)(v39 + v30) = 4;
      goto LABEL_243;
    case 5u:
      v82 = *(_OWORD *)v40;
      *(_QWORD *)(v39 + 16) = *(_QWORD *)(v40 + 16);
      *(_OWORD *)v39 = v82;
      v77 = a1;
      if (v30 > 3)
        goto LABEL_125;
      v88 = ((1 << v31) + 1) >> v31;
      if (v88 > 0xFFF5)
      {
        v95 = 5;
        goto LABEL_242;
      }
      if (v88 <= 0xF5)
      {
LABEL_125:
        v83 = 5;
        goto LABEL_234;
      }
      *(_WORD *)(v39 + v30) = 5;
      goto LABEL_243;
    case 6u:
      *(_QWORD *)v39 = *(_QWORD *)v40;
      v77 = a1;
      if (v30 > 3)
        goto LABEL_143;
      v88 = ((1 << v31) + 1) >> v31;
      if (v88 > 0xFFF5)
      {
        v95 = 6;
        goto LABEL_242;
      }
      if (v88 <= 0xF5)
      {
LABEL_143:
        v83 = 6;
        goto LABEL_234;
      }
      *(_WORD *)(v39 + v30) = 6;
      goto LABEL_243;
    case 7u:
      v84 = ~v15;
      if ((*(_DWORD *)(v14 + 84) & 0x80000000) != 0)
      {
        v91 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v14 + 48))((v40 + v15 + 8) & v84, *(unsigned int *)(v14 + 84), v192);
        v26 = v15 + 8;
        if (v91)
        {
LABEL_130:
          memcpy((void *)v39, (const void *)v40, v27);
          goto LABEL_188;
        }
      }
      else
      {
        v85 = *(_QWORD *)v40;
        if (*(_QWORD *)v40 >= 0xFFFFFFFFuLL)
          LODWORD(v85) = -1;
        if ((_DWORD)v85 != -1)
          goto LABEL_130;
      }
      *(_QWORD *)v39 = *(_QWORD *)v40;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 32))((v26 + v39) & v84, (v40 + v15 + 8) & v84, v192);
LABEL_188:
      v77 = a1;
      v92 = ((v40 | 7) + v27) & 0xFFFFFFFFFFFFFFF8;
      v93 = *(_OWORD *)v92;
      v94 = ((v39 | 7) + v27) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)(v94 + 16) = *(_QWORD *)(v92 + 16);
      *(_OWORD *)v94 = v93;
      if (v30 > 3)
        goto LABEL_189;
      v88 = ((1 << v31) + 1) >> v31;
      if (v88 > 0xFFF5)
      {
        v95 = 7;
        goto LABEL_242;
      }
      if (v88 <= 0xF5)
      {
LABEL_189:
        v83 = 7;
        goto LABEL_234;
      }
      *(_WORD *)(v39 + v30) = 7;
      goto LABEL_243;
    case 8u:
      if (*(_DWORD *)(v11 + 84) >= 0xFDu)
      {
        v77 = a1;
        if (!(*(unsigned int (**)(uint64_t))(v11 + 48))(v40))
          goto LABEL_173;
LABEL_172:
        memcpy((void *)v39, (const void *)v40, v20 + 1);
        goto LABEL_174;
      }
      v77 = a1;
      if (*(unsigned __int8 *)(v40 + v20) >= 3u)
        goto LABEL_172;
LABEL_173:
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 32))(v39, v40, v193);
      *(_BYTE *)(v39 + v20) = *(_BYTE *)(v40 + v20);
LABEL_174:
      *(_QWORD *)(((v39 | 7) + v20 + 1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v40 | 7) + v20 + 1) & 0xFFFFFFFFFFFFF8);
      if (v30 <= 3)
      {
        v88 = ((1 << v31) + 1) >> v31;
        if (v88 > 0xFFF5)
        {
          v95 = 8;
LABEL_242:
          *(_DWORD *)(v39 + v30) = v95;
        }
        else
        {
          if (v88 <= 0xF5)
            goto LABEL_177;
          *(_WORD *)(v39 + v30) = 8;
        }
LABEL_243:
        v148 = v88 > 0xFFF5;
        v147 = 2;
        if (v148)
          v147 = 4;
        goto LABEL_245;
      }
LABEL_177:
      v83 = 8;
LABEL_234:
      *(_BYTE *)(v39 + v30) = v83;
      if (v30 > 3)
        goto LABEL_238;
LABEL_235:
      v146 = ((1 << v31) + 1) >> v31;
      v147 = 2;
      if (v146 > 0xFFF5)
        v147 = 4;
      if (v146 <= 0xF5)
LABEL_238:
        v147 = 1;
LABEL_245:
      v149 = v147 + v30;
      v150 = v149 + v39;
      v151 = v149 + v40;
      *(_BYTE *)v150 = *(_BYTE *)v151;
      v150 &= 0xFFFFFFFFFFFFFFF8;
      v151 &= 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)(v150 + 8) = *(_OWORD *)(v151 + 8);
      *(_QWORD *)((v150 + 31) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v151 + 31) & 0xFFFFFFFFFFFFF8);
      if (v30 > 3)
        goto LABEL_249;
      v152 = ((1 << v31) + 1) >> v31;
      v153 = 2;
      if (v152 > 0xFFF5)
        v153 = 4;
      if (v152 <= 0xF5)
LABEL_249:
        v153 = 1;
      v154 = ((((v153 + v30) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
      *(_QWORD *)((v39 + v154) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v40 + v154) & 0xFFFFFFFFFFFFF8);
      if (v30 > 3)
        goto LABEL_254;
LABEL_251:
      v155 = ((1 << v31) + 1) >> v31;
      v156 = 2;
      if (v155 > 0xFFF5)
        v156 = 4;
      if (v155 <= 0xF5)
LABEL_254:
        v156 = 1;
      v157 = ((((((v156 + v30) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
      *(_BYTE *)(v157 + v39) = *(_BYTE *)(v157 + v40);
      return v77;
    case 9u:
      *(_BYTE *)v39 = *(_BYTE *)v40;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v17 + 32))((v18 + 1 + v39) & ~v18, (v18 + 1 + v40) & ~v18, v16);
      v77 = a1;
      if (v30 > 3)
        goto LABEL_132;
      v88 = ((1 << v31) + 1) >> v31;
      if (v88 > 0xFFF5)
      {
        v95 = 9;
        goto LABEL_242;
      }
      if (v88 <= 0xF5)
      {
LABEL_132:
        v83 = 9;
        goto LABEL_234;
      }
      *(_WORD *)(v39 + v30) = 9;
      goto LABEL_243;
    default:
      if (v30 > 3)
        goto LABEL_137;
      v86 = ((1 << v31) + 1) >> v31;
      v87 = 2;
      if (v86 > 0xFFF5)
        v87 = 4;
      if (v86 <= 0xF5)
LABEL_137:
        v87 = 1;
      v77 = a1;
      memcpy((void *)v39, (const void *)v40, v87 + v30);
      if (v30 > 3)
        goto LABEL_238;
      goto LABEL_235;
  }
}

void *sub_1004E4D4C(void *a1, char *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  size_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  char v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  size_t v40;
  int v41;
  char v42;
  int v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  char v50;
  unsigned int v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  unsigned int v55;
  unsigned int v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  char v60;
  int v61;
  unsigned int v62;
  int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  char v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  int v72;
  unsigned int v73;
  char v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  int v78;
  unsigned int v79;
  char v80;
  int v81;
  int v82;
  unsigned int v83;
  uint64_t v84;
  unint64_t v85;
  unsigned int v86;
  char v87;
  unsigned int v88;
  unsigned int v89;
  uint64_t v90;
  unsigned int v91;
  uint64_t v92;
  char v93;
  int v94;
  unsigned int v95;
  int v96;
  int v97;
  int v98;
  unsigned int v99;
  char v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  int v104;
  unsigned int v105;
  char v106;
  int v107;
  int v108;
  unsigned int v109;
  uint64_t v110;
  unint64_t v111;
  unsigned int v112;
  char v113;
  unsigned int v114;
  unsigned int v115;
  uint64_t v116;
  unsigned int v117;
  uint64_t v118;
  char v119;
  int v120;
  unsigned int v121;
  int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  char v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  unsigned int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  size_t v136;
  id *v137;
  id v138;
  id v139;
  int v140;
  unint64_t v141;
  void (*v142)(unint64_t, uint64_t);
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  unsigned int v147;
  int v148;
  unsigned int v149;
  unsigned int v150;
  char v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  int v155;
  unsigned int v156;
  unsigned int v157;
  uint64_t v158;
  uint64_t v159;
  unsigned int v160;
  uint64_t v161;
  uint64_t v162;
  _BYTE *v163;
  _BYTE *v164;
  _BYTE *v165;
  _BYTE *v166;
  _BYTE *v167;
  _BYTE *v168;
  __int128 v169;
  unsigned int v170;
  char v171;
  size_t v172;
  uint64_t v173;
  uint64_t v174;
  int v175;
  unsigned int v176;
  int v177;
  int v178;
  unsigned int v179;
  unsigned int v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void **v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  id v191;
  uint64_t v192;
  id v193;
  int v194;
  unsigned int v195;
  unsigned int v196;
  size_t v197;
  unsigned int v198;
  __n128 v199;
  unint64_t v200;
  unint64_t v201;
  unint64_t v202;
  __int128 v203;
  unint64_t v204;
  uint64_t v205;
  unsigned int v206;
  size_t v207;
  __n128 v208;
  unint64_t v209;
  unint64_t v210;
  unsigned int v211;
  __int16 v212;
  char v213;
  char v214;
  size_t v215;
  unint64_t v216;
  unint64_t v217;
  int v218;
  unsigned int v219;
  uint64_t v220;
  unint64_t v221;
  unsigned int v222;
  uint64_t v223;
  __int128 v224;
  unint64_t v225;
  unint64_t v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  unint64_t v234;
  unint64_t v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  __int128 v240;
  __int128 v241;
  unsigned int v242;
  uint64_t v243;
  BOOL v244;
  uint64_t v245;
  unint64_t v246;
  uint64_t v247;
  unint64_t v248;
  unint64_t v249;
  int v250;
  unsigned int v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  _BYTE *v255;
  _BYTE *v256;
  _BYTE *v257;
  _BYTE *v258;
  _BYTE *v259;
  _BYTE *v260;
  __int128 v261;
  char v262;
  uint64_t v263;
  uint64_t v264;
  int v265;
  unsigned int v266;
  uint64_t v267;
  unsigned int v268;
  size_t v269;
  unsigned int v270;
  unsigned int v271;
  size_t v272;
  size_t v273;
  size_t v274;
  uint64_t v275;
  unint64_t v276;
  __int128 v277;
  unint64_t v278;
  int v279;
  char v280;
  char v281;
  __int128 v282;
  __int128 v283;
  unint64_t v284;
  unint64_t v285;
  __int128 v286;
  __int128 v287;
  __int128 v288;
  __int128 v289;
  __int128 v290;
  __int128 v291;
  unint64_t v292;
  unint64_t v293;
  __int128 v294;
  __int128 v295;
  __int128 v296;
  __int128 v297;
  __int128 v298;
  __int128 v299;
  unsigned int v300;
  uint64_t v301;
  uint64_t v302;
  unint64_t v303;
  unint64_t v304;
  unint64_t v305;
  unint64_t v306;
  uint64_t v307;
  uint64_t *v308;
  uint64_t v309;
  unsigned int v310;
  uint64_t v311;
  unint64_t v312;
  unsigned int v313;
  uint64_t v314;
  unint64_t v315;
  void *result;
  __int128 v317;
  __int128 v318;
  __int128 v319;
  __int128 v320;
  __int128 v321;
  __int128 v322;
  size_t v323;
  size_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  size_t __n;
  uint64_t v333;
  unsigned int v334;
  uint64_t v335;
  unsigned int v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (v7)
  {
    if (v8)
    {
      if (*(_DWORD *)(v5 + 84))
        v9 = *(_QWORD *)(v5 + 64);
      else
        v9 = *(_QWORD *)(v5 + 64) + 1;
      v10 = a1;
LABEL_12:
      memcpy(v10, a2, v9);
      goto LABEL_15;
    }
    (*(void (**)(void *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  else
  {
    if (v8)
    {
      (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
      if (*(_DWORD *)(v5 + 84))
        v9 = *(_QWORD *)(v5 + 64);
      else
        v9 = *(_QWORD *)(v5 + 64) + 1;
      v10 = a1;
      goto LABEL_12;
    }
    (*(void (**)(void *, char *, uint64_t))(v5 + 40))(a1, a2, v4);
  }
LABEL_15:
  if (*(_DWORD *)(v5 + 84))
    v11 = *(_QWORD *)(v5 + 64);
  else
    v11 = *(_QWORD *)(v5 + 64) + 1;
  v340 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v340 - 8);
  v13 = *(_DWORD *)(v12 + 80) & 0xF8;
  v14 = v13 | 7;
  v339 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v15 = *(_QWORD *)(v339 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = type metadata accessor for AnyTip(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = v16 | v19 | v13 | 7;
  v21 = *(_QWORD *)(v12 + 64);
  if (v21 <= 0x19)
    v22 = 25;
  else
    v22 = *(_QWORD *)(v12 + 64);
  v23 = v22 + 1;
  v24 = (((v22 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  v25 = v13 + 15;
  v26 = v16 + 8;
  v27 = *(_QWORD *)(v15 + 64) + ((v16 + 8) & ~v16);
  if (v22 + 1 + ((v13 + 15) & (unint64_t)~v14) > v24)
    v24 = v22 + 1 + ((v13 + 15) & ~v14);
  if (v24 <= ((v27 + 7) & 0xFFFFFFFFFFFFFFF8) + 24)
    v24 = ((v27 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v24 <= (v21 & 0xFFFFFFFFFFFFFFF8) + 16)
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 16;
  v28 = v19 + 1;
  if (v24 <= *(_QWORD *)(v18 + 64) + ((v19 + 1) & (unint64_t)~v19))
    v24 = *(_QWORD *)(v18 + 64) + ((v19 + 1) & ~v19);
  if (v24 <= 0x18)
    v29 = 24;
  else
    v29 = v24;
  v30 = (unint64_t)&a2[v20 + v11];
  if (v29 > 3)
  {
    v31 = 11;
LABEL_34:
    v32 = 8;
    goto LABEL_35;
  }
  v36 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  if (v36 > 0xFFF5)
  {
    v34 = 0x7FFFFFFF;
    goto LABEL_44;
  }
  v31 = v36 + 10;
  if (v36 <= 0xF5)
    goto LABEL_34;
  v32 = 16;
LABEL_35:
  v33 = (1 << v32) - v31;
  v34 = 0x7FFFFFFF;
  if (v33 <= 0x7FFFFFFF)
    v35 = 0x7FFFFFFF;
  else
    v35 = v33;
  if ((v33 & 0x80000000) == 0)
    v34 = v35;
LABEL_44:
  v37 = ((unint64_t)a1 + v20 + v11) & ~v20;
  v38 = v30 & ~v20;
  v39 = *(_DWORD *)(v12 + 84);
  v40 = v21 + 1;
  if (v29 > 3)
  {
    v41 = 11;
    goto LABEL_46;
  }
  v44 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  if (v44 <= 0xFFF5)
  {
    v41 = v44 + 10;
    if (v44 > 0xF5)
    {
      v42 = 16;
LABEL_47:
      v43 = (1 << v42) - v41;
      if ((v43 & 0x80000000) == 0)
        goto LABEL_53;
      goto LABEL_52;
    }
LABEL_46:
    v42 = 8;
    goto LABEL_47;
  }
LABEL_52:
  v43 = 0x7FFFFFFF;
LABEL_53:
  v45 = ~v14;
  v46 = *(unsigned int *)(v15 + 84);
  v47 = ~v16;
  v48 = ~v19;
  if (v43 == v34)
  {
    if (v29 <= 3)
    {
      v55 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      if (v55 > 0xFFF5)
        goto LABEL_72;
      v49 = v55 + 10;
      if (v55 > 0xF5)
      {
        v50 = 16;
LABEL_57:
        v51 = (1 << v50) - v49;
        if ((v51 & 0x80000000) == 0)
        {
          if (v29 > 3)
            goto LABEL_76;
LABEL_73:
          v56 = ((1 << (8 * v29)) + 1) >> (8 * v29);
          v57 = 2;
          if (v56 > 0xFFF5)
            v57 = 4;
          if (v56 > 0xF5)
          {
LABEL_77:
            v58 = v34 - v51;
            if (v34 <= v51)
              goto LABEL_93;
            v59 = v57 + v29;
            v60 = 8 * (v57 + v29);
            if (v59 > 3)
            {
LABEL_79:
              v61 = *(unsigned __int8 *)(v37 + v59);
              if (!*(_BYTE *)(v37 + v59))
                goto LABEL_93;
              goto LABEL_86;
            }
            v62 = ((v58 + ~(-1 << v60)) >> v60) + 1;
            if (HIWORD(v62))
            {
              v61 = *(_DWORD *)(v37 + v59);
              if (!v61)
                goto LABEL_93;
            }
            else
            {
              if (v62 <= 0xFF)
              {
                if (v62 < 2)
                {
LABEL_93:
                  if (!v51)
                    goto LABEL_105;
                  if (v29 <= 3)
                  {
                    v70 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                    if (v70 > 0xFFF5)
                    {
                      v65 = *(_DWORD *)(v37 + v29);
                      v66 = ~v65;
                      goto LABEL_103;
                    }
                    v68 = v70 + 10;
                    if (v70 > 0xF5)
                    {
                      v97 = *(unsigned __int16 *)(v37 + v29);
                      v65 = v97 | 0xFFFF0000;
                      v66 = v97 ^ 0xFFFF;
                      v67 = 16;
                    }
                    else
                    {
                      v71 = *(unsigned __int8 *)(v37 + v29);
                      v65 = v71 | 0xFFFFFF00;
                      v66 = v71 ^ 0xFF;
                      v67 = 8;
                    }
                  }
                  else
                  {
                    v64 = *(unsigned __int8 *)(v37 + v29);
                    v65 = v64 | 0xFFFFFF00;
                    v66 = v64 ^ 0xFF;
                    v67 = 8;
                    v68 = 11;
                  }
                  v69 = (1 << v67) - v68;
                  if ((v69 & 0x80000000) == 0)
                  {
                    if (v69 <= v66)
                      goto LABEL_105;
                    goto LABEL_104;
                  }
LABEL_103:
                  if (v66 >= 0x7FFFFFFF)
                    goto LABEL_105;
LABEL_104:
                  if (!v65)
                    goto LABEL_105;
LABEL_166:
                  if (v29 <= 3)
                  {
                    v99 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                    if (v99 > 0xFFF5)
                    {
                      v102 = 0x7FFFFFFF;
                      if (v29 > 3)
                      {
LABEL_177:
                        v104 = 11;
                        goto LABEL_181;
                      }
LABEL_179:
                      v105 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                      if (v105 > 0xFFF5)
                        goto LABEL_186;
                      v104 = v105 + 10;
                      if (v105 > 0xF5)
                      {
                        v106 = 16;
LABEL_182:
                        v107 = (1 << v106) - v104;
                        if ((v107 & 0x80000000) == 0)
                        {
                          if (v107 == v102)
                            goto LABEL_184;
                          goto LABEL_187;
                        }
LABEL_186:
                        if (v102 == 0x7FFFFFFF)
                        {
LABEL_184:
                          if (v29 <= 3)
                          {
                            v112 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                            if (v112 > 0xFFF5)
                              goto LABEL_202;
                            v108 = v112 + 10;
                            if (v112 > 0xF5)
                            {
                              v113 = 16;
LABEL_199:
                              v114 = (1 << v113) - v108;
                              if ((v114 & 0x80000000) == 0)
                              {
                                if (v29 > 3)
                                  goto LABEL_206;
LABEL_203:
                                v115 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                v116 = 2;
                                if (v115 > 0xFFF5)
                                  v116 = 4;
                                if (v115 > 0xF5)
                                {
LABEL_207:
                                  v117 = v102 - v114;
                                  if (v102 <= v114)
                                    goto LABEL_276;
                                  v118 = v116 + v29;
                                  v119 = 8 * (v116 + v29);
                                  if (v118 <= 3)
                                  {
                                    v121 = ((v117 + ~(-1 << v119)) >> v119) + 1;
                                    if (HIWORD(v121))
                                    {
                                      v120 = *(_DWORD *)(v38 + v118);
                                      if (!v120)
                                        goto LABEL_276;
                                      goto LABEL_219;
                                    }
                                    if (v121 > 0xFF)
                                    {
                                      v120 = *(unsigned __int16 *)(v38 + v118);
                                      if (!*(_WORD *)(v38 + v118))
                                        goto LABEL_276;
                                      goto LABEL_219;
                                    }
                                    if (v121 < 2)
                                    {
LABEL_276:
                                      if (!v114)
                                        goto LABEL_288;
                                      if (v29 <= 3)
                                      {
                                        v154 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                        if (v154 > 0xFFF5)
                                        {
                                          v149 = *(_DWORD *)(v38 + v29);
                                          v150 = ~v149;
LABEL_286:
                                          if (v150 < 0x7FFFFFFF)
                                            goto LABEL_287;
                                          if (v29 > 3)
                                            goto LABEL_291;
LABEL_288:
                                          v156 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                          if (v156 > 0xFFF5)
                                          {
                                            v157 = *(_DWORD *)(v38 + v29);
                                            if (v157 < 0xA)
                                              goto LABEL_300;
                                            goto LABEL_296;
                                          }
                                          if (v156 > 0xF5)
                                          {
                                            v157 = *(unsigned __int16 *)(v38 + v29);
                                            if (v157 < 0xA)
                                            {
LABEL_300:
                                              switch(v157)
                                              {
                                                case 0u:
                                                  switch(*(_BYTE *)(v38 + v22))
                                                  {
                                                    case 0:
                                                      v213 = 0;
                                                      *(_BYTE *)v37 = *(_BYTE *)v38;
                                                      break;
                                                    case 1:
                                                      *(_QWORD *)v37 = *(_QWORD *)v38;
                                                      v213 = 1;
                                                      break;
                                                    case 2:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v340);
                                                      v23 = v22 + 1;
                                                      v213 = 2;
                                                      break;
                                                    case 3:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v340);
                                                      v23 = v22 + 1;
                                                      v213 = 3;
                                                      break;
                                                    case 4:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v340);
                                                      v23 = v22 + 1;
                                                      v213 = 4;
                                                      break;
                                                    case 5:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v340);
                                                      v23 = v22 + 1;
                                                      v213 = 5;
                                                      break;
                                                    case 6:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v340);
                                                      v23 = v22 + 1;
                                                      v213 = 6;
                                                      break;
                                                    case 7:
                                                      v224 = *(_OWORD *)v38;
                                                      *(_OWORD *)(v37 + 9) = *(_OWORD *)(v38 + 9);
                                                      *(_OWORD *)v37 = v224;
                                                      v213 = 7;
                                                      break;
                                                    case 8:
                                                      *(_QWORD *)v37 = *(_QWORD *)v38;
                                                      v213 = 8;
                                                      break;
                                                    case 9:
                                                      *(_QWORD *)v37 = *(_QWORD *)v38;
                                                      v213 = 9;
                                                      break;
                                                    default:
                                                      if (v22 <= 3)
                                                        v159 = v22;
                                                      else
                                                        v159 = 4;
                                                      __asm { BR              X12 }
                                                      return result;
                                                  }
                                                  *(_BYTE *)(v37 + v22) = v213;
                                                  v225 = ((v37 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
                                                  v226 = (v22 + v38 + 8) & 0xFFFFFFFFFFFFFFF8;
                                                  v227 = *(_OWORD *)v226;
                                                  v228 = *(_OWORD *)(v226 + 16);
                                                  v229 = *(_OWORD *)(v226 + 48);
                                                  *(_OWORD *)(v225 + 32) = *(_OWORD *)(v226 + 32);
                                                  *(_OWORD *)(v225 + 48) = v229;
                                                  *(_OWORD *)v225 = v227;
                                                  *(_OWORD *)(v225 + 16) = v228;
                                                  v230 = *(_OWORD *)(v226 + 64);
                                                  v231 = *(_OWORD *)(v226 + 80);
                                                  v232 = *(_OWORD *)(v226 + 96);
                                                  *(_OWORD *)(v225 + 106) = *(_OWORD *)(v226 + 106);
                                                  *(_OWORD *)(v225 + 80) = v231;
                                                  *(_OWORD *)(v225 + 96) = v232;
                                                  *(_OWORD *)(v225 + 64) = v230;
                                                  *(_BYTE *)(v225 + 122) = *(_BYTE *)(v226 + 122);
                                                  *(_BYTE *)(v225 + 123) = *(_BYTE *)(v226 + 123);
                                                  *(_BYTE *)(v225 + 124) = *(_BYTE *)(v226 + 124);
                                                  *(_BYTE *)(v225 + 125) = *(_BYTE *)(v226 + 125);
                                                  *(_BYTE *)(v225 + 126) = *(_BYTE *)(v226 + 126);
                                                  *(_QWORD *)((v225 + 134) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v226 + 134) & 0xFFFFFFFFFFFFF8);
                                                  if (v29 > 3)
                                                    goto LABEL_493;
                                                  v170 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v170 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 0;
                                                  }
                                                  else
                                                  {
                                                    if (v170 <= 0xF5)
                                                    {
LABEL_493:
                                                      *(_BYTE *)(v37 + v29) = 0;
                                                      goto LABEL_510;
                                                    }
                                                    *(_WORD *)(v37 + v29) = 0;
                                                  }
                                                  goto LABEL_516;
                                                case 1u:
                                                  switch(*(_BYTE *)(v38 + v22))
                                                  {
                                                    case 0:
                                                      v214 = 0;
                                                      *(_BYTE *)v37 = *(_BYTE *)v38;
                                                      break;
                                                    case 1:
                                                      *(_QWORD *)v37 = *(_QWORD *)v38;
                                                      v214 = 1;
                                                      break;
                                                    case 2:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v340);
                                                      v23 = v22 + 1;
                                                      v214 = 2;
                                                      break;
                                                    case 3:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v340);
                                                      v23 = v22 + 1;
                                                      v214 = 3;
                                                      break;
                                                    case 4:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v340);
                                                      v23 = v22 + 1;
                                                      v214 = 4;
                                                      break;
                                                    case 5:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v340);
                                                      v23 = v22 + 1;
                                                      v214 = 5;
                                                      break;
                                                    case 6:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v340);
                                                      v23 = v22 + 1;
                                                      v214 = 6;
                                                      break;
                                                    case 7:
                                                      v233 = *(_OWORD *)v38;
                                                      *(_OWORD *)(v37 + 9) = *(_OWORD *)(v38 + 9);
                                                      *(_OWORD *)v37 = v233;
                                                      v214 = 7;
                                                      break;
                                                    case 8:
                                                      *(_QWORD *)v37 = *(_QWORD *)v38;
                                                      v214 = 8;
                                                      break;
                                                    case 9:
                                                      *(_QWORD *)v37 = *(_QWORD *)v38;
                                                      v214 = 9;
                                                      break;
                                                    default:
                                                      if (v22 <= 3)
                                                        v162 = v22;
                                                      else
                                                        v162 = 4;
                                                      __asm { BR              X12 }
                                                      return result;
                                                  }
                                                  *(_BYTE *)(v37 + v22) = v214;
                                                  v234 = ((v37 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
                                                  v235 = (v22 + v38 + 8) & 0xFFFFFFFFFFFFFFF8;
                                                  v236 = *(_OWORD *)v235;
                                                  v237 = *(_OWORD *)(v235 + 16);
                                                  v238 = *(_OWORD *)(v235 + 48);
                                                  *(_OWORD *)(v234 + 32) = *(_OWORD *)(v235 + 32);
                                                  *(_OWORD *)(v234 + 48) = v238;
                                                  *(_OWORD *)v234 = v236;
                                                  *(_OWORD *)(v234 + 16) = v237;
                                                  v239 = *(_OWORD *)(v235 + 64);
                                                  v240 = *(_OWORD *)(v235 + 80);
                                                  v241 = *(_OWORD *)(v235 + 96);
                                                  *(_OWORD *)(v234 + 106) = *(_OWORD *)(v235 + 106);
                                                  *(_OWORD *)(v234 + 80) = v240;
                                                  *(_OWORD *)(v234 + 96) = v241;
                                                  *(_OWORD *)(v234 + 64) = v239;
                                                  *(_BYTE *)(v234 + 122) = *(_BYTE *)(v235 + 122);
                                                  *(_BYTE *)(v234 + 123) = *(_BYTE *)(v235 + 123);
                                                  *(_BYTE *)(v234 + 124) = *(_BYTE *)(v235 + 124);
                                                  *(_BYTE *)(v234 + 125) = *(_BYTE *)(v235 + 125);
                                                  *(_BYTE *)(v234 + 126) = *(_BYTE *)(v235 + 126);
                                                  *(_QWORD *)((v234 + 134) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v235 + 134) & 0xFFFFFFFFFFFFF8);
                                                  if (v29 > 3)
                                                    goto LABEL_508;
                                                  v212 = 1;
                                                  v170 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v170 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 1;
                                                    goto LABEL_516;
                                                  }
                                                  if (v170 > 0xF5)
                                                    goto LABEL_515;
LABEL_508:
                                                  v171 = 1;
                                                  goto LABEL_509;
                                                case 2u:
                                                  *(_QWORD *)v37 = *(_QWORD *)v38;
                                                  v163 = (_BYTE *)((v25 + v37) & v45);
                                                  v164 = (_BYTE *)((v25 + v38) & v45);
                                                  switch(v164[v22])
                                                  {
                                                    case 0:
                                                      *v163 = *v164;
                                                      v163[v22] = 0;
                                                      break;
                                                    case 1:
                                                      *(_QWORD *)v163 = *(_QWORD *)v164;
                                                      v163[v22] = 1;
                                                      break;
                                                    case 2:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v163[v22] = 2;
                                                      break;
                                                    case 3:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v163[v22] = 3;
                                                      break;
                                                    case 4:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v163[v22] = 4;
                                                      break;
                                                    case 5:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v163[v22] = 5;
                                                      break;
                                                    case 6:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v163[v22] = 6;
                                                      break;
                                                    case 7:
                                                      v317 = *(_OWORD *)v164;
                                                      *(_OWORD *)(((v25 + v37) & v45) + 9) = *(_OWORD *)(((v25 + v38) & v45) + 9);
                                                      *(_OWORD *)v163 = v317;
                                                      v163[v22] = 7;
                                                      break;
                                                    case 8:
                                                      *(_QWORD *)v163 = *(_QWORD *)v164;
                                                      v163[v22] = 8;
                                                      break;
                                                    case 9:
                                                      *(_QWORD *)v163 = *(_QWORD *)v164;
                                                      v163[v22] = 9;
                                                      break;
                                                    default:
                                                      memcpy((void *)((v25 + v37) & v45), v164, v23);
                                                      break;
                                                  }
                                                  if (v29 > 3)
                                                    goto LABEL_380;
                                                  v170 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v170 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 2;
                                                    goto LABEL_516;
                                                  }
                                                  if (v170 <= 0xF5)
                                                  {
LABEL_380:
                                                    v171 = 2;
                                                    goto LABEL_509;
                                                  }
                                                  v212 = 2;
                                                  goto LABEL_515;
                                                case 3u:
                                                  *(_QWORD *)v37 = *(_QWORD *)v38;
                                                  v165 = (_BYTE *)((v25 + v37) & v45);
                                                  v166 = (_BYTE *)((v25 + v38) & v45);
                                                  switch(v166[v22])
                                                  {
                                                    case 0:
                                                      *v165 = *v166;
                                                      v165[v22] = 0;
                                                      break;
                                                    case 1:
                                                      *(_QWORD *)v165 = *(_QWORD *)v166;
                                                      v165[v22] = 1;
                                                      break;
                                                    case 2:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v165[v22] = 2;
                                                      break;
                                                    case 3:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v165[v22] = 3;
                                                      break;
                                                    case 4:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v165[v22] = 4;
                                                      break;
                                                    case 5:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v165[v22] = 5;
                                                      break;
                                                    case 6:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v165[v22] = 6;
                                                      break;
                                                    case 7:
                                                      v318 = *(_OWORD *)v166;
                                                      *(_OWORD *)(((v25 + v37) & v45) + 9) = *(_OWORD *)(((v25 + v38) & v45) + 9);
                                                      *(_OWORD *)v165 = v318;
                                                      v165[v22] = 7;
                                                      break;
                                                    case 8:
                                                      *(_QWORD *)v165 = *(_QWORD *)v166;
                                                      v165[v22] = 8;
                                                      break;
                                                    case 9:
                                                      *(_QWORD *)v165 = *(_QWORD *)v166;
                                                      v165[v22] = 9;
                                                      break;
                                                    default:
                                                      memcpy((void *)((v25 + v37) & v45), v166, v23);
                                                      break;
                                                  }
                                                  if (v29 > 3)
                                                    goto LABEL_385;
                                                  v170 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v170 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 3;
                                                    goto LABEL_516;
                                                  }
                                                  if (v170 <= 0xF5)
                                                  {
LABEL_385:
                                                    v171 = 3;
                                                    goto LABEL_509;
                                                  }
                                                  v212 = 3;
                                                  goto LABEL_515;
                                                case 4u:
                                                  *(_QWORD *)v37 = *(_QWORD *)v38;
                                                  v167 = (_BYTE *)((v25 + v37) & v45);
                                                  v168 = (_BYTE *)((v25 + v38) & v45);
                                                  switch(v168[v22])
                                                  {
                                                    case 0:
                                                      *v167 = *v168;
                                                      v167[v22] = 0;
                                                      break;
                                                    case 1:
                                                      *(_QWORD *)v167 = *(_QWORD *)v168;
                                                      v167[v22] = 1;
                                                      break;
                                                    case 2:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v167[v22] = 2;
                                                      break;
                                                    case 3:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v167[v22] = 3;
                                                      break;
                                                    case 4:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v167[v22] = 4;
                                                      break;
                                                    case 5:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v167[v22] = 5;
                                                      break;
                                                    case 6:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v167[v22] = 6;
                                                      break;
                                                    case 7:
                                                      v319 = *(_OWORD *)v168;
                                                      *(_OWORD *)(((v25 + v37) & v45) + 9) = *(_OWORD *)(((v25 + v38) & v45) + 9);
                                                      *(_OWORD *)v167 = v319;
                                                      v167[v22] = 7;
                                                      break;
                                                    case 8:
                                                      *(_QWORD *)v167 = *(_QWORD *)v168;
                                                      v167[v22] = 8;
                                                      break;
                                                    case 9:
                                                      *(_QWORD *)v167 = *(_QWORD *)v168;
                                                      v167[v22] = 9;
                                                      break;
                                                    default:
                                                      memcpy((void *)((v25 + v37) & v45), v168, v23);
                                                      break;
                                                  }
                                                  if (v29 > 3)
                                                    goto LABEL_390;
                                                  v170 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v170 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 4;
                                                    goto LABEL_516;
                                                  }
                                                  if (v170 <= 0xF5)
                                                  {
LABEL_390:
                                                    v171 = 4;
                                                    goto LABEL_509;
                                                  }
                                                  v212 = 4;
                                                  goto LABEL_515;
                                                case 5u:
                                                  v169 = *(_OWORD *)v38;
                                                  *(_QWORD *)(v37 + 16) = *(_QWORD *)(v38 + 16);
                                                  *(_OWORD *)v37 = v169;
                                                  if (v29 > 3)
                                                    goto LABEL_324;
                                                  v170 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v170 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 5;
                                                    goto LABEL_516;
                                                  }
                                                  if (v170 <= 0xF5)
                                                  {
LABEL_324:
                                                    v171 = 5;
                                                    goto LABEL_509;
                                                  }
                                                  v212 = 5;
                                                  goto LABEL_515;
                                                case 6u:
                                                  *(_QWORD *)v37 = *(_QWORD *)v38;
                                                  if (v29 > 3)
                                                    goto LABEL_328;
                                                  v170 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v170 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 6;
                                                    goto LABEL_516;
                                                  }
                                                  if (v170 <= 0xF5)
                                                  {
LABEL_328:
                                                    v171 = 6;
                                                    goto LABEL_509;
                                                  }
                                                  v212 = 6;
                                                  goto LABEL_515;
                                                case 7u:
                                                  v172 = *(_QWORD *)(v15 + 64) + ((v16 + 8) & ~v16);
                                                  if ((v46 & 0x80000000) != 0)
                                                  {
                                                    v173 = v16 + 8;
                                                    v175 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v15 + 48))((v26 + v38) & v47, *(unsigned int *)(v15 + 84), v339);
                                                  }
                                                  else
                                                  {
                                                    v173 = v16 + 8;
                                                    v174 = *(_QWORD *)v38;
                                                    if (*(_QWORD *)v38 >= 0xFFFFFFFFuLL)
                                                      LODWORD(v174) = -1;
                                                    v175 = v174 + 1;
                                                  }
                                                  if (v175)
                                                  {
                                                    memcpy((void *)v37, (const void *)v38, v172);
                                                  }
                                                  else
                                                  {
                                                    *(_QWORD *)v37 = *(_QWORD *)v38;
                                                    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))((v37 + v16 + 8) & ~v16, (v173 + v38) & ~v16, v339);
                                                  }
                                                  v202 = ((v38 | 7) + v172) & 0xFFFFFFFFFFFFFFF8;
                                                  v203 = *(_OWORD *)v202;
                                                  v204 = ((v37 | 7) + v172) & 0xFFFFFFFFFFFFFFF8;
                                                  *(_QWORD *)(v204 + 16) = *(_QWORD *)(v202 + 16);
                                                  *(_OWORD *)v204 = v203;
                                                  if (v29 > 3)
                                                    goto LABEL_421;
                                                  v170 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v170 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 7;
                                                    goto LABEL_516;
                                                  }
                                                  if (v170 <= 0xF5)
                                                  {
LABEL_421:
                                                    v171 = 7;
                                                    goto LABEL_509;
                                                  }
                                                  v212 = 7;
                                                  goto LABEL_515;
                                                case 8u:
                                                  if (v39 < 0xFD)
                                                  {
                                                    v196 = *(unsigned __int8 *)(v38 + v21);
                                                    if (v196 < 3)
                                                      goto LABEL_395;
                                                    v176 = v196 - 2;
                                                  }
                                                  else
                                                  {
                                                    v176 = (*(uint64_t (**)(uint64_t))(v12 + 48))(v38);
                                                    v40 = v21 + 1;
                                                  }
                                                  if (v176)
                                                  {
                                                    v197 = v40;
                                                    memcpy((void *)v37, (const void *)v38, v40);
                                                    goto LABEL_396;
                                                  }
LABEL_395:
                                                  v197 = v40;
                                                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v340);
                                                  *(_BYTE *)(v37 + v21) = *(_BYTE *)(v38 + v21);
LABEL_396:
                                                  *(_QWORD *)(((v37 | 7) + v197) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v38 | 7) + v197) & 0xFFFFFFFFFFFFF8);
                                                  if (v29 > 3)
                                                    goto LABEL_399;
                                                  v170 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v170 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 8;
                                                    goto LABEL_516;
                                                  }
                                                  if (v170 <= 0xF5)
                                                  {
LABEL_399:
                                                    v171 = 8;
                                                    goto LABEL_509;
                                                  }
                                                  v212 = 8;
                                                  goto LABEL_515;
                                                case 9u:
                                                  *(_BYTE *)v37 = *(_BYTE *)v38;
                                                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))((v28 + v37) & v48, (v28 + v38) & v48, v17);
                                                  if (v29 > 3)
                                                    goto LABEL_338;
                                                  v170 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v170 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 9;
                                                  }
                                                  else
                                                  {
                                                    if (v170 <= 0xF5)
                                                    {
LABEL_338:
                                                      v171 = 9;
LABEL_509:
                                                      *(_BYTE *)(v37 + v29) = v171;
LABEL_510:
                                                      if (v29 > 3)
                                                        goto LABEL_514;
                                                      v242 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                      v243 = 2;
                                                      if (v242 > 0xFFF5)
                                                        v243 = 4;
                                                      if (v242 <= 0xF5)
LABEL_514:
                                                        v243 = 1;
LABEL_518:
                                                      v245 = v243 + v29;
                                                      v246 = v245 + v37;
                                                      v247 = v245 + v38;
                                                      *(_BYTE *)v246 = *(_BYTE *)v247;
                                                      v246 &= 0xFFFFFFFFFFFFFFF8;
                                                      v247 &= 0xFFFFFFFFFFFFFFF8;
                                                      *(_OWORD *)(v246 + 8) = *(_OWORD *)(v247 + 8);
                                                      *(_QWORD *)((v246 + 31) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v247 + 31) & 0xFFFFFFFFFFFFF8);
                                                      if (v29 > 3)
                                                        goto LABEL_672;
                                                      goto LABEL_669;
                                                    }
                                                    v212 = 9;
LABEL_515:
                                                    *(_WORD *)(v37 + v29) = v212;
                                                  }
LABEL_516:
                                                  v244 = v170 > 0xFFF5;
                                                  v243 = 2;
                                                  if (v244)
                                                    v243 = 4;
                                                  goto LABEL_518;
                                                default:
                                                  if (v29 > 3)
                                                    goto LABEL_309;
                                                  v160 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  v161 = 2;
                                                  if (v160 > 0xFFF5)
                                                    v161 = 4;
                                                  if (v160 <= 0xF5)
LABEL_309:
                                                    v161 = 1;
                                                  memcpy((void *)v37, (const void *)v38, v161 + v29);
                                                  goto LABEL_510;
                                              }
                                            }
                                          }
                                          else
                                          {
LABEL_291:
                                            v157 = *(unsigned __int8 *)(v38 + v29);
                                            if (v157 < 0xA)
                                              goto LABEL_300;
                                          }
LABEL_296:
                                          if (v29 <= 3)
                                            v158 = v29;
                                          else
                                            v158 = 4;
                                          __asm { BR              X12 }
                                        }
                                        v152 = v154 + 10;
                                        if (v154 > 0xF5)
                                        {
                                          v178 = *(unsigned __int16 *)(v38 + v29);
                                          v149 = v178 | 0xFFFF0000;
                                          v150 = v178 ^ 0xFFFF;
                                          v151 = 16;
                                        }
                                        else
                                        {
                                          v155 = *(unsigned __int8 *)(v38 + v29);
                                          v149 = v155 | 0xFFFFFF00;
                                          v150 = v155 ^ 0xFF;
                                          v151 = 8;
                                        }
                                      }
                                      else
                                      {
                                        v148 = *(unsigned __int8 *)(v38 + v29);
                                        v149 = v148 | 0xFFFFFF00;
                                        v150 = v148 ^ 0xFF;
                                        v151 = 8;
                                        v152 = 11;
                                      }
                                      v153 = (1 << v151) - v152;
                                      if ((v153 & 0x80000000) == 0)
                                      {
                                        if (v153 <= v150)
                                          goto LABEL_288;
LABEL_287:
                                        if (!v149)
                                          goto LABEL_288;
LABEL_406:
                                        if (v29 <= 3)
                                        {
LABEL_475:
                                          v222 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                          v223 = 2;
                                          if (v222 > 0xFFF5)
                                            v223 = 4;
                                          if (v222 > 0xF5)
                                          {
LABEL_479:
                                            memcpy((void *)v37, (const void *)v38, ((((((v223 + v29) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
                                            if (v29 <= 3)
                                              goto LABEL_674;
LABEL_677:
                                            v314 = 1;
                                            goto LABEL_678;
                                          }
                                        }
LABEL_478:
                                        v223 = 1;
                                        goto LABEL_479;
                                      }
                                      goto LABEL_286;
                                    }
                                  }
                                  v120 = *(unsigned __int8 *)(v38 + v118);
                                  if (!*(_BYTE *)(v38 + v118))
                                    goto LABEL_276;
LABEL_219:
                                  v122 = (v120 - 1) << v119;
                                  if (v118 > 3)
                                    v122 = 0;
                                  if ((_DWORD)v118)
                                  {
                                    if (v118 > 3)
                                      LODWORD(v118) = 4;
                                    __asm { BR              X12 }
                                  }
                                  if (v114 + v122 == -1)
                                    goto LABEL_288;
                                  goto LABEL_406;
                                }
LABEL_206:
                                v116 = 1;
                                goto LABEL_207;
                              }
LABEL_202:
                              v114 = 0x7FFFFFFF;
                              if (v29 > 3)
                                goto LABEL_206;
                              goto LABEL_203;
                            }
                          }
                          else
                          {
                            v108 = 11;
                          }
                          v113 = 8;
                          goto LABEL_199;
                        }
LABEL_187:
                        if (v29 > 3)
                          goto LABEL_191;
                        v109 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                        v110 = 2;
                        if (v109 > 0xFFF5)
                          v110 = 4;
                        if (v109 <= 0xF5)
LABEL_191:
                          v110 = 1;
                        v111 = *(_QWORD *)((((v29 + v38 + v110) & 0xFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8);
                        if (v111 >= 0xFFFFFFFF)
                          LODWORD(v111) = -1;
                        if ((_DWORD)v111 == -1)
                          goto LABEL_288;
                        goto LABEL_406;
                      }
LABEL_181:
                      v106 = 8;
                      goto LABEL_182;
                    }
                    v98 = v99 + 10;
                    if (v99 > 0xF5)
                    {
                      v100 = 16;
LABEL_171:
                      v101 = (1 << v100) - v98;
                      v102 = 0x7FFFFFFF;
                      if (v101 <= 0x7FFFFFFF)
                        v103 = 0x7FFFFFFF;
                      else
                        v103 = v101;
                      if ((v101 & 0x80000000) == 0)
                        v102 = v103;
                      if (v29 > 3)
                        goto LABEL_177;
                      goto LABEL_179;
                    }
                  }
                  else
                  {
                    v98 = 11;
                  }
                  v100 = 8;
                  goto LABEL_171;
                }
                goto LABEL_79;
              }
              v61 = *(unsigned __int16 *)(v37 + v59);
              if (!*(_WORD *)(v37 + v59))
                goto LABEL_93;
            }
LABEL_86:
            v63 = (v61 - 1) << v60;
            if (v59 > 3)
              v63 = 0;
            if ((_DWORD)v59)
            {
              if (v59 > 3)
                LODWORD(v59) = 4;
              __asm { BR              X12 }
            }
            if (v51 + v63 != -1)
              goto LABEL_166;
            goto LABEL_105;
          }
LABEL_76:
          v57 = 1;
          goto LABEL_77;
        }
LABEL_72:
        v51 = 0x7FFFFFFF;
        if (v29 > 3)
          goto LABEL_76;
        goto LABEL_73;
      }
    }
    else
    {
      v49 = 11;
    }
    v50 = 8;
    goto LABEL_57;
  }
  if (v29 > 3)
    goto LABEL_64;
  v52 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  v53 = 2;
  if (v52 > 0xFFF5)
    v53 = 4;
  if (v52 <= 0xF5)
LABEL_64:
    v53 = 1;
  v54 = *(_QWORD *)((((v29 + v37 + v53) & 0xFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8);
  if (v54 >= 0xFFFFFFFF)
    LODWORD(v54) = -1;
  if ((_DWORD)v54 != -1)
    goto LABEL_166;
LABEL_105:
  if (v29 > 3)
  {
    v72 = 11;
    goto LABEL_109;
  }
  v73 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  if (v73 <= 0xFFF5)
  {
    v72 = v73 + 10;
    if (v73 > 0xF5)
    {
      v74 = 16;
LABEL_110:
      v75 = (1 << v74) - v72;
      v76 = 0x7FFFFFFF;
      if (v75 <= 0x7FFFFFFF)
        v77 = 0x7FFFFFFF;
      else
        v77 = v75;
      if ((v75 & 0x80000000) == 0)
        v76 = v77;
      if (v29 > 3)
        goto LABEL_116;
      goto LABEL_118;
    }
LABEL_109:
    v74 = 8;
    goto LABEL_110;
  }
  v76 = 0x7FFFFFFF;
  if (v29 > 3)
  {
LABEL_116:
    v78 = 11;
LABEL_120:
    v80 = 8;
    goto LABEL_121;
  }
LABEL_118:
  v79 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  if (v79 > 0xFFF5)
    goto LABEL_125;
  v78 = v79 + 10;
  if (v79 <= 0xF5)
    goto LABEL_120;
  v80 = 16;
LABEL_121:
  v81 = (1 << v80) - v78;
  if ((v81 & 0x80000000) == 0)
  {
    if (v81 == v76)
      goto LABEL_123;
LABEL_126:
    if (v29 > 3)
      goto LABEL_130;
    v83 = ((1 << (8 * v29)) + 1) >> (8 * v29);
    v84 = 2;
    if (v83 > 0xFFF5)
      v84 = 4;
    if (v83 <= 0xF5)
LABEL_130:
      v84 = 1;
    v85 = *(_QWORD *)((((v29 + v38 + v84) & 0xFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8);
    if (v85 >= 0xFFFFFFFF)
      LODWORD(v85) = -1;
    if ((_DWORD)v85 != -1)
      goto LABEL_342;
    goto LABEL_238;
  }
LABEL_125:
  if (v76 != 0x7FFFFFFF)
    goto LABEL_126;
LABEL_123:
  if (v29 > 3)
  {
    v82 = 11;
LABEL_137:
    v87 = 8;
    goto LABEL_138;
  }
  v86 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  if (v86 > 0xFFF5)
    goto LABEL_141;
  v82 = v86 + 10;
  if (v86 <= 0xF5)
    goto LABEL_137;
  v87 = 16;
LABEL_138:
  v88 = (1 << v87) - v82;
  if ((v88 & 0x80000000) == 0)
  {
    if (v29 > 3)
      goto LABEL_145;
    goto LABEL_142;
  }
LABEL_141:
  v88 = 0x7FFFFFFF;
  if (v29 > 3)
  {
LABEL_145:
    v90 = 1;
    goto LABEL_146;
  }
LABEL_142:
  v89 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  v90 = 2;
  if (v89 > 0xFFF5)
    v90 = 4;
  if (v89 <= 0xF5)
    goto LABEL_145;
LABEL_146:
  v91 = v76 - v88;
  if (v76 <= v88)
    goto LABEL_226;
  v92 = v90 + v29;
  v93 = 8 * (v90 + v29);
  if (v92 <= 3)
  {
    v95 = ((v91 + ~(-1 << v93)) >> v93) + 1;
    if (HIWORD(v95))
    {
      v94 = *(_DWORD *)(v38 + v92);
      if (!v94)
        goto LABEL_226;
      goto LABEL_158;
    }
    if (v95 > 0xFF)
    {
      v94 = *(unsigned __int16 *)(v38 + v92);
      if (!*(_WORD *)(v38 + v92))
        goto LABEL_226;
      goto LABEL_158;
    }
    if (v95 < 2)
    {
LABEL_226:
      if (!v88)
        goto LABEL_238;
      if (v29 <= 3)
      {
        v129 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        if (v129 > 0xFFF5)
        {
          v124 = *(_DWORD *)(v38 + v29);
          v125 = ~v124;
          goto LABEL_236;
        }
        v127 = v129 + 10;
        if (v129 > 0xF5)
        {
          v177 = *(unsigned __int16 *)(v38 + v29);
          v124 = v177 | 0xFFFF0000;
          v125 = v177 ^ 0xFFFF;
          v126 = 16;
        }
        else
        {
          v130 = *(unsigned __int8 *)(v38 + v29);
          v124 = v130 | 0xFFFFFF00;
          v125 = v130 ^ 0xFF;
          v126 = 8;
        }
      }
      else
      {
        v123 = *(unsigned __int8 *)(v38 + v29);
        v124 = v123 | 0xFFFFFF00;
        v125 = v123 ^ 0xFF;
        v126 = 8;
        v127 = 11;
      }
      v128 = (1 << v126) - v127;
      if ((v128 & 0x80000000) == 0)
      {
        if (v128 <= v125)
          goto LABEL_238;
        goto LABEL_237;
      }
LABEL_236:
      if (v125 >= 0x7FFFFFFF)
        goto LABEL_238;
LABEL_237:
      if (!v124)
        goto LABEL_238;
      goto LABEL_342;
    }
  }
  v94 = *(unsigned __int8 *)(v38 + v92);
  if (!*(_BYTE *)(v38 + v92))
    goto LABEL_226;
LABEL_158:
  v96 = (v94 - 1) << v93;
  if (v92 > 3)
    v96 = 0;
  if ((_DWORD)v92)
  {
    if (v92 > 3)
      LODWORD(v92) = 4;
    __asm { BR              X12 }
  }
  if (v88 + v96 != -1)
  {
    if (v29 > 3)
      goto LABEL_345;
LABEL_342:
    v179 = ((1 << (8 * v29)) + 1) >> (8 * v29);
    if (v179 > 0xFFF5)
    {
      v180 = *(_DWORD *)(v37 + v29);
      if (v180 < 0xA)
        goto LABEL_354;
      goto LABEL_350;
    }
    if (v179 > 0xF5)
    {
      v180 = *(unsigned __int16 *)(v37 + v29);
      if (v180 < 0xA)
      {
LABEL_354:
        switch(v180)
        {
          case 0u:
            switch(*(_BYTE *)(v37 + v22))
            {
              case 0:
              case 7:
                goto LABEL_464;
              case 1:
              case 8:
              case 9:
                goto LABEL_462;
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
                goto LABEL_461;
              default:
                if (v22 <= 3)
                  v182 = v22;
                else
                  v182 = 4;
                __asm { BR              X12 }
                return result;
            }
          case 1u:
            switch(*(_BYTE *)(v37 + v22))
            {
              case 0:
              case 7:
                goto LABEL_464;
              case 1:
              case 8:
              case 9:
LABEL_462:
                v215 = v22 + 1;

                goto LABEL_463;
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
LABEL_461:
                v215 = v22 + 1;
                (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v37, v340);
LABEL_463:
                v23 = v215;
LABEL_464:
                v216 = ((v37 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
                v217 = *(_QWORD *)(v216 + 8);
                if (v217 >= 0xFFFFFFFF)
                {
                  swift_bridgeObjectRelease(v217);
                  sub_10003E2EC(*(void **)(v216 + 16), *(_QWORD *)(v216 + 24), *(_QWORD *)(v216 + 32), *(_QWORD *)(v216 + 40), *(_QWORD *)(v216 + 48), *(_QWORD *)(v216 + 56), *(_BYTE *)(v216 + 64));
                  v218 = *(unsigned __int8 *)(v216 + 120);
                  if (v218 != 255)
                    sub_10002B328(*(void **)(v216 + 72), *(_QWORD *)(v216 + 80), *(_QWORD *)(v216 + 88), *(_QWORD *)(v216 + 96), *(_QWORD *)(v216 + 104), *(_QWORD *)(v216 + 112), v218 & 1);
                }
                v191 = *(id *)((v216 + 134) & 0xFFFFFFFFFFFFF8);
                break;
              default:
                if (v22 <= 3)
                  v183 = v22;
                else
                  v183 = 4;
                __asm { BR              X12 }
                return result;
            }
            goto LABEL_468;
          case 2u:
            v184 = v25;
            v185 = v45;

            v186 = (void **)((v184 + v37) & v185);
            switch(*((_BYTE *)v186 + v22))
            {
              case 1:
              case 8:
              case 9:
                goto LABEL_408;
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
                goto LABEL_366;
              default:
                goto LABEL_469;
            }
            goto LABEL_469;
          case 3u:
            v187 = v25;
            v188 = v45;

            v186 = (void **)((v187 + v37) & v188);
            switch(*((_BYTE *)v186 + v22))
            {
              case 1:
              case 8:
              case 9:
                goto LABEL_408;
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
                goto LABEL_366;
              default:
                goto LABEL_469;
            }
            goto LABEL_469;
          case 4u:
            v189 = v25;
            v190 = v45;

            v186 = (void **)((v189 + v37) & v190);
            switch(*((_BYTE *)v186 + v22))
            {
              case 1:
              case 8:
              case 9:
LABEL_408:
                v191 = *v186;
                goto LABEL_468;
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
LABEL_366:
                (*(void (**)(void **, uint64_t))(v12 + 8))(v186, v340);
                break;
              default:
                goto LABEL_469;
            }
            goto LABEL_469;
          case 5u:
            v191 = *(id *)(v37 + 16);
            goto LABEL_468;
          case 6u:
            v191 = *(id *)v37;
            goto LABEL_468;
          case 7u:
            v192 = *(_QWORD *)(v15 + 64) + ((v16 + 8) & ~v16);
            if ((v46 & 0x80000000) != 0)
            {
              v194 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v15 + 48))((v37 + v16 + 8) & v47, *(unsigned int *)(v15 + 84), v339);
            }
            else
            {
              v193 = *(id *)v37;
              if (*(_QWORD *)v37 >= 0xFFFFFFFFuLL)
                LODWORD(v193) = -1;
              v194 = (_DWORD)v193 + 1;
            }
            if (!v194)
            {
              v199 = swift_bridgeObjectRelease(*(_QWORD *)v37);
              (*(void (**)(uint64_t, uint64_t, __n128))(v15 + 8))((v37 + v16 + 8) & ~v16, v339, v199);
            }
            v200 = ((v37 | 7) + v192) & 0xFFFFFFFFFFFFFFF8;
            v201 = *(_QWORD *)(v200 + 8);
            if (v201 < 0xFFFFFFFF)
              goto LABEL_469;
            swift_bridgeObjectRelease(v201);
            v191 = *(id *)(v200 + 16);
LABEL_468:

            goto LABEL_469;
          case 8u:
            if (v39 < 0xFD)
            {
              v198 = *(unsigned __int8 *)(v37 + v21);
              if (v198 < 3)
                goto LABEL_403;
              v195 = v198 - 2;
            }
            else
            {
              v195 = (*(uint64_t (**)(uint64_t))(v12 + 48))(v37);
            }
            if (v195)
              goto LABEL_469;
LABEL_403:
            (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v37, v340);
LABEL_469:
            if (v29 > 3)
              goto LABEL_473;
            v219 = ((1 << (8 * v29)) + 1) >> (8 * v29);
            v220 = 2;
            if (v219 > 0xFFF5)
              v220 = 4;
            if (v219 <= 0xF5)
LABEL_473:
              v220 = 1;
            v221 = (v29 + v37 + v220) & 0xFFFFFFFFFFFFFFF8;
            swift_bridgeObjectRelease(*(_QWORD *)(v221 + 16));
            swift_bridgeObjectRelease(*(_QWORD *)((v221 + 31) & 0xFFFFFFFFFFFFF8));
            if (v29 <= 3)
              goto LABEL_475;
            goto LABEL_478;
          case 9u:
            (*(void (**)(uint64_t, uint64_t))(v18 + 8))((v28 + v37) & v48, v17);
            goto LABEL_469;
          default:
            goto LABEL_469;
        }
      }
    }
    else
    {
LABEL_345:
      v180 = *(unsigned __int8 *)(v37 + v29);
      if (v180 < 0xA)
        goto LABEL_354;
    }
LABEL_350:
    if (v29 <= 3)
      v181 = v29;
    else
      v181 = 4;
    __asm { BR              X12 }
  }
LABEL_238:
  if (v37 == v38)
    goto LABEL_657;
  if (v29 > 3)
    goto LABEL_240;
  v132 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  if (v132 > 0xFFF5)
  {
    v131 = *(_DWORD *)(v37 + v29);
  }
  else
  {
    if (v132 <= 0xF5)
    {
LABEL_240:
      v131 = *(unsigned __int8 *)(v37 + v29);
      goto LABEL_245;
    }
    v131 = *(unsigned __int16 *)(v37 + v29);
  }
LABEL_245:
  if (v131 >= 0xA)
  {
    if (v29 <= 3)
      v133 = v29;
    else
      v133 = 4;
    __asm { BR              X12 }
  }
  v326 = ~v16;
  v330 = *(_QWORD *)(v15 + 64) + ((v16 + 8) & ~v16);
  v331 = v17;
  __n = v22 + 1;
  v337 = v28;
  v338 = v25;
  v336 = *(_DWORD *)(v12 + 84);
  v335 = ~v14;
  v334 = *(_DWORD *)(v15 + 84);
  v333 = v48;
  switch(v131)
  {
    case 0u:
      v205 = v22 + 1;
      v324 = v21 + 1;
      v329 = v16 + 8;
      switch(*(_BYTE *)(v37 + v22))
      {
        case 0:
        case 7:
          goto LABEL_526;
        case 1:
        case 8:
        case 9:
          goto LABEL_524;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_523;
        default:
          if (v22 <= 3)
            v134 = v22;
          else
            v134 = 4;
          __asm { BR              X12 }
          return result;
      }
    case 1u:
      v205 = v22 + 1;
      v324 = v21 + 1;
      v329 = v16 + 8;
      switch(*(_BYTE *)(v37 + v22))
      {
        case 0:
        case 7:
          goto LABEL_526;
        case 1:
        case 8:
        case 9:
LABEL_524:

          goto LABEL_525;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
LABEL_523:
          (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v37, v340);
LABEL_525:
          v205 = v22 + 1;
LABEL_526:
          v248 = ((v37 | 7) + v205) & 0xFFFFFFFFFFFFFFF8;
          v249 = *(_QWORD *)(v248 + 8);
          if (v249 >= 0xFFFFFFFF)
          {
            swift_bridgeObjectRelease(v249);
            sub_10003E2EC(*(void **)(v248 + 16), *(_QWORD *)(v248 + 24), *(_QWORD *)(v248 + 32), *(_QWORD *)(v248 + 40), *(_QWORD *)(v248 + 48), *(_QWORD *)(v248 + 56), *(_BYTE *)(v248 + 64));
            v250 = *(unsigned __int8 *)(v248 + 120);
            if (v250 != 255)
              sub_10002B328(*(void **)(v248 + 72), *(_QWORD *)(v248 + 80), *(_QWORD *)(v248 + 88), *(_QWORD *)(v248 + 96), *(_QWORD *)(v248 + 104), *(_QWORD *)(v248 + 112), v250 & 1);
          }

          v28 = v337;
          v25 = v338;
          v26 = v329;
          v39 = v336;
          v40 = v324;
          v45 = v335;
          v46 = v334;
          v48 = v333;
          if (v29 <= 3)
            goto LABEL_530;
          goto LABEL_438;
        default:
          if (v22 <= 3)
            v135 = v22;
          else
            v135 = 4;
          __asm { BR              X12 }
          return result;
      }
    case 2u:
      v327 = v16 + 8;
      v136 = v21 + 1;

      v48 = v333;
      v46 = v334;
      v45 = v335;
      v40 = v21 + 1;
      v39 = v336;
      v26 = v16 + 8;
      v28 = v337;
      v25 = v338;
      v137 = (id *)((v338 + v37) & v335);
      switch(*((_BYTE *)v137 + v22))
      {
        case 1:
        case 8:
        case 9:
          goto LABEL_428;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_264;
        default:
          goto LABEL_437;
      }
      goto LABEL_437;
    case 3u:
      v327 = v16 + 8;
      v136 = v21 + 1;

      v48 = v333;
      v46 = v334;
      v45 = v335;
      v40 = v21 + 1;
      v39 = v336;
      v26 = v16 + 8;
      v28 = v337;
      v25 = v338;
      v137 = (id *)((v338 + v37) & v335);
      switch(*((_BYTE *)v137 + v22))
      {
        case 1:
        case 8:
        case 9:
          goto LABEL_428;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_264;
        default:
          goto LABEL_437;
      }
      goto LABEL_437;
    case 4u:
      v327 = v16 + 8;
      v136 = v21 + 1;

      v48 = v333;
      v46 = v334;
      v45 = v335;
      v40 = v21 + 1;
      v39 = v336;
      v26 = v16 + 8;
      v28 = v337;
      v25 = v338;
      v137 = (id *)((v338 + v37) & v335);
      switch(*((_BYTE *)v137 + v22))
      {
        case 1:
        case 8:
        case 9:
LABEL_428:

          goto LABEL_429;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
LABEL_264:
          (*(void (**)(void))(v12 + 8))();
LABEL_429:
          v48 = v333;
          v46 = v334;
          v45 = v335;
          v40 = v136;
          goto LABEL_435;
        default:
          goto LABEL_437;
      }
    case 5u:
      v138 = *(id *)(v37 + 16);
      goto LABEL_272;
    case 6u:
      v138 = *(id *)v37;
LABEL_272:
      v143 = v16 + 8;
      v325 = v38;
      v145 = v22;
      v146 = v21 + 1;

      goto LABEL_427;
    case 7u:
      if ((v46 & 0x80000000) != 0)
      {
        v140 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))((v37 + v16 + 8) & v326, v46, v339);
        v48 = v333;
        v46 = v334;
        v45 = ~v14;
        v40 = v21 + 1;
        v39 = v336;
        v26 = v16 + 8;
        v28 = v337;
        v25 = v338;
      }
      else
      {
        v139 = *(id *)v37;
        if (*(_QWORD *)v37 >= 0xFFFFFFFFuLL)
          LODWORD(v139) = -1;
        v140 = (_DWORD)v139 + 1;
      }
      if (!v140)
      {
        v328 = v26;
        v207 = v40;
        v208 = swift_bridgeObjectRelease(*(_QWORD *)v37);
        (*(void (**)(uint64_t, uint64_t, __n128))(v15 + 8))((v37 + v16 + 8) & v326, v339, v208);
        v48 = v333;
        v46 = v334;
        v45 = v335;
        v40 = v207;
        v39 = v336;
        v26 = v328;
        v28 = v337;
        v25 = v338;
      }
      v209 = ((v37 | 7) + v330) & 0xFFFFFFFFFFFFFFF8;
      v210 = *(_QWORD *)(v209 + 8);
      if (v210 < 0xFFFFFFFF)
        goto LABEL_437;
      v327 = v26;
      v323 = v40;
      swift_bridgeObjectRelease(v210);

      v48 = v333;
      v46 = v334;
      v45 = v335;
      v40 = v323;
LABEL_435:
      v39 = v336;
      v26 = v327;
      goto LABEL_436;
    case 8u:
      v325 = v38;
      if (v39 < 0xFD)
      {
        v206 = *(unsigned __int8 *)(v37 + v21);
        if (v206 < 3)
          goto LABEL_425;
        v147 = v206 - 2;
      }
      else
      {
        v147 = (*(uint64_t (**)(uint64_t))(v12 + 48))(v37);
        v48 = v333;
        v46 = v334;
        v45 = ~v14;
        v40 = v21 + 1;
        v39 = v336;
        v26 = v16 + 8;
        v28 = v337;
        v25 = v338;
      }
      if (v147)
        goto LABEL_437;
LABEL_425:
      v142 = *(void (**)(unint64_t, uint64_t))(v12 + 8);
      v141 = v37;
      v143 = v26;
      v144 = v340;
LABEL_426:
      v145 = v22;
      v146 = v40;
      v142(v141, v144);
LABEL_427:
      v48 = v333;
      v46 = v334;
      v45 = v335;
      v40 = v146;
      v22 = v145;
      v38 = v325;
      v39 = v336;
      v26 = v143;
LABEL_436:
      v28 = v337;
      v25 = v338;
LABEL_437:
      if (v29 > 3)
        goto LABEL_438;
LABEL_530:
      v251 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      if (v251 > 0xFFF5)
      {
        v211 = *(_DWORD *)(v38 + v29);
      }
      else if (v251 <= 0xF5)
      {
LABEL_438:
        v211 = *(unsigned __int8 *)(v38 + v29);
      }
      else
      {
        v211 = *(unsigned __int16 *)(v38 + v29);
      }
      if (v211 >= 0xA)
      {
        if (v29 <= 3)
          v252 = v29;
        else
          v252 = 4;
        __asm { BR              X12 }
      }
      return result;
    case 9u:
      v141 = (v28 + v37) & v48;
      v142 = *(void (**)(unint64_t, uint64_t))(v18 + 8);
      v143 = v16 + 8;
      v144 = v331;
      v325 = v38;
      goto LABEL_426;
    default:
      goto LABEL_437;
  }
  switch(v211)
  {
    case 0u:
      switch(*(_BYTE *)(v38 + v22))
      {
        case 0:
          v280 = 0;
          *(_BYTE *)v37 = *(_BYTE *)v38;
          break;
        case 1:
          *(_QWORD *)v37 = *(_QWORD *)v38;
          v280 = 1;
          break;
        case 2:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v340);
          v280 = 2;
          break;
        case 3:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v340);
          v280 = 3;
          break;
        case 4:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v340);
          v280 = 4;
          break;
        case 5:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v340);
          v280 = 5;
          break;
        case 6:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v340);
          v280 = 6;
          break;
        case 7:
          v282 = *(_OWORD *)v38;
          *(_OWORD *)(v37 + 9) = *(_OWORD *)(v38 + 9);
          *(_OWORD *)v37 = v282;
          v280 = 7;
          break;
        case 8:
          *(_QWORD *)v37 = *(_QWORD *)v38;
          v280 = 8;
          break;
        case 9:
          *(_QWORD *)v37 = *(_QWORD *)v38;
          v280 = 9;
          break;
        default:
          if (v22 <= 3)
            v253 = v22;
          else
            v253 = 4;
          __asm { BR              X12 }
          return result;
      }
      *(_BYTE *)(v37 + v22) = v280;
      v284 = ((v37 | 7) + __n) & 0xFFFFFFFFFFFFFFF8;
      v285 = (v22 + v38 + 8) & 0xFFFFFFFFFFFFFFF8;
      v286 = *(_OWORD *)v285;
      v287 = *(_OWORD *)(v285 + 16);
      v288 = *(_OWORD *)(v285 + 48);
      *(_OWORD *)(v284 + 32) = *(_OWORD *)(v285 + 32);
      *(_OWORD *)(v284 + 48) = v288;
      *(_OWORD *)v284 = v286;
      *(_OWORD *)(v284 + 16) = v287;
      v289 = *(_OWORD *)(v285 + 64);
      v290 = *(_OWORD *)(v285 + 80);
      v291 = *(_OWORD *)(v285 + 96);
      *(_OWORD *)(v284 + 106) = *(_OWORD *)(v285 + 106);
      *(_OWORD *)(v284 + 80) = v290;
      *(_OWORD *)(v284 + 96) = v291;
      *(_OWORD *)(v284 + 64) = v289;
      *(_BYTE *)(v284 + 122) = *(_BYTE *)(v285 + 122);
      *(_BYTE *)(v284 + 123) = *(_BYTE *)(v285 + 123);
      *(_BYTE *)(v284 + 124) = *(_BYTE *)(v285 + 124);
      *(_BYTE *)(v284 + 125) = *(_BYTE *)(v285 + 125);
      *(_BYTE *)(v284 + 126) = *(_BYTE *)(v285 + 126);
      *(_QWORD *)((v284 + 134) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v285 + 134) & 0xFFFFFFFFFFFFF8);
      if (v29 > 3)
        goto LABEL_647;
      v268 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      if (v268 > 0xFFF5)
      {
        *(_DWORD *)(v37 + v29) = 0;
      }
      else
      {
        if (v268 <= 0xF5)
        {
LABEL_647:
          *(_BYTE *)(v37 + v29) = 0;
          break;
        }
        *(_WORD *)(v37 + v29) = 0;
      }
      goto LABEL_666;
    case 1u:
      switch(*(_BYTE *)(v38 + v22))
      {
        case 0:
          v281 = 0;
          *(_BYTE *)v37 = *(_BYTE *)v38;
          break;
        case 1:
          *(_QWORD *)v37 = *(_QWORD *)v38;
          v281 = 1;
          break;
        case 2:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v340);
          v281 = 2;
          break;
        case 3:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v340);
          v281 = 3;
          break;
        case 4:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v340);
          v281 = 4;
          break;
        case 5:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v340);
          v281 = 5;
          break;
        case 6:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v340);
          v281 = 6;
          break;
        case 7:
          v283 = *(_OWORD *)v38;
          *(_OWORD *)(v37 + 9) = *(_OWORD *)(v38 + 9);
          *(_OWORD *)v37 = v283;
          v281 = 7;
          break;
        case 8:
          *(_QWORD *)v37 = *(_QWORD *)v38;
          v281 = 8;
          break;
        case 9:
          *(_QWORD *)v37 = *(_QWORD *)v38;
          v281 = 9;
          break;
        default:
          if (v22 <= 3)
            v254 = v22;
          else
            v254 = 4;
          __asm { BR              X12 }
          return result;
      }
      *(_BYTE *)(v37 + v22) = v281;
      v292 = ((v37 | 7) + __n) & 0xFFFFFFFFFFFFFFF8;
      v293 = (v22 + v38 + 8) & 0xFFFFFFFFFFFFFFF8;
      v294 = *(_OWORD *)v293;
      v295 = *(_OWORD *)(v293 + 16);
      v296 = *(_OWORD *)(v293 + 48);
      *(_OWORD *)(v292 + 32) = *(_OWORD *)(v293 + 32);
      *(_OWORD *)(v292 + 48) = v296;
      *(_OWORD *)v292 = v294;
      *(_OWORD *)(v292 + 16) = v295;
      v297 = *(_OWORD *)(v293 + 64);
      v298 = *(_OWORD *)(v293 + 80);
      v299 = *(_OWORD *)(v293 + 96);
      *(_OWORD *)(v292 + 106) = *(_OWORD *)(v293 + 106);
      *(_OWORD *)(v292 + 80) = v298;
      *(_OWORD *)(v292 + 96) = v299;
      *(_OWORD *)(v292 + 64) = v297;
      *(_BYTE *)(v292 + 122) = *(_BYTE *)(v293 + 122);
      *(_BYTE *)(v292 + 123) = *(_BYTE *)(v293 + 123);
      *(_BYTE *)(v292 + 124) = *(_BYTE *)(v293 + 124);
      *(_BYTE *)(v292 + 125) = *(_BYTE *)(v293 + 125);
      *(_BYTE *)(v292 + 126) = *(_BYTE *)(v293 + 126);
      *(_QWORD *)((v292 + 134) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v293 + 134) & 0xFFFFFFFFFFFFF8);
      if (v29 > 3)
        goto LABEL_655;
      v279 = 1;
      v268 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      if (v268 > 0xFFF5)
        goto LABEL_665;
      if (v268 <= 0xF5)
      {
LABEL_655:
        v262 = 1;
        goto LABEL_656;
      }
      *(_WORD *)(v37 + v29) = 1;
      goto LABEL_666;
    case 2u:
      *(_QWORD *)v37 = *(_QWORD *)v38;
      v255 = (_BYTE *)((v25 + v37) & v45);
      v256 = (_BYTE *)((v25 + v38) & v45);
      switch(v256[v22])
      {
        case 0:
          *v255 = *v256;
          v255[v22] = 0;
          break;
        case 1:
          *(_QWORD *)v255 = *(_QWORD *)v256;
          v255[v22] = 1;
          break;
        case 2:
          (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
          v255[v22] = 2;
          break;
        case 3:
          (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
          v255[v22] = 3;
          break;
        case 4:
          (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
          v255[v22] = 4;
          break;
        case 5:
          (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
          v255[v22] = 5;
          break;
        case 6:
          (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
          v255[v22] = 6;
          break;
        case 7:
          v320 = *(_OWORD *)v256;
          *(_OWORD *)(((v25 + v37) & v45) + 9) = *(_OWORD *)(((v25 + v38) & v45) + 9);
          *(_OWORD *)v255 = v320;
          v255[v22] = 7;
          break;
        case 8:
          *(_QWORD *)v255 = *(_QWORD *)v256;
          v255[v22] = 8;
          break;
        case 9:
          *(_QWORD *)v255 = *(_QWORD *)v256;
          v255[v22] = 9;
          break;
        default:
          memcpy((void *)((v25 + v37) & v45), v256, __n);
          break;
      }
      if (v29 > 3)
        goto LABEL_576;
      v268 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      if (v268 > 0xFFF5)
      {
        v279 = 2;
        goto LABEL_665;
      }
      if (v268 <= 0xF5)
      {
LABEL_576:
        v262 = 2;
        goto LABEL_656;
      }
      *(_WORD *)(v37 + v29) = 2;
      goto LABEL_666;
    case 3u:
      *(_QWORD *)v37 = *(_QWORD *)v38;
      v257 = (_BYTE *)((v25 + v37) & v45);
      v258 = (_BYTE *)((v25 + v38) & v45);
      switch(v258[v22])
      {
        case 0:
          *v257 = *v258;
          v257[v22] = 0;
          break;
        case 1:
          *(_QWORD *)v257 = *(_QWORD *)v258;
          v257[v22] = 1;
          break;
        case 2:
          (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
          v257[v22] = 2;
          break;
        case 3:
          (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
          v257[v22] = 3;
          break;
        case 4:
          (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
          v257[v22] = 4;
          break;
        case 5:
          (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
          v257[v22] = 5;
          break;
        case 6:
          (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
          v257[v22] = 6;
          break;
        case 7:
          v321 = *(_OWORD *)v258;
          *(_OWORD *)(((v25 + v37) & v45) + 9) = *(_OWORD *)(((v25 + v38) & v45) + 9);
          *(_OWORD *)v257 = v321;
          v257[v22] = 7;
          break;
        case 8:
          *(_QWORD *)v257 = *(_QWORD *)v258;
          v257[v22] = 8;
          break;
        case 9:
          *(_QWORD *)v257 = *(_QWORD *)v258;
          v257[v22] = 9;
          break;
        default:
          memcpy((void *)((v25 + v37) & v45), v258, __n);
          break;
      }
      if (v29 > 3)
        goto LABEL_579;
      v268 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      if (v268 > 0xFFF5)
      {
        v279 = 3;
        goto LABEL_665;
      }
      if (v268 <= 0xF5)
      {
LABEL_579:
        v262 = 3;
        goto LABEL_656;
      }
      *(_WORD *)(v37 + v29) = 3;
      goto LABEL_666;
    case 4u:
      *(_QWORD *)v37 = *(_QWORD *)v38;
      v259 = (_BYTE *)((v25 + v37) & v45);
      v260 = (_BYTE *)((v25 + v38) & v45);
      switch(v260[v22])
      {
        case 0:
          *v259 = *v260;
          v259[v22] = 0;
          break;
        case 1:
          *(_QWORD *)v259 = *(_QWORD *)v260;
          v259[v22] = 1;
          break;
        case 2:
          (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
          v259[v22] = 2;
          break;
        case 3:
          (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
          v259[v22] = 3;
          break;
        case 4:
          (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
          v259[v22] = 4;
          break;
        case 5:
          (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
          v259[v22] = 5;
          break;
        case 6:
          (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
          v259[v22] = 6;
          break;
        case 7:
          v322 = *(_OWORD *)v260;
          *(_OWORD *)(((v25 + v37) & v45) + 9) = *(_OWORD *)(((v25 + v38) & v45) + 9);
          *(_OWORD *)v259 = v322;
          v259[v22] = 7;
          break;
        case 8:
          *(_QWORD *)v259 = *(_QWORD *)v260;
          v259[v22] = 8;
          break;
        case 9:
          *(_QWORD *)v259 = *(_QWORD *)v260;
          v259[v22] = 9;
          break;
        default:
          memcpy((void *)((v25 + v37) & v45), v260, __n);
          break;
      }
      if (v29 > 3)
        goto LABEL_582;
      v268 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      if (v268 > 0xFFF5)
      {
        v279 = 4;
        goto LABEL_665;
      }
      if (v268 <= 0xF5)
      {
LABEL_582:
        v262 = 4;
        goto LABEL_656;
      }
      *(_WORD *)(v37 + v29) = 4;
      goto LABEL_666;
    case 5u:
      v261 = *(_OWORD *)v38;
      *(_QWORD *)(v37 + 16) = *(_QWORD *)(v38 + 16);
      *(_OWORD *)v37 = v261;
      if (v29 > 3)
        goto LABEL_555;
      v268 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      if (v268 > 0xFFF5)
      {
        v279 = 5;
        goto LABEL_665;
      }
      if (v268 <= 0xF5)
      {
LABEL_555:
        v262 = 5;
        goto LABEL_656;
      }
      *(_WORD *)(v37 + v29) = 5;
      goto LABEL_666;
    case 6u:
      *(_QWORD *)v37 = *(_QWORD *)v38;
      if (v29 > 3)
        goto LABEL_571;
      v268 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      if (v268 > 0xFFF5)
      {
        v279 = 6;
        goto LABEL_665;
      }
      if (v268 <= 0xF5)
      {
LABEL_571:
        v262 = 6;
        goto LABEL_656;
      }
      *(_WORD *)(v37 + v29) = 6;
      goto LABEL_666;
    case 7u:
      if ((v46 & 0x80000000) != 0)
      {
        v263 = v26;
        v265 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))((v26 + v38) & v326, v46, v339);
      }
      else
      {
        v263 = v26;
        v264 = *(_QWORD *)v38;
        if (*(_QWORD *)v38 >= 0xFFFFFFFFuLL)
          LODWORD(v264) = -1;
        v265 = v264 + 1;
      }
      if (v265)
      {
        v275 = v330;
        memcpy((void *)v37, (const void *)v38, v330);
      }
      else
      {
        *(_QWORD *)v37 = *(_QWORD *)v38;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))((v37 + v16 + 8) & v326, (v263 + v38) & v326, v339);
        v275 = v330;
      }
      v276 = ((v38 | 7) + v275) & 0xFFFFFFFFFFFFFFF8;
      v277 = *(_OWORD *)v276;
      v278 = ((v37 | 7) + v275) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)(v278 + 16) = *(_QWORD *)(v276 + 16);
      *(_OWORD *)v278 = v277;
      if (v29 > 3)
        goto LABEL_612;
      v268 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      if (v268 > 0xFFF5)
      {
        v279 = 7;
        goto LABEL_665;
      }
      if (v268 <= 0xF5)
      {
LABEL_612:
        v262 = 7;
        goto LABEL_656;
      }
      *(_WORD *)(v37 + v29) = 7;
      goto LABEL_666;
    case 8u:
      if (v39 < 0xFD)
      {
        v271 = *(unsigned __int8 *)(v38 + v21);
        if (v271 < 3)
          goto LABEL_602;
        v270 = v271 - 2;
      }
      else
      {
        v269 = v40;
        v270 = (*(uint64_t (**)(uint64_t))(v12 + 48))(v38);
        v40 = v269;
      }
      if (v270)
      {
        v272 = v40;
        memcpy((void *)v37, (const void *)v38, v40);
        v273 = v272;
        goto LABEL_603;
      }
LABEL_602:
      v274 = v40;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v340);
      v273 = v274;
      *(_BYTE *)(v37 + v21) = *(_BYTE *)(v38 + v21);
LABEL_603:
      *(_QWORD *)(((v37 | 7) + v273) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v38 | 7) + v273) & 0xFFFFFFFFFFFFF8);
      if (v29 > 3)
        goto LABEL_606;
      v268 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      if (v268 > 0xFFF5)
      {
        v279 = 8;
        goto LABEL_665;
      }
      if (v268 <= 0xF5)
      {
LABEL_606:
        v262 = 8;
        goto LABEL_656;
      }
      *(_WORD *)(v37 + v29) = 8;
      goto LABEL_666;
    case 9u:
      *(_BYTE *)v37 = *(_BYTE *)v38;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))((v28 + v37) & v48, (v28 + v38) & v48, v331);
      if (v29 > 3)
        goto LABEL_561;
      v268 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      if (v268 > 0xFFF5)
      {
        v279 = 9;
LABEL_665:
        *(_DWORD *)(v37 + v29) = v279;
        goto LABEL_666;
      }
      if (v268 > 0xF5)
      {
        *(_WORD *)(v37 + v29) = 9;
LABEL_666:
        v244 = v268 > 0xFFF5;
        v301 = 2;
        if (v244)
          v301 = 4;
        goto LABEL_668;
      }
LABEL_561:
      v262 = 9;
LABEL_656:
      *(_BYTE *)(v37 + v29) = v262;
      break;
    default:
      if (v29 > 3)
        goto LABEL_566;
      v266 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      v267 = 2;
      if (v266 > 0xFFF5)
        v267 = 4;
      if (v266 <= 0xF5)
LABEL_566:
        v267 = 1;
      memcpy((void *)v37, (const void *)v38, v267 + v29);
      break;
  }
LABEL_657:
  if (v29 > 3)
    goto LABEL_661;
  v300 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  v301 = 2;
  if (v300 > 0xFFF5)
    v301 = 4;
  if (v300 <= 0xF5)
LABEL_661:
    v301 = 1;
LABEL_668:
  v302 = v301 + v29;
  v303 = v302 + v37;
  v304 = v302 + v38;
  *(_BYTE *)v303 = *(_BYTE *)v304;
  v305 = v303 & 0xFFFFFFFFFFFFFFF8;
  v306 = v304 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v305 + 8) = *(_QWORD *)((v304 & 0xFFFFFFFFFFFFFFF8) + 8);
  v307 = *(_QWORD *)((v303 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_QWORD *)(v305 + 16) = *(_QWORD *)((v304 & 0xFFFFFFFFFFFFFFF8) + 16);
  swift_bridgeObjectRelease(v307);
  v308 = (uint64_t *)((v305 + 31) & 0xFFFFFFFFFFFFFFF8);
  v309 = *v308;
  *v308 = *(_QWORD *)((v306 + 31) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease(v309);
  if (v29 > 3)
    goto LABEL_672;
LABEL_669:
  v310 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  v311 = 2;
  if (v310 > 0xFFF5)
    v311 = 4;
  if (v310 <= 0xF5)
LABEL_672:
    v311 = 1;
  v312 = ((((v311 + v29) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  *(_QWORD *)((v37 + v312) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v38 + v312) & 0xFFFFFFFFFFFFF8);
  if (v29 > 3)
    goto LABEL_677;
LABEL_674:
  v313 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  v314 = 2;
  if (v313 > 0xFFF5)
    v314 = 4;
  if (v313 <= 0xF5)
    goto LABEL_677;
LABEL_678:
  v315 = ((((((v314 + v29) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  *(_BYTE *)(v315 + v37) = *(_BYTE *)(v315 + v38);
  return a1;
}

uint64_t sub_1004E82F8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  char v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  int v38;
  unsigned int v39;
  int v40;
  int v41;
  int v42;
  char v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  char v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t v58;
  unsigned int v59;
  uint64_t v60;
  unsigned int v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t result;
  int v65;
  char v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  int v70;
  char v71;
  int v72;
  int v73;
  char v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  uint64_t v79;
  unsigned int v80;
  unint64_t v81;
  char v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  uint64_t v86;
  unint64_t v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  char v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  int v100;
  uint64_t v101;

  v101 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v101 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if ((_DWORD)v6)
    v7 = v6 - 1;
  else
    v7 = 0;
  v8 = *(_QWORD *)(type metadata accessor for Date(0) - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = 25;
  if (v9 > 0x19)
    v10 = *(_QWORD *)(v8 + 64);
  v11 = *(_DWORD *)(v8 + 80) & 0xF8;
  v12 = v11 | 7;
  v13 = v10 + ((v11 + 15) & ~(v11 | 7));
  v14 = (((v10 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  v15 = *(_QWORD *)(type metadata accessor for REMHashtagLabelSpecifier(0) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = ((*(_QWORD *)(v15 + 64) + ((v16 + 8) & ~v16) + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v13 + 1 > v14)
    v18 = v13 + 1;
  else
    v18 = v14;
  if (v18 > v17)
    v17 = v18;
  if (v17 <= (v9 & 0xFFFFFFFFFFFFFFF8) + 16)
    v19 = (v9 & 0xFFFFFFFFFFFFFFF8) + 16;
  else
    v19 = v17;
  v20 = *(_QWORD *)(type metadata accessor for AnyTip(0) - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = ((v21 + 1) & ~v21) + *(_QWORD *)(v20 + 64);
  if (v19 > v22)
    v22 = v19;
  if (v22 <= 0x18)
    v22 = 24;
  v23 = 8 * v22;
  if (v22 > 3)
  {
    v24 = 11;
LABEL_20:
    v25 = 8;
    goto LABEL_21;
  }
  v29 = ((1 << v23) + 1) >> v23;
  if (v29 > 0xFFF5)
  {
LABEL_29:
    v28 = 2147483646;
    goto LABEL_30;
  }
  v24 = v29 + 10;
  if (v29 <= 0xF5)
    goto LABEL_20;
  v25 = 16;
LABEL_21:
  v26 = (1 << v25) - v24;
  if (v26 <= 0x7FFFFFFF)
    v27 = 0x7FFFFFFF;
  else
    v27 = v26;
  if ((v26 & 0x80000000) != 0)
    goto LABEL_29;
  v28 = v27 - 1;
LABEL_30:
  if (v28 <= v7)
    v30 = v7;
  else
    v30 = v28;
  v31 = *(_QWORD *)(v5 + 64);
  if (!(_DWORD)v6)
    ++v31;
  if (v22 > 3)
    goto LABEL_39;
  v32 = ((1 << v23) + 1) >> v23;
  v33 = 2;
  if (v32 > 0xFFF5)
    v33 = 4;
  if (v32 <= 0xF5)
LABEL_39:
    v33 = 1;
  if (!a2)
    return 0;
  v34 = v16 | v12 | v21;
  v35 = v31 + v34;
  if (a2 > v30)
  {
    v36 = (v35 & ~v34)
        + ((((((v33 + v22) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 9;
    v37 = 8 * v36;
    if (v36 > 3)
      goto LABEL_43;
    v39 = ((a2 - v30 + ~(-1 << v37)) >> v37) + 1;
    if (HIWORD(v39))
    {
      v38 = *(_DWORD *)(a1 + v36);
      if (!v38)
        goto LABEL_59;
      goto LABEL_50;
    }
    if (v39 > 0xFF)
    {
      v38 = *(unsigned __int16 *)(a1 + v36);
      if (!*(_WORD *)(a1 + v36))
        goto LABEL_59;
      goto LABEL_50;
    }
    if (v39 >= 2)
    {
LABEL_43:
      v38 = *(unsigned __int8 *)(a1 + v36);
      if (!*(_BYTE *)(a1 + v36))
        goto LABEL_59;
LABEL_50:
      v40 = (v38 - 1) << v37;
      if (v36 > 3)
        v40 = 0;
      if ((_DWORD)v36)
      {
        if (v36 <= 3)
          v41 = v36;
        else
          v41 = 4;
        __asm { BR              X11 }
      }
      return v30 + v40 + 1;
    }
  }
LABEL_59:
  if (v22 > 3)
  {
    v42 = 11;
LABEL_61:
    v43 = 8;
    goto LABEL_62;
  }
  v47 = ((1 << v23) + 1) >> v23;
  if (v47 > 0xFFF5)
  {
LABEL_70:
    v46 = 2147483646;
    goto LABEL_71;
  }
  v42 = v47 + 10;
  if (v47 <= 0xF5)
    goto LABEL_61;
  v43 = 16;
LABEL_62:
  v44 = (1 << v43) - v42;
  if (v44 <= 0x7FFFFFFF)
    v45 = 0x7FFFFFFF;
  else
    v45 = v44;
  if ((v44 & 0x80000000) != 0)
    goto LABEL_70;
  v46 = v45 - 1;
LABEL_71:
  if (v46 <= v7)
    v48 = v7;
  else
    v48 = v46;
  if (v7 < v46)
  {
    v49 = ~v34;
    v50 = v35 + a1;
    if (v22 <= 3)
    {
      v57 = ((1 << v23) + 1) >> v23;
      if (v57 > 0xFFF5)
        goto LABEL_90;
      v51 = v57 + 10;
      if (v57 > 0xF5)
      {
        v52 = 16;
LABEL_78:
        v53 = (1 << v52) - v51;
        if (v53 <= 0x7FFFFFFF)
          v54 = 0x7FFFFFFF;
        else
          v54 = v53;
        if ((v53 & 0x80000000) == 0)
        {
          v55 = v54 - 1;
LABEL_91:
          v58 = v50 & v49;
          if (v22 > 3)
            goto LABEL_95;
          v59 = ((1 << v23) + 1) >> v23;
          v60 = 2;
          if (v59 > 0xFFF5)
            v60 = 4;
          if (v59 <= 0xF5)
LABEL_95:
            v60 = 1;
          if (v48 > v55)
          {
            if (((((((((v60 + v22) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 8) & 0xFFFFFFF8) != 0)
              v61 = 2;
            else
              v61 = v48 - v55 + 1;
            if (v61 >= 0x10000)
              v62 = 4;
            else
              v62 = 2;
            if (v61 < 0x100)
              v62 = 1;
            if (v61 >= 2)
              v63 = v62;
            else
              v63 = 0;
            __asm { BR              X16 }
          }
          if (v22 <= 3)
          {
            v76 = ((1 << v23) + 1) >> v23;
            if (v76 > 0xFFF5)
            {
              v68 = 0x7FFFFFFF;
              if (v22 > 3)
              {
LABEL_118:
                v70 = 11;
                goto LABEL_119;
              }
LABEL_143:
              v84 = ((1 << v23) + 1) >> v23;
              if (v84 > 0xFFF5)
                goto LABEL_146;
              v70 = v84 + 10;
              if (v84 > 0xF5)
              {
                v71 = 16;
LABEL_120:
                v72 = (1 << v71) - v70;
                if ((v72 & 0x80000000) == 0)
                {
                  if (v72 == v68)
                    goto LABEL_122;
                  goto LABEL_147;
                }
LABEL_146:
                if (v68 == 0x7FFFFFFF)
                {
LABEL_122:
                  if (v22 <= 3)
                  {
                    v77 = ((1 << v23) + 1) >> v23;
                    if (v77 > 0xFFF5)
                      goto LABEL_134;
                    v73 = v77 + 10;
                    if (v77 > 0xF5)
                    {
                      v74 = 16;
LABEL_125:
                      v75 = (1 << v74) - v73;
                      if ((v75 & 0x80000000) == 0)
                      {
                        if (v22 > 3)
                          goto LABEL_138;
LABEL_135:
                        v78 = ((1 << v23) + 1) >> v23;
                        v79 = 2;
                        if (v78 > 0xFFF5)
                          v79 = 4;
                        if (v78 > 0xF5)
                        {
LABEL_139:
                          v80 = v68 - v75;
                          if (v68 <= v75)
                            goto LABEL_169;
                          v81 = v79 + v22;
                          v82 = 8 * (v79 + v22);
                          if (v81 > 3)
                          {
LABEL_141:
                            v83 = *(unsigned __int8 *)(v58 + v81);
                            goto LABEL_161;
                          }
                          v89 = ((v80 + ~(-1 << v82)) >> v82) + 1;
                          if (HIWORD(v89))
                          {
                            v83 = *(_DWORD *)(v58 + v81);
                          }
                          else
                          {
                            if (v89 <= 0xFF)
                            {
                              if (v89 < 2)
                                goto LABEL_169;
                              goto LABEL_141;
                            }
                            v83 = *(unsigned __int16 *)(v58 + v81);
                          }
LABEL_161:
                          if (v83)
                          {
                            v90 = (v83 - 1) << v82;
                            if (v81 > 3)
                              v90 = 0;
                            if ((_DWORD)v81)
                            {
                              if (v81 <= 3)
                                v91 = v81;
                              else
                                v91 = 4;
                              __asm { BR              X13 }
                            }
                            v88 = v75 + v90 + 1;
                            goto LABEL_183;
                          }
LABEL_169:
                          if (!v75)
                            return 0;
                          if (v22 <= 3)
                          {
                            v98 = ((1 << v23) + 1) >> v23;
                            if (v98 > 0xFFF5)
                            {
                              v93 = *(_DWORD *)(v58 + v22);
                              v94 = ~v93;
LABEL_178:
                              v97 = 0x7FFFFFFF;
LABEL_179:
                              if (v97 > v94)
                              {
                                v88 = -v93;
                                goto LABEL_183;
                              }
                              return 0;
                            }
                            v96 = v98 + 10;
                            if (v98 > 0xF5)
                            {
                              v100 = *(unsigned __int16 *)(v58 + v22);
                              v93 = v100 | 0xFFFF0000;
                              v94 = v100 ^ 0xFFFF;
                              v95 = 16;
                            }
                            else
                            {
                              v99 = *(unsigned __int8 *)(v58 + v22);
                              v93 = v99 | 0xFFFFFF00;
                              v94 = v99 ^ 0xFF;
                              v95 = 8;
                            }
                          }
                          else
                          {
                            v92 = *(unsigned __int8 *)(v58 + v22);
                            v93 = v92 | 0xFFFFFF00;
                            v94 = v92 ^ 0xFF;
                            v95 = 8;
                            v96 = 11;
                          }
                          v97 = (1 << v95) - v96;
                          if ((v97 & 0x80000000) == 0)
                            goto LABEL_179;
                          goto LABEL_178;
                        }
LABEL_138:
                        v79 = 1;
                        goto LABEL_139;
                      }
LABEL_134:
                      v75 = 0x7FFFFFFF;
                      if (v22 > 3)
                        goto LABEL_138;
                      goto LABEL_135;
                    }
                  }
                  else
                  {
                    v73 = 11;
                  }
                  v74 = 8;
                  goto LABEL_125;
                }
LABEL_147:
                if (v22 > 3)
                  goto LABEL_151;
                v85 = ((1 << v23) + 1) >> v23;
                v86 = 2;
                if (v85 > 0xFFF5)
                  v86 = 4;
                if (v85 <= 0xF5)
LABEL_151:
                  v86 = 1;
                v87 = *(_QWORD *)((((v58 + v22 + v86) & 0xFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8);
                if (v87 >= 0xFFFFFFFF)
                  LODWORD(v87) = -1;
                v88 = v87 + 1;
LABEL_183:
                result = v88 - 1;
                if (v88 > 1)
                  return result;
                return 0;
              }
LABEL_119:
              v71 = 8;
              goto LABEL_120;
            }
            v65 = v76 + 10;
            if (v76 > 0xF5)
            {
              v66 = 16;
LABEL_112:
              v67 = (1 << v66) - v65;
              v68 = 0x7FFFFFFF;
              if (v67 <= 0x7FFFFFFF)
                v69 = 0x7FFFFFFF;
              else
                v69 = v67;
              if ((v67 & 0x80000000) == 0)
                v68 = v69;
              if (v22 > 3)
                goto LABEL_118;
              goto LABEL_143;
            }
          }
          else
          {
            v65 = 11;
          }
          v66 = 8;
          goto LABEL_112;
        }
LABEL_90:
        v55 = 2147483646;
        goto LABEL_91;
      }
    }
    else
    {
      v51 = 11;
    }
    v52 = 8;
    goto LABEL_78;
  }
  if (v6 < 2)
    return 0;
  v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, v6, v101);
  if (v56 >= 2)
    return v56 - 1;
  else
    return 0;
}

void sub_1004E8BB0(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  char v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  size_t v37;
  int v38;
  int v39;
  unsigned int v40;
  int v41;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = v7 - 1;
  else
    v8 = 0;
  v9 = *(_QWORD *)(type metadata accessor for Date(0) - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = 25;
  if (v10 > 0x19)
    v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_DWORD *)(v9 + 80) & 0xF8;
  v13 = v12 | 7;
  v14 = v11 + ((v12 + 15) & ~(v12 | 7));
  v15 = (((v11 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  v16 = *(_QWORD *)(type metadata accessor for REMHashtagLabelSpecifier(0) - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = ((*(_QWORD *)(v16 + 64) + ((v17 + 8) & ~v17) + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v14 + 1 > v15)
    v19 = v14 + 1;
  else
    v19 = v15;
  if (v19 > v18)
    v18 = v19;
  if (v18 <= (v10 & 0xFFFFFFFFFFFFFFF8) + 16)
    v20 = (v10 & 0xFFFFFFFFFFFFFFF8) + 16;
  else
    v20 = v18;
  v21 = *(_QWORD *)(type metadata accessor for AnyTip(0) - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = ((v22 + 1) & ~v22) + *(_QWORD *)(v21 + 64);
  if (v20 > v23)
    v23 = v20;
  if (v23 <= 0x18)
    v23 = 24;
  v24 = 8 * v23;
  if (v23 <= 3)
  {
    v33 = ((1 << v24) + 1) >> v24;
    if (v33 > 0xFFF5)
    {
      v32 = 2147483646;
      v26 = a2;
      v27 = v7;
      v28 = a3;
      goto LABEL_31;
    }
    v25 = v33 + 10;
    if (v33 > 0xF5)
    {
      v29 = 16;
      v26 = a2;
      v27 = v7;
      v28 = a3;
      goto LABEL_21;
    }
  }
  else
  {
    v25 = 11;
  }
  v26 = a2;
  v27 = v7;
  v28 = a3;
  v29 = 8;
LABEL_21:
  v30 = (1 << v29) - v25;
  if (v30 <= 0x7FFFFFFF)
    v31 = 0x7FFFFFFF;
  else
    v31 = v30;
  if ((v30 & 0x80000000) != 0)
    v32 = 2147483646;
  else
    v32 = v31 - 1;
LABEL_31:
  if (v32 <= v8)
    v32 = v8;
  if (v27)
    v34 = *(_QWORD *)(v6 + 64);
  else
    v34 = *(_QWORD *)(v6 + 64) + 1;
  if (v23 > 3)
    goto LABEL_40;
  v35 = ((1 << v24) + 1) >> v24;
  v36 = 2;
  if (v35 > 0xFFF5)
    v36 = 4;
  if (v35 <= 0xF5)
LABEL_40:
    v36 = 1;
  v37 = ((v34 + (v17 | v13 | v22)) & ~(v17 | v13 | v22))
      + ((((((v36 + v23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 9;
  if (v28 <= v32)
  {
    v38 = 0;
  }
  else if (v37 <= 3)
  {
    v40 = ((v28 - v32 + ~(-1 << (8 * v37))) >> (8 * v37)) + 1;
    if (HIWORD(v40))
    {
      v38 = 4;
    }
    else if (v40 >= 0x100)
    {
      v38 = 2;
    }
    else
    {
      v38 = v40 > 1;
    }
  }
  else
  {
    v38 = 1;
  }
  if (v32 < v26)
  {
    v39 = ~v32 + v26;
    if (v37 < 4)
    {
      if ((_DWORD)v37)
      {
        v41 = v39 & ~(-1 << (8 * v37));
        bzero(a1, v37);
        if ((_DWORD)v37 == 3)
        {
          *(_WORD *)a1 = v41;
          a1[2] = BYTE2(v41);
        }
        else if ((_DWORD)v37 == 2)
        {
          *(_WORD *)a1 = v41;
        }
        else
        {
          *a1 = v41;
        }
      }
    }
    else
    {
      bzero(a1, v37);
      *(_DWORD *)a1 = v39;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void sub_1004E91C0()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + v1) = v0;
  JUMPOUT(0x1004E9430);
}

void sub_1004E91C8()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v2 + v1) = v0;
  JUMPOUT(0x1004E9430);
}

void sub_1004E91D0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v2 + v1) = v0;
  JUMPOUT(0x1004E9430);
}

void sub_1004E91D8(unsigned int a1@<W8>)
{
  char v1;
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a1 <= 3 && ((1 << v1) + 1) >> v1 > 0xFFF5)
    JUMPOUT(0x1004E9258);
  JUMPOUT(0x1004E925CLL);
}

void sub_1004E91E0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1004E9430);
}

void sub_1004E9250()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1004E9430);
}

void sub_1004E934C()
{
  __int16 v0;
  _WORD *v1;

  *v1 = v0;
  JUMPOUT(0x1004E9430);
}

void sub_1004E9354()
{
  int v0;
  uint64_t v1;

  *(_WORD *)v1 = v0;
  *(_BYTE *)(v1 + 2) = BYTE2(v0);
  JUMPOUT(0x1004E9430);
}

void sub_1004E9364()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
  JUMPOUT(0x1004E9430);
}

void sub_1004E9694(uint64_t a1@<X8>)
{
  char v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;

  *(_BYTE *)(v3 + v4) = 0;
  v5 = ~v2;
  if (a1 > 3)
    goto LABEL_4;
  v6 = ((1 << v1) + 1) >> v1;
  if (v6 > 0xFFF5)
  {
    *(_DWORD *)(v3 + a1) = v5;
  }
  else
  {
    if (v6 <= 0xF5)
    {
LABEL_4:
      *(_BYTE *)(v3 + a1) = v5;
      goto LABEL_7;
    }
    *(_WORD *)(v3 + a1) = v5;
  }
LABEL_7:
  JUMPOUT(0x1004E9430);
}

void sub_1004E96DC(uint64_t a1@<X8>)
{
  char v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;

  *(_WORD *)(v3 + v4) = 0;
  v5 = ~v2;
  if (a1 > 3)
    goto LABEL_4;
  v6 = ((1 << v1) + 1) >> v1;
  if (v6 > 0xFFF5)
  {
    *(_DWORD *)(v3 + a1) = v5;
  }
  else
  {
    if (v6 <= 0xF5)
    {
LABEL_4:
      *(_BYTE *)(v3 + a1) = v5;
      goto LABEL_7;
    }
    *(_WORD *)(v3 + a1) = v5;
  }
LABEL_7:
  JUMPOUT(0x1004E9430);
}

void sub_1004E9760()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
  JUMPOUT(0x1004E9430);
}

void sub_1004E9768()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
  JUMPOUT(0x1004E9430);
}

void sub_1004E9770()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = v0;
  JUMPOUT(0x1004E9430);
}

uint64_t type metadata accessor for TTRIBoardReminderCellAutoCompleteConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIBoardReminderCellAutoCompleteConfiguration);
}

void sub_1004E9788(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100664120)
  {
    v2 = type metadata accessor for TTRIReminderCellAutoCompleteViewModel(255);
    v3 = type metadata accessor for TTRBoardReminderCellOptionalUpdate(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100664120);
  }
}

void sub_1004E97DC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  _QWORD *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  _BYTE v17[16];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _BYTE v23[40];

  v5 = TTRIShowRemindersEditableCellScrollingTarget.resolvedTargetsToTry.getter();
  v6 = (_QWORD *)v5;
  v18 = v5;
  v19 = a2;
  if ((a3 & 1) != 0)
  {
    v7 = *(_QWORD *)(v5 + 16);
    if (v7)
    {
      v8 = (char *)(v5 + 32);
      v9 = _swiftEmptyArrayStorage;
      do
      {
        v11 = *v8++;
        sub_1004EBFE8(v11);
        v12 = v20;
        v16 = v21;
        v13 = v22;
        sub_10029A308((uint64_t)&v20, (uint64_t)v23);
        if ((v23[32] & 1) == 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
            v9 = sub_100457018(0, v9[2] + 1, 1, v9);
          v15 = v9[2];
          v14 = v9[3];
          if (v15 >= v14 >> 1)
            v9 = sub_100457018((_QWORD *)(v14 > 1), v15 + 1, 1, v9);
          v9[2] = v15 + 1;
          v10 = &v9[4 * v15];
          v10[4] = v12;
          *(_OWORD *)(v10 + 5) = v16;
          v10[7] = v13;
        }
        --v7;
      }
      while (v7);
    }
    else
    {
      v9 = _swiftEmptyArrayStorage;
    }
    UIScrollView.scrollRectToFullyVisibleAnimated(_:)((Swift::OpaquePointer)v9);
    swift_bridgeObjectRelease(v6);
    v6 = v9;
  }
  else
  {
    UIScrollView.iterativelyScrollRectToFullyVisible(with:)(sub_1004EBFE0, v17);
  }
  swift_bridgeObjectRelease(v6);
}

uint64_t sub_1004E9944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100664128);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100664128);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1004E99D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v4 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v3[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750(&qword_100646950);
  v3[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v3[15] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[16] = v7;
  v3[17] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v3[18] = v8;
  v3[19] = static MainActor.shared.getter(v8);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor, v9);
  v3[20] = v10;
  v3[21] = v11;
  return swift_task_switch(sub_1004E9AB4, v10, v11);
}

uint64_t sub_1004E9AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  Class isa;
  id v24;
  uint64_t v25;
  Class v26;
  Class v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;

  *(_QWORD *)(v0 + 64) = 0;
  v1 = *(_QWORD *)(v0 + 96);
  v2 = OBJC_IVAR____TtC9Reminders34TTRIBoardColumnScrollingController_dataSource;
  *(_QWORD *)(v0 + 176) = OBJC_IVAR____TtC9Reminders34TTRIBoardColumnScrollingController_collectionView;
  *(_QWORD *)(v0 + 184) = *(_QWORD *)(v1 + v2);
  swift_beginAccess(v0 + 64, v0 + 16, 1, 0);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 112);
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(*(_QWORD *)(v0 + 80));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3) == 1)
  {
    v6 = *(_QWORD *)(v0 + 112);
    swift_release();
    sub_1000073A0(v6, &qword_100646950);
    if (qword_10063D890 != -1)
      swift_once(&qword_10063D890, sub_1004E9944);
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 80);
    v9 = type metadata accessor for Logger(0);
    sub_100012DC4(v9, (uint64_t)qword_100664128);
    v10 = sub_1000CDF24(v8, v7);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.debug.getter();
    v13 = os_log_type_enabled(v11, v12);
    v14 = *(_QWORD *)(v0 + 104);
    if (v13)
    {
      v15 = (uint8_t *)swift_slowAlloc(12, -1);
      v16 = swift_slowAlloc(32, -1);
      v49 = v16;
      *(_DWORD *)v15 = 136315138;
      v17 = TTRRemindersListViewModel.ItemID.description.getter();
      v19 = v18;
      *(_QWORD *)(v0 + 72) = sub_100027E40(v17, v18, &v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80, v15 + 4, v15 + 12);
      swift_bridgeObjectRelease(v19);
      sub_1000CDF68(v14);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "TTRIBoardColumnScrollingController: indexPath not found {itemID: %s}", v15, 0xCu);
      swift_arrayDestroy(v16, 1, &type metadata for Any[8]);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);
    }
    else
    {
      sub_1000CDF68(*(_QWORD *)(v0 + 104));
    }

    goto LABEL_12;
  }
  v20 = *(_QWORD *)(v0 + 176);
  v21 = *(_QWORD *)(v0 + 96);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 32))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
  v22 = *(id *)(v21 + v20);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v24 = objc_msgSend(v22, "cellForItemAtIndexPath:", isa);

  v25 = *(_QWORD *)(v0 + 88);
  v26 = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v22, "scrollToItemAtIndexPath:atScrollPosition:animated:", v26, v25, 1);

  v27 = IndexPath._bridgeToObjectiveC()().super.isa;
  v28 = objc_msgSend(v22, "cellForItemAtIndexPath:", v27);

  if (v28)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
    v30 = *(_QWORD *)(v0 + 64);
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(v0 + 64) = v32;
      swift_release();
      v33 = type metadata accessor for TTRIBoardReminderCell(0);
      v34 = swift_dynamicCastClass(v28, v33);
      if (v34)
      {
        v35 = v34;
LABEL_13:
        v37 = *(_QWORD *)(v0 + 104);
        v36 = *(_QWORD *)(v0 + 112);
        swift_task_dealloc(*(_QWORD *)(v0 + 136));
        swift_task_dealloc(v36);
        swift_task_dealloc(v37);
        return (*(uint64_t (**)(uint64_t))(v0 + 8))(v35);
      }
      v43 = qword_10063D890;
      v22 = v28;
      if (v43 == -1)
        goto LABEL_16;
    }
    swift_once(&qword_10063D890, sub_1004E9944);
LABEL_16:
    v44 = type metadata accessor for Logger(0);
    v45 = sub_100012DC4(v44, (uint64_t)qword_100664128);
    v46 = Logger.logObject.getter(v45);
    v47 = static os_log_type_t.fault.getter(v46);
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v48 = 0;
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "TTRIBoardColumnScrollingController: unexpected cell type", v48, 2u);
      swift_slowDealloc(v48, -1, -1);

    }
    else
    {

    }
LABEL_12:
    v35 = 0;
    goto LABEL_13;
  }
  v39 = *(_QWORD *)(v0 + 136);
  v40 = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 192) = static MainActor.shared.getter(v29);
  v41 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 200) = v41;
  *(_QWORD *)(v41 + 16) = v40;
  *(_QWORD *)(v41 + 24) = v39;
  v42 = (_QWORD *)swift_task_alloc(async function pointer to withTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v0 + 208) = v42;
  *v42 = v0;
  v42[1] = sub_1004E9F7C;
  return withTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_1004E9F7C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 200);
  swift_task_dealloc(*(_QWORD *)(*v0 + 208));
  swift_release();
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1004E9FE4, *(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 168));
}

uint64_t sub_1004E9FE4()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  Class v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  Class isa;
  char **v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  Class v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t *v65;
  uint64_t v66;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 128) + 8))(*(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 120));
  v3 = (Class)(v1 + 64);
  v2 = *(_QWORD *)(v1 + 64);
  v4 = v2 + 1;
  if (__OFADD__(v2, 1))
    goto LABEL_38;
  *(_QWORD *)v3 = v4;
  if (v4 > 4)
  {
    swift_release();
    goto LABEL_8;
  }
  v0 = (id)(v1 + 80);
  v5 = *(_QWORD *)(v1 + 120);
  v6 = *(_QWORD *)(v1 + 128);
  v7 = *(_QWORD *)(v1 + 112);
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(*(_QWORD *)(v1 + 80));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5) == 1)
  {
    v8 = *(_QWORD *)(v1 + 112);
    swift_release();
    sub_1000073A0(v8, &qword_100646950);
    if (qword_10063D890 == -1)
      goto LABEL_5;
    goto LABEL_39;
  }
  v26 = *(_QWORD *)(v1 + 176);
  v27 = *(_QWORD *)(v1 + 96);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 128) + 32))(*(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120));
  v28 = *(void **)(v27 + v26);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v30 = &selRef_supportsAttachments;
  v0 = objc_msgSend(v28, "cellForItemAtIndexPath:", isa);

  if (v4 && v0)
    goto LABEL_27;
  if (v4 >= 1)
  {
    if ((static Task<>.isCancelled.getter() & 1) != 0)
    {
      v28 = (void *)(v1 + 40);
      swift_release();
      if (qword_10063D890 != -1)
        swift_once(&qword_10063D890, sub_1004E9944);
      v31 = type metadata accessor for Logger(0);
      v32 = sub_100012DC4(v31, (uint64_t)qword_100664128);
      v33 = Logger.logObject.getter(v32);
      v34 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v35 = 0;
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "TTRIBoardColumnScrollingController: task canceled", v35, 2u);
        swift_slowDealloc(v35, -1, -1);
      }
      v30 = *(char ***)(v1 + 128);
      v36 = *(_QWORD *)(v1 + 136);
      v37 = *(_QWORD *)(v1 + 120);

      ((void (*)(uint64_t, uint64_t))v30[1])(v36, v37);
      swift_beginAccess(v1 + 64, v1 + 40, 1, 0);
      v38 = *(_QWORD *)(v1 + 64);
      v39 = __OFADD__(v38, 1);
      v40 = v38 + 1;
      if (!v39)
      {
        *(_QWORD *)v3 = v40;
        if (!v0)
          goto LABEL_8;
        goto LABEL_30;
      }
      __break(1u);
    }
    else if (qword_10063D890 == -1)
    {
LABEL_23:
      v41 = type metadata accessor for Logger(0);
      v42 = sub_100012DC4(v41, (uint64_t)qword_100664128);
      v43 = Logger.logObject.getter(v42);
      v44 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = swift_slowAlloc(12, -1);
        *(_DWORD *)v45 = 134217984;
        *(_QWORD *)(v45 + 4) = *(_QWORD *)v3;
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "TTRIBoardColumnScrollingController: additional scrollToItem animated {pass: %ld}", (uint8_t *)v45, 0xCu);
        swift_slowDealloc(v45, -1, -1);
      }

      goto LABEL_26;
    }
    swift_once(&qword_10063D890, sub_1004E9944);
    goto LABEL_23;
  }
LABEL_26:
  v46 = *(_QWORD *)(v1 + 88);
  v47 = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v28, "scrollToItemAtIndexPath:atScrollPosition:animated:", v47, v46, 1);

LABEL_27:
  v3 = IndexPath._bridgeToObjectiveC()().super.isa;
  v48 = objc_msgSend(v28, v30[195], v3);

  if (v48)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 128) + 8))(*(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 120));
    v50 = *(_QWORD *)(v1 + 64);
    v39 = __OFADD__(v50, 1);
    v51 = v50 + 1;
    if (!v39)
    {
      *(_QWORD *)(v1 + 64) = v51;
      swift_release();
      v0 = v48;
LABEL_30:
      v52 = type metadata accessor for TTRIBoardReminderCell(0);
      v53 = swift_dynamicCastClass(v0, v52);
      if (v53)
      {
        v22 = v53;
        goto LABEL_9;
      }
      v58 = qword_10063D890;
      v59 = v0;
      if (v58 != -1)
        swift_once(&qword_10063D890, sub_1004E9944);
      v60 = type metadata accessor for Logger(0);
      v61 = sub_100012DC4(v60, (uint64_t)qword_100664128);
      v62 = Logger.logObject.getter(v61);
      v63 = static os_log_type_t.fault.getter(v62);
      if (os_log_type_enabled(v62, v63))
      {
        v64 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v64 = 0;
        _os_log_impl((void *)&_mh_execute_header, v62, v63, "TTRIBoardColumnScrollingController: unexpected cell type", v64, 2u);
        swift_slowDealloc(v64, -1, -1);

      }
      else
      {

      }
LABEL_8:
      v22 = 0;
LABEL_9:
      v24 = *(_QWORD *)(v1 + 104);
      v23 = *(_QWORD *)(v1 + 112);
      swift_task_dealloc(*(_QWORD *)(v1 + 136));
      swift_task_dealloc(v23);
      swift_task_dealloc(v24);
      return (*(uint64_t (**)(uint64_t))(v1 + 8))(v22);
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_once(&qword_10063D890, sub_1004E9944);
LABEL_5:
    v9 = *(_QWORD *)(v1 + 104);
    v10 = *(_QWORD *)(v1 + 80);
    v11 = type metadata accessor for Logger(0);
    sub_100012DC4(v11, (uint64_t)qword_100664128);
    v12 = sub_1000CDF24(v10, v9);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.debug.getter();
    v15 = os_log_type_enabled(v13, v14);
    v16 = *(_QWORD *)(v1 + 104);
    if (v15)
    {
      v65 = (uint64_t *)((char *)v3 + 8);
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v66 = v18;
      *(_DWORD *)v17 = 136315138;
      v19 = TTRRemindersListViewModel.ItemID.description.getter();
      v21 = v20;
      *v65 = sub_100027E40(v19, v20, &v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v65, v0, v17 + 4, v17 + 12);
      swift_bridgeObjectRelease(v21);
      sub_1000CDF68(v16);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "TTRIBoardColumnScrollingController: indexPath not found {itemID: %s}", v17, 0xCu);
      swift_arrayDestroy(v18, 1, &type metadata for Any[8]);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);

    }
    else
    {
      sub_1000CDF68(*(_QWORD *)(v1 + 104));

    }
    goto LABEL_8;
  }
  v54 = *(_QWORD *)(v1 + 136);
  v55 = *(_QWORD *)(v1 + 96);
  *(_QWORD *)(v1 + 192) = static MainActor.shared.getter(v49);
  v56 = swift_task_alloc(32);
  *(_QWORD *)(v1 + 200) = v56;
  *(_QWORD *)(v56 + 16) = v55;
  *(_QWORD *)(v56 + 24) = v54;
  v57 = (_QWORD *)swift_task_alloc(async function pointer to withTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v1 + 208) = v57;
  *v57 = v1;
  v57[1] = sub_1004E9F7C;
  return withTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_1004EA688(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  v4 = sub_10002A750(&qword_1006559F0);
  v3[12] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[13] = v5;
  v3[14] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_10002A750(&qword_100646950) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[15] = swift_task_alloc(v6);
  v3[16] = swift_task_alloc(v6);
  v7 = type metadata accessor for IndexPath(0);
  v3[17] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[18] = v8;
  v3[19] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v3[20] = v9;
  v3[21] = static MainActor.shared.getter(v9);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor, v10);
  v3[22] = v11;
  v3[23] = v12;
  return swift_task_switch(sub_1004EA784, v11, v12);
}

uint64_t sub_1004EA784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id (*v8)();
  Class isa;
  id v10;
  id v11;
  Class v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t isEscapingClosureAtFileLocation;
  Class v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(*(_QWORD *)(v0 + 72));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 128);
    swift_release();
    sub_1000073A0(v4, &qword_100646950);
    v5 = 0;
LABEL_16:
    v31 = *(_QWORD *)(v0 + 120);
    v30 = *(_QWORD *)(v0 + 128);
    v32 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
  }
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 88);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 32))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
  v8 = *(id (**)())(v7 + OBJC_IVAR____TtC9Reminders34TTRIBoardColumnScrollingController_collectionView);
  *(_QWORD *)(v0 + 192) = v8;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(v8, "cellForItemAtIndexPath:", isa);

  v11 = v10;
  v12 = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v8, "scrollToItemAtIndexPath:atScrollPosition:animated:", v12, v6, 0);

  if (v11)
  {
    v8 = 0;
    v13 = 0;
    goto LABEL_8;
  }
  v14 = *(void **)(v0 + 88);
  v15 = (void *)objc_opt_self(UIView);
  v13 = swift_allocObject(&unk_10060C558, 24, 7);
  *(_QWORD *)(v0 + 200) = v13;
  *(_QWORD *)(v13 + 16) = v14;
  v16 = swift_allocObject(&unk_10060C580, 32, 7);
  *(_QWORD *)(v16 + 16) = sub_1004EBF60;
  *(_QWORD *)(v16 + 24) = v13;
  *(_QWORD *)(v0 + 48) = sub_10001B278;
  *(_QWORD *)(v0 + 56) = v16;
  *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_10001B258;
  *(_QWORD *)(v0 + 40) = &unk_10060C598;
  v17 = _Block_copy((const void *)(v0 + 16));
  v18 = v14;
  swift_retain();
  objc_msgSend(v15, "performWithoutAnimation:", v17, swift_release().n128_f64[0]);
  _Block_release(v17);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v16, "", 148, 150, 44, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  v20 = IndexPath._bridgeToObjectiveC()().super.isa;
  v11 = objc_msgSend(v8, "cellForItemAtIndexPath:", v20);

  if (v11)
  {
    v8 = sub_1004EBF60;
LABEL_8:
    swift_release();
    v22 = type metadata accessor for TTRIBoardReminderCell(0);
    v23 = swift_dynamicCastClass(v11, v22);
    if (v23)
    {
      v5 = v23;
LABEL_15:
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
      sub_1000381B8((uint64_t)v8, v13);
      goto LABEL_16;
    }
    v24 = qword_10063D890;
    isEscapingClosureAtFileLocation = (uint64_t)v11;
    if (v24 == -1)
    {
LABEL_11:
      v25 = type metadata accessor for Logger(0);
      v26 = sub_100012DC4(v25, (uint64_t)qword_100664128);
      v27 = Logger.logObject.getter(v26);
      v28 = static os_log_type_t.fault.getter(v27);
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v29 = 0;
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "TTRIBoardColumnScrollingController: unexpected cell type", v29, 2u);
        swift_slowDealloc(v29, -1, -1);

      }
      else
      {

      }
      v5 = 0;
      goto LABEL_15;
    }
LABEL_19:
    swift_once(&qword_10063D890, sub_1004E9944);
    goto LABEL_11;
  }
  v34 = *(_QWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v21);
  v36 = dispatch thunk of Actor.unownedExecutor.getter(v34, &protocol witness table for MainActor, v35);
  *(_QWORD *)(v0 + 216) = v36;
  *(_QWORD *)(v0 + 224) = v37;
  return swift_task_switch(sub_1004EAB98, v36, v37);
}

uint64_t sub_1004EAB98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v1 = v0[19];
  v0[8] = *(_QWORD *)(v0[11] + OBJC_IVAR____TtC9Reminders34TTRIBoardColumnScrollingController_willDisplayCell);
  v2 = sub_10002A750(&qword_1006559F8);
  v3 = sub_100023FEC(&qword_100655A00, &qword_1006559F8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher<>.rem_bufferedValues.getter(v2, v3);
  v4 = swift_task_alloc(32);
  v0[29] = v4;
  *(_QWORD *)(v4 + 16) = v1;
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_100655A18 + dword_100655A18);
  v5 = (_QWORD *)swift_task_alloc(unk_100655A1C);
  v0[30] = v5;
  *v5 = v0;
  v5[1] = sub_1004EAC84;
  return v7(v0[15], (uint64_t)&unk_100664218, v4);
}

uint64_t sub_1004EAC84()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 232);
  v4 = *(_QWORD *)(*v0 + 112);
  v3 = *(_QWORD *)(*v0 + 120);
  v5 = *(_QWORD *)(*v0 + 96);
  v6 = *(_QWORD *)(*v0 + 104);
  swift_task_dealloc(*(_QWORD *)(*v0 + 240));
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  sub_1000073A0(v3, &qword_100646950);
  return swift_task_switch(sub_1004EAD10, *(_QWORD *)(v1 + 216), *(_QWORD *)(v1 + 224));
}

uint64_t sub_1004EAD10()
{
  uint64_t v0;

  swift_release();
  return swift_task_switch(sub_1004EAD48, *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184));
}

uint64_t sub_1004EAD48()
{
  uint64_t v0;
  void *v1;
  Class isa;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(void **)(v0 + 192);
  swift_release();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v3 = objc_msgSend(v1, "cellForItemAtIndexPath:", isa);

  v4 = *(_QWORD *)(v0 + 200);
  if (!v3)
  {
LABEL_9:
    v7 = 0;
    goto LABEL_10;
  }
  v5 = type metadata accessor for TTRIBoardReminderCell(0);
  v6 = swift_dynamicCastClass(v3, v5);
  if (!v6)
  {
    v8 = qword_10063D890;
    v9 = v3;
    if (v8 != -1)
      swift_once(&qword_10063D890, sub_1004E9944);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_100012DC4(v10, (uint64_t)qword_100664128);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.fault.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "TTRIBoardColumnScrollingController: unexpected cell type", v14, 2u);
      swift_slowDealloc(v14, -1, -1);

    }
    else
    {

    }
    goto LABEL_9;
  }
  v7 = v6;
LABEL_10:
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
  sub_1000381B8((uint64_t)sub_1004EBF60, v4);
  v16 = *(_QWORD *)(v0 + 120);
  v15 = *(_QWORD *)(v0 + 128);
  v17 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
}

_QWORD *sub_1004EAF00(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  _QWORD *v7;

  v5 = a3;
  v6 = a1;
  v7 = sub_1004EC2F4(a2);

  return v7;
}

uint64_t sub_1004EAF64()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v1[3] = v0;
  v2 = sub_10002A750(&qword_1006641D0);
  v1[4] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[5] = v3;
  v1[6] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750(&qword_1006641D8);
  v1[7] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[8] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[9] = swift_task_alloc(v6);
  v1[10] = swift_task_alloc(v6);
  v7 = type metadata accessor for MainActor(0);
  v1[11] = v7;
  v1[12] = static MainActor.shared.getter(v7);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor, v8);
  v1[13] = v9;
  v1[14] = v10;
  return swift_task_switch(sub_1004EB03C, v9, v10);
}

uint64_t sub_1004EB03C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(*(_QWORD *)(v0 + 24)
                                   + OBJC_IVAR____TtC9Reminders34TTRIBoardColumnScrollingController_didEndScrollingAnimation);
  v1 = sub_10002A750((uint64_t *)&unk_100657370);
  v2 = sub_100023FEC(&qword_100644BA8, (uint64_t *)&unk_100657370, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher<>.rem_bufferedValues.getter(v1, v2);
  return swift_task_switch(sub_1004EB0D0, 0, 0);
}

uint64_t sub_1004EB0D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[7];
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v0[8] + 16))(v0[9], v0[10], v1);
  v2 = sub_100023FEC(&qword_1006641E0, &qword_1006641D8, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>);
  dispatch thunk of AsyncSequence.makeAsyncIterator()(v1, v2);
  v3 = sub_100023FEC(&qword_1006641E8, &qword_1006641D0, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[15] = v4;
  *v4 = v0;
  v4[1] = sub_1004EB1A0;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 17, v0[4], v3);
}

uint64_t sub_1004EB1A0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 120));
  if (v0)
    return (*(uint64_t (**)(_QWORD, _QWORD))(v2[5] + 8))(v2[6], v2[4]);
  else
    return swift_task_switch(sub_1004EB210, 0, 0);
}

uint64_t sub_1004EB210(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((*(_BYTE *)(v1 + 136) & 1) != 0)
  {
    v2 = *(_QWORD *)(v1 + 80);
    v3 = *(_QWORD *)(v1 + 56);
    v4 = *(_QWORD *)(v1 + 64);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 40) + 8))(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 32));
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
    v5 = *(_QWORD *)(v1 + 104);
    v6 = *(_QWORD *)(v1 + 112);
    v7 = sub_1004EB354;
  }
  else
  {
    v8 = *(_QWORD *)(v1 + 88);
    *(_QWORD *)(v1 + 128) = static MainActor.shared.getter(a1);
    v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor, v9);
    v12 = v11;
    v7 = sub_1004EB2B8;
    v5 = v10;
    v6 = v12;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_1004EB2B8()
{
  swift_release();
  return swift_task_switch(sub_1004EB2F4, 0, 0);
}

uint64_t sub_1004EB2F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[10];
  v2 = v0[7];
  v3 = v0[8];
  (*(void (**)(_QWORD, _QWORD))(v0[5] + 8))(v0[6], v0[4]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  return swift_task_switch(sub_1004EB354, v0[13], v0[14]);
}

uint64_t sub_1004EB354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004EB3AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a2;
  v5 = type metadata accessor for IndexPath(0);
  v4[5] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[6] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v4[7] = v7;
  v4[8] = swift_task_alloc((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_100649BA0);
  v4[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v4[10] = v9;
  v4[11] = static MainActor.shared.getter(v9);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor, v10);
  v4[12] = v11;
  v4[13] = v12;
  return swift_task_switch(sub_1004EB470, v11, v12);
}

uint64_t sub_1004EB470()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = v0[9];
  v2 = v0[7];
  v3 = v0[8];
  v5 = v0[5];
  v4 = v0[6];
  v7 = (void *)v0[3];
  v6 = v0[4];
  v8 = type metadata accessor for TaskPriority(0);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v20(v1, 1, 1, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
  v9 = *(unsigned __int8 *)(v4 + 80);
  v10 = (v9 + 40) & ~v9;
  v11 = (char *)swift_allocObject(&unk_10060C4E0, v10 + v2, v9 | 7);
  *((_QWORD *)v11 + 2) = 0;
  *((_QWORD *)v11 + 3) = 0;
  *((_QWORD *)v11 + 4) = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(&v11[v10], v3, v5);
  v12 = v7;
  sub_1004EB96C(v1, (uint64_t)&unk_1006641A8, (uint64_t)v11);
  sub_1000073A0(v1, &qword_100649BA0);
  v20(v1, 1, 1, v8);
  v13 = (_QWORD *)swift_allocObject(&unk_10060C508, 40, 7);
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = v12;
  v14 = v12;
  sub_1004EB96C(v1, (uint64_t)&unk_1006641B8, (uint64_t)v13);
  v15 = sub_1000073A0(v1, &qword_100649BA0);
  v16 = static MainActor.shared.getter(v15);
  v0[14] = v16;
  v17 = (_QWORD *)swift_task_alloc(async function pointer to TaskGroup.next(isolation:)[1]);
  v0[15] = v17;
  v18 = sub_10002A750(&qword_1006641C0);
  *v17 = v0;
  v17[1] = sub_1004EB640;
  return TaskGroup.next(isolation:)(v0 + 16, v16, &protocol witness table for MainActor, v18);
}

uint64_t sub_1004EB640()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 120));
  swift_release();
  return swift_task_switch(sub_1004EB694, *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
}

uint64_t sub_1004EB694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 88));
  TaskGroup.cancelAll()();
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004EB6F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v5[3] = a4;
  v5[4] = a5;
  v6 = sub_10002A750(&qword_1006559F0);
  v5[5] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[6] = v7;
  v5[7] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_100646950);
  v5[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[9] = static MainActor.shared.getter(v9);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor, v10);
  v5[10] = v11;
  v5[11] = v12;
  return swift_task_switch(sub_1004EB7B4, v11, v12);
}

uint64_t sub_1004EB7B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v1 = v0[4];
  v0[2] = *(_QWORD *)(v0[3] + OBJC_IVAR____TtC9Reminders34TTRIBoardColumnScrollingController_willDisplayCell);
  v2 = sub_10002A750(&qword_1006559F8);
  v3 = sub_100023FEC(&qword_100655A00, &qword_1006559F8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher<>.rem_bufferedValues.getter(v2, v3);
  v4 = swift_task_alloc(32);
  v0[12] = v4;
  *(_QWORD *)(v4 + 16) = v1;
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_100655A18 + dword_100655A18);
  v5 = (_QWORD *)swift_task_alloc(unk_100655A1C);
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_1004EB89C;
  return v7(v0[8], (uint64_t)&unk_100664208, v4);
}

uint64_t sub_1004EB89C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 96);
  v4 = *(_QWORD *)(*v0 + 56);
  v3 = *(_QWORD *)(*v0 + 64);
  v5 = *(_QWORD *)(*v0 + 40);
  v6 = *(_QWORD *)(*v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*v0 + 104));
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  sub_1000073A0(v3, &qword_100646950);
  return swift_task_switch(sub_1004EB928, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t sub_1004EB928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1004EB96C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  double result;
  _QWORD v28[3];
  _QWORD v29[4];

  v4 = v3;
  v8 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v8);
  v10 = (char *)&v28[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004EBE0C(a1, (uint64_t)v10);
  v11 = type metadata accessor for TaskPriority(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1000073A0((uint64_t)v10, &qword_100649BA0);
    v14 = 12544;
    v15 = *(_QWORD *)(a3 + 16);
    if (v15)
    {
LABEL_3:
      v16 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v15, v13);
      v18 = swift_unknownObjectRetain(v15);
      v19 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16, v18);
      v21 = v20;
      swift_unknownObjectRelease(v15);
      goto LABEL_6;
    }
  }
  else
  {
    v22 = TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    v14 = v22 | 0x3100;
    v15 = *(_QWORD *)(a3 + 16);
    if (v15)
      goto LABEL_3;
  }
  v19 = 0;
  v21 = 0;
LABEL_6:
  v23 = *v4;
  v24 = swift_allocObject(&unk_10060C530, 32, 7);
  *(_QWORD *)(v24 + 16) = a2;
  *(_QWORD *)(v24 + 24) = a3;
  v25 = (_QWORD *)(v21 | v19);
  if (v21 | v19)
  {
    v29[0] = 0;
    v29[1] = 0;
    v25 = v29;
    v29[2] = v19;
    v29[3] = v21;
  }
  v28[0] = 1;
  v28[1] = v25;
  v28[2] = v23;
  swift_task_create(v14, v28, (char *)&type metadata for () + 8, &unk_1006641F8, v24);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1004EBB10()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1006641CC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10006083C;
  return sub_1004EAF64();
}

uint64_t type metadata accessor for TTRIBoardColumnScrollingController()
{
  return objc_opt_self(_TtC9Reminders34TTRIBoardColumnScrollingController);
}

uint64_t sub_1004EBBFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc(dword_100664194);
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_10004A08C;
  return sub_1004EB3AC(a1, a2, v7, v6);
}

uint64_t sub_1004EBC68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1004EBCE4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1006641A4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006083C;
  return sub_1004EB6F8(a1, v5, v6, v7, v8);
}

uint64_t sub_1004EBD78()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004EBDA4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_1006641B4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10006083C;
  v2 = (_QWORD *)swift_task_alloc(dword_1006641CC);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_10006083C;
  return sub_1004EAF64();
}

uint64_t sub_1004EBE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100649BA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004EBE54()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004EBE78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1006641F4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10004A08C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1006641F0 + dword_1006641F0))(a1, v4);
}

uint64_t sub_1004EBEE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_100664204);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1004EC440;
  return sub_10031E6E0(a1, v4);
}

uint64_t sub_1004EBF3C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1004EBF60()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9Reminders34TTRIBoardColumnScrollingController_collectionView), "layoutIfNeeded");
}

uint64_t sub_1004EBF7C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004EBF8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_100664204);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10031F940;
  return sub_10031E6E0(a1, v4);
}

_QWORD *sub_1004EBFE0(void *a1)
{
  uint64_t v1;

  return sub_1004EAF00(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1004EBFE8(char a1)
{
  __asm { BR              X10 }
}

id sub_1004EC034(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  void *v29;
  void *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  id result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  objc_msgSend(v29, "bounds");
  result = objc_msgSend(v30, "convertRect:fromCoordinateSpace:", v29, v31, v32, v33, v34);
  *(_QWORD *)v28 = v36;
  *(_QWORD *)(v28 + 8) = v37;
  *(_QWORD *)(v28 + 16) = v38;
  *(_QWORD *)(v28 + 24) = v39;
  *(_BYTE *)(v28 + 32) = 0;
  return result;
}

_QWORD *sub_1004EC2F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  _BYTE v15[40];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(a1);
  v3 = 0;
  v4 = _swiftEmptyArrayStorage;
  do
  {
    sub_1004EBFE8(*(_BYTE *)(a1 + v3 + 32));
    v6 = v12;
    v11 = v13;
    v7 = v14;
    sub_10029A308((uint64_t)&v12, (uint64_t)v15);
    if ((v15[32] & 1) == 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
        v4 = sub_100457018(0, v4[2] + 1, 1, v4);
      v9 = v4[2];
      v8 = v4[3];
      if (v9 >= v8 >> 1)
        v4 = sub_100457018((_QWORD *)(v8 > 1), v9 + 1, 1, v4);
      v4[2] = v9 + 1;
      v5 = &v4[4 * v9];
      v5[4] = v6;
      *(_OWORD *)(v5 + 5) = v11;
      v5[7] = v7;
    }
    ++v3;
  }
  while (v1 != v3);
  swift_bridgeObjectRelease(a1);
  return v4;
}

void sub_1004EC444(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  Class isa;
  objc_super v22;
  CGRect v23;

  v22.receiver = v2;
  v22.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v22, "viewDidLoad");
  v3 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  objc_msgSend(v3, "sizeToFit");
  objc_msgSend(v3, "frame");
  objc_msgSend(v2, "setPreferredContentSize:", 0.0, CGRectGetHeight(v23));
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = objc_msgSend(v2, "view");
  if (!v4)
  {
    __break(1u);
    goto LABEL_6;
  }
  v5 = v4;
  objc_msgSend(v4, "addSubview:", v3);

  v6 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v7 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10051FF90;
  v8 = objc_msgSend(v2, "view");
  if (!v8)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, "centerXAnchor");

  v11 = objc_msgSend(v3, "centerXAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

  *(_QWORD *)(v7 + 32) = v12;
  v13 = objc_msgSend(v2, "view");
  if (v13)
  {
    v14 = v13;
    v15 = (void *)objc_opt_self(NSLayoutConstraint);
    v16 = objc_msgSend(v14, "centerYAnchor");

    v17 = objc_msgSend(v3, "centerYAnchor");
    v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

    *(_QWORD *)(v7 + 40) = v18;
    specialized Array._endMutation()(v19);
    v20 = v7;
    sub_1000D5620();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v15, "activateConstraints:", isa, swift_bridgeObjectRelease(v20).n128_f64[0]);

    objc_msgSend(v3, "startAnimating");
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t type metadata accessor for TTRISpinnerAlertContentViewController()
{
  return objc_opt_self(_TtC9Reminders37TTRISpinnerAlertContentViewController);
}

uint64_t sub_1004EC810@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRICollectionViewDropIntent(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRAdjustedIndexPath(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v25 - v13;
  v15 = type metadata accessor for TTRIRemindersBoardDropProposal(0);
  sub_10002B1E8(v1 + *(int *)(v15 + 24), (uint64_t)v8, type metadata accessor for TTRICollectionViewDropIntent);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v6);
  if (!EnumCaseMultiPayload)
  {
    v19 = v8[*(int *)(sub_10002A750(&qword_100664530) + 48)];
    sub_10001F580((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath);
    v20 = sub_1004ECA68();
    if ((unint64_t)(v20 - 1) >= 2 && !v20 && !v19)
    {
      sub_10001F580((uint64_t)v12, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath);
      v23 = *(_QWORD *)(v1 + 8);
      sub_10002B1E8((uint64_t)v14, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath);
      swift_storeEnumTagMultiPayload(v5, v3, 0);
      sub_1004CCC64((uint64_t)v5, v23, a1);
      sub_10001F544((uint64_t)v5, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
      sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath);
      v24 = type metadata accessor for TTRUnadjustedIndexPath(0);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a1, 0, 1, v24);
    }
    v17 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath;
    v18 = (uint64_t)v12;
    goto LABEL_8;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v17 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath;
    v18 = (uint64_t)v8;
LABEL_8:
    sub_10001F544(v18, v17);
  }
  v21 = type metadata accessor for TTRUnadjustedIndexPath(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a1, 1, 1, v21);
}

uint64_t sub_1004ECA68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t (*v7)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[12];
  int v21;

  v1 = type metadata accessor for TTRIRemindersBoardDropProposal(0);
  __chkstk_darwin(v1);
  v3 = &v20[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for TTRICollectionViewDropIntent(0);
  __chkstk_darwin(v4);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002B1E8(v0 + *(int *)(v1 + 24), (uint64_t)v6, v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v4);
  if (!EnumCaseMultiPayload)
  {
    v11 = v6[*(int *)(sub_10002A750(&qword_100664530) + 48)];
    v12 = *(_QWORD *)(*(_QWORD *)(v0 + 8) + 16);
    v13 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
    sub_10002B1E8(v0, (uint64_t)v3, type metadata accessor for TTRIRemindersBoardDropProposal);
    if (v13)
    {
      sub_10001F544((uint64_t)v3, type metadata accessor for TTRIRemindersBoardDropProposal);
      if (v12)
      {
        v9 = 0;
        goto LABEL_16;
      }
    }
    else
    {
      v14 = *((_QWORD *)v3 + 3);
      if ((unint64_t)v14 >> 62)
      {
        if (v14 < 0)
          v17 = *((_QWORD *)v3 + 3);
        else
          v17 = v14 & 0xFFFFFFFFFFFFFF8;
        v21 = v11;
        v18 = v14;
        swift_bridgeObjectRetain(v14);
        v9 = _CocoaArrayWrapper.endIndex.getter(v17);
        v19 = v18;
        v11 = v21;
        swift_bridgeObjectRelease(v19);
      }
      else
      {
        v9 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      sub_10001F544((uint64_t)v3, type metadata accessor for TTRIRemindersBoardDropProposal);
      if (v12)
      {
        if (v9)
          v15 = 1;
        else
          v15 = v12 >= 2;
        if (v15)
          v9 = 0;
        else
          v9 = v11 ^ 1u;
        goto LABEL_16;
      }
      if (!v9)
      {
LABEL_16:
        v10 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath;
        goto LABEL_19;
      }
    }
    v10 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath;
    v9 = 1;
    goto LABEL_19;
  }
  v9 = 0;
  if (EnumCaseMultiPayload == 1)
  {
    v10 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath;
    v9 = 2;
LABEL_19:
    sub_10001F544((uint64_t)v6, v10);
  }
  return v9;
}

uint64_t sub_1004ECC38()
{
  uint64_t *v0;
  Swift::String v1;
  void *object;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  __n128 v7;
  Swift::String v8;
  void *v9;
  Swift::String v10;
  Swift::String v11;
  void *v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v1._countAndFlagsBits = sub_1004CD1A4(v0[1], v0[2], v0[3]);
  object = v1._object;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(object);
  v3 = sub_10001D840(0, 1, 1, _swiftEmptyArrayStorage);
  v5 = v3[2];
  v4 = v3[3];
  if (v5 >= v4 >> 1)
    v3 = sub_10001D840((_QWORD *)(v4 > 1), v5 + 1, 1, v3);
  v3[2] = v5 + 1;
  v6 = &v3[2 * v5];
  v6[4] = 0x203A67617244;
  v6[5] = 0xE600000000000000;
  _StringGuts.grow(_:)(16);
  v7 = swift_bridgeObjectRelease(0xE000000000000000);
  v8._countAndFlagsBits = UIDropOperation.debugHUDInfo.getter(v0[4], v7);
  v9 = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v9);
  v10._countAndFlagsBits = 8236;
  v10._object = (void *)0xE200000000000000;
  String.append(_:)(v10);
  type metadata accessor for TTRIRemindersBoardDropProposal(0);
  v11._countAndFlagsBits = sub_1004AE7A4();
  v12 = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v12);
  v14 = v3[2];
  v13 = v3[3];
  if (v14 >= v13 >> 1)
    v3 = sub_10001D840((_QWORD *)(v13 > 1), v14 + 1, 1, v3);
  v3[2] = v14 + 1;
  v15 = &v3[2 * v14];
  v15[4] = 0x6C61736F706F7250;
  v15[5] = 0xEA0000000000203ALL;
  v16 = sub_10002A750(&qword_1006466D0);
  v17 = sub_1000923A8();
  v18 = BidirectionalCollection<>.joined(separator:)(10, 0xE100000000000000, v16, v17);
  swift_bridgeObjectRelease(v3);
  return v18;
}

uint64_t sub_1004ECE10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = v2 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal;
  v6 = type metadata accessor for TTRIRemindersBoardDropProposal(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_dropProposalHasBlockingTargetRedirection) = 0;
  v7 = OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_debugInfo;
  v8 = type metadata accessor for TTRIRemindersBoardDropContext.DebugInfo(0);
  v9 = swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v10 = v9 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastDropSessionDidUpdateInput;
  v11 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = v9 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastHitTestResult;
  v13 = type metadata accessor for TTRICollectionViewHitTestResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = v9 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastTargetIndexPathForMoveCall;
  v15 = type metadata accessor for TTRIRemindersBoardDropContext.DebugInfo.LastTargetIndexPathForMoveCall(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(_QWORD *)(v9 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastReturnedProposal) = 0;
  *(_BYTE *)(v9
           + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_collectionViewHasUncommittedUpdates) = 0;
  *(_QWORD *)(v2 + v7) = v9;
  sub_10001F580(a1, v2 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_columnID, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_session) = a2;
  return v2;
}

uint64_t sub_1004ECF74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  unint64_t v42;
  Swift::String v43;
  void *object;
  Swift::String v45;
  Swift::String v46;
  void *v47;
  unint64_t v48;
  Swift::String v49;
  void *v50;
  Swift::String v51;
  Swift::String v52;
  void *v53;
  unint64_t *v54;
  Swift::String v55;
  uint64_t v56;
  void *v57;
  Swift::String v58;
  int64_t v59;
  int64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  unint64_t v65;
  _QWORD *v66;
  unint64_t v67;
  unint64_t v68;
  _QWORD *v69;
  void *v70;
  id v71;
  double v72;
  id v73;
  __n128 v74;
  Swift::String v75;
  void *v76;
  Swift::String v77;
  Swift::String v78;
  void *v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  int64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  _BYTE v105[24];
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;

  v1 = sub_10002A750(&qword_10063F1B8);
  __chkstk_darwin(v1);
  v3 = (char *)&v98 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TTRIRemindersBoardDropContext.DebugInfo.LastTargetIndexPathForMoveCall(0);
  v101 = *(_QWORD *)(v4 - 8);
  v102 = v4;
  __chkstk_darwin(v4);
  v100 = (uint64_t *)((char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10002A750((uint64_t *)&unk_1006645D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRICollectionViewHitTestResult(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v99 = (uint64_t)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v12);
  v14 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = 0;
  v109 = 0xE000000000000000;
  _StringGuts.grow(_:)(35);
  swift_bridgeObjectRelease(v109);
  v106 = 0xD000000000000021;
  v107 = 0x800000010057CA00;
  v15 = v0;
  v16 = v0 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastDropSessionDidUpdateInput;
  swift_beginAccess(v16, &v108, 0, 0);
  sub_10000735C(v16, (uint64_t)v14, &qword_100646950);
  v17 = Optional.descriptionOrNil.getter(v12);
  v19 = v18;
  sub_1000073A0((uint64_t)v14, &qword_100646950);
  v20._countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v19);
  v21 = v106;
  v22 = v107;
  v23 = sub_10001D840(0, 1, 1, _swiftEmptyArrayStorage);
  v25 = v23[2];
  v24 = v23[3];
  if (v25 >= v24 >> 1)
    v23 = sub_10001D840((_QWORD *)(v24 > 1), v25 + 1, 1, v23);
  v23[2] = v25 + 1;
  v26 = &v23[2 * v25];
  v26[4] = v21;
  v26[5] = v22;
  v27 = v15;
  v28 = v15 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastHitTestResult;
  swift_beginAccess(v15 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastHitTestResult, &v106, 0, 0);
  sub_10000735C(v28, (uint64_t)v8, (uint64_t *)&unk_1006645D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_1006645D0);
  }
  else
  {
    v29 = v99;
    sub_10001F580((uint64_t)v8, v99, type metadata accessor for TTRICollectionViewHitTestResult);
    v31 = v23[2];
    v30 = v23[3];
    if (v31 >= v30 >> 1)
      v23 = sub_10001D840((_QWORD *)(v30 > 1), v31 + 1, 1, v23);
    v23[2] = v31 + 1;
    v32 = &v23[2 * v31];
    v32[4] = 0xD000000000000015;
    v32[5] = 0x800000010057CA90;
    v33 = sub_100410148();
    v35 = v34;
    v37 = v23[2];
    v36 = v23[3];
    if (v37 >= v36 >> 1)
      v23 = sub_10001D840((_QWORD *)(v36 > 1), v37 + 1, 1, v23);
    v23[2] = v37 + 1;
    v38 = &v23[2 * v37];
    v38[4] = v33;
    v38[5] = v35;
    sub_10001F544(v29, type metadata accessor for TTRICollectionViewHitTestResult);
  }
  v39 = v15 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastTargetIndexPathForMoveCall;
  swift_beginAccess(v15 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastTargetIndexPathForMoveCall, v105, 0, 0);
  sub_10000735C(v39, (uint64_t)v3, &qword_10063F1B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v3, 1, v102) == 1)
  {
    sub_1000073A0((uint64_t)v3, &qword_10063F1B8);
    goto LABEL_21;
  }
  v40 = v100;
  sub_10001F580((uint64_t)v3, (uint64_t)v100, type metadata accessor for TTRIRemindersBoardDropContext.DebugInfo.LastTargetIndexPathForMoveCall);
  v103 = 0;
  v104 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v104);
  v103 = 0x203A6769724F2020;
  v104 = 0xE800000000000000;
  v41 = type metadata accessor for IndexPath(0);
  v42 = sub_1002A377C();
  v43._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v41, v42);
  object = v43._object;
  String.append(_:)(v43);
  swift_bridgeObjectRelease(object);
  v45._countAndFlagsBits = 0x203A72727543202CLL;
  v45._object = (void *)0xE800000000000000;
  String.append(_:)(v45);
  v46._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v41, v42);
  v47 = v46._object;
  String.append(_:)(v46);
  swift_bridgeObjectRelease(v47);
  v48 = v104;
  v101 = v103;
  v103 = 0;
  v104 = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(v104);
  v103 = 0x203A706F72502020;
  v104 = 0xE800000000000000;
  v49._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v41, v42);
  v50 = v49._object;
  String.append(_:)(v49);
  swift_bridgeObjectRelease(v50);
  v51._countAndFlagsBits = 0x203A74655220202CLL;
  v51._object = (void *)0xE800000000000000;
  String.append(_:)(v51);
  v52._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v41, v42);
  v53 = v52._object;
  v54 = &v103;
  String.append(_:)(v52);
  swift_bridgeObjectRelease(v53);
  v55._countAndFlagsBits = 8236;
  v55._object = (void *)0xE200000000000000;
  String.append(_:)(v55);
  v56 = *v40;
  v57 = (void *)v40[1];
  swift_bridgeObjectRetain(v57);
  v58._countAndFlagsBits = v56;
  v58._object = v57;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v57);
  v59 = v23[2];
  v60 = v59 + 3;
  if (__OFADD__(v59, 3))
  {
    __break(1u);
    goto LABEL_35;
  }
  v56 = v103;
  v54 = (unint64_t *)v104;
  v61 = v23[3];
  v62 = v61 >> 1;
  if ((uint64_t)(v61 >> 1) < v60)
  {
LABEL_35:
    if (v59 <= v60)
      v97 = v59 + 3;
    else
      v97 = v59;
    v23 = sub_10001D840((_QWORD *)1, v97, 1, v23);
    v59 = v23[2];
    v61 = v23[3];
    v62 = v61 >> 1;
  }
  v63 = v59 + 1;
  if (v62 <= v59)
    v23 = sub_10001D840((_QWORD *)(v61 > 1), v59 + 1, 1, v23);
  v23[2] = v63;
  v64 = &v23[2 * v59];
  v64[4] = 0xD000000000000021;
  v64[5] = 0x800000010057CA60;
  v65 = v23[3];
  swift_bridgeObjectRetain(v48);
  if (v63 >= v65 >> 1)
    v23 = sub_10001D840((_QWORD *)(v65 > 1), v59 + 2, 1, v23);
  v23[2] = v59 + 2;
  v66 = &v23[2 * v63];
  v66[4] = v101;
  v66[5] = v48;
  v67 = v23[2];
  v68 = v23[3];
  swift_bridgeObjectRetain(v54);
  if (v67 >= v68 >> 1)
    v23 = sub_10001D840((_QWORD *)(v68 > 1), v67 + 1, 1, v23);
  v23[2] = v67 + 1;
  v69 = &v23[2 * v67];
  v69[4] = v56;
  v69[5] = v54;
  swift_bridgeObjectRelease(v54);
  swift_bridgeObjectRelease(v48);
  sub_10001F544((uint64_t)v100, type metadata accessor for TTRIRemindersBoardDropContext.DebugInfo.LastTargetIndexPathForMoveCall);
LABEL_21:
  v70 = *(void **)(v27 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastReturnedProposal);
  if (v70)
  {
    v103 = 0;
    v104 = 0xE000000000000000;
    v71 = v70;
    _StringGuts.grow(_:)(21);
    *(_QWORD *)&v72 = swift_bridgeObjectRelease(v104).n128_u64[0];
    v103 = 0x6F7270207473616CLL;
    v104 = 0xEF203A6C61736F70;
    v73 = objc_msgSend(v71, "operation", v72);
    v75._countAndFlagsBits = UIDropOperation.debugHUDInfo.getter(v73, v74);
    v76 = v75._object;
    String.append(_:)(v75);
    swift_bridgeObjectRelease(v76);
    v77._countAndFlagsBits = 8236;
    v77._object = (void *)0xE200000000000000;
    String.append(_:)(v77);
    v78._countAndFlagsBits = UICollectionViewDropIntent.debugHUDInfo.getter(objc_msgSend(v71, "intent"));
    v79 = v78._object;
    String.append(_:)(v78);
    swift_bridgeObjectRelease(v79);
    v80 = v103;
    v81 = v104;
    v83 = v23[2];
    v82 = v23[3];
    if (v83 >= v82 >> 1)
      v23 = sub_10001D840((_QWORD *)(v82 > 1), v83 + 1, 1, v23);
    v23[2] = v83 + 1;
    v84 = &v23[2 * v83];
    v84[4] = v80;
    v84[5] = v81;

  }
  v103 = 0;
  v104 = 0xE000000000000000;
  _StringGuts.grow(_:)(39);
  swift_bridgeObjectRelease(v104);
  v103 = 0xD000000000000025;
  v104 = 0x800000010057CA30;
  if (*(_BYTE *)(v27
                + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_collectionViewHasUncommittedUpdates))
    v85 = 1702195828;
  else
    v85 = 0x65736C6166;
  if (*(_BYTE *)(v27
                + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_collectionViewHasUncommittedUpdates))
    v86 = 0xE400000000000000;
  else
    v86 = 0xE500000000000000;
  v87 = v86;
  String.append(_:)(*(Swift::String *)&v85);
  swift_bridgeObjectRelease(v86);
  v88 = v103;
  v89 = v104;
  v91 = v23[2];
  v90 = v23[3];
  if (v91 >= v90 >> 1)
    v23 = sub_10001D840((_QWORD *)(v90 > 1), v91 + 1, 1, v23);
  v23[2] = v91 + 1;
  v92 = &v23[2 * v91];
  v92[4] = v88;
  v92[5] = v89;
  v103 = (unint64_t)v23;
  v93 = sub_10002A750(&qword_1006466D0);
  v94 = sub_1000923A8();
  v95 = BidirectionalCollection<>.joined(separator:)(10, 0xE100000000000000, v93, v94);
  swift_bridgeObjectRelease(v23);
  return v95;
}

uint64_t sub_1004ED84C()
{
  uint64_t v0;

  sub_1000073A0(v0 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastDropSessionDidUpdateInput, &qword_100646950);
  sub_1000073A0(v0 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastHitTestResult, (uint64_t *)&unk_1006645D0);
  sub_1000073A0(v0 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastTargetIndexPathForMoveCall, &qword_10063F1B8);

  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1004ED8C4()
{
  uint64_t v0;

  sub_10001F544(v0 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_columnID, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_session));
  sub_1000073A0(v0 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal, (uint64_t *)&unk_100644950);
  swift_release();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1004ED934()
{
  return type metadata accessor for TTRIRemindersBoardDropContext(0);
}

uint64_t type metadata accessor for TTRIRemindersBoardDropContext(uint64_t a1)
{
  return sub_100007328(a1, qword_100664278, (uint64_t)&nominal type descriptor for TTRIRemindersBoardDropContext);
}

void sub_1004ED950(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v2 = type metadata accessor for TTRRemindersListViewModel.ItemID(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = "\b";
    sub_100005494(319, (unint64_t *)&unk_100644870, type metadata accessor for TTRIRemindersBoardDropProposal);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      v6[3] = &unk_10053A6D8;
      v6[4] = (char *)&value witness table for Builtin.NativeObject + 64;
      swift_updateClassMetadata2(a1, 256, 5, v6, a1 + 80);
    }
  }
}

uint64_t type metadata accessor for TTRIRemindersBoardDropProposal(uint64_t a1)
{
  return sub_100007328(a1, qword_100664590, (uint64_t)&nominal type descriptor for TTRIRemindersBoardDropProposal);
}

uint64_t sub_1004EDA1C()
{
  return type metadata accessor for TTRIRemindersBoardDropContext.DebugInfo(0);
}

uint64_t type metadata accessor for TTRIRemindersBoardDropContext.DebugInfo(uint64_t a1)
{
  return sub_100007328(a1, qword_100664350, (uint64_t)&nominal type descriptor for TTRIRemindersBoardDropContext.DebugInfo);
}

void sub_1004EDA38(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[5];

  sub_100005494(319, qword_100646840, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100005494(319, &qword_100664368, type metadata accessor for TTRICollectionViewHitTestResult);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_100005494(319, (unint64_t *)&unk_100664370, type metadata accessor for TTRIRemindersBoardDropContext.DebugInfo.LastTargetIndexPathForMoveCall);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        v8[3] = "\b";
        v8[4] = &unk_10053A6D8;
        swift_updateClassMetadata2(a1, 256, 5, v8, a1 + 80);
      }
    }
  }
}

uint64_t type metadata accessor for TTRIRemindersBoardDropContext.DebugInfo.LastTargetIndexPathForMoveCall(uint64_t a1)
{
  return sub_100007328(a1, qword_1006644E8, (uint64_t)&nominal type descriptor for TTRIRemindersBoardDropContext.DebugInfo.LastTargetIndexPathForMoveCall);
}

char *sub_1004EDB30(char *a1, char *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v13);
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v7;
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = type metadata accessor for IndexPath(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain(v7);
    v12(v9, v10, v11);
    v12(&v4[a3[6]], &a2[a3[6]], v11);
    v12(&v4[a3[7]], &a2[a3[7]], v11);
    v12(&v4[a3[8]], &a2[a3[8]], v11);
  }
  return v4;
}

uint64_t sub_1004EDC18(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + a2[5];
  v5 = type metadata accessor for IndexPath(0);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  v7(a1 + a2[6], v5);
  v7(a1 + a2[7], v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + a2[8], v5);
}

char *sub_1004EDCB8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  v11(&a1[a3[7]], &a2[a3[7]], v10);
  v11(&a1[a3[8]], &a2[a3[8]], v10);
  return a1;
}

char *sub_1004EDD74(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *((_QWORD *)a2 + 1);
  v7 = *((_QWORD *)a1 + 1);
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24);
  v12(v9, v10, v11);
  v12(&a1[a3[6]], &a2[a3[6]], v11);
  v12(&a1[a3[7]], &a2[a3[7]], v11);
  v12(&a1[a3[8]], &a2[a3[8]], v11);
  return a1;
}

char *sub_1004EDE40(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  return a1;
}

char *sub_1004EDEF4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  v6 = *((_QWORD *)a2 + 1);
  v7 = *((_QWORD *)a1 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v12(&a1[a3[6]], &a2[a3[6]], v11);
  v12(&a1[a3[7]], &a2[a3[7]], v11);
  v12(&a1[a3[8]], &a2[a3[8]], v11);
  return a1;
}

uint64_t sub_1004EDFB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004EDFBC);
}

uint64_t sub_1004EDFBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for IndexPath(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1004EE038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004EE044);
}

uint64_t sub_1004EE044(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for IndexPath(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1004EE0B8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = &unk_10053A740;
  result = type metadata accessor for IndexPath(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    v6 = v5;
    v7 = v5;
    v8 = v5;
    swift_initStructMetadata(a1, 256, 5, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_1004EE130(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[1];
    v7 = a2[2];
    a1[1] = v6;
    a1[2] = v7;
    v9 = a2[3];
    v8 = a2[4];
    a1[3] = v9;
    a1[4] = v8;
    v10 = *(int *)(a3 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for TTRICollectionViewDropIntent(0);
    swift_unknownObjectRetain(v4);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v9);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v13);
    if (EnumCaseMultiPayload == 1)
    {
      v17 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v11, v12, v17);
      swift_storeEnumTagMultiPayload(v11, v13, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v11, v12, v15);
      v16 = sub_10002A750(&qword_100664530);
      v11[*(int *)(v16 + 48)] = v12[*(int *)(v16 + 48)];
      swift_storeEnumTagMultiPayload(v11, v13, 0);
    }
  }
  return v5;
}

uint64_t sub_1004EE28C(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  swift_unknownObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  swift_bridgeObjectRelease(a1[3]);
  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for TTRICollectionViewDropIntent(0);
  result = swift_getEnumCaseMultiPayload(v4, v5);
  if (result <= 1)
  {
    v7 = type metadata accessor for IndexPath(0);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
  }
  return result;
}

uint64_t *sub_1004EE314(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *a2;
  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[2];
  v7 = a2[3];
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = a2[4];
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for TTRICollectionViewDropIntent(0);
  swift_unknownObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
  if (EnumCaseMultiPayload == 1)
  {
    v15 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v9, v10, v15);
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v13 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v9, v10, v13);
    v14 = sub_10002A750(&qword_100664530);
    v9[*(int *)(v14 + 48)] = v10[*(int *)(v14 + 48)];
    swift_storeEnumTagMultiPayload(v9, v11, 0);
  }
  return a1;
}

uint64_t *sub_1004EE448(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *a1;
  v7 = *a2;
  *a1 = *a2;
  swift_unknownObjectRetain(v7);
  swift_unknownObjectRelease(v6);
  v8 = a2[1];
  v9 = a1[1];
  a1[1] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = a2[2];
  v11 = a1[2];
  a1[2] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = a2[3];
  v13 = a1[3];
  a1[3] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  a1[4] = a2[4];
  if (a1 != a2)
  {
    v14 = *(int *)(a3 + 24);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    sub_10001F544((uint64_t)a1 + v14, type metadata accessor for TTRICollectionViewDropIntent);
    v17 = type metadata accessor for TTRICollectionViewDropIntent(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16, v17);
    if (EnumCaseMultiPayload == 1)
    {
      v21 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v15, v16, v21);
      swift_storeEnumTagMultiPayload(v15, v17, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v19 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v15, v16, v19);
      v20 = sub_10002A750(&qword_100664530);
      v15[*(int *)(v20 + 48)] = v16[*(int *)(v20 + 48)];
      swift_storeEnumTagMultiPayload(v15, v17, 0);
    }
  }
  return a1;
}

uint64_t sub_1004EE5BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 24);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = type metadata accessor for TTRICollectionViewDropIntent(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v8);
  if (EnumCaseMultiPayload == 1)
  {
    v12 = type metadata accessor for IndexPath(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v6, v7, v12);
    swift_storeEnumTagMultiPayload(v6, v8, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v10 = type metadata accessor for IndexPath(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v6, v7, v10);
    v11 = sub_10002A750(&qword_100664530);
    *((_BYTE *)v6 + *(int *)(v11 + 48)) = *((_BYTE *)v7 + *(int *)(v11 + 48));
    swift_storeEnumTagMultiPayload(v6, v8, 0);
  }
  return a1;
}

uint64_t *sub_1004EE6B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *a1;
  *a1 = *a2;
  swift_unknownObjectRelease(v6);
  v7 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRelease(v7);
  v8 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRelease(v8);
  v9 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRelease(v9);
  a1[4] = a2[4];
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    sub_10001F544((uint64_t)a1 + v10, type metadata accessor for TTRICollectionViewDropIntent);
    v13 = type metadata accessor for TTRICollectionViewDropIntent(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v13);
    if (EnumCaseMultiPayload == 1)
    {
      v17 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v11, v12, v17);
      swift_storeEnumTagMultiPayload(v11, v13, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v11, v12, v15);
      v16 = sub_10002A750(&qword_100664530);
      v11[*(int *)(v16 + 48)] = v12[*(int *)(v16 + 48)];
      swift_storeEnumTagMultiPayload(v11, v13, 0);
    }
  }
  return a1;
}

uint64_t sub_1004EE80C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004EE818);
}

uint64_t sub_1004EE818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for TTRICollectionViewDropIntent(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1004EE894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004EE8A0);
}

uint64_t sub_1004EE8A0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for TTRICollectionViewDropIntent(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1004EE914(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = " ";
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for TTRICollectionViewDropIntent(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1004EE994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  Swift::String v10;
  void *object;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  int64_t v37;
  unint64_t v38;
  _QWORD *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;

  v1 = v0;
  v2 = sub_10002A750((uint64_t *)&unk_100644950);
  __chkstk_darwin(v2);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRIRemindersBoardDropProposal(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = 0x44496E6D756C6F63;
  v50 = 0xEA0000000000203ALL;
  v10._countAndFlagsBits = TTRRemindersListViewModel.ItemID.description.getter(v9);
  object = v10._object;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(object);
  v12 = v49;
  v13 = v50;
  v14 = sub_10001D840(0, 1, 1, _swiftEmptyArrayStorage);
  v16 = v14[2];
  v15 = v14[3];
  if (v16 >= v15 >> 1)
    v14 = sub_10001D840((_QWORD *)(v15 > 1), v16 + 1, 1, v14);
  v14[2] = v16 + 1;
  v17 = &v14[2 * v16];
  v17[4] = v12;
  v17[5] = v13;
  v18 = v0 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal, &v49, 0, 0);
  sub_10000735C(v18, (uint64_t)v4, (uint64_t *)&unk_100644950);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1000073A0((uint64_t)v4, (uint64_t *)&unk_100644950);
  }
  else
  {
    sub_10001F580((uint64_t)v4, (uint64_t)v8, type metadata accessor for TTRIRemindersBoardDropProposal);
    if (*(_BYTE *)(v1
                  + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_dropProposalHasBlockingTargetRedirection))
      v19 = 0x296E657A6F724628;
    else
      v19 = 0;
    if (*(_BYTE *)(v1
                  + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_dropProposalHasBlockingTargetRedirection))
      v20 = (void *)0xE800000000000000;
    else
      v20 = (void *)0xE000000000000000;
    v21 = sub_1004ECC38();
    v23 = v22;
    v47 = (_QWORD *)v21;
    v48 = v22;
    swift_bridgeObjectRetain(v22);
    v24._countAndFlagsBits = v19;
    v24._object = v20;
    String.append(_:)(v24);
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v20);
    v25 = v47;
    v26 = v48;
    v28 = v14[2];
    v27 = v14[3];
    if (v28 >= v27 >> 1)
      v14 = sub_10001D840((_QWORD *)(v27 > 1), v28 + 1, 1, v14);
    v14[2] = v28 + 1;
    v29 = &v14[2 * v28];
    v29[4] = v25;
    v29[5] = v26;
    sub_10001F544((uint64_t)v8, type metadata accessor for TTRIRemindersBoardDropProposal);
  }
  v30 = sub_1004ECF74();
  v32 = v31;
  v33 = HIBYTE(v31) & 0xF;
  if ((v31 & 0x2000000000000000) == 0)
    v33 = v30 & 0xFFFFFFFFFFFFLL;
  if (v33)
  {
    v34 = v30;
    v36 = v14[2];
    v35 = v14[3];
    v37 = v35 >> 1;
    v38 = v36 + 1;
    if (v35 >> 1 <= v36)
    {
      v14 = sub_10001D840((_QWORD *)(v35 > 1), v36 + 1, 1, v14);
      v35 = v14[3];
      v37 = v35 >> 1;
    }
    v14[2] = v38;
    v39 = &v14[2 * v36];
    v39[4] = 0xD00000000000002BLL;
    v39[5] = 0x800000010057C9D0;
    v40 = v36 + 2;
    if (v37 < v40)
      v14 = sub_10001D840((_QWORD *)(v35 > 1), v40, 1, v14);
    v14[2] = v40;
    v41 = &v14[2 * v38];
    v41[4] = v34;
    v41[5] = v32;
  }
  else
  {
    swift_bridgeObjectRelease(v31);
  }
  v47 = v14;
  v42 = sub_10002A750(&qword_1006466D0);
  v43 = sub_1000923A8();
  v44 = BidirectionalCollection<>.joined(separator:)(10, 0xE100000000000000, v42, v43);
  swift_bridgeObjectRelease(v14);
  return v44;
}

id sub_1004EED2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  id v8;
  uint64_t (*v9)(_QWORD);
  _BYTE v11[24];

  v1 = type metadata accessor for TTRICollectionViewDropIntent(0);
  __chkstk_darwin(v1);
  v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = v0 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal;
  swift_beginAccess(v0 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal, v11, 0, 0);
  v5 = type metadata accessor for TTRIRemindersBoardDropProposal(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
    return objc_msgSend((id)objc_opt_self(UIColor), "grayColor");
  sub_10002B1E8(v4 + *(int *)(v5 + 24), (uint64_t)v3, type metadata accessor for TTRICollectionViewDropIntent);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v3, v1);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
      return objc_msgSend((id)objc_opt_self(UIColor), "grayColor");
    v8 = objc_msgSend((id)objc_opt_self(UIColor), "greenColor");
    v9 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath;
  }
  else
  {
    v8 = objc_msgSend((id)objc_opt_self(UIColor), "orangeColor");
    v9 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath;
  }
  sub_10001F544((uint64_t)v3, v9);
  return v8;
}

uint64_t sub_1004EEEA8()
{
  return sub_1004EE994();
}

id sub_1004EEEC8()
{
  return sub_1004EED2C();
}

char *sub_1004EEEE8(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void **v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(void **, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  void *v30;
  id v31;
  void **v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void **v58;
  void **v59;
  int v60;
  uint64_t v61;
  void *v62;
  id v63;
  void **v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  id v68;
  void **v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  void **v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int (*v78)(void **, uint64_t, uint64_t);
  id v79;
  uint64_t v80;
  void *v81;
  id v82;
  void **v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  id v92;
  void *v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  id v101;
  void *v102;
  id v103;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v15[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
    return a1;
  }
  v7 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v7);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v16 = *a2;
      *(_QWORD *)a1 = *a2;
      v17 = v16;
      v18 = a1;
      v19 = v7;
      v20 = 2;
LABEL_35:
      swift_storeEnumTagMultiPayload(v18, v19, v20);
      goto LABEL_36;
    case 1:
      v21 = *a2;
      *(_QWORD *)a1 = *a2;
      v22 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v23 = (void **)&a1[v22];
      v24 = (void **)((char *)a2 + v22);
      v25 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v26 + 48);
      v28 = v21;
      if (v27(v24, 1, v25))
      {
        v29 = sub_10002A750(&qword_100644980);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v24, v25))
        {
          case 1u:
            v30 = *v24;
            *v23 = *v24;
            v31 = v30;
            v32 = v23;
            v33 = v25;
            v34 = 1;
            goto LABEL_32;
          case 2u:
            v44 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v23, v24, v44);
            v32 = v23;
            v33 = v25;
            v34 = 2;
            goto LABEL_32;
          case 3u:
            v45 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v23, v24, v45);
            v32 = v23;
            v33 = v25;
            v34 = 3;
            goto LABEL_32;
          case 4u:
            v46 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v23, v24, v46);
            v32 = v23;
            v33 = v25;
            v34 = 4;
            goto LABEL_32;
          case 5u:
            v47 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v23, v24, v47);
            v32 = v23;
            v33 = v25;
            v34 = 5;
            goto LABEL_32;
          case 6u:
            v48 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v23, v24, v48);
            v32 = v23;
            v33 = v25;
            v34 = 6;
            goto LABEL_32;
          case 8u:
            v49 = *v24;
            *v23 = *v24;
            v50 = v49;
            v32 = v23;
            v33 = v25;
            v34 = 8;
            goto LABEL_32;
          case 9u:
            v51 = *v24;
            *v23 = *v24;
            v52 = v51;
            v32 = v23;
            v33 = v25;
            v34 = 9;
LABEL_32:
            swift_storeEnumTagMultiPayload(v32, v33, v34);
            break;
          default:
            memcpy(v23, v24, *(_QWORD *)(v26 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
      v18 = a1;
      v19 = v7;
      v20 = 1;
      goto LABEL_35;
    case 0:
      v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v9))
      {
        case 1u:
          v10 = *a2;
          *(_QWORD *)a1 = *a2;
          v11 = v10;
          v12 = a1;
          v13 = v9;
          v14 = 1;
          goto LABEL_22;
        case 2u:
          v35 = type metadata accessor for Date(0);
          (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(a1, a2, v35);
          v12 = a1;
          v13 = v9;
          v14 = 2;
          goto LABEL_22;
        case 3u:
          v36 = type metadata accessor for Date(0);
          (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(a1, a2, v36);
          v12 = a1;
          v13 = v9;
          v14 = 3;
          goto LABEL_22;
        case 4u:
          v37 = type metadata accessor for Date(0);
          (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(a1, a2, v37);
          v12 = a1;
          v13 = v9;
          v14 = 4;
          goto LABEL_22;
        case 5u:
          v38 = type metadata accessor for Date(0);
          (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(a1, a2, v38);
          v12 = a1;
          v13 = v9;
          v14 = 5;
          goto LABEL_22;
        case 6u:
          v39 = type metadata accessor for Date(0);
          (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(a1, a2, v39);
          v12 = a1;
          v13 = v9;
          v14 = 6;
          goto LABEL_22;
        case 8u:
          v40 = *a2;
          *(_QWORD *)a1 = *a2;
          v41 = v40;
          v12 = a1;
          v13 = v9;
          v14 = 8;
          goto LABEL_22;
        case 9u:
          v42 = *a2;
          *(_QWORD *)a1 = *a2;
          v43 = v42;
          v12 = a1;
          v13 = v9;
          v14 = 9;
LABEL_22:
          swift_storeEnumTagMultiPayload(v12, v13, v14);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
          break;
      }
      v18 = a1;
      v19 = v7;
      v20 = 0;
      goto LABEL_35;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_36:
  v53 = *(int *)(a3 + 20);
  v54 = &a1[v53];
  v55 = (char *)a2 + v53;
  v56 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v54, v55, v56);
  v57 = *(int *)(a3 + 24);
  v58 = (void **)&a1[v57];
  v59 = (void **)((char *)a2 + v57);
  v60 = swift_getEnumCaseMultiPayload((char *)a2 + v57, v7);
  switch(v60)
  {
    case 2:
      v67 = *v59;
      *v58 = *v59;
      v68 = v67;
      v69 = v58;
      v70 = v7;
      v71 = 2;
LABEL_68:
      swift_storeEnumTagMultiPayload(v69, v70, v71);
      return a1;
    case 1:
      v72 = *v59;
      *v58 = *v59;
      v73 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v74 = (void **)((char *)v58 + v73);
      v75 = (void **)((char *)v59 + v73);
      v76 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v77 = *(_QWORD *)(v76 - 8);
      v78 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v77 + 48);
      v79 = v72;
      if (v78(v75, 1, v76))
      {
        v80 = sub_10002A750(&qword_100644980);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v75, v76))
        {
          case 1u:
            v81 = *v75;
            *v74 = *v75;
            v82 = v81;
            v83 = v74;
            v84 = v76;
            v85 = 1;
            goto LABEL_65;
          case 2u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v74, v75, v95);
            v83 = v74;
            v84 = v76;
            v85 = 2;
            goto LABEL_65;
          case 3u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(v74, v75, v96);
            v83 = v74;
            v84 = v76;
            v85 = 3;
            goto LABEL_65;
          case 4u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v74, v75, v97);
            v83 = v74;
            v84 = v76;
            v85 = 4;
            goto LABEL_65;
          case 5u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v74, v75, v98);
            v83 = v74;
            v84 = v76;
            v85 = 5;
            goto LABEL_65;
          case 6u:
            v99 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v74, v75, v99);
            v83 = v74;
            v84 = v76;
            v85 = 6;
            goto LABEL_65;
          case 8u:
            v100 = *v75;
            *v74 = *v75;
            v101 = v100;
            v83 = v74;
            v84 = v76;
            v85 = 8;
            goto LABEL_65;
          case 9u:
            v102 = *v75;
            *v74 = *v75;
            v103 = v102;
            v83 = v74;
            v84 = v76;
            v85 = 9;
LABEL_65:
            swift_storeEnumTagMultiPayload(v83, v84, v85);
            break;
          default:
            memcpy(v74, v75, *(_QWORD *)(v77 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
      }
      v69 = v58;
      v70 = v7;
      v71 = 1;
      goto LABEL_68;
    case 0:
      v61 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v59, v61))
      {
        case 1u:
          v62 = *v59;
          *v58 = *v59;
          v63 = v62;
          v64 = v58;
          v65 = v61;
          v66 = 1;
          goto LABEL_55;
        case 2u:
          v86 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v58, v59, v86);
          v64 = v58;
          v65 = v61;
          v66 = 2;
          goto LABEL_55;
        case 3u:
          v87 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v58, v59, v87);
          v64 = v58;
          v65 = v61;
          v66 = 3;
          goto LABEL_55;
        case 4u:
          v88 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v58, v59, v88);
          v64 = v58;
          v65 = v61;
          v66 = 4;
          goto LABEL_55;
        case 5u:
          v89 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v58, v59, v89);
          v64 = v58;
          v65 = v61;
          v66 = 5;
          goto LABEL_55;
        case 6u:
          v90 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v58, v59, v90);
          v64 = v58;
          v65 = v61;
          v66 = 6;
          goto LABEL_55;
        case 8u:
          v91 = *v59;
          *v58 = *v59;
          v92 = v91;
          v64 = v58;
          v65 = v61;
          v66 = 8;
          goto LABEL_55;
        case 9u:
          v93 = *v59;
          *v58 = *v59;
          v94 = v93;
          v64 = v58;
          v65 = v61;
          v66 = 9;
LABEL_55:
          swift_storeEnumTagMultiPayload(v64, v65, v66);
          break;
        default:
          memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
          break;
      }
      v69 = v58;
      v70 = v7;
      v71 = 0;
      goto LABEL_68;
  }
  memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  return a1;
}

void sub_1004EF7D0(id *a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, v4);
  switch(EnumCaseMultiPayload)
  {
    case 2:
LABEL_6:
      v8 = *a1;
LABEL_7:

      break;
    case 1:

      v9 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v9, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            v8 = *v9;
            goto LABEL_7;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            v11 = type metadata accessor for Date(0);
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
            break;
          default:
            goto LABEL_11;
        }
      }
      break;
    case 0:
      v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a1, v6))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_6;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          v7 = type metadata accessor for Date(0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
          break;
        default:
          goto LABEL_11;
      }
      break;
  }
LABEL_11:
  v12 = (char *)a1 + *(int *)(a2 + 20);
  v13 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v14 = (id *)((char *)a1 + *(int *)(a2 + 24));
  v15 = swift_getEnumCaseMultiPayload(v14, v4);
  switch(v15)
  {
    case 2:
LABEL_19:

      break;
    case 1:

      v14 = (id *)((char *)v14 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v17 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v14, 1, v17))
      {
        switch(swift_getEnumCaseMultiPayload(v14, v17))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_19;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_18:
            v18 = type metadata accessor for Date(0);
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v14, v18);
            break;
          default:
            return;
        }
      }
      break;
    case 0:
      v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v14, v16))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_19;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_18;
        default:
          return;
      }
  }
}

void **sub_1004EFA58(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  void *v9;
  id v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void **v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(void **, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  void **v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void **v56;
  void **v57;
  int v58;
  uint64_t v59;
  void *v60;
  id v61;
  void **v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  void **v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  void **v72;
  void **v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(void **, uint64_t, uint64_t);
  id v77;
  uint64_t v78;
  void *v79;
  id v80;
  void **v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  id v90;
  void *v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  id v99;
  void *v100;
  id v101;

  v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
  if (EnumCaseMultiPayload == 2)
  {
    v14 = *a2;
    *a1 = *a2;
    v15 = v14;
    v16 = a1;
    v17 = v6;
    v18 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v19 = *a2;
    *a1 = *a2;
    v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
    v21 = (void **)((char *)a1 + v20);
    v22 = (void **)((char *)a2 + v20);
    v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v24 + 48);
    v26 = v19;
    if (v25(v22, 1, v23))
    {
      v27 = sub_10002A750(&qword_100644980);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(v22, v23))
      {
        case 1u:
          v28 = *v22;
          *v21 = *v22;
          v29 = v28;
          v30 = v21;
          v31 = v23;
          v32 = 1;
          goto LABEL_30;
        case 2u:
          v42 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v21, v22, v42);
          v30 = v21;
          v31 = v23;
          v32 = 2;
          goto LABEL_30;
        case 3u:
          v43 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v21, v22, v43);
          v30 = v21;
          v31 = v23;
          v32 = 3;
          goto LABEL_30;
        case 4u:
          v44 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v21, v22, v44);
          v30 = v21;
          v31 = v23;
          v32 = 4;
          goto LABEL_30;
        case 5u:
          v45 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v21, v22, v45);
          v30 = v21;
          v31 = v23;
          v32 = 5;
          goto LABEL_30;
        case 6u:
          v46 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v21, v22, v46);
          v30 = v21;
          v31 = v23;
          v32 = 6;
          goto LABEL_30;
        case 8u:
          v47 = *v22;
          *v21 = *v22;
          v48 = v47;
          v30 = v21;
          v31 = v23;
          v32 = 8;
          goto LABEL_30;
        case 9u:
          v49 = *v22;
          *v21 = *v22;
          v50 = v49;
          v30 = v21;
          v31 = v23;
          v32 = 9;
LABEL_30:
          swift_storeEnumTagMultiPayload(v30, v31, v32);
          break;
        default:
          memcpy(v21, v22, *(_QWORD *)(v24 + 64));
          break;
      }
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    v16 = a1;
    v17 = v6;
    v18 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_34;
    }
    v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(a2, v8))
    {
      case 1u:
        v9 = *a2;
        *a1 = *a2;
        v10 = v9;
        v11 = a1;
        v12 = v8;
        v13 = 1;
        goto LABEL_20;
      case 2u:
        v33 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(a1, a2, v33);
        v11 = a1;
        v12 = v8;
        v13 = 2;
        goto LABEL_20;
      case 3u:
        v34 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(a1, a2, v34);
        v11 = a1;
        v12 = v8;
        v13 = 3;
        goto LABEL_20;
      case 4u:
        v35 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(a1, a2, v35);
        v11 = a1;
        v12 = v8;
        v13 = 4;
        goto LABEL_20;
      case 5u:
        v36 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(a1, a2, v36);
        v11 = a1;
        v12 = v8;
        v13 = 5;
        goto LABEL_20;
      case 6u:
        v37 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(a1, a2, v37);
        v11 = a1;
        v12 = v8;
        v13 = 6;
        goto LABEL_20;
      case 8u:
        v38 = *a2;
        *a1 = *a2;
        v39 = v38;
        v11 = a1;
        v12 = v8;
        v13 = 8;
        goto LABEL_20;
      case 9u:
        v40 = *a2;
        *a1 = *a2;
        v41 = v40;
        v11 = a1;
        v12 = v8;
        v13 = 9;
LABEL_20:
        swift_storeEnumTagMultiPayload(v11, v12, v13);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        break;
    }
    v16 = a1;
    v17 = v6;
    v18 = 0;
  }
  swift_storeEnumTagMultiPayload(v16, v17, v18);
LABEL_34:
  v51 = *(int *)(a3 + 20);
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  v54 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  v55 = *(int *)(a3 + 24);
  v56 = (void **)((char *)a1 + v55);
  v57 = (void **)((char *)a2 + v55);
  v58 = swift_getEnumCaseMultiPayload((char *)a2 + v55, v6);
  switch(v58)
  {
    case 2:
      v65 = *v57;
      *v56 = *v57;
      v66 = v65;
      v67 = v56;
      v68 = v6;
      v69 = 2;
LABEL_66:
      swift_storeEnumTagMultiPayload(v67, v68, v69);
      return a1;
    case 1:
      v70 = *v57;
      *v56 = *v57;
      v71 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v72 = (void **)((char *)v56 + v71);
      v73 = (void **)((char *)v57 + v71);
      v74 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v75 = *(_QWORD *)(v74 - 8);
      v76 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v75 + 48);
      v77 = v70;
      if (v76(v73, 1, v74))
      {
        v78 = sub_10002A750(&qword_100644980);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v73, v74))
        {
          case 1u:
            v79 = *v73;
            *v72 = *v73;
            v80 = v79;
            v81 = v72;
            v82 = v74;
            v83 = 1;
            goto LABEL_63;
          case 2u:
            v93 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v72, v73, v93);
            v81 = v72;
            v82 = v74;
            v83 = 2;
            goto LABEL_63;
          case 3u:
            v94 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v72, v73, v94);
            v81 = v72;
            v82 = v74;
            v83 = 3;
            goto LABEL_63;
          case 4u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v72, v73, v95);
            v81 = v72;
            v82 = v74;
            v83 = 4;
            goto LABEL_63;
          case 5u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(v72, v73, v96);
            v81 = v72;
            v82 = v74;
            v83 = 5;
            goto LABEL_63;
          case 6u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v72, v73, v97);
            v81 = v72;
            v82 = v74;
            v83 = 6;
            goto LABEL_63;
          case 8u:
            v98 = *v73;
            *v72 = *v73;
            v99 = v98;
            v81 = v72;
            v82 = v74;
            v83 = 8;
            goto LABEL_63;
          case 9u:
            v100 = *v73;
            *v72 = *v73;
            v101 = v100;
            v81 = v72;
            v82 = v74;
            v83 = 9;
LABEL_63:
            swift_storeEnumTagMultiPayload(v81, v82, v83);
            break;
          default:
            memcpy(v72, v73, *(_QWORD *)(v75 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
      }
      v67 = v56;
      v68 = v6;
      v69 = 1;
      goto LABEL_66;
    case 0:
      v59 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v57, v59))
      {
        case 1u:
          v60 = *v57;
          *v56 = *v57;
          v61 = v60;
          v62 = v56;
          v63 = v59;
          v64 = 1;
          goto LABEL_53;
        case 2u:
          v84 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v56, v57, v84);
          v62 = v56;
          v63 = v59;
          v64 = 2;
          goto LABEL_53;
        case 3u:
          v85 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v56, v57, v85);
          v62 = v56;
          v63 = v59;
          v64 = 3;
          goto LABEL_53;
        case 4u:
          v86 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v56, v57, v86);
          v62 = v56;
          v63 = v59;
          v64 = 4;
          goto LABEL_53;
        case 5u:
          v87 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v56, v57, v87);
          v62 = v56;
          v63 = v59;
          v64 = 5;
          goto LABEL_53;
        case 6u:
          v88 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v56, v57, v88);
          v62 = v56;
          v63 = v59;
          v64 = 6;
          goto LABEL_53;
        case 8u:
          v89 = *v57;
          *v56 = *v57;
          v90 = v89;
          v62 = v56;
          v63 = v59;
          v64 = 8;
          goto LABEL_53;
        case 9u:
          v91 = *v57;
          *v56 = *v57;
          v92 = v91;
          v62 = v56;
          v63 = v59;
          v64 = 9;
LABEL_53:
          swift_storeEnumTagMultiPayload(v62, v63, v64);
          break;
        default:
          memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
          break;
      }
      v67 = v56;
      v68 = v6;
      v69 = 0;
      goto LABEL_66;
  }
  memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  return a1;
}

void **sub_1004F0314(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  void *v9;
  id v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void **v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(void **, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  void **v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void **v56;
  void **v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  void *v61;
  id v62;
  void **v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  void **v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  void **v73;
  void **v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int (*v77)(void **, uint64_t, uint64_t);
  id v78;
  uint64_t v79;
  void *v80;
  id v81;
  void **v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  id v91;
  void *v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  id v100;
  void *v101;
  id v102;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
    if (EnumCaseMultiPayload == 2)
    {
      v14 = *a2;
      *a1 = *a2;
      v15 = v14;
      v16 = a1;
      v17 = v6;
      v18 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v19 = *a2;
      *a1 = *a2;
      v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v21 = (void **)((char *)a1 + v20);
      v22 = (void **)((char *)a2 + v20);
      v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v24 = *(_QWORD *)(v23 - 8);
      v25 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v24 + 48);
      v26 = v19;
      if (v25(v22, 1, v23))
      {
        v27 = sub_10002A750(&qword_100644980);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v22, v23))
        {
          case 1u:
            v28 = *v22;
            *v21 = *v22;
            v29 = v28;
            v30 = v21;
            v31 = v23;
            v32 = 1;
            goto LABEL_31;
          case 2u:
            v42 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v21, v22, v42);
            v30 = v21;
            v31 = v23;
            v32 = 2;
            goto LABEL_31;
          case 3u:
            v43 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v21, v22, v43);
            v30 = v21;
            v31 = v23;
            v32 = 3;
            goto LABEL_31;
          case 4u:
            v44 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v21, v22, v44);
            v30 = v21;
            v31 = v23;
            v32 = 4;
            goto LABEL_31;
          case 5u:
            v45 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v21, v22, v45);
            v30 = v21;
            v31 = v23;
            v32 = 5;
            goto LABEL_31;
          case 6u:
            v46 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v21, v22, v46);
            v30 = v21;
            v31 = v23;
            v32 = 6;
            goto LABEL_31;
          case 8u:
            v47 = *v22;
            *v21 = *v22;
            v48 = v47;
            v30 = v21;
            v31 = v23;
            v32 = 8;
            goto LABEL_31;
          case 9u:
            v49 = *v22;
            *v21 = *v22;
            v50 = v49;
            v30 = v21;
            v31 = v23;
            v32 = 9;
LABEL_31:
            swift_storeEnumTagMultiPayload(v30, v31, v32);
            break;
          default:
            memcpy(v21, v22, *(_QWORD *)(v24 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      v16 = a1;
      v17 = v6;
      v18 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_35;
      }
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v8))
      {
        case 1u:
          v9 = *a2;
          *a1 = *a2;
          v10 = v9;
          v11 = a1;
          v12 = v8;
          v13 = 1;
          goto LABEL_21;
        case 2u:
          v33 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(a1, a2, v33);
          v11 = a1;
          v12 = v8;
          v13 = 2;
          goto LABEL_21;
        case 3u:
          v34 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(a1, a2, v34);
          v11 = a1;
          v12 = v8;
          v13 = 3;
          goto LABEL_21;
        case 4u:
          v35 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(a1, a2, v35);
          v11 = a1;
          v12 = v8;
          v13 = 4;
          goto LABEL_21;
        case 5u:
          v36 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(a1, a2, v36);
          v11 = a1;
          v12 = v8;
          v13 = 5;
          goto LABEL_21;
        case 6u:
          v37 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(a1, a2, v37);
          v11 = a1;
          v12 = v8;
          v13 = 6;
          goto LABEL_21;
        case 8u:
          v38 = *a2;
          *a1 = *a2;
          v39 = v38;
          v11 = a1;
          v12 = v8;
          v13 = 8;
          goto LABEL_21;
        case 9u:
          v40 = *a2;
          *a1 = *a2;
          v41 = v40;
          v11 = a1;
          v12 = v8;
          v13 = 9;
LABEL_21:
          swift_storeEnumTagMultiPayload(v11, v12, v13);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
          break;
      }
      v16 = a1;
      v17 = v6;
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v17, v18);
  }
LABEL_35:
  v51 = *(int *)(a3 + 20);
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  v54 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  if (a1 != a2)
  {
    v55 = *(int *)(a3 + 24);
    v56 = (void **)((char *)a1 + v55);
    v57 = (void **)((char *)a2 + v55);
    sub_10001F544((uint64_t)a1 + v55, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v58 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    v59 = swift_getEnumCaseMultiPayload(v57, v58);
    switch(v59)
    {
      case 2:
        v66 = *v57;
        *v56 = *v57;
        v67 = v66;
        v68 = v56;
        v69 = v58;
        v70 = 2;
LABEL_68:
        swift_storeEnumTagMultiPayload(v68, v69, v70);
        return a1;
      case 1:
        v71 = *v57;
        *v56 = *v57;
        v72 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v73 = (void **)((char *)v56 + v72);
        v74 = (void **)((char *)v57 + v72);
        v75 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v76 = *(_QWORD *)(v75 - 8);
        v77 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v76 + 48);
        v78 = v71;
        if (v77(v74, 1, v75))
        {
          v79 = sub_10002A750(&qword_100644980);
          memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v74, v75))
          {
            case 1u:
              v80 = *v74;
              *v73 = *v74;
              v81 = v80;
              v82 = v73;
              v83 = v75;
              v84 = 1;
              goto LABEL_65;
            case 2u:
              v94 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v73, v74, v94);
              v82 = v73;
              v83 = v75;
              v84 = 2;
              goto LABEL_65;
            case 3u:
              v95 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v73, v74, v95);
              v82 = v73;
              v83 = v75;
              v84 = 3;
              goto LABEL_65;
            case 4u:
              v96 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(v73, v74, v96);
              v82 = v73;
              v83 = v75;
              v84 = 4;
              goto LABEL_65;
            case 5u:
              v97 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v73, v74, v97);
              v82 = v73;
              v83 = v75;
              v84 = 5;
              goto LABEL_65;
            case 6u:
              v98 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v73, v74, v98);
              v82 = v73;
              v83 = v75;
              v84 = 6;
              goto LABEL_65;
            case 8u:
              v99 = *v74;
              *v73 = *v74;
              v100 = v99;
              v82 = v73;
              v83 = v75;
              v84 = 8;
              goto LABEL_65;
            case 9u:
              v101 = *v74;
              *v73 = *v74;
              v102 = v101;
              v82 = v73;
              v83 = v75;
              v84 = 9;
LABEL_65:
              swift_storeEnumTagMultiPayload(v82, v83, v84);
              break;
            default:
              memcpy(v73, v74, *(_QWORD *)(v76 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
        }
        v68 = v56;
        v69 = v58;
        v70 = 1;
        goto LABEL_68;
      case 0:
        v60 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v57, v60))
        {
          case 1u:
            v61 = *v57;
            *v56 = *v57;
            v62 = v61;
            v63 = v56;
            v64 = v60;
            v65 = 1;
            goto LABEL_55;
          case 2u:
            v85 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v56, v57, v85);
            v63 = v56;
            v64 = v60;
            v65 = 2;
            goto LABEL_55;
          case 3u:
            v86 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v56, v57, v86);
            v63 = v56;
            v64 = v60;
            v65 = 3;
            goto LABEL_55;
          case 4u:
            v87 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v56, v57, v87);
            v63 = v56;
            v64 = v60;
            v65 = 4;
            goto LABEL_55;
          case 5u:
            v88 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v56, v57, v88);
            v63 = v56;
            v64 = v60;
            v65 = 5;
            goto LABEL_55;
          case 6u:
            v89 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v56, v57, v89);
            v63 = v56;
            v64 = v60;
            v65 = 6;
            goto LABEL_55;
          case 8u:
            v90 = *v57;
            *v56 = *v57;
            v91 = v90;
            v63 = v56;
            v64 = v60;
            v65 = 8;
            goto LABEL_55;
          case 9u:
            v92 = *v57;
            *v56 = *v57;
            v93 = v92;
            v63 = v56;
            v64 = v60;
            v65 = 9;
LABEL_55:
            swift_storeEnumTagMultiPayload(v63, v64, v65);
            break;
          default:
            memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
            break;
        }
        v68 = v56;
        v69 = v58;
        v70 = 0;
        goto LABEL_68;
    }
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_1004F0C0C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    v13 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = sub_10002A750(&qword_100644980);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(v15, v16))
      {
        case 2u:
          v19 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v14, v15, v19);
          v20 = v14;
          v21 = v16;
          v22 = 2;
          goto LABEL_22;
        case 3u:
          v30 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v14, v15, v30);
          v20 = v14;
          v21 = v16;
          v22 = 3;
          goto LABEL_22;
        case 4u:
          v31 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v14, v15, v31);
          v20 = v14;
          v21 = v16;
          v22 = 4;
          goto LABEL_22;
        case 5u:
          v32 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v14, v15, v32);
          v20 = v14;
          v21 = v16;
          v22 = 5;
          goto LABEL_22;
        case 6u:
          v33 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v14, v15, v33);
          v20 = v14;
          v21 = v16;
          v22 = 6;
LABEL_22:
          swift_storeEnumTagMultiPayload(v20, v21, v22);
          break;
        default:
          memcpy(v14, v15, *(_QWORD *)(v17 + 64));
          break;
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v27 = a1;
    v28 = v6;
    v29 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_26;
    }
    v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(a2, v8))
    {
      case 2u:
        v9 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
        v10 = a1;
        v11 = v8;
        v12 = 2;
        goto LABEL_15;
      case 3u:
        v23 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
        v10 = a1;
        v11 = v8;
        v12 = 3;
        goto LABEL_15;
      case 4u:
        v24 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a1, a2, v24);
        v10 = a1;
        v11 = v8;
        v12 = 4;
        goto LABEL_15;
      case 5u:
        v25 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a1, a2, v25);
        v10 = a1;
        v11 = v8;
        v12 = 5;
        goto LABEL_15;
      case 6u:
        v26 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(a1, a2, v26);
        v10 = a1;
        v11 = v8;
        v12 = 6;
LABEL_15:
        swift_storeEnumTagMultiPayload(v10, v11, v12);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        break;
    }
    v27 = a1;
    v28 = v6;
    v29 = 0;
  }
  swift_storeEnumTagMultiPayload(v27, v28, v29);
LABEL_26:
  v34 = *(int *)(a3 + 20);
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
  v38 = *(int *)(a3 + 24);
  v39 = (_QWORD *)((char *)a1 + v38);
  v40 = (_QWORD *)((char *)a2 + v38);
  v41 = swift_getEnumCaseMultiPayload((char *)a2 + v38, v6);
  if (v41 == 1)
  {
    *v39 = *v40;
    v47 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
    v48 = (char *)v39 + v47;
    v49 = (char *)v40 + v47;
    v50 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v51 = *(_QWORD *)(v50 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
    {
      v52 = sub_10002A750(&qword_100644980);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(v49, v50))
      {
        case 2u:
          v53 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v48, v49, v53);
          v54 = v48;
          v55 = v50;
          v56 = 2;
          goto LABEL_47;
        case 3u:
          v64 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v48, v49, v64);
          v54 = v48;
          v55 = v50;
          v56 = 3;
          goto LABEL_47;
        case 4u:
          v65 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v48, v49, v65);
          v54 = v48;
          v55 = v50;
          v56 = 4;
          goto LABEL_47;
        case 5u:
          v66 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v48, v49, v66);
          v54 = v48;
          v55 = v50;
          v56 = 5;
          goto LABEL_47;
        case 6u:
          v67 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v48, v49, v67);
          v54 = v48;
          v55 = v50;
          v56 = 6;
LABEL_47:
          swift_storeEnumTagMultiPayload(v54, v55, v56);
          break;
        default:
          memcpy(v48, v49, *(_QWORD *)(v51 + 64));
          break;
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
    }
    v61 = v39;
    v62 = v6;
    v63 = 1;
    goto LABEL_50;
  }
  if (!v41)
  {
    v42 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(v40, v42))
    {
      case 2u:
        v43 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v39, v40, v43);
        v44 = v39;
        v45 = v42;
        v46 = 2;
        goto LABEL_40;
      case 3u:
        v57 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v39, v40, v57);
        v44 = v39;
        v45 = v42;
        v46 = 3;
        goto LABEL_40;
      case 4u:
        v58 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v39, v40, v58);
        v44 = v39;
        v45 = v42;
        v46 = 4;
        goto LABEL_40;
      case 5u:
        v59 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v39, v40, v59);
        v44 = v39;
        v45 = v42;
        v46 = 5;
        goto LABEL_40;
      case 6u:
        v60 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v39, v40, v60);
        v44 = v39;
        v45 = v42;
        v46 = 6;
LABEL_40:
        swift_storeEnumTagMultiPayload(v44, v45, v46);
        break;
      default:
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        break;
    }
    v61 = v39;
    v62 = v6;
    v63 = 0;
LABEL_50:
    swift_storeEnumTagMultiPayload(v61, v62, v63);
    return a1;
  }
  memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  return a1;
}

_QWORD *sub_1004F1320(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v13 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        v18 = sub_10002A750(&qword_100644980);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v15, v16))
        {
          case 2u:
            v19 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v14, v15, v19);
            v20 = v14;
            v21 = v16;
            v22 = 2;
            goto LABEL_23;
          case 3u:
            v30 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v14, v15, v30);
            v20 = v14;
            v21 = v16;
            v22 = 3;
            goto LABEL_23;
          case 4u:
            v31 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v14, v15, v31);
            v20 = v14;
            v21 = v16;
            v22 = 4;
            goto LABEL_23;
          case 5u:
            v32 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v14, v15, v32);
            v20 = v14;
            v21 = v16;
            v22 = 5;
            goto LABEL_23;
          case 6u:
            v33 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v14, v15, v33);
            v20 = v14;
            v21 = v16;
            v22 = 6;
LABEL_23:
            swift_storeEnumTagMultiPayload(v20, v21, v22);
            break;
          default:
            memcpy(v14, v15, *(_QWORD *)(v17 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      v27 = a1;
      v28 = v6;
      v29 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_27;
      }
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v8))
      {
        case 2u:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
          v10 = a1;
          v11 = v8;
          v12 = 2;
          goto LABEL_16;
        case 3u:
          v23 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
          v10 = a1;
          v11 = v8;
          v12 = 3;
          goto LABEL_16;
        case 4u:
          v24 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a1, a2, v24);
          v10 = a1;
          v11 = v8;
          v12 = 4;
          goto LABEL_16;
        case 5u:
          v25 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a1, a2, v25);
          v10 = a1;
          v11 = v8;
          v12 = 5;
          goto LABEL_16;
        case 6u:
          v26 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(a1, a2, v26);
          v10 = a1;
          v11 = v8;
          v12 = 6;
LABEL_16:
          swift_storeEnumTagMultiPayload(v10, v11, v12);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
          break;
      }
      v27 = a1;
      v28 = v6;
      v29 = 0;
    }
    swift_storeEnumTagMultiPayload(v27, v28, v29);
  }
LABEL_27:
  v34 = *(int *)(a3 + 20);
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 40))(v35, v36, v37);
  if (a1 != a2)
  {
    v38 = *(int *)(a3 + 24);
    v39 = (_QWORD *)((char *)a1 + v38);
    v40 = (_QWORD *)((char *)a2 + v38);
    sub_10001F544((uint64_t)a1 + v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v41 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    v42 = swift_getEnumCaseMultiPayload(v40, v41);
    if (v42 == 1)
    {
      *v39 = *v40;
      v48 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v49 = (char *)v39 + v48;
      v50 = (char *)v40 + v48;
      v51 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v52 = *(_QWORD *)(v51 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
      {
        v53 = sub_10002A750(&qword_100644980);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v50, v51))
        {
          case 2u:
            v54 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v49, v50, v54);
            v55 = v49;
            v56 = v51;
            v57 = 2;
            goto LABEL_49;
          case 3u:
            v65 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v49, v50, v65);
            v55 = v49;
            v56 = v51;
            v57 = 3;
            goto LABEL_49;
          case 4u:
            v66 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v49, v50, v66);
            v55 = v49;
            v56 = v51;
            v57 = 4;
            goto LABEL_49;
          case 5u:
            v67 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v49, v50, v67);
            v55 = v49;
            v56 = v51;
            v57 = 5;
            goto LABEL_49;
          case 6u:
            v68 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v49, v50, v68);
            v55 = v49;
            v56 = v51;
            v57 = 6;
LABEL_49:
            swift_storeEnumTagMultiPayload(v55, v56, v57);
            break;
          default:
            memcpy(v49, v50, *(_QWORD *)(v52 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      }
      v62 = v39;
      v63 = v41;
      v64 = 1;
      goto LABEL_52;
    }
    if (!v42)
    {
      v43 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v40, v43))
      {
        case 2u:
          v44 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v39, v40, v44);
          v45 = v39;
          v46 = v43;
          v47 = 2;
          goto LABEL_42;
        case 3u:
          v58 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v39, v40, v58);
          v45 = v39;
          v46 = v43;
          v47 = 3;
          goto LABEL_42;
        case 4u:
          v59 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v39, v40, v59);
          v45 = v39;
          v46 = v43;
          v47 = 4;
          goto LABEL_42;
        case 5u:
          v60 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v39, v40, v60);
          v45 = v39;
          v46 = v43;
          v47 = 5;
          goto LABEL_42;
        case 6u:
          v61 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v39, v40, v61);
          v45 = v39;
          v46 = v43;
          v47 = 6;
LABEL_42:
          swift_storeEnumTagMultiPayload(v45, v46, v47);
          break;
        default:
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
          break;
      }
      v62 = v39;
      v63 = v41;
      v64 = 0;
LABEL_52:
      swift_storeEnumTagMultiPayload(v62, v63, v64);
      return a1;
    }
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1004F1A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004F1A7C);
}

uint64_t sub_1004F1A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for IndexPath(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1004F1AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004F1AFC);
}

uint64_t sub_1004F1AFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for IndexPath(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for TTRIRemindersBoardDragItemInfo(uint64_t a1)
{
  return sub_100007328(a1, qword_100664638, (uint64_t)&nominal type descriptor for TTRIRemindersBoardDragItemInfo);
}

uint64_t sub_1004F1B8C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  result = type metadata accessor for TTRRemindersListViewModel.ItemID(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    v6[0] = v4;
    result = type metadata accessor for IndexPath(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(result - 8) + 64;
      v6[2] = v4;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
      return 0;
    }
  }
  return result;
}

_QWORD *sub_1004F1C10(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  void **v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void **v27;
  void **v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(void **, uint64_t, uint64_t);
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  void **v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  void *v55;
  id v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void **v62;
  void **v63;
  int v64;
  uint64_t v65;
  void *v66;
  id v67;
  void **v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  void **v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  void **v78;
  void **v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(void **, uint64_t, uint64_t);
  id v83;
  uint64_t v84;
  void *v85;
  id v86;
  void **v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  id v96;
  void *v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  id v105;
  void *v106;
  id v107;
  uint64_t v109;
  void **v110;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (void **)((char *)a1 + v8);
    v10 = (void **)((char *)a2 + v8);
    v11 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
    if (EnumCaseMultiPayload == 2)
    {
      v20 = *v10;
      *v9 = *v10;
      v21 = v20;
      v22 = v9;
      v23 = v11;
      v24 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v109 = v11;
      v25 = *v10;
      *v9 = *v10;
      v26 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v27 = (void **)((char *)v9 + v26);
      v28 = (void **)((char *)v10 + v26);
      v29 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v30 = *(_QWORD *)(v29 - 8);
      v31 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v30 + 48);
      v32 = v25;
      if (v31(v28, 1, v29))
      {
        v33 = sub_10002A750(&qword_100644980);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v28, v29))
        {
          case 1u:
            v34 = *v28;
            *v27 = *v28;
            v35 = v34;
            v36 = v27;
            v37 = v29;
            v38 = 1;
            goto LABEL_32;
          case 2u:
            v48 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v27, v28, v48);
            v36 = v27;
            v37 = v29;
            v38 = 2;
            goto LABEL_32;
          case 3u:
            v49 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v27, v28, v49);
            v36 = v27;
            v37 = v29;
            v38 = 3;
            goto LABEL_32;
          case 4u:
            v50 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v27, v28, v50);
            v36 = v27;
            v37 = v29;
            v38 = 4;
            goto LABEL_32;
          case 5u:
            v51 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v27, v28, v51);
            v36 = v27;
            v37 = v29;
            v38 = 5;
            goto LABEL_32;
          case 6u:
            v52 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v27, v28, v52);
            v36 = v27;
            v37 = v29;
            v38 = 6;
            goto LABEL_32;
          case 8u:
            v53 = *v28;
            *v27 = *v28;
            v54 = v53;
            v36 = v27;
            v37 = v29;
            v38 = 8;
            goto LABEL_32;
          case 9u:
            v55 = *v28;
            *v27 = *v28;
            v56 = v55;
            v36 = v27;
            v37 = v29;
            v38 = 9;
LABEL_32:
            swift_storeEnumTagMultiPayload(v36, v37, v38);
            break;
          default:
            memcpy(v27, v28, *(_QWORD *)(v30 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v11 = v109;
      v22 = v9;
      v23 = v109;
      v24 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        goto LABEL_36;
      }
      v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v10, v13))
      {
        case 1u:
          v14 = *v10;
          *v9 = *v10;
          v15 = v14;
          v16 = v9;
          v17 = v13;
          v18 = 1;
          goto LABEL_22;
        case 2u:
          v39 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v9, v10, v39);
          v16 = v9;
          v17 = v13;
          v18 = 2;
          goto LABEL_22;
        case 3u:
          v40 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v9, v10, v40);
          v16 = v9;
          v17 = v13;
          v18 = 3;
          goto LABEL_22;
        case 4u:
          v41 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v9, v10, v41);
          v16 = v9;
          v17 = v13;
          v18 = 4;
          goto LABEL_22;
        case 5u:
          v42 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v9, v10, v42);
          v16 = v9;
          v17 = v13;
          v18 = 5;
          goto LABEL_22;
        case 6u:
          v43 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v9, v10, v43);
          v16 = v9;
          v17 = v13;
          v18 = 6;
          goto LABEL_22;
        case 8u:
          v44 = *v10;
          *v9 = *v10;
          v45 = v44;
          v16 = v9;
          v17 = v13;
          v18 = 8;
          goto LABEL_22;
        case 9u:
          v46 = *v10;
          *v9 = *v10;
          v47 = v46;
          v16 = v9;
          v17 = v13;
          v18 = 9;
LABEL_22:
          swift_storeEnumTagMultiPayload(v16, v17, v18);
          break;
        default:
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          break;
      }
      v22 = v9;
      v23 = v11;
      v24 = 0;
    }
    swift_storeEnumTagMultiPayload(v22, v23, v24);
LABEL_36:
    v57 = a3[6];
    v58 = (char *)a1 + v57;
    v59 = (char *)a2 + v57;
    v60 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
    v61 = a3[7];
    v62 = (void **)((char *)a1 + v61);
    v63 = (void **)((char *)a2 + v61);
    v64 = swift_getEnumCaseMultiPayload((char *)a2 + v61, v11);
    if (v64 == 2)
    {
      v71 = *v63;
      *v62 = *v63;
      v72 = v71;
      v73 = v62;
      v74 = v11;
      v75 = 2;
    }
    else if (v64 == 1)
    {
      v76 = *v63;
      *v62 = *v63;
      v77 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v110 = v62;
      v78 = (void **)((char *)v62 + v77);
      v79 = (void **)((char *)v63 + v77);
      v80 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v81 = *(_QWORD *)(v80 - 8);
      v82 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v81 + 48);
      v83 = v76;
      if (v82(v79, 1, v80))
      {
        v84 = sub_10002A750(&qword_100644980);
        memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v79, v80))
        {
          case 1u:
            v85 = *v79;
            *v78 = *v79;
            v86 = v85;
            v87 = v78;
            v88 = v80;
            v89 = 1;
            goto LABEL_65;
          case 2u:
            v99 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v78, v79, v99);
            v87 = v78;
            v88 = v80;
            v89 = 2;
            goto LABEL_65;
          case 3u:
            v100 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(v78, v79, v100);
            v87 = v78;
            v88 = v80;
            v89 = 3;
            goto LABEL_65;
          case 4u:
            v101 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v78, v79, v101);
            v87 = v78;
            v88 = v80;
            v89 = 4;
            goto LABEL_65;
          case 5u:
            v102 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v78, v79, v102);
            v87 = v78;
            v88 = v80;
            v89 = 5;
            goto LABEL_65;
          case 6u:
            v103 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v78, v79, v103);
            v87 = v78;
            v88 = v80;
            v89 = 6;
            goto LABEL_65;
          case 8u:
            v104 = *v79;
            *v78 = *v79;
            v105 = v104;
            v87 = v78;
            v88 = v80;
            v89 = 8;
            goto LABEL_65;
          case 9u:
            v106 = *v79;
            *v78 = *v79;
            v107 = v106;
            v87 = v78;
            v88 = v80;
            v89 = 9;
LABEL_65:
            swift_storeEnumTagMultiPayload(v87, v88, v89);
            break;
          default:
            memcpy(v78, v79, *(_QWORD *)(v81 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
      }
      v73 = v110;
      v74 = v11;
      v75 = 1;
    }
    else
    {
      if (v64)
      {
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_69:
        *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
        return a1;
      }
      v65 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v63, v65))
      {
        case 1u:
          v66 = *v63;
          *v62 = *v63;
          v67 = v66;
          v68 = v62;
          v69 = v65;
          v70 = 1;
          goto LABEL_55;
        case 2u:
          v90 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v62, v63, v90);
          v68 = v62;
          v69 = v65;
          v70 = 2;
          goto LABEL_55;
        case 3u:
          v91 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(v62, v63, v91);
          v68 = v62;
          v69 = v65;
          v70 = 3;
          goto LABEL_55;
        case 4u:
          v92 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(v62, v63, v92);
          v68 = v62;
          v69 = v65;
          v70 = 4;
          goto LABEL_55;
        case 5u:
          v93 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v62, v63, v93);
          v68 = v62;
          v69 = v65;
          v70 = 5;
          goto LABEL_55;
        case 6u:
          v94 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v62, v63, v94);
          v68 = v62;
          v69 = v65;
          v70 = 6;
          goto LABEL_55;
        case 8u:
          v95 = *v63;
          *v62 = *v63;
          v96 = v95;
          v68 = v62;
          v69 = v65;
          v70 = 8;
          goto LABEL_55;
        case 9u:
          v97 = *v63;
          *v62 = *v63;
          v98 = v97;
          v68 = v62;
          v69 = v65;
          v70 = 9;
LABEL_55:
          swift_storeEnumTagMultiPayload(v68, v69, v70);
          break;
        default:
          memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
          break;
      }
      v73 = v62;
      v74 = v11;
      v75 = 0;
    }
    swift_storeEnumTagMultiPayload(v73, v74, v75);
    goto LABEL_69;
  }
  v19 = *a2;
  *a1 = *a2;
  a1 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

void sub_1004F2544(uint64_t a1, int *a2)
{
  uint64_t v4;
  id *v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (id *)(a1 + a2[5]);
  v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v6);
  switch(EnumCaseMultiPayload)
  {
    case 2:
LABEL_8:

      break;
    case 1:

      v5 = (id *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v5, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload(v5, v9))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_8;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_7:
            v10 = type metadata accessor for Date(0);
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v5, v10);
            break;
          default:
            goto LABEL_9;
        }
      }
      break;
    case 0:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v5, v8))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_8;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_7;
        default:
          goto LABEL_9;
      }
  }
LABEL_9:
  v11 = a1 + a2[6];
  v12 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = (id *)(a1 + a2[7]);
  v14 = swift_getEnumCaseMultiPayload(v13, v6);
  switch(v14)
  {
    case 2:
LABEL_17:

      break;
    case 1:

      v13 = (id *)((char *)v13 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v13, 1, v16))
      {
        switch(swift_getEnumCaseMultiPayload(v13, v16))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_17;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_16:
            v17 = type metadata accessor for Date(0);
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v13, v17);
            break;
          default:
            return;
        }
      }
      break;
    case 0:
      v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v13, v15))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_17;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_16;
        default:
          return;
      }
  }
}

uint64_t sub_1004F27CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void **v8;
  void **v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  void *v13;
  id v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  void **v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void **v25;
  void **v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(void **, uint64_t, uint64_t);
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  void **v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void **v60;
  void **v61;
  int v62;
  uint64_t v63;
  void *v64;
  id v65;
  void **v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  void **v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  void **v76;
  void **v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(void **, uint64_t, uint64_t);
  id v81;
  uint64_t v82;
  void *v83;
  id v84;
  void **v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  id v94;
  void *v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  id v103;
  void *v104;
  id v105;
  int *v107;
  uint64_t v108;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void **)(a1 + v7);
  v9 = (void **)(a2 + v7);
  v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
  if (EnumCaseMultiPayload == 2)
  {
    v18 = *v9;
    *v8 = *v9;
    v19 = v18;
    v20 = v8;
    v21 = v10;
    v22 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v107 = a3;
    v23 = *v9;
    *v8 = *v9;
    v24 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
    v25 = (void **)((char *)v8 + v24);
    v26 = (void **)((char *)v9 + v24);
    v27 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v28 + 48);
    v30 = v23;
    if (v29(v26, 1, v27))
    {
      v31 = sub_10002A750(&qword_100644980);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(v26, v27))
      {
        case 1u:
          v32 = *v26;
          *v25 = *v26;
          v33 = v32;
          v34 = v25;
          v35 = v27;
          v36 = 1;
          goto LABEL_30;
        case 2u:
          v46 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v25, v26, v46);
          v34 = v25;
          v35 = v27;
          v36 = 2;
          goto LABEL_30;
        case 3u:
          v47 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v25, v26, v47);
          v34 = v25;
          v35 = v27;
          v36 = 3;
          goto LABEL_30;
        case 4u:
          v48 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v25, v26, v48);
          v34 = v25;
          v35 = v27;
          v36 = 4;
          goto LABEL_30;
        case 5u:
          v49 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v25, v26, v49);
          v34 = v25;
          v35 = v27;
          v36 = 5;
          goto LABEL_30;
        case 6u:
          v50 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v25, v26, v50);
          v34 = v25;
          v35 = v27;
          v36 = 6;
          goto LABEL_30;
        case 8u:
          v51 = *v26;
          *v25 = *v26;
          v52 = v51;
          v34 = v25;
          v35 = v27;
          v36 = 8;
          goto LABEL_30;
        case 9u:
          v53 = *v26;
          *v25 = *v26;
          v54 = v53;
          v34 = v25;
          v35 = v27;
          v36 = 9;
LABEL_30:
          swift_storeEnumTagMultiPayload(v34, v35, v36);
          break;
        default:
          memcpy(v25, v26, *(_QWORD *)(v28 + 64));
          break;
      }
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    a3 = v107;
    v20 = v8;
    v21 = v10;
    v22 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      goto LABEL_34;
    }
    v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(v9, v12))
    {
      case 1u:
        v13 = *v9;
        *v8 = *v9;
        v14 = v13;
        v15 = v8;
        v16 = v12;
        v17 = 1;
        goto LABEL_20;
      case 2u:
        v37 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v8, v9, v37);
        v15 = v8;
        v16 = v12;
        v17 = 2;
        goto LABEL_20;
      case 3u:
        v38 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v8, v9, v38);
        v15 = v8;
        v16 = v12;
        v17 = 3;
        goto LABEL_20;
      case 4u:
        v39 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v8, v9, v39);
        v15 = v8;
        v16 = v12;
        v17 = 4;
        goto LABEL_20;
      case 5u:
        v40 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v8, v9, v40);
        v15 = v8;
        v16 = v12;
        v17 = 5;
        goto LABEL_20;
      case 6u:
        v41 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v8, v9, v41);
        v15 = v8;
        v16 = v12;
        v17 = 6;
        goto LABEL_20;
      case 8u:
        v42 = *v9;
        *v8 = *v9;
        v43 = v42;
        v15 = v8;
        v16 = v12;
        v17 = 8;
        goto LABEL_20;
      case 9u:
        v44 = *v9;
        *v8 = *v9;
        v45 = v44;
        v15 = v8;
        v16 = v12;
        v17 = 9;
LABEL_20:
        swift_storeEnumTagMultiPayload(v15, v16, v17);
        break;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        break;
    }
    v20 = v8;
    v21 = v10;
    v22 = 0;
  }
  swift_storeEnumTagMultiPayload(v20, v21, v22);
LABEL_34:
  v55 = a3[6];
  v56 = a1 + v55;
  v57 = a2 + v55;
  v58 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
  v59 = a3[7];
  v60 = (void **)(a1 + v59);
  v61 = (void **)(a2 + v59);
  v62 = swift_getEnumCaseMultiPayload(a2 + v59, v10);
  switch(v62)
  {
    case 2:
      v69 = *v61;
      *v60 = *v61;
      v70 = v69;
      v71 = v60;
      v72 = v10;
      v73 = 2;
LABEL_66:
      swift_storeEnumTagMultiPayload(v71, v72, v73);
      goto LABEL_67;
    case 1:
      v108 = v10;
      v74 = *v61;
      *v60 = *v61;
      v75 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v76 = (void **)((char *)v60 + v75);
      v77 = (void **)((char *)v61 + v75);
      v78 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v79 = *(_QWORD *)(v78 - 8);
      v80 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v79 + 48);
      v81 = v74;
      if (v80(v77, 1, v78))
      {
        v82 = sub_10002A750(&qword_100644980);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v77, v78))
        {
          case 1u:
            v83 = *v77;
            *v76 = *v77;
            v84 = v83;
            v85 = v76;
            v86 = v78;
            v87 = 1;
            goto LABEL_63;
          case 2u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v76, v77, v97);
            v85 = v76;
            v86 = v78;
            v87 = 2;
            goto LABEL_63;
          case 3u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v76, v77, v98);
            v85 = v76;
            v86 = v78;
            v87 = 3;
            goto LABEL_63;
          case 4u:
            v99 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v76, v77, v99);
            v85 = v76;
            v86 = v78;
            v87 = 4;
            goto LABEL_63;
          case 5u:
            v100 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(v76, v77, v100);
            v85 = v76;
            v86 = v78;
            v87 = 5;
            goto LABEL_63;
          case 6u:
            v101 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v76, v77, v101);
            v85 = v76;
            v86 = v78;
            v87 = 6;
            goto LABEL_63;
          case 8u:
            v102 = *v77;
            *v76 = *v77;
            v103 = v102;
            v85 = v76;
            v86 = v78;
            v87 = 8;
            goto LABEL_63;
          case 9u:
            v104 = *v77;
            *v76 = *v77;
            v105 = v104;
            v85 = v76;
            v86 = v78;
            v87 = 9;
LABEL_63:
            swift_storeEnumTagMultiPayload(v85, v86, v87);
            break;
          default:
            memcpy(v76, v77, *(_QWORD *)(v79 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
      }
      v72 = v108;
      v71 = v60;
      v73 = 1;
      goto LABEL_66;
    case 0:
      v63 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v61, v63))
      {
        case 1u:
          v64 = *v61;
          *v60 = *v61;
          v65 = v64;
          v66 = v60;
          v67 = v63;
          v68 = 1;
          goto LABEL_53;
        case 2u:
          v88 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v60, v61, v88);
          v66 = v60;
          v67 = v63;
          v68 = 2;
          goto LABEL_53;
        case 3u:
          v89 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v60, v61, v89);
          v66 = v60;
          v67 = v63;
          v68 = 3;
          goto LABEL_53;
        case 4u:
          v90 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v60, v61, v90);
          v66 = v60;
          v67 = v63;
          v68 = 4;
          goto LABEL_53;
        case 5u:
          v91 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(v60, v61, v91);
          v66 = v60;
          v67 = v63;
          v68 = 5;
          goto LABEL_53;
        case 6u:
          v92 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(v60, v61, v92);
          v66 = v60;
          v67 = v63;
          v68 = 6;
          goto LABEL_53;
        case 8u:
          v93 = *v61;
          *v60 = *v61;
          v94 = v93;
          v66 = v60;
          v67 = v63;
          v68 = 8;
          goto LABEL_53;
        case 9u:
          v95 = *v61;
          *v60 = *v61;
          v96 = v95;
          v66 = v60;
          v67 = v63;
          v68 = 9;
LABEL_53:
          swift_storeEnumTagMultiPayload(v66, v67, v68);
          break;
        default:
          memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
          break;
      }
      v71 = v60;
      v72 = v10;
      v73 = 0;
      goto LABEL_66;
  }
  memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_67:
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1004F30D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void **v8;
  void **v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  void *v13;
  id v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  void **v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void **v25;
  void **v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(void **, uint64_t, uint64_t);
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void **v34;
  id v35;
  void **v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void **v62;
  void **v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  void *v67;
  id v68;
  void **v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  id v73;
  void **v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  void **v79;
  void **v80;
  uint64_t v81;
  uint64_t v82;
  unsigned int (*v83)(void **, uint64_t, uint64_t);
  id v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  void **v88;
  id v89;
  void **v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  id v99;
  void *v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  id v108;
  void *v109;
  id v110;
  uint64_t v112;
  uint64_t v113;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = a3[5];
    v8 = (void **)(a1 + v7);
    v9 = (void **)(a2 + v7);
    sub_10001F544(a1 + v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
    if (EnumCaseMultiPayload == 2)
    {
      v18 = *v9;
      *v8 = *v9;
      v19 = v18;
      v20 = v8;
      v21 = v10;
      v22 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v112 = v10;
      v23 = *v9;
      *v8 = *v9;
      v24 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v25 = (void **)((char *)v8 + v24);
      v26 = (void **)((char *)v9 + v24);
      v27 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v28 = *(_QWORD *)(v27 - 8);
      v29 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v28 + 48);
      v30 = v23;
      if (v29(v26, 1, v27))
      {
        v31 = sub_10002A750(&qword_100644980);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        v32 = v112;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v26, v27))
        {
          case 1u:
            v33 = *v26;
            v34 = v25;
            *v25 = *v26;
            v35 = v33;
            v36 = v25;
            v37 = v27;
            v38 = 1;
            goto LABEL_31;
          case 2u:
            v48 = type metadata accessor for Date(0);
            v34 = v25;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v25, v26, v48);
            v36 = v25;
            v37 = v27;
            v38 = 2;
            goto LABEL_31;
          case 3u:
            v49 = type metadata accessor for Date(0);
            v34 = v25;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v25, v26, v49);
            v36 = v25;
            v37 = v27;
            v38 = 3;
            goto LABEL_31;
          case 4u:
            v50 = type metadata accessor for Date(0);
            v34 = v25;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v25, v26, v50);
            v36 = v25;
            v37 = v27;
            v38 = 4;
            goto LABEL_31;
          case 5u:
            v51 = type metadata accessor for Date(0);
            v34 = v25;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v25, v26, v51);
            v36 = v25;
            v37 = v27;
            v38 = 5;
            goto LABEL_31;
          case 6u:
            v52 = type metadata accessor for Date(0);
            v34 = v25;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v25, v26, v52);
            v36 = v25;
            v37 = v27;
            v38 = 6;
            goto LABEL_31;
          case 8u:
            v53 = *v26;
            v34 = v25;
            *v25 = *v26;
            v54 = v53;
            v36 = v25;
            v37 = v27;
            v38 = 8;
            goto LABEL_31;
          case 9u:
            v55 = *v26;
            v34 = v25;
            *v25 = *v26;
            v56 = v55;
            v36 = v25;
            v37 = v27;
            v38 = 9;
LABEL_31:
            swift_storeEnumTagMultiPayload(v36, v37, v38);
            break;
          default:
            v34 = v25;
            memcpy(v25, v26, *(_QWORD *)(v28 + 64));
            break;
        }
        v32 = v112;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v28 + 56))(v34, 0, 1, v27);
      }
      v20 = v8;
      v21 = v32;
      v22 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        goto LABEL_35;
      }
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v9, v12))
      {
        case 1u:
          v13 = *v9;
          *v8 = *v9;
          v14 = v13;
          v15 = v8;
          v16 = v12;
          v17 = 1;
          goto LABEL_21;
        case 2u:
          v39 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v8, v9, v39);
          v15 = v8;
          v16 = v12;
          v17 = 2;
          goto LABEL_21;
        case 3u:
          v40 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v8, v9, v40);
          v15 = v8;
          v16 = v12;
          v17 = 3;
          goto LABEL_21;
        case 4u:
          v41 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v8, v9, v41);
          v15 = v8;
          v16 = v12;
          v17 = 4;
          goto LABEL_21;
        case 5u:
          v42 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v8, v9, v42);
          v15 = v8;
          v16 = v12;
          v17 = 5;
          goto LABEL_21;
        case 6u:
          v43 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v8, v9, v43);
          v15 = v8;
          v16 = v12;
          v17 = 6;
          goto LABEL_21;
        case 8u:
          v44 = *v9;
          *v8 = *v9;
          v45 = v44;
          v15 = v8;
          v16 = v12;
          v17 = 8;
          goto LABEL_21;
        case 9u:
          v46 = *v9;
          *v8 = *v9;
          v47 = v46;
          v15 = v8;
          v16 = v12;
          v17 = 9;
LABEL_21:
          swift_storeEnumTagMultiPayload(v15, v16, v17);
          break;
        default:
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          break;
      }
      v20 = v8;
      v21 = v10;
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v20, v21, v22);
  }
LABEL_35:
  v57 = a3[6];
  v58 = a1 + v57;
  v59 = a2 + v57;
  v60 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 24))(v58, v59, v60);
  if (a1 != a2)
  {
    v61 = a3[7];
    v62 = (void **)(a1 + v61);
    v63 = (void **)(a2 + v61);
    sub_10001F544(a1 + v61, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v64 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    v65 = swift_getEnumCaseMultiPayload(v63, v64);
    switch(v65)
    {
      case 2:
        v72 = *v63;
        *v62 = *v63;
        v73 = v72;
        v74 = v62;
        v75 = v64;
        v76 = 2;
LABEL_68:
        swift_storeEnumTagMultiPayload(v74, v75, v76);
        goto LABEL_69;
      case 1:
        v113 = v64;
        v77 = *v63;
        *v62 = *v63;
        v78 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v79 = (void **)((char *)v62 + v78);
        v80 = (void **)((char *)v63 + v78);
        v81 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v82 = *(_QWORD *)(v81 - 8);
        v83 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v82 + 48);
        v84 = v77;
        if (v83(v80, 1, v81))
        {
          v85 = sub_10002A750(&qword_100644980);
          memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
          v86 = v113;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v80, v81))
          {
            case 1u:
              v87 = *v80;
              v88 = v79;
              *v79 = *v80;
              v89 = v87;
              v90 = v79;
              v91 = v81;
              v92 = 1;
              goto LABEL_65;
            case 2u:
              v102 = type metadata accessor for Date(0);
              v88 = v79;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v79, v80, v102);
              v90 = v79;
              v91 = v81;
              v92 = 2;
              goto LABEL_65;
            case 3u:
              v103 = type metadata accessor for Date(0);
              v88 = v79;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v79, v80, v103);
              v90 = v79;
              v91 = v81;
              v92 = 3;
              goto LABEL_65;
            case 4u:
              v104 = type metadata accessor for Date(0);
              v88 = v79;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(v79, v80, v104);
              v90 = v79;
              v91 = v81;
              v92 = 4;
              goto LABEL_65;
            case 5u:
              v105 = type metadata accessor for Date(0);
              v88 = v79;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v79, v80, v105);
              v90 = v79;
              v91 = v81;
              v92 = 5;
              goto LABEL_65;
            case 6u:
              v106 = type metadata accessor for Date(0);
              v88 = v79;
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v79, v80, v106);
              v90 = v79;
              v91 = v81;
              v92 = 6;
              goto LABEL_65;
            case 8u:
              v107 = *v80;
              v88 = v79;
              *v79 = *v80;
              v108 = v107;
              v90 = v79;
              v91 = v81;
              v92 = 8;
              goto LABEL_65;
            case 9u:
              v109 = *v80;
              v88 = v79;
              *v79 = *v80;
              v110 = v109;
              v90 = v79;
              v91 = v81;
              v92 = 9;
LABEL_65:
              swift_storeEnumTagMultiPayload(v90, v91, v92);
              break;
            default:
              v88 = v79;
              memcpy(v79, v80, *(_QWORD *)(v82 + 64));
              break;
          }
          v86 = v113;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v82 + 56))(v88, 0, 1, v81);
        }
        v74 = v62;
        v75 = v86;
        v76 = 1;
        goto LABEL_68;
      case 0:
        v66 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v63, v66))
        {
          case 1u:
            v67 = *v63;
            *v62 = *v63;
            v68 = v67;
            v69 = v62;
            v70 = v66;
            v71 = 1;
            goto LABEL_55;
          case 2u:
            v93 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v62, v63, v93);
            v69 = v62;
            v70 = v66;
            v71 = 2;
            goto LABEL_55;
          case 3u:
            v94 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v62, v63, v94);
            v69 = v62;
            v70 = v66;
            v71 = 3;
            goto LABEL_55;
          case 4u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v62, v63, v95);
            v69 = v62;
            v70 = v66;
            v71 = 4;
            goto LABEL_55;
          case 5u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(v62, v63, v96);
            v69 = v62;
            v70 = v66;
            v71 = 5;
            goto LABEL_55;
          case 6u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v62, v63, v97);
            v69 = v62;
            v70 = v66;
            v71 = 6;
            goto LABEL_55;
          case 8u:
            v98 = *v63;
            *v62 = *v63;
            v99 = v98;
            v69 = v62;
            v70 = v66;
            v71 = 8;
            goto LABEL_55;
          case 9u:
            v100 = *v63;
            *v62 = *v63;
            v101 = v100;
            v69 = v62;
            v70 = v66;
            v71 = 9;
LABEL_55:
            swift_storeEnumTagMultiPayload(v69, v70, v71);
            break;
          default:
            memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
            break;
        }
        v74 = v62;
        v75 = v64;
        v76 = 0;
        goto LABEL_68;
    }
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
LABEL_69:
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1004F3A6C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
  if (EnumCaseMultiPayload == 1)
  {
    *v8 = *v9;
    v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
    v18 = (char *)v8 + v17;
    v19 = (char *)v9 + v17;
    v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_10002A750(&qword_100644980);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(v19, v20))
      {
        case 2u:
          v23 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v18, v19, v23);
          v24 = v18;
          v25 = v20;
          v26 = 2;
          goto LABEL_22;
        case 3u:
          v34 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v18, v19, v34);
          v24 = v18;
          v25 = v20;
          v26 = 3;
          goto LABEL_22;
        case 4u:
          v35 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v18, v19, v35);
          v24 = v18;
          v25 = v20;
          v26 = 4;
          goto LABEL_22;
        case 5u:
          v36 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v18, v19, v36);
          v24 = v18;
          v25 = v20;
          v26 = 5;
          goto LABEL_22;
        case 6u:
          v37 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v18, v19, v37);
          v24 = v18;
          v25 = v20;
          v26 = 6;
LABEL_22:
          swift_storeEnumTagMultiPayload(v24, v25, v26);
          break;
        default:
          memcpy(v18, v19, *(_QWORD *)(v21 + 64));
          break;
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v31 = v8;
    v32 = v10;
    v33 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      goto LABEL_26;
    }
    v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(v9, v12))
    {
      case 2u:
        v13 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
        v14 = v8;
        v15 = v12;
        v16 = 2;
        goto LABEL_15;
      case 3u:
        v27 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v8, v9, v27);
        v14 = v8;
        v15 = v12;
        v16 = 3;
        goto LABEL_15;
      case 4u:
        v28 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v8, v9, v28);
        v14 = v8;
        v15 = v12;
        v16 = 4;
        goto LABEL_15;
      case 5u:
        v29 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v8, v9, v29);
        v14 = v8;
        v15 = v12;
        v16 = 5;
        goto LABEL_15;
      case 6u:
        v30 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v8, v9, v30);
        v14 = v8;
        v15 = v12;
        v16 = 6;
LABEL_15:
        swift_storeEnumTagMultiPayload(v14, v15, v16);
        break;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        break;
    }
    v31 = v8;
    v32 = v10;
    v33 = 0;
  }
  swift_storeEnumTagMultiPayload(v31, v32, v33);
LABEL_26:
  v38 = a3[6];
  v39 = a1 + v38;
  v40 = a2 + v38;
  v41 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
  v42 = a3[7];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (_QWORD *)(a2 + v42);
  v45 = swift_getEnumCaseMultiPayload(a2 + v42, v10);
  if (v45 == 1)
  {
    *v43 = *v44;
    v51 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
    v52 = (char *)v43 + v51;
    v53 = (char *)v44 + v51;
    v54 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v55 = *(_QWORD *)(v54 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
    {
      v56 = sub_10002A750(&qword_100644980);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(v53, v54))
      {
        case 2u:
          v57 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v52, v53, v57);
          v58 = v52;
          v59 = v54;
          v60 = 2;
          goto LABEL_47;
        case 3u:
          v68 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v52, v53, v68);
          v58 = v52;
          v59 = v54;
          v60 = 3;
          goto LABEL_47;
        case 4u:
          v69 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v52, v53, v69);
          v58 = v52;
          v59 = v54;
          v60 = 4;
          goto LABEL_47;
        case 5u:
          v70 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v52, v53, v70);
          v58 = v52;
          v59 = v54;
          v60 = 5;
          goto LABEL_47;
        case 6u:
          v71 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v52, v53, v71);
          v58 = v52;
          v59 = v54;
          v60 = 6;
LABEL_47:
          swift_storeEnumTagMultiPayload(v58, v59, v60);
          break;
        default:
          memcpy(v52, v53, *(_QWORD *)(v55 + 64));
          break;
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
    }
    v65 = v43;
    v66 = v10;
    v67 = 1;
    goto LABEL_50;
  }
  if (!v45)
  {
    v46 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(v44, v46))
    {
      case 2u:
        v47 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v43, v44, v47);
        v48 = v43;
        v49 = v46;
        v50 = 2;
        goto LABEL_40;
      case 3u:
        v61 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v43, v44, v61);
        v48 = v43;
        v49 = v46;
        v50 = 3;
        goto LABEL_40;
      case 4u:
        v62 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v43, v44, v62);
        v48 = v43;
        v49 = v46;
        v50 = 4;
        goto LABEL_40;
      case 5u:
        v63 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v43, v44, v63);
        v48 = v43;
        v49 = v46;
        v50 = 5;
        goto LABEL_40;
      case 6u:
        v64 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v43, v44, v64);
        v48 = v43;
        v49 = v46;
        v50 = 6;
LABEL_40:
        swift_storeEnumTagMultiPayload(v48, v49, v50);
        break;
      default:
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        break;
    }
    v65 = v43;
    v66 = v10;
    v67 = 0;
LABEL_50:
    swift_storeEnumTagMultiPayload(v65, v66, v67);
    goto LABEL_51;
  }
  memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_51:
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1004F41C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = a3[5];
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    sub_10001F544(a1 + v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
    if (EnumCaseMultiPayload == 1)
    {
      *v8 = *v9;
      v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v18 = (char *)v8 + v17;
      v19 = (char *)v9 + v17;
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        v22 = sub_10002A750(&qword_100644980);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v19, v20))
        {
          case 2u:
            v23 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v18, v19, v23);
            v24 = v18;
            v25 = v20;
            v26 = 2;
            goto LABEL_23;
          case 3u:
            v34 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v18, v19, v34);
            v24 = v18;
            v25 = v20;
            v26 = 3;
            goto LABEL_23;
          case 4u:
            v35 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v18, v19, v35);
            v24 = v18;
            v25 = v20;
            v26 = 4;
            goto LABEL_23;
          case 5u:
            v36 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v18, v19, v36);
            v24 = v18;
            v25 = v20;
            v26 = 5;
            goto LABEL_23;
          case 6u:
            v37 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v18, v19, v37);
            v24 = v18;
            v25 = v20;
            v26 = 6;
LABEL_23:
            swift_storeEnumTagMultiPayload(v24, v25, v26);
            break;
          default:
            memcpy(v18, v19, *(_QWORD *)(v21 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      v31 = v8;
      v32 = v10;
      v33 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        goto LABEL_27;
      }
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v9, v12))
      {
        case 2u:
          v13 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
          v14 = v8;
          v15 = v12;
          v16 = 2;
          goto LABEL_16;
        case 3u:
          v27 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v8, v9, v27);
          v14 = v8;
          v15 = v12;
          v16 = 3;
          goto LABEL_16;
        case 4u:
          v28 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v8, v9, v28);
          v14 = v8;
          v15 = v12;
          v16 = 4;
          goto LABEL_16;
        case 5u:
          v29 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v8, v9, v29);
          v14 = v8;
          v15 = v12;
          v16 = 5;
          goto LABEL_16;
        case 6u:
          v30 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v8, v9, v30);
          v14 = v8;
          v15 = v12;
          v16 = 6;
LABEL_16:
          swift_storeEnumTagMultiPayload(v14, v15, v16);
          break;
        default:
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          break;
      }
      v31 = v8;
      v32 = v10;
      v33 = 0;
    }
    swift_storeEnumTagMultiPayload(v31, v32, v33);
  }
LABEL_27:
  v38 = a3[6];
  v39 = a1 + v38;
  v40 = a2 + v38;
  v41 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 40))(v39, v40, v41);
  if (a1 != a2)
  {
    v42 = a3[7];
    v43 = (_QWORD *)(a1 + v42);
    v44 = (_QWORD *)(a2 + v42);
    sub_10001F544(a1 + v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v45 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    v46 = swift_getEnumCaseMultiPayload(v44, v45);
    if (v46 == 1)
    {
      *v43 = *v44;
      v52 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v53 = (char *)v43 + v52;
      v54 = (char *)v44 + v52;
      v55 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v56 = *(_QWORD *)(v55 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
      {
        v57 = sub_10002A750(&qword_100644980);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v54, v55))
        {
          case 2u:
            v58 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v53, v54, v58);
            v59 = v53;
            v60 = v55;
            v61 = 2;
            goto LABEL_49;
          case 3u:
            v69 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v53, v54, v69);
            v59 = v53;
            v60 = v55;
            v61 = 3;
            goto LABEL_49;
          case 4u:
            v70 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v53, v54, v70);
            v59 = v53;
            v60 = v55;
            v61 = 4;
            goto LABEL_49;
          case 5u:
            v71 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v53, v54, v71);
            v59 = v53;
            v60 = v55;
            v61 = 5;
            goto LABEL_49;
          case 6u:
            v72 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v53, v54, v72);
            v59 = v53;
            v60 = v55;
            v61 = 6;
LABEL_49:
            swift_storeEnumTagMultiPayload(v59, v60, v61);
            break;
          default:
            memcpy(v53, v54, *(_QWORD *)(v56 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
      }
      v66 = v43;
      v67 = v45;
      v68 = 1;
      goto LABEL_52;
    }
    if (!v46)
    {
      v47 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v44, v47))
      {
        case 2u:
          v48 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v43, v44, v48);
          v49 = v43;
          v50 = v47;
          v51 = 2;
          goto LABEL_42;
        case 3u:
          v62 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v43, v44, v62);
          v49 = v43;
          v50 = v47;
          v51 = 3;
          goto LABEL_42;
        case 4u:
          v63 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v43, v44, v63);
          v49 = v43;
          v50 = v47;
          v51 = 4;
          goto LABEL_42;
        case 5u:
          v64 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v43, v44, v64);
          v49 = v43;
          v50 = v47;
          v51 = 5;
          goto LABEL_42;
        case 6u:
          v65 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v43, v44, v65);
          v49 = v43;
          v50 = v47;
          v51 = 6;
LABEL_42:
          swift_storeEnumTagMultiPayload(v49, v50, v51);
          break;
        default:
          memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
          break;
      }
      v66 = v43;
      v67 = v45;
      v68 = 0;
LABEL_52:
      swift_storeEnumTagMultiPayload(v66, v67, v68);
      goto LABEL_53;
    }
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
LABEL_53:
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1004F4950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004F495C);
}

uint64_t sub_1004F495C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v16;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_7;
  }
  v16 = *(unsigned __int8 *)(a1 + a3[8]);
  if (v16 >= 2)
    return ((v16 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1004F4A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004F4A44);
}

uint64_t sub_1004F4A44(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[6];
    goto LABEL_7;
  }
  *(_BYTE *)(a1 + a4[8]) = a2 + 1;
  return result;
}

uint64_t type metadata accessor for TTRIRemindersBoardDragItemUserInfo(uint64_t a1)
{
  return sub_100007328(a1, qword_1006646D0, (uint64_t)&nominal type descriptor for TTRIRemindersBoardDragItemUserInfo);
}

uint64_t sub_1004F4B20(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[5];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v7[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for TTRRemindersListViewModel.ItemID(319);
    if (v4 <= 0x3F)
    {
      v5 = *(_QWORD *)(result - 8) + 64;
      v7[1] = v5;
      result = type metadata accessor for IndexPath(319);
      if (v6 <= 0x3F)
      {
        v7[2] = *(_QWORD *)(result - 8) + 64;
        v7[3] = v5;
        v7[4] = &unk_10053A6D8;
        swift_initStructMetadata(a1, 256, 5, v7, a1 + 16);
        return 0;
      }
    }
  }
  return result;
}

id sub_1004F4BF4(void *a1, double *a2)
{
  double v4;
  double v5;
  double v6;
  double v7;
  objc_super v9;
  _BYTE v10[24];

  swift_beginAccess(a2 + 2, v10, 0, 0);
  v4 = a2[2];
  v5 = a2[3];
  v6 = a2[4];
  v7 = a2[5];
  v9.receiver = a1;
  v9.super_class = (Class)type metadata accessor for TTRIAccountsListsViewListCell(0);
  return objc_msgSendSuper2(&v9, "setFrame:", v4, v5, v6, v7);
}

uint64_t sub_1004F4C74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  int v18;
  char v19;
  char v20;
  uint64_t Strong;
  uint64_t v22;
  char v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _OWORD v30[12];
  _OWORD v31[2];
  _BYTE v32[32];

  v1 = v0;
  v2 = type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
  __chkstk_darwin(v2);
  v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750((uint64_t *)&unk_100640EF0);
  __chkstk_darwin(v5);
  v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRIAccountsListsViewListCell.ListItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (_OWORD *)((char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  v14 = (char *)v30 - v13;
  v15 = v1 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listItem;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listItem, v32, 0, 0);
  sub_100021CA4(v15, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100640EF0);
  sub_10001F580((uint64_t)v7, (uint64_t)v14, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
  sub_100022A08((uint64_t)v14, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload(v11, v8) == 1)
  {
    sub_10001F580((uint64_t)v11, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
    v17 = OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_checkmarkState;
    v18 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_checkmarkState);
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_checkmarkState))
    {
      v19 = v18 == 1;
      if (v18 == 1)
        v20 = 2;
      else
        v20 = 1;
      Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listsViewListCellDelegate);
      if (Strong)
      {
        v22 = Strong;
        v23 = sub_1003329C0(v19, v4[*(int *)(v2 + 20)]);
        swift_unknownObjectRelease(v22);
        if ((v23 & 1) != 0)
        {
          *(_BYTE *)(v1 + v17) = v20;
          sub_1000228BC();
        }
      }
    }
    sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
    return sub_10001F544((uint64_t)v14, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
  }
  else
  {
    sub_10001F544((uint64_t)v14, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
    v24 = v11[11];
    v30[10] = v11[10];
    v30[11] = v24;
    v31[0] = v11[12];
    *(_OWORD *)((char *)v31 + 10) = *(_OWORD *)((char *)v11 + 202);
    v25 = v11[7];
    v30[6] = v11[6];
    v30[7] = v25;
    v26 = v11[9];
    v30[8] = v11[8];
    v30[9] = v26;
    v27 = v11[3];
    v30[2] = v11[2];
    v30[3] = v27;
    v28 = v11[5];
    v30[4] = v11[4];
    v30[5] = v28;
    v29 = v11[1];
    v30[0] = *v11;
    v30[1] = v29;
    return sub_100075FE8((uint64_t)v30);
  }
}

UIAccessibilityTraits sub_1004F5058()
{
  char *v0;
  unint64_t v1;
  void *v2;
  UIAccessibilityTraits v3;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for TTRIAccountsListsViewListCell(0);
  v1 = (unint64_t)objc_msgSendSuper2(&v5, "accessibilityTraits");
  v2 = *(void **)&v0[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_checkmarkButton];
  if ((objc_msgSend(v2, "isHidden") & 1) != 0 || !objc_msgSend(v2, "isSelected"))
  {
    if ((UIAccessibilityTraitSelected & v1) != 0)
      return v1 & ~UIAccessibilityTraitSelected;
    else
      return v1;
  }
  else
  {
    v3 = UIAccessibilityTraitSelected;
    if ((UIAccessibilityTraitSelected & ~v1) == 0)
      v3 = 0;
    return v3 | v1;
  }
}

uint64_t sub_1004F5168()
{
  void *v0;
  uint64_t v1;
  unsigned __int8 v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v2 = objc_msgSend(v0, "isEditing");
  if ((v2 & 1) != 0)
  {
    v3 = _swiftEmptyArrayStorage;
  }
  else
  {
    v4 = (uint64_t *)TTRAccesibility.AccountsList.Hint.List.unsafeMutableAddressor();
    v5 = *v4;
    v1 = v4[1];
    swift_bridgeObjectRetain_n(v1, 2);
    v3 = sub_10001D840(0, 1, 1, _swiftEmptyArrayStorage);
    v7 = v3[2];
    v6 = v3[3];
    if (v7 >= v6 >> 1)
      v3 = sub_10001D840((_QWORD *)(v6 > 1), v7 + 1, 1, v3);
    v3[2] = v7 + 1;
    v8 = &v3[2 * v7];
    v8[4] = v5;
    v8[5] = v1;
  }
  v9 = (uint64_t *)TTRAccesibility.AccountsList.Hint.DragAndDrop.unsafeMutableAddressor();
  v11 = *v9;
  v10 = v9[1];
  swift_bridgeObjectRetain(v10);
  if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
    v3 = sub_10001D840(0, v3[2] + 1, 1, v3);
  v14 = v3[2];
  v13 = v3[3];
  if (v14 >= v13 >> 1)
    v3 = sub_10001D840((_QWORD *)(v13 > 1), v14 + 1, 1, v3);
  v3[2] = v14 + 1;
  v15 = &v3[2 * v14];
  v15[4] = v11;
  v15[5] = v10;
  v16 = (uint64_t *)TTRAccesibility.General.Label.SentenceEnd.unsafeMutableAddressor(v12);
  v17 = *v16;
  v18 = v16[1];
  swift_bridgeObjectRetain(v18);
  v19 = sub_10002A750(&qword_1006466D0);
  v20 = sub_1000923A8();
  v21 = BidirectionalCollection<>.joined(separator:)(v17, v18, v19, v20);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v18);
  if ((v2 & 1) == 0)
    swift_bridgeObjectRelease(v1);
  return v21;
}

id sub_1004F5348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t isUniquelyReferenced_nonNull_native;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t inited;
  void **v47;
  void *v48;
  id v49;
  unint64_t v50;
  id v51;
  NSString v52;
  Class isa;
  _QWORD *v55;
  uint64_t v56;
  unint64_t v57;
  _QWORD v58[10];
  _OWORD v59[12];
  _OWORD v60[2];
  char v61[24];

  v1 = sub_10002A750((uint64_t *)&unk_100640EF0);
  __chkstk_darwin(v1);
  v3 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TTRIAccountsListsViewListCell.ListItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (_OWORD *)((char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v10 = (char *)&v56 - v9;
  v11 = v0 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listItem;
  swift_beginAccess(v0 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listItem, v61, 0, 0);
  sub_100021CA4(v11, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1000073A0((uint64_t)v3, (uint64_t *)&unk_100640EF0);
    return 0;
  }
  else
  {
    sub_10001F580((uint64_t)v3, (uint64_t)v10, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
    sub_100022A08((uint64_t)v10, (uint64_t)v7);
    if (swift_getEnumCaseMultiPayload(v7, v4) == 1)
    {
      sub_10001F544((uint64_t)v10, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
      sub_10001F544((uint64_t)v7, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
      return 0;
    }
    else
    {
      v13 = v7[11];
      v59[10] = v7[10];
      v59[11] = v13;
      v60[0] = v7[12];
      *(_OWORD *)((char *)v60 + 10) = *(_OWORD *)((char *)v7 + 202);
      v14 = v7[7];
      v59[6] = v7[6];
      v59[7] = v14;
      v15 = v7[9];
      v59[8] = v7[8];
      v59[9] = v15;
      v16 = v7[3];
      v59[2] = v7[2];
      v59[3] = v16;
      v17 = v7[5];
      v59[4] = v7[4];
      v59[5] = v17;
      v18 = v7[1];
      v59[0] = *v7;
      v59[1] = v18;
      sub_100075FE8((uint64_t)v59);
      v19 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_badge);
      v20 = objc_msgSend(v19, "accessibilityLabel");
      if (v20)
      {
        v21 = v20;
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
        v24 = v23;

        v25 = sub_10001D840(0, 1, 1, _swiftEmptyArrayStorage);
        v27 = v25[2];
        v26 = v25[3];
        v28 = v27 + 1;
        if (v27 >= v26 >> 1)
        {
          v57 = v27 + 1;
          v55 = sub_10001D840((_QWORD *)(v26 > 1), v27 + 1, 1, v25);
          v28 = v57;
          v25 = v55;
        }
        v25[2] = v28;
        v29 = &v25[2 * v27];
        v29[4] = v22;
        v29[5] = v24;
      }
      else
      {
        v25 = _swiftEmptyArrayStorage;
      }
      isUniquelyReferenced_nonNull_native = (uint64_t)objc_msgSend(v19, "accessibilityValue");
      if (isUniquelyReferenced_nonNull_native)
      {
        v31 = (void *)isUniquelyReferenced_nonNull_native;
        v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(isUniquelyReferenced_nonNull_native);
        v34 = v33;

        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v25);
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          isUniquelyReferenced_nonNull_native = (uint64_t)sub_10001D840(0, v25[2] + 1, 1, v25);
          v25 = (_QWORD *)isUniquelyReferenced_nonNull_native;
        }
        v36 = v25[2];
        v35 = v25[3];
        if (v36 >= v35 >> 1)
        {
          isUniquelyReferenced_nonNull_native = (uint64_t)sub_10001D840((_QWORD *)(v35 > 1), v36 + 1, 1, v25);
          v25 = (_QWORD *)isUniquelyReferenced_nonNull_native;
        }
        v25[2] = v36 + 1;
        v37 = &v25[2 * v36];
        v37[4] = v32;
        v37[5] = v34;
      }
      v58[9] = v25;
      v38 = (uint64_t *)TTRAccesibility.General.Label.Separator.unsafeMutableAddressor(isUniquelyReferenced_nonNull_native);
      v39 = *v38;
      v40 = v38[1];
      swift_bridgeObjectRetain(v40);
      v41 = sub_10002A750(&qword_1006466D0);
      v42 = sub_1000923A8();
      BidirectionalCollection<>.joined(separator:)(v39, v40, v41, v42);
      v44 = v43;
      swift_bridgeObjectRelease(v25);
      swift_bridgeObjectRelease(v40);
      v45 = sub_10002A750(&qword_10064BB40);
      inited = swift_initStackObject(v45, v58);
      *(_OWORD *)(inited + 16) = xmmword_100520250;
      v47 = (void **)NSAttributedStringKey.ttriAccessibilityLowPitch.unsafeMutableAddressor();
      v48 = *v47;
      *(_QWORD *)(inited + 32) = *v47;
      *(_QWORD *)(inited + 64) = &type metadata for Bool;
      *(_BYTE *)(inited + 40) = 1;
      v49 = v48;
      v50 = sub_100350498(inited);
      v51 = objc_allocWithZone((Class)NSAttributedString);
      v52 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v44);
      type metadata accessor for Key(0);
      sub_1000175C8((unint64_t *)&qword_10064BB50, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10051FF08);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      v12 = objc_msgSend(v51, "initWithString:attributes:", v52, isa, swift_bridgeObjectRelease(v50).n128_f64[0]);

      sub_10001F544((uint64_t)v10, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
    }
  }
  return v12;
}

_QWORD *sub_1004F57DC()
{
  char *v0;
  char *v1;
  void *Strong;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unsigned __int8 v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  NSString v19;
  void *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  NSString v32;
  void *v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *result;
  uint64_t v40;
  uint64_t v41;
  void **aBlock;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, void *);
  void *v45;
  BOOL (*v46)(uint64_t);
  uint64_t v47;
  objc_super v48;
  uint64_t v49;

  v1 = v0;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_delegate]);
  if (!Strong)
    goto LABEL_7;
  v3 = Strong;
  v4 = objc_msgSend(Strong, "view");
  if (v4)
  {
    v5 = v4;
    v6 = type metadata accessor for TTRIAccountsListsTreeView(0);
    v7 = swift_dynamicCastClass(v5, v6);
    if (v7)
    {
      v8 = *(void **)(v7 + qword_10065D8D8);
      if (v8)
      {
        v9 = objc_msgSend(v8, "hasActiveDrag");
        swift_unknownObjectRelease(v3);

        if ((v9 & 1) != 0)
          return _swiftEmptyArrayStorage;
LABEL_7:
        v48.receiver = v1;
        v48.super_class = (Class)type metadata accessor for TTRIAccountsListsViewListCell(0);
        v11 = objc_msgSendSuper2(&v48, "accessibilityCustomActions");
        if (v11)
        {
          v12 = v11;
          v13 = sub_100005ED8(0, (unint64_t *)&unk_1006466C0, UIAccessibilityCustomAction_ptr);
          v14 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

        }
        else
        {
          v14 = _swiftEmptyArrayStorage;
        }
        v49 = (uint64_t)v14;
        if (objc_msgSend(v1, "isEditing"))
        {
          if (objc_msgSend(v1, "editingAccessoryType") == (id)4)
          {
            v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityEditingCustomActionName
                               + 8];
            if (v15)
            {
              sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
              swift_bridgeObjectRetain(v15);
              v16 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)(0x7269632E6F666E69, 0xEB00000000656C63);
              v17 = swift_allocObject(&unk_10060C680, 24, 7);
              swift_unknownObjectWeakInit(v17 + 16, v1);
              v18 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
              swift_retain();
              v19 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease(v15);
              v46 = sub_1004F7134;
              v47 = v17;
              aBlock = _NSConcreteStackBlock;
              v43 = 1107296256;
              v44 = sub_100341638;
              v45 = &unk_10060C6C0;
              v20 = _Block_copy(&aBlock);
              v21 = objc_msgSend(v18, "initWithName:image:actionHandler:", v19, v16, v20);

              _Block_release(v20);
              swift_release();
              swift_release();
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
              v24 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
              v23 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v24 >= v23 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
              v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v21);
              specialized Array._endMutation()(v25);
            }
          }
        }
        v26 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityShareListActionName
                           + 8];
        if (v26)
        {
          v27 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityShareListActionSFSymbolName
                             + 8];
          if (v27)
          {
            v28 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityShareListActionSFSymbolName];
            sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
            swift_bridgeObjectRetain(v26);
            swift_bridgeObjectRetain(v27);
            v29 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)(v28, v27);
            swift_bridgeObjectRelease(v27);
            v30 = swift_allocObject(&unk_10060C680, 24, 7);
            swift_unknownObjectWeakInit(v30 + 16, v1);
            v31 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
            swift_retain();
            v32 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v26);
            v46 = sub_1004F7110;
            v47 = v30;
            aBlock = _NSConcreteStackBlock;
            v43 = 1107296256;
            v44 = sub_100341638;
            v45 = &unk_10060C698;
            v33 = _Block_copy(&aBlock);
            v34 = objc_msgSend(v31, "initWithName:image:actionHandler:", v32, v29, v33);

            _Block_release(v33);
            swift_release();
            swift_release();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
            v37 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v36 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v37 >= v36 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v37 + 1, 1);
            v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v34);
            specialized Array._endMutation()(v38);
          }
        }
        v10 = v49;
        if ((unint64_t)v49 >> 62)
        {
          if (v49 < 0)
            v40 = v49;
          else
            v40 = v49 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v49);
          v41 = _CocoaArrayWrapper.endIndex.getter(v40);
          swift_bridgeObjectRelease(v10);
          if (v41)
            return (_QWORD *)v10;
        }
        else if (*(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          return (_QWORD *)v10;
        }
        swift_bridgeObjectRelease(v10);
        return 0;
      }
      __break(1u);
    }

  }
  result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
  __break(1u);
  return result;
}

BOOL sub_1004F5D18(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  v6 = (void *)Strong;
  if (Strong)
  {
    v7 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_delegate);
    if (v7)
    {
      v8 = v7;
      a3(v6);

      swift_unknownObjectRelease(v8);
    }
    else
    {

    }
  }
  return v6 != 0;
}

Class sub_1004F5DC8(void *a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, _QWORD *a5)
{
  id v8;
  uint64_t v9;
  NSArray v10;

  v8 = a1;
  v9 = a3();

  if (v9)
  {
    sub_100005ED8(0, a4, a5);
    v10.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v10.super.isa = 0;
  }
  return v10.super.isa;
}

uint64_t sub_1004F5E4C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  double v18;
  double v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  unint64_t v29;
  char **v30;
  char **v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  double v37;
  double v38;
  void *v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  char **v45;
  unint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  NSString v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t i;
  uint64_t v56;
  uint64_t v57;
  id v58;
  void *v59;
  id v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  _QWORD *v67;
  _OWORD v68[9];
  __int128 v69;
  __int128 v70;
  __int128 v71;
  _OWORD v72[2];
  _BYTE v73[24];
  objc_super v74;
  CGRect v75;

  v1 = sub_10002A750((uint64_t *)&unk_100640EF0);
  __chkstk_darwin(v1);
  v3 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TTRIAccountsListsViewListCell.ListItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (_OWORD *)((char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v65 = (uint64_t)&v64 - v9;
  v10 = (objc_class *)type metadata accessor for TTRIAccountsListsViewListCell(0);
  v66 = v0;
  v74.receiver = v0;
  v74.super_class = v10;
  v11 = objc_msgSendSuper2(&v74, "accessibilityDropPointDescriptors");
  if (!v11)
    return 0;
  v12 = v11;
  v13 = sub_100005ED8(0, &qword_100664C58, UIAccessibilityLocationDescriptor_ptr);
  v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

  v15 = &v66[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listItem];
  swift_beginAccess(&v66[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listItem], v73, 0, 0);
  sub_100021CA4((uint64_t)v15, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1000073A0((uint64_t)v3, (uint64_t *)&unk_100640EF0);
    return v14;
  }
  v17 = v65;
  sub_10001F580((uint64_t)v3, v65, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
  objc_msgSend(v66, "center");
  v19 = v18;
  sub_100022A08(v17, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload(v7, v4) == 1)
  {
    sub_10001F544((uint64_t)v7, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
    goto LABEL_23;
  }
  v20 = v7[11];
  v70 = v7[10];
  v71 = v20;
  v72[0] = v7[12];
  *(_OWORD *)((char *)v72 + 10) = *(_OWORD *)((char *)v7 + 202);
  v21 = v7[7];
  v68[6] = v7[6];
  v68[7] = v21;
  v22 = v7[9];
  v68[8] = v7[8];
  v69 = v22;
  v23 = v7[3];
  v68[2] = v7[2];
  v68[3] = v23;
  v24 = v7[5];
  v68[4] = v7[4];
  v68[5] = v24;
  v25 = v7[1];
  v68[0] = *v7;
  v68[1] = v25;
  sub_100075FE8((uint64_t)v68);
  if ((BYTE2(v69) & 1) != 0)
  {
LABEL_23:
    *(_QWORD *)&v68[0] = _swiftEmptyArrayStorage;
    if ((unint64_t)v14 >> 62)
    {
      if (v14 < 0)
        v62 = v14;
      else
        v62 = v14 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v14);
      v54 = _CocoaArrayWrapper.endIndex.getter(v62);
      swift_bridgeObjectRelease(v14);
      if (v54)
        goto LABEL_25;
    }
    else
    {
      v54 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v54)
      {
LABEL_25:
        if (v54 >= 1)
        {
          for (i = 0; i != v54; ++i)
          {
            if ((v14 & 0xC000000000000001) != 0)
              v58 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v14);
            else
              v58 = *(id *)(v14 + 8 * i + 32);
            v59 = v58;
            v60 = objc_msgSend(v58, "point");
            if (v61 == v19)
            {

            }
            else
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v60);
              v56 = *(_QWORD *)(*(_QWORD *)&v68[0] + 16);
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v56);
              v57 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v59);
              specialized ContiguousArray._endMutation()(v57);
            }
          }
          swift_bridgeObjectRelease(v14);
          v16 = *(_QWORD **)&v68[0];
          goto LABEL_42;
        }
        __break(1u);
        goto LABEL_45;
      }
    }
    swift_bridgeObjectRelease(v14);
    v16 = _swiftEmptyArrayStorage;
LABEL_42:
    sub_10001F544(v65, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
    return (uint64_t)v16;
  }
  if (!((unint64_t)v14 >> 62))
  {
    v26 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_10;
  }
LABEL_45:
  if (v14 < 0)
    v63 = v14;
  else
    v63 = v14 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v14);
  v26 = _CocoaArrayWrapper.endIndex.getter(v63);
  swift_bridgeObjectRelease(v14);
LABEL_10:
  v16 = _swiftEmptyArrayStorage;
  if (!v26)
  {
LABEL_36:
    sub_10001F544(v65, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
    swift_bridgeObjectRelease(v14);
    return (uint64_t)v16;
  }
  v67 = _swiftEmptyArrayStorage;
  result = specialized ContiguousArray.reserveCapacity(_:)(v26);
  if ((v26 & 0x8000000000000000) == 0)
  {
    v28 = 0;
    v29 = v14 & 0xC000000000000001;
    v30 = &selRef_sourceView;
    v31 = &selRef_contact;
    v64 = v26;
    do
    {
      if (v29)
        v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v14);
      else
        v35 = *(id *)(v14 + 8 * v28 + 32);
      v36 = v35;
      objc_msgSend(v35, v30[197], v64);
      v38 = v37;
      v32 = objc_msgSend(v36, v31[123]);
      if (v32)
      {
        v39 = v32;
        if (v38 != v19)
        {
          objc_msgSend(v66, "frame");
          v40 = CGRectGetHeight(v75) * 0.4;
          v41 = -v40;
          if (v38 >= v19)
            v41 = v40;
          v42 = v19 + v41;
          objc_msgSend(v36, v30[197]);
          v44 = v43;
          v45 = v30;
          v46 = v29;
          v47 = objc_msgSend(v36, "name");
          static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
          v49 = v48;

          v50 = objc_allocWithZone((Class)UIAccessibilityLocationDescriptor);
          v51 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v49);
          v52 = v50;
          v29 = v46;
          v30 = v45;
          v31 = &selRef_contact;
          v53 = objc_msgSend(v52, "initWithName:point:inView:", v51, v39, v44, v42);

          v26 = v64;
          v36 = v53;
        }

      }
      ++v28;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v32);
      v33 = v67[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v33);
      v34 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v36);
      specialized ContiguousArray._endMutation()(v34);
    }
    while (v26 != v28);
    v16 = v67;
    goto LABEL_36;
  }
  __break(1u);
  return result;
}

void sub_1004F63F0(void *a1, uint64_t a2, objc_class *a3, unint64_t *a4, _QWORD *a5, SEL *a6)
{
  Class isa;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  objc_super v13;

  isa = a3;
  if (a3)
  {
    v9 = sub_100005ED8(0, a4, a5);
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(isa, v9);
    v11 = a1;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v12 = a1;
  }
  v13.receiver = a1;
  v13.super_class = (Class)type metadata accessor for TTRIAccountsListsViewListCell(0);
  objc_msgSendSuper2(&v13, *a6, isa);

}

double sub_1004F649C()
{
  uint64_t v0;
  double result;

  sub_1000381C8(v0 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listsViewListCellDelegate);

  sub_1000073A0(v0 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listItem, (uint64_t *)&unk_100640EF0);
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityEditingCustomActionName
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityShareListActionName
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityShareListActionSFSymbolName
                                      + 8));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_hidePredefinedSmartListGestureRecognizer));

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0
                                                           + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_dynamicGlyph
                                                           + 8)).n128_u64[0];
  return result;
}

id sub_1004F6560()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIAccountsListsViewListCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1004F6664()
{
  return type metadata accessor for TTRIAccountsListsViewListCell(0);
}

uint64_t storeEnumTagSinglePayload for TTRIAccountsListsViewListCell.CheckmarkState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1004F66B8 + 4 * byte_10053A895[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1004F66EC + 4 * asc_10053A890[v4]))();
}

uint64_t sub_1004F66EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004F66F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004F66FCLL);
  return result;
}

uint64_t sub_1004F6708(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004F6710);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1004F6714(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004F671C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIAccountsListsViewListCell.CheckmarkState()
{
  return &type metadata for TTRIAccountsListsViewListCell.CheckmarkState;
}

char *sub_1004F6738(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  char v41;
  uint64_t v42;
  uint64_t v43;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v21[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
      a1[v8[5]] = *((_BYTE *)a2 + v8[5]);
      *(_QWORD *)&a1[v8[6]] = *(char **)((char *)a2 + v8[6]);
      v9 = v8[7];
      v10 = &a1[v9];
      v11 = (uint64_t *)((char *)a2 + v9);
      v13 = *v11;
      v12 = v11[1];
      *(_QWORD *)v10 = v13;
      *((_QWORD *)v10 + 1) = v12;
      *(_QWORD *)&a1[v8[8]] = *(char **)((char *)a2 + v8[8]);
      a1[v8[9]] = *((_BYTE *)a2 + v8[9]);
      v14 = v8[10];
      v15 = &a1[v14];
      v16 = (char **)((char *)a2 + v14);
      v17 = v16[1];
      *(_QWORD *)v15 = *v16;
      *((_QWORD *)v15 + 1) = v17;
      swift_bridgeObjectRetain(v12);
      swift_bridgeObjectRetain(v17);
      v18 = a1;
      v19 = a3;
      v20 = 1;
    }
    else
    {
      v22 = *a2;
      v23 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v23;
      v24 = a2[2];
      *((_QWORD *)a1 + 2) = v24;
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
      v25 = a2[6];
      *((_QWORD *)a1 + 5) = a2[5];
      *((_QWORD *)a1 + 6) = v25;
      v26 = a2[8];
      *((_QWORD *)a1 + 7) = a2[7];
      *((_QWORD *)a1 + 8) = v26;
      v27 = a2[9];
      v28 = (uint64_t)a2[10];
      v29 = (uint64_t)a2[11];
      v30 = (uint64_t)a2[12];
      v42 = (uint64_t)a2[14];
      v43 = (uint64_t)a2[13];
      v41 = *((_BYTE *)a2 + 120);
      v31 = v22;
      swift_bridgeObjectRetain(v24);
      swift_bridgeObjectRetain(v25);
      swift_bridgeObjectRetain(v26);
      sub_10002B764(v27, v28, v29, v30, v43, v42, v41);
      *((_QWORD *)a1 + 9) = v27;
      *((_QWORD *)a1 + 10) = v28;
      *((_QWORD *)a1 + 11) = v29;
      *((_QWORD *)a1 + 12) = v30;
      *((_QWORD *)a1 + 13) = v43;
      *((_QWORD *)a1 + 14) = v42;
      a1[120] = v41;
      v32 = a2[16];
      v33 = a2[17];
      LOBYTE(v26) = *((_BYTE *)a2 + 144);
      sub_10002B7A0(v32, v33, (char)v26);
      *((_QWORD *)a1 + 16) = v32;
      *((_QWORD *)a1 + 17) = v33;
      a1[144] = (char)v26;
      *(_DWORD *)(a1 + 145) = *(_DWORD *)((char *)a2 + 145);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 19);
      v34 = a2[21];
      v35 = a2[22];
      *((_QWORD *)a1 + 21) = v34;
      *((_QWORD *)a1 + 22) = v35;
      v36 = a2[23];
      v37 = a2[24];
      *((_QWORD *)a1 + 23) = v36;
      *((_QWORD *)a1 + 24) = v37;
      v38 = a2[26];
      *((_QWORD *)a1 + 25) = a2[25];
      *((_QWORD *)a1 + 26) = v38;
      *((_WORD *)a1 + 108) = *((_WORD *)a2 + 108);
      swift_bridgeObjectRetain(v34);
      swift_bridgeObjectRetain(v35);
      swift_bridgeObjectRetain(v36);
      v39 = v37;
      swift_bridgeObjectRetain(v38);
      v18 = a1;
      v19 = a3;
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v18, v19, v20);
  }
  return a1;
}

uint64_t sub_1004F6980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  char v38;
  uint64_t v39;
  uint64_t v40;

  if (a1 != a2)
  {
    sub_10001F544(a1, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
      *(_BYTE *)(a1 + v7[5]) = *(_BYTE *)(a2 + v7[5]);
      *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
      v8 = v7[7];
      v9 = (_QWORD *)(a1 + v8);
      v10 = (_QWORD *)(a2 + v8);
      *v9 = *v10;
      v11 = v10[1];
      v9[1] = v11;
      *(_QWORD *)(a1 + v7[8]) = *(_QWORD *)(a2 + v7[8]);
      *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
      v12 = v7[10];
      v13 = (_QWORD *)(a1 + v12);
      v14 = (_QWORD *)(a2 + v12);
      *v13 = *v14;
      v15 = v14[1];
      v13[1] = v15;
      swift_bridgeObjectRetain(v11);
      swift_bridgeObjectRetain(v15);
      v16 = a1;
      v17 = a3;
      v18 = 1;
    }
    else
    {
      v19 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      v40 = a3;
      v20 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 16) = v20;
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      v21 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 48) = v21;
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      v22 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 64) = v22;
      v23 = *(void **)(a2 + 72);
      v24 = *(_QWORD *)(a2 + 80);
      v25 = *(_QWORD *)(a2 + 88);
      v26 = *(_QWORD *)(a2 + 96);
      v27 = *(_QWORD *)(a2 + 104);
      v39 = *(_QWORD *)(a2 + 112);
      v38 = *(_BYTE *)(a2 + 120);
      v28 = v19;
      swift_bridgeObjectRetain(v20);
      swift_bridgeObjectRetain(v21);
      swift_bridgeObjectRetain(v22);
      sub_10002B764(v23, v24, v25, v26, v27, v39, v38);
      *(_QWORD *)(a1 + 72) = v23;
      *(_QWORD *)(a1 + 80) = v24;
      *(_QWORD *)(a1 + 88) = v25;
      *(_QWORD *)(a1 + 96) = v26;
      *(_QWORD *)(a1 + 104) = v27;
      *(_QWORD *)(a1 + 112) = v39;
      *(_BYTE *)(a1 + 120) = v38;
      v29 = *(void **)(a2 + 128);
      v30 = *(void **)(a2 + 136);
      LOBYTE(v21) = *(_BYTE *)(a2 + 144);
      sub_10002B7A0(v29, v30, v21);
      *(_QWORD *)(a1 + 128) = v29;
      *(_QWORD *)(a1 + 136) = v30;
      *(_BYTE *)(a1 + 144) = v21;
      *(_BYTE *)(a1 + 145) = *(_BYTE *)(a2 + 145);
      *(_BYTE *)(a1 + 146) = *(_BYTE *)(a2 + 146);
      *(_BYTE *)(a1 + 147) = *(_BYTE *)(a2 + 147);
      *(_BYTE *)(a1 + 148) = *(_BYTE *)(a2 + 148);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      v31 = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 168) = v31;
      v32 = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 176) = v32;
      v33 = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 184) = v33;
      v34 = *(void **)(a2 + 192);
      *(_QWORD *)(a1 + 192) = v34;
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      v35 = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 208) = v35;
      *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
      *(_BYTE *)(a1 + 217) = *(_BYTE *)(a2 + 217);
      swift_bridgeObjectRetain(v31);
      swift_bridgeObjectRetain(v32);
      swift_bridgeObjectRetain(v33);
      v36 = v34;
      swift_bridgeObjectRetain(v35);
      v16 = a1;
      v17 = v40;
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v17, v18);
  }
  return a1;
}

_BYTE *sub_1004F6C24(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for UUID(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
    a1[v7[5]] = a2[v7[5]];
    *(_QWORD *)&a1[v7[6]] = *(_QWORD *)&a2[v7[6]];
    *(_OWORD *)&a1[v7[7]] = *(_OWORD *)&a2[v7[7]];
    *(_QWORD *)&a1[v7[8]] = *(_QWORD *)&a2[v7[8]];
    a1[v7[9]] = a2[v7[9]];
    *(_OWORD *)&a1[v7[10]] = *(_OWORD *)&a2[v7[10]];
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_BYTE *sub_1004F6D00(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for UUID(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
      a1[v7[5]] = a2[v7[5]];
      *(_QWORD *)&a1[v7[6]] = *(_QWORD *)&a2[v7[6]];
      *(_OWORD *)&a1[v7[7]] = *(_OWORD *)&a2[v7[7]];
      *(_QWORD *)&a1[v7[8]] = *(_QWORD *)&a2[v7[8]];
      a1[v7[9]] = a2[v7[9]];
      *(_OWORD *)&a1[v7[10]] = *(_OWORD *)&a2[v7[10]];
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

unint64_t sub_1004F6DF8()
{
  unint64_t result;

  result = qword_100664C48;
  if (!qword_100664C48)
  {
    result = swift_getWitnessTable(&unk_10053A9A8, &type metadata for TTRIAccountsListsViewListCell.CheckmarkState);
    atomic_store(result, (unint64_t *)&qword_100664C48);
  }
  return result;
}

uint64_t sub_1004F6E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _OWORD v32[12];
  _OWORD v33[2];
  _OWORD v34[12];
  _OWORD v35[2];

  v4 = type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
  __chkstk_darwin(v4);
  v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRIAccountsListsViewListCell.ListItem(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (_OWORD *)((char *)v32 - v11);
  v13 = sub_10002A750(&qword_100664C50);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = &v16[*(int *)(v14 + 48)];
  sub_100022A08(a1, (uint64_t)v16);
  sub_100022A08(a2, (uint64_t)v17);
  if (swift_getEnumCaseMultiPayload(v16, v7) == 1)
  {
    sub_100022A08((uint64_t)v16, (uint64_t)v10);
    if (swift_getEnumCaseMultiPayload(v17, v7) == 1)
    {
      sub_10001F580((uint64_t)v17, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
      v18 = static TTRAccountsListsViewModel.SmartList.__derived_struct_equals(_:_:)(v10, v6);
      sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
      sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
LABEL_9:
      sub_10001F544((uint64_t)v16, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
      return v18 & 1;
    }
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
  }
  else
  {
    sub_100022A08((uint64_t)v16, (uint64_t)v12);
    v19 = v12[11];
    v32[10] = v12[10];
    v32[11] = v19;
    v33[0] = v12[12];
    *(_OWORD *)((char *)v33 + 10) = *(_OWORD *)((char *)v12 + 202);
    v20 = v12[7];
    v32[6] = v12[6];
    v32[7] = v20;
    v21 = v12[9];
    v32[8] = v12[8];
    v32[9] = v21;
    v22 = v12[3];
    v32[2] = v12[2];
    v32[3] = v22;
    v23 = v12[5];
    v32[4] = v12[4];
    v32[5] = v23;
    v24 = v12[1];
    v32[0] = *v12;
    v32[1] = v24;
    if (swift_getEnumCaseMultiPayload(v17, v7) != 1)
    {
      v25 = *((_OWORD *)v17 + 11);
      v34[10] = *((_OWORD *)v17 + 10);
      v34[11] = v25;
      v35[0] = *((_OWORD *)v17 + 12);
      *(_OWORD *)((char *)v35 + 10) = *(_OWORD *)(v17 + 202);
      v26 = *((_OWORD *)v17 + 7);
      v34[6] = *((_OWORD *)v17 + 6);
      v34[7] = v26;
      v27 = *((_OWORD *)v17 + 9);
      v34[8] = *((_OWORD *)v17 + 8);
      v34[9] = v27;
      v28 = *((_OWORD *)v17 + 3);
      v34[2] = *((_OWORD *)v17 + 2);
      v34[3] = v28;
      v29 = *((_OWORD *)v17 + 5);
      v34[4] = *((_OWORD *)v17 + 4);
      v34[5] = v29;
      v30 = *((_OWORD *)v17 + 1);
      v34[0] = *(_OWORD *)v17;
      v34[1] = v30;
      v18 = static TTRAccountsListsViewModel.List.__derived_struct_equals(_:_:)(v32, v34);
      sub_100075FE8((uint64_t)v34);
      sub_100075FE8((uint64_t)v32);
      goto LABEL_9;
    }
    sub_100075FE8((uint64_t)v32);
  }
  sub_1000073A0((uint64_t)v16, &qword_100664C50);
  v18 = 0;
  return v18 & 1;
}

uint64_t sub_1004F70EC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

BOOL sub_1004F7110(uint64_t a1)
{
  uint64_t v1;

  return sub_1004F5D18(a1, v1, (void (*)(void *))sub_100068FA8);
}

BOOL sub_1004F7134(uint64_t a1)
{
  uint64_t v1;

  return sub_1004F5D18(a1, v1, (void (*)(void *))sub_100068DD0);
}

uint64_t sub_1004F7158()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004F7168()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_1004F7194()
{
  uint64_t v0;

  return sub_1004F4BF4(*(void **)(v0 + 16), *(double **)(v0 + 24));
}

uint64_t sub_1004F719C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1004F71AC()
{
  _BYTE *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;

  v1 = &v0[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listsViewListCellDelegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1, 0);
  v2 = &v0[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listItem];
  v3 = type metadata accessor for TTRIAccountsListsViewListCell.ListItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = &v0[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityEditingCustomActionName];
  *v4 = 0;
  v4[1] = 0;
  v5 = &v0[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityShareListActionName];
  *v5 = 0;
  v5[1] = 0;
  v6 = &v0[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityShareListActionSFSymbolName];
  *v6 = 0;
  v6[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_hidePredefinedSmartListGestureRecognizer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_dynamicGlyphImageCache] = 0;
  v7 = &v0[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_dynamicGlyph];
  *v7 = 0;
  v7[1] = 0;
  v0[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_checkmarkState] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010055F310, "Reminders/TTRIAccountsListsViewListCell.swift", 45, 2, 98, 0);
  __break(1u);
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.UndoRedoItemsStates(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.UndoRedoItemsStates(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1004F73B8 + 4 * byte_10053AA15[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1004F73EC + 4 * byte_10053AA10[v4]))();
}

uint64_t sub_1004F73EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1004F73F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1004F73FCLL);
  return result;
}

uint64_t sub_1004F7408(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1004F7410);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1004F7414(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1004F741C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListNavigationBarViewModel.UndoRedoItemsStates()
{
  return &type metadata for TTRIRemindersListNavigationBarViewModel.UndoRedoItemsStates;
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.CenterItemID(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1004F7484 + 4 * byte_10053AA1F[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1004F74B8 + 4 * byte_10053AA1A[v4]))();
}

uint64_t sub_1004F74B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004F74C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004F74C8);
  return result;
}

uint64_t sub_1004F74D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004F74DCLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1004F74E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004F74E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListNavigationBarViewModel.CenterItemID()
{
  return &type metadata for TTRIRemindersListNavigationBarViewModel.CenterItemID;
}

uint64_t destroy for TTRIRemindersListNavigationBarViewModel.ProcessedConfiguration(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  swift_bridgeObjectRelease(a1[3]);
  return swift_bridgeObjectRelease(a1[4]);
}

uint64_t initializeWithCopy for TTRIRemindersListNavigationBarViewModel.ProcessedConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t assignWithCopy for TTRIRemindersListNavigationBarViewModel.ProcessedConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t assignWithTake for TTRIRemindersListNavigationBarViewModel.ProcessedConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v5 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v5);
  return a1;
}

ValueMetadata *type metadata accessor for TTRIRemindersListNavigationBarViewModel.ProcessedConfiguration()
{
  return &type metadata for TTRIRemindersListNavigationBarViewModel.ProcessedConfiguration;
}

void destroy for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfoSource(uint64_t a1)
{
  sub_10004DD98(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s9Reminders39TTRIRemindersListNavigationBarViewModelO38ReminderPropertyEditingItemsInfoSourceOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10004DD38(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfoSource(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10004DD38(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_10004DD98(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfoSource(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_10004DD98(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfoSource(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3F && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 63);
  v3 = ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0x3E | (*(unsigned __int8 *)(a1 + 16) >> 7)) ^ 0x3F;
  if (v3 >= 0x3E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfoSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3E)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 63;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x3F)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x3F)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 4 * (((-a2 >> 1) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_1004F7834(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 7;
}

uint64_t sub_1004F7840(uint64_t result)
{
  *(_BYTE *)(result + 16) &= ~0x80u;
  return result;
}

uint64_t sub_1004F7850(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = *(_BYTE *)(result + 16) & 3 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfoSource()
{
  return &type metadata for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfoSource;
}

ValueMetadata *type metadata accessor for TTRIRemindersListNavigationBarViewModel()
{
  return &type metadata for TTRIRemindersListNavigationBarViewModel;
}

uint64_t *sub_1004F7884(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v40;
  void (*v41)(char *, _QWORD, uint64_t, uint64_t);
  char *__dst;
  void (**__dsta)(void *, _QWORD, uint64_t, uint64_t);
  uint64_t v44;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_10002A750(&qword_10063F570);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration.Mode(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v44 = v8;
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v11 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
      v12 = v11[5];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_10002A750(&qword_10063F568);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        *v13 = *v14;
        *(_WORD *)(v13 + 1) = *(_WORD *)(v14 + 1);
        v18 = *(int *)(v15 + 28);
        __dst = &v13[v18];
        v19 = &v14[v18];
        v20 = type metadata accessor for TTRSharedWithYouHighlight(0);
        v40 = *(_QWORD *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v19, 1, v20))
        {
          v21 = sub_10002A750(&qword_100653A10);
          memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          v22 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(__dst, v19, v22);
          v23 = *(int *)(v20 + 20);
          v24 = *(void **)&v19[v23];
          *(_QWORD *)&__dst[v23] = v24;
          v41 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56);
          v25 = v24;
          v41(__dst, 0, 1, v20);
        }
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      v26 = v11[6];
      v27 = (char *)a1 + v26;
      v28 = (char *)a2 + v26;
      v29 = type metadata accessor for TTRTemplatePublicLinkData(0);
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        v31 = sub_10002A750((uint64_t *)&unk_100653A00);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        v32 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        __dsta = *(void (***)(void *, _QWORD, uint64_t, uint64_t))(v32 - 8);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))__dsta[6])(v28, 1, v32))
        {
          v33 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          v34 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v27, v28, v34);
          v27[*(int *)(v32 + 20)] = v28[*(int *)(v32 + 20)];
          __dsta[7](v27, 0, 1, v32);
        }
        *(_QWORD *)&v27[*(int *)(v29 + 20)] = *(_QWORD *)&v28[*(int *)(v29 + 20)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v35 = v11[7];
      v36 = (char *)a1 + v35;
      v37 = (char *)a2 + v35;
      v38 = *((_QWORD *)v37 + 1);
      if (v38 == 1)
      {
        *(_OWORD *)v36 = *(_OWORD *)v37;
        v36[16] = v37[16];
      }
      else
      {
        *(_QWORD *)v36 = *(_QWORD *)v37;
        *((_QWORD *)v36 + 1) = v38;
        v36[16] = v37[16];
        swift_bridgeObjectRetain(v38);
      }
      *((_BYTE *)a1 + v11[8]) = *((_BYTE *)a2 + v11[8]);
      *((_BYTE *)a1 + v11[9]) = *((_BYTE *)a2 + v11[9]);
      *((_BYTE *)a1 + *(int *)(v7 + 48)) = *((_BYTE *)a2 + *(int *)(v7 + 48));
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v44 + 56))(a1, 0, 1, v7);
    }
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(uint64_t a1)
{
  return sub_100007328(a1, (uint64_t *)&unk_100664E68, (uint64_t)&nominal type descriptor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo);
}

uint64_t type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(uint64_t a1)
{
  return sub_100007328(a1, qword_100664DD0, (uint64_t)&nominal type descriptor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo);
}

uint64_t type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration.Mode(uint64_t a1)
{
  return sub_100007328(a1, (uint64_t *)&unk_100664D68, (uint64_t)&nominal type descriptor for TTRIRemindersListNavigationBarViewModel.Configuration.Mode);
}

_BYTE *sub_1004F7C78(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v38;
  void (*v39)(char *, _QWORD, uint64_t, uint64_t);
  char *__dst;
  void (**__dsta)(void *, _QWORD, uint64_t, uint64_t);
  uint64_t v42;

  v6 = sub_10002A750(&qword_10063F570);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration.Mode(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v42 = a3;
    *a1 = *a2;
    v9 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
    v10 = v9[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_10002A750(&qword_10063F568);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      *v11 = *v12;
      *(_WORD *)(v11 + 1) = *(_WORD *)(v12 + 1);
      v16 = *(int *)(v13 + 28);
      __dst = &v11[v16];
      v17 = &v12[v16];
      v18 = type metadata accessor for TTRSharedWithYouHighlight(0);
      v38 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v17, 1, v18))
      {
        v19 = sub_10002A750(&qword_100653A10);
        memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        v20 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(__dst, v17, v20);
        v21 = *(int *)(v18 + 20);
        v22 = *(void **)&v17[v21];
        *(_QWORD *)&__dst[v21] = v22;
        v39 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56);
        v23 = v22;
        v39(__dst, 0, 1, v18);
      }
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v24 = v9[6];
    v25 = &a1[v24];
    v26 = &a2[v24];
    v27 = type metadata accessor for TTRTemplatePublicLinkData(0);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      v29 = sub_10002A750((uint64_t *)&unk_100653A00);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v30 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      __dsta = *(void (***)(void *, _QWORD, uint64_t, uint64_t))(v30 - 8);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))__dsta[6])(v26, 1, v30))
      {
        v31 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        v32 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v25, v26, v32);
        v25[*(int *)(v30 + 20)] = v26[*(int *)(v30 + 20)];
        __dsta[7](v25, 0, 1, v30);
      }
      *(_QWORD *)&v25[*(int *)(v27 + 20)] = *(_QWORD *)&v26[*(int *)(v27 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    v33 = v9[7];
    v34 = &a1[v33];
    v35 = &a2[v33];
    v36 = *((_QWORD *)v35 + 1);
    if (v36 == 1)
    {
      *(_OWORD *)v34 = *(_OWORD *)v35;
      v34[16] = v35[16];
    }
    else
    {
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *((_QWORD *)v34 + 1) = v36;
      v34[16] = v35[16];
      swift_bridgeObjectRetain(v36);
    }
    a1[v9[8]] = a2[v9[8]];
    a1[v9[9]] = a2[v9[9]];
    a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    a3 = v42;
  }
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

_BYTE *sub_1004F8000(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_BYTE *, uint64_t, uint64_t);
  int v9;
  int v10;
  int *v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_BYTE *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  size_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 *v54;
  __n128 *v55;
  __n128 v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t, uint64_t);
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void (*v69)(uint64_t, _QWORD, uint64_t, uint64_t);
  id v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  void (*v74)(char *, _QWORD, uint64_t, uint64_t);
  id v75;
  uint64_t v76;
  _BYTE *v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(_BYTE *, uint64_t, uint64_t);
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(_BYTE *, uint64_t, uint64_t);
  int v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE *v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  void *v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(char *, _QWORD, uint64_t, uint64_t);
  char *__dst;
  char *__dsta;
  void (**__dstb)(void *, _QWORD, uint64_t, uint64_t);
  _QWORD *__dstc;
  uint64_t v117;
  uint64_t v118;

  v6 = sub_10002A750(&qword_10063F570);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      v11 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
      v12 = v11[5];
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
      v16 = *(_QWORD *)(v15 - 8);
      v117 = a3;
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_10002A750(&qword_10063F568);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        *v13 = *v14;
        v13[1] = v14[1];
        v13[2] = v14[2];
        v33 = *(int *)(v15 + 28);
        __dsta = &v13[v33];
        v34 = &v14[v33];
        v35 = type metadata accessor for TTRSharedWithYouHighlight(0);
        v111 = *(_QWORD *)(v35 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48))(v34, 1, v35))
        {
          v36 = sub_10002A750(&qword_100653A10);
          memcpy(__dsta, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          v40 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(__dsta, v34, v40);
          v41 = *(int *)(v35 + 20);
          v42 = *(void **)&v34[v41];
          *(_QWORD *)&__dsta[v41] = v42;
          v112 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v111 + 56);
          v43 = v42;
          v112(__dsta, 0, 1, v35);
        }
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      v44 = v11[6];
      v45 = &a1[v44];
      v46 = &a2[v44];
      v47 = type metadata accessor for TTRTemplatePublicLinkData(0);
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
      {
        v49 = sub_10002A750((uint64_t *)&unk_100653A00);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        v50 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        __dstb = *(void (***)(void *, _QWORD, uint64_t, uint64_t))(v50 - 8);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))__dstb[6])(v46, 1, v50))
        {
          v51 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        }
        else
        {
          v52 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v45, v46, v52);
          v45[*(int *)(v50 + 20)] = v46[*(int *)(v50 + 20)];
          __dstb[7](v45, 0, 1, v50);
        }
        *(_QWORD *)&v45[*(int *)(v47 + 20)] = *(_QWORD *)&v46[*(int *)(v47 + 20)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      }
      a3 = v117;
      v53 = v11[7];
      v54 = (__n128 *)&a1[v53];
      v55 = (__n128 *)&a2[v53];
      if (v55->n128_u64[1] == 1)
      {
        v56 = *v55;
        v54[1].n128_u8[0] = v55[1].n128_u8[0];
        *v54 = v56;
      }
      else
      {
        v54->n128_u64[0] = v55->n128_u64[0];
        v57 = v55->n128_u64[1];
        v54->n128_u64[1] = v57;
        v54[1].n128_u8[0] = v55[1].n128_u8[0];
        v56 = swift_bridgeObjectRetain(v57);
      }
      a1[v11[8]] = a2[v11[8]];
      a1[v11[9]] = a2[v11[9]];
      a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t, __n128))(v7 + 56))(a1, 0, 1, v6, v56);
      goto LABEL_63;
    }
LABEL_7:
    v18 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration.Mode(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_63;
  }
  if (v10)
  {
    sub_1000073A0((uint64_t)a1, &qword_10063F570);
    goto LABEL_7;
  }
  v118 = a3;
  *a1 = *a2;
  v19 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
  v20 = v19[5];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      *v21 = *v22;
      v21[1] = v22[1];
      v21[2] = v22[2];
      v58 = *(int *)(v23 + 28);
      v59 = (uint64_t)&v21[v58];
      v60 = &v22[v58];
      v61 = type metadata accessor for TTRSharedWithYouHighlight(0);
      v62 = *(_QWORD *)(v61 - 8);
      v63 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
      v64 = v63(v59, 1, v61);
      v65 = v63((uint64_t)v60, 1, v61);
      if (v64)
      {
        if (!v65)
        {
          v66 = type metadata accessor for URL(0);
          (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v59, v60, v66);
          v67 = *(int *)(v61 + 20);
          v68 = *(void **)&v60[v67];
          *(_QWORD *)(v59 + v67) = v68;
          v69 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v62 + 56);
          v70 = v68;
          v69(v59, 0, 1, v61);
          goto LABEL_35;
        }
      }
      else
      {
        if (!v65)
        {
          v105 = type metadata accessor for URL(0);
          (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v105 - 8) + 24))(v59, v60, v105);
          v106 = *(int *)(v61 + 20);
          v107 = *(void **)&v60[v106];
          v108 = *(void **)(v59 + v106);
          *(_QWORD *)(v59 + v106) = v107;
          v109 = v107;

          goto LABEL_35;
        }
        sub_10001F544(v59, (uint64_t (*)(_QWORD))&type metadata accessor for TTRSharedWithYouHighlight);
      }
      v37 = *(_QWORD *)(*(_QWORD *)(sub_10002A750(&qword_100653A10) - 8) + 64);
      v38 = (void *)v59;
      v39 = v60;
LABEL_17:
      memcpy(v38, v39, v37);
      goto LABEL_35;
    }
    sub_10001F544((uint64_t)v21, type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo);
LABEL_16:
    v37 = *(_QWORD *)(*(_QWORD *)(sub_10002A750(&qword_10063F568) - 8) + 64);
    v38 = v21;
    v39 = v22;
    goto LABEL_17;
  }
  if (v27)
    goto LABEL_16;
  *v21 = *v22;
  v21[1] = v22[1];
  v21[2] = v22[2];
  v28 = *(int *)(v23 + 28);
  __dst = &v21[v28];
  v29 = &v22[v28];
  v30 = type metadata accessor for TTRSharedWithYouHighlight(0);
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    v32 = sub_10002A750(&qword_100653A10);
    memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    v71 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(__dst, v29, v71);
    v72 = *(int *)(v30 + 20);
    v73 = *(void **)&v29[v72];
    *(_QWORD *)&__dst[v72] = v73;
    v74 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56);
    v75 = v73;
    v74(__dst, 0, 1, v30);
  }
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_35:
  v76 = v19[6];
  v77 = &a1[v76];
  v78 = &a2[v76];
  v79 = type metadata accessor for TTRTemplatePublicLinkData(0);
  v80 = *(_QWORD *)(v79 - 8);
  v81 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v80 + 48);
  v82 = v81(v77, 1, v79);
  v83 = v81(v78, 1, v79);
  if (!v82)
  {
    if (v83)
    {
      sub_10001F544((uint64_t)v77, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
      goto LABEL_41;
    }
    v88 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
    __dstc = *(_QWORD **)(v88 - 8);
    v89 = (uint64_t (*)(_BYTE *, uint64_t, uint64_t))__dstc[6];
    v90 = v89(v77, 1, v88);
    v91 = v89(v78, 1, v88);
    if (v90)
    {
      if (!v91)
      {
        v92 = type metadata accessor for Date(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(v77, v78, v92);
        v77[*(int *)(v88 + 20)] = v78[*(int *)(v88 + 20)];
        ((void (*)(_BYTE *, _QWORD, uint64_t, uint64_t))__dstc[7])(v77, 0, 1, v88);
LABEL_53:
        a3 = v118;
        *(_QWORD *)&v77[*(int *)(v79 + 20)] = *(_QWORD *)&v78[*(int *)(v79 + 20)];
        goto LABEL_54;
      }
    }
    else
    {
      if (!v91)
      {
        v110 = type metadata accessor for Date(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v110 - 8) + 24))(v77, v78, v110);
        v77[*(int *)(v88 + 20)] = v78[*(int *)(v88 + 20)];
        goto LABEL_53;
      }
      sub_10001F544((uint64_t)v77, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription);
    }
    v94 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
    goto LABEL_53;
  }
  if (v83)
  {
LABEL_41:
    v87 = sub_10002A750((uint64_t *)&unk_100653A00);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    a3 = v118;
    goto LABEL_54;
  }
  v84 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
  v85 = *(_QWORD *)(v84 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v85 + 48))(v78, 1, v84))
  {
    v86 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
  }
  else
  {
    v93 = type metadata accessor for Date(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v77, v78, v93);
    v77[*(int *)(v84 + 20)] = v78[*(int *)(v84 + 20)];
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v77, 0, 1, v84);
  }
  a3 = v118;
  *(_QWORD *)&v77[*(int *)(v79 + 20)] = *(_QWORD *)&v78[*(int *)(v79 + 20)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
LABEL_54:
  v95 = v19[7];
  v96 = (uint64_t)&a1[v95];
  v97 = &a2[v95];
  v98 = *(_QWORD *)&a1[v95 + 8];
  v99 = *(_QWORD *)&a2[v95 + 8];
  if (v98 == 1)
  {
    if (v99 == 1)
    {
      v100 = *(_OWORD *)v97;
      *(_BYTE *)(v96 + 16) = v97[16];
      *(_OWORD *)v96 = v100;
    }
    else
    {
      *(_QWORD *)v96 = *(_QWORD *)v97;
      v102 = *((_QWORD *)v97 + 1);
      *(_QWORD *)(v96 + 8) = v102;
      *(_BYTE *)(v96 + 16) = v97[16];
      swift_bridgeObjectRetain(v102);
    }
  }
  else
  {
    if (v99 == 1)
    {
      sub_1004F895C(v96);
      v101 = v97[16];
      *(_OWORD *)v96 = *(_OWORD *)v97;
    }
    else
    {
      *(_QWORD *)v96 = *(_QWORD *)v97;
      v103 = *((_QWORD *)v97 + 1);
      *(_QWORD *)(v96 + 8) = v103;
      swift_bridgeObjectRetain(v103);
      swift_bridgeObjectRelease(v98);
      v101 = v97[16];
    }
    *(_BYTE *)(v96 + 16) = v101;
  }
  a1[v19[8]] = a2[v19[8]];
  a1[v19[9]] = a2[v19[9]];
  a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
LABEL_63:
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t sub_1004F895C(uint64_t a1)
{
  destroy for TTRRemindersListNavigationItemOptions(a1);
  return a1;
}

_BYTE *sub_1004F8990(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v34;
  char *__dst;
  void (**__dsta)(void *, _QWORD, uint64_t, uint64_t);
  uint64_t v37;

  v6 = sub_10002A750(&qword_10063F570);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration.Mode(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v37 = a3;
    *a1 = *a2;
    v9 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
    v10 = v9[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_10002A750(&qword_10063F568);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      *v11 = *v12;
      *(_WORD *)(v11 + 1) = *(_WORD *)(v12 + 1);
      v16 = *(int *)(v13 + 28);
      __dst = &v11[v16];
      v17 = &v12[v16];
      v18 = type metadata accessor for TTRSharedWithYouHighlight(0);
      v34 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v17, 1, v18))
      {
        v19 = sub_10002A750(&qword_100653A10);
        memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        v20 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(__dst, v17, v20);
        *(_QWORD *)&__dst[*(int *)(v18 + 20)] = *(_QWORD *)&v17[*(int *)(v18 + 20)];
        (*(void (**)(void))(v34 + 56))();
      }
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v21 = v9[6];
    v22 = &a1[v21];
    v23 = &a2[v21];
    v24 = type metadata accessor for TTRTemplatePublicLinkData(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      v26 = sub_10002A750((uint64_t *)&unk_100653A00);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v27 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      __dsta = *(void (***)(void *, _QWORD, uint64_t, uint64_t))(v27 - 8);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))__dsta[6])(v23, 1, v27))
      {
        v28 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        v29 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v22, v23, v29);
        v22[*(int *)(v27 + 20)] = v23[*(int *)(v27 + 20)];
        __dsta[7](v22, 0, 1, v27);
      }
      *(_QWORD *)&v22[*(int *)(v24 + 20)] = *(_QWORD *)&v23[*(int *)(v24 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    v30 = v9[7];
    v31 = &a1[v30];
    v32 = &a2[v30];
    *(_OWORD *)v31 = *(_OWORD *)v32;
    v31[16] = v32[16];
    a1[v9[8]] = a2[v9[8]];
    a1[v9[9]] = a2[v9[9]];
    a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    a3 = v37;
  }
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

_BYTE *sub_1004F8CE4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_BYTE *, uint64_t, uint64_t);
  int v9;
  int v10;
  int *v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  size_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t);
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(char *, uint64_t, uint64_t);
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(char *, uint64_t, uint64_t);
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  char *__dst;
  char *__dsta;
  void (**__dstb)(void *, _QWORD, uint64_t, uint64_t);
  _QWORD *__dstc;
  uint64_t v97;
  uint64_t v98;

  v6 = sub_10002A750(&qword_10063F570);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1000073A0((uint64_t)a1, &qword_10063F570);
      goto LABEL_7;
    }
    v98 = a3;
    *a1 = *a2;
    v19 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
    v20 = v19[5];
    v21 = (uint64_t)&a1[v20];
    v22 = &a2[v20];
    v23 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
    v26 = v25(v21, 1, v23);
    v27 = v25((uint64_t)v22, 1, v23);
    if (v26)
    {
      if (!v27)
      {
        *(_BYTE *)v21 = *v22;
        *(_WORD *)(v21 + 1) = *(_WORD *)(v22 + 1);
        v28 = *(int *)(v23 + 28);
        __dst = (char *)(v21 + v28);
        v29 = &v22[v28];
        v30 = type metadata accessor for TTRSharedWithYouHighlight(0);
        v31 = *(_QWORD *)(v30 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
        {
          v32 = sub_10002A750(&qword_100653A10);
          memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          v62 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(__dst, v29, v62);
          *(_QWORD *)&__dst[*(int *)(v30 + 20)] = *(_QWORD *)&v29[*(int *)(v30 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
        }
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_32:
        v63 = v19[6];
        v64 = &a1[v63];
        v65 = &a2[v63];
        v66 = type metadata accessor for TTRTemplatePublicLinkData(0);
        v67 = *(_QWORD *)(v66 - 8);
        v68 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v67 + 48);
        v69 = v68(v64, 1, v66);
        v70 = v68(v65, 1, v66);
        if (v69)
        {
          if (!v70)
          {
            v71 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
            v72 = *(_QWORD *)(v71 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v65, 1, v71))
            {
              v73 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
              memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
            }
            else
            {
              v80 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v64, v65, v80);
              v64[*(int *)(v71 + 20)] = v65[*(int *)(v71 + 20)];
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v64, 0, 1, v71);
            }
            a3 = v98;
            *(_QWORD *)&v64[*(int *)(v66 + 20)] = *(_QWORD *)&v65[*(int *)(v66 + 20)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
LABEL_51:
            v82 = v19[7];
            v83 = (uint64_t)&a1[v82];
            v84 = &a2[v82];
            v85 = *(_QWORD *)&a1[v82 + 8];
            if (v85 != 1)
            {
              v86 = *((_QWORD *)v84 + 1);
              if (v86 != 1)
              {
                *(_QWORD *)v83 = *(_QWORD *)v84;
                *(_QWORD *)(v83 + 8) = v86;
                swift_bridgeObjectRelease(v85);
                goto LABEL_56;
              }
              sub_1004F895C(v83);
            }
            *(_OWORD *)v83 = *(_OWORD *)v84;
LABEL_56:
            *(_BYTE *)(v83 + 16) = v84[16];
            a1[v19[8]] = a2[v19[8]];
            a1[v19[9]] = a2[v19[9]];
            a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
            goto LABEL_57;
          }
LABEL_38:
          v74 = sub_10002A750((uint64_t *)&unk_100653A00);
          memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
          a3 = v98;
          goto LABEL_51;
        }
        if (v70)
        {
          sub_10001F544((uint64_t)v64, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
          goto LABEL_38;
        }
        v75 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        __dstc = *(_QWORD **)(v75 - 8);
        v76 = (uint64_t (*)(char *, uint64_t, uint64_t))__dstc[6];
        v77 = v76(v64, 1, v75);
        v78 = v76(v65, 1, v75);
        if (v77)
        {
          if (!v78)
          {
            v79 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v64, v65, v79);
            v64[*(int *)(v75 + 20)] = v65[*(int *)(v75 + 20)];
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstc[7])(v64, 0, 1, v75);
LABEL_50:
            a3 = v98;
            *(_QWORD *)&v64[*(int *)(v66 + 20)] = *(_QWORD *)&v65[*(int *)(v66 + 20)];
            goto LABEL_51;
          }
        }
        else
        {
          if (!v78)
          {
            v91 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 40))(v64, v65, v91);
            v64[*(int *)(v75 + 20)] = v65[*(int *)(v75 + 20)];
            goto LABEL_50;
          }
          sub_10001F544((uint64_t)v64, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription);
        }
        v81 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
        goto LABEL_50;
      }
    }
    else
    {
      if (!v27)
      {
        *(_BYTE *)v21 = *v22;
        *(_BYTE *)(v21 + 1) = v22[1];
        *(_BYTE *)(v21 + 2) = v22[2];
        v53 = *(int *)(v23 + 28);
        v54 = v21 + v53;
        v55 = &v22[v53];
        v56 = type metadata accessor for TTRSharedWithYouHighlight(0);
        v57 = *(_QWORD *)(v56 - 8);
        v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
        v59 = v58(v54, 1, v56);
        v60 = v58((uint64_t)v55, 1, v56);
        if (v59)
        {
          if (!v60)
          {
            v61 = type metadata accessor for URL(0);
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v54, v55, v61);
            *(_QWORD *)(v54 + *(int *)(v56 + 20)) = *(_QWORD *)&v55[*(int *)(v56 + 20)];
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
            goto LABEL_32;
          }
        }
        else
        {
          if (!v60)
          {
            v88 = type metadata accessor for URL(0);
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 40))(v54, v55, v88);
            v89 = *(int *)(v56 + 20);
            v90 = *(void **)(v54 + v89);
            *(_QWORD *)(v54 + v89) = *(_QWORD *)&v55[v89];

            goto LABEL_32;
          }
          sub_10001F544(v54, (uint64_t (*)(_QWORD))&type metadata accessor for TTRSharedWithYouHighlight);
        }
        v37 = *(_QWORD *)(*(_QWORD *)(sub_10002A750(&qword_100653A10) - 8) + 64);
        v38 = (void *)v54;
        v39 = v55;
LABEL_17:
        memcpy(v38, v39, v37);
        goto LABEL_32;
      }
      sub_10001F544(v21, type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo);
    }
    v37 = *(_QWORD *)(*(_QWORD *)(sub_10002A750(&qword_10063F568) - 8) + 64);
    v38 = (void *)v21;
    v39 = v22;
    goto LABEL_17;
  }
  if (v10)
  {
LABEL_7:
    v18 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration.Mode(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_57;
  }
  *a1 = *a2;
  v11 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
  v12 = v11[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
  v16 = *(_QWORD *)(v15 - 8);
  v97 = a3;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_10002A750(&qword_10063F568);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    *(_WORD *)(v13 + 1) = *(_WORD *)(v14 + 1);
    v33 = *(int *)(v15 + 28);
    __dsta = &v13[v33];
    v34 = &v14[v33];
    v35 = type metadata accessor for TTRSharedWithYouHighlight(0);
    v92 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v34, 1, v35))
    {
      v36 = sub_10002A750(&qword_100653A10);
      memcpy(__dsta, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      v40 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(__dsta, v34, v40);
      *(_QWORD *)&__dsta[*(int *)(v35 + 20)] = *(_QWORD *)&v34[*(int *)(v35 + 20)];
      (*(void (**)(void))(v92 + 56))();
    }
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v41 = v11[6];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v44 = type metadata accessor for TTRTemplatePublicLinkData(0);
  v45 = *(_QWORD *)(v44 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    v46 = sub_10002A750((uint64_t *)&unk_100653A00);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    v47 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
    __dstb = *(void (***)(void *, _QWORD, uint64_t, uint64_t))(v47 - 8);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))__dstb[6])(v43, 1, v47))
    {
      v48 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      v49 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v42, v43, v49);
      v42[*(int *)(v47 + 20)] = v43[*(int *)(v47 + 20)];
      __dstb[7](v42, 0, 1, v47);
    }
    *(_QWORD *)&v42[*(int *)(v44 + 20)] = *(_QWORD *)&v43[*(int *)(v44 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  a3 = v97;
  v50 = v11[7];
  v51 = &a1[v50];
  v52 = &a2[v50];
  *(_OWORD *)v51 = *(_OWORD *)v52;
  v51[16] = v52[16];
  a1[v11[8]] = a2[v11[8]];
  a1[v11[9]] = a2[v11[9]];
  a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_57:
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t sub_1004F959C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004F95A8);
}

uint64_t sub_1004F95A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration.Mode(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return v9 - 1;
  else
    return 0;
}

uint64_t sub_1004F9620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004F962C);
}

uint64_t sub_1004F962C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration.Mode(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration(uint64_t a1)
{
  return sub_100007328(a1, qword_100664CC0, (uint64_t)&nominal type descriptor for TTRIRemindersListNavigationBarViewModel.Configuration);
}

uint64_t sub_1004F96B8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration.Mode(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10053AB08;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_1004F9728(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v39;
  void (*v40)(char *, _QWORD, uint64_t, uint64_t);
  char *__dst;
  void (**__dsta)(void *, _QWORD, uint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_10002A750(&qword_10063F570);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v10 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
      v11 = v10[5];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        v16 = sub_10002A750(&qword_10063F568);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        *v12 = *v13;
        *(_WORD *)(v12 + 1) = *(_WORD *)(v13 + 1);
        v17 = *(int *)(v14 + 28);
        __dst = &v12[v17];
        v18 = &v13[v17];
        v19 = type metadata accessor for TTRSharedWithYouHighlight(0);
        v39 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v18, 1, v19))
        {
          v20 = sub_10002A750(&qword_100653A10);
          memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          v21 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(__dst, v18, v21);
          v22 = *(int *)(v19 + 20);
          v23 = *(void **)&v18[v22];
          *(_QWORD *)&__dst[v22] = v23;
          v40 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56);
          v24 = v23;
          v40(__dst, 0, 1, v19);
        }
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      v25 = v10[6];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = type metadata accessor for TTRTemplatePublicLinkData(0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        v30 = sub_10002A750((uint64_t *)&unk_100653A00);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        v31 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        __dsta = *(void (***)(void *, _QWORD, uint64_t, uint64_t))(v31 - 8);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))__dsta[6])(v27, 1, v31))
        {
          v32 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          v33 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v26, v27, v33);
          v26[*(int *)(v31 + 20)] = v27[*(int *)(v31 + 20)];
          __dsta[7](v26, 0, 1, v31);
        }
        *(_QWORD *)&v26[*(int *)(v28 + 20)] = *(_QWORD *)&v27[*(int *)(v28 + 20)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      v34 = v10[7];
      v35 = (char *)a1 + v34;
      v36 = (char *)a2 + v34;
      v37 = *((_QWORD *)v36 + 1);
      if (v37 == 1)
      {
        *(_OWORD *)v35 = *(_OWORD *)v36;
        v35[16] = v36[16];
      }
      else
      {
        *(_QWORD *)v35 = *(_QWORD *)v36;
        *((_QWORD *)v35 + 1) = v37;
        v35[16] = v36[16];
        swift_bridgeObjectRetain(v37);
      }
      *((_BYTE *)a1 + v10[8]) = *((_BYTE *)a2 + v10[8]);
      *((_BYTE *)a1 + v10[9]) = *((_BYTE *)a2 + v10[9]);
      *((_BYTE *)a1 + *(int *)(v7 + 48)) = *((_BYTE *)a2 + *(int *)(v7 + 48));
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

double sub_1004F9AB8(uint64_t a1)
{
  uint64_t v2;
  double result;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = sub_10002A750(&qword_10063F570);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2))
  {
    v4 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
    v5 = a1 + v4[5];
    v6 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
    {
      v7 = v5 + *(int *)(v6 + 28);
      v8 = type metadata accessor for TTRSharedWithYouHighlight(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
      {
        v9 = type metadata accessor for URL(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);

      }
    }
    v10 = a1 + v4[6];
    v11 = type metadata accessor for TTRTemplatePublicLinkData(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
    {
      v12 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v10, 1, v12))
      {
        v13 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v10, v13);
      }
    }
    v14 = *(_QWORD *)(a1 + v4[7] + 8);
    if (v14 != 1)
      *(_QWORD *)&result = swift_bridgeObjectRelease(v14).n128_u64[0];
  }
  return result;
}

_BYTE *sub_1004F9C28(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v37;
  void (*v38)(char *, _QWORD, uint64_t, uint64_t);
  char *__dst;
  void (**__dsta)(void *, _QWORD, uint64_t, uint64_t);

  v6 = sub_10002A750(&qword_10063F570);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v8 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
    v9 = v8[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_10002A750(&qword_10063F568);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      *v10 = *v11;
      *(_WORD *)(v10 + 1) = *(_WORD *)(v11 + 1);
      v15 = *(int *)(v12 + 28);
      __dst = &v10[v15];
      v16 = &v11[v15];
      v17 = type metadata accessor for TTRSharedWithYouHighlight(0);
      v37 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v16, 1, v17))
      {
        v18 = sub_10002A750(&qword_100653A10);
        memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        v19 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(__dst, v16, v19);
        v20 = *(int *)(v17 + 20);
        v21 = *(void **)&v16[v20];
        *(_QWORD *)&__dst[v20] = v21;
        v38 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56);
        v22 = v21;
        v38(__dst, 0, 1, v17);
      }
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v23 = v8[6];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = type metadata accessor for TTRTemplatePublicLinkData(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = sub_10002A750((uint64_t *)&unk_100653A00);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v29 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      __dsta = *(void (***)(void *, _QWORD, uint64_t, uint64_t))(v29 - 8);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))__dsta[6])(v25, 1, v29))
      {
        v30 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        v31 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v24, v25, v31);
        v24[*(int *)(v29 + 20)] = v25[*(int *)(v29 + 20)];
        __dsta[7](v24, 0, 1, v29);
      }
      *(_QWORD *)&v24[*(int *)(v26 + 20)] = *(_QWORD *)&v25[*(int *)(v26 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v32 = v8[7];
    v33 = &a1[v32];
    v34 = &a2[v32];
    v35 = *((_QWORD *)v34 + 1);
    if (v35 == 1)
    {
      *(_OWORD *)v33 = *(_OWORD *)v34;
      v33[16] = v34[16];
    }
    else
    {
      *(_QWORD *)v33 = *(_QWORD *)v34;
      *((_QWORD *)v33 + 1) = v35;
      v33[16] = v34[16];
      swift_bridgeObjectRetain(v35);
    }
    a1[v8[8]] = a2[v8[8]];
    a1[v8[9]] = a2[v8[9]];
    a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

_BYTE *sub_1004F9F94(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_BYTE *, uint64_t, uint64_t);
  int v9;
  int v10;
  int *v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(_BYTE *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  size_t v36;
  void *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 *v53;
  __n128 *v54;
  __n128 v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t);
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void (*v68)(uint64_t, _QWORD, uint64_t, uint64_t);
  id v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  void (*v73)(char *, _QWORD, uint64_t, uint64_t);
  id v74;
  uint64_t v75;
  _BYTE *v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(_BYTE *, uint64_t, uint64_t);
  int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(_BYTE *, uint64_t, uint64_t);
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  void *v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(char *, _QWORD, uint64_t, uint64_t);
  char *__dst;
  char *__dsta;
  void (**__dstb)(void *, _QWORD, uint64_t, uint64_t);
  _QWORD *__dstc;

  v6 = sub_10002A750(&qword_10063F570);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      v11 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
      v12 = v11[5];
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_10002A750(&qword_10063F568);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        *v13 = *v14;
        v13[1] = v14[1];
        v13[2] = v14[2];
        v32 = *(int *)(v15 + 28);
        __dsta = &v13[v32];
        v33 = &v14[v32];
        v34 = type metadata accessor for TTRSharedWithYouHighlight(0);
        v110 = *(_QWORD *)(v34 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48))(v33, 1, v34))
        {
          v35 = sub_10002A750(&qword_100653A10);
          memcpy(__dsta, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          v39 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(__dsta, v33, v39);
          v40 = *(int *)(v34 + 20);
          v41 = *(void **)&v33[v40];
          *(_QWORD *)&__dsta[v40] = v41;
          v111 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56);
          v42 = v41;
          v111(__dsta, 0, 1, v34);
        }
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      v43 = v11[6];
      v44 = &a1[v43];
      v45 = &a2[v43];
      v46 = type metadata accessor for TTRTemplatePublicLinkData(0);
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        v48 = sub_10002A750((uint64_t *)&unk_100653A00);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        v49 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        __dstb = *(void (***)(void *, _QWORD, uint64_t, uint64_t))(v49 - 8);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))__dstb[6])(v45, 1, v49))
        {
          v50 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        }
        else
        {
          v51 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v44, v45, v51);
          v44[*(int *)(v49 + 20)] = v45[*(int *)(v49 + 20)];
          __dstb[7](v44, 0, 1, v49);
        }
        *(_QWORD *)&v44[*(int *)(v46 + 20)] = *(_QWORD *)&v45[*(int *)(v46 + 20)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      v52 = v11[7];
      v53 = (__n128 *)&a1[v52];
      v54 = (__n128 *)&a2[v52];
      if (v54->n128_u64[1] == 1)
      {
        v55 = *v54;
        v53[1].n128_u8[0] = v54[1].n128_u8[0];
        *v53 = v55;
      }
      else
      {
        v53->n128_u64[0] = v54->n128_u64[0];
        v56 = v54->n128_u64[1];
        v53->n128_u64[1] = v56;
        v53[1].n128_u8[0] = v54[1].n128_u8[0];
        v55 = swift_bridgeObjectRetain(v56);
      }
      a1[v11[8]] = a2[v11[8]];
      a1[v11[9]] = a2[v11[9]];
      a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t, __n128))(v7 + 56))(a1, 0, 1, v6, v55);
      return a1;
    }
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  if (v10)
  {
    sub_1000073A0((uint64_t)a1, &qword_10063F570);
    goto LABEL_7;
  }
  *a1 = *a2;
  v18 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
  v19 = v18[5];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      *v20 = *v21;
      v20[1] = v21[1];
      v20[2] = v21[2];
      v57 = *(int *)(v22 + 28);
      v58 = (uint64_t)&v20[v57];
      v59 = &v21[v57];
      v60 = type metadata accessor for TTRSharedWithYouHighlight(0);
      v61 = *(_QWORD *)(v60 - 8);
      v62 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
      v63 = v62(v58, 1, v60);
      v64 = v62((uint64_t)v59, 1, v60);
      if (v63)
      {
        if (!v64)
        {
          v65 = type metadata accessor for URL(0);
          (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v58, v59, v65);
          v66 = *(int *)(v60 + 20);
          v67 = *(void **)&v59[v66];
          *(_QWORD *)(v58 + v66) = v67;
          v68 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v61 + 56);
          v69 = v67;
          v68(v58, 0, 1, v60);
          goto LABEL_35;
        }
      }
      else
      {
        if (!v64)
        {
          v104 = type metadata accessor for URL(0);
          (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v104 - 8) + 24))(v58, v59, v104);
          v105 = *(int *)(v60 + 20);
          v106 = *(void **)&v59[v105];
          v107 = *(void **)(v58 + v105);
          *(_QWORD *)(v58 + v105) = v106;
          v108 = v106;

          goto LABEL_35;
        }
        sub_10001F544(v58, (uint64_t (*)(_QWORD))&type metadata accessor for TTRSharedWithYouHighlight);
      }
      v36 = *(_QWORD *)(*(_QWORD *)(sub_10002A750(&qword_100653A10) - 8) + 64);
      v37 = (void *)v58;
      v38 = v59;
LABEL_17:
      memcpy(v37, v38, v36);
      goto LABEL_35;
    }
    sub_10001F544((uint64_t)v20, type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo);
LABEL_16:
    v36 = *(_QWORD *)(*(_QWORD *)(sub_10002A750(&qword_10063F568) - 8) + 64);
    v37 = v20;
    v38 = v21;
    goto LABEL_17;
  }
  if (v26)
    goto LABEL_16;
  *v20 = *v21;
  v20[1] = v21[1];
  v20[2] = v21[2];
  v27 = *(int *)(v22 + 28);
  __dst = &v20[v27];
  v28 = &v21[v27];
  v29 = type metadata accessor for TTRSharedWithYouHighlight(0);
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    v31 = sub_10002A750(&qword_100653A10);
    memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v70 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(__dst, v28, v70);
    v71 = *(int *)(v29 + 20);
    v72 = *(void **)&v28[v71];
    *(_QWORD *)&__dst[v71] = v72;
    v73 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56);
    v74 = v72;
    v73(__dst, 0, 1, v29);
  }
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_35:
  v75 = v18[6];
  v76 = &a1[v75];
  v77 = &a2[v75];
  v78 = type metadata accessor for TTRTemplatePublicLinkData(0);
  v79 = *(_QWORD *)(v78 - 8);
  v80 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v79 + 48);
  v81 = v80(v76, 1, v78);
  v82 = v80(v77, 1, v78);
  if (!v81)
  {
    if (v82)
    {
      sub_10001F544((uint64_t)v76, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
      goto LABEL_41;
    }
    v87 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
    __dstc = *(_QWORD **)(v87 - 8);
    v88 = (uint64_t (*)(_BYTE *, uint64_t, uint64_t))__dstc[6];
    v89 = v88(v76, 1, v87);
    v90 = v88(v77, 1, v87);
    if (v89)
    {
      if (!v90)
      {
        v91 = type metadata accessor for Date(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(v76, v77, v91);
        v76[*(int *)(v87 + 20)] = v77[*(int *)(v87 + 20)];
        ((void (*)(_BYTE *, _QWORD, uint64_t, uint64_t))__dstc[7])(v76, 0, 1, v87);
LABEL_53:
        *(_QWORD *)&v76[*(int *)(v78 + 20)] = *(_QWORD *)&v77[*(int *)(v78 + 20)];
        goto LABEL_54;
      }
    }
    else
    {
      if (!v90)
      {
        v109 = type metadata accessor for Date(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v109 - 8) + 24))(v76, v77, v109);
        v76[*(int *)(v87 + 20)] = v77[*(int *)(v87 + 20)];
        goto LABEL_53;
      }
      sub_10001F544((uint64_t)v76, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription);
    }
    v93 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    goto LABEL_53;
  }
  if (v82)
  {
LABEL_41:
    v86 = sub_10002A750((uint64_t *)&unk_100653A00);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    goto LABEL_54;
  }
  v83 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
  v84 = *(_QWORD *)(v83 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v84 + 48))(v77, 1, v83))
  {
    v85 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
  }
  else
  {
    v92 = type metadata accessor for Date(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(v76, v77, v92);
    v76[*(int *)(v83 + 20)] = v77[*(int *)(v83 + 20)];
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v76, 0, 1, v83);
  }
  *(_QWORD *)&v76[*(int *)(v78 + 20)] = *(_QWORD *)&v77[*(int *)(v78 + 20)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
LABEL_54:
  v94 = v18[7];
  v95 = (uint64_t)&a1[v94];
  v96 = &a2[v94];
  v97 = *(_QWORD *)&a1[v94 + 8];
  v98 = *(_QWORD *)&a2[v94 + 8];
  if (v97 == 1)
  {
    if (v98 == 1)
    {
      v99 = *(_OWORD *)v96;
      *(_BYTE *)(v95 + 16) = v96[16];
      *(_OWORD *)v95 = v99;
    }
    else
    {
      *(_QWORD *)v95 = *(_QWORD *)v96;
      v101 = *((_QWORD *)v96 + 1);
      *(_QWORD *)(v95 + 8) = v101;
      *(_BYTE *)(v95 + 16) = v96[16];
      swift_bridgeObjectRetain(v101);
    }
  }
  else
  {
    if (v98 == 1)
    {
      sub_1004F895C(v95);
      v100 = v96[16];
      *(_OWORD *)v95 = *(_OWORD *)v96;
    }
    else
    {
      *(_QWORD *)v95 = *(_QWORD *)v96;
      v102 = *((_QWORD *)v96 + 1);
      *(_QWORD *)(v95 + 8) = v102;
      swift_bridgeObjectRetain(v102);
      swift_bridgeObjectRelease(v97);
      v100 = v96[16];
    }
    *(_BYTE *)(v95 + 16) = v100;
  }
  a1[v18[8]] = a2[v18[8]];
  a1[v18[9]] = a2[v18[9]];
  a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
  return a1;
}

_BYTE *sub_1004FA8C4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v33;
  char *__dst;
  void (**__dsta)(void *, _QWORD, uint64_t, uint64_t);

  v6 = sub_10002A750(&qword_10063F570);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v8 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
    v9 = v8[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_10002A750(&qword_10063F568);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      *v10 = *v11;
      *(_WORD *)(v10 + 1) = *(_WORD *)(v11 + 1);
      v15 = *(int *)(v12 + 28);
      __dst = &v10[v15];
      v16 = &v11[v15];
      v17 = type metadata accessor for TTRSharedWithYouHighlight(0);
      v33 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v16, 1, v17))
      {
        v18 = sub_10002A750(&qword_100653A10);
        memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        v19 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(__dst, v16, v19);
        *(_QWORD *)&__dst[*(int *)(v17 + 20)] = *(_QWORD *)&v16[*(int *)(v17 + 20)];
        (*(void (**)(void))(v33 + 56))();
      }
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v20 = v8[6];
    v21 = &a1[v20];
    v22 = &a2[v20];
    v23 = type metadata accessor for TTRTemplatePublicLinkData(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = sub_10002A750((uint64_t *)&unk_100653A00);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v26 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      __dsta = *(void (***)(void *, _QWORD, uint64_t, uint64_t))(v26 - 8);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))__dsta[6])(v22, 1, v26))
      {
        v27 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        v28 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v21, v22, v28);
        v21[*(int *)(v26 + 20)] = v22[*(int *)(v26 + 20)];
        __dsta[7](v21, 0, 1, v26);
      }
      *(_QWORD *)&v21[*(int *)(v23 + 20)] = *(_QWORD *)&v22[*(int *)(v23 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    v29 = v8[7];
    v30 = &a1[v29];
    v31 = &a2[v29];
    *(_OWORD *)v30 = *(_OWORD *)v31;
    v30[16] = v31[16];
    a1[v8[8]] = a2[v8[8]];
    a1[v8[9]] = a2[v8[9]];
    a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

_BYTE *sub_1004FABFC(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_BYTE *, uint64_t, uint64_t);
  int v9;
  int v10;
  int *v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  size_t v36;
  void *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t);
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(char *, uint64_t, uint64_t);
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(char *, uint64_t, uint64_t);
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  char *__dst;
  char *__dsta;
  void (**__dstb)(void *, _QWORD, uint64_t, uint64_t);
  _QWORD *__dstc;

  v6 = sub_10002A750(&qword_10063F570);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1000073A0((uint64_t)a1, &qword_10063F570);
      goto LABEL_7;
    }
    *a1 = *a2;
    v18 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
    v19 = v18[5];
    v20 = (uint64_t)&a1[v19];
    v21 = &a2[v19];
    v22 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
    v25 = v24(v20, 1, v22);
    v26 = v24((uint64_t)v21, 1, v22);
    if (v25)
    {
      if (!v26)
      {
        *(_BYTE *)v20 = *v21;
        *(_WORD *)(v20 + 1) = *(_WORD *)(v21 + 1);
        v27 = *(int *)(v22 + 28);
        __dst = (char *)(v20 + v27);
        v28 = &v21[v27];
        v29 = type metadata accessor for TTRSharedWithYouHighlight(0);
        v30 = *(_QWORD *)(v29 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          v31 = sub_10002A750(&qword_100653A10);
          memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          v61 = type metadata accessor for URL(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(__dst, v28, v61);
          *(_QWORD *)&__dst[*(int *)(v29 + 20)] = *(_QWORD *)&v28[*(int *)(v29 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v29);
        }
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_32:
        v62 = v18[6];
        v63 = &a1[v62];
        v64 = &a2[v62];
        v65 = type metadata accessor for TTRTemplatePublicLinkData(0);
        v66 = *(_QWORD *)(v65 - 8);
        v67 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48);
        v68 = v67(v63, 1, v65);
        v69 = v67(v64, 1, v65);
        if (v68)
        {
          if (!v69)
          {
            v70 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
            v71 = *(_QWORD *)(v70 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v64, 1, v70))
            {
              v72 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
              memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
            }
            else
            {
              v79 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v63, v64, v79);
              v63[*(int *)(v70 + 20)] = v64[*(int *)(v70 + 20)];
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v63, 0, 1, v70);
            }
            *(_QWORD *)&v63[*(int *)(v65 + 20)] = *(_QWORD *)&v64[*(int *)(v65 + 20)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
LABEL_51:
            v81 = v18[7];
            v82 = (uint64_t)&a1[v81];
            v83 = &a2[v81];
            v84 = *(_QWORD *)&a1[v81 + 8];
            if (v84 != 1)
            {
              v85 = *((_QWORD *)v83 + 1);
              if (v85 != 1)
              {
                *(_QWORD *)v82 = *(_QWORD *)v83;
                *(_QWORD *)(v82 + 8) = v85;
                swift_bridgeObjectRelease(v84);
                goto LABEL_56;
              }
              sub_1004F895C(v82);
            }
            *(_OWORD *)v82 = *(_OWORD *)v83;
LABEL_56:
            *(_BYTE *)(v82 + 16) = v83[16];
            a1[v18[8]] = a2[v18[8]];
            a1[v18[9]] = a2[v18[9]];
            a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
            return a1;
          }
LABEL_38:
          v73 = sub_10002A750((uint64_t *)&unk_100653A00);
          memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
          goto LABEL_51;
        }
        if (v69)
        {
          sub_10001F544((uint64_t)v63, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
          goto LABEL_38;
        }
        v74 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        __dstc = *(_QWORD **)(v74 - 8);
        v75 = (uint64_t (*)(char *, uint64_t, uint64_t))__dstc[6];
        v76 = v75(v63, 1, v74);
        v77 = v75(v64, 1, v74);
        if (v76)
        {
          if (!v77)
          {
            v78 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v63, v64, v78);
            v63[*(int *)(v74 + 20)] = v64[*(int *)(v74 + 20)];
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstc[7])(v63, 0, 1, v74);
LABEL_50:
            *(_QWORD *)&v63[*(int *)(v65 + 20)] = *(_QWORD *)&v64[*(int *)(v65 + 20)];
            goto LABEL_51;
          }
        }
        else
        {
          if (!v77)
          {
            v90 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 40))(v63, v64, v90);
            v63[*(int *)(v74 + 20)] = v64[*(int *)(v74 + 20)];
            goto LABEL_50;
          }
          sub_10001F544((uint64_t)v63, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription);
        }
        v80 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
        goto LABEL_50;
      }
    }
    else
    {
      if (!v26)
      {
        *(_BYTE *)v20 = *v21;
        *(_BYTE *)(v20 + 1) = v21[1];
        *(_BYTE *)(v20 + 2) = v21[2];
        v52 = *(int *)(v22 + 28);
        v53 = v20 + v52;
        v54 = &v21[v52];
        v55 = type metadata accessor for TTRSharedWithYouHighlight(0);
        v56 = *(_QWORD *)(v55 - 8);
        v57 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
        v58 = v57(v53, 1, v55);
        v59 = v57((uint64_t)v54, 1, v55);
        if (v58)
        {
          if (!v59)
          {
            v60 = type metadata accessor for URL(0);
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v53, v54, v60);
            *(_QWORD *)(v53 + *(int *)(v55 + 20)) = *(_QWORD *)&v54[*(int *)(v55 + 20)];
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
            goto LABEL_32;
          }
        }
        else
        {
          if (!v59)
          {
            v87 = type metadata accessor for URL(0);
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 40))(v53, v54, v87);
            v88 = *(int *)(v55 + 20);
            v89 = *(void **)(v53 + v88);
            *(_QWORD *)(v53 + v88) = *(_QWORD *)&v54[v88];

            goto LABEL_32;
          }
          sub_10001F544(v53, (uint64_t (*)(_QWORD))&type metadata accessor for TTRSharedWithYouHighlight);
        }
        v36 = *(_QWORD *)(*(_QWORD *)(sub_10002A750(&qword_100653A10) - 8) + 64);
        v37 = (void *)v53;
        v38 = v54;
LABEL_17:
        memcpy(v37, v38, v36);
        goto LABEL_32;
      }
      sub_10001F544(v20, type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo);
    }
    v36 = *(_QWORD *)(*(_QWORD *)(sub_10002A750(&qword_10063F568) - 8) + 64);
    v37 = (void *)v20;
    v38 = v21;
    goto LABEL_17;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  v11 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
  v12 = v11[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_10002A750(&qword_10063F568);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    *(_WORD *)(v13 + 1) = *(_WORD *)(v14 + 1);
    v32 = *(int *)(v15 + 28);
    __dsta = &v13[v32];
    v33 = &v14[v32];
    v34 = type metadata accessor for TTRSharedWithYouHighlight(0);
    v91 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v33, 1, v34))
    {
      v35 = sub_10002A750(&qword_100653A10);
      memcpy(__dsta, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      v39 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(__dsta, v33, v39);
      *(_QWORD *)&__dsta[*(int *)(v34 + 20)] = *(_QWORD *)&v33[*(int *)(v34 + 20)];
      (*(void (**)(void))(v91 + 56))();
    }
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v40 = v11[6];
  v41 = &a1[v40];
  v42 = &a2[v40];
  v43 = type metadata accessor for TTRTemplatePublicLinkData(0);
  v44 = *(_QWORD *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
  {
    v45 = sub_10002A750((uint64_t *)&unk_100653A00);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    v46 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
    __dstb = *(void (***)(void *, _QWORD, uint64_t, uint64_t))(v46 - 8);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))__dstb[6])(v42, 1, v46))
    {
      v47 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      v48 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v41, v42, v48);
      v41[*(int *)(v46 + 20)] = v42[*(int *)(v46 + 20)];
      __dstb[7](v41, 0, 1, v46);
    }
    *(_QWORD *)&v41[*(int *)(v43 + 20)] = *(_QWORD *)&v42[*(int *)(v43 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  v49 = v11[7];
  v50 = &a1[v49];
  v51 = &a2[v49];
  *(_OWORD *)v50 = *(_OWORD *)v51;
  v50[16] = v51[16];
  a1[v11[8]] = a2[v11[8]];
  a1[v11[9]] = a2[v11[9]];
  a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1004FB488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004FB494);
}

uint64_t sub_1004FB494(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_10002A750(&qword_10063F570);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1004FB4E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004FB4F0);
}

uint64_t sub_1004FB4F0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_10002A750(&qword_10063F570);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1004FB544(uint64_t a1, uint64_t a2)
{
  return sub_1004FE670(a1, a2, &qword_10063F570, 1);
}

uint64_t sub_1004FB554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1004FE6BC(a1, a2, a3, &qword_10063F570, 1);
}

uint64_t sub_1004FB564(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];

  result = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, *(_QWORD *)(result - 8) + 64, &unk_10053AB08);
    swift_initEnumMetadataSinglePayload(a1, 256, v4, 1);
    return 0;
  }
  return result;
}

_QWORD *sub_1004FB5D4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void (*v15)(char *, _QWORD, uint64_t, uint64_t);
  id v16;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    v5 = *(int *)(a3 + 28);
    v6 = (char *)(a1 + v5);
    v7 = (char *)a2 + v5;
    v8 = type metadata accessor for TTRSharedWithYouHighlight(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      v10 = sub_10002A750(&qword_100653A10);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v12 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v6, v7, v12);
      v13 = *(int *)(v8 + 20);
      v14 = *(void **)&v7[v13];
      *(_QWORD *)&v6[v13] = v14;
      v15 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56);
      v16 = v14;
      v15(v6, 0, 1, v8);
    }
  }
  return v3;
}

void sub_1004FB6E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1 + *(int *)(a2 + 28);
  v3 = type metadata accessor for TTRSharedWithYouHighlight(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3))
  {
    v4 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);

  }
}

uint64_t sub_1004FB758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void (*v13)(char *, _QWORD, uint64_t, uint64_t);
  id v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v4 = *(int *)(a3 + 28);
  v5 = (char *)(a1 + v4);
  v6 = (char *)(a2 + v4);
  v7 = type metadata accessor for TTRSharedWithYouHighlight(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = sub_10002A750(&qword_100653A10);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v5, v6, v10);
    v11 = *(int *)(v7 + 20);
    v12 = *(void **)&v6[v11];
    *(_QWORD *)&v5[v11] = v12;
    v13 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56);
    v14 = v12;
    v13(v5, 0, 1, v7);
  }
  return a1;
}

_BYTE *sub_1004FB838(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void (*v15)(char *, _QWORD, uint64_t, uint64_t);
  id v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = *(int *)(a3 + 28);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for TTRSharedWithYouHighlight(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      v19 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v5, v6, v19);
      v20 = *(int *)(v7 + 20);
      v21 = *(void **)&v6[v20];
      v22 = *(void **)&v5[v20];
      *(_QWORD *)&v5[v20] = v21;
      v23 = v21;

      return a1;
    }
    sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRSharedWithYouHighlight);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v17 = sub_10002A750(&qword_100653A10);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  v12 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v5, v6, v12);
  v13 = *(int *)(v7 + 20);
  v14 = *(void **)&v6[v13];
  *(_QWORD *)&v5[v13] = v14;
  v15 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56);
  v16 = v14;
  v15(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_1004FB990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v4 = *(int *)(a3 + 28);
  v5 = (char *)(a1 + v4);
  v6 = (char *)(a2 + v4);
  v7 = type metadata accessor for TTRSharedWithYouHighlight(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = sub_10002A750(&qword_100653A10);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v5, v6, v10);
    *(_QWORD *)&v5[*(int *)(v7 + 20)] = *(_QWORD *)&v6[*(int *)(v7 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_BYTE *sub_1004FBA6C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  void *v17;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = *(int *)(a3 + 28);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for TTRSharedWithYouHighlight(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      v15 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v5, v6, v15);
      v16 = *(int *)(v7 + 20);
      v17 = *(void **)&v5[v16];
      *(_QWORD *)&v5[v16] = *(_QWORD *)&v6[v16];

      return a1;
    }
    sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRSharedWithYouHighlight);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_10002A750(&qword_100653A10);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    return a1;
  }
  v12 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v5, v6, v12);
  *(_QWORD *)&v5[*(int *)(v7 + 20)] = *(_QWORD *)&v6[*(int *)(v7 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_1004FBBBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004FBBC8);
}

uint64_t sub_1004FBBC8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = sub_10002A750(&qword_100653A10);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v10);
  }
}

uint64_t sub_1004FBC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004FBC54);
}

_BYTE *sub_1004FBC54(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = sub_10002A750(&qword_100653A10);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

void sub_1004FBCC8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_10053AB08;
  v4[1] = &unk_10053AB08;
  v4[2] = &unk_10053AB08;
  sub_100005494(319, &qword_1006539C8, (uint64_t (*)(uint64_t))&type metadata accessor for TTRSharedWithYouHighlight);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

_QWORD *sub_1004FBD50(_BYTE *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void (*v23)(char *, _QWORD, uint64_t, uint64_t);
  id v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = sub_10002A750(&qword_10063F568);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      *v8 = *v9;
      *(_WORD *)(v8 + 1) = *(_WORD *)(v9 + 1);
      v14 = *(int *)(v10 + 28);
      v15 = &v8[v14];
      v16 = &v9[v14];
      v17 = type metadata accessor for TTRSharedWithYouHighlight(0);
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        v19 = sub_10002A750(&qword_100653A10);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        v20 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v15, v16, v20);
        v21 = *(int *)(v17 + 20);
        v22 = *(void **)&v16[v21];
        *(_QWORD *)&v15[v21] = v22;
        v23 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56);
        v24 = v22;
        v23(v15, 0, 1, v17);
      }
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v25 = a3[6];
    v26 = (char *)v4 + v25;
    v27 = (char *)a2 + v25;
    v28 = type metadata accessor for TTRTemplatePublicLinkData(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = sub_10002A750((uint64_t *)&unk_100653A00);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v31 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v27, 1, v31))
      {
        v33 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        v34 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v26, v27, v34);
        v26[*(int *)(v31 + 20)] = v27[*(int *)(v31 + 20)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v26, 0, 1, v31);
      }
      *(_QWORD *)&v26[*(int *)(v28 + 20)] = *(_QWORD *)&v27[*(int *)(v28 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    v35 = a3[7];
    v36 = (char *)v4 + v35;
    v37 = (char *)a2 + v35;
    v38 = *((_QWORD *)v37 + 1);
    if (v38 == 1)
    {
      *(_OWORD *)v36 = *(_OWORD *)v37;
      v36[16] = v37[16];
    }
    else
    {
      *(_QWORD *)v36 = *(_QWORD *)v37;
      *((_QWORD *)v36 + 1) = v38;
      v36[16] = v37[16];
      swift_bridgeObjectRetain(v38);
    }
    v39 = a3[9];
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *((_BYTE *)v4 + v39) = *((_BYTE *)a2 + v39);
  }
  return v4;
}

double sub_1004FC048(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a1 + a2[5];
  v5 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = v4 + *(int *)(v5 + 28);
    v7 = type metadata accessor for TTRSharedWithYouHighlight(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
    {
      v8 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);

    }
  }
  v9 = a1 + a2[6];
  v10 = type metadata accessor for TTRTemplatePublicLinkData(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v12 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v9, 1, v12))
    {
      v13 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v9, v13);
    }
  }
  v14 = *(_QWORD *)(a1 + a2[7] + 8);
  if (v14 != 1)
    *(_QWORD *)&result = swift_bridgeObjectRelease(v14).n128_u64[0];
  return result;
}

_BYTE *sub_1004FC188(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void (*v21)(char *, _QWORD, uint64_t, uint64_t);
  id v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_10002A750(&qword_10063F568);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *(_WORD *)(v7 + 1) = *(_WORD *)(v8 + 1);
    v12 = *(int *)(v9 + 28);
    v13 = &v7[v12];
    v14 = &v8[v12];
    v15 = type metadata accessor for TTRSharedWithYouHighlight(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_10002A750(&qword_100653A10);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v18 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v13, v14, v18);
      v19 = *(int *)(v15 + 20);
      v20 = *(void **)&v14[v19];
      *(_QWORD *)&v13[v19] = v20;
      v21 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56);
      v22 = v20;
      v21(v13, 0, 1, v15);
    }
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v23 = a3[6];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = type metadata accessor for TTRTemplatePublicLinkData(0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = sub_10002A750((uint64_t *)&unk_100653A00);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v29 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v25, 1, v29))
    {
      v31 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v32 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v24, v25, v32);
      v24[*(int *)(v29 + 20)] = v25[*(int *)(v29 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v24, 0, 1, v29);
    }
    *(_QWORD *)&v24[*(int *)(v26 + 20)] = *(_QWORD *)&v25[*(int *)(v26 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  v33 = a3[7];
  v34 = &a1[v33];
  v35 = &a2[v33];
  v36 = *((_QWORD *)v35 + 1);
  if (v36 == 1)
  {
    *(_OWORD *)v34 = *(_OWORD *)v35;
    v34[16] = v35[16];
  }
  else
  {
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *((_QWORD *)v34 + 1) = v36;
    v34[16] = v35[16];
    swift_bridgeObjectRetain(v36);
  }
  v37 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v37] = a2[v37];
  return a1;
}

_BYTE *sub_1004FC454(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  size_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void (*v34)(uint64_t, _QWORD, uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void (*v39)(char *, _QWORD, uint64_t, uint64_t);
  id v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(char *, uint64_t, uint64_t);
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  void *v74;
  id v75;
  uint64_t v76;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *v7 = *v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      v23 = *(int *)(v9 + 28);
      v24 = (uint64_t)&v7[v23];
      v25 = &v8[v23];
      v26 = type metadata accessor for TTRSharedWithYouHighlight(0);
      v27 = *(_QWORD *)(v26 - 8);
      v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
      v29 = v28(v24, 1, v26);
      v30 = v28((uint64_t)v25, 1, v26);
      if (v29)
      {
        if (!v30)
        {
          v31 = type metadata accessor for URL(0);
          (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v24, v25, v31);
          v32 = *(int *)(v26 + 20);
          v33 = *(void **)&v25[v32];
          *(_QWORD *)(v24 + v32) = v33;
          v34 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 56);
          v35 = v33;
          v34(v24, 0, 1, v26);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v30)
        {
          v71 = type metadata accessor for URL(0);
          (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v71 - 8) + 24))(v24, v25, v71);
          v72 = *(int *)(v26 + 20);
          v73 = *(void **)&v25[v72];
          v74 = *(void **)(v24 + v72);
          *(_QWORD *)(v24 + v72) = v73;
          v75 = v73;

          goto LABEL_14;
        }
        sub_10001F544(v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRSharedWithYouHighlight);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(sub_10002A750(&qword_100653A10) - 8) + 64);
      v21 = (void *)v24;
      v22 = v25;
LABEL_8:
      memcpy(v21, v22, v20);
      goto LABEL_14;
    }
    sub_10001F544((uint64_t)v7, type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo);
LABEL_7:
    v20 = *(_QWORD *)(*(_QWORD *)(sub_10002A750(&qword_10063F568) - 8) + 64);
    v21 = v7;
    v22 = v8;
    goto LABEL_8;
  }
  if (v13)
    goto LABEL_7;
  *v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v14 = *(int *)(v9 + 28);
  v15 = &v7[v14];
  v16 = &v8[v14];
  v17 = type metadata accessor for TTRSharedWithYouHighlight(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = sub_10002A750(&qword_100653A10);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v36 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v15, v16, v36);
    v37 = *(int *)(v17 + 20);
    v38 = *(void **)&v16[v37];
    *(_QWORD *)&v15[v37] = v38;
    v39 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56);
    v40 = v38;
    v39(v15, 0, 1, v17);
  }
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_14:
  v41 = a3[6];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v44 = type metadata accessor for TTRTemplatePublicLinkData(0);
  v45 = *(_QWORD *)(v44 - 8);
  v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  v47 = v46(v42, 1, v44);
  v48 = v46(v43, 1, v44);
  if (v47)
  {
    if (!v48)
    {
      v49 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v50 = *(_QWORD *)(v49 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v43, 1, v49))
      {
        v51 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        v59 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v42, v43, v59);
        v42[*(int *)(v49 + 20)] = v43[*(int *)(v49 + 20)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v42, 0, 1, v49);
      }
      *(_QWORD *)&v42[*(int *)(v44 + 20)] = *(_QWORD *)&v43[*(int *)(v44 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      goto LABEL_33;
    }
    goto LABEL_20;
  }
  if (v48)
  {
    sub_10001F544((uint64_t)v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
LABEL_20:
    v52 = sub_10002A750((uint64_t *)&unk_100653A00);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_33;
  }
  v53 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
  v54 = *(_QWORD *)(v53 - 8);
  v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
  v56 = v55(v42, 1, v53);
  v57 = v55(v43, 1, v53);
  if (!v56)
  {
    if (!v57)
    {
      v76 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 24))(v42, v43, v76);
      v42[*(int *)(v53 + 20)] = v43[*(int *)(v53 + 20)];
      goto LABEL_32;
    }
    sub_10001F544((uint64_t)v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription);
    goto LABEL_31;
  }
  if (v57)
  {
LABEL_31:
    v60 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_32;
  }
  v58 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v42, v43, v58);
  v42[*(int *)(v53 + 20)] = v43[*(int *)(v53 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v42, 0, 1, v53);
LABEL_32:
  *(_QWORD *)&v42[*(int *)(v44 + 20)] = *(_QWORD *)&v43[*(int *)(v44 + 20)];
LABEL_33:
  v61 = a3[7];
  v62 = (uint64_t)&a1[v61];
  v63 = &a2[v61];
  v64 = *(_QWORD *)&a1[v61 + 8];
  v65 = *(_QWORD *)&a2[v61 + 8];
  if (v64 == 1)
  {
    if (v65 == 1)
    {
      v66 = *(_OWORD *)v63;
      *(_BYTE *)(v62 + 16) = v63[16];
      *(_OWORD *)v62 = v66;
    }
    else
    {
      *(_QWORD *)v62 = *(_QWORD *)v63;
      v68 = *((_QWORD *)v63 + 1);
      *(_QWORD *)(v62 + 8) = v68;
      *(_BYTE *)(v62 + 16) = v63[16];
      swift_bridgeObjectRetain(v68);
    }
  }
  else
  {
    if (v65 == 1)
    {
      sub_1004F895C(v62);
      v67 = v63[16];
      *(_OWORD *)v62 = *(_OWORD *)v63;
    }
    else
    {
      *(_QWORD *)v62 = *(_QWORD *)v63;
      v69 = *((_QWORD *)v63 + 1);
      *(_QWORD *)(v62 + 8) = v69;
      swift_bridgeObjectRetain(v69);
      swift_bridgeObjectRelease(v64);
      v67 = v63[16];
    }
    *(_BYTE *)(v62 + 16) = v67;
  }
  a1[a3[8]] = a2[a3[8]];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

_BYTE *sub_1004FC9F8(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_10002A750(&qword_10063F568);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *(_WORD *)(v7 + 1) = *(_WORD *)(v8 + 1);
    v12 = *(int *)(v9 + 28);
    v13 = &v7[v12];
    v14 = &v8[v12];
    v15 = type metadata accessor for TTRSharedWithYouHighlight(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_10002A750(&qword_100653A10);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v18 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v13, v14, v18);
      *(_QWORD *)&v13[*(int *)(v15 + 20)] = *(_QWORD *)&v14[*(int *)(v15 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v19 = a3[6];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = type metadata accessor for TTRTemplatePublicLinkData(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = sub_10002A750((uint64_t *)&unk_100653A00);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v25 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v21, 1, v25))
    {
      v27 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      v28 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v20, v21, v28);
      v20[*(int *)(v25 + 20)] = v21[*(int *)(v25 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v20, 0, 1, v25);
    }
    *(_QWORD *)&v20[*(int *)(v22 + 20)] = *(_QWORD *)&v21[*(int *)(v22 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  v29 = a3[7];
  v30 = a3[8];
  v31 = &a1[v29];
  v32 = &a2[v29];
  *(_OWORD *)v31 = *(_OWORD *)v32;
  v31[16] = v32[16];
  a1[v30] = a2[v30];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

_BYTE *sub_1004FCC9C(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  size_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(_BYTE *, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(_BYTE *, uint64_t, uint64_t);
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *v7 = *v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      v23 = *(int *)(v9 + 28);
      v24 = (uint64_t)&v7[v23];
      v25 = &v8[v23];
      v26 = type metadata accessor for TTRSharedWithYouHighlight(0);
      v27 = *(_QWORD *)(v26 - 8);
      v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
      v29 = v28(v24, 1, v26);
      v30 = v28((uint64_t)v25, 1, v26);
      if (v29)
      {
        if (!v30)
        {
          v31 = type metadata accessor for URL(0);
          (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v24, v25, v31);
          *(_QWORD *)(v24 + *(int *)(v26 + 20)) = *(_QWORD *)&v25[*(int *)(v26 + 20)];
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v30)
        {
          v60 = type metadata accessor for URL(0);
          (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v60 - 8) + 40))(v24, v25, v60);
          v61 = *(int *)(v26 + 20);
          v62 = *(void **)(v24 + v61);
          *(_QWORD *)(v24 + v61) = *(_QWORD *)&v25[v61];

          goto LABEL_14;
        }
        sub_10001F544(v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRSharedWithYouHighlight);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(sub_10002A750(&qword_100653A10) - 8) + 64);
      v21 = (void *)v24;
      v22 = v25;
LABEL_8:
      memcpy(v21, v22, v20);
      goto LABEL_14;
    }
    sub_10001F544((uint64_t)v7, type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo);
LABEL_7:
    v20 = *(_QWORD *)(*(_QWORD *)(sub_10002A750(&qword_10063F568) - 8) + 64);
    v21 = v7;
    v22 = v8;
    goto LABEL_8;
  }
  if (v13)
    goto LABEL_7;
  *v7 = *v8;
  *(_WORD *)(v7 + 1) = *(_WORD *)(v8 + 1);
  v14 = *(int *)(v9 + 28);
  v15 = &v7[v14];
  v16 = &v8[v14];
  v17 = type metadata accessor for TTRSharedWithYouHighlight(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = sub_10002A750(&qword_100653A10);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v32 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v15, v16, v32);
    *(_QWORD *)&v15[*(int *)(v17 + 20)] = *(_QWORD *)&v16[*(int *)(v17 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_14:
  v33 = a3[6];
  v34 = &a1[v33];
  v35 = &a2[v33];
  v36 = type metadata accessor for TTRTemplatePublicLinkData(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v37 + 48);
  v39 = v38(v34, 1, v36);
  v40 = v38(v35, 1, v36);
  if (!v39)
  {
    if (v40)
    {
      sub_10001F544((uint64_t)v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
      goto LABEL_20;
    }
    v45 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
    v46 = *(_QWORD *)(v45 - 8);
    v47 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v46 + 48);
    v48 = v47(v34, 1, v45);
    v49 = v47(v35, 1, v45);
    if (v48)
    {
      if (!v49)
      {
        v50 = type metadata accessor for Date(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v34, v35, v50);
        v34[*(int *)(v45 + 20)] = v35[*(int *)(v45 + 20)];
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v34, 0, 1, v45);
LABEL_32:
        *(_QWORD *)&v34[*(int *)(v36 + 20)] = *(_QWORD *)&v35[*(int *)(v36 + 20)];
        goto LABEL_33;
      }
    }
    else
    {
      if (!v49)
      {
        v63 = type metadata accessor for Date(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v63 - 8) + 40))(v34, v35, v63);
        v34[*(int *)(v45 + 20)] = v35[*(int *)(v45 + 20)];
        goto LABEL_32;
      }
      sub_10001F544((uint64_t)v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription);
    }
    v52 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_32;
  }
  if (v40)
  {
LABEL_20:
    v44 = sub_10002A750((uint64_t *)&unk_100653A00);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_33;
  }
  v41 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v35, 1, v41))
  {
    v43 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    v51 = type metadata accessor for Date(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v34, v35, v51);
    v34[*(int *)(v41 + 20)] = v35[*(int *)(v41 + 20)];
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v34, 0, 1, v41);
  }
  *(_QWORD *)&v34[*(int *)(v36 + 20)] = *(_QWORD *)&v35[*(int *)(v36 + 20)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
LABEL_33:
  v53 = a3[7];
  v54 = (uint64_t)&a1[v53];
  v55 = &a2[v53];
  v56 = *(_QWORD *)&a1[v53 + 8];
  if (v56 != 1)
  {
    v57 = *((_QWORD *)v55 + 1);
    if (v57 != 1)
    {
      *(_QWORD *)v54 = *(_QWORD *)v55;
      *(_QWORD *)(v54 + 8) = v57;
      swift_bridgeObjectRelease(v56);
      goto LABEL_38;
    }
    sub_1004F895C(v54);
  }
  *(_OWORD *)v54 = *(_OWORD *)v55;
LABEL_38:
  *(_BYTE *)(v54 + 16) = v55[16];
  v58 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v58] = a2[v58];
  return a1;
}

uint64_t sub_1004FD1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004FD1E0);
}

uint64_t sub_1004FD1E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;

  v6 = sub_10002A750(&qword_10063F568);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = sub_10002A750((uint64_t *)&unk_100653A00);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(_QWORD *)(a1 + a3[7] + 8);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return ((_DWORD)v12 - 1) & ~(((int)v12 - 1) >> 31);
}

uint64_t sub_1004FD294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004FD2A0);
}

uint64_t sub_1004FD2A0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = sub_10002A750(&qword_10063F568);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = sub_10002A750((uint64_t *)&unk_100653A00);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_QWORD *)(a1 + a4[7] + 8) = (a2 + 1);
  return result;
}

void sub_1004FD34C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[6];

  v6[0] = &unk_10053AB08;
  sub_100005494(319, &qword_100664E78, type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_100005494(319, (unint64_t *)&unk_100664E80, (uint64_t (*)(uint64_t))&type metadata accessor for TTRTemplatePublicLinkData);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      v6[3] = &unk_10053AB58;
      v6[4] = &unk_10053AB08;
      v6[5] = &unk_10053AB08;
      swift_initStructMetadata(a1, 256, 6, v6, a1 + 16);
    }
  }
}

uint64_t sub_1004FD408(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  char v3;
  int v4;

  v2 = *a1;
  v3 = v2 == 2;
  v4 = *a2;
  if (v4 != 2)
    v3 = 0;
  if (v2 != 2 && v4 != 2)
    v3 = ((v2 & 1) == 0) ^ v4;
  return v3 & 1;
}

uint64_t sub_1004FD440(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return sub_1004FD9B4(*a1 | ((unint64_t)*(unsigned int *)(a1 + 1) << 16), *a2 | ((unint64_t)*(unsigned int *)(a2 + 1) << 16));
}

uint64_t sub_1004FD45C(uint64_t a1, uint64_t a2)
{
  return sub_1004FDB38(*(_QWORD *)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(void **)(a2 + 8), *(_BYTE *)(a2 + 16));
}

void sub_1004FD478(_QWORD *a1@<X8>)
{
  *a1 = &off_1005EA198;
}

uint64_t sub_1004FD48C(uint64_t *a1, uint64_t *a2)
{
  return sub_1004FD944(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_1004FD4A0(__int16 *a1, _WORD *a2)
{
  __int16 v2;
  int v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a1;
  result = *a2 == 2 && v3 == 2;
  if (v3 != 2 && *a2 != 2)
    return (((v2 & 1) == 0) ^ (unsigned __int16)*a2) & (((v2 & 0x100) == 0) ^ ((unsigned __int16)(*a2 & 0x100) >> 8));
  return result;
}

uint64_t sub_1004FD4F0(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_QWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_QWORD *)(a2 + 32);
  return sub_1004FD5D0((uint64_t)v5, (uint64_t)v7) & 1;
}

unint64_t sub_1004FD53C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100664EC0;
  if (!qword_100664EC0)
  {
    v1 = sub_10002CA5C(&qword_100664EC8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100664EC0);
  }
  return result;
}

unint64_t sub_1004FD58C()
{
  unint64_t result;

  result = qword_100664ED0;
  if (!qword_100664ED0)
  {
    result = swift_getWitnessTable(&unk_10053AC38, &type metadata for TTRIRemindersListNavigationBarViewModel.CenterItemID);
    atomic_store(result, (unint64_t *)&qword_100664ED0);
  }
  return result;
}

uint64_t sub_1004FD5D0(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v10;

  v4 = *(_BYTE *)a1 == 0;
  if (*(_BYTE *)a1)
    v5 = 0x736E6D756C6F63;
  else
    v5 = 1953720684;
  if (v4)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE700000000000000;
  if (*(_BYTE *)a2)
    v7 = 0x736E6D756C6F63;
  else
    v7 = 1953720684;
  if (*(_BYTE *)a2)
    v8 = 0xE700000000000000;
  else
    v8 = 0xE400000000000000;
  if (v5 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n(v6, 2);
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v7, v8, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v8);
    if ((v10 & 1) == 0)
      return 0;
  }
  if (sub_100095750(*(_QWORD *)(a1 + 8), *(_QWORD *)(a2 + 8))
    && (sub_1000957FC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 16)) & 1) != 0
    && (sub_100095B88(*(_QWORD *)(a1 + 24), *(_QWORD *)(a2 + 24)) & 1) != 0)
  {
    return sub_100095C48(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32));
  }
  return 0;
}

void sub_1004FD6D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v4 = type metadata accessor for TTRSharedWithYouHighlight(0);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem(0);
  __chkstk_darwin(v5);
  v6 = sub_10002A750(&qword_1006415D8);
  __chkstk_darwin(v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t)&v8[*(int *)(v9 + 48)];
  sub_1004FDD64(a1, (uint64_t)v8);
  sub_1004FDD64(a2, v10);
  v11 = sub_10002A750(&qword_10063F578);
  v12 = (char *)sub_1004FD7F4
      + 4
      * byte_10053AA24[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v8, 5, v11)];
  __asm { BR              X10 }
}

uint64_t sub_1004FD7F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  char v6;

  sub_1004FDD64(v0, v2);
  if (v5(v3, 5, v4))
  {
    sub_10001F544(v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRSharedWithYouHighlight);
    sub_1000073A0(v0, &qword_1006415D8);
    v6 = 0;
  }
  else
  {
    sub_100086598(v3, v1);
    v6 = static TTRSharedWithYouHighlight.__derived_struct_equals(_:_:)(v2, v1);
    sub_10001F544(v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRSharedWithYouHighlight);
    sub_10001F544(v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRSharedWithYouHighlight);
    sub_10001F544(v0, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
  }
  return v6 & 1;
}

uint64_t sub_1004FD944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 == 1)
  {
    if (a4 == 1)
      return 1;
  }
  else if (a4 != 1)
  {
    if (a2)
    {
      if (a4 && (a1 == a3 && a2 == a4 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0) & 1) != 0))
        return 1;
    }
    else
    {
      if (!a4)
        return 1;
      sub_10004E038(a1, 0);
    }
  }
  return 0;
}

uint64_t sub_1004FD9B4(uint64_t a1, unint64_t a2)
{
  if (a1 == 2)
  {
    if (a2 != 2)
      return 0;
  }
  else if (a2 == 2 || ((((a1 & 1) == 0) ^ a2) & 1) == 0)
  {
    return 0;
  }
  if ((a1 & 0xFF00) == 0x200)
  {
    if (BYTE1(a2) != 2)
      return 0;
  }
  else if (BYTE1(a2) == 2 || ((a1 & 0x100) == 0) == ((a2 >> 8) & 1))
  {
    return 0;
  }
  if ((a1 & 0xFF0000) == 0x20000)
  {
    if (BYTE2(a2) != 2)
      return 0;
  }
  else if (BYTE2(a2) == 2 || ((a1 & 0x10000) == 0) == ((a2 >> 16) & 1))
  {
    return 0;
  }
  if ((a1 & 0xFF000000) == 0x2000000)
  {
    if (BYTE3(a2) != 2)
      return 0;
  }
  else if (BYTE3(a2) == 2 || ((a1 & 0x1000000) == 0) == ((a2 >> 24) & 1))
  {
    return 0;
  }
  if ((a1 & 0xFF00000000) == 0x200000000)
  {
    if (BYTE4(a2) != 2)
      return 0;
  }
  else if (BYTE4(a2) == 2 || ((a1 & (unint64_t)&_mh_execute_header) == 0) == (BYTE4(a2) & 1))
  {
    return 0;
  }
  if ((a1 & 0xFF0000000000) == 0x20000000000)
  {
    if (BYTE5(a2) == 2)
      return 1;
  }
  else if (BYTE5(a2) != 2 && ((a1 & 0x10000000000) == 0) != ((a2 >> 40) & 1))
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1004FDB38(uint64_t a1, void *a2, char a3, unint64_t a4, void *a5, char a6)
{
  char v12;
  char v13;

  if ((a3 & 0x80) == 0)
  {
    if ((a6 & 0x80) == 0)
    {
      sub_10004DD38((id)a1, a2, a3);
      sub_10004DD38((id)a4, a5, a6);
      sub_10048C970(a1, (uint64_t)a2, a3);
      v13 = v12;
      sub_10004DD98((void *)a4, a5, a6);
      sub_10004DD98((void *)a1, a2, a3);
      return v13 & 1;
    }
    return 0;
  }
  if ((a6 & 0x80) == 0)
    return 0;
  if (a1 == 2)
  {
    if (a4 != 2)
      return 0;
  }
  else if (a4 == 2 || ((((a1 & 1) == 0) ^ a4) & 1) == 0)
  {
    return 0;
  }
  if ((a1 & 0xFF00) == 0x200)
  {
    if (BYTE1(a4) != 2)
      return 0;
  }
  else if (BYTE1(a4) == 2 || ((a1 & 0x100) == 0) == ((a4 >> 8) & 1))
  {
    return 0;
  }
  if ((a1 & 0xFF0000) == 0x20000)
  {
    if (BYTE2(a4) != 2)
      return 0;
  }
  else if (BYTE2(a4) == 2 || ((a1 & 0x10000) == 0) == ((a4 >> 16) & 1))
  {
    return 0;
  }
  if ((a1 & 0xFF000000) == 0x2000000)
  {
    if (BYTE3(a4) != 2)
      return 0;
  }
  else if (BYTE3(a4) == 2 || ((a1 & 0x1000000) == 0) == ((a4 >> 24) & 1))
  {
    return 0;
  }
  if ((a1 & 0xFF00000000) == 0x200000000)
  {
    if (BYTE4(a4) != 2)
      return 0;
  }
  else if (BYTE4(a4) == 2 || ((a1 & (unint64_t)&_mh_execute_header) == 0) == (BYTE4(a4) & 1))
  {
    return 0;
  }
  if ((a1 & 0xFF0000000000) == 0x20000000000)
  {
    if (BYTE5(a4) != 2)
      return 0;
  }
  else if (BYTE5(a4) == 2 || ((a1 & 0x10000000000) == 0) == ((a4 >> 40) & 1))
  {
    return 0;
  }
  return 1;
}

uint64_t type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem(uint64_t a1)
{
  return sub_100007328(a1, (uint64_t *)&unk_100664F48, (uint64_t)&nominal type descriptor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
}

uint64_t sub_1004FDD64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.LeadingItem(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 65282;
    if (a2 + 65282 <= 0xFFFEFFFF)
      v3 = 2;
    else
      v3 = 4;
    if (v2 < 0xFF0000)
      v3 = 1;
    if (v2 >= 0x10000)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1004FDDF8 + 4 * byte_10053AA2A[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.LeadingItem(_WORD *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 65282;
  if (a3 + 65282 <= 0xFFFEFFFF)
    v4 = 2;
  else
    v4 = 4;
  if (v3 < 0xFF0000)
    v4 = 1;
  if (v3 >= 0x10000)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1004FDEB4 + 4 * byte_10053AA34[v5]))();
  *a1 = a2 - 254;
  return ((uint64_t (*)(void))((char *)sub_1004FDEE8 + 4 * byte_10053AA2F[v5]))();
}

uint64_t sub_1004FDEE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1004FDEF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1004FDEF8);
  return result;
}

uint64_t sub_1004FDF04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1004FDF0CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1004FDF10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1004FDF18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

_WORD *sub_1004FDF24(_WORD *result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *result = a2 - 255;
  }
  else if (a2)
  {
    *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListNavigationBarViewModel.LeadingItem()
{
  return &type metadata for TTRIRemindersListNavigationBarViewModel.LeadingItem;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.FixedTrailingItem(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  if ((v4 + 1) >= 2)
    return v4;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.FixedTrailingItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListNavigationBarViewModel.FixedTrailingItem()
{
  return &type metadata for TTRIRemindersListNavigationBarViewModel.FixedTrailingItem;
}

uint64_t *sub_1004FE020(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void (*v13)(uint64_t *, _QWORD, uint64_t, uint64_t);
  id v14;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_10002A750(&qword_10063F578);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 5, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v11 = *(int *)(type metadata accessor for TTRSharedWithYouHighlight(0) + 20);
      v12 = *(void **)((char *)a2 + v11);
      *(uint64_t *)((char *)a1 + v11) = (uint64_t)v12;
      v13 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56);
      v14 = v12;
      v13(a1, 0, 5, v7);
    }
  }
  return a1;
}

void sub_1004FE110(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10002A750(&qword_10063F578);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 5, v2))
  {
    v3 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);

  }
}

char *sub_1004FE18C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void (*v11)(char *, _QWORD, uint64_t, uint64_t);
  id v12;

  v6 = sub_10002A750(&qword_10063F578);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 5, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    v9 = *(int *)(type metadata accessor for TTRSharedWithYouHighlight(0) + 20);
    v10 = *(void **)&a2[v9];
    *(_QWORD *)&a1[v9] = v10;
    v11 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56);
    v12 = v10;
    v11(a1, 0, 5, v6);
  }
  return a1;
}

char *sub_1004FE258(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void (*v14)(char *, _QWORD, uint64_t, uint64_t);
  id v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;

  v6 = sub_10002A750(&qword_10063F578);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 5, v6);
  v10 = v8(a2, 5, v6);
  if (!v9)
  {
    if (!v10)
    {
      v17 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(a1, a2, v17);
      v18 = *(int *)(type metadata accessor for TTRSharedWithYouHighlight(0) + 20);
      v19 = *(void **)&a2[v18];
      v20 = *(void **)&a1[v18];
      *(_QWORD *)&a1[v18] = v19;
      v21 = v19;

      return a1;
    }
    sub_1000073A0((uint64_t)a1, &qword_10063F578);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = *(int *)(type metadata accessor for TTRSharedWithYouHighlight(0) + 20);
  v13 = *(void **)&a2[v12];
  *(_QWORD *)&a1[v12] = v13;
  v14 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56);
  v15 = v13;
  v14(a1, 0, 5, v6);
  return a1;
}

char *sub_1004FE39C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_10002A750(&qword_10063F578);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 5, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    v9 = type metadata accessor for TTRSharedWithYouHighlight(0);
    *(_QWORD *)&a1[*(int *)(v9 + 20)] = *(_QWORD *)&a2[*(int *)(v9 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 5, v6);
  }
  return a1;
}

char *sub_1004FE464(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  void *v16;

  v6 = sub_10002A750(&qword_10063F578);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 5, v6);
  v10 = v8(a2, 5, v6);
  if (!v9)
  {
    if (!v10)
    {
      v14 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(a1, a2, v14);
      v15 = *(int *)(type metadata accessor for TTRSharedWithYouHighlight(0) + 20);
      v16 = *(void **)&a1[v15];
      *(_QWORD *)&a1[v15] = *(_QWORD *)&a2[v15];

      return a1;
    }
    sub_1000073A0((uint64_t)a1, &qword_10063F578);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  v12 = type metadata accessor for TTRSharedWithYouHighlight(0);
  *(_QWORD *)&a1[*(int *)(v12 + 20)] = *(_QWORD *)&a2[*(int *)(v12 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 5, v6);
  return a1;
}

uint64_t sub_1004FE5A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004FE5AC);
}

uint64_t sub_1004FE5AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_10002A750(&qword_10063F578);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 6)
    return v5 - 5;
  else
    return 0;
}

uint64_t sub_1004FE5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004FE608);
}

uint64_t sub_1004FE608(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 5);
  else
    v5 = 0;
  v6 = sub_10002A750(&qword_10063F578);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1004FE660(uint64_t a1, uint64_t a2)
{
  return sub_1004FE670(a1, a2, &qword_10063F578, 5);
}

uint64_t sub_1004FE670(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6;

  v6 = sub_10002A750(a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, a4, v6);
}

uint64_t sub_1004FE6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1004FE6BC(a1, a2, a3, &qword_10063F578, 5);
}

uint64_t sub_1004FE6BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v8;

  v8 = sub_10002A750(a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, a2, a5, v8);
}

uint64_t sub_1004FE708(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for TTRSharedWithYouHighlight(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 5);
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfo(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfo(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && a1[6])
    return (*(_DWORD *)a1 + 254);
  v3 = *a1;
  if (v3 >= 2)
    v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v4 = -2;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 6) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 6) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfo()
{
  return &type metadata for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfo;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfo.ItemState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1004FE874 + 4 * byte_10053AA39[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfo.ItemState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1004FE92C + 4 * byte_10053AA43[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1004FE960 + 4 * byte_10053AA3E[v5]))();
}

uint64_t sub_1004FE960(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004FE968(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004FE970);
  return result;
}

uint64_t sub_1004FE97C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004FE984);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1004FE988(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004FE990(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfo.ItemState()
{
  return &type metadata for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfo.ItemState;
}

Swift::Int sub_1004FE9B0()
{
  uint64_t v0;
  Swift::UInt v1;
  _OWORD v3[2];
  uint64_t v4;
  _OWORD v5[2];
  uint64_t v6;
  char v7;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8, 0);
  sub_10017C4F0(v0, (uint64_t)v5);
  if ((v7 & 1) != 0)
  {
    v3[0] = v5[0];
    v3[1] = v5[1];
    v4 = v6;
    Hasher._combine(_:)(1uLL);
    AnyHashable.hash(into:)(v8);
    sub_100041DDC((uint64_t)v3);
  }
  else
  {
    v1 = LOBYTE(v5[0]);
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(v1);
  }
  return Hasher._finalize()();
}

void sub_1004FEA4C(_QWORD *a1@<X8>)
{
  *a1 = &off_1005EA760;
}

void sub_1004FEA60(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt v3;
  _OWORD v4[2];
  uint64_t v5;
  _OWORD v6[2];
  uint64_t v7;
  char v8;

  sub_10017C4F0(v1, (uint64_t)v6);
  if ((v8 & 1) != 0)
  {
    v4[0] = v6[0];
    v4[1] = v6[1];
    v5 = v7;
    Hasher._combine(_:)(1uLL);
    AnyHashable.hash(into:)(a1);
    sub_100041DDC((uint64_t)v4);
  }
  else
  {
    v3 = LOBYTE(v6[0]);
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(v3);
  }
}

Swift::Int sub_1004FEAEC(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt v2;
  _OWORD v4[2];
  uint64_t v5;
  _OWORD v6[2];
  uint64_t v7;
  char v8;
  _QWORD v9[9];

  Hasher.init(_seed:)(v9, a1);
  sub_10017C4F0(v1, (uint64_t)v6);
  if ((v8 & 1) != 0)
  {
    v4[0] = v6[0];
    v4[1] = v6[1];
    v5 = v7;
    Hasher._combine(_:)(1uLL);
    AnyHashable.hash(into:)(v9);
    sub_100041DDC((uint64_t)v4);
  }
  else
  {
    v2 = LOBYTE(v6[0]);
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(v2);
  }
  return Hasher._finalize()();
}

_QWORD *sub_1004FEB88()
{
  _QWORD *result;

  result = sub_1004FEBA4();
  qword_100673A50 = (uint64_t)result;
  return result;
}

_QWORD *sub_1004FEBA4()
{
  uint64_t v0;
  char *v1;
  _QWORD *v2;
  char v3;
  unint64_t v4;
  unint64_t v5;
  _BYTE v7[48];
  _QWORD *v8;

  v0 = 7;
  v8 = _swiftEmptyArrayStorage;
  sub_1003D81A4(0, 7, 0);
  v1 = &byte_1005EA780;
  v2 = _swiftEmptyArrayStorage;
  do
  {
    v3 = *v1++;
    v7[0] = v3;
    v7[40] = 0;
    v8 = v2;
    v5 = v2[2];
    v4 = v2[3];
    if (v5 >= v4 >> 1)
    {
      sub_1003D81A4(v4 > 1, v5 + 1, 1);
      v2 = v8;
    }
    v2[2] = v5 + 1;
    sub_100254DD4((uint64_t)v7, (uint64_t)&v2[6 * v5 + 4]);
    --v0;
  }
  while (v0);
  return v2;
}

uint64_t sub_1004FEC74@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1004FEC7C(uint64_t a1, uint64_t a2)
{
  char v3;
  _OWORD v5[2];
  uint64_t v6;
  _BYTE v7[48];
  _QWORD v8[5];
  char v9;
  _OWORD v10[2];
  uint64_t v11;
  char v12;

  sub_10017C4F0(a1, (uint64_t)v8);
  sub_10017C4F0(a2, (uint64_t)v10);
  if ((v9 & 1) == 0)
  {
    sub_10017C4F0((uint64_t)v8, (uint64_t)v7);
    if ((v12 & 1) == 0)
    {
      v3 = v7[0] == LOBYTE(v10[0]);
      goto LABEL_6;
    }
LABEL_8:
    sub_1004FED58((uint64_t)v8);
    v3 = 0;
    return v3 & 1;
  }
  sub_10017C4F0((uint64_t)v8, (uint64_t)v7);
  if (v12 != 1)
  {
    sub_100041DDC((uint64_t)v7);
    goto LABEL_8;
  }
  v5[0] = v10[0];
  v5[1] = v10[1];
  v6 = v11;
  v3 = static AnyHashable.== infix(_:_:)(v7, v5);
  sub_100041DDC((uint64_t)v5);
  sub_100041DDC((uint64_t)v7);
LABEL_6:
  sub_100254E10(v8);
  return v3 & 1;
}

uint64_t sub_1004FED58(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750(&qword_100664F58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for TTRIRemindersListActionMenuItems()
{
  return &type metadata for TTRIRemindersListActionMenuItems;
}

_QWORD *destroy for TTRIRemindersListActionMenuItems.MenuItem(_QWORD *a1)
{
  unsigned int v1;

  v1 = *((unsigned __int8 *)a1 + 40);
  if (v1 >= 2)
    v1 = *(_DWORD *)a1 + 2;
  if (v1 == 1)
    return (_QWORD *)sub_100027F10(a1);
  return a1;
}

uint64_t initializeWithCopy for TTRIRemindersListActionMenuItems.MenuItem(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  __int128 v4;
  char v5;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  if (v3 == 1)
  {
    v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    v5 = 1;
  }
  else
  {
    v5 = 0;
    *(_BYTE *)a1 = *(_BYTE *)a2;
  }
  *(_BYTE *)(a1 + 40) = v5;
  return a1;
}

uint64_t assignWithCopy for TTRIRemindersListActionMenuItems.MenuItem(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  char v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
      sub_100027F10((_QWORD *)a1);
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      v7 = 1;
    }
    else
    {
      v7 = 0;
      *(_BYTE *)a1 = *(_BYTE *)a2;
    }
    *(_BYTE *)(a1 + 40) = v7;
  }
  return a1;
}

uint64_t assignWithTake for TTRIRemindersListActionMenuItems.MenuItem(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  char v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
      sub_100027F10((_QWORD *)a1);
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v7 = 1;
    }
    else
    {
      v7 = 0;
      *(_BYTE *)a1 = *(_BYTE *)a2;
    }
    *(_BYTE *)(a1 + 40) = v7;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListActionMenuItems.MenuItem(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 2)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListActionMenuItems.MenuItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_1004FF000(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_1004FF01C(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListActionMenuItems.MenuItem()
{
  return &type metadata for TTRIRemindersListActionMenuItems.MenuItem;
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListActionMenuItems.StandardMenuItem(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1004FF0A4 + 4 * byte_10053ADC5[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1004FF0D8 + 4 * byte_10053ADC0[v4]))();
}

uint64_t sub_1004FF0D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004FF0E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004FF0E8);
  return result;
}

uint64_t sub_1004FF0F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004FF0FCLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1004FF100(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004FF108(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListActionMenuItems.StandardMenuItem()
{
  return &type metadata for TTRIRemindersListActionMenuItems.StandardMenuItem;
}

unint64_t sub_1004FF128()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100664F60;
  if (!qword_100664F60)
  {
    v1 = sub_10002CA5C(&qword_100664F68);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100664F60);
  }
  return result;
}

unint64_t sub_1004FF178()
{
  unint64_t result;

  result = qword_100664F70;
  if (!qword_100664F70)
  {
    result = swift_getWitnessTable(&unk_10053AF2C, &type metadata for TTRIRemindersListActionMenuItems.StandardMenuItem);
    atomic_store(result, (unint64_t *)&qword_100664F70);
  }
  return result;
}

uint64_t sub_1004FF1BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100664F78);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100664F78);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1004FF24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(v6 + 89) = a6;
  *(_QWORD *)(v6 + 16) = a4;
  v7 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 24) = v7;
  v8 = static MainActor.shared.getter(v7);
  *(_QWORD *)(v6 + 32) = v8;
  *(_QWORD *)(v6 + 40) = static MainActor.shared.getter(v8);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor, v9);
  *(_QWORD *)(v6 + 48) = v10;
  *(_QWORD *)(v6 + 56) = v11;
  return swift_task_switch(sub_1004FF2CC, v10, v11);
}

uint64_t sub_1004FF2CC(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_BYTE *)(v1 + 89);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 64) = v4;
  v5 = swift_task_alloc(32);
  *(_QWORD *)(v1 + 72) = v5;
  *(_QWORD *)(v5 + 16) = v3;
  *(_BYTE *)(v5 + 24) = 1;
  *(_BYTE *)(v5 + 25) = v2;
  v6 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 80) = v6;
  *v6 = v1;
  v6[1] = sub_1004FF39C;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 88, v4, &protocol witness table for MainActor, 0xD00000000000001DLL, 0x8000000100566240, sub_1001346EC, v5, &type metadata for Bool);
}

uint64_t sub_1004FF39C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 72);
  swift_task_dealloc(*(_QWORD *)(*v0 + 80));
  swift_release();
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1004FF404, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_1004FF404()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_release();
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v2);
  return swift_task_switch(sub_100049824, v3, v4);
}

uint64_t sub_1004FF45C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_unknownObjectWeakDestroy(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for TTRITemplatesListRouter()
{
  return objc_opt_self(_TtC9Reminders23TTRITemplatesListRouter);
}

unint64_t sub_1004FF4B0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005EA788, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 7)
    return 7;
  else
    return v3;
}

uint64_t sub_1004FF4F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  void *v17;
  uint64_t v18;
  NSURL *v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  Swift::String v25;

  v2 = sub_10002A750((uint64_t *)&unk_100640EE0);
  __chkstk_darwin(v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_9;
  v9 = sub_100005CF4(0x656C746974, 0xE500000000000000);
  if ((v10 & 1) == 0 || !*(_QWORD *)(a1 + 16))
    goto LABEL_9;
  v11 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v9);
  v13 = *v11;
  v12 = v11[1];
  swift_bridgeObjectRetain(v12);
  v14 = sub_100005CF4(0x676E697274536469, 0xE800000000000000);
  if ((v15 & 1) == 0)
  {
    swift_bridgeObjectRelease(v12);
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return 0;
  }
  v16 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v14);
  v18 = *v16;
  v17 = (void *)v16[1];
  swift_bridgeObjectRetain_n(v17, 2);
  swift_bridgeObjectRelease(a1);
  v25._countAndFlagsBits = v18;
  v25._object = v17;
  if (sub_1004FF4B0(v25) != 7)
  {
    swift_bridgeObjectRelease(v17);
    return v13;
  }
  URL.init(string:)(v18, v17);
  swift_bridgeObjectRelease(v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    swift_bridgeObjectRelease(v12);
    sub_1001D70A4((uint64_t)v4);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  URL._bridgeToObjectiveC()(v20);
  v22 = v21;
  v23 = objc_msgSend((id)objc_opt_self(REMObjectID), "objectIDWithURL:", v21);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (!v23)
  {
    swift_bridgeObjectRelease(v12);
    return 0;
  }
  return v13;
}

UIMenu sub_1004FF744()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  UIMenuElementSize v18;
  Swift::OpaquePointer children;
  UIMenuElementSize preferredElementSize[2];
  __int128 v22;
  UIImage_optional v23;

  v0._countAndFlagsBits = 0xD00000000000002CLL;
  v0._object = (void *)0x800000010057D390;
  v1._countAndFlagsBits = 0x696D65522077654ELL;
  v1._object = (void *)0xEC0000007265646ELL;
  v2 = TTRLocalizedString(_:comment:)(v1, v0);
  sub_100005ED8(0, &qword_100640F50, UIKeyCommand_ptr);
  *(_OWORD *)preferredElementSize = 0u;
  v22 = 0u;
  swift_bridgeObjectRetain(v2._object);
  v3 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v2._countAndFlagsBits, v2._object, 0, "newReminderAction:", 78, 0xE100000000000000, 0x100000, preferredElementSize, _swiftEmptyArrayStorage, v2._countAndFlagsBits, v2._object, 0, 0);
  v4._countAndFlagsBits = 0xD000000000000028;
  v4._object = (void *)0x800000010057D3C0;
  v5._countAndFlagsBits = 0x7473694C2077654ELL;
  v5._object = (void *)0xE800000000000000;
  v6 = TTRLocalizedString(_:comment:)(v5, v4);
  *(_OWORD *)preferredElementSize = 0u;
  v22 = 0u;
  swift_bridgeObjectRetain(v6._object);
  v7 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v6._countAndFlagsBits, v6._object, 0, "newListAction:", 78, 0xE100000000000000, 1179648, preferredElementSize, _swiftEmptyArrayStorage, v6._countAndFlagsBits, v6._object, 0, 0);
  *(_OWORD *)preferredElementSize = 0u;
  v22 = 0u;
  v8 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(0, 0xE000000000000000, 0, "newSectionAction:", 78, 0xE100000000000000, 1572864, preferredElementSize, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_OWORD *)preferredElementSize = 0u;
  v22 = 0u;
  v9 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(0, 0xE000000000000000, 0, "newSectionWithSelectionAction:", 78, 0xE100000000000000, 1310720, preferredElementSize, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v10._countAndFlagsBits = 0xD000000000000026;
  v10._object = (void *)0x800000010057D3F0;
  v11._countAndFlagsBits = 0x746E697250;
  v11._object = (void *)0xE500000000000000;
  v12 = TTRLocalizedString(_:comment:)(v11, v10);
  *(_OWORD *)preferredElementSize = 0u;
  v22 = 0u;
  swift_bridgeObjectRetain(v12._object);
  v13 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v12._countAndFlagsBits, v12._object, 0, "printListAction:", 80, 0xE100000000000000, 0x100000, preferredElementSize, _swiftEmptyArrayStorage, v12._countAndFlagsBits, v12._object, 0, 0);
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v14._object = (void *)0x800000010057D420;
  v15._countAndFlagsBits = 1701603654;
  v15._object = (void *)0xE400000000000000;
  v14._countAndFlagsBits = 0xD000000000000013;
  v16 = TTRLocalizedString(_:comment:)(v15, v14);
  v17 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v18 = swift_allocObject(v17, 72, 7);
  *(_OWORD *)(v18 + 16) = xmmword_100525680;
  *(_QWORD *)(v18 + 32) = v3;
  *(_QWORD *)(v18 + 40) = v7;
  *(_QWORD *)(v18 + 48) = v8;
  *(_QWORD *)(v18 + 56) = v9;
  *(_QWORD *)(v18 + 64) = v13;
  preferredElementSize[0] = v18;
  specialized Array._endMutation()(v18);
  v23.value.super.isa = 0;
  v23.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v16, (Swift::String_optional)0, v23, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize[0], children);
}

Class sub_1004FFA74()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  void *v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  void *v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  void *v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;
  void *v39;
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;
  uint64_t v43;
  UIMenuElementSize preferredElementSize;
  Swift::String v45;
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;
  Swift::String v50;
  Swift::String v51;
  Swift::String v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;
  Swift::String v56;
  Swift::String v57;
  Swift::String v58;
  Swift::String v59;
  Swift::String v60;
  Swift::String v61;
  Swift::String v62;
  void *v63;
  Swift::String v64;
  Swift::String v65;
  Swift::String v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  Swift::String v70;
  Swift::String v71;
  Swift::String v72;
  Swift::String v73;
  Swift::String v74;
  Swift::String v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  Swift::String v79;
  Swift::String v80;
  Swift::String v81;
  uint64_t v82;
  UIMenuElementSize v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  Class v91;
  Swift::OpaquePointer children;
  Swift::OpaquePointer childrena;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  Class isa;
  void *v101;
  void *_;
  id _a;
  uint64_t __8;
  objc_class *__8a;
  id v106;
  id v107;
  id v108;
  id v109;
  void *v110;
  id v111;
  void *v112;
  id v113;
  __int128 v114;
  __int128 v115;
  UIImage_optional v116;
  UIImage_optional v117;

  v0._countAndFlagsBits = 0xD000000000000030;
  v0._object = (void *)0x800000010057CF70;
  v1._countAndFlagsBits = 0x6574656C6544;
  v1._object = (void *)0xE600000000000000;
  v2 = TTRLocalizedString(_:comment:)(v1, v0);
  sub_100005ED8(0, &qword_100640F50, UIKeyCommand_ptr);
  v3 = (uint64_t *)UIKeyCommand.inputBackspace.unsafeMutableAddressor();
  v4 = *v3;
  v5 = v3[1];
  v114 = 0u;
  v115 = 0u;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v2._object);
  v112 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v2._countAndFlagsBits, v2._object, 0, "deleteReminderAction:", v4, v5, 0, &v114, _swiftEmptyArrayStorage, v2._countAndFlagsBits, v2._object, 0, 0);
  v6._countAndFlagsBits = 0xD000000000000046;
  v6._object = (void *)0x800000010057CFB0;
  v7._countAndFlagsBits = 0x7961646F54;
  v7._object = (void *)0xE500000000000000;
  v8 = TTRLocalizedString(_:comment:)(v7, v6);
  v114 = 0u;
  v115 = 0u;
  v9._countAndFlagsBits = 0xD00000000000003ELL;
  v9._object = (void *)0x8000000100566E00;
  v10._countAndFlagsBits = 0x65754420656B614DLL;
  v10._object = (void *)0xEE007961646F5420;
  v11 = TTRLocalizedString(_:comment:)(v10, v9);
  v110 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v8._countAndFlagsBits, v8._object, 0, "setReminderDueDateToTodayAction:", 84, 0xE100000000000000, 0x100000, &v114, _swiftEmptyArrayStorage, v11._countAndFlagsBits, v11._object, 0, 0);
  v12._countAndFlagsBits = 0xD000000000000049;
  v12._object = (void *)0x800000010057D000;
  v13._countAndFlagsBits = 0x776F72726F6D6F54;
  v13._object = (void *)0xE800000000000000;
  v14 = TTRLocalizedString(_:comment:)(v13, v12);
  v114 = 0u;
  v115 = 0u;
  v15._countAndFlagsBits = 0xD000000000000011;
  v16._countAndFlagsBits = 0xD000000000000041;
  v15._object = (void *)0x8000000100566D90;
  v16._object = (void *)0x8000000100566DB0;
  v17 = TTRLocalizedString(_:comment:)(v15, v16);
  v18 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v14._countAndFlagsBits, v14._object, 0, "setReminderDueDateToTomorrowAction:", 84, 0xE100000000000000, 1572864, &v114, _swiftEmptyArrayStorage, v17._countAndFlagsBits, v17._object, 0, 0);
  v19._countAndFlagsBits = 0x646E656B656557;
  v19._object = (void *)0xE700000000000000;
  v20._countAndFlagsBits = 0xD00000000000004DLL;
  v20._object = (void *)0x800000010057D050;
  v21 = TTRLocalizedString(_:comment:)(v19, v20);
  v114 = 0u;
  v115 = 0u;
  v22._countAndFlagsBits = 0xD000000000000015;
  v23._countAndFlagsBits = 0xD000000000000045;
  v22._object = (void *)0x8000000100566D20;
  v23._object = (void *)0x8000000100566D40;
  v24 = TTRLocalizedString(_:comment:)(v22, v23);
  v25 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v21._countAndFlagsBits, v21._object, 0, "setReminderDueDateToWeekendAction:", 75, 0xE100000000000000, 0x100000, &v114, _swiftEmptyArrayStorage, v24._countAndFlagsBits, v24._object, 0, 0);
  v26._countAndFlagsBits = 0x656557207478654ELL;
  v26._object = (void *)0xE90000000000006BLL;
  v27._countAndFlagsBits = 0xD00000000000004DLL;
  v27._object = (void *)0x800000010057D050;
  v28 = TTRLocalizedString(_:comment:)(v26, v27);
  v114 = 0u;
  v115 = 0u;
  v29._countAndFlagsBits = 0xD000000000000012;
  v30._countAndFlagsBits = 0xD000000000000042;
  v29._object = (void *)0x8000000100566C40;
  v30._object = (void *)0x8000000100566C60;
  v31 = TTRLocalizedString(_:comment:)(v29, v30);
  v32 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v28._countAndFlagsBits, v28._object, 0, "setReminderDueDateToNextWeekAction:", 75, 0xE100000000000000, 1572864, &v114, _swiftEmptyArrayStorage, v31._countAndFlagsBits, v31._object, 0, 0);
  v33._countAndFlagsBits = 0xD000000000000060;
  v34._object = (void *)0x800000010057D0A0;
  v33._object = (void *)0x800000010057D0C0;
  v34._countAndFlagsBits = 0xD000000000000019;
  v35 = TTRLocalizedString(_:comment:)(v34, v33);
  v114 = 0u;
  v115 = 0u;
  v36._countAndFlagsBits = 0xD000000000000058;
  v37._object = (void *)0x800000010057D130;
  v36._object = (void *)0x800000010057D150;
  v37._countAndFlagsBits = 0xD000000000000019;
  v38 = TTRLocalizedString(_:comment:)(v37, v36);
  v39 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v35._countAndFlagsBits, v35._object, 0, "postponeAllOverdueToTodayAction:", 84, 0xE100000000000000, 1310720, &v114, _swiftEmptyArrayStorage, v38._countAndFlagsBits, v38._object, 0, 0);
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v40._countAndFlagsBits = 0xD00000000000001FLL;
  v41._object = (void *)0x800000010057D1B0;
  v40._object = (void *)0x800000010057D1D0;
  v41._countAndFlagsBits = 0xD000000000000010;
  v42 = TTRLocalizedString(_:comment:)(v41, v40);
  __8 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v43 = swift_allocObject(__8, 72, 7);
  *(_OWORD *)(v43 + 16) = xmmword_100525680;
  *(_QWORD *)(v43 + 32) = v110;
  *(_QWORD *)(v43 + 40) = v18;
  *(_QWORD *)(v43 + 48) = v25;
  *(_QWORD *)(v43 + 56) = v32;
  *(_QWORD *)(v43 + 64) = v39;
  *(_QWORD *)&v114 = v43;
  specialized Array._endMutation()(v43);
  preferredElementSize = (uint64_t)v114;
  v111 = v110;
  v109 = v18;
  v108 = v25;
  v107 = v32;
  v106 = v39;
  v116.value.super.isa = 0;
  v116.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v42, (Swift::String_optional)0, v116, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, children).super.super.isa;
  v45._countAndFlagsBits = 0xD000000000000032;
  v46._object = (void *)0x8000000100567830;
  v45._object = (void *)0x8000000100571950;
  v46._countAndFlagsBits = 0xD000000000000011;
  v47 = TTRLocalizedString(_:comment:)(v46, v45);
  v114 = 0u;
  v115 = 0u;
  swift_bridgeObjectRetain(v47._object);
  _ = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v47._countAndFlagsBits, v47._object, 0, "toggleReminderCompletionStateAction:", 67, 0xE100000000000000, 1179648, &v114, _swiftEmptyArrayStorage, v47._countAndFlagsBits, v47._object, 0, 0);
  v48._countAndFlagsBits = 0xD00000000000002DLL;
  v48._object = (void *)0x800000010057D1F0;
  v49._countAndFlagsBits = 0x5220746E65646E49;
  v49._object = (void *)0xEF7265646E696D65;
  v50 = TTRLocalizedString(_:comment:)(v49, v48);
  v114 = 0u;
  v115 = 0u;
  swift_bridgeObjectRetain(v50._object);
  v101 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v50._countAndFlagsBits, v50._object, 0, "indentSelectedReminderAction:", 93, 0xE100000000000000, 0x100000, &v114, _swiftEmptyArrayStorage, v50._countAndFlagsBits, v50._object, 0, 0);
  v51._countAndFlagsBits = 0xD00000000000002FLL;
  v52._object = (void *)0x8000000100571830;
  v51._object = (void *)0x800000010057D220;
  v52._countAndFlagsBits = 0xD000000000000010;
  v53 = TTRLocalizedString(_:comment:)(v52, v51);
  v114 = 0u;
  v115 = 0u;
  swift_bridgeObjectRetain(v53._object);
  v99 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v53._countAndFlagsBits, v53._object, 0, "outdentSelectedReminderAction:", 91, 0xE100000000000000, 0x100000, &v114, _swiftEmptyArrayStorage, v53._countAndFlagsBits, v53._object, 0, 0);
  v54._countAndFlagsBits = 0xD000000000000025;
  v54._object = (void *)0x80000001005717D0;
  v55._countAndFlagsBits = 1734437958;
  v55._object = (void *)0xE400000000000000;
  v56 = TTRLocalizedString(_:comment:)(v55, v54);
  v114 = 0u;
  v115 = 0u;
  swift_bridgeObjectRetain(v56._object);
  v98 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v56._countAndFlagsBits, v56._object, 0, "toggleFlaggedForSelectedReminderAction:", 70, 0xE100000000000000, 1179648, &v114, _swiftEmptyArrayStorage, v56._countAndFlagsBits, v56._object, 0, 0);
  v57._object = (void *)0x800000010057D250;
  v58._countAndFlagsBits = 0x67615420646441;
  v58._object = (void *)0xE700000000000000;
  v57._countAndFlagsBits = 0xD000000000000037;
  v59 = TTRLocalizedString(_:comment:)(v58, v57);
  v114 = 0u;
  v115 = 0u;
  swift_bridgeObjectRetain(v59._object);
  v97 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v59._countAndFlagsBits, v59._object, 0, "addStructuredHashtagForSelectedReminderAction:", 84, 0xE100000000000000, 1179648, &v114, _swiftEmptyArrayStorage, v59._countAndFlagsBits, v59._object, 0, 0);
  v60._countAndFlagsBits = 0xD000000000000024;
  v60._object = (void *)0x800000010057D290;
  v61._countAndFlagsBits = 1684957510;
  v61._object = (void *)0xE400000000000000;
  v62 = TTRLocalizedString(_:comment:)(v61, v60);
  v114 = 0u;
  v115 = 0u;
  swift_bridgeObjectRetain(v62._object);
  v63 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v62._countAndFlagsBits, v62._object, 0, "beginSearchAction:", 70, 0xE100000000000000, 0x100000, &v114, _swiftEmptyArrayStorage, v62._countAndFlagsBits, v62._object, 0, 0);
  v64._countAndFlagsBits = 0xD00000000000003FLL;
  v64._object = (void *)0x800000010057D2C0;
  v65._countAndFlagsBits = 0x6445207472617453;
  v65._object = (void *)0xED0000676E697469;
  v66 = TTRLocalizedString(_:comment:)(v65, v64);
  v67 = (uint64_t *)UIKeyCommand.inputReturn.unsafeMutableAddressor();
  v68 = *v67;
  v69 = v67[1];
  v114 = 0u;
  v115 = 0u;
  swift_bridgeObjectRetain(v69);
  v70._object = (void *)0x800000010057D300;
  v71._countAndFlagsBits = 0x6445207472617453;
  v71._object = (void *)0xED0000676E697469;
  v70._countAndFlagsBits = 0xD000000000000037;
  v72 = TTRLocalizedString(_:comment:)(v71, v70);
  v96 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v66._countAndFlagsBits, v66._object, 0, "startEditingReminderAction:", v68, v69, 0x100000, &v114, _swiftEmptyArrayStorage, v72._countAndFlagsBits, v72._object, 0, 0);
  v73._countAndFlagsBits = 0xD00000000000002CLL;
  v73._object = (void *)0x800000010057D340;
  v74._countAndFlagsBits = 0x7469644520646E45;
  v74._object = (void *)0xEB00000000676E69;
  v75 = TTRLocalizedString(_:comment:)(v74, v73);
  v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputEscape);
  v78 = v77;
  v114 = 0u;
  v115 = 0u;
  swift_bridgeObjectRetain(v75._object);
  v95 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v75._countAndFlagsBits, v75._object, 0, "endEditingReminderAction:", v76, v78, 0, &v114, _swiftEmptyArrayStorage, v75._countAndFlagsBits, v75._object, 0, 0);
  v79._countAndFlagsBits = 0xD000000000000013;
  v79._object = (void *)0x800000010057D370;
  v80._countAndFlagsBits = 1953064005;
  v80._object = (void *)0xE400000000000000;
  v81 = TTRLocalizedString(_:comment:)(v80, v79);
  v82 = swift_allocObject(__8, 112, 7);
  *(_OWORD *)(v82 + 16) = xmmword_10053AFD0;
  *(_QWORD *)(v82 + 32) = v112;
  *(_QWORD *)(v82 + 40) = isa;
  *(_QWORD *)(v82 + 48) = _;
  *(_QWORD *)(v82 + 56) = v101;
  *(_QWORD *)(v82 + 64) = v99;
  *(_QWORD *)(v82 + 72) = v98;
  *(_QWORD *)(v82 + 80) = v97;
  *(_QWORD *)(v82 + 88) = v63;
  *(_QWORD *)(v82 + 96) = v96;
  *(_QWORD *)(v82 + 104) = v95;
  *(_QWORD *)&v114 = v82;
  specialized Array._endMutation()(v82);
  v83 = (uint64_t)v114;
  v113 = v112;
  __8a = isa;
  _a = _;
  v84 = v101;
  v85 = v99;
  v86 = v98;
  v87 = v97;
  v88 = v63;
  v89 = v96;
  v90 = v95;
  v117.value.super.isa = 0;
  v117.is_nil = 0;
  v91 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v81, (Swift::String_optional)0, v117, 0, 0xFFFFFFFFFFFFFFFFLL, v83, childrena).super.super.isa;

  return v91;
}

UIMenu sub_1005005FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  unint64_t v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  uint64_t v38;
  UIMenuElementSize v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Swift::String v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;
  Swift::String v50;
  Swift::String v51;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  Swift::String v60;
  Swift::String v61;
  Swift::String v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  Swift::String v73;
  Swift::String v74;
  Swift::String v75;
  uint64_t v76;
  Swift::String v77;
  Swift::String v78;
  Swift::String v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v86;
  uint64_t v87;
  Swift::OpaquePointer v88;
  Swift::OpaquePointer v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  void *v95;
  __int128 v96;
  const char *v97;
  uint64_t v98;
  Class isa;
  uint64_t v100;
  char v101[96];
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  UIImage_optional v105;
  UIImage_optional v106;

  v93 = type metadata accessor for URL(0);
  v92 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v91 = (char *)&v90 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (uint64_t)_swiftEmptyArrayStorage;
  v104 = (uint64_t)_swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4 >= 9)
    v4 = 9;
  isa = (Class)v4;
  if (v4)
  {
    v5 = sub_100005ED8(0, &qword_100640F50, UIKeyCommand_ptr);
    v97 = "showListAction:";
    v98 = v5;
    swift_bridgeObjectRetain(a1);
    v6 = 0;
    v90 = a1;
    v7 = (char *)(a1 + 56);
    v96 = xmmword_1005201E0;
    v95 = (void *)0x800000010057CDA0;
    v94 = xmmword_100520250;
    do
    {
      v9 = *((_QWORD *)v7 - 3);
      v8 = *((_QWORD *)v7 - 2);
      v10 = (void *)*((_QWORD *)v7 - 1);
      v11 = *v7;
      v6 = (objc_class *)((char *)v6 + 1);
      *(_QWORD *)&v102 = v6;
      swift_bridgeObjectRetain_n(v8, 2);
      sub_100076D78(v10, v11);
      v100 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v13 = v12;
      if ((v11 & 1) == 0)
        __asm { BR              X9 }
      v14 = objc_msgSend(v10, "urlRepresentation");
      v15 = v91;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v14);

      v17 = URL.absoluteString.getter(v16);
      v19 = v18;
      sub_100076D1C(v10, 1);
      (*(void (**)(char *, uint64_t))(v92 + 8))(v15, v93);
      v20 = sub_10002A750(&qword_10064CB90);
      inited = swift_initStackObject(v20, v101);
      *(_OWORD *)(inited + 16) = v96;
      *(_QWORD *)(inited + 32) = 0x656C746974;
      *(_QWORD *)(inited + 40) = 0xE500000000000000;
      *(_QWORD *)(inited + 48) = v9;
      *(_QWORD *)(inited + 56) = v8;
      *(_QWORD *)(inited + 64) = 0x676E697274536469;
      *(_QWORD *)(inited + 72) = 0xE800000000000000;
      *(_QWORD *)(inited + 80) = v17;
      *(_QWORD *)(inited + 88) = v19;
      swift_bridgeObjectRetain(v8);
      v22 = sub_100350F50(inited);
      *((_QWORD *)&v103 + 1) = sub_10002A750(&qword_100640F58);
      *(_QWORD *)&v102 = v22;
      v23._countAndFlagsBits = 0xD00000000000002ELL;
      v24._countAndFlagsBits = 0x4025206F74206F47;
      v24._object = (void *)0xED00007473694C20;
      v23._object = v95;
      v25 = TTRLocalizedString(_:comment:)(v24, v23);
      v26 = sub_10002A750((uint64_t *)&unk_100640FD0);
      v27 = swift_allocObject(v26, 72, 7);
      *(_OWORD *)(v27 + 16) = v94;
      *(_QWORD *)(v27 + 56) = &type metadata for String;
      *(_QWORD *)(v27 + 64) = sub_1000770A4();
      *(_QWORD *)(v27 + 32) = v9;
      *(_QWORD *)(v27 + 40) = v8;
      swift_bridgeObjectRetain(v8);
      v28 = String.init(format:_:)(v25._countAndFlagsBits, v25._object, v27);
      v30 = v29;
      swift_bridgeObjectRelease(v25._object);
      v31 = (id)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v9, v8, 0, v97, v100, v13, 0x100000, &v102, _swiftEmptyArrayStorage, v28, v30, 0, 0);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
      v33 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v32 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v33 >= v32 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
      v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
      specialized Array._endMutation()(v34);
      swift_bridgeObjectRelease(v8);

      sub_100076D1C(v10, v11);
      v7 += 32;
    }
    while (isa != v6);
    swift_bridgeObjectRelease(v90);
    v3 = v104;
  }
  v35._countAndFlagsBits = 0xD000000000000014;
  v35._object = (void *)0x800000010057CDD0;
  v36._countAndFlagsBits = 0x6F54206F47;
  v36._object = (void *)0xE500000000000000;
  v37 = TTRLocalizedString(_:comment:)(v36, v35);
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v86 = v3;
    else
      v86 = v3 & 0xFFFFFFFFFFFFFF8;
    v87 = sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
    swift_bridgeObjectRetain(v3);
    v39 = _bridgeCocoaArray<A>(_:)(v86, v87);
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    swift_bridgeObjectRetain(v3);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v38);
    sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
    v39 = v3;
  }
  swift_bridgeObjectRelease(v3);
  v100 = sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v105.value.super.isa = 0;
  v105.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v37, (Swift::String_optional)0, v105, 0, 0xFFFFFFFFFFFFFFFFLL, v39, v88).super.super.isa;
  v40 = static TTRLocalizableStrings.RemindersList.showCompletedRemindersButtonText.getter();
  v42 = v41;
  sub_100005ED8(0, &qword_100640F50, UIKeyCommand_ptr);
  v102 = 0u;
  v103 = 0u;
  swift_bridgeObjectRetain(v42);
  v98 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v40, v42, 0, "toggleShowCompletedAction:", 72, 0xE100000000000000, 1179648, &v102, _swiftEmptyArrayStorage, v40, v42, 0, 0);
  v43._object = (void *)0x800000010057CDF0;
  v44._object = (void *)0x800000010057CE10;
  v43._countAndFlagsBits = 0xD000000000000011;
  v44._countAndFlagsBits = 0xD000000000000023;
  v45 = TTRLocalizedString(_:comment:)(v43, v44);
  v102 = 0u;
  v103 = 0u;
  swift_bridgeObjectRetain(v45._object);
  v97 = (const char *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v45._countAndFlagsBits, v45._object, 0, "expandAllItemsAction:", 69, 0xE100000000000000, 0x100000, &v102, _swiftEmptyArrayStorage, v45._countAndFlagsBits, v45._object, 0, 0);
  v46._object = (void *)0x800000010057CE40;
  v47._object = (void *)0x800000010057CE60;
  v46._countAndFlagsBits = 0xD000000000000011;
  v47._countAndFlagsBits = 0xD000000000000023;
  v48 = TTRLocalizedString(_:comment:)(v46, v47);
  v102 = 0u;
  v103 = 0u;
  swift_bridgeObjectRetain(v48._object);
  *(_QWORD *)&v96 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v48._countAndFlagsBits, v48._object, 0, "collapseAllItemsAction:", 69, 0xE100000000000000, 1179648, &v102, _swiftEmptyArrayStorage, v48._countAndFlagsBits, v48._object, 0, 0);
  v49._object = (void *)0x800000010057CE90;
  v50._countAndFlagsBits = 0x62755320776F6853;
  v50._object = (void *)0xED0000736B736174;
  v49._countAndFlagsBits = 0xD000000000000031;
  v51 = TTRLocalizedString(_:comment:)(v50, v49);
  countAndFlagsBits = v51._countAndFlagsBits;
  object = v51._object;
  v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputRightArrow);
  v56 = v55;
  v102 = 0u;
  v103 = 0u;
  swift_bridgeObjectRetain_n(v51._object, 2);
  *(_QWORD *)&v94 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(countAndFlagsBits, object, 0, "expandReminderSubtasksWithArrowKeyAction:", v54, v56, 0, &v102, _swiftEmptyArrayStorage, countAndFlagsBits, object, 0, 0);
  objc_msgSend((id)v94, "setWantsPriorityOverSystemBehavior:", 1);
  v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputRightArrow);
  v59 = v58;
  v102 = 0u;
  v103 = 0u;
  swift_bridgeObjectRetain(v51._object);
  v95 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(countAndFlagsBits, object, 0, "expandReminderSubtasksAlternativeShortcutAction:", v57, v59, 0x40000, &v102, _swiftEmptyArrayStorage, countAndFlagsBits, object, 0, 0);
  v60._object = (void *)0x800000010057CED0;
  v61._countAndFlagsBits = 0x6275532065646948;
  v61._object = (void *)0xED0000736B736174;
  v60._countAndFlagsBits = 0xD000000000000031;
  v62 = TTRLocalizedString(_:comment:)(v61, v60);
  v63 = v62._countAndFlagsBits;
  v64 = v62._object;
  v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputLeftArrow);
  v67 = v66;
  v102 = 0u;
  v103 = 0u;
  swift_bridgeObjectRetain_n(v62._object, 2);
  v68 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v63, v64, 0, "collapseReminderSubtasksWithArrowKeyAction:", v65, v67, 0, &v102, _swiftEmptyArrayStorage, v63, v64, 0, 0);
  objc_msgSend(v68, "setWantsPriorityOverSystemBehavior:", 1);
  v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputLeftArrow);
  v71 = v70;
  v102 = 0u;
  v103 = 0u;
  swift_bridgeObjectRetain(v62._object);
  v72 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v63, v64, 0, "collapseReminderSubtasksAlternativeShortcutAction:", v69, v71, 0x40000, &v102, _swiftEmptyArrayStorage, v63, v64, 0, 0);
  v73._countAndFlagsBits = 0xD000000000000033;
  v74._object = (void *)0xE90000000000006FLL;
  v73._object = (void *)0x800000010057CF10;
  v74._countAndFlagsBits = 0x666E4920776F6853;
  v75 = TTRLocalizedString(_:comment:)(v74, v73);
  v102 = 0u;
  v103 = 0u;
  swift_bridgeObjectRetain(v75._object);
  v76 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v75._countAndFlagsBits, v75._object, 0, "showReminderInfoAction:", 73, 0xE100000000000000, 0x100000, &v102, _swiftEmptyArrayStorage, v75._countAndFlagsBits, v75._object, 0, 0);
  v77._countAndFlagsBits = 0xD000000000000013;
  v77._object = (void *)0x800000010057CF50;
  v78._countAndFlagsBits = 2003134806;
  v78._object = (void *)0xE400000000000000;
  v79 = TTRLocalizedString(_:comment:)(v78, v77);
  v80 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v81 = swift_allocObject(v80, 104, 7);
  *(_OWORD *)(v81 + 16) = xmmword_10053AFE0;
  v82 = v98;
  *(_QWORD *)(v81 + 32) = isa;
  *(_QWORD *)(v81 + 40) = v82;
  v83 = v96;
  *(_QWORD *)(v81 + 48) = v97;
  *(_QWORD *)(v81 + 56) = v83;
  v84 = v95;
  *(_QWORD *)(v81 + 64) = v94;
  *(_QWORD *)(v81 + 72) = v84;
  *(_QWORD *)(v81 + 80) = v68;
  *(_QWORD *)(v81 + 88) = v72;
  *(_QWORD *)(v81 + 96) = v76;
  *(_QWORD *)&v102 = v81;
  specialized Array._endMutation()(v81);
  v106.value.super.isa = 0;
  v106.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v79, (Swift::String_optional)0, v106, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v102, v89);
}

Class sub_100501134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  UIMenuElementSize v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  UIMenuElementSize preferredElementSize;
  Swift::String v20;
  Class isa;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  Swift::OpaquePointer children;
  __int128 v29;
  __int128 v30;
  UIImage_optional v31;

  v0 = static TTRLocalizableStrings.ReminderNoteEditingStyles.bulletedListMenuItem.getter();
  v2 = v1;
  sub_100005ED8(0, &qword_100640F50, UIKeyCommand_ptr);
  v29 = 0u;
  v30 = 0u;
  swift_bridgeObjectRetain(v2);
  v3 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v0, v2, 0, "bulletedListStyleAction:", 55, 0xE100000000000000, 1179648, &v29, _swiftEmptyArrayStorage, v0, v2, 0, 0);
  v4 = static TTRLocalizableStrings.ReminderNoteEditingStyles.dashedListMenuItem.getter();
  v6 = v5;
  v29 = 0u;
  v30 = 0u;
  swift_bridgeObjectRetain(v5);
  v7 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v4, v6, 0, "dashedListStyleAction:", 56, 0xE100000000000000, 1179648, &v29, _swiftEmptyArrayStorage, v4, v6, 0, 0);
  v8 = static TTRLocalizableStrings.ReminderNoteEditingStyles.orderedListMenuItem.getter();
  v10 = v9;
  v29 = 0u;
  v30 = 0u;
  swift_bridgeObjectRetain(v9);
  v11 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v8, v10, 0, "numberedListStyleAction:", 57, 0xE100000000000000, 1179648, &v29, _swiftEmptyArrayStorage, v8, v10, 0, 0);
  v12 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v13 = swift_allocObject(v12, 56, 7);
  *(_OWORD *)(v13 + 16) = xmmword_100521130;
  *(_QWORD *)(v13 + 32) = v3;
  *(_QWORD *)(v13 + 40) = v7;
  *(_QWORD *)(v13 + 48) = v11;
  *(_QWORD *)&v29 = v13;
  specialized Array._endMutation()(v13);
  v14 = (uint64_t)v29;
  if ((unint64_t)v29 >> 62)
  {
    if ((uint64_t)v29 < 0)
      v23 = v29;
    else
      v23 = v29 & 0xFFFFFFFFFFFFFF8;
    v24 = sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
    v25 = v3;
    v26 = v7;
    v27 = v11;
    swift_bridgeObjectRetain(v14);
    preferredElementSize = _bridgeCocoaArray<A>(_:)(v23, v24);
    swift_bridgeObjectRelease(v14);
  }
  else
  {
    v15 = v3;
    v16 = v7;
    v17 = v11;
    swift_bridgeObjectRetain(v14);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v18);
    sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
    preferredElementSize = v14;
  }
  swift_bridgeObjectRelease(v14);
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v31.value.super.isa = 0;
  v31.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v20, (Swift::String_optional)0, v31, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, children).super.super.isa;

  return isa;
}

ValueMetadata *type metadata accessor for TTRIKeyboardShortcuts()
{
  return &type metadata for TTRIKeyboardShortcuts;
}

void destroy for TTRIKeyboardShortcuts.ListNavigationShortcutItem(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  sub_100076D1C(*(id *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for TTRIKeyboardShortcuts.ListNavigationShortcutItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  char v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain(v3);
  sub_100076D78(v4, v5);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  return a1;
}

uint64_t assignWithCopy for TTRIKeyboardShortcuts.ListNavigationShortcutItem(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  char v8;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  v4 = a2[1];
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = (void *)v2[2];
  LOBYTE(v2) = *((_BYTE *)v2 + 24);
  sub_100076D78(v6, (char)v2);
  v7 = *(void **)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = (_BYTE)v2;
  sub_100076D1C(v7, v8);
  return a1;
}

uint64_t assignWithTake for TTRIKeyboardShortcuts.ListNavigationShortcutItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  char v8;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_BYTE *)(a2 + 24);
  v7 = *(void **)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v6;
  sub_100076D1C(v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIKeyboardShortcuts.ListNavigationShortcutItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIKeyboardShortcuts.ListNavigationShortcutItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIKeyboardShortcuts.ListNavigationShortcutItem()
{
  return &type metadata for TTRIKeyboardShortcuts.ListNavigationShortcutItem;
}

uint64_t initializeBufferWithCopyOfBuffer for TTRIKeyboardShortcuts.ListNavigationShortcutItem.ListIdentifier(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_100076D78(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for TTRIKeyboardShortcuts.ListNavigationShortcutItem.ListIdentifier(uint64_t a1)
{
  sub_100076D1C(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for TTRIKeyboardShortcuts.ListNavigationShortcutItem.ListIdentifier(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_100076D78(*(id *)a2, v4);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_100076D1C(v5, v6);
  return a1;
}

uint64_t assignWithTake for TTRIKeyboardShortcuts.ListNavigationShortcutItem.ListIdentifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_100076D1C(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for TTRIKeyboardShortcuts.ListNavigationShortcutItem.ListIdentifier()
{
  return &type metadata for TTRIKeyboardShortcuts.ListNavigationShortcutItem.ListIdentifier;
}

void sub_1005016B0()
{
  qword_100673A58 = 0x4020000000000000;
}

void sub_1005016C0()
{
  qword_100673A60 = 0x4000000000000000;
}

double sub_1005016D0()
{
  double result;

  if (qword_10063D8C0 != -1)
    swift_once(&qword_10063D8C0, sub_100501724);
  result = *(double *)&qword_100673A88;
  qword_100673A70 = 0;
  qword_100673A78 = 0;
  qword_100673A68 = 0;
  qword_100673A80 = qword_100673A88;
  return result;
}

void sub_100501724()
{
  qword_100673A88 = 0x4022000000000000;
}

void sub_100501734(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  __n128 v50;
  char v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD **v55;
  char *v56;
  __n128 v57;
  uint64_t v58;
  char *v59;
  char *v60;
  __n128 v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD **v71;
  _QWORD **v72;
  _QWORD **v73;
  char v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD **v80;
  char *v81;
  char *v82;
  _QWORD **v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(uint64_t, uint64_t);
  _BYTE v94[24];
  char v95[24];
  char v96[32];

  v92 = a1;
  v2 = sub_10002A750((uint64_t *)&unk_100665210);
  __chkstk_darwin(v2);
  v89 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v80 - v5;
  __chkstk_darwin(v7);
  v84 = (uint64_t)&v80 - v8;
  v9 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v85 = *(_QWORD *)(v9 - 8);
  v86 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750(&qword_100644600);
  __chkstk_darwin(v12);
  v87 = (uint64_t *)((char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  v16 = (char *)&v80 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v80 - v18;
  v20 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v80 - v25;
  v90 = v1;
  v27 = (uint64_t)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_viewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_viewModel], v96, 0, 0);
  v28 = type metadata accessor for TTRRemindersListViewModel.HashtagsState(0);
  v29 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48);
  v91 = v28;
  v30 = v29(v27, 1);
  v93 = v29;
  v88 = v27;
  if (!v30)
  {
    v81 = v16;
    v80 = (_QWORD **)v23;
    v82 = v11;
    v83 = (_QWORD **)v26;
    v32 = v85;
    v33 = v86;
    sub_10000735C(v27, (uint64_t)v19, &qword_100644600);
    v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    v31 = v21;
    if (v34(v19, 1, v20) == 1)
      goto LABEL_4;
    v87 = (uint64_t *)v34;
    v55 = v83;
    sub_100505C3C((uint64_t)v19, (uint64_t)v83);
    v39 = v90;
    v56 = &v90[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_internalSelection];
    v57 = swift_beginAccess(&v90[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_internalSelection], v95, 0, 0);
    v58 = v32;
    v59 = v82;
    (*(void (**)(char *, char *, uint64_t, __n128))(v32 + 16))(v82, v56, v33, v57);
    v60 = (char *)v55 + *(int *)(v20 + 20);
    v61 = swift_beginAccess(v56, v94, 33, 0);
    v62 = v56;
    v29 = v93;
    (*(void (**)(char *, char *, uint64_t, __n128))(v32 + 24))(v62, v60, v33, v61);
    swift_endAccess(v94);
    v63 = v84;
    sub_10000735C(v92, v84, (uint64_t *)&unk_100665210);
    v36 = v91;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v29)(v63, 1, v91) == 1)
    {
      sub_1000073A0(v63, (uint64_t *)&unk_100665210);
      v64 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
      v65 = (uint64_t)v81;
      v64(v81, 1, 1, v20);
      v38 = (uint64_t)v89;
      goto LABEL_31;
    }
    v65 = (uint64_t)v81;
    sub_10000735C(v63, (uint64_t)v81, &qword_100644600);
    sub_10001F544(v63, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.HashtagsState);
    v68 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v87)(v65, 1, v20);
    v38 = (uint64_t)v89;
    if (v68 == 1)
    {
LABEL_31:
      sub_1000073A0(v65, &qword_100644600);
      v69 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags;
      v70 = *(_QWORD *)&v39[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags];
      *(_QWORD *)&v39[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags] = v70 | 1;
      v40 = v88;
      v71 = v83;
      if ((v70 | 1) != v70)
      {
        objc_msgSend(v39, "setNeedsLayout");
        if ((v39[v69] & 5) != 0)
          objc_msgSend(v39, "invalidateIntrinsicContentSize");
      }
      (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v33);
      sub_10001F544((uint64_t)v71, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState);
      v35 = v92;
      goto LABEL_8;
    }
    v72 = v80;
    sub_100505C3C(v65, (uint64_t)v80);
    v73 = v83;
    v74 = sub_100096CC0(*v83, *v72);
    v40 = v88;
    if ((v74 & 1) != 0)
    {
      v75 = sub_1000175C8((unint64_t *)&qword_100640E30, (uint64_t (*)(uint64_t))&type metadata accessor for REMHashtagLabelSpecifier, (uint64_t)&protocol conformance descriptor for REMHashtagLabelSpecifier);
      v76 = dispatch thunk of static Equatable.== infix(_:_:)(v60, v59, v33, v75);
      v35 = v92;
      v29 = v93;
      if ((v76 & 1) != 0)
        goto LABEL_42;
      v77 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags;
      v78 = *(_QWORD *)&v39[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags];
      *(_QWORD *)&v39[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags] = v78 | 2;
      if ((v78 | 2) == v78)
        goto LABEL_42;
    }
    else
    {
      v77 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags;
      v79 = *(_QWORD *)&v39[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags];
      *(_QWORD *)&v39[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags] = v79 | 1;
      v35 = v92;
      if ((v79 | 1) == v79)
      {
LABEL_42:
        sub_10001F544((uint64_t)v80, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState);
        (*(void (**)(char *, uint64_t))(v58 + 8))(v82, v33);
        sub_10001F544((uint64_t)v73, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState);
        goto LABEL_8;
      }
    }
    objc_msgSend(v39, "setNeedsLayout");
    if ((v39[v77] & 5) != 0)
      objc_msgSend(v39, "invalidateIntrinsicContentSize");
    goto LABEL_42;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v19, 1, 1, v20);
  v31 = v21;
LABEL_4:
  sub_1000073A0((uint64_t)v19, &qword_100644600);
  v35 = v92;
  sub_10000735C(v92, (uint64_t)v6, (uint64_t *)&unk_100665210);
  v36 = v91;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v29)(v6, 1, v91) == 1)
  {
    sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100665210);
    v37 = v87;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v87, 1, 1, v20);
LABEL_7:
    sub_1000073A0((uint64_t)v37, &qword_100644600);
    v38 = (uint64_t)v89;
    v39 = v90;
    v40 = v88;
    goto LABEL_8;
  }
  v37 = v87;
  sub_10000735C((uint64_t)v6, (uint64_t)v87, &qword_100644600);
  sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.HashtagsState);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v31 + 48))(v37, 1, v20) == 1)
    goto LABEL_7;
  sub_1000073A0((uint64_t)v37, &qword_100644600);
  v53 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags;
  v38 = (uint64_t)v89;
  v39 = v90;
  v54 = *(_QWORD *)&v90[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags];
  *(_QWORD *)&v90[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags] = v54 | 1;
  v40 = v88;
  if ((v54 | 1) != v54)
  {
    objc_msgSend(v39, "setNeedsLayout");
    if ((v39[v53] & 5) != 0)
      objc_msgSend(v39, "invalidateIntrinsicContentSize");
  }
LABEL_8:
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v29)(v40, 1, v36))
  {
    v41 = 0;
    v42 = 0;
    v43 = 0;
  }
  else
  {
    v44 = (uint64_t *)(v40 + *(int *)(v36 + 20));
    v41 = *v44;
    v42 = v44[1];
    v43 = (void *)v44[2];
    sub_100505CB4(*v44, v42, v43);
  }
  sub_10000735C(v35, v38, (uint64_t *)&unk_100665210);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v93)(v38, 1, v36) == 1)
  {
    sub_1000073A0(v38, (uint64_t *)&unk_100665210);
    if (!v42)
      return;
LABEL_18:
    swift_bridgeObjectRelease(v42);

    goto LABEL_26;
  }
  v45 = (uint64_t *)(v38 + *(int *)(v36 + 20));
  v47 = *v45;
  v46 = v45[1];
  v48 = (void *)v45[2];
  sub_100505CB4(*v45, v46, v48);
  sub_10001F544(v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.HashtagsState);
  if (v42)
  {
    if (v46)
    {
      v49 = v43;
      v50 = swift_bridgeObjectRetain(v42);
      v51 = static TTRRemindersListViewModel.HashtagSelectionDescription.__derived_struct_equals(_:_:)(v41, v42, v43, v47, v46, v48, v50);
      swift_bridgeObjectRelease(v46);

      sub_1001BDB7C(v41, v42, v43);
      *(_QWORD *)&v52 = swift_bridgeObjectRelease(v42).n128_u64[0];
      if ((v51 & 1) != 0)
        return;
      goto LABEL_26;
    }
    goto LABEL_18;
  }
  if (!v46)
    return;
  sub_1001BDB7C(v47, v46, v48);
LABEL_26:
  v66 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags;
  v67 = *(_QWORD *)&v39[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags];
  *(_QWORD *)&v39[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags] = v67 | 4;
  if ((v67 | 4) != v67)
  {
    objc_msgSend(v39, "setNeedsLayout", v52);
    if ((v39[v66] & 5) != 0)
      objc_msgSend(v39, "invalidateIntrinsicContentSize");
  }
}

id sub_100501F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  _BYTE *v4;
  objc_class *ObjectType;
  char *v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  Class isa;
  id v14;
  id v15;
  double v16;
  NSString v17;
  id v18;
  id v19;
  _QWORD *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  Class v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  _QWORD v41[4];
  objc_super v42;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType(v4, a2);
  v8 = &v4[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_delegate];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8, 0);
  v9 = &v4[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_viewModel];
  v10 = type metadata accessor for TTRRemindersListViewModel.HashtagsState(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v4[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_allowsExcludedSelection] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_selectionDescriptionLabel] = 0;
  v11 = &v4[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector];
  v11[1] = 0;
  v11[2] = 0;
  *v11 = 0;
  v12 = v4;
  static REMHashtagLabelSpecifier.labels(_:)(&_swiftEmptySetSingleton);
  *(_QWORD *)&v12[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags] = 7;
  sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend((id)objc_opt_self(NUIContainerBoxView), "containerBoxViewWithArrangedSubviews:", isa);

  objc_msgSend(v14, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v14, "setPreservesSuperviewLayoutMargins:", 0);
  objc_msgSend(v14, "setHorizontalAlignment:", 0);
  objc_msgSend(v14, "setVerticalAlignment:", 0);
  objc_msgSend(v14, "setDebugBoundingBoxesEnabled:", 0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_labelBoxView] = v14;
  v15 = v14;

  if (a3)
  {
    v17 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v16 = swift_bridgeObjectRelease(a3).n128_u64[0];
  }
  else
  {
    v17 = 0;
  }
  v42.receiver = v12;
  v42.super_class = ObjectType;
  v18 = objc_msgSendSuper2(&v42, "initWithStyle:reuseIdentifier:", a1, v17, v16);

  v19 = v18;
  v20 = objc_msgSend(v19, "containerView");
  (*(void (**)(uint64_t (*)(uint64_t), _QWORD))((swift_isaMask & *v20) + 0x60))(sub_100502470, 0);

  v21 = objc_msgSend(v19, "containerView");
  objc_msgSend(v21, "setLayoutMarginsRelativeArrangement:", 0);

  v22 = objc_msgSend(v19, "containerView");
  objc_msgSend(v22, "setPreservesSuperviewLayoutMargins:", 1);

  v23 = objc_msgSend(v19, "containerView");
  objc_msgSend(v23, "setAxis:", 1);

  v24 = objc_msgSend(v19, "containerView");
  objc_msgSend(v24, "setSpacing:", 0.0);

  v25 = objc_msgSend(v19, "containerView");
  objc_msgSend(v25, "setAlignment:", 0);

  v26 = objc_msgSend(v19, "containerView");
  objc_msgSend(v26, "setDistribution:", 0);

  v27 = objc_msgSend(v19, "containerView");
  v28 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v29 = swift_allocObject(v28, 40, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100521140;
  *(_QWORD *)(v29 + 32) = v15;
  v41[0] = v29;
  specialized Array._endMutation()(v29);
  v30 = v15;
  v31 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v27, "setArrangedSubviews:", v31, swift_bridgeObjectRelease(v41[0]).n128_f64[0]);

  v32 = objc_msgSend(v19, "containerView");
  objc_msgSend(v32, "setDelegate:", v19);

  v33 = v19;
  UITableViewCell.setSeparatorInsetType(_:)(0);

  v34 = v33;
  UITableViewCell.ttr_registerForRemindersListCellBackgroundConfiguration()();

  v41[3] = ObjectType;
  v41[0] = v34;
  v35 = v34;
  static UIAccessibility.addAccessibilityStatusChangeObserver(_:selector:)(v41, "ttrAccessibilityServicesDidChange");
  sub_100027F10(v41);
  v36 = sub_10002A750(&qword_1006415F0);
  v37 = swift_allocObject(v36, 48, 7);
  *(_OWORD *)(v37 + 16) = xmmword_100520250;
  *(_QWORD *)(v37 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v37 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  v38 = v35;
  v39 = UIView.registerForTraitChanges<A>(_:handler:)(v37, sub_100505938, 0, ObjectType);

  swift_unknownObjectRelease(v39);
  swift_bridgeObjectRelease(v37);

  return v38;
}

uint64_t sub_100502470(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v2 = TTRIMarginTransferAction.init(edgesToReceiveMargins:redirectedTarget:)(10, 0);
  v4 = v3;
  v5 = objc_opt_self(NUIContentScrollView);
  v6 = (void *)swift_dynamicCastObjCClass(a1, v5);
  if (v6)
  {
    objc_msgSend(v6, "documentView");

  }
  return v2;
}

id sub_100502558(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_class *ObjectType;
  id v4;
  objc_super v6;
  _QWORD v7[4];

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v7[3] = ObjectType;
  v7[0] = v2;
  v4 = v2;
  static UIAccessibility.removeAccessibilityStatusChangeObserver(_:)(v7);
  sub_100027F10(v7);
  v6.receiver = v4;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, "dealloc");
}

uint64_t sub_1005026BC()
{
  return type metadata accessor for TTRIRemindersListHashtagCollectionCell(0);
}

uint64_t type metadata accessor for TTRIRemindersListHashtagCollectionCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1006650A8;
  if (!qword_1006650A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIRemindersListHashtagCollectionCell);
  return result;
}

id sub_100502700(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags];
  if (v4)
  {
    *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags] = 0;
    if ((v4 & 1) != 0)
    {
      sub_1005028F8();
      if ((v4 & 2) == 0)
      {
        sub_100502C48(0);
        if ((v4 & 4) == 0)
          goto LABEL_11;
        goto LABEL_10;
      }
    }
    else if ((v4 & 2) == 0)
    {
      if ((v4 & 4) == 0)
        goto LABEL_11;
      goto LABEL_10;
    }
    sub_100502C48(0);
LABEL_10:
    sub_100502EDC();
  }
LABEL_11:
  v6.receiver = v2;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, "layoutSubviews");
}

id sub_1005027C4(double a1, double a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType(v4, a4);
  v8 = *(_QWORD *)&v4[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags];
  if (v8)
  {
    *(_QWORD *)&v4[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags] = 0;
    if ((v8 & 1) != 0)
    {
      sub_1005028F8();
      if ((v8 & 2) == 0)
      {
        sub_100502C48(0);
        if ((v8 & 4) == 0)
          goto LABEL_11;
        goto LABEL_10;
      }
    }
    else if ((v8 & 2) == 0)
    {
      if ((v8 & 4) == 0)
        goto LABEL_11;
      goto LABEL_10;
    }
    sub_100502C48(0);
LABEL_10:
    sub_100502EDC();
  }
LABEL_11:
  v10.receiver = v4;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, "sizeThatFits:", a1, a2);
}

void sub_1005028BC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;

  v4 = sub_100505940(a1);
  swift_bridgeObjectRelease(a1);
  *a2 = v4;
}

void *sub_1005028F8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v16;
  id v17;
  char *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  double v36;
  id v37;
  id v38;
  id v39;
  id v40;
  char v41[24];

  v1 = v0;
  v2 = sub_10002A750(&qword_100644600);
  __chkstk_darwin(v2);
  v4 = &v41[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v41[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = (uint64_t)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_viewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_viewModel], v41, 0, 0);
  v10 = type metadata accessor for TTRRemindersListViewModel.HashtagsState(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
LABEL_4:
    sub_1000073A0((uint64_t)v4, &qword_100644600);
LABEL_5:
    v11 = &v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector];
    v12 = *(void **)v11;
    if (*(_QWORD *)v11)
    {
      objc_msgSend(v12, "removeFromSuperview");
      v12 = *(void **)v11;
    }
    v13 = (void *)*((_QWORD *)v11 + 1);
    v14 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v11 + 1) = 0;
    *((_QWORD *)v11 + 2) = 0;
    *(_QWORD *)v11 = 0;
    return sub_100505C08(v12, v13, v14);
  }
  sub_10000735C(v9, (uint64_t)v4, &qword_100644600);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    goto LABEL_4;
  sub_100505C3C((uint64_t)v4, (uint64_t)v8);
  v16 = objc_msgSend(v1, "traitCollection");
  v17 = objc_msgSend(v16, "horizontalSizeClass");

  if (v17 != (id)1)
  {
    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState);
    goto LABEL_5;
  }
  v18 = &v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector];
  v19 = *(void **)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector];
  v20 = *(void **)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector + 8];
  v21 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector + 16];
  if (v19)
  {
    v40 = *(id *)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector];
    v22 = v20;
    v23 = v21;
  }
  else
  {
    v40 = sub_100503600(v1);
    v22 = v24;
    v23 = v25;
  }
  v26 = *(_QWORD *)v8;
  swift_bridgeObjectRetain(*(_QWORD *)v8);
  v27 = sub_100505C80(v19, v20, v21);
  v28 = static TTRLocalizableStrings.Hashtags.allTagsText.getter(v27);
  v30 = v29;
  v31 = v22;
  v32 = objc_msgSend(v22, "arrangedSubviews");
  if (v32)
  {
    v33 = v32;
    v34 = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
    v35 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v33, v34);

  }
  else
  {
    v35 = _swiftEmptyArrayStorage;
  }
  TTRHashtagCollectionViewPopulator.updateButtons(toShow:allTagsButtonState:addTagButtonState:reusing:)(v26, v28, v30, 1, v35);
  swift_bridgeObjectRelease(v35);
  swift_bridgeObjectRelease(v26);
  *(_QWORD *)&v36 = swift_bridgeObjectRelease(v30).n128_u64[0];
  v37 = v40;
  v38 = objc_msgSend(v40, "superview", v36);

  if (!v38)
  {
    v39 = objc_msgSend(v1, "containerView");
    objc_msgSend(v39, "insertArrangedSubview:atIndex:", v37, 0);

  }
  sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState);
  v12 = *(void **)v18;
  v13 = (void *)*((_QWORD *)v18 + 1);
  v14 = *((_QWORD *)v18 + 2);
  *(_QWORD *)v18 = v37;
  *((_QWORD *)v18 + 1) = v31;
  *((_QWORD *)v18 + 2) = v23;
  return sub_100505C08(v12, v13, v14);
}

void sub_100502C48(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  id v26;
  _BYTE v27[24];
  _BYTE v28[24];

  v3 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750(&qword_100644600);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_viewModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_viewModel, v28, 0, 0);
  v11 = type metadata accessor for TTRRemindersListViewModel.HashtagsState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    sub_10000735C(v10, (uint64_t)v9, &qword_100644600);
    v12 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v9, 1, v12) == 1)
    {
      sub_1000073A0((uint64_t)v9, &qword_100644600);
    }
    else
    {
      v13 = *v9;
      swift_bridgeObjectRetain(*v9);
      sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState);
      v14 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector);
      if (v14)
      {
        v15 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector + 8);
        v26 = v14;
        v16 = v15;
        swift_retain();
        v17 = objc_msgSend(v16, "arrangedSubviews");
        if (v17)
        {
          v18 = v17;
          v19 = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
          v20 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);

        }
        else
        {
          v20 = _swiftEmptyArrayStorage;
        }
        v21 = v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_internalSelection;
        v22 = swift_beginAccess(v21, v27, 0, 0);
        (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v6, v21, v3, v22);
        if ((a1 & 1) != 0)
          v23 = 0x3FD3333333333333;
        else
          v23 = 0;
        TTRHashtagCollectionViewPopulator.updateSelection(for:hashtagLabels:selection:dropState:animation:)(v20, v13, v6, 0, 1, v23, (a1 & 1) == 0);
        swift_bridgeObjectRelease(v20);
        swift_release();

        v24 = swift_bridgeObjectRelease(v13);
        (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v24);
      }
      else
      {
        swift_bridgeObjectRelease(v13);
      }
    }
  }
}

void sub_100502EDC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  NSString *v24;
  void *v25;
  NSString *v26;
  id v27;
  unint64_t v28;
  id v29;
  NSString v30;
  Class isa;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  char v37;
  _BYTE *v38;
  char *v39;
  __n128 v40;
  int v41;
  char *v42;
  uint64_t v43;
  int v44;
  char v45;
  id v46;
  void *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  void *v52;
  _QWORD *v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  Class v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  char v66[24];
  char v67[24];
  char v68[112];
  _QWORD *v69;
  char v70[32];

  v1 = v0;
  v2 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = &v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_viewModel];
  swift_beginAccess(v6, v70, 0, 0);
  v7 = type metadata accessor for TTRRemindersListViewModel.HashtagsState(0);
  v8 = 0;
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v9 = &v6[*(int *)(v7 + 20)];
    v10 = *((_QWORD *)v9 + 1);
    if (v10)
    {
      v63 = v2;
      v11 = *(_QWORD *)v9;
      v12 = (void *)*((_QWORD *)v9 + 2);
      v13 = *(_QWORD **)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_selectionDescriptionLabel];
      v62 = v3;
      v14 = v12;
      swift_bridgeObjectRetain(v10);
      if (v13)
      {
        v8 = v13;
      }
      else
      {
        v15 = sub_1005038A0();
        v8 = v15;
      }
      __chkstk_darwin(v15);
      *(&v61 - 4) = v11;
      *(&v61 - 3) = v10;
      *(&v61 - 2) = (uint64_t)v12;
      __chkstk_darwin(v16);
      *(&v61 - 4) = v11;
      *(&v61 - 3) = v10;
      *(&v61 - 2) = (uint64_t)v12;
      v17 = v13;
      v61 = v11;
      v64 = v12;
      v18 = TTRRemindersListViewModel.HashtagSelectionDescription.attributedPreferredDescription(baseAttributes:emphasizedAttributes:)(sub_100505BAC, &v61 - 6, sub_100505BB8, &v61 - 6, v11, v10, v12);
      v65 = v10;
      if (v18)
      {
        v19 = (id)v18;
        v20 = 2;
      }
      else
      {
        v21 = sub_10002A750(&qword_10064BB40);
        inited = swift_initStackObject(v21, v68);
        *(_OWORD *)(inited + 16) = xmmword_1005201E0;
        *(_QWORD *)(inited + 32) = NSFontAttributeName;
        v23 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
        swift_bridgeObjectRetain(v10);
        v24 = NSFontAttributeName;
        *(_QWORD *)(inited + 40) = static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(UIFontTextStyleCaption1, 0, 1, 0);
        *(_QWORD *)(inited + 64) = v23;
        *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
        v25 = (void *)objc_opt_self(UIColor);
        v26 = NSForegroundColorAttributeName;
        v27 = objc_msgSend(v25, "secondaryLabelColor");
        *(_QWORD *)(inited + 104) = sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
        *(_QWORD *)(inited + 80) = v27;
        v28 = sub_100350498(inited);
        v29 = objc_allocWithZone((Class)NSAttributedString);
        v30 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v10);
        type metadata accessor for Key(0);
        sub_1000175C8((unint64_t *)&qword_10064BB50, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10051FF08);
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        v19 = objc_msgSend(v29, "initWithString:attributes:", v30, isa, swift_bridgeObjectRelease(v28).n128_f64[0]);

        v20 = 0;
      }
      v32 = v63;
      v33 = v62;
      v34 = objc_msgSend(v1, "traitCollection");
      v35 = objc_msgSend(v34, "horizontalSizeClass");

      if (v35 == (id)1)
        v37 = 0;
      else
        v37 = static UIAccessibility.ttriIsAccessibilityRunning.getter(v36) ^ 1;
      v38 = (char *)v8 + *(_QWORD *)((swift_isaMask & *v8) + 0x68);
      swift_beginAccess(v38, v67, 1, 0);
      *v38 = v37 & 1;
      v39 = &v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_internalSelection];
      v40 = swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_internalSelection], v66, 0, 0);
      (*(void (**)(_QWORD *, char *, uint64_t, __n128))(v33 + 16))(v5, v39, v32, v40);
      v41 = (*(uint64_t (**)(_QWORD *, uint64_t))(v33 + 88))(v5, v32);
      if (v41 == enum case for REMHashtagLabelSpecifier.labels(_:))
      {
        (*(void (**)(_QWORD *, uint64_t))(v33 + 96))(v5, v32);
        swift_bridgeObjectRelease(*v5);
        swift_bridgeObjectRelease(v5[1]);
        v42 = (char *)v5 + *(int *)(sub_10002A750((uint64_t *)&unk_1006651D0) + 64);
        v43 = type metadata accessor for REMHashtagLabelSpecifier.Operation(0);
        v44 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v43 - 8) + 88))(v42, v43);
        if (v44 == enum case for REMHashtagLabelSpecifier.Operation.or(_:))
        {
          v45 = 0;
LABEL_21:
          LOBYTE(v69) = v45;
          TTRIInlineButtonAttachmentTextView.selectedItem.setter(&v69);
          TTRIInlineButtonAttachmentTextView.applyAttributedText(_:forceUpdate:)((NSAttributedString)v19, 0);
          v46 = objc_msgSend(v8, "textContainer");
          objc_msgSend(v46, "setMaximumNumberOfLines:", v20);

          swift_bridgeObjectRelease(v65);
          goto LABEL_22;
        }
        if (v44 == enum case for REMHashtagLabelSpecifier.Operation.and(_:))
        {
          v45 = 1;
          goto LABEL_21;
        }
      }
      else
      {
        v45 = 1;
        if (v41 == enum case for REMHashtagLabelSpecifier.allLabels(_:)
          || v41 == enum case for REMHashtagLabelSpecifier.noLabels(_:))
        {
          goto LABEL_21;
        }
      }
      _diagnoseUnexpectedEnumCase<A>(type:)(v32, v32);
      __break(1u);
      return;
    }
    v8 = 0;
  }
LABEL_22:
  v47 = *(void **)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_selectionDescriptionLabel];
  *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_selectionDescriptionLabel] = v8;
  v48 = v8;

  if (v8)
  {
    v49 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v50 = swift_allocObject(v49, 40, 7);
    *(_OWORD *)(v50 + 16) = xmmword_100521140;
    *(_QWORD *)(v50 + 32) = v48;
    v69 = (_QWORD *)v50;
    specialized Array._endMutation()(v50);
    v51 = v69;
  }
  else
  {
    v51 = _swiftEmptyArrayStorage;
  }
  v52 = *(void **)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_labelBoxView];
  v53 = v48;
  v54 = objc_msgSend(v52, "arrangedSubviews");
  if (!v54)
    goto LABEL_29;
  v55 = v54;
  v56 = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  v57 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v55, v56);

  swift_bridgeObjectRetain(v51);
  swift_bridgeObjectRetain(v57);
  LOBYTE(v55) = sub_100096708(v58, (unint64_t)v51);
  swift_bridgeObjectRelease_n(v57, 2);
  swift_bridgeObjectRelease(v51);
  if ((v55 & 1) != 0)
  {
    *(_QWORD *)&v59 = swift_bridgeObjectRelease(v51).n128_u64[0];
    if (!v8)
    {
LABEL_28:
      objc_msgSend(v52, "layoutMargins", v59);
      objc_msgSend(v52, "setLayoutMargins:", 8.0);
      return;
    }
  }
  else
  {
LABEL_29:
    sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
    v60 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v52, "setArrangedSubviews:", v60, swift_bridgeObjectRelease(v51).n128_f64[0]);

    if (!v8)
      goto LABEL_28;
  }
  objc_msgSend(v52, "layoutMargins", v59);
  objc_msgSend(v52, "setLayoutMargins:", 7.0);

}

id sub_100503600(void *a1)
{
  id v2;
  Class isa;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v11;

  v2 = objc_allocWithZone((Class)type metadata accessor for HorizontalStackView());
  sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v4 = objc_msgSend(v2, "initWithArrangedSubviews:", isa);

  objc_msgSend(v4, "setAxis:", 0);
  objc_msgSend(v4, "setSpacing:", 8.0);
  objc_msgSend(v4, "setAlignment:", 2);
  objc_msgSend(v4, "setDistribution:", 0);
  objc_msgSend(v4, "layoutMargins");
  objc_msgSend(v4, "setLayoutMargins:", 6.0);
  objc_msgSend(v4, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v4, "setDebugBoundingBoxesEnabled:", 0);
  objc_msgSend(v4, "setDelegate:", a1);
  v5 = objc_msgSend(objc_allocWithZone((Class)NUIContentScrollView), "initWithDocumentView:", v4);
  objc_msgSend(v5, "setHorizontalAlignment:", 1);
  objc_msgSend(v5, "setVerticalAlignment:", 3);
  objc_msgSend(v5, "setCanScrollDocumentViewVertically:", 0);
  objc_msgSend(v5, "setCanScrollDocumentViewHorizontally:", 1);
  objc_msgSend(v5, "setShowsHorizontalScrollIndicator:", 0);
  objc_msgSend(v5, "setContentInsetAdjustmentBehavior:", 2);
  objc_msgSend(v5, "setContentInset:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  objc_msgSend(v5, "setTtrFocusGroupIdentifier:", 0);
  v6 = type metadata accessor for TTRIHashtagCollectionViewAdaptor(0);
  swift_allocObject(v6, 73, 7);
  v4;
  v7 = v5;
  v8 = a1;
  v11 = TTRIHashtagCollectionViewAdaptor.init(target:addTagButtonAction:hashtagButtonAction:buttonFocusDelegate:containerView:)(a1, 0, "hashtagButtonAction:", 0, 0, v4, v5, 1);
  v9 = sub_10002A750((uint64_t *)&unk_100665200);
  swift_allocObject(v9, 40, 7);
  TTRHashtagCollectionViewPopulator.init(adaptor:)(&v11);
  return v7;
}

_QWORD *sub_1005038A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  char v22;
  __int128 v23;
  uint64_t v24;
  unsigned __int8 v25;
  __n128 v26;
  __int128 v27;
  uint64_t v28;
  unsigned __int8 v29;
  __int128 v30;

  v1 = v0;
  v2 = sub_10002A750(&qword_1006651E0);
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v4 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v5 = static UIFont.roundedSubheadlineFont.getter(v4);
  TTRIInlineButtonAttachmentTextView.font.setter(v5);
  v6 = sub_10002A750(&qword_1006651E8);
  v7 = swift_allocObject(v6, 128, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1005201E0;
  v8 = TTRRemindersListViewModel.HashtagsState.FilterOperatorOptions.localizedOptionString.getter(0);
  v10 = v9;
  LOBYTE(v23) = 0;
  sub_100505BC4();
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v27, v8, v10, 0, &v23, 0, 0, &type metadata for TTRRemindersListViewModel.HashtagsState.FilterOperatorOptions);
  v11 = v28;
  v12 = v29;
  *(_OWORD *)(v7 + 32) = v27;
  *(_QWORD *)(v7 + 48) = v11;
  *(_QWORD *)(v7 + 56) = v12;
  *(_OWORD *)(v7 + 64) = v30;
  v13 = TTRRemindersListViewModel.HashtagsState.FilterOperatorOptions.localizedOptionString.getter(1);
  v22 = 1;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v23, v13, v14, 0, &v22, 0, 0, &type metadata for TTRRemindersListViewModel.HashtagsState.FilterOperatorOptions);
  v15 = v24;
  v16 = v25;
  *(_OWORD *)(v7 + 80) = v23;
  *(_QWORD *)(v7 + 96) = v15;
  *(_QWORD *)(v7 + 104) = v16;
  v17 = v26;
  *(__n128 *)(v7 + 112) = v26;
  TTRIInlineButtonAttachmentTextView.menuOptions.setter(v7, v17);
  LOBYTE(v27) = 1;
  TTRIInlineButtonAttachmentTextView.selectedItem.setter(&v27);
  v18 = (_QWORD *)((char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x60));
  swift_beginAccess(v18, &v27, 1, 0);
  v19 = v18[1];
  *v18 = 0xD000000000000020;
  v18[1] = 0x800000010057AF60;
  swift_bridgeObjectRelease(v19);
  v20 = (char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x80);
  swift_beginAccess(v20, &v23, 1, 0);
  *((_QWORD *)v20 + 1) = &off_10060D168;
  swift_unknownObjectWeakAssign(v20, v1);
  return v3;
}

void sub_100503AC4(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __n128 v19;
  uint64_t v20;
  __n128 v21;
  void (*v22)(_BYTE *, uint64_t, __n128);
  uint64_t v23;
  char v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t Strong;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  __n128 v33;
  void (*v34)(_BYTE *, char *, uint64_t, __n128);
  _BYTE v35[24];
  char v36[24];
  char v37[24];

  v2 = v1;
  v4 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v10 = &v35[-v9 - 8];
  v11 = sub_10002A750(&qword_100644600);
  __chkstk_darwin(v11);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = (uint64_t)&v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_viewModel];
  swift_beginAccess(&v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_viewModel], v37, 0, 0);
  v15 = type metadata accessor for TTRRemindersListViewModel.HashtagsState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
  {
    sub_10000735C(v14, (uint64_t)v13, &qword_100644600);
    v16 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v13, 1, v16) == 1)
    {
      sub_1000073A0((uint64_t)v13, &qword_100644600);
    }
    else
    {
      v17 = *v13;
      swift_bridgeObjectRetain(*v13);
      sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState);
      if (*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector])
      {
        v18 = &v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_internalSelection];
        v19 = swift_beginAccess(&v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_internalSelection], v36, 0, 0);
        v34 = *(void (**)(_BYTE *, char *, uint64_t, __n128))(v5 + 16);
        v34(v7, v18, v4, v19);
        v20 = v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_allowsExcludedSelection];
        swift_retain();
        TTRHashtagCollectionViewPopulator.modifySelection(_:forUserSelectedHashtagButton:hashtagLabels:allowsEmptySelection:allowsExcludedSelection:)(v7, a1, v17, 0, v20);
        v21 = swift_bridgeObjectRelease(v17);
        v22 = *(void (**)(_BYTE *, uint64_t, __n128))(v5 + 8);
        v22(v7, v4, v21);
        ((void (*)(_BYTE *, char *, uint64_t))v34)(v7, v18, v4);
        v23 = sub_1000175C8((unint64_t *)&qword_100640E30, (uint64_t (*)(uint64_t))&type metadata accessor for REMHashtagLabelSpecifier, (uint64_t)&protocol conformance descriptor for REMHashtagLabelSpecifier);
        v24 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v7, v4, v23);
        ((void (*)(_BYTE *, uint64_t))v22)(v7, v4);
        if ((v24 & 1) != 0)
        {
          ((void (*)(_BYTE *, uint64_t))v22)(v10, v4);
          swift_release();
        }
        else
        {
          v25 = swift_beginAccess(v18, v35, 33, 0);
          (*(void (**)(char *, _BYTE *, uint64_t, __n128))(v5 + 24))(v18, v10, v4, v25);
          swift_endAccess(v35);
          v26 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags;
          v27 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags];
          *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags] = v27 | 2;
          if ((v27 | 2) != v27)
          {
            objc_msgSend(v2, "setNeedsLayout");
            if ((v2[v26] & 5) != 0)
              objc_msgSend(v2, "invalidateIntrinsicContentSize");
          }
          Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_delegate]);
          if (Strong)
          {
            v30 = Strong;
            v31 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
            ObjectType = swift_getObjectType(*(_QWORD *)(Strong+ OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter), v29);
            (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v31 + 8) + 824))(v10, ObjectType);
            swift_release();
            swift_unknownObjectRelease(v30);
          }
          else
          {
            v33 = swift_release();
          }
          v22(v10, v4, v33);
        }
      }
      else
      {
        swift_bridgeObjectRelease(v17);
      }
    }
  }
}

_QWORD *sub_100503F1C()
{
  uint64_t v0;
  void *v1;
  id v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  void *v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v11;
  uint64_t v12;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector);
  if (v1)
  {
    v12 = sub_100005ED8(0, &qword_1006651F8, NUIContentScrollView_ptr);
    *(_QWORD *)&v11 = v1;
    v2 = v1;
    v3 = sub_100456BA8(0, 1, 1, _swiftEmptyArrayStorage);
    v5 = v3[2];
    v4 = v3[3];
    if (v5 >= v4 >> 1)
      v3 = sub_100456BA8((_QWORD *)(v4 > 1), v5 + 1, 1, v3);
    v3[2] = v5 + 1;
    sub_100028D38(&v11, &v3[4 * v5 + 4]);

  }
  else
  {
    v3 = _swiftEmptyArrayStorage;
  }
  v6 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_selectionDescriptionLabel);
  if (v6)
  {
    v12 = sub_10002A750(&qword_1006651E0);
    *(_QWORD *)&v11 = v6;
    v7 = v6;
    if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
      v3 = sub_100456BA8(0, v3[2] + 1, 1, v3);
    v9 = v3[2];
    v8 = v3[3];
    if (v9 >= v8 >> 1)
      v3 = sub_100456BA8((_QWORD *)(v8 > 1), v9 + 1, 1, v3);
    v3[2] = v9 + 1;
    sub_100028D38(&v11, &v3[4 * v9 + 4]);

  }
  if (!v3[2])
  {
    swift_bridgeObjectRelease(v3);
    return 0;
  }
  return v3;
}

void *sub_1005040B8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_selectionDescriptionLabel);
  if (!v1)
    return 0;
  v2 = v1;
  if ((TTRIInlineButtonAttachmentTextView.hasButtonAttachment.getter() & 1) == 0)
    goto LABEL_6;
  v3 = type metadata accessor for TTRIInlineButtonAttachmentTextViewButton(0);
  v4 = (void *)UIView.firstDescendantView<A>(ofType:passing:)(v3, 0, 0, v3);
  v5 = v4;
  if (!v4)
  {

    return v5;
  }
  v6 = objc_msgSend(v4, "accessibilityLabel");

  if (!v6)
  {
LABEL_6:

    return 0;
  }
  v5 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v6);

  return v5;
}

void sub_1005041A8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[8];

  v6[0] = &unk_10053B0A8;
  sub_100504270(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = &unk_10053B0C0;
    v6[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[4] = &unk_10053B0D8;
    v6[5] = &unk_10053B0F0;
    v4 = type metadata accessor for REMHashtagLabelSpecifier(319);
    if (v5 <= 0x3F)
    {
      v6[6] = *(_QWORD *)(v4 - 8) + 64;
      v6[7] = (char *)&value witness table for Builtin.Int64 + 64;
      swift_updateClassMetadata2(a1, 256, 8, v6, a1 + 80);
    }
  }
}

void sub_100504270(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1006650B8)
  {
    v2 = type metadata accessor for TTRRemindersListViewModel.HashtagsState(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1006650B8);
  }
}

uint64_t sub_100504330(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  unsigned int *v20;
  char *v21;
  __n128 v22;
  char *v23;
  void (*v24)(char *, char *, uint64_t, __n128);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  char *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t Strong;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t ObjectType;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  _BYTE v50[24];
  _BYTE v51[32];

  v3 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v49 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (_OWORD *)((char *)&v45 - v7);
  __chkstk_darwin(v9);
  v11 = (char *)&v45 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v45 - v13;
  v15 = type metadata accessor for REMHashtagLabelSpecifier.Operation(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100028CFC(a1, (uint64_t)v51);
  result = swift_dynamicCast(v50, v51, &type metadata for Any[8], &type metadata for TTRRemindersListViewModel.HashtagsState.FilterOperatorOptions, 6);
  if ((_DWORD)result)
  {
    if (v50[0])
      v20 = (unsigned int *)&enum case for REMHashtagLabelSpecifier.Operation.and(_:);
    else
      v20 = (unsigned int *)&enum case for REMHashtagLabelSpecifier.Operation.or(_:);
    (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, *v20, v15);
    v46 = v1;
    v21 = &v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_internalSelection];
    v22 = swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_internalSelection], v51, 0, 0);
    v23 = v18;
    v24 = *(void (**)(char *, char *, uint64_t, __n128))(v4 + 16);
    v47 = v21;
    v24(v11, v21, v3, v22);
    ((void (*)(_OWORD *, char *, uint64_t))v24)(v8, v11, v3);
    v25 = (*(uint64_t (**)(_OWORD *, uint64_t))(v4 + 88))(v8, v3);
    v26 = v16;
    v27 = v25;
    v48 = v23;
    if ((_DWORD)v25 == enum case for REMHashtagLabelSpecifier.labels(_:))
    {
      (*(void (**)(_OWORD *, uint64_t))(v4 + 96))(v8, v3);
      v28 = *(int *)(sub_10002A750((uint64_t *)&unk_1006651D0) + 64);
      v45 = (char *)v8 + v28;
      *(_OWORD *)v14 = *v8;
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(&v14[v28], v23, v15);
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 104))(v14, v27, v3);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v45, v15);
    }
    else
    {
      if ((_DWORD)v25 != enum case for REMHashtagLabelSpecifier.allLabels(_:)
        && (_DWORD)v25 != enum case for REMHashtagLabelSpecifier.noLabels(_:))
      {
        result = _diagnoseUnexpectedEnumCase<A>(type:)(v3, v3);
        __break(1u);
        return result;
      }
      (*(void (**)(char *))(v4 + 104))(v14);
    }
    v29 = v26;
    v30 = *(void (**)(char *, uint64_t))(v4 + 8);
    v30(v11, v3);
    v31 = v49;
    v32 = v47;
    ((void (*)(char *, char *, uint64_t))v24)(v49, v47, v3);
    v33 = sub_1000175C8((unint64_t *)&qword_100640E30, (uint64_t (*)(uint64_t))&type metadata accessor for REMHashtagLabelSpecifier, (uint64_t)&protocol conformance descriptor for REMHashtagLabelSpecifier);
    v34 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v31, v3, v33);
    v30(v31, v3);
    if ((v34 & 1) != 0)
    {
      v30(v14, v3);
      return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v48, v15);
    }
    else
    {
      v35 = v15;
      v36 = swift_beginAccess(v32, v50, 33, 0);
      (*(void (**)(char *, char *, uint64_t, __n128))(v4 + 24))(v32, v14, v3, v36);
      swift_endAccess(v50);
      v37 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags;
      v38 = v46;
      v39 = *(_QWORD *)&v46[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags];
      *(_QWORD *)&v46[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags] = v39 | 2;
      if ((v39 | 2) != v39)
      {
        objc_msgSend(v38, "setNeedsLayout");
        if ((v38[v37] & 5) != 0)
          objc_msgSend(v38, "invalidateIntrinsicContentSize");
      }
      Strong = swift_unknownObjectWeakLoadStrong(&v38[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_delegate]);
      if (Strong)
      {
        v42 = Strong;
        v43 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
        ObjectType = swift_getObjectType(*(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter), v41);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v43 + 8) + 824))(v14, ObjectType);
        swift_unknownObjectRelease(v42);
      }
      v30(v14, v3);
      return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v48, v35);
    }
  }
  return result;
}

id sub_100504750(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  __n128 v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  Swift::String v31;
  NSAttributedString v32;
  uint64_t v34;
  char v35[24];

  v3 = v2;
  ObjectType = swift_getObjectType(v2, a2);
  v5 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (uint64_t *)&v35[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_selectionDescriptionLabel);
  if (!v10)
    return 0;
  v11 = objc_msgSend(v10, "attributedText", v7);
  if (!v11)
    return 0;
  v12 = v11;
  v13 = objc_allocWithZone((Class)NSMutableAttributedString);
  v14 = v12;
  v15 = objc_msgSend(v13, "initWithAttributedString:", v14);
  v16 = v3 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_internalSelection;
  v17 = swift_beginAccess(v3 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_internalSelection, v35, 0, 0);
  (*(void (**)(uint64_t *, uint64_t, uint64_t, __n128))(v6 + 16))(v9, v16, v5, v17);
  v18 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 88))(v9, v5);
  v34 = ObjectType;
  if (v18 == enum case for REMHashtagLabelSpecifier.labels(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v6 + 96))(v9, v5);
    v19 = *v9;
    v20 = v9[1];
    v21 = (char *)v9 + *(int *)(sub_10002A750((uint64_t *)&unk_1006651D0) + 64);
    v22 = v15;
    v23 = (void *)NSAttributedString.ttrAccessibilityConvertedToHaveVoiceOverReadableTagList(withIncludedTags:andExcludedTags:)(v19, v20);

    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(v19);
    v24 = objc_allocWithZone((Class)NSMutableAttributedString);
    v15 = objc_msgSend(v24, "initWithAttributedString:", v23, v34);

    v25 = type metadata accessor for REMHashtagLabelSpecifier.Operation(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v21, v25);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v9, v5);
  }
  v26 = sub_1005040B8();
  if (v27)
  {
    v28 = (uint64_t)v26;
    v29 = v27;
    v30 = v15;
    v31._countAndFlagsBits = v28;
    v31._object = v29;
    v32.super.isa = TTRInlineButtonAttachmentTextViewDelegate.ttrAccessibilityAttributedLabelWith(_:replacementStringForButton:)((NSAttributedString)v30, v31).super.isa;

    swift_bridgeObjectRelease(v29);
    v15 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "initWithAttributedString:", v32.super.isa);

  }
  else
  {
    v32.super.isa = (Class)v14;
  }

  return v15;
}

uint64_t sub_1005049CC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  char v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t IsVoiceOverRunning;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_selectionDescriptionLabel);
  if (v2
    && (v3 = v2,
        v4 = TTRIInlineButtonAttachmentTextView.hasButtonAttachment.getter(),
        v3,
        (v4 & 1) != 0))
  {
    v5 = (uint64_t *)TTRAccesibility.General.Hint.AnyOrAllMenuHint.unsafeMutableAddressor();
    v7 = *v5;
    v6 = v5[1];
    swift_bridgeObjectRetain(v6);
    v8 = sub_10001D840(0, 1, 1, _swiftEmptyArrayStorage);
    v10 = v8[2];
    v9 = v8[3];
    if (v10 >= v9 >> 1)
      v8 = sub_10001D840((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
    v8[2] = v10 + 1;
    v11 = &v8[2 * v10];
    v11[4] = v7;
    v11[5] = v6;
    IsVoiceOverRunning = UIAccessibilityIsVoiceOverRunning();
    if (!(_DWORD)IsVoiceOverRunning)
      goto LABEL_9;
  }
  else
  {
    v8 = _swiftEmptyArrayStorage;
    IsVoiceOverRunning = UIAccessibilityIsVoiceOverRunning();
    if (!(_DWORD)IsVoiceOverRunning)
      goto LABEL_9;
  }
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector))
  {
    v19 = (uint64_t *)TTRAccesibility.Hashtags.GoToHashtagHint.unsafeMutableAddressor();
    v21 = *v19;
    v20 = v19[1];
    swift_bridgeObjectRetain(v20);
    IsVoiceOverRunning = swift_isUniquelyReferenced_nonNull_native(v8);
    if ((IsVoiceOverRunning & 1) == 0)
    {
      IsVoiceOverRunning = (uint64_t)sub_10001D840(0, v8[2] + 1, 1, v8);
      v8 = (_QWORD *)IsVoiceOverRunning;
    }
    v23 = v8[2];
    v22 = v8[3];
    if (v23 >= v22 >> 1)
    {
      IsVoiceOverRunning = (uint64_t)sub_10001D840((_QWORD *)(v22 > 1), v23 + 1, 1, v8);
      v8 = (_QWORD *)IsVoiceOverRunning;
    }
    v8[2] = v23 + 1;
    v24 = &v8[2 * v23];
    v24[4] = v21;
    v24[5] = v20;
    if (v8[2])
      goto LABEL_10;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 0;
  }
LABEL_9:
  if (!v8[2])
    goto LABEL_16;
LABEL_10:
  v13 = (uint64_t *)TTRAccesibility.General.Label.Separator.unsafeMutableAddressor(IsVoiceOverRunning);
  v14 = *v13;
  v15 = v13[1];
  swift_bridgeObjectRetain(v15);
  v16 = sub_10002A750(&qword_1006466D0);
  v17 = sub_1000923A8();
  v18 = BidirectionalCollection<>.joined(separator:)(v14, v15, v16, v17);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v15);
  return v18;
}

uint64_t sub_100504BB8()
{
  char *v0;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  if (!UIAccessibilityIsVoiceOverRunning())
    return 0;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector])
    return 0;
  v2 = objc_msgSend(v0, "window");
  if (!v2)
    return 0;
  v3 = v2;
  v4 = type metadata accessor for TTRIHashtagButton(0);
  v5 = UIView.firstDescendantView<A>(ofType:passing:)(v4, 0, 0, v4);

  return v5;
}

unint64_t sub_100504C44()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  NSString *v3;
  void *v4;
  NSString *v5;
  id v6;
  uint64_t v8;

  v0 = sub_10002A750(&qword_10064BB40);
  inited = swift_initStackObject(v0, &v8);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v2 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v3 = NSFontAttributeName;
  *(_QWORD *)(inited + 40) = static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(UIFontTextStyleCaption1, 0, 1, 0);
  *(_QWORD *)(inited + 64) = v2;
  *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
  v4 = (void *)objc_opt_self(UIColor);
  v5 = NSForegroundColorAttributeName;
  v6 = objc_msgSend(v4, "secondaryLabelColor");
  *(_QWORD *)(inited + 104) = sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
  *(_QWORD *)(inited + 80) = v6;
  return sub_100350498(inited);
}

unint64_t sub_100504D4C()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  NSString *v3;
  void *v4;
  Class isa;
  _BYTE v7[72];

  v0 = sub_10002A750(&qword_10064BB40);
  inited = swift_initStackObject(v0, v7);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v2 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v3 = NSFontAttributeName;
  v4 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(UIFontTextStyleCaption1, 0, 1, 0);
  isa = UIFont.withBoldTrait()().super.isa;

  *(_QWORD *)(inited + 64) = v2;
  *(_QWORD *)(inited + 40) = isa;
  return sub_100350498(inited);
}

id sub_100505068(uint64_t a1, uint64_t a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  objc_super v15;

  ObjectType = (objc_class *)swift_getObjectType(v4, a2);
  v9 = 0.0;
  if ((v4[OBJC_IVAR____TtC9RemindersP33_A9D13F37E55CE2918CCED93628D156D919HorizontalStackView_rootStackViewWidth + 8] & 1) == 0)
  {
    v10 = *(double *)&v4[OBJC_IVAR____TtC9RemindersP33_A9D13F37E55CE2918CCED93628D156D919HorizontalStackView_rootStackViewWidth];
    objc_msgSend(v4, "layoutMargins", 0.0);
    v12 = v10 - v11;
    objc_msgSend(v4, "layoutMargins");
    v9 = v12 - v13;
  }
  if (v9 >= a3)
    v9 = a3;
  v15.receiver = v4;
  v15.super_class = ObjectType;
  return objc_msgSendSuper2(&v15, "contentLayoutSizeFittingSize:forArrangedSubview:", a1, v9, a4);
}

double sub_100505188(double a1, double a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  void *v5;
  objc_class *ObjectType;
  uint64_t v9;
  char v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  double v15;
  double v16;
  double v17;
  double v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v22;
  objc_super v23;
  _BYTE v24[24];

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType(v4, a4);
  v9 = *(_QWORD *)&v4[OBJC_IVAR____TtC9RemindersP33_A9D13F37E55CE2918CCED93628D156D919HorizontalStackView_rootStackViewWidth];
  v10 = v4[OBJC_IVAR____TtC9RemindersP33_A9D13F37E55CE2918CCED93628D156D919HorizontalStackView_rootStackViewWidth + 8];
  v11 = &v4[OBJC_IVAR____TtC9RemindersP33_A9D13F37E55CE2918CCED93628D156D919HorizontalStackView_sizeCache];
  swift_beginAccess(&v4[OBJC_IVAR____TtC9RemindersP33_A9D13F37E55CE2918CCED93628D156D919HorizontalStackView_sizeCache], v24, 32, 0);
  v12 = *(_QWORD *)v11;
  if (*(_QWORD *)(*(_QWORD *)v11 + 16) && (v13 = sub_1002AA950(v9, v10, a1, a2), (v14 & 1) != 0))
  {
    v15 = *(double *)(*(_QWORD *)(v12 + 56) + 16 * v13);
  }
  else
  {
    swift_endAccess(v24);
    v23.receiver = v5;
    v23.super_class = ObjectType;
    objc_msgSendSuper2(&v23, "effectiveLayoutSizeFittingSize:", a1, a2);
    v15 = v16;
    v18 = v17;
    swift_beginAccess(v11, v24, 33, 0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v11);
    v22 = *(_QWORD *)v11;
    *(_QWORD *)v11 = 0x8000000000000000;
    sub_100098768(v9, v10, isUniquelyReferenced_nonNull_native, v15, v18, a1, a2);
    v20 = *(_QWORD *)v11;
    *(_QWORD *)v11 = v22;
    swift_bridgeObjectRelease(v20);
  }
  swift_endAccess(v24);
  return v15;
}

Swift::Int sub_1005053D8(Swift::UInt64 a1, char a2, double a3, double a4)
{
  Swift::UInt64 v8;
  Swift::UInt64 v9;
  Swift::UInt64 v10;
  _QWORD v12[9];

  Hasher.init(_seed:)(v12, 0);
  if ((a2 & 1) != 0)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v8 = a1;
    else
      v8 = 0;
    Hasher._combine(_:)(v8);
  }
  if ((*(_QWORD *)&a3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v9 = *(_QWORD *)&a3;
  else
    v9 = 0;
  Hasher._combine(_:)(v9);
  if ((*(_QWORD *)&a4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v10 = *(_QWORD *)&a4;
  else
    v10 = 0;
  Hasher._combine(_:)(v10);
  return Hasher._finalize()();
}

Swift::Int sub_10050547C()
{
  uint64_t v0;

  return sub_1005053D8(*(_QWORD *)v0, *(_BYTE *)(v0 + 8), *(double *)(v0 + 16), *(double *)(v0 + 24));
}

void sub_100505494()
{
  uint64_t v0;
  double v1;
  double v2;
  Swift::UInt64 v3;
  Swift::UInt64 v4;

  v1 = *(double *)(v0 + 16);
  v2 = *(double *)(v0 + 24);
  if (*(_BYTE *)(v0 + 8) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v3 = *(_QWORD *)v0;
    Hasher._combine(_:)(1u);
    if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v4 = v3;
    else
      v4 = 0;
    Hasher._combine(_:)(v4);
  }
  sub_1005058F0(v1, v2);
}

Swift::Int sub_100505508(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt64 v2;
  int v3;
  double v4;
  double v5;
  Swift::UInt64 v6;
  _QWORD v8[9];

  v2 = *(_QWORD *)v1;
  v3 = *(unsigned __int8 *)(v1 + 8);
  v4 = *(double *)(v1 + 16);
  v5 = *(double *)(v1 + 24);
  Hasher.init(_seed:)(v8, a1);
  if (v3 == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v6 = v2;
    else
      v6 = 0;
    Hasher._combine(_:)(v6);
  }
  sub_1005058F0(v4, v5);
  return Hasher._finalize()();
}

BOOL sub_100505594(uint64_t a1, uint64_t a2)
{
  char v2;

  v2 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return 0;
  }
  else
  {
    if (*(double *)a1 != *(double *)a2)
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  return *(double *)(a1 + 24) == *(double *)(a2 + 24) && *(double *)(a1 + 16) == *(double *)(a2 + 16);
}

uint64_t sub_1005055E4()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC9RemindersP33_A9D13F37E55CE2918CCED93628D156D919HorizontalStackView_sizeCache));
}

uint64_t type metadata accessor for HorizontalStackView()
{
  return objc_opt_self(_TtC9RemindersP33_A9D13F37E55CE2918CCED93628D156D919HorizontalStackView);
}

ValueMetadata *type metadata accessor for HorizontalStackView.CacheKey()
{
  return &type metadata for HorizontalStackView.CacheKey;
}

ValueMetadata *type metadata accessor for TTRIRemindersListHashtagCollectionCell.UpdateFlags()
{
  return &type metadata for TTRIRemindersListHashtagCollectionCell.UpdateFlags;
}

uint64_t destroy for TTRIRemindersListHashtagCollectionCell.HashtagSelector(uint64_t a1)
{

  return swift_release(*(_QWORD *)(a1 + 16));
}

_QWORD *_s9Reminders38TTRIRemindersListHashtagCollectionCellC15HashtagSelectorVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  v7 = v4;
  swift_retain(v5);
  return a1;
}

uint64_t assignWithCopy for TTRIRemindersListHashtagCollectionCell.HashtagSelector(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  swift_retain(v10);
  swift_release(v11);
  return a1;
}

uint64_t assignWithTake for TTRIRemindersListHashtagCollectionCell.HashtagSelector(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for TTRIRemindersListHashtagCollectionCell.HashtagSelector()
{
  return &type metadata for TTRIRemindersListHashtagCollectionCell.HashtagSelector;
}

unint64_t sub_10050578C()
{
  unint64_t result;

  result = qword_1006651A8;
  if (!qword_1006651A8)
  {
    result = swift_getWitnessTable(&unk_10053B17C, &type metadata for TTRIRemindersListHashtagCollectionCell.UpdateFlags);
    atomic_store(result, (unint64_t *)&qword_1006651A8);
  }
  return result;
}

unint64_t sub_1005057D4()
{
  unint64_t result;

  result = qword_1006651B0;
  if (!qword_1006651B0)
  {
    result = swift_getWitnessTable("M \r", &type metadata for TTRIRemindersListHashtagCollectionCell.UpdateFlags);
    atomic_store(result, (unint64_t *)&qword_1006651B0);
  }
  return result;
}

unint64_t sub_10050581C()
{
  unint64_t result;

  result = qword_1006651B8;
  if (!qword_1006651B8)
  {
    result = swift_getWitnessTable(&unk_10053B1A4, &type metadata for TTRIRemindersListHashtagCollectionCell.UpdateFlags);
    atomic_store(result, (unint64_t *)&qword_1006651B8);
  }
  return result;
}

unint64_t sub_100505864()
{
  unint64_t result;

  result = qword_1006651C0;
  if (!qword_1006651C0)
  {
    result = swift_getWitnessTable(&unk_10053B1DC, &type metadata for TTRIRemindersListHashtagCollectionCell.UpdateFlags);
    atomic_store(result, (unint64_t *)&qword_1006651C0);
  }
  return result;
}

unint64_t sub_1005058AC()
{
  unint64_t result;

  result = qword_1006651C8;
  if (!qword_1006651C8)
  {
    result = swift_getWitnessTable(&unk_10053B2DC, &type metadata for HorizontalStackView.CacheKey);
    atomic_store(result, (unint64_t *)&qword_1006651C8);
  }
  return result;
}

void sub_1005058F0(double a1, double a2)
{
  Swift::UInt64 v3;
  Swift::UInt64 v4;

  if ((*(_QWORD *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v3 = *(_QWORD *)&a1;
  else
    v3 = 0;
  Hasher._combine(_:)(v3);
  if ((*(_QWORD *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v4 = *(_QWORD *)&a2;
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
}

uint64_t sub_100505940(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

char *sub_100505978(char *result)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = result;
  v2 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags;
  v3 = *(_QWORD *)&result[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags];
  *(_QWORD *)&result[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags] = v3 | 1;
  if ((v3 | 1) != v3)
  {
    result = (char *)objc_msgSend(result, "setNeedsLayout");
    v3 = *(_QWORD *)&v1[v2];
    if ((v3 & 5) != 0)
    {
      result = (char *)objc_msgSend(v1, "invalidateIntrinsicContentSize");
      v3 = *(_QWORD *)&v1[v2];
    }
  }
  *(_QWORD *)&v1[v2] = v3 | 4;
  if ((v3 | 4) != v3)
  {
    result = (char *)objc_msgSend(v1, "setNeedsLayout");
    if ((v1[v2] & 5) != 0)
      return (char *)objc_msgSend(v1, "invalidateIntrinsicContentSize");
  }
  return result;
}

void sub_100505A2C()
{
  _BYTE *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = &v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_delegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1, 0);
  v2 = &v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_viewModel];
  v3 = type metadata accessor for TTRRemindersListViewModel.HashtagsState(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_allowsExcludedSelection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_selectionDescriptionLabel] = 0;
  v4 = &v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector];
  v4[1] = 0;
  v4[2] = 0;
  *v4 = 0;
  static REMHashtagLabelSpecifier.labels(_:)(&_swiftEmptySetSingleton);
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags] = 7;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010055F310, "Reminders/TTRIRemindersListHashtagCollectionCell.swift", 54, 2, 124, 0);
  __break(1u);
}

void sub_100505B28(id a1, double a2)
{
  char *v2;
  id v5;
  uint64_t v6;

  v5 = objc_msgSend(v2, "containerView");

  if (v5 == a1)
  {
    if (*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector])
    {
      v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector + 8]
         + OBJC_IVAR____TtC9RemindersP33_A9D13F37E55CE2918CCED93628D156D919HorizontalStackView_rootStackViewWidth;
      *(double *)v6 = a2;
      *(_BYTE *)(v6 + 8) = 0;
    }
  }
}

unint64_t sub_100505BAC()
{
  return sub_100504C44();
}

unint64_t sub_100505BB8()
{
  return sub_100504D4C();
}

unint64_t sub_100505BC4()
{
  unint64_t result;

  result = qword_1006651F0;
  if (!qword_1006651F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRRemindersListViewModel.HashtagsState.FilterOperatorOptions, &type metadata for TTRRemindersListViewModel.HashtagsState.FilterOperatorOptions);
    atomic_store(result, (unint64_t *)&qword_1006651F0);
  }
  return result;
}

void *sub_100505C08(void *result, void *a2, uint64_t a3)
{
  if (result)
  {

    return (void *)swift_release(a3);
  }
  return result;
}

uint64_t sub_100505C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_100505C80(void *result, void *a2, uint64_t a3)
{
  id v5;
  id v6;

  if (result)
  {
    v5 = result;
    v6 = a2;
    return (void *)swift_retain(a3);
  }
  return result;
}

uint64_t sub_100505CB4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t result;

  if (a2)
  {
    v4 = a3;
    return swift_bridgeObjectRetain(a2);
  }
  return result;
}

uint64_t sub_100505CE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  v3 = v1 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_dragInteractionHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_dragInteractionHandler);
  v5 = swift_unknownObjectWeakAssign(v3, a1);
  v6 = swift_unknownObjectWeakLoadStrong(v5);
  if (v6)
  {
    v7 = v6;
    swift_unknownObjectRelease(v6);
    if (Strong)
      v8 = v7 == Strong;
    else
      v8 = 0;
    if (!v8)
      goto LABEL_9;
    swift_unknownObjectRelease(Strong);
LABEL_10:
    v9 = a1;
    return swift_unknownObjectRelease(v9);
  }
  if (!Strong)
    goto LABEL_10;
LABEL_9:
  v9 = swift_unknownObjectWeakLoadStrong(v3);
  sub_100505D88(v9);
  swift_unknownObjectRelease(Strong);
  swift_unknownObjectRelease(a1);
  return swift_unknownObjectRelease(v9);
}

void sub_100505D88(uint64_t a1)
{
  char *v1;
  id v3;
  char *v4;
  double v5;
  void *v6;
  uint64_t v7;
  objc_class *ObjCClassFromMetadata;
  id v9;
  id v10;
  id v11;
  char *v12;
  double v13;
  void *v14;
  uint64_t v15;
  objc_class *v16;
  id v17;
  id v18;
  _BYTE v19[24];

  v3 = objc_msgSend(v1, "contentView");
  v4 = &v1[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_dragInteraction];
  *(_QWORD *)&v5 = swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_dragInteraction], v19, 33, 0).n128_u64[0];
  v6 = *(void **)v4;
  if (*(_QWORD *)v4)
  {
    objc_msgSend(v3, "removeInteraction:", *(_QWORD *)v4, v5);

    *(_QWORD *)v4 = 0;
  }
  if (a1)
  {
    v7 = sub_100005ED8(0, (unint64_t *)&unk_1006653D0, UIDragInteraction_ptr);
    ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v7);
    swift_unknownObjectRetain_n(a1, 2);
    v9 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "initWithDelegate:", a1);
    swift_unknownObjectRelease(a1);
    objc_msgSend(v9, "_setLiftMoveHysteresis:", 1.0);
    objc_msgSend(v9, "_setPointerLiftMoveHysteresis:", 1.0);
    objc_msgSend(v9, "_setCancellationTimerEnabled:", 0);
    v10 = v9;
    objc_msgSend(v3, "addInteraction:", v10);

    swift_unknownObjectRelease(a1);
    *(_QWORD *)v4 = v10;
  }
  swift_endAccess(v19);

  v11 = sub_100508388(&OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___reorderControl, (uint64_t (*)(void))sub_1005083E0);
  v12 = &v1[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_reorderControlDragInteraction];
  *(_QWORD *)&v13 = swift_beginAccess(v12, v19, 33, 0).n128_u64[0];
  v14 = *(void **)v12;
  if (*(_QWORD *)v12)
  {
    objc_msgSend(v11, "removeInteraction:", *(_QWORD *)v12, v13);

    *(_QWORD *)v12 = 0;
  }
  if (a1)
  {
    v15 = sub_100005ED8(0, (unint64_t *)&unk_1006653D0, UIDragInteraction_ptr);
    v16 = (objc_class *)swift_getObjCClassFromMetadata(v15);
    swift_unknownObjectRetain_n(a1, 2);
    v17 = objc_msgSend(objc_allocWithZone(v16), "initWithDelegate:", a1);
    swift_unknownObjectRelease(a1);
    objc_msgSend(v17, "_setLiftMoveHysteresis:", 1.0);
    objc_msgSend(v17, "_setPointerLiftMoveHysteresis:", 1.0);
    objc_msgSend(v17, "_setCancellationTimerEnabled:", 0);
    objc_msgSend(v17, "_setLiftDelay:", 0.04);
    objc_msgSend(v17, "_setPointerLiftDelay:", 0.04);
    v18 = v17;
    objc_msgSend(v11, "addInteraction:", v18);

    swift_unknownObjectRelease(a1);
    *(_QWORD *)v12 = v18;
  }
  swift_endAccess(v19);

}

id sub_10050603C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___nameTextView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___nameTextView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___nameTextView);
  }
  else
  {
    v4 = sub_100507C48(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_10050609C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t result;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSString v29;
  _BYTE v31[24];
  _BYTE v32[24];
  _BYTE v33[24];

  v1 = sub_10002A750((uint64_t *)&unk_100654970);
  __chkstk_darwin(v1);
  v3 = &v31[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  result = __chkstk_darwin(v6);
  v11 = &v31[-v10 - 8];
  v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_viewModelObserver);
  if (!v12)
  {
    __break(1u);
    return result;
  }
  v13 = v12 + *(_QWORD *)(*(_QWORD *)v12 + 88);
  v14 = swift_beginAccess(v13, v33, 0, 0);
  v15 = type metadata accessor for TTRBoardEditableColumnHeaderViewModel(0, v14);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v13, 1, v15);
  if (!(_DWORD)result)
  {
    sub_10002B1E8(v13 + *(int *)(v15 + 20), (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
    sub_10001F580((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
    v16 = sub_10050603C();
    v17 = objc_msgSend(v16, "text");

    if (!v17)
      goto LABEL_9;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v20 = v19;

    v21 = &v11[*(int *)(v4 + 20)];
    v22 = v21[1];
    if (v18 == *v21 && v20 == v22)
    {
      swift_bridgeObjectRelease(v20);
    }
    else
    {
      v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, *v21, v22, 0);
      swift_bridgeObjectRelease(v20);
      if ((v24 & 1) == 0)
      {
LABEL_9:
        v25 = (uint64_t *)(v0 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_nameModule);
        swift_beginAccess(v0 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_nameModule, v32, 0, 0);
        v26 = *v25;
        if (v26)
        {
          sub_10002B1E8((uint64_t)v11, (uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
          v27 = v26 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
          swift_beginAccess(v26 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel, v31, 33, 0);
          swift_unknownObjectRetain(v26);
          sub_1003D3684((uint64_t)v3, v27, (uint64_t *)&unk_100654970);
          swift_endAccess(v31);
          sub_100415B30();
          sub_1000073A0((uint64_t)v3, (uint64_t *)&unk_100654970);
          swift_unknownObjectRelease(v26);
        }
        else
        {
          v28 = sub_10050603C();
          v29 = String._bridgeToObjectiveC()();
          objc_msgSend(v28, "setText:", v29);

        }
      }
    }
    return sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
  }
  return result;
}

id sub_100506388(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  objc_class *ObjectType;
  char *v12;
  uint64_t v13;
  id v14;
  char *v15;
  char *v16;
  id v17;
  objc_super v19;

  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_viewModelObserver] = 0;
  v12 = &v6[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_delegate];
  *((_QWORD *)v12 + 1) = 0;
  swift_unknownObjectWeakInit(v12, 0);
  swift_unknownObjectWeakInit(&v6[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_dragInteractionHandler], 0);
  v13 = OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_unsupportedTextDropHandler;
  v14 = objc_allocWithZone((Class)type metadata accessor for TTRIUnsupportedTextDropHandler(0));
  v15 = v6;
  *(_QWORD *)&v6[v13] = objc_msgSend(v14, "init");
  *(_QWORD *)&v15[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_dragInteraction] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_reorderControlDragInteraction] = 0;
  v16 = &v15[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_nameModule];
  *(_OWORD *)v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((_OWORD *)v16 + 2) = 0u;
  v15[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_isEditMode] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___nameTextView] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___accessoryBox] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___menuButton] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___reorderControl] = 0;

  v19.receiver = v15;
  v19.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v19, "initWithFrame:", a1, a2, a3, a4);
  sub_1005064F8();

  return v17;
}

uint64_t sub_1005064F8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v18;

  v1 = v0;
  v2 = sub_10002A750(&qword_100641268);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750(&qword_100641A68);
  __chkstk_darwin(v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UIBackgroundConfiguration(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject(&unk_10060D4A8, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v1);
  v13 = sub_10002A750((uint64_t *)&unk_1006653C0);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_viewModelObserver] = TTRViewModelObserver.init(didReceiveNewValue:)(sub_10050A334, v12);
  swift_release();
  static UIBackgroundConfiguration.clear()(v14);
  v15 = type metadata accessor for UIConfigurationColorTransformer(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v7, 1, 1, v15);
  UIBackgroundConfiguration.backgroundColorTransformer.setter(v7);
  objc_msgSend(v1, "setAutomaticallyUpdatesBackgroundConfiguration:", 0);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v4, v11, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
  UICollectionViewCell.backgroundConfiguration.setter(v4);
  v16 = objc_msgSend(v1, "containerView");
  objc_msgSend(v16, "setDebugBoundingBoxesEnabled:", 0);

  sub_1005086C0();
  sub_100507030();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

id sub_100506734(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  char *v6;
  uint64_t v7;
  id v8;
  char *v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  objc_super v15;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_viewModelObserver] = 0;
  v6 = &v3[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_delegate];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6, 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_dragInteractionHandler], 0);
  v7 = OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_unsupportedTextDropHandler;
  v8 = objc_allocWithZone((Class)type metadata accessor for TTRIUnsupportedTextDropHandler(0));
  v9 = v3;
  *(_QWORD *)&v3[v7] = objc_msgSend(v8, "init");
  *(_QWORD *)&v9[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_dragInteraction] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_reorderControlDragInteraction] = 0;
  v10 = &v9[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_nameModule];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_OWORD *)v10 + 2) = 0u;
  v9[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_isEditMode] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___nameTextView] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___accessoryBox] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___menuButton] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___reorderControl] = 0;

  v15.receiver = v9;
  v15.super_class = ObjectType;
  v11 = objc_msgSendSuper2(&v15, "initWithCoder:", a1);
  v12 = v11;
  if (v11)
  {
    v13 = v11;
    sub_1005064F8();

  }
  return v12;
}

void sub_1005068B0(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _BYTE *v8;
  id v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];
  char v15[24];
  objc_super v16;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = sub_10002A750((uint64_t *)&unk_100654970);
  v6 = __chkstk_darwin(v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16.receiver = v3;
  v16.super_class = ObjectType;
  objc_msgSendSuper2(&v16, "prepareForReuse", v6);
  if (*(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_viewModelObserver])
  {
    swift_retain();
    TTRViewModelObserver.unsubscribe()();
    swift_release();
    v9 = sub_10050603C();
    objc_msgSend(v9, "setText:", 0);

    v10 = &v3[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_nameModule];
    swift_beginAccess(&v3[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_nameModule], v15, 0, 0);
    v11 = *(_QWORD *)v10;
    if (v11)
    {
      v12 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
      v13 = v11 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
      swift_beginAccess(v11 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel, v14, 33, 0);
      swift_unknownObjectRetain(v11);
      sub_1003D3684((uint64_t)v8, v13, (uint64_t *)&unk_100654970);
      swift_endAccess(v14);
      sub_100415B30();
      sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100654970);
      swift_unknownObjectRelease(v11);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100506A60(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  Class isa;
  double v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void *v16;
  char **v17;
  char v18;
  int v19;
  objc_super v20;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = sub_10002A750(&qword_100641268);
  __chkstk_darwin(v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - v9;
  isa = UICellConfigurationState._bridgeToObjectiveC()().super.super.isa;
  v20.receiver = v3;
  v20.super_class = ObjectType;
  objc_msgSendSuper2(&v20, "_bridgedUpdateConfigurationUsingState:", isa);

  UICollectionViewCell.backgroundConfiguration.getter(v12);
  v13 = type metadata accessor for UIBackgroundConfiguration(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v10, 1, v13))
  {
    sub_10000735C((uint64_t)v10, (uint64_t)v7, &qword_100641268);
    UICollectionViewCell.backgroundConfiguration.setter(v7);
    v14 = sub_1000073A0((uint64_t)v10, &qword_100641268);
  }
  else
  {
    v15 = UICellConfigurationState.isPinned.getter();
    v16 = (void *)objc_opt_self(UIColor);
    v17 = &selRef_systemBackgroundColor;
    if ((v15 & 1) == 0)
      v17 = &selRef_clearColor;
    UIBackgroundConfiguration.backgroundColor.setter(objc_msgSend(v16, *v17));
    v14 = UICollectionViewCell.backgroundConfiguration.setter(v10);
  }
  v18 = UICellConfigurationState.isEditing.getter(v14);
  v19 = v3[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_isEditMode];
  v3[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_isEditMode] = v18 & 1;
  if ((v18 & 1) != v19)
    sub_100507030();
}

void sub_100506CA0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD v7[6];

  v1 = (void *)objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_10060D3B8, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject(&unk_10060D3E0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100509DAC;
  *(_QWORD *)(v3 + 24) = v2;
  v7[4] = sub_1000381EC;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10001B258;
  v7[3] = &unk_10060D3F8;
  v4 = _Block_copy(v7);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutAnimation:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 143, 91, 40, 1);
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_100506E08()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD v7[6];

  v1 = (void *)objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_10060D340, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject(&unk_10060D368, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100509D90;
  *(_QWORD *)(v3 + 24) = v2;
  v7[4] = sub_10001B278;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10001B258;
  v7[3] = &unk_10060D380;
  v4 = _Block_copy(v7);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutAnimation:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 143, 98, 40, 1);
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

uint64_t sub_100506F70(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  char *v5;
  _BYTE v7[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_nameModule);
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_nameModule, v7, 33, 0);
  sub_1003D3684(a1, (uint64_t)v3, (uint64_t *)&unk_1006653B0);
  swift_endAccess(v7);
  v4 = *v3;
  if (v4)
  {
    *(_QWORD *)(v4 + 40) = &off_10060D2F0;
    swift_unknownObjectWeakAssign(v4 + 32, v1);
    swift_unknownObjectRetain(v4);
    v5 = (char *)sub_10050603C();
    sub_100416620(v5, 1);
    swift_unknownObjectRelease(v4);

  }
  return sub_1000073A0(a1, (uint64_t *)&unk_1006653B0);
}

void sub_100507030()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  char *v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  _QWORD *v40;
  char *v41;
  uint64_t Strong;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  NSString v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  void *v81;
  uint64_t v82;
  void *v83;
  char *v84;
  id v85;
  id v86;
  Swift::String v87;
  Swift::String v88;
  Swift::String v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  NSString v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t ObjectType;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  unsigned __int8 *v112;
  uint64_t v113;
  uint64_t v114;
  unsigned __int8 *v115;
  char v116[24];
  char v117[24];
  _QWORD aBlock[6];
  char v119[24];
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  _BYTE v126[26];

  v1 = v0;
  v2 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v2);
  v108 = (char *)&v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750((uint64_t *)&unk_100654970);
  __chkstk_darwin(v4);
  v6 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v105 = (uint64_t)&v103 - v8;
  v9 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v9);
  v107 = (uint64_t)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v106 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v113 = (uint64_t)&v103 - v18;
  v111 = (_QWORD *)type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
  v112 = (unsigned __int8 *)*(v111 - 1);
  __chkstk_darwin(v111);
  v110 = (uint64_t)&v103 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = v19;
  __chkstk_darwin(v20);
  v114 = (uint64_t)&v103 - v21;
  v22 = sub_10002A750((uint64_t *)&unk_1006653A0);
  v23.n128_f64[0] = __chkstk_darwin(v22);
  v25 = (char *)&v103 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for TTRBoardEditableColumnHeaderViewModel(0, v23);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v115 = (unsigned __int8 *)&v103 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_viewModelObserver];
  if (!v29)
    goto LABEL_35;
  v30 = v29 + *(_QWORD *)(*(_QWORD *)v29 + 88);
  swift_beginAccess(v30, v119, 0, 0);
  sub_10000735C(v30, (uint64_t)v25, (uint64_t *)&unk_1006653A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) != 1)
  {
    v36 = v115;
    sub_10001F580((uint64_t)v25, (uint64_t)v115, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardEditableColumnHeaderViewModel);
    v37 = v114;
    sub_10002B1E8((uint64_t)&v36[*(int *)(v26 + 20)], v114, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
    v38 = v113;
    sub_10002B1E8(v37, v113, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10002B1E8(v38, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v16, v14) == 1)
    {
      sub_10001F580((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v39 = v13[*(int *)(v11 + 32)];
      sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v40 = v111;
      if (v39 == 1)
      {
        v41 = &v1[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_delegate];
        Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_delegate]);
        if (Strong)
        {
          v43 = Strong;
          v44 = *((_QWORD *)v41 + 1);
          v45 = &v1[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_nameModule];
          v46 = swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_nameModule], v117, 0, 0);
          v47 = *(_QWORD *)v45;
          if (v47)
          {
            v104 = v44;
            v48 = v47 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
            swift_beginAccess(v47 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel, v116, 0, 0);
            v49 = v105;
            sub_10000735C(v48, v105, (uint64_t *)&unk_100654970);
            if ((*((unsigned int (**)(uint64_t, uint64_t, _QWORD *))v112 + 6))(v49, 1, v40))
            {
              swift_unknownObjectRetain(v47);
              sub_1000073A0(v49, (uint64_t *)&unk_100654970);
              v50 = v107;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v106 + 56))(v107, 1, 1, v14);
            }
            else
            {
              v98 = v110;
              sub_10002B1E8(v49, v110, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
              swift_unknownObjectRetain(v47);
              sub_1000073A0(v49, (uint64_t *)&unk_100654970);
              v50 = v107;
              sub_10002B1E8(v98, v107, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              v99 = v98;
              v40 = v111;
              sub_10001F544(v99, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v106 + 56))(v50, 0, 1, v14);
            }
            swift_unknownObjectRelease(v47);
            v44 = v104;
          }
          else
          {
            v50 = v107;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v106 + 56))(v107, 1, 1, v14, v46);
          }
          ObjectType = swift_getObjectType(v43, v97);
          v101 = *(_QWORD *)(v44 + 8);
          v102 = (*(uint64_t (**)(char *, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t))(v101 + 8))(v1, &off_10060D2F0, v38, v50, ObjectType, v101);
          sub_1000073A0(v50, (uint64_t *)&unk_100640EB0);
          if ((v102 & 1) != 0)
          {
            (*(void (**)(__int128 *__return_ptr, char *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v101 + 16))(&v120, v1, &off_10060D2F0, v38, ObjectType, v101);
            sub_100506F70((uint64_t)&v120);
          }
          swift_unknownObjectRelease(v43);
          LODWORD(v107) = 1;
          goto LABEL_16;
        }
        LODWORD(v107) = 1;
      }
      else
      {
        LODWORD(v107) = 0;
      }
    }
    else
    {
      sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      LODWORD(v107) = 0;
      v40 = v111;
    }
    v121 = 0u;
    v122 = 0u;
    v120 = 0u;
    sub_100506F70((uint64_t)&v120);
LABEL_16:
    v51 = v114;
    v52 = (__int128 *)(v114 + *((int *)v40 + 5));
    v53 = v52[4];
    v54 = v52[6];
    v125 = v52[5];
    *(_OWORD *)v126 = v54;
    *(_OWORD *)&v126[10] = *(__int128 *)((char *)v52 + 106);
    v55 = v52[1];
    v120 = *v52;
    v56 = v52[2];
    v57 = v52[3];
    v121 = v55;
    v122 = v56;
    v123 = v57;
    v124 = v53;
    sub_10003E134((uint64_t)&v120);
    TTRRemindersListEditableSectionNameViewModel.placeholderTitle(listLayout:)(1);
    if (v58)
    {
      v59 = v58;
      v60 = objc_allocWithZone((Class)NSAttributedString);
      v61 = String._bridgeToObjectiveC()();
      v111 = objc_msgSend(v60, "initWithString:", v61, swift_bridgeObjectRelease(v59).n128_f64[0]);

    }
    else
    {
      v111 = 0;
    }
    v62 = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_delegate]);
    if (v62)
    {
      v63 = v62;
      v64 = (uint64_t)v108;
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v62);
      v65 = swift_unknownObjectWeakLoadStrong(v63 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate);
      if (v65)
      {
        v66 = v65;
        v67 = (void *)sub_1000A31AC(v64);
        swift_unknownObjectRelease(v63);
        v63 = v66;
      }
      else
      {
        v67 = 0;
      }
      swift_unknownObjectRelease(v63);
      sub_10001F544(v64, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    }
    else
    {
      v67 = 0;
    }
    v68 = objc_msgSend(v1, "containerView");
    objc_msgSend(v68, "setUserInteractionEnabled:", *v115);

    v69 = objc_msgSend(v1, "containerView");
    v70 = v110;
    sub_10002B1E8(v51, v110, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
    v71 = v112[80];
    v72 = (v71 + 153) & ~v71;
    v73 = (v109 + v72 + 7) & 0xFFFFFFFFFFFFFFF8;
    v74 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
    v75 = swift_allocObject(&unk_10060D430, v74 + 8, v71 | 7);
    v76 = v125;
    v77 = *(_OWORD *)v126;
    v78 = v123;
    *(_OWORD *)(v75 + 80) = v124;
    *(_OWORD *)(v75 + 96) = v76;
    *(_OWORD *)(v75 + 112) = v77;
    *(_OWORD *)(v75 + 122) = *(_OWORD *)&v126[10];
    v79 = v121;
    v80 = v122;
    *(_OWORD *)(v75 + 16) = v120;
    *(_OWORD *)(v75 + 32) = v79;
    *(_OWORD *)(v75 + 48) = v80;
    *(_OWORD *)(v75 + 64) = v78;
    *(_QWORD *)(v75 + 144) = v1;
    *(_BYTE *)(v75 + 152) = v107;
    sub_10001F580(v70, v75 + v72, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
    v81 = v111;
    *(_QWORD *)(v75 + v73) = v111;
    *(_QWORD *)(v75 + v74) = v67;
    v82 = swift_allocObject(&unk_10060D458, 32, 7);
    *(_QWORD *)(v82 + 16) = sub_10050A2A8;
    *(_QWORD *)(v82 + 24) = v75;
    aBlock[4] = sub_1000381EC;
    aBlock[5] = v82;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001B258;
    aBlock[3] = &unk_10060D470;
    v83 = _Block_copy(aBlock);
    sub_10003E134((uint64_t)&v120);
    v112 = v67;
    swift_retain();
    v84 = v1;
    v85 = v81;
    objc_msgSend(v69, "performBatchUpdates:", v83, swift_release().n128_f64[0]);

    _Block_release(v83);
    LOBYTE(v74) = swift_isEscapingClosureAtFileLocation(v82, "", 143, 261, 43, 1);
    swift_release();
    if ((v74 & 1) == 0)
    {
      v86 = sub_100508388(&OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___reorderControl, (uint64_t (*)(void))sub_1005083E0);
      v87._object = (void *)0x800000010057D7A0;
      v88._countAndFlagsBits = 0x20726564726F6552;
      v88._object = (void *)0xEA00000000004025;
      v87._countAndFlagsBits = 0xD000000000000066;
      v89 = TTRLocalizedString(_:comment:)(v88, v87);
      v90 = sub_10002A750((uint64_t *)&unk_100640FD0);
      v91 = swift_allocObject(v90, 72, 7);
      *(_OWORD *)(v91 + 16) = xmmword_100520250;
      v92 = *(_QWORD *)v52;
      v93 = *((_QWORD *)v52 + 1);
      *(_QWORD *)(v91 + 56) = &type metadata for String;
      *(_QWORD *)(v91 + 64) = sub_1000770A4();
      *(_QWORD *)(v91 + 32) = v92;
      *(_QWORD *)(v91 + 40) = v93;
      swift_bridgeObjectRetain(v93);
      static String.localizedStringWithFormat(_:_:)(v89._countAndFlagsBits, v89._object, v91);
      v95 = v94;
      swift_bridgeObjectRelease(v89._object);
      swift_bridgeObjectRelease(v91);
      v96 = String._bridgeToObjectiveC()();
      objc_msgSend(v86, "setAccessibilityLabel:", v96, swift_bridgeObjectRelease(v95).n128_f64[0]);

      sub_100509120();
      sub_10003E230((uint64_t)&v120);

      sub_10001F544(v113, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10001F544(v114, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
      sub_10001F544((uint64_t)v115, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardEditableColumnHeaderViewModel);
      swift_release();
      return;
    }
    __break(1u);
LABEL_35:
    __break(1u);
    return;
  }
  sub_1000073A0((uint64_t)v25, (uint64_t *)&unk_1006653A0);
  v31 = sub_10050603C();
  objc_msgSend(v31, "setText:", 0);

  v32 = &v1[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_nameModule];
  v33 = swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_nameModule], &v120, 0, 0);
  v34 = *(_QWORD *)v32;
  if (v34)
  {
    (*((void (**)(char *, uint64_t, uint64_t, _QWORD *, __n128))v112 + 7))(v6, 1, 1, v111, v33);
    v35 = v34 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
    swift_beginAccess(v34 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel, aBlock, 33, 0);
    swift_unknownObjectRetain(v34);
    sub_1003D3684((uint64_t)v6, v35, (uint64_t *)&unk_100654970);
    swift_endAccess(aBlock);
    sub_100415B30();
    sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100654970);
    swift_unknownObjectRelease(v34);
  }
  sub_100508A7C(0, 0, (uint64_t)v1);
}

id sub_100507C48(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  UIAccessibilityTraits v9;
  id v10;
  unint64_t v11;
  UIAccessibilityTraits v12;
  double v13;

  v2 = objc_allocWithZone((Class)type metadata accessor for TTRIRemindersListEditableSectionNameTextView());
  v3 = (void *)TTRIExpandingTextView.init(isForUseInNUIContainerView:lineIndexWhereClippingBegins:textContainer:)(1, 2, 0, 0);
  sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v4 = v3;
  v5 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(UIFontTextStyleTitle2, *(_QWORD *)&UIFontWeightBold, 0, 0);
  objc_msgSend(v4, "setFont:", v5);

  v6 = objc_msgSend(v4, "textContainer");
  objc_msgSend(v6, "setLineBreakMode:", 4);

  v7 = objc_msgSend(v4, "textContainer");
  objc_msgSend(v7, "setWidthTracksTextView:", 1);

  v8 = sub_100005ED8(0, (unint64_t *)&unk_1006406C0, UITextView_ptr);
  UITextDraggable<>.disableDragInteraction_rdar93793341()(v8);
  objc_msgSend(v4, "setTextDropDelegate:", *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_unsupportedTextDropHandler));
  v9 = UIAccessibilityTraitHeader;
  v10 = v4;
  v11 = (unint64_t)objc_msgSend(v10, "accessibilityTraits");
  if ((v9 & ~v11) != 0)
    v12 = v9;
  else
    v12 = 0;
  objc_msgSend(v10, "setAccessibilityTraits:", v12 | v11);

  LODWORD(v13) = 1132068864;
  objc_msgSend(v10, "setLayoutSize:withContentPriority:", NUIContainerViewSizeUnbounded[0], NUIContainerViewSizeUnbounded[1], v13);
  return v10;
}

id sub_100507E10()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___accessoryBox;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___accessoryBox);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___accessoryBox);
  }
  else
  {
    v4 = type metadata accessor for AccessoryBoxView();
    v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
    objc_msgSend(v5, "setVerticalAlignment:", 3);
    objc_msgSend(v5, "setHorizontalAlignment:", 0);
    objc_msgSend(v5, "setCustomAlignmentRectInsets:", 5.0, 0.0, 5.0, 0.0);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_100507ECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSString v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v20;

  v0 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UIButton.Configuration(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - v9;
  static UIButton.Configuration.plain()(v11);
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v12);

  UIButton.Configuration.image.setter(v13);
  sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v14 = (void *)static UIFont.roundedSubheadlineSemiboldFont.getter();
  v15 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v14);

  UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v15);
  v16 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
  UIButton.Configuration.baseForegroundColor.setter(v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v0);
  UIButton.Configuration.cornerStyle.setter(v3);
  type metadata accessor for TTRIExpandedHitTestButton(0);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  v17 = (void *)UIButton.init(configuration:primaryAction:)(v7, 0);
  objc_msgSend(v17, "setShowsMenuAsPrimaryAction:", 1);
  objc_msgSend(v17, "setPointerInteractionEnabled:", 1);
  v18 = v17;
  UIButton.pointerStyleProvider.setter(sub_100508118, 0);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return v18;
}

uint64_t sub_100508118(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  double x;
  double y;
  double width;
  double height;
  void *v19;
  id v20;
  id v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  CGFloat v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;

  v4 = sub_10002A750(&qword_100646D98);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for UIPointerEffect(0);
  v7 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UIPointerShape(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, "bounds", v12);
  v36 = CGRectInset(v35, -3.0, -3.0);
  x = v36.origin.x;
  y = v36.origin.y;
  width = v36.size.width;
  height = v36.size.height;
  v19 = (void *)UIPointerEffect.preview.getter();
  v20 = objc_msgSend(v19, "target");

  v21 = objc_msgSend(v20, "container");
  objc_msgSend(a1, "convertRect:toCoordinateSpace:", v21, x, y, width, height);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;

  v37.origin.x = v23;
  v37.origin.y = v25;
  v37.size.width = v27;
  v37.size.height = v29;
  v30 = CGRectGetHeight(v37);
  *(CGFloat *)v14 = v23;
  *((CGFloat *)v14 + 1) = v25;
  *((CGFloat *)v14 + 2) = v27;
  *((CGFloat *)v14 + 3) = v29;
  *((CGFloat *)v14 + 4) = v30 * 0.5;
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v14, enum case for UIPointerShape.roundedRect(_:), v10);
  sub_100005ED8(0, &qword_100646DA0, UIPointerStyle_ptr);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v34);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v6, v14, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  v31 = UIPointerStyle.init(effect:shape:)(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return v31;
}

id sub_100508388(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = (void *)a2();
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

id sub_1005083E0()
{
  NSString v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  Swift::String v7;
  Swift::String v8;
  void *object;
  NSString v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  Swift::String v14;
  Swift::String v15;
  Class isa;
  UIAccessibilityTraits v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  CGAffineTransform v22;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v0);

  v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TTRIExpandedHitTestImageView(0)), "initWithImage:", v1);
  CGAffineTransformMakeRotation(&v22, 1.57079633);
  objc_msgSend(v2, "setTransform:", &v22);
  v3 = (void *)objc_opt_self(UIColor);
  v4 = v2;
  v5 = objc_msgSend(v3, "tertiaryLabelColor");
  objc_msgSend(v4, "setTintColor:", v5);

  objc_msgSend(v4, "setIsAccessibilityElement:", 1);
  v6 = v4;
  v7._countAndFlagsBits = 0xD000000000000038;
  v8._countAndFlagsBits = 0xD00000000000003CLL;
  v7._object = (void *)0x800000010057D830;
  v8._object = (void *)0x800000010057D870;
  object = TTRLocalizedString(_:comment:)(v7, v8)._object;
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v6, "setAccessibilityHint:", v10);

  v11 = sub_10002A750((uint64_t *)&unk_100654F80);
  v12 = swift_allocObject(v11, 48, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100520250;
  v13 = v6;
  v14._countAndFlagsBits = 0xD000000000000031;
  v14._object = (void *)0x800000010057D8B0;
  v15._countAndFlagsBits = 0x726564726F6552;
  v15._object = (void *)0xE700000000000000;
  *(Swift::String *)(v12 + 32) = TTRLocalizedString(_:comment:)(v15, v14);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v13, "setAccessibilityUserInputLabels:", isa);

  objc_msgSend(v13, "setAccessibilityRespondsToUserInteraction:", 1);
  v17 = UIAccessibilityTraitImage;
  v18 = v13;
  v19 = (unint64_t)objc_msgSend(v18, "accessibilityTraits");
  v20 = -1;
  if ((v19 & v17) != 0)
    v20 = ~v17;
  objc_msgSend(v18, "setAccessibilityTraits:", v20 & v19);

  return v18;
}

void sub_100508670(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_100507030();

  }
}

void sub_1005086C0()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  _QWORD v8[6];

  v1 = v0;
  v2 = objc_msgSend(v0, "containerView");
  v3 = swift_allocObject(&unk_10060D4D0, 32, 7);
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v0;
  v4 = swift_allocObject(&unk_10060D4F8, 32, 7);
  *(_QWORD *)(v4 + 16) = sub_10050A368;
  *(_QWORD *)(v4 + 24) = v3;
  v8[4] = sub_1000381EC;
  v8[5] = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10001B258;
  v8[3] = &unk_10060D510;
  v5 = _Block_copy(v8);
  v6 = v2;
  v7 = v1;
  swift_retain();
  objc_msgSend(v6, "performBatchUpdates:", v5, swift_release().n128_f64[0]);

  _Block_release(v5);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation(v4, "", 143, 201, 43, 1);
  swift_release();
  swift_release();
  if ((v1 & 1) != 0)
    __break(1u);
}

uint64_t sub_100508810(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  Class isa;
  uint64_t v7;
  id v8;
  uint64_t v9;
  Class v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[64];
  uint64_t v17;

  objc_msgSend(a1, "setAxis:", 0);
  objc_msgSend(a1, "setAlignment:", 3);
  objc_msgSend(a1, "setArrangedSubviewRemovalPolicy:", 2);
  objc_msgSend(a1, "setSpacing:", 12.0);
  objc_msgSend(a1, "setDirectionalLayoutMargins:", 12.0, 0.0, 8.0, 0.0);
  v2 = sub_100507E10();
  v3 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v4 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v4 + 16) = xmmword_10051FF90;
  *(_QWORD *)(v4 + 32) = sub_100508388(&OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___menuButton, (uint64_t (*)(void))sub_100507ECC);
  v5 = sub_100508388(&OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___reorderControl, (uint64_t (*)(void))sub_1005083E0);
  *(_QWORD *)(v4 + 40) = v5;
  specialized Array._endMutation()(v5);
  sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "setArrangedSubviews:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

  v7 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10051FF90;
  *(_QWORD *)(v7 + 32) = sub_10050603C();
  v8 = sub_100507E10();
  *(_QWORD *)(v7 + 40) = v8;
  v17 = v7;
  specialized Array._endMutation()(v8);
  v9 = v7;
  v10 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "setArrangedSubviews:", v10, swift_bridgeObjectRelease(v9).n128_f64[0]);

  v11 = sub_10002A750((uint64_t *)&unk_10065BE00);
  inited = swift_initStackObject(v11, v16);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = sub_10050603C();
  *(_DWORD *)(inited + 40) = 1132068864;
  *(_QWORD *)(inited + 48) = sub_100507E10();
  *(_DWORD *)(inited + 56) = 1148846080;
  static UIView.setContentPriorities(_:for:)(inited, &off_1005EB0F8);
  swift_setDeallocating(inited);
  v13 = *(_QWORD *)(inited + 16);
  v14 = sub_10002A750((uint64_t *)&unk_1006466B0);
  return swift_arrayDestroy(inited + 32, v13, v14);
}

void sub_100508A7C(uint64_t a1, char a2, uint64_t a3)
{
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  char v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  id v20;

  v6 = sub_100508388(&OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___menuButton, (uint64_t (*)(void))sub_100507ECC);
  v7 = v6;
  if (a1)
    v8 = *(unsigned __int8 *)(a3 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_isEditMode);
  else
    v8 = 1;
  objc_msgSend(v6, "setHidden:", v8);

  v9 = sub_100508388(&OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___menuButton, (uint64_t (*)(void))sub_100507ECC);
  objc_msgSend(v9, "setMenu:", a1);

  v10 = sub_100508388(&OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___reorderControl, (uint64_t (*)(void))sub_1005083E0);
  v11 = v10;
  if ((a2 & 1) != 0)
    v12 = 1;
  else
    v12 = *(_BYTE *)(a3 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_isEditMode) ^ 1;
  objc_msgSend(v10, "setHidden:", v12 & 1);

  v20 = sub_100507E10();
  v13 = sub_100507E10();
  v14 = objc_msgSend(v13, "visibleArrangedSubviews");

  if (v14)
  {
    v15 = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
    v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

    if ((unint64_t)v16 >> 62)
    {
      if (v16 < 0)
        v19 = v16;
      else
        v19 = v16 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v16);
      v17 = _CocoaArrayWrapper.endIndex.getter(v19);
      swift_bridgeObjectRelease(v16);
    }
    else
    {
      v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v16);
    v18 = v17 == 0;
  }
  else
  {
    v18 = 1;
  }
  objc_msgSend(v20, "setHidden:", v18);

}

void sub_100508C30(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  _QWORD *v22;
  void *v23;
  UIFont v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  NSString v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  _BYTE v47[24];
  _BYTE v48[24];

  v46 = a6;
  v43 = a5;
  v44 = a4;
  v9 = type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v43 - v13;
  v15 = sub_10002A750(&qword_100644980);
  __chkstk_darwin(v15);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10002A750((uint64_t *)&unk_100654970);
  __chkstk_darwin(v18);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = objc_msgSend((id)objc_opt_self(UIColor), *off_10060D538[*(char *)(a1 + 66)]);
  v22 = *(&off_10060D550 + *(char *)(a1 + 65));
  sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v23 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(*v22, 0, 1, 0);
  v24.super.isa = UIFont.withBoldTrait()().super.isa;

  v25 = sub_10050603C();
  objc_msgSend(v25, "setFont:", v24.super.isa);

  v26 = sub_10050603C();
  v45 = v21;
  objc_msgSend(v26, "setTextColor:", v21);

  v27 = sub_10050603C();
  v28 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v27, "setBackgroundColor:", v28);

  v29 = sub_10050603C();
  objc_msgSend(v29, "setUserInteractionEnabled:", a3 & 1);

  v30 = (uint64_t *)(a2 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_nameModule);
  swift_beginAccess(a2 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_nameModule, v48, 0, 0);
  v31 = *v30;
  if (v31)
  {
    sub_10002B1E8(v44, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
    v32 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v20, 0, 1, v32);
    v33 = v31 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
    swift_beginAccess(v31 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel, v47, 33, 0);
    swift_unknownObjectRetain(v31);
    sub_1003D3684((uint64_t)v20, v33, (uint64_t *)&unk_100654970);
    swift_endAccess(v47);
    sub_100415B30();
    sub_1000073A0((uint64_t)v20, (uint64_t *)&unk_100654970);
    swift_unknownObjectRelease(v31);
  }
  else
  {
    v34 = sub_10050603C();
    type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
    v35 = String._bridgeToObjectiveC()();
    objc_msgSend(v34, "setText:", v35);

  }
  v36 = sub_10050603C();
  objc_msgSend(v36, "setAttributedPlaceholder:", v43);

  TTRRemindersListViewModel.Item.sectionCasesOnly.getter(v37);
  sub_10002B1E8((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem);
  v38 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v11, 1, v38) == 1)
  {
    v39 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v17, 1, 1, v39);
  }
  else
  {
    sub_10002B1E8((uint64_t)v11, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v39 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v17, 0, 1, v39);
  }
  sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem);
  type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v17, 1, v39);
  if ((_DWORD)v40 != 1)
  {
    TTRRemindersListViewModel.SectionID.editableSectionCasesOnly.getter(v40);
    v42 = v41;
    sub_10001F544((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    __asm { BR              X10 }
  }
  sub_1000073A0((uint64_t)v17, &qword_100644980);
  sub_100508A7C(v46, 0, a2);

}

void sub_100509104()
{
  void *v0;

  JUMPOUT(0x1005090CCLL);
}

uint64_t sub_100509120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  _QWORD v35[7];
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[24];

  v1 = v0;
  v2 = type metadata accessor for SectionEntityID(0);
  v35[5] = *(_QWORD *)(v2 - 8);
  v35[6] = v2;
  __chkstk_darwin(v2);
  v35[4] = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AppEntityID(0);
  v35[2] = *(_QWORD *)(v4 - 8);
  v35[3] = v4;
  __chkstk_darwin(v4);
  v35[1] = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v9);
  v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v36 = (uint64_t)v35 - v13;
  v14 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
  __chkstk_darwin(v14);
  v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v37 = (uint64_t)v35 - v18;
  v19 = type metadata accessor for REMFeatureFlags(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19);
  v23 = (char *)v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (*(uint64_t (**)(char *, _QWORD, uint64_t, double))(v20 + 104))(v23, enum case for REMFeatureFlags.viewAnnotation(_:), v19, v21);
  v25 = REMFeatureFlags.isEnabled.getter(v24);
  result = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v23, v19);
  if ((v25 & 1) != 0)
  {
    v27 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_viewModelObserver);
    if (!v27)
    {
      __break(1u);
      JUMPOUT(0x10050954CLL);
    }
    v28 = v27 + *(_QWORD *)(*(_QWORD *)v27 + 88);
    v29 = swift_beginAccess(v28, v38, 0, 0);
    v30 = type metadata accessor for TTRBoardEditableColumnHeaderViewModel(0, v29);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v28, 1, v30);
    if (!(_DWORD)result)
    {
      sub_10002B1E8(v28 + *(int *)(v30 + 20), (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
      v31 = v37;
      sub_10001F580((uint64_t)v16, v37, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
      sub_10002B1E8(v31, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
      {
        sub_10001F580((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        v32 = v36;
        sub_10001F580((uint64_t)v11, v36, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        v33 = *(void **)(v32 + *(int *)(v9 + 44));
        if (v33)
        {
          TTRRemindersListViewModel.SectionID.editableSectionCasesOnly.getter(v33);
          __asm { BR              X10 }
        }
        sub_10001F544(v32, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      }
      else
      {
        sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      return sub_10001F544(v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
    }
  }
  return result;
}

uint64_t type metadata accessor for TTRIBoardEditableColumnHeader()
{
  return objc_opt_self(_TtC9Reminders29TTRIBoardEditableColumnHeader);
}

void sub_10050964C(char a1, uint64_t a2)
{
  uint64_t v2;

  swift_getObjectType(v2, a2);
  __asm { BR              X10 }
}

id sub_1005096B4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;
  void *v34;
  void *v35;
  double v36;
  double v37;
  double v38;
  double v39;
  id result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  objc_msgSend(v34, "bounds");
  result = objc_msgSend(v35, "convertRect:fromCoordinateSpace:", v34, v36, v37, v38, v39);
  *(_QWORD *)v33 = v41;
  *(_QWORD *)(v33 + 8) = v42;
  *(_QWORD *)(v33 + 16) = v43;
  *(_QWORD *)(v33 + 24) = v44;
  *(_BYTE *)(v33 + 32) = 0;
  return result;
}

void sub_1005097AC()
{
  uint64_t v0;
  id v1;

  v1 = sub_10050603C();
  v0 = type metadata accessor for TTRIRemindersListEditableSectionNameTextView();
  UITextInput<>.ttrBeginEditing()(v0);

}

uint64_t sub_1005097E8@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _BYTE v5[40];

  sub_10050964C(a1, a2);
  return sub_10029A308((uint64_t)v5, a3);
}

void sub_100509824(uint64_t a1, uint64_t a2, char a3)
{
  sub_100509CC8(a3);
}

uint64_t type metadata accessor for AccessoryBoxView()
{
  return objc_opt_self(_TtC9RemindersP33_E1C0813461C0906AF08ECA319453B61E16AccessoryBoxView);
}

id sub_100509A0C@<X0>(_QWORD *a1@<X8>)
{
  _BYTE *v1;
  _BYTE *v2;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  unint64_t v8;
  id v9;
  unsigned __int8 v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  _BYTE *v30;
  id v31;
  id result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  _QWORD *v51;
  unint64_t v52;

  v2 = v1;
  v4 = sub_10050603C();
  v5 = objc_msgSend(v4, "snapshotViewAfterScreenUpdates:", 0);

  v6 = 0;
  if (!v5)
  {
    v30 = 0;
    v31 = 0;
    result = 0;
    v8 = 0;
LABEL_12:
    v25 = 0;
    v35 = 0;
    v37 = 0;
    v39 = 0;
    v42 = 0;
    v44 = 0;
    v46 = 0;
    v48 = 0;
    goto LABEL_13;
  }
  v7 = sub_10050603C();
  v8 = (unint64_t)UIView.snapshotImage()();

  if (!v8)
  {

    v30 = 0;
    v31 = 0;
    v5 = 0;
    result = 0;
    goto LABEL_12;
  }
  v9 = sub_100507E10();
  v10 = objc_msgSend(v9, "isHidden");

  if ((v10 & 1) != 0
    || (v11 = sub_100507E10(),
        v12 = objc_msgSend(v11, "snapshotViewAfterScreenUpdates:", 0),
        v11,
        !v12))
  {
    v25 = _swiftEmptyArrayStorage;
  }
  else
  {
    v13 = v12;
    v14 = sub_100507E10();
    objc_msgSend(v14, "bounds");
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v22 = v21;

    v23 = sub_100507E10();
    v24 = v2[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_isEditMode];
    v25 = sub_100456570(0, 1, 1, _swiftEmptyArrayStorage);
    v26 = v25[2];
    v27 = v25[3];
    v28 = v26 + 1;
    if (v26 >= v27 >> 1)
    {
      v52 = v26 + 1;
      v49 = v25;
      v50 = v25[2];
      v51 = sub_100456570((_QWORD *)(v27 > 1), v26 + 1, 1, v49);
      v26 = v50;
      v28 = v52;
      v25 = v51;
    }
    v25[2] = v28;
    v29 = &v25[7 * v26];
    v29[4] = v13;
    v29[5] = v16;
    v29[6] = v18;
    v29[7] = v20;
    v29[8] = v22;
    v29[9] = v23;
    *((_BYTE *)v29 + 80) = v24 ^ 1;

  }
  v31 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v2, "bounds");
  v6 = v33;
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v30 = v2;
  v40 = sub_10050603C();
  objc_msgSend(v40, "bounds");
  v42 = v41;
  v44 = v43;
  v46 = v45;
  v48 = v47;

  result = sub_10050603C();
LABEL_13:
  *a1 = v6;
  a1[1] = v35;
  a1[2] = v37;
  a1[3] = v39;
  a1[4] = v30;
  a1[5] = v31;
  a1[6] = v5;
  a1[7] = v42;
  a1[8] = v44;
  a1[9] = v46;
  a1[10] = v48;
  a1[11] = result;
  a1[12] = v8;
  a1[13] = v25;
  return result;
}

void sub_100509CC8(char a1)
{
  __asm { BR              X10 }
}

id sub_100509CF4()
{
  uint64_t v0;
  id *v1;
  id result;
  uint64_t v3;

  v1 = (id *)(v0 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_dragInteraction);
  swift_beginAccess(v0 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_dragInteraction, &v3, 0, 0);
  result = *v1;
  if (*v1)
    return objc_msgSend(result, "setEnabled:", 0);
  return result;
}

uint64_t sub_100509D6C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100509D90(uint64_t a1, uint64_t a2)
{
  return sub_100509DB8((SEL *)&selRef_layoutSubviews, a2);
}

uint64_t sub_100509D9C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100509DAC(uint64_t a1, uint64_t a2)
{
  return sub_100509DB8((SEL *)&selRef_invalidateIntrinsicContentSize, a2);
}

id sub_100509DB8(SEL *a1, uint64_t a2)
{
  uint64_t v2;
  objc_super v5;

  v5.receiver = *(id *)(v2 + 16);
  v5.super_class = (Class)swift_getObjectType(v5.receiver, a2);
  return objc_msgSendSuper2(&v5, *a1);
}

uint64_t sub_100509DF8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100509E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  int v28;
  char *v29;
  int v30;
  unint64_t v31;
  unint64_t v32;

  v1 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 153) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  sub_10003E2EC(*(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 80));
  v6 = *(unsigned __int8 *)(v0 + 136);
  if (v6 != 255)
    sub_10002B328(*(void **)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), v6 & 1);

  v7 = (_QWORD *)(v0 + v4);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
  {
    case 0u:
      v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v9))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_25;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_6;
        default:
          goto LABEL_26;
      }
      goto LABEL_26;
    case 1u:
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v10))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_25:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_6:
          v11 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v4, v11);
          break;
        default:
          break;
      }
LABEL_26:
      v25 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v26 = (char *)v7 + *(int *)(v25 + 20);
      v27 = *((_QWORD *)v26 + 1);
      if (v27)
      {
        swift_bridgeObjectRelease(v27);
        sub_10003E2EC(*((void **)v26 + 2), *((_QWORD *)v26 + 3), *((_QWORD *)v26 + 4), *((_QWORD *)v26 + 5), *((_QWORD *)v26 + 6), *((_QWORD *)v26 + 7), v26[64]);
        v28 = v26[120];
        if (v28 != 255)
          sub_10002B328(*((void **)v26 + 9), *((_QWORD *)v26 + 10), *((_QWORD *)v26 + 11), *((_QWORD *)v26 + 12), *((_QWORD *)v26 + 13), *((_QWORD *)v26 + 14), v28 & 1);
      }
      v17 = *(id *)((char *)v7 + *(int *)(v25 + 44));
      goto LABEL_30;
    case 2u:

      v12 = (id *)((char *)v7 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
      {
        switch(swift_getEnumCaseMultiPayload(v12, v13))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_34;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_13;
          default:
            goto LABEL_31;
        }
      }
      goto LABEL_31;
    case 3u:

      v12 = (id *)((char *)v7 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v12, 1, v14))
      {
        switch(swift_getEnumCaseMultiPayload(v12, v14))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_34;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_13;
          default:
            goto LABEL_31;
        }
      }
      goto LABEL_31;
    case 4u:

      v12 = (id *)((char *)v7 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v12, 1, v15))
      {
        switch(swift_getEnumCaseMultiPayload(v12, v15))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_34:
            v17 = *v12;
            goto LABEL_30;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_13:
            v16 = type metadata accessor for Date(0);
            goto LABEL_23;
          default:
            goto LABEL_31;
        }
      }
      goto LABEL_31;
    case 5u:
      v17 = (id)v7[2];
      goto LABEL_30;
    case 6u:
      v17 = (id)*v7;
      goto LABEL_30;
    case 7u:
      v18 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
      {
        swift_bridgeObjectRelease(*v7);
        v19 = (char *)v7 + *(int *)(v18 + 20);
        v20 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
      }
      v21 = (char *)v7 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (!v22)
        goto LABEL_31;
      swift_bridgeObjectRelease(v22);
      v17 = (id)*((_QWORD *)v21 + 2);
LABEL_30:

LABEL_31:
      v29 = (char *)v7 + *(int *)(v1 + 20);
      swift_bridgeObjectRelease(*((_QWORD *)v29 + 1));
      sub_10003E2EC(*((void **)v29 + 2), *((_QWORD *)v29 + 3), *((_QWORD *)v29 + 4), *((_QWORD *)v29 + 5), *((_QWORD *)v29 + 6), *((_QWORD *)v29 + 7), v29[64]);
      v30 = v29[120];
      if (v30 != 255)
        sub_10002B328(*((void **)v29 + 9), *((_QWORD *)v29 + 10), *((_QWORD *)v29 + 11), *((_QWORD *)v29 + 12), *((_QWORD *)v29 + 13), *((_QWORD *)v29 + 14), v30 & 1);
      v31 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
      v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;

      return swift_deallocObject(v0, v32 + 8, v3 | 7);
    case 8u:
      v23 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v0 + v4, 1, v23))
      {
        v24 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v0 + v4, v24);
      }
      goto LABEL_31;
    case 9u:
      v12 = (id *)((char *)v7 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v16 = type metadata accessor for AnyTip(0);
LABEL_23:
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v12, v16);
      goto LABEL_31;
    default:
      goto LABEL_31;
  }
}

void sub_10050A2A8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 153) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100508C30(v0 + 16, *(_QWORD *)(v0 + 144), *(_BYTE *)(v0 + 152), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10050A300()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10050A310()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10050A334(uint64_t a1)
{
  uint64_t v1;

  sub_100508670(a1, v1);
}

uint64_t sub_10050A33C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10050A368()
{
  uint64_t v0;

  return sub_100508810(*(void **)(v0 + 16));
}

uint64_t sub_10050A370()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

BOOL sub_10050A39C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  BOOL v6;
  NSString *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[24];
  _QWORD v19[3];
  uint64_t v20;

  v5 = v2 + OBJC_IVAR___TTRIWindowSceneController_rootModuleInterface;
  swift_beginAccess(v5, v18, 0, 0);
  sub_10000735C(v5, (uint64_t)&v16, &qword_100651F38);
  if (!*((_QWORD *)&v17 + 1))
  {
    sub_1000073A0((uint64_t)&v16, &qword_100651F38);
    return 0;
  }
  sub_10002E37C(&v16, (uint64_t)v19);
  sub_10001413C(v19, v20);
  if ((sub_1000129D4() & 1) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v7 = UIApplicationOpenURLOptionsSourceApplicationKey;
      v8 = sub_1002AA394();
      if ((v9 & 1) != 0)
      {
        sub_100028CFC(*(_QWORD *)(a2 + 56) + 32 * v8, (uint64_t)&v16);
      }
      else
      {
        v16 = 0u;
        v17 = 0u;
      }

      if (*((_QWORD *)&v17 + 1))
      {
        if ((swift_dynamicCast(&v14, &v16, &type metadata for Any[8], &type metadata for String, 6) & 1) != 0)
        {
          v10 = v15;
          if (v14 == 0xD000000000000023 && v15 == 0x800000010057D9C0)
          {
            swift_bridgeObjectRelease(0x800000010057D9C0);
LABEL_21:
            v11 = 2;
            goto LABEL_18;
          }
          v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, 0xD000000000000023, 0x800000010057D9C0, 0);
          swift_bridgeObjectRelease(v10);
          if ((v13 & 1) != 0)
            goto LABEL_21;
        }
LABEL_17:
        v11 = 0;
LABEL_18:
        sub_10001413C(v19, v20);
        v6 = sub_100267244(a1, v11);
        sub_100027F10(v19);
        return v6;
      }
    }
    else
    {
      v16 = 0u;
      v17 = 0u;
    }
    sub_1000073A0((uint64_t)&v16, &qword_100640E50);
    goto LABEL_17;
  }
  sub_100027F10(v19);
  return 0;
}

BOOL sub_10050A584(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  BOOL v32;
  uint64_t v33;
  unint64_t v34;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[136];

  v2 = sub_10002A750((uint64_t *)&unk_100640EE0);
  __chkstk_darwin(v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v36 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D628 != -1)
    swift_once(&qword_10063D628, sub_1002EBB3C);
  v11 = sub_100012DC4(v7, (uint64_t)qword_1006737C8);
  v38 = v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v12, v40);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 1701869940;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v14 = objc_msgSend(a1, "type");
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  *(_QWORD *)(inited + 48) = v15;
  *(_QWORD *)(inited + 56) = v17;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0x6F666E4972657375;
  *(_QWORD *)(inited + 88) = 0xE800000000000000;
  v18 = objc_msgSend(a1, "userInfo");
  if (v18)
  {
    v19 = v18;
    v20 = sub_10002A750((uint64_t *)&unk_1006655C0);
    v21 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v19, &type metadata for String, v20, &protocol witness table for String);

  }
  else
  {
    v21 = 0;
  }
  v39 = v21;
  v22 = sub_10002A750(&qword_1006655B8);
  v23 = String.init<A>(describing:)(&v39, v22);
  *(_QWORD *)(inited + 120) = &type metadata for String;
  *(_QWORD *)(inited + 96) = v23;
  *(_QWORD *)(inited + 104) = v24;
  v25 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Performing action for shortcut item {type: %@, userInfo: %@}", 60, 2, v25);
  v26 = swift_bridgeObjectRelease(v25);
  UIApplicationShortcutItem.actionURL.getter(v26);
  v27 = v37;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v4, 1, v37) == 1)
  {
    v28 = sub_1000073A0((uint64_t)v4, (uint64_t *)&unk_100640EE0);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.fault.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Unable to determine action URL for shortcut item", v31, 2u);
      swift_slowDealloc(v31, -1, -1);
    }

    v32 = 0;
  }
  else
  {
    v33 = (uint64_t)v36;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v36, v4, v27);
    v34 = sub_1003512B8((uint64_t)_swiftEmptyArrayStorage);
    v32 = sub_10050A39C(v33, v34);
    swift_bridgeObjectRelease(v34);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v33, v27);
  }
  (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v7);
  return v32;
}

uint64_t sub_10050A91C(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[9];

  v2 = v1;
  if (qword_10063D8C8 != -1)
    swift_once(&qword_10063D8C8, sub_100012CC4);
  v4 = type metadata accessor for Logger(0);
  sub_100012DC4(v4, (uint64_t)qword_1006653E0);
  v5 = a1;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v28[0] = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = v5;
    v11 = objc_msgSend(v5, "actionIdentifier");
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

    v5 = v10;
    v26 = sub_100027E40(v12, v14, v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v8 + 4, v8 + 12);

    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Handling UNNotificationResponse {actionIdentifier: %s}", v8, 0xCu);
    swift_arrayDestroy(v9, 1, &type metadata for Any[8]);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
  result = swift_allocObject(&unk_10060D6B0, 17, 7);
  *(_BYTE *)(result + 16) = 0;
  v16 = result + 16;
  v17 = *(void **)&v2[OBJC_IVAR___TTRIWindowSceneController_store];
  if (v17)
  {
    v18 = result;
    v19 = swift_allocObject(&unk_10060D6D8, 32, 7);
    *(_QWORD *)(v19 + 16) = v18;
    *(_QWORD *)(v19 + 24) = v2;
    v20 = swift_allocObject(&unk_10060D700, 32, 7);
    *(_QWORD *)(v20 + 16) = v18;
    *(_QWORD *)(v20 + 24) = v2;
    v21 = swift_allocObject(&unk_10060D728, 32, 7);
    *(_QWORD *)(v21 + 16) = v18;
    *(_QWORD *)(v21 + 24) = v2;
    v22 = swift_allocObject(&unk_10060D750, 32, 7);
    v28[0] = (uint64_t)v17;
    v28[1] = (uint64_t)sub_10050F930;
    *(_QWORD *)(v22 + 16) = v18;
    *(_QWORD *)(v22 + 24) = v2;
    v28[2] = v19;
    v28[3] = (uint64_t)sub_10050F93C;
    v28[4] = v20;
    v28[5] = (uint64_t)sub_10050F948;
    v28[6] = v21;
    v28[7] = (uint64_t)sub_10050F954;
    v28[8] = v22;
    swift_retain_n(v18, 4);
    v23 = v2;
    v24 = v17;
    sub_10035395C(v5);
    swift_release(v22);
    swift_release(v21);
    swift_release(v20);
    swift_release(v19);

    swift_beginAccess(v16, &v26, 0, 0);
    v25 = *(unsigned __int8 *)(v18 + 16);
    swift_release(v18);
    return v25;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10050AC44(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  v15 = a3;
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for REMNavigationSpecifier(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v16[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10002A750((uint64_t *)&unk_100642D20);
  *v12 = a1;
  static REMNavigationSpecifier.ReminderPathSpecifier.showInList.getter(a1);
  v13 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for REMNavigationSpecifier.reminder(_:), v9);
  REMNavigationSpecifier.url.getter(v13);
  v14 = sub_1003512B8((uint64_t)_swiftEmptyArrayStorage);
  LOBYTE(a1) = sub_10050A39C((uint64_t)v8, v14);
  swift_bridgeObjectRelease(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  swift_beginAccess(a2 + 16, v16, 1, 0);
  *(_BYTE *)(a2 + 16) = a1 & 1;
}

void sub_10050ADB8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20[24];

  v19 = a3;
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for REMNavigationSpecifier(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = a2 + 16;
  v13 = (char *)v12 + *(int *)(sub_10002A750((uint64_t *)&unk_100665610) + 48);
  *v12 = a1;
  v14 = enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:);
  v15 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for REMNavigationSpecifier.list(_:), v9);
  REMNavigationSpecifier.url.getter(a1);
  v16 = sub_1003512B8((uint64_t)_swiftEmptyArrayStorage);
  LOBYTE(a1) = sub_10050A39C((uint64_t)v8, v16);
  swift_bridgeObjectRelease(v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  swift_beginAccess(v18, v20, 1, 0);
  *(_BYTE *)(a2 + 16) = a1 & 1;
}

void sub_10050AF54(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  v16 = a3;
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for REMNavigationSpecifier(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *v12 = a1;
  v13 = enum case for REMNavigationSpecifier.SmartListPathSpecifier.select(_:);
  v14 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for REMNavigationSpecifier.today(_:), v9);
  REMNavigationSpecifier.url.getter(a1);
  v15 = sub_1003512B8((uint64_t)_swiftEmptyArrayStorage);
  LOBYTE(a1) = sub_10050A39C((uint64_t)v8, v15);
  swift_bridgeObjectRelease(v15);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  swift_beginAccess(a2 + 16, v17, 1, 0);
  *(_BYTE *)(a2 + 16) = a1 & 1;
}

void sub_10050B0D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  v15 = a2;
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for REMNavigationSpecifier(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:);
  v12 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for REMNavigationSpecifier.today(_:), v7);
  REMNavigationSpecifier.url.getter(v13);
  v14 = sub_1003512B8((uint64_t)_swiftEmptyArrayStorage);
  LOBYTE(v11) = sub_10050A39C((uint64_t)v6, v14);
  swift_bridgeObjectRelease(v14);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_beginAccess(a1 + 16, v16, 1, 0);
  *(_BYTE *)(a1 + 16) = v11 & 1;
}

uint64_t sub_10050B250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t v7;

  v0 = type metadata accessor for URL(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  REMNavigationSpecifier.url.getter(v2);
  v5 = sub_1003512B8((uint64_t)_swiftEmptyArrayStorage);
  sub_10050A39C((uint64_t)v4, v5);
  swift_bridgeObjectRelease(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

void sub_10050B30C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *oslog;
  uint64_t v15;
  uint64_t v16;

  if (qword_10063D8C8 != -1)
    swift_once(&qword_10063D8C8, sub_100012CC4);
  v6 = type metadata accessor for Logger(0);
  sub_100012DC4(v6, (uint64_t)qword_1006653E0);
  swift_bridgeObjectRetain(a3);
  swift_errorRetain(a1);
  swift_bridgeObjectRetain(a3);
  v7 = swift_errorRetain(a1);
  oslog = Logger.logObject.getter(v7);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v8))
  {
    v9 = swift_slowAlloc(22, -1);
    v10 = (uint64_t *)swift_slowAlloc(8, -1);
    v11 = swift_slowAlloc(32, -1);
    v16 = v11;
    *(_DWORD *)v9 = 136315394;
    swift_bridgeObjectRetain(a3);
    v15 = sub_100027E40(a2, a3, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease_n(a3, 3);
    *(_WORD *)(v9 + 12) = 2112;
    v12 = _convertErrorToNSError(_:)(a1);
    v15 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v9 + 14, v9 + 22);
    *v10 = v12;
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, oslog, v8, "Failed to navigate to Spotlight identifier %s, error: %@", (uint8_t *)v9, 0x16u);
    v13 = sub_10002A750(&qword_100642D60);
    swift_arrayDestroy(v10, 1, v13);
    swift_slowDealloc(v10, -1, -1);
    swift_arrayDestroy(v11, 1, &type metadata for Any[8]);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n(a3, 2);
    swift_errorRelease(a1);
    swift_errorRelease(a1);

  }
}

uint64_t sub_10050B568(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t result;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  const char *v54;
  char v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  void *v62;
  id v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  void (*v93)(char *, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  NSObject *v106;
  os_log_type_t v107;
  uint8_t *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  void (*v113)(char *, uint64_t);
  uint64_t v114;
  uint64_t v115;
  __n128 v116;
  void *v117;
  id v118;
  BOOL v119;
  BOOL v120;
  char v121;
  id v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  char v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  void (*v135)(char *, uint64_t);
  void (*v136)(char *, uint64_t);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  NSObject *v149;
  os_log_type_t v150;
  uint8_t *v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint8_t *v162;
  char v163;
  id v164;
  void *v165;
  char *v166;
  uint64_t v167;
  void (*v168)(char *, char *, uint64_t);
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t (*v173)(char *, char *, uint64_t);
  char *v174;
  uint64_t v175;
  NSObject *v176;
  os_log_type_t v177;
  uint64_t v178;
  uint8_t *v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  unint64_t v183;
  void (*v184)(char *, uint64_t);
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  id v188;
  os_log_type_t v189;
  uint8_t *v190;
  uint64_t v191;
  id v192;
  uint64_t v193;
  unint64_t v194;
  unint64_t v195;
  char *v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t (*v200)(char *, char *, uint64_t);
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t *v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  void (*v209)(char *, uint64_t);
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  char *v216;
  char *v217;
  char *v218;
  char *v219;
  char *v220;
  uint64_t (*v221)(char *, char *, uint64_t);
  uint64_t v222;
  uint64_t *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  void (*v228)(char *, uint64_t);
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  unint64_t v232;
  uint64_t v233;
  __int128 v234;
  __int128 v235;

  v213 = type metadata accessor for REMiCloudSharedItemSpecifier(0);
  v212 = *(_QWORD *)(v213 - 8);
  v2 = __chkstk_darwin(v213);
  v216 = (char *)&v210 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v211 = (char *)&v210 - v4;
  v5 = sub_10002A750((uint64_t *)&unk_100640EE0);
  __chkstk_darwin(v5);
  v218 = (char *)&v210 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750(&qword_1006655D8);
  __chkstk_darwin(v7);
  v9 = (char *)&v210 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRUserActivityListPayload(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v222 = (uint64_t)&v210 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for REMNavigationSpecifier(0);
  v224 = *(_QWORD *)(v13 - 8);
  v225 = v13;
  __chkstk_darwin(v13);
  v223 = (uint64_t *)((char *)&v210 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for URL(0);
  v226 = *(_QWORD *)(v15 - 8);
  v227 = v15;
  v16 = __chkstk_darwin(v15);
  v215 = (char *)&v210 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v214 = (char *)&v210 - v19;
  v20 = __chkstk_darwin(v18);
  v217 = (char *)&v210 - v21;
  v22 = __chkstk_darwin(v20);
  v219 = (char *)&v210 - v23;
  v24 = __chkstk_darwin(v22);
  v26 = (char *)&v210 - v25;
  v27 = __chkstk_darwin(v24);
  v221 = (uint64_t (*)(char *, char *, uint64_t))((char *)&v210 - v28);
  v29 = __chkstk_darwin(v27);
  v31 = (char *)&v210 - v30;
  __chkstk_darwin(v29);
  v220 = (char *)&v210 - v32;
  v33 = sub_10002A750((uint64_t *)&unk_1006655E0);
  __chkstk_darwin(v33);
  v35 = (char *)&v210 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = __chkstk_darwin(v36);
  v40 = (char *)&v210 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = NSUserActivity.ttrUserActivityType.getter(v38);
  if (result == 2)
  {
    v42 = objc_msgSend(a1, "activityType");
    v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    v45 = v44;

    v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(CSSearchableItemActionType);
    v48 = v47;
    if (v46 == v43 && v47 == v45)
    {
      swift_bridgeObjectRelease(v45);
      goto LABEL_12;
    }
    v55 = _stringCompareWithSmolCheck(_:_:expecting:)(v46, v47, v43, v45, 0);
    swift_bridgeObjectRelease(v48);
    if ((v55 & 1) != 0)
    {
LABEL_12:
      swift_bridgeObjectRelease(v45);
      v56 = objc_msgSend(a1, "userInfo");
      if (v56)
      {
        v57 = v56;
        v58 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v56, &type metadata for AnyHashable, &type metadata for Any[8], &protocol witness table for AnyHashable);

        v229 = static String._unconditionallyBridgeFromObjectiveC(_:)(CSSearchableItemActivityIdentifier);
        v230 = v59;
        AnyHashable.init<A>(_:)(&v231, &v229, &type metadata for String, &protocol witness table for String);
        if (*(_QWORD *)(v58 + 16) && (v60 = sub_1002AA7E4((uint64_t)&v231), (v61 & 1) != 0))
        {
          sub_100028CFC(*(_QWORD *)(v58 + 56) + 32 * v60, (uint64_t)&v234);
        }
        else
        {
          v234 = 0u;
          v235 = 0u;
        }
        sub_100041DDC((uint64_t)&v231);
        swift_bridgeObjectRelease(v58);
        if (*((_QWORD *)&v235 + 1))
        {
          if ((swift_dynamicCast(&v231, &v234, &type metadata for Any[8], &type metadata for String, 6) & 1) != 0)
          {
            v69 = v231;
            v68 = v232;
            if (qword_10063D8C8 != -1)
              swift_once(&qword_10063D8C8, sub_100012CC4);
            v70 = type metadata accessor for Logger(0);
            sub_100012DC4(v70, (uint64_t)qword_1006653E0);
            v71 = swift_bridgeObjectRetain_n(v68, 2);
            v72 = Logger.logObject.getter(v71);
            v73 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v72, v73))
            {
              v74 = (uint8_t *)swift_slowAlloc(12, -1);
              v75 = swift_slowAlloc(32, -1);
              v231 = v75;
              *(_DWORD *)v74 = 136315138;
              swift_bridgeObjectRetain(v68);
              *(_QWORD *)&v234 = sub_100027E40(v69, v68, &v231);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v234, (char *)&v234 + 8, v74 + 4, v74 + 12);
              swift_bridgeObjectRelease_n(v68, 3);
              _os_log_impl((void *)&_mh_execute_header, v72, v73, "Continuing user activity of CSSearchableItemActionType {uniqueIdentifier: %s}", v74, 0xCu);
              swift_arrayDestroy(v75, 1, &type metadata for Any[8]);
              swift_slowDealloc(v75, -1, -1);
              swift_slowDealloc(v74, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n(v68, 2);
            }
            v131 = static REMNavigationSpecifier.from(spotlightItemIdentifier:)(v69, v68);
            v132 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
            v133 = (void *)static OS_dispatch_queue.main.getter(v132);
            v134 = swift_allocObject(&unk_10060D610, 24, 7);
            v135 = v228;
            *(_QWORD *)(v134 + 16) = v228;
            v136 = v135;
            v137 = dispatch thunk of Promise.then<A>(on:closure:)(v133, sub_10050F8D8, v134, (char *)&type metadata for () + 8);
            swift_release(v131);

            swift_release(v134);
            v138 = swift_allocObject(&unk_10060D638, 32, 7);
            *(_QWORD *)(v138 + 16) = v69;
            *(_QWORD *)(v138 + 24) = v68;
            v139 = swift_bridgeObjectRetain(v68);
            v140 = (void *)zalgo.getter(v139);
            v141 = dispatch thunk of Promise.error(on:closure:)(v140, sub_10050F914, v138);
            swift_bridgeObjectRelease(v68);
            swift_release(v141);
            swift_release(v137);
            swift_release(v138);

            return 1;
          }
          goto LABEL_31;
        }
      }
      else
      {
        v234 = 0u;
        v235 = 0u;
      }
      sub_1000073A0((uint64_t)&v234, &qword_100640E50);
LABEL_31:
      if (qword_10063D8C8 != -1)
        swift_once(&qword_10063D8C8, sub_100012CC4);
      v76 = type metadata accessor for Logger(0);
      v77 = sub_100012DC4(v76, (uint64_t)qword_1006653E0);
      v51 = Logger.logObject.getter(v77);
      v52 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v51, v52))
        goto LABEL_80;
      v53 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v53 = 0;
      v54 = "Trying to continue user activity of CSSearchableItemActionType, but got no CSSearchableItemActivityIdentifier.";
      goto LABEL_78;
    }
    v95 = static String._unconditionallyBridgeFromObjectiveC(_:)(CSQueryContinuationActionType);
    v97 = v96;
    if (v95 == v43 && v96 == v45)
    {
      swift_bridgeObjectRelease(v45);
      v98 = v227;
      goto LABEL_51;
    }
    v121 = _stringCompareWithSmolCheck(_:_:expecting:)(v95, v96, v43, v45, 0);
    swift_bridgeObjectRelease(v97);
    v98 = v227;
    if ((v121 & 1) != 0)
    {
LABEL_51:
      swift_bridgeObjectRelease(v45);
      v122 = objc_msgSend(a1, "userInfo");
      if (v122)
      {
        v123 = v122;
        v124 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v122, &type metadata for AnyHashable, &type metadata for Any[8], &protocol witness table for AnyHashable);

        v229 = static String._unconditionallyBridgeFromObjectiveC(_:)(CSSearchQueryString);
        v230 = v125;
        AnyHashable.init<A>(_:)(&v231, &v229, &type metadata for String, &protocol witness table for String);
        if (*(_QWORD *)(v124 + 16))
        {
          v126 = sub_1002AA7E4((uint64_t)&v231);
          v127 = v226;
          if ((v128 & 1) != 0)
          {
            sub_100028CFC(*(_QWORD *)(v124 + 56) + 32 * v126, (uint64_t)&v234);
          }
          else
          {
            v234 = 0u;
            v235 = 0u;
          }
        }
        else
        {
          v234 = 0u;
          v235 = 0u;
          v127 = v226;
        }
        sub_100041DDC((uint64_t)&v231);
        swift_bridgeObjectRelease(v124);
        if (*((_QWORD *)&v235 + 1))
        {
          if ((swift_dynamicCast(&v231, &v234, &type metadata for Any[8], &type metadata for String, 6) & 1) != 0)
          {
            v145 = v231;
            v146 = v232;
            if (qword_10063D8C8 != -1)
              swift_once(&qword_10063D8C8, sub_100012CC4);
            v147 = type metadata accessor for Logger(0);
            v148 = sub_100012DC4(v147, (uint64_t)qword_1006653E0);
            v149 = Logger.logObject.getter(v148);
            v150 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v149, v150))
            {
              v151 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v151 = 0;
              _os_log_impl((void *)&_mh_execute_header, v149, v150, "Continuing user activity of CSQueryContinuationActionType", v151, 2u);
              swift_slowDealloc(v151, -1, -1);
            }

            v152 = v223;
            *v223 = v145;
            v152[1] = v146;
            v153 = enum case for REMNavigationSpecifier.SearchPathSpecifier.showContents(_:);
            v154 = type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier(0);
            (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v154 - 8) + 104))(v152, v153, v154);
            v156 = v224;
            v155 = v225;
            v157 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v224 + 104))(v152, enum case for REMNavigationSpecifier.search(_:), v225);
            v158 = (uint64_t)v219;
            REMNavigationSpecifier.url.getter(v157);
            v159 = sub_1003512B8((uint64_t)_swiftEmptyArrayStorage);
            v120 = sub_10050A39C(v158, v159);
            swift_bridgeObjectRelease(v159);
            (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v158, v98);
            (*(void (**)(uint64_t *, uint64_t))(v156 + 8))(v152, v155);
            return v120;
          }
          goto LABEL_74;
        }
      }
      else
      {
        v234 = 0u;
        v235 = 0u;
      }
      sub_1000073A0((uint64_t)&v234, &qword_100640E50);
LABEL_74:
      if (qword_10063D8C8 != -1)
        swift_once(&qword_10063D8C8, sub_100012CC4);
      v160 = type metadata accessor for Logger(0);
      v161 = sub_100012DC4(v160, (uint64_t)qword_1006653E0);
      v51 = Logger.logObject.getter(v161);
      v52 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v51, v52))
        goto LABEL_80;
      v53 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v53 = 0;
      v54 = "Trying to continue user activity of CSQueryContinuationActionType, but got no CSSearchQueryString.";
      goto LABEL_78;
    }
    v142 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUserActivityTypeBrowsingWeb);
    v144 = v143;
    if (v142 == v43 && v143 == v45)
    {
      swift_bridgeObjectRelease_n(v45, 2);
    }
    else
    {
      v163 = _stringCompareWithSmolCheck(_:_:expecting:)(v142, v143, v43, v45, 0);
      swift_bridgeObjectRelease(v45);
      swift_bridgeObjectRelease(v144);
      if ((v163 & 1) == 0)
      {
        if (qword_10063D8C8 != -1)
          swift_once(&qword_10063D8C8, sub_100012CC4);
        v187 = type metadata accessor for Logger(0);
        sub_100012DC4(v187, (uint64_t)qword_1006653E0);
        v188 = a1;
        v51 = Logger.logObject.getter(v188);
        v189 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v51, v189))
        {

          return 0;
        }
        v190 = (uint8_t *)swift_slowAlloc(12, -1);
        v191 = swift_slowAlloc(32, -1);
        v231 = v191;
        *(_DWORD *)v190 = 136315138;
        v192 = objc_msgSend(v188, "activityType");
        v193 = static String._unconditionallyBridgeFromObjectiveC(_:)(v192);
        v195 = v194;

        *(_QWORD *)&v234 = sub_100027E40(v193, v195, &v231);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v234, (char *)&v234 + 8, v190 + 4, v190 + 12);

        swift_bridgeObjectRelease(v195);
        _os_log_impl((void *)&_mh_execute_header, v51, v189, "Trying to continue unsupported user activity {activityType: %s}", v190, 0xCu);
        swift_arrayDestroy(v191, 1, &type metadata for Any[8]);
        swift_slowDealloc(v191, -1, -1);
        v162 = v190;
        goto LABEL_79;
      }
    }
    v164 = objc_msgSend(a1, "webpageURL");
    if (v164)
    {
      v165 = v164;
      v166 = v219;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v164);

      v167 = v226;
      v168 = *(void (**)(char *, char *, uint64_t))(v226 + 32);
      v169 = (uint64_t)v218;
      v168(v218, v166, v98);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v167 + 56))(v169, 0, 1, v98);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v167 + 48))(v169, 1, v98) != 1)
      {
        v170 = v217;
        v168(v217, (char *)v169, v98);
        if (qword_10063D8C8 != -1)
          swift_once(&qword_10063D8C8, sub_100012CC4);
        v171 = type metadata accessor for Logger(0);
        v172 = sub_100012DC4(v171, (uint64_t)qword_1006653E0);
        v173 = *(uint64_t (**)(char *, char *, uint64_t))(v167 + 16);
        v174 = v214;
        v175 = v173(v214, v170, v98);
        v176 = Logger.logObject.getter(v175);
        v177 = static os_log_type_t.default.getter();
        v178 = v98;
        if (os_log_type_enabled(v176, v177))
        {
          v179 = (uint8_t *)swift_slowAlloc(12, -1);
          v180 = swift_slowAlloc(32, -1);
          v231 = v180;
          v222 = v172;
          v221 = v173;
          *(_DWORD *)v179 = 136315138;
          v181 = URL.description.getter();
          v183 = v182;
          *(_QWORD *)&v234 = sub_100027E40(v181, v182, &v231);
          v173 = v221;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v234, (char *)&v234 + 8, v179 + 4, v179 + 12);
          swift_bridgeObjectRelease(v183);
          v184 = *(void (**)(char *, uint64_t))(v226 + 8);
          v184(v174, v178);
          _os_log_impl((void *)&_mh_execute_header, v176, v177, "Continuing user activity of NSUserActivityTypeBrowsingWeb {webpageURL: %s}", v179, 0xCu);
          swift_arrayDestroy(v180, 1, &type metadata for Any[8]);
          swift_slowDealloc(v180, -1, -1);
          swift_slowDealloc(v179, -1, -1);
        }
        else
        {
          v184 = *(void (**)(char *, uint64_t))(v167 + 8);
          v184(v174, v98);
        }

        v196 = v216;
        v197 = v215;
        v198 = v217;
        v173(v215, v217, v178);
        REMiCloudSharedItemSpecifier.init(url:)(v197);
        v199 = v212;
        v200 = *(uint64_t (**)(char *, char *, uint64_t))(v212 + 32);
        v201 = v211;
        v228 = v184;
        v202 = v178;
        v203 = v213;
        v204 = v200(v211, v196, v213);
        v205 = v223;
        v206 = REMiCloudSharedItemSpecifier.navigationSpecifier.getter(v204);
        v207 = (uint64_t)v219;
        REMNavigationSpecifier.url.getter(v206);
        (*(void (**)(uint64_t *, uint64_t))(v224 + 8))(v205, v225);
        v208 = sub_1003512B8((uint64_t)_swiftEmptyArrayStorage);
        v120 = sub_10050A39C(v207, v208);
        swift_bridgeObjectRelease(v208);
        v209 = v228;
        v228((char *)v207, v202);
        (*(void (**)(char *, uint64_t))(v199 + 8))(v201, v203);
        v209(v198, v202);
        return v120;
      }
    }
    else
    {
      v169 = (uint64_t)v218;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v226 + 56))(v218, 1, 1, v98);
    }
    sub_1000073A0(v169, (uint64_t *)&unk_100640EE0);
    if (qword_10063D8C8 != -1)
      swift_once(&qword_10063D8C8, sub_100012CC4);
    v185 = type metadata accessor for Logger(0);
    v186 = sub_100012DC4(v185, (uint64_t)qword_1006653E0);
    v51 = Logger.logObject.getter(v186);
    v52 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v51, v52))
      goto LABEL_80;
    v53 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v53 = 0;
    v54 = "Missing webpageURL from NSUserActivityTypeBrowsingWeb user activity";
LABEL_78:
    _os_log_impl((void *)&_mh_execute_header, v51, v52, v54, v53, 2u);
    v162 = v53;
LABEL_79:
    swift_slowDealloc(v162, -1, -1);
LABEL_80:

    return 0;
  }
  if ((result & 1) != 0)
  {
    v62 = *(void **)((char *)v228 + OBJC_IVAR___TTRIWindowSceneController_store);
    if (v62)
    {
      v63 = v62;
      NSUserActivity.listPayload(with:)();

      v64 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
      v65 = v227;
      if (v64 != 1)
      {
        v99 = sub_10001F580((uint64_t)v9, v222, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityListPayload);
        v100 = v223;
        v101 = TTRUserActivityListPayload.navigationSpecifier.getter(v99);
        v102 = (uint64_t)v221;
        REMNavigationSpecifier.url.getter(v101);
        (*(void (**)(uint64_t *, uint64_t))(v224 + 8))(v100, v225);
        if (qword_10063D8C8 != -1)
          swift_once(&qword_10063D8C8, sub_100012CC4);
        v103 = type metadata accessor for Logger(0);
        sub_100012DC4(v103, (uint64_t)qword_1006653E0);
        v104 = v226;
        v105 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v226 + 16))(v26, v102, v65);
        v106 = Logger.logObject.getter(v105);
        v107 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v106, v107))
        {
          v108 = (uint8_t *)swift_slowAlloc(12, -1);
          v109 = swift_slowAlloc(32, -1);
          v231 = v109;
          *(_DWORD *)v108 = 136315138;
          v110 = URL.description.getter();
          v112 = v111;
          *(_QWORD *)&v234 = sub_100027E40(v110, v111, &v231);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v234, (char *)&v234 + 8, v108 + 4, v108 + 12);
          swift_bridgeObjectRelease(v112);
          v113 = *(void (**)(char *, uint64_t))(v104 + 8);
          v113(v26, v65);
          _os_log_impl((void *)&_mh_execute_header, v106, v107, "Continuing user activity of .list {url: %s}", v108, 0xCu);
          swift_arrayDestroy(v109, 1, &type metadata for Any[8]);
          swift_slowDealloc(v109, -1, -1);
          swift_slowDealloc(v108, -1, -1);
        }
        else
        {
          v113 = *(void (**)(char *, uint64_t))(v104 + 8);
          v113(v26, v65);
        }

        v129 = sub_1003512B8((uint64_t)_swiftEmptyArrayStorage);
        v130 = (uint64_t)v221;
        v120 = sub_10050A39C((uint64_t)v221, v129);
        swift_bridgeObjectRelease(v129);
        v113((char *)v130, v65);
        sub_10001F544(v222, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityListPayload);
        return v120;
      }
      sub_1000073A0((uint64_t)v9, &qword_1006655D8);
      if (qword_10063D8C8 != -1)
        swift_once(&qword_10063D8C8, sub_100012CC4);
      v66 = type metadata accessor for Logger(0);
      v67 = sub_100012DC4(v66, (uint64_t)qword_1006653E0);
      v51 = Logger.logObject.getter(v67);
      v52 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v51, v52))
        goto LABEL_80;
      v53 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v53 = 0;
      v54 = "Trying to continue user activity of .list, but got no listPayload.";
      goto LABEL_78;
    }
    __break(1u);
  }
  else
  {
    NSUserActivity.windowSceneRestorationPayload.getter();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36) == 1)
    {
      sub_1000073A0((uint64_t)v35, (uint64_t *)&unk_1006655E0);
      if (qword_10063D8C8 != -1)
        swift_once(&qword_10063D8C8, sub_100012CC4);
      v49 = type metadata accessor for Logger(0);
      v50 = sub_100012DC4(v49, (uint64_t)qword_1006653E0);
      v51 = Logger.logObject.getter(v50);
      v52 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v51, v52))
        goto LABEL_80;
      v53 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v53 = 0;
      v54 = "Trying to continue user activity of .windowSceneRestoration, but got no windowSceneRestorationPayload.";
      goto LABEL_78;
    }
    v78 = sub_10001F580((uint64_t)v35, (uint64_t)v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
    v79 = v223;
    v80 = TTRUserActivityWindowSceneRestorationPayload.navigationSpecifier.getter(v78);
    v81 = v220;
    REMNavigationSpecifier.url.getter(v80);
    (*(void (**)(uint64_t *, uint64_t))(v224 + 8))(v79, v225);
    if (qword_10063D8C8 != -1)
      swift_once(&qword_10063D8C8, sub_100012CC4);
    v82 = type metadata accessor for Logger(0);
    sub_100012DC4(v82, (uint64_t)qword_1006653E0);
    v83 = v226;
    v84 = v227;
    v85 = (*(uint64_t (**)(char *, char *, uint64_t))(v226 + 16))(v31, v81, v227);
    v86 = Logger.logObject.getter(v85);
    v87 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v86, v87))
    {
      v88 = (uint8_t *)swift_slowAlloc(12, -1);
      v89 = swift_slowAlloc(32, -1);
      v231 = v89;
      *(_DWORD *)v88 = 136315138;
      v90 = URL.description.getter();
      v92 = v91;
      *(_QWORD *)&v234 = sub_100027E40(v90, v91, &v231);
      v84 = v227;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v234, (char *)&v234 + 8, v88 + 4, v88 + 12);
      swift_bridgeObjectRelease(v92);
      v93 = *(void (**)(char *, uint64_t))(v83 + 8);
      v93(v31, v84);
      _os_log_impl((void *)&_mh_execute_header, v86, v87, "Continuing user activity of .windowSceneRestoration {url: %s}", v88, 0xCu);
      swift_arrayDestroy(v89, 1, &type metadata for Any[8]);
      v94 = v89;
      v81 = v220;
      swift_slowDealloc(v94, -1, -1);
      swift_slowDealloc(v88, -1, -1);
    }
    else
    {
      v93 = *(void (**)(char *, uint64_t))(v83 + 8);
      v93(v31, v84);
    }

    v114 = (uint64_t)v228;
    v115 = (uint64_t)v228 + OBJC_IVAR___TTRIWindowSceneController_rootModuleInterface;
    v116 = swift_beginAccess((char *)v228 + OBJC_IVAR___TTRIWindowSceneController_rootModuleInterface, &v234, 0, 0);
    if (!*(_QWORD *)(v115 + 24))
    {
      ((void (*)(char *, uint64_t, __n128))v93)(v81, v84, v116);
      sub_10001F544((uint64_t)v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
      return 0;
    }
    sub_100010634(v115, (uint64_t)&v231);
    result = (uint64_t)sub_10001413C(&v231, v233);
    v117 = *(void **)(v114 + OBJC_IVAR___TTRIWindowSceneController_store);
    if (v117)
    {
      v118 = v117;
      sub_1002713D0((uint64_t)v40, (uint64_t)v118, v114);
      v120 = v119;

      v93(v81, v84);
      sub_10001F544((uint64_t)v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
      sub_100027F10(&v231);
      return v120;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10050CE38(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSString *v22;
  char isUniquelyReferenced_nonNull_native;
  id v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;
  _OWORD v30[2];
  __int128 v31;
  void *v32;

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D8C8 != -1)
    swift_once(&qword_10063D8C8, sub_100012CC4);
  v6 = type metadata accessor for Logger(0);
  sub_100012DC4(v6, (uint64_t)qword_1006653E0);
  v7 = a1;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(8, -1);
    v28 = v2;
    v12 = (_QWORD *)v11;
    v26 = v3;
    v27 = v5;
    *(_DWORD *)v10 = 138412290;
    *(_QWORD *)&v31 = v7;
    v13 = v7;
    v3 = v26;
    v5 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, (char *)&v31 + 8, v10 + 4, v10 + 12);
    *v12 = v7;

    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Opening URL context {urlContext: %@}", v10, 0xCu);
    v14 = sub_10002A750(&qword_100642D60);
    swift_arrayDestroy(v12, 1, v14);
    v15 = v12;
    v2 = v28;
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

  }
  v16 = objc_msgSend(v7, "options");
  v17 = objc_msgSend(v16, "sourceApplication");

  v18 = &_swiftEmptyDictionarySingleton;
  if (v17)
  {
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v21 = v20;

    v32 = &type metadata for String;
    *(_QWORD *)&v31 = v19;
    *((_QWORD *)&v31 + 1) = v21;
    sub_100028D38(&v31, v30);
    v22 = UIApplicationOpenURLOptionsSourceApplicationKey;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v29 = &_swiftEmptyDictionarySingleton;
    sub_1000988CC(v30, v22, isUniquelyReferenced_nonNull_native);
    v18 = v29;

    swift_bridgeObjectRelease(0x8000000000000000);
  }
  v24 = objc_msgSend(v7, "URL");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v24);

  LOBYTE(v24) = sub_10050A39C((uint64_t)v5, (uint64_t)v18);
  swift_bridgeObjectRelease(v18);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v24 & 1;
}

void sub_10050D130(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  BOOL v37;
  uint64_t v38;
  uint8_t *v39;
  id v40;
  id v41;
  _QWORD *v42;
  uint64_t v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  _BOOL4 v58;
  __n128 v59;
  void (*v60)(uint64_t, uint64_t, __n128);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  __n128 v75;
  void (*v76)(char *, uint64_t, __n128);
  uint64_t v77;
  unint64_t v78;
  id v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  id v90;
  _QWORD v91[3];
  char v92[8];
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v90 = a3;
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_1006655A0);
  __chkstk_darwin(v9);
  v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for REMNavigationSpecifier(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v81 - v17;
  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_10063D8C8 != -1)
      swift_once(&qword_10063D8C8, sub_100012CC4);
    v19 = type metadata accessor for Logger(0);
    sub_100012DC4(v19, (uint64_t)qword_1006653E0);
    v20 = a2;
    swift_errorRetain(a1);
    v90 = v20;
    v21 = swift_errorRetain(a1);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.error.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc(22, -1);
      v25 = (_QWORD *)swift_slowAlloc(8, -1);
      v26 = swift_slowAlloc(32, -1);
      v94 = v26;
      *(_DWORD *)v24 = 136315394;
      swift_getErrorValue(a1, v92, v91);
      v27 = Error.localizedDescription.getter(v91[1], v91[2]);
      v29 = v28;
      v93 = sub_100027E40(v27, v28, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v24 + 4, v24 + 12);
      swift_bridgeObjectRelease(v29);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      *(_WORD *)(v24 + 12) = 2112;
      v93 = (uint64_t)v90;
      v30 = v90;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v24 + 14, v24 + 22);
      *v25 = v90;

      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Failed to accept share {error: %s, metadata: %@}", (uint8_t *)v24, 0x16u);
      v31 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v25, 1, v31);
      swift_slowDealloc(v25, -1, -1);
      swift_arrayDestroy(v26, 1, &type metadata for Any[8]);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v24, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
  else
  {
    v89 = v11;
    v86 = v6;
    if (qword_10063D8C8 != -1)
      swift_once(&qword_10063D8C8, sub_100012CC4);
    v32 = type metadata accessor for Logger(0);
    v33 = sub_100012DC4(v32, (uint64_t)qword_1006653E0);
    v34 = a2;
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.default.getter(v35);
    v37 = os_log_type_enabled(v35, v36);
    v87 = v8;
    v88 = v5;
    if (v37)
    {
      v38 = swift_slowAlloc(12, -1);
      v83 = v33;
      v39 = (uint8_t *)v38;
      v82 = (_QWORD *)swift_slowAlloc(8, -1);
      v85 = v13;
      *(_DWORD *)v39 = 138412290;
      v94 = (uint64_t)v34;
      v40 = v34;
      v84 = v18;
      v41 = v40;
      v13 = v85;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v94, &v95, v39 + 4, v39 + 12);
      v42 = v82;
      *v82 = v34;

      v18 = v84;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Share accepted {metadata: %@}", v39, 0xCu);
      v43 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v42, 1, v43);
      swift_slowDealloc(v42, -1, -1);
      swift_slowDealloc(v39, -1, -1);

    }
    else
    {

    }
    v44 = objc_msgSend(v34, "hierarchicalRootRecordID");
    if (v44)
    {
      v45 = v44;
      v46 = objc_msgSend(v44, "recordName");

      v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
      v49 = v48;

      v50 = (uint64_t)v89;
      static REMNavigationSpecifier.from(cloudKitRecordName:)(v47, v49);
      v51 = swift_bridgeObjectRelease(v49);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v13 + 48))(v50, 1, v12, v51) != 1)
      {
        v55 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 32))(v18, v50, v12);
        v56 = (uint64_t)v87;
        REMNavigationSpecifier.url.getter(v55);
        v57 = sub_1003512B8((uint64_t)_swiftEmptyArrayStorage);
        v58 = sub_10050A39C(v56, v57);
        v59 = swift_bridgeObjectRelease(v57);
        v60 = *(void (**)(uint64_t, uint64_t, __n128))(v86 + 8);
        v61 = v88;
        v60(v56, v88, v59);
        v62 = (*(uint64_t (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
        v63 = v13;
        v64 = Logger.logObject.getter(v62);
        v65 = static os_log_type_t.default.getter(v64);
        v66 = v65;
        if (os_log_type_enabled(v64, v65))
        {
          v67 = swift_slowAlloc(22, -1);
          LODWORD(v86) = v58;
          v68 = v67;
          v69 = (void *)swift_slowAlloc(64, -1);
          v90 = v69;
          v94 = (uint64_t)v69;
          *(_DWORD *)v68 = 136315394;
          v85 = v68 + 4;
          LODWORD(v89) = v66;
          REMNavigationSpecifier.url.getter(v69);
          v70 = sub_10050F86C();
          v71 = dispatch thunk of CustomStringConvertible.description.getter(v61, v70);
          v72 = v61;
          v74 = v73;
          ((void (*)(uint64_t, uint64_t))v60)(v56, v72);
          v93 = sub_100027E40(v71, v74, &v94);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v85, v68 + 12);
          v75 = swift_bridgeObjectRelease(v74);
          v76 = *(void (**)(char *, uint64_t, __n128))(v63 + 8);
          v76(v15, v12, v75);
          *(_WORD *)(v68 + 12) = 2080;
          if ((v86 & 1) != 0)
            v77 = 7562617;
          else
            v77 = 28526;
          if ((v86 & 1) != 0)
            v78 = 0xE300000000000000;
          else
            v78 = 0xE200000000000000;
          v93 = sub_100027E40(v77, v78, &v94);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v68 + 14, v68 + 22);
          swift_bridgeObjectRelease(v78);
          _os_log_impl((void *)&_mh_execute_header, v64, (os_log_type_t)v89, "Share navigation handled {url: %s, handled: %s}", (uint8_t *)v68, 0x16u);
          v79 = v90;
          swift_arrayDestroy(v90, 2, &type metadata for Any[8]);
          swift_slowDealloc(v79, -1, -1);
          swift_slowDealloc(v68, -1, -1);

          ((void (*)(char *, uint64_t))v76)(v18, v12);
        }
        else
        {

          v80 = *(void (**)(char *, uint64_t))(v63 + 8);
          v80(v15, v12);
          v80(v18, v12);
        }
        return;
      }
      v44 = (id)sub_1000073A0(v50, &qword_1006655A0);
    }
    v52 = Logger.logObject.getter(v44);
    v53 = static os_log_type_t.error.getter(v52);
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v54 = 0;
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "Could not find listID from CKShare.Metatdata", v54, 2u);
      swift_slowDealloc(v54, -1, -1);
    }

  }
}

void sub_10050DA2C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint8_t *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = sub_10002A750((uint64_t *)&unk_100665590);
  __chkstk_darwin(v2);
  v36 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D8C8 != -1)
    swift_once(&qword_10063D8C8, sub_100012CC4);
  v4 = type metadata accessor for Logger(0);
  sub_100012DC4(v4, (uint64_t)qword_1006653E0);
  v5 = a1;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v39 = v9;
    *(_DWORD *)v8 = 136315138;
    v35 = v8 + 4;
    v10 = objc_msgSend(v5, "session");
    v11 = objc_msgSend(v10, "persistentIdentifier");

    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

    v38 = sub_100027E40(v12, v14, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v35, v8 + 12);

    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "sceneDidDisconnect {scene: %s}", v8, 0xCu);
    swift_arrayDestroy(v9, 1, &type metadata for Any[8]);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
  v15 = v5;
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v39 = v19;
    *(_DWORD *)v18 = 136315138;
    v20 = objc_msgSend(v15, "session");
    v21 = objc_msgSend(v20, "persistentIdentifier");

    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v24 = v23;

    v38 = sub_100027E40(v22, v24, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v18 + 4, v18 + 12);

    swift_bridgeObjectRelease(v24);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Clearing lastSelectedListInWindow for scene {scene: %s}", v18, 0xCu);
    swift_arrayDestroy(v19, 1, &type metadata for Any[8]);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

  }
  else
  {

  }
  v26 = v37;
  v27 = *(_QWORD *)(v37 + OBJC_IVAR___TTRIWindowSceneController_lastSelectedListStorage + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v37 + OBJC_IVAR___TTRIWindowSceneController_lastSelectedListStorage), v25);
  v29 = type metadata accessor for TTRListType(0);
  v30 = v36;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v36, 1, 1, v29);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v30, ObjectType, v27);
  v31 = OBJC_IVAR___TTRIWindowSceneController_mainWindow;
  v32 = *(void **)(v26 + OBJC_IVAR___TTRIWindowSceneController_mainWindow);
  if (v32)
  {
    objc_msgSend(v32, "setHidden:", 1);
    v33 = *(void **)(v26 + v31);
    *(_QWORD *)(v26 + v31) = 0;

  }
}

uint64_t sub_10050DE90(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  if (qword_10063D8C8 != -1)
    swift_once(&qword_10063D8C8, sub_100012CC4);
  v4 = type metadata accessor for Logger(0);
  sub_100012DC4(v4, (uint64_t)qword_1006653E0);
  v5 = a1;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v18 = v2;
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v20 = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = objc_msgSend(v5, "session");
    v11 = objc_msgSend(v10, "persistentIdentifier");

    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

    v19 = sub_100027E40(v12, v14, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v8 + 4, v8 + 12);

    v15 = v14;
    v2 = v18;
    swift_bridgeObjectRelease(v15);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "sceneWillResignActive {scene: %s}", v8, 0xCu);
    swift_arrayDestroy(v9, 1, &type metadata for Any[8]);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
  v16 = objc_opt_self(UIWindowScene);
  result = swift_dynamicCastObjCClass(v5, v16);
  if (result)
  {
    result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR___TTRIWindowSceneController_delegate);
    if (result)
      return swift_unknownObjectRelease(result);
  }
  return result;
}

double sub_10050E10C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double result;
  uint64_t Strong;
  id v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52[6];
  char v53[24];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58[32];

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v4);
  v49 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - v7;
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D8C8 != -1)
    swift_once(&qword_10063D8C8, sub_100012CC4);
  v13 = type metadata accessor for Logger(0);
  sub_100012DC4(v13, (uint64_t)qword_1006653E0);
  v14 = a1;
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(12, -1);
    v45 = swift_slowAlloc(32, -1);
    v52[0] = v45;
    v48 = v12;
    *(_DWORD *)v17 = 136315138;
    v44 = v17 + 4;
    v18 = objc_msgSend(v14, "session");
    v46 = v2;
    v19 = v18;
    v20 = objc_msgSend(v18, "persistentIdentifier");

    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v47 = v8;
    v22 = v10;
    v23 = v9;
    v25 = v24;

    v26 = v21;
    v2 = v46;
    v54 = sub_100027E40(v26, v25, v52);
    v12 = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v44, v17 + 12);

    v27 = v25;
    v9 = v23;
    v10 = v22;
    v8 = v47;
    swift_bridgeObjectRelease(v27);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "sceneDidEnterBackground {scene: %s}", v17, 0xCu);
    v28 = v45;
    swift_arrayDestroy(v45, 1, &type metadata for Any[8]);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v17, -1, -1);

  }
  else
  {

  }
  v29 = objc_opt_self(UIWindowScene);
  if (swift_dynamicCastObjCClass(v14, v29))
  {
    Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR___TTRIWindowSceneController_delegate);
    v32 = v14;
    if (Strong)
    {
      sub_1002581A4();
      swift_unknownObjectRelease(Strong);
    }
    v33 = (_QWORD *)(v2 + OBJC_IVAR___TTRIWindowSceneController_rootModuleInterface);
    swift_beginAccess(v2 + OBJC_IVAR___TTRIWindowSceneController_rootModuleInterface, v58, 0, 0);
    v34 = v33[3];
    if (v34)
    {
      v35 = sub_10001413C(v33, v34);
      v36 = *sub_10001413C((_QWORD *)(*v35 + 48), *(_QWORD *)(*v35 + 72)) + 96;
      swift_beginAccess(v36, v53, 0, 0);
      sub_10000AC28(v36, (uint64_t)v52);
      sub_10000AEFC();
      sub_10000AEA4(v52);
      if (v51)
      {
        sub_10002E37C(&v50, (uint64_t)&v54);
        v37 = v56;
        v38 = v57;
        sub_10001413C(&v54, v56);
        (*(void (**)(uint64_t, uint64_t))(v38 + 144))(v37, v38);
        sub_100027F10(&v54);
      }
      else
      {
        sub_1000073A0((uint64_t)&v50, (uint64_t *)&unk_1006655F0);
      }
    }
    v39 = v2 + OBJC_IVAR___TTRIWindowSceneController_lastEnterForegroundDate;
    swift_beginAccess(v39, v52, 0, 0);
    sub_10000735C(v39, (uint64_t)v8, (uint64_t *)&unk_100653A90);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {

      sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100653A90);
    }
    else
    {
      v40 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      v41 = Date.timeIntervalSinceNow.getter(v40);
      type metadata accessor for Analytics(0);
      static Analytics.postEvent(_:payload:duration:)(0xD000000000000029, 0x800000010057DA30, 0, *(_QWORD *)&v41 & 0x7FFFFFFFFFFFFFFFLL, 0);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v42 = (uint64_t)v49;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v49, 1, 1, v9);
      swift_beginAccess(v39, &v54, 33, 0);
      sub_100041F2C(v42, v39, (uint64_t *)&unk_100653A90);
      *(_QWORD *)&result = swift_endAccess(&v54).n128_u64[0];
    }
  }
  return result;
}

char *sub_10050E670(void *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  char *v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  __n128 v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR___TTRIWindowSceneController_rootModuleInterface);
  swift_beginAccess(v1 + OBJC_IVAR___TTRIWindowSceneController_rootModuleInterface, v42, 0, 0);
  v4 = v3[3];
  if (v4)
  {
    v5 = sub_10001413C(v3, v4);
    sub_10001413C((_QWORD *)(*v5 + 48), *(_QWORD *)(*v5 + 72));
    v6 = sub_10029EB54();
  }
  else
  {
    v6 = 0;
  }
  if (qword_10063D8C8 != -1)
    swift_once(&qword_10063D8C8, sub_100012CC4);
  v7 = type metadata accessor for Logger(0);
  sub_100012DC4(v7, (uint64_t)qword_1006653E0);
  v8 = a1;
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v41 = v12;
    *(_DWORD *)v11 = 136315138;
    v13 = v6;
    v14 = objc_msgSend(v8, "session");
    v15 = objc_msgSend(v14, "persistentIdentifier");

    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v18 = v17;

    v19 = v16;
    v6 = v13;
    v40 = sub_100027E40(v19, v18, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v11 + 4, v11 + 12);

    swift_bridgeObjectRelease(v18);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Returning stateRestorationActivity {scene: %s}", v11, 0xCu);
    swift_arrayDestroy(v12, 1, &type metadata for Any[8]);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

  }
  v20 = v6;
  v21 = v8;
  v22 = v20;
  v23 = v21;
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc(22, -1);
    v39 = swift_slowAlloc(64, -1);
    v41 = v39;
    *(_DWORD *)v26 = 136315394;
    v27 = objc_msgSend(v23, "session");
    v28 = objc_msgSend(v27, "persistentIdentifier");

    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v30 = v6;
    v32 = v31;

    v40 = sub_100027E40(v29, v32, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v26 + 4, v26 + 12);

    v33 = v32;
    v6 = v30;
    v34 = swift_bridgeObjectRelease(v33);
    *(_WORD *)(v26 + 12) = 2080;
    if (v30)
    {
      v35 = NSUserActivity.ttrDescription.getter(v34);
      v37 = v36;
    }
    else
    {
      v37 = 0xE300000000000000;
      v35 = 7104878;
    }
    v40 = sub_100027E40(v35, v37, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v26 + 14, v26 + 22);

    swift_bridgeObjectRelease(v37);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Returning activity for state saving for window scene {windowSceneIdentifier: %s, userActivity: %s}", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy(v39, 2, &type metadata for Any[8]);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v26, -1, -1);

  }
  else
  {

  }
  return v6;
}

void sub_10050EB54(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  __n128 v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  if (qword_10063D8C8 != -1)
    swift_once(&qword_10063D8C8, sub_100012CC4);
  v6 = type metadata accessor for Logger(0);
  sub_100012DC4(v6, (uint64_t)qword_1006653E0);
  v7 = a1;
  v8 = a2;
  v9 = v7;
  v10 = v8;
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(22, -1);
    v14 = swift_slowAlloc(64, -1);
    v30 = v14;
    *(_DWORD *)v13 = 136315394;
    v15 = objc_msgSend(v9, "session");
    v16 = objc_msgSend(v15, "persistentIdentifier");

    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v19 = v18;

    v29 = sub_100027E40(v17, v19, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v13 + 4, v13 + 12);

    v20 = swift_bridgeObjectRelease(v19);
    *(_WORD *)(v13 + 12) = 2080;
    v21 = NSUserActivity.ttrDescription.getter(v20);
    v23 = v22;
    v29 = sub_100027E40(v21, v22, &v30);
    v3 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v13 + 14, v13 + 22);

    swift_bridgeObjectRelease(v23);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "scene continue userActivity {scene: %s, userActivity: %s}", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy(v14, 2, &type metadata for Any[8]);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

  }
  else
  {

  }
  v25 = *(_DWORD *)(v3 + OBJC_IVAR___TTRIWindowSceneController_applicationRunProperties);
  if (v25 == 2)
  {
    __break(1u);
  }
  else if ((v25 & 0x10000) != 0)
  {
    sub_10050B568(v10);
  }
  else
  {
    v26 = Logger.logObject.getter(v24);
    v27 = static os_log_type_t.default.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "scene continue userActivity not allowed by applicationRunProperties", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }

  }
}

void sub_10050EEC0(void *a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __n128 v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;

  if (qword_10063D8C8 != -1)
    swift_once(&qword_10063D8C8, sub_100012CC4);
  v4 = type metadata accessor for Logger(0);
  sub_100012DC4(v4, (uint64_t)qword_1006653E0);
  v5 = a1;
  swift_bridgeObjectRetain_n(a2, 2);
  v6 = v5;
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc(22, -1);
    v10 = swift_slowAlloc(64, -1);
    v23 = v10;
    *(_DWORD *)v9 = 136315394;
    v11 = objc_msgSend(v6, "session");
    v12 = objc_msgSend(v11, "persistentIdentifier");

    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v15 = v14;

    v22 = sub_100027E40(v13, v15, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v9 + 4, v9 + 12);

    swift_bridgeObjectRelease(v15);
    *(_WORD *)(v9 + 12) = 2080;
    sub_100005ED8(0, &qword_100660C90, UIOpenURLContext_ptr);
    sub_1000199A0(&qword_1006655D0, &qword_100660C90, UIOpenURLContext_ptr);
    v16 = swift_bridgeObjectRetain(a2);
    v17 = Set.description.getter(v16);
    v19 = v18;
    swift_bridgeObjectRelease(a2);
    v22 = sub_100027E40(v17, v19, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v9 + 14, v9 + 22);
    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease(v19);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "scene openURLContexts {scene: %s, urlContexts: %s}", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v10, 2, &type metadata for Any[8]);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  swift_bridgeObjectRetain(a2);
  v21 = (void *)sub_10002CE14(v20);
  swift_bridgeObjectRelease(a2);
  if (v21)
  {
    sub_10050CE38(v21);

  }
}

uint64_t sub_10050F344()
{
  uint64_t v0;

  sub_1000073A0(v0 + OBJC_IVAR____TtC9Reminders32PerWindowLastSelectedListStorage_lastSelectedListInWindow, (uint64_t *)&unk_100665590);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10050F37C()
{
  return type metadata accessor for PerWindowLastSelectedListStorage(0);
}

void sub_10050F384(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_100005494(319, (unint64_t *)&unk_100665510, (uint64_t (*)(uint64_t))&type metadata accessor for TTRListType);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
  }
}

double sub_10050F400(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC9Reminders32PerWindowLastSelectedListStorage_lastSelectedListInWindow;
  swift_beginAccess(v3, v5, 33, 0);
  sub_100041F2C(a1, v3, (uint64_t *)&unk_100665590);
  *(_QWORD *)&result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_10050F460(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders32PerWindowLastSelectedListStorage_lastSelectedListInWindow, a1, 33, 0);
  return j__swift_endAccess_0;
}

void sub_10050F4A4(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;

  if (qword_10063D8C8 != -1)
    swift_once(&qword_10063D8C8, sub_100012CC4);
  v6 = type metadata accessor for Logger(0);
  sub_100012DC4(v6, (uint64_t)qword_1006653E0);
  v7 = a1;
  swift_bridgeObjectRetain_n(a3, 2);
  v17 = v7;
  v8 = Logger.logObject.getter(v17);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(64, -1);
    v19 = v11;
    *(_DWORD *)v10 = 136315394;
    v12 = objc_msgSend(v17, "session");
    v13 = objc_msgSend(v12, "persistentIdentifier");

    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

    v18 = sub_100027E40(v14, v16, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v10 + 4, v10 + 12);

    swift_bridgeObjectRelease(v16);
    *(_WORD *)(v10 + 12) = 2080;
    swift_bridgeObjectRetain(a3);
    v18 = sub_100027E40(a2, a3, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v10 + 14, v10 + 22);
    swift_bridgeObjectRelease_n(a3, 3);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "scene willContinueUserActivityWithType {scene: %s, userActivityType: %s}", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 2, &type metadata for Any[8]);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
  }
}

void sub_10050F71C(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  _QWORD v11[6];

  v2 = v1;
  v4 = objc_msgSend(objc_allocWithZone((Class)REMStore), "initUserInteractive:", 1);
  v5 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
  v6 = (void *)static OS_dispatch_queue.main.getter(v5);
  v7 = swift_allocObject(&unk_10060D5C0, 32, 7);
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = v2;
  v11[4] = sub_10050F864;
  v11[5] = v7;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_100009944;
  v11[3] = &unk_10060D5D8;
  v8 = _Block_copy(v11);
  v9 = a1;
  v10 = v2;
  objc_msgSend(v4, "acceptShareWithMetadata:queue:completion:", v9, v6, v8, swift_release().n128_f64[0]);
  _Block_release(v8);

}

uint64_t sub_10050F838()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10050F864(uint64_t a1)
{
  uint64_t v1;

  sub_10050D130(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

unint64_t sub_10050F86C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006655A8;
  if (!qword_1006655A8)
  {
    v1 = type metadata accessor for URL(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for URL, v1);
    atomic_store(result, (unint64_t *)&qword_1006655A8);
  }
  return result;
}

uint64_t sub_10050F8B4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10050F8D8()
{
  return sub_10050B250();
}

uint64_t sub_10050F8F0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10050F914(uint64_t a1)
{
  uint64_t v1;

  sub_10050B30C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10050F91C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void sub_10050F930(void *a1)
{
  uint64_t v1;

  sub_10050AC44(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_10050F93C(void *a1)
{
  uint64_t v1;

  sub_10050ADB8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_10050F948(void *a1)
{
  uint64_t v1;

  sub_10050AF54(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_10050F954()
{
  uint64_t v0;

  sub_10050B0D8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_10050F96C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v1 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 152);
  if (Strong)
  {
    v6 = Strong;
    ObjectType = swift_getObjectType(Strong, v5);
    if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIShowPublicTemplatePreviewModuleDelegate))
      v8 = v6;
    else
      v8 = 0;
    if (v8)
    {
      v9 = qword_10063D2E8;
      swift_retain();
      if (v9 != -1)
        swift_once(&qword_10063D2E8, sub_10005AF30);
      v10 = type metadata accessor for Logger(0);
      sub_100012DC4(v10, (uint64_t)qword_100640738);
      v11 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
      sub_1000143B4((uint64_t)"Template Sharing create or update link", 38, 2, v11);
      swift_bridgeObjectRelease(v11);
      v12 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v3, 1, 1, v12);
      type metadata accessor for MainActor(0);
      v13 = swift_retain();
      v14 = static MainActor.shared.getter(v13);
      v15 = (_QWORD *)swift_allocObject(&unk_10060D790, 40, 7);
      v15[2] = v14;
      v15[3] = &protocol witness table for MainActor;
      v15[4] = v8;
      sub_100148368((uint64_t)v3, (uint64_t)&unk_10064BD40, (uint64_t)v15);
      swift_release();
      swift_unknownObjectRelease(v6);
      swift_release();
    }
    else
    {
      swift_unknownObjectRelease(v6);
    }
  }
}

uint64_t sub_10050FB28()
{
  uint64_t v0;

  return swift_unknownObjectRelease(*(_QWORD *)(v0
                                              + OBJC_IVAR____TtC9Reminders38TTRIShowPublicTemplatePreviewPresenter_dataModelSource));
}

uint64_t sub_10050FB38()
{
  uint64_t v0;

  v0 = sub_10014866C();
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC9Reminders38TTRIShowPublicTemplatePreviewPresenter_dataModelSource));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10050FB78()
{
  return type metadata accessor for TTRIShowPublicTemplatePreviewPresenter(0);
}

uint64_t type metadata accessor for TTRIShowPublicTemplatePreviewPresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_1006656D0;
  if (!qword_1006656D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIShowPublicTemplatePreviewPresenter);
  return result;
}

uint64_t sub_10050FBBC(uint64_t a1)
{
  void *v2;

  v2 = &unk_10053B5C8;
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 2296);
}

uint64_t sub_10050FBFC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(_TtC9RemindersP33_C36BC4271CD08CB81C3668663CC89C8719ResourceBundleClass);
}

void sub_10050FC48(void *a1, NSObject *a2)
{
  void *v3;
  int v4;
  void *v5;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "softwareVersion"));
  v4 = 138412290;
  v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Failed to scan softwareVersion: %@", (uint8_t *)&v4, 0xCu);

}

void sub_10050FCDC(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "CloudKit device list request failed {error: %@}", (uint8_t *)&v2, 0xCu);
}

void sub_10050FD50(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10003417C((void *)&_mh_execute_header, a1, a3, "Device list request was already torn down.", a5, a6, a7, a8, 0);
}

void sub_10050FD84(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10003417C((void *)&_mh_execute_header, a1, a3, "Timed out waiting for both device lists", a5, a6, a7, a8, 0);
}

id objc_msgSend__hideSearchFieldAndCancelOutstandingSearches_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hideSearchFieldAndCancelOutstandingSearches:");
}

id objc_msgSend__interfaceIdiomToUse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_interfaceIdiomToUse");
}

id objc_msgSend__maxScrollerHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maxScrollerHeight");
}

id objc_msgSend__searchManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_searchManager");
}

id objc_msgSend__searchResultsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_searchResultsView");
}

id objc_msgSend__shadowView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shadowView");
}

id objc_msgSend__showSearchField(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showSearchField");
}

id objc_msgSend_account(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "account");
}

id objc_msgSend_activeKeyboard(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeKeyboard");
}

id objc_msgSend_addAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAddress:");
}

id objc_msgSend_addButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addButton");
}

id objc_msgSend_addContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addContact:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addRecipient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRecipient:");
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSubview:");
}

id objc_msgSend_allowPhoneNumbers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowPhoneNumbers");
}

id objc_msgSend_animateWithDuration_animations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:animations:");
}

id objc_msgSend_animateWithDuration_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:animations:completion:");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "array");
}

id objc_msgSend_arrayByAddingObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObject:");
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithArray:");
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObject:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_becomeFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "becomeFirstResponder");
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bounds");
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleForClass:");
}

id objc_msgSend_cal_isPhoneNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cal_isPhoneNumber");
}

id objc_msgSend_cancelTaskWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelTaskWithID:");
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearColor");
}

id objc_msgSend_clearText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearText");
}

id objc_msgSend_collaborationButtonView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collaborationButtonView");
}

id objc_msgSend_combineICloudDevices_withCloudKitDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "combineICloudDevices:withCloudKitDevices:");
}

id objc_msgSend_composeLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "composeLabel");
}

id objc_msgSend_composeRecipientViewDidFinishPickingRecipient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "composeRecipientViewDidFinishPickingRecipient:");
}

id objc_msgSend_contact(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contact");
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_controller_didUpdateRecipients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controller:didUpdateRecipients:");
}

id objc_msgSend_convertRect_fromView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertRect:fromView:");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copy");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "count");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentDevice");
}

id objc_msgSend_decimalDigitCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decimalDigitCharacterSet");
}

id objc_msgSend_defaultHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultHeight");
}

id objc_msgSend_defaultSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultSize");
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delegate");
}

id objc_msgSend_devices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "devices");
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissViewControllerAnimated:completion:");
}

id objc_msgSend_emailAddresses(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emailAddresses");
}

id objc_msgSend_fetchCloudKitDevicesWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCloudKitDevicesWithCompletionBlock:");
}

id objc_msgSend_fetchICloudDevicesWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchICloudDevicesWithCompletionBlock:");
}

id objc_msgSend_filteredDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filteredDevices:");
}

id objc_msgSend_firstMatchInString_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstMatchInString:options:range:");
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frame");
}

id objc_msgSend_hardwareInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hardwareInfo");
}

id objc_msgSend_hardwareInfoFromModelId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hardwareInfoFromModelId:");
}

id objc_msgSend_hardwareInfoNameFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hardwareInfoNameFromString:");
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_horizontalSizeClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "horizontalSizeClass");
}

id objc_msgSend_incompatibleDeviceNames(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "incompatibleDeviceNames");
}

id objc_msgSend_incompatibleDevices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "incompatibleDevices");
}

id objc_msgSend_initWithAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAccount:");
}

id objc_msgSend_initWithAutocompleteSearchType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAutocompleteSearchType:");
}

id objc_msgSend_initWithContact_address_kind_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContact:address:kind:");
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:");
}

id objc_msgSend_initWithName_model_modelDisplayName_softwareVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:model:modelDisplayName:softwareVersion:");
}

id objc_msgSend_initWithName_upgradable_upgraded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:upgradable:upgraded:");
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:");
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "integerValue");
}

id objc_msgSend_invalidateAtomPresentationOptionsForRecipient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateAtomPresentationOptionsForRecipient:");
}

id objc_msgSend_invertedSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invertedSet");
}

id objc_msgSend_isDragging(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDragging");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFirstResponder");
}

id objc_msgSend_isHardwareInfoUpgradable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHardwareInfoUpgradable:");
}

id objc_msgSend_isHardwareInfoUpgradableTo2019OSes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHardwareInfoUpgradableTo2019OSes:");
}

id objc_msgSend_isHardwareInfoUpgradableToSydneyRomeKincaid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHardwareInfoUpgradableToSydneyRomeKincaid:");
}

id objc_msgSend_isOSXDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isOSXDevice");
}

id objc_msgSend_key(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "key");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "length");
}

id objc_msgSend_loggableDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loggableDescription");
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lowercaseString");
}

id objc_msgSend_model(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "model");
}

id objc_msgSend_modelDisplayName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modelDisplayName");
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "name");
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationController");
}

id objc_msgSend_navigationItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationItem");
}

id objc_msgSend_needUpgradeDeviceNames(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needUpgradeDeviceNames");
}

id objc_msgSend_needUpgradeDevices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needUpgradeDevices");
}

id objc_msgSend_numberOfRanges(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfRanges");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_performRequestWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performRequestWithHandler:");
}

id objc_msgSend_phoneNumbers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneNumbers");
}

id objc_msgSend_predicateWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithFormat:");
}

id objc_msgSend_preferredHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredHeight");
}

id objc_msgSend_presentModalViewController_withTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentModalViewController:withTransition:");
}

id objc_msgSend_rangeAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeAtIndex:");
}

id objc_msgSend_recipientFromContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recipientFromContact:");
}

id objc_msgSend_recipients(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recipients");
}

id objc_msgSend_regularExpressionWithPattern_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "regularExpressionWithPattern:options:error:");
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllObjects");
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFromSuperview");
}

id objc_msgSend_removeRecipient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeRecipient:");
}

id objc_msgSend_resignFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resignFirstResponder");
}

id objc_msgSend_safeAreaInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "safeAreaInsets");
}

id objc_msgSend_scanInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scanInt:");
}

id objc_msgSend_searchForText_withAutocompleteFetchContext_consumer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchForText:withAutocompleteFetchContext:consumer:");
}

id objc_msgSend_searchWithText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchWithText:");
}

id objc_msgSend_setAddresses_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAddresses:");
}

id objc_msgSend_setAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlpha:");
}

id objc_msgSend_setAutoresizingMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoresizingMask:");
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundColor:");
}

id objc_msgSend_setCharactersToBeSkipped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCharactersToBeSkipped:");
}

id objc_msgSend_setContentSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentSize:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDevices:");
}

id objc_msgSend_setDidGetICloudDeviceList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidGetICloudDeviceList:");
}

id objc_msgSend_setDisplayedPropertyKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayedPropertyKeys:");
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrame:");
}

id objc_msgSend_setGutterWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGutterWidth:");
}

id objc_msgSend_setLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabel:");
}

id objc_msgSend_setModalPresentationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModalPresentationStyle:");
}

id objc_msgSend_setOfDeviceNamesFromDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOfDeviceNamesFromDevices:");
}

id objc_msgSend_setPredicateForEnablingContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPredicateForEnablingContact:");
}

id objc_msgSend_setPredicateForSelectionOfContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPredicateForSelectionOfContact:");
}

id objc_msgSend_setPredicateForSelectionOfProperty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPredicateForSelectionOfProperty:");
}

id objc_msgSend_setRecipients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecipients:");
}

id objc_msgSend_setSearchAccountIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchAccountIDs:");
}

id objc_msgSend_setSearchTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchTypes:");
}

id objc_msgSend_setSeparatorHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeparatorHidden:");
}

id objc_msgSend_setShowManageButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowManageButton:");
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:");
}

id objc_msgSend_setView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setView:");
}

id objc_msgSend_shouldBeHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldBeHidden");
}

id objc_msgSend_softwareVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "softwareVersion");
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringValue");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringWithRange:");
}

id objc_msgSend_superview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "superview");
}

id objc_msgSend_swVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "swVersion");
}

id objc_msgSend_systemBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemBackgroundColor");
}

id objc_msgSend_systemName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemName");
}

id objc_msgSend_systemVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemVersion");
}

id objc_msgSend_tableView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView");
}

id objc_msgSend_textView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textView");
}

id objc_msgSend_titleString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleString");
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollection");
}

id objc_msgSend_upgradable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "upgradable");
}

id objc_msgSend_upgraded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "upgraded");
}

id objc_msgSend_utility(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "utility");
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "value");
}

id objc_msgSend_verticalSizeClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verticalSizeClass");
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "view");
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "window");
}

id objc_msgSend_workSemaphore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workSemaphore");
}
