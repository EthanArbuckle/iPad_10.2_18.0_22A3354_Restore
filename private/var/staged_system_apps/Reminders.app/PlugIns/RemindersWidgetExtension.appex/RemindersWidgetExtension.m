uint64_t sub_100004964@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t OpaqueTypeConformance2;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55[2];
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v62 = a1;
  v1 = type metadata accessor for TTRTodayComplicationWidgetProvider(0);
  __chkstk_darwin();
  v3 = (char *)v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for REMWidgetRefresh.WidgetKind(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100006DA4(&qword_1000ACAD8);
  v56 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v10 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100006DA4(&qword_1000ACAE0);
  v12 = *(_QWORD *)(v11 - 8);
  v58 = v11;
  v59 = v12;
  __chkstk_darwin();
  v14 = (char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100006DA4(&qword_1000ACAE8);
  v16 = *(_QWORD *)(v15 - 8);
  v60 = v15;
  v61 = v16;
  __chkstk_darwin();
  v57 = (char *)v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for REMWidgetRefresh.WidgetKind.widgetForTodayList(_:), v4);
  v19 = REMWidgetRefresh.WidgetKind.widgetKindIdentifier.getter(v18);
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1000072AC(v55[1], (uint64_t)v3, type metadata accessor for TTRTodayComplicationWidgetProvider);
  v22 = type metadata accessor for TTRTodayComplicationWidget.WidgetPlaceholderWrapper(0);
  v23 = sub_100007218(&qword_1000ACAF0, type metadata accessor for TTRTodayComplicationWidget.WidgetPlaceholderWrapper, (uint64_t)&unk_1000883BC);
  v24 = sub_100007218(&qword_1000ACAF8, type metadata accessor for TTRTodayComplicationWidgetProvider, (uint64_t)&unk_100089E44);
  StaticConfiguration.init<A>(kind:provider:content:)(v19, v21, v3, sub_100004DFC, 0, v22, v1, v23, v24);
  v25 = LocalizedStringKey.init(stringLiteral:)(0x61646F5420657544, 0xE900000000000079);
  v26 = Text.init(_:tableName:bundle:comment:)(v25);
  v28 = v27;
  v30 = v29;
  v32 = v31 & 1;
  v33 = sub_1000095B4(&qword_1000ACB00, &qword_1000ACAD8, (uint64_t)&protocol conformance descriptor for StaticConfiguration<A>);
  WidgetConfiguration.configurationDisplayName(_:)(v26, v28, v32, v30, v8, v33);
  sub_10000729C(v26, v28, v32);
  swift_bridgeObjectRelease(v30);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v10, v8);
  v34 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000003FLL, 0x800000010008E650);
  v35 = Text.init(_:tableName:bundle:comment:)(v34);
  v37 = v36;
  v39 = v38;
  v41 = v40 & 1;
  v63 = v8;
  v64 = v33;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v63, &opaque type descriptor for <<opaque return type of WidgetConfiguration.configurationDisplayName(_:)>>, 1);
  v44 = v57;
  v43 = v58;
  WidgetConfiguration.description(_:)(v35, v37, v41, v39, v58, OpaqueTypeConformance2);
  sub_10000729C(v35, v37, v41);
  swift_bridgeObjectRelease(v39);
  v45 = v43;
  (*(void (**)(char *, uint64_t))(v59 + 8))(v14, v43);
  v46 = sub_100006DA4(&qword_1000ACB08);
  v47 = type metadata accessor for WidgetFamily(0);
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(unsigned __int8 *)(v48 + 80);
  v50 = (v49 + 32) & ~v49;
  v51 = swift_allocObject(v46, v50 + *(_QWORD *)(v48 + 72), v49 | 7);
  *(_OWORD *)(v51 + 16) = xmmword_1000882D0;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v48 + 104))(v51 + v50, enum case for WidgetFamily.accessoryInline(_:), v47);
  v63 = v45;
  v64 = OpaqueTypeConformance2;
  v52 = swift_getOpaqueTypeConformance2(&v63, &opaque type descriptor for <<opaque return type of WidgetConfiguration.description(_:)>>, 1);
  v53 = v60;
  WidgetConfiguration.supportedFamilies(_:)(v51, v60, v52);
  swift_bridgeObjectRelease(v51);
  return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v44, v53);
}

uint64_t sub_100004DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRTodayComplicationWidgetTimelineEntry(0);
  return sub_1000072AC(a1 + *(int *)(v4 + 20), a2, type metadata accessor for TTRTodayComplicationWidgetViewModel);
}

uint64_t sub_100004E3C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t OpaqueTypeConformance2;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a2;
  v27 = sub_100006DA4(&qword_1000ACBA0);
  ((void (*)(void))__chkstk_darwin)();
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for RedactionReasons(0);
  v25 = *(_QWORD *)(v5 - 8);
  v26 = v5;
  ((void (*)(void))__chkstk_darwin)();
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s10WidgetViewVMa(0);
  ((void (*)(void))__chkstk_darwin)();
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100006DA4(&qword_1000ACBA8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = ((uint64_t (*)(void))__chkstk_darwin)();
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v25 - v16;
  v18 = *(_BYTE *)(a1 + *(int *)(type metadata accessor for TTRTodayComplicationWidgetViewModel(0) + 20));
  v19 = sub_1000072AC(a1, (uint64_t)v10, type metadata accessor for TTRTodayComplicationWidgetViewModel);
  if ((v18 & 1) != 0)
  {
    static RedactionReasons.placeholder.getter(v19);
    v23 = sub_100007218(&qword_1000ACBB0, _s10WidgetViewVMa, (uint64_t)&unk_100089D7C);
    View.redacted(reason:)(v7, v8, v23);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v26);
    sub_100007EB4((uint64_t)v10, _s10WidgetViewVMa);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v15, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v4, v17, v11);
    swift_storeEnumTagMultiPayload(v4, v27, 0);
    v29 = v8;
    v30 = v23;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v29, &opaque type descriptor for <<opaque return type of View.redacted(reason:)>>, 1);
    _ConditionalContent<>.init(storage:)(v28, v4, v11, v8, OpaqueTypeConformance2, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  else
  {
    sub_1000072AC((uint64_t)v10, (uint64_t)v4, _s10WidgetViewVMa);
    swift_storeEnumTagMultiPayload(v4, v27, 1);
    v20 = sub_100007218(&qword_1000ACBB0, _s10WidgetViewVMa, (uint64_t)&unk_100089D7C);
    v29 = v8;
    v30 = v20;
    v21 = swift_getOpaqueTypeConformance2(&v29, &opaque type descriptor for <<opaque return type of View.redacted(reason:)>>, 1);
    _ConditionalContent<>.init(storage:)(v28, v4, v11, v8, v21, v20);
    return sub_100007EB4((uint64_t)v10, _s10WidgetViewVMa);
  }
}

uint64_t sub_100005118@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_100004E3C(v1, a1);
}

uint64_t sub_100005120@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  int *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  int *v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;

  v70 = a2;
  v69 = type metadata accessor for TTRTodayComplicationWidget.InlineNoDueRemindersView(0);
  __chkstk_darwin(v69);
  v64 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100006DA4(&qword_1000ACCC8);
  __chkstk_darwin(v65);
  v68 = (uint64_t)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for TTRTodayComplicationWidget.InlineOverdueRemindersCountView(0);
  __chkstk_darwin(v67);
  v6 = (uint64_t *)((char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100006DA4(&qword_1000ACCD0);
  __chkstk_darwin(v7);
  v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for TTRTodayComplicationWidget.InlineReminderView(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_100006DA4(&qword_1000ACCB0);
  __chkstk_darwin(v71);
  v66 = (uint64_t *)((char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_100006DA4(&qword_1000ACCD8);
  __chkstk_darwin(v14);
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100072D58((uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    v61 = v7;
    v62 = v9;
    v63 = v10;
    v21 = v70;
    sub_100009578((uint64_t)v16, &qword_1000ACCD8);
    v22 = sub_100073290();
    if (v22 <= 0)
    {
      v44 = type metadata accessor for URL(0);
      v45 = (uint64_t)v64;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v64, a1, v44);
      v46 = type metadata accessor for TTRTodayComplicationWidget.TodayInlineView(0);
      v47 = *(_QWORD *)(a1 + *(int *)(v46 + 20));
      v48 = *(_QWORD *)(a1 + *(int *)(v46 + 24));
      v50 = v68;
      v49 = v69;
      *(_QWORD *)(v45 + *(int *)(v69 + 20)) = v47;
      *(_QWORD *)(v45 + *(int *)(v49 + 24)) = v48;
      sub_1000072AC(v45, v50, type metadata accessor for TTRTodayComplicationWidget.InlineNoDueRemindersView);
      swift_storeEnumTagMultiPayload(v50, v65, 1);
      v51 = sub_100007218(&qword_1000ACCB8, type metadata accessor for TTRTodayComplicationWidget.InlineOverdueRemindersCountView, (uint64_t)&unk_100088514);
      v52 = sub_100007218(&qword_1000ACCC0, type metadata accessor for TTRTodayComplicationWidget.InlineNoDueRemindersView, (uint64_t)&unk_1000884C4);
      swift_retain(v47);
      swift_retain(v48);
      v34 = v66;
      _ConditionalContent<>.init(storage:)(v66, v50, v67, v49, v51, v52);
      v35 = v45;
      v36 = type metadata accessor for TTRTodayComplicationWidget.InlineNoDueRemindersView;
    }
    else
    {
      v23 = v22;
      v24 = v67;
      v25 = (char *)v6 + *(int *)(v67 + 20);
      v26 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v25, a1, v26);
      v27 = type metadata accessor for TTRTodayComplicationWidget.TodayInlineView(0);
      v28 = *(_QWORD *)(a1 + *(int *)(v27 + 20));
      v29 = *(_QWORD *)(a1 + *(int *)(v27 + 24));
      *v6 = v23;
      *(uint64_t *)((char *)v6 + *(int *)(v24 + 24)) = v28;
      *(uint64_t *)((char *)v6 + *(int *)(v24 + 28)) = v29;
      v30 = v68;
      sub_1000072AC((uint64_t)v6, v68, type metadata accessor for TTRTodayComplicationWidget.InlineOverdueRemindersCountView);
      swift_storeEnumTagMultiPayload(v30, v65, 0);
      v31 = sub_100007218(&qword_1000ACCB8, type metadata accessor for TTRTodayComplicationWidget.InlineOverdueRemindersCountView, (uint64_t)&unk_100088514);
      v32 = sub_100007218(&qword_1000ACCC0, type metadata accessor for TTRTodayComplicationWidget.InlineNoDueRemindersView, (uint64_t)&unk_1000884C4);
      swift_retain(v28);
      swift_retain(v29);
      v33 = v24;
      v34 = v66;
      _ConditionalContent<>.init(storage:)(v66, v30, v33, v69, v31, v32);
      v35 = (uint64_t)v6;
      v36 = type metadata accessor for TTRTodayComplicationWidget.InlineOverdueRemindersCountView;
    }
    sub_100007EB4(v35, v36);
    v53 = v21;
    v55 = (uint64_t)v62;
    v54 = v63;
    v56 = v71;
    v57 = v61;
    sub_100009434((uint64_t)v34, (uint64_t)v62, &qword_1000ACCB0);
    swift_storeEnumTagMultiPayload(v55, v57, 1);
    v58 = sub_100007218(&qword_1000ACCA0, type metadata accessor for TTRTodayComplicationWidget.InlineReminderView, (uint64_t)&unk_100088564);
    v59 = sub_100007DBC();
    _ConditionalContent<>.init(storage:)(v53, v55, v54, v56, v58, v59);
    return sub_100009578((uint64_t)v34, &qword_1000ACCB0);
  }
  else
  {
    sub_100007EF0((uint64_t)v16, (uint64_t)v20, type metadata accessor for TTRNewWidgetViewModel.Reminder);
    sub_1000072AC((uint64_t)v20, (uint64_t)v12, type metadata accessor for TTRNewWidgetViewModel.Reminder);
    v37 = (int *)type metadata accessor for TTRTodayComplicationWidget.TodayInlineView(0);
    v38 = *(_QWORD *)(a1 + v37[5]);
    v39 = *(_QWORD *)(a1 + v37[6]);
    v40 = *(_QWORD *)(a1 + v37[7]);
    *(_QWORD *)&v12[v10[5]] = v38;
    *(_QWORD *)&v12[v10[6]] = v39;
    *(_QWORD *)&v12[v10[7]] = v40;
    sub_1000072AC((uint64_t)v12, (uint64_t)v9, type metadata accessor for TTRTodayComplicationWidget.InlineReminderView);
    swift_storeEnumTagMultiPayload(v9, v7, 0);
    v41 = sub_100007218(&qword_1000ACCA0, type metadata accessor for TTRTodayComplicationWidget.InlineReminderView, (uint64_t)&unk_100088564);
    v42 = sub_100007DBC();
    swift_retain(v38);
    swift_retain(v39);
    swift_retain(v40);
    _ConditionalContent<>.init(storage:)(v70, v9, v10, v71, v41, v42);
    sub_100007EB4((uint64_t)v12, type metadata accessor for TTRTodayComplicationWidget.InlineReminderView);
    return sub_100007EB4((uint64_t)v20, type metadata accessor for TTRNewWidgetViewModel.Reminder);
  }
}

uint64_t sub_1000056EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_BYTE *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_BYTE *, _QWORD, uint64_t);
  uint64_t v23;
  void (*v24)(_BYTE *, _QWORD, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  _BYTE v32[4];
  unsigned int v33;
  void (*v34)(_BYTE *, uint64_t, uint64_t);
  void (*v35)(_BYTE *);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  void (*v40)(_BYTE *, _QWORD, uint64_t, uint64_t);

  v38 = a2;
  v4 = sub_100006DA4(&qword_1000ACBD8);
  __chkstk_darwin(v4);
  v6 = &v32[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for Font.TextStyle(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v32[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100007EF0(a1, a2, type metadata accessor for TTRTodayComplicationWidgetViewModel);
  v11 = type metadata accessor for TTRTodayComplicationWidget.TodayInlineView(0);
  v12 = *(int *)(v11 + 20);
  v36 = v11;
  v37 = v12;
  v39 = enum case for Font.TextStyle.body(_:);
  v35 = *(void (**)(_BYTE *))(v8 + 104);
  v35(v10);
  v13 = enum case for Font.Design.default(_:);
  v14 = type metadata accessor for Font.Design(0);
  v15 = *(_QWORD *)(v14 - 8);
  v34 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 104);
  v33 = v13;
  v34(v6, v13, v14);
  v40 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56);
  v40(v6, 0, 1, v14);
  v16 = static Font.system(_:design:weight:)(v10, v6, 0, 1);
  sub_100009578((uint64_t)v6, &qword_1000ACBD8);
  v17 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
  v18 = v7;
  v17(v10, v7);
  v19 = v38;
  *(_QWORD *)(v38 + v37) = v16;
  v20 = v36;
  v37 = *(int *)(v36 + 24);
  v21 = v7;
  v22 = (void (*)(_BYTE *, _QWORD, uint64_t))v35;
  ((void (*)(_BYTE *, _QWORD, uint64_t))v35)(v10, v39, v21);
  v23 = v13;
  v24 = v34;
  v34(v6, v23, v14);
  v40(v6, 0, 1, v14);
  v25 = static Font.system(_:design:weight:)(v10, v6, 0, 1);
  sub_100009578((uint64_t)v6, &qword_1000ACBD8);
  v17(v10, v18);
  *(_QWORD *)(v19 + v37) = v25;
  v26 = v19;
  v27 = *(int *)(v20 + 28);
  v22(v10, v39, v18);
  v24(v6, v33, v14);
  v40(v6, 0, 1, v14);
  v28 = static Font.system(_:design:weight:)(v10, v6, 0, 1);
  sub_100009578((uint64_t)v6, &qword_1000ACBD8);
  v29 = ((uint64_t (*)(_BYTE *, uint64_t))v17)(v10, v18);
  static Font.Weight.bold.getter(v29);
  v30 = Font.weight(_:)(v28);
  result = swift_release(v28);
  *(_QWORD *)(v26 + v27) = v30;
  return result;
}

uint64_t sub_1000059A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_100006DA4(&qword_1000ACC78);
  __chkstk_darwin(v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100006DA4(&qword_1000ACC80);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005120(v0, v6);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v3, v0, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v3, 0, 1, v7);
  v9 = sub_100007CC0(&qword_1000ACC88, &qword_1000ACC80, (void (*)(void))sub_100007D24);
  View.widgetURL(_:)(v3, v4, v9);
  sub_100009578((uint64_t)v3, &qword_1000ACC78);
  return sub_100009578((uint64_t)v6, &qword_1000ACC80);
}

id sub_100005AF0@<X0>(void **a1@<X0>, __int128 *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id result;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  char isEscapingClosureAtFileLocation;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  Swift::String v59;
  id v60;
  id v61;
  _QWORD *v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  char v68;
  __int128 v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 *v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  uint64_t KeyPath;
  uint64_t v91;
  _QWORD *v92;
  __int128 *v93;
  __int128 v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  __int128 aBlock;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  char v105;

  v4 = type metadata accessor for AttributedString.CharacterView(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100006DA4(&qword_1000ACE10);
  __chkstk_darwin(v7);
  v9 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)type metadata accessor for AttributedString(0);
  v11 = *(v10 - 1);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  sub_100009434((uint64_t)a1 + *(int *)(v14 + 24), (uint64_t)v9, &qword_1000ACE10);
  v15 = (*(uint64_t (**)(char *, uint64_t, _QWORD *))(v11 + 48))(v9, 1, v10);
  v93 = a2;
  if (v15 == 1)
  {
    sub_100009578((uint64_t)v9, &qword_1000ACE10);
    if (qword_1000AC7E8 != -1)
      swift_once(&qword_1000AC7E8, sub_100006C54);
    v16 = qword_1000AC7F0;
    v17 = type metadata accessor for TTRTodayComplicationWidget.InlineReminderView(0);
    v18 = *(uint64_t *)((char *)a1 + *(int *)(v17 + 24));
    KeyPath = swift_getKeyPath(&unk_1000885B8);
    v19 = *a1;
    *(_QWORD *)&v89 = v17;
    v11 = *(uint64_t *)((char *)a1 + *(int *)(v17 + 28));
    v92 = (_QWORD *)v16;
    swift_retain(v16);
    v91 = v18;
    swift_retain(v18);
    result = objc_msgSend(v19, "string");
    if (!result)
    {
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    v21 = result;
    v94 = xmmword_1000882E0;
    LOBYTE(v95) = 0;
    v96 = &_swiftEmptyArrayStorage;
    v22 = objc_msgSend((id)objc_opt_self(REMTTHashtag), "attributeName");
    v23 = objc_msgSend(v19, "length");
    v13 = (_QWORD *)swift_allocObject(&unk_1000A6930, 48, 7);
    v13[2] = &v94;
    v13[3] = v21;
    v13[4] = v11;
    v13[5] = 0;
    v24 = swift_allocObject(&unk_1000A6958, 32, 7);
    *(_QWORD *)(v24 + 16) = sub_1000094CC;
    *(_QWORD *)(v24 + 24) = v13;
    *(_QWORD *)&v103 = sub_1000094E8;
    *((_QWORD *)&v103 + 1) = v24;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v102 = sub_100009338;
    *((_QWORD *)&v102 + 1) = &unk_1000A6970;
    v10 = _Block_copy(&aBlock);
    v6 = (char *)*((_QWORD *)&v103 + 1);
    v25 = v21;
    swift_retain(v11);
    swift_retain(v24);
    swift_release(v6);
    objc_msgSend(v19, "enumerateAttribute:inRange:options:usingBlock:", v22, 0, v23, 0, v10);

    _Block_release(v10);
    v4 = 1;
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v24, "", 107, 27, 145, 1);
    swift_release(v24);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      v28 = *((_QWORD *)&v94 + 1);
      v27 = v94;
      v29 = v95;
      v30 = v96;
      swift_release(v13);
      v31 = Text.font(_:)(*(void **)((char *)a1 + *(int *)(v89 + 20)), v27, v28, v29, v30);
      v33 = v32;
      v35 = v34;
      v37 = v36 & 1;
      sub_10000729C(v27, v28, v29);
      swift_bridgeObjectRelease(v30);
      v38 = v92;
      swift_retain_n(v92, 2);
      v39 = v91;
      swift_retain_n(v91, 2);
      v40 = KeyPath;
      swift_retain(KeyPath);
      sub_100009520(v31, v33, v37);
      swift_bridgeObjectRetain(v35);
      swift_retain(v40);
      sub_100009520(v31, v33, v37);
      swift_bridgeObjectRetain(v35);
      sub_10000729C(v31, v33, v37);
      swift_release(v39);
      swift_release(v40);
      swift_release(v38);
      swift_bridgeObjectRelease(v35);
      *(_QWORD *)&v94 = v38;
      *((_QWORD *)&v94 + 1) = v40;
      v95 = v39;
      v96 = (void *)v31;
      v97 = v33;
      v98 = v37;
      v99 = v35;
      v100 = 1;
      v41 = sub_100006DA4(&qword_1000ACEC0);
      v42 = sub_1000095B4(&qword_1000ACEC8, &qword_1000ACEC0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      _ConditionalContent<>.init(storage:)(&aBlock, &v94, v41, v41, v42, v42);
      sub_10000729C(v31, v33, v37);
      swift_release(v39);
      swift_release(v40);
      swift_release(v38);
      result = (id)swift_bridgeObjectRelease(v35);
      v43 = aBlock;
      v44 = v102;
      v45 = v103;
      v46 = v104;
      v47 = v105;
LABEL_11:
      v84 = v93;
      *v93 = v43;
      v84[1] = v44;
      v84[2] = v45;
      *((_QWORD *)v84 + 6) = v46;
      *((_BYTE *)v84 + 56) = v47;
      return result;
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(_QWORD *, char *, _QWORD *))(v11 + 32))(v13, v9, v10);
    if (qword_1000AC7D8 == -1)
      goto LABEL_8;
  }
  swift_once(&qword_1000AC7D8, sub_100006C28);
LABEL_8:
  v91 = v11;
  v92 = v10;
  v48 = qword_1000AC7E0;
  v49 = type metadata accessor for TTRTodayComplicationWidget.InlineReminderView(0);
  v50 = *(uint64_t *)((char *)a1 + *(int *)(v49 + 24));
  *(_QWORD *)&v87 = swift_getKeyPath(&unk_1000885B8);
  v51 = *a1;
  v86 = v49;
  v52 = *(uint64_t *)((char *)a1 + *(int *)(v49 + 28));
  *(_QWORD *)&v89 = v48;
  swift_retain(v48);
  *(_QWORD *)&v88 = v50;
  v53 = swift_retain(v50);
  KeyPath = (uint64_t)v13;
  AttributedString.characters.getter(v53);
  v54 = sub_100007218(&qword_1000ACED0, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView, (uint64_t)&protocol conformance descriptor for AttributedString.CharacterView);
  v55 = String.init<A>(_:)(v6, v4, v54);
  v57 = v56;
  result = objc_msgSend(v51, "string");
  if (result)
  {
    v58 = result;
    *(_QWORD *)&aBlock = v55;
    *((_QWORD *)&aBlock + 1) = v57;
    v85 = v57;
    swift_bridgeObjectRetain(v57);
    v59._countAndFlagsBits = 32;
    v59._object = (void *)0xE100000000000000;
    String.append(_:)(v59);
    v94 = aBlock;
    LOBYTE(v95) = 0;
    v96 = &_swiftEmptyArrayStorage;
    v60 = objc_msgSend((id)objc_opt_self(REMTTHashtag), "attributeName");
    v61 = objc_msgSend(v51, "length");
    v62 = (_QWORD *)swift_allocObject(&unk_1000A69A8, 48, 7);
    v62[2] = &v94;
    v62[3] = v58;
    v62[4] = v52;
    v62[5] = 0;
    v63 = swift_allocObject(&unk_1000A69D0, 32, 7);
    *(_QWORD *)(v63 + 16) = sub_1000096E0;
    *(_QWORD *)(v63 + 24) = v62;
    *(_QWORD *)&v103 = sub_1000096E4;
    *((_QWORD *)&v103 + 1) = v63;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v102 = sub_100009338;
    *((_QWORD *)&v102 + 1) = &unk_1000A69E8;
    v64 = _Block_copy(&aBlock);
    v65 = v52;
    v66 = *((_QWORD *)&v103 + 1);
    v67 = v58;
    swift_retain(v65);
    swift_retain(v63);
    swift_release(v66);
    objc_msgSend(v51, "enumerateAttribute:inRange:options:usingBlock:", v60, 0, v61, 0, v64);

    _Block_release(v64);
    v68 = swift_isEscapingClosureAtFileLocation(v63, "", 107, 27, 145, 1);
    result = (id)swift_release(v63);
    if ((v68 & 1) == 0)
    {
      v69 = v94;
      v70 = v95;
      v71 = v96;
      swift_bridgeObjectRelease(v85);
      swift_release(v62);
      v72 = Text.font(_:)(*(void **)((char *)a1 + *(int *)(v86 + 20)), v69, *((_QWORD *)&v69 + 1), v70, v71);
      v74 = v73;
      v76 = v75;
      v78 = v77 & 1;
      sub_10000729C(v69, *((uint64_t *)&v69 + 1), v70);
      swift_bridgeObjectRelease(v71);
      v79 = v89;
      swift_retain_n(v89, 2);
      v80 = v88;
      swift_retain_n(v88, 2);
      v81 = v87;
      swift_retain(v87);
      sub_100009520(v72, v74, v78);
      swift_bridgeObjectRetain(v76);
      swift_retain(v81);
      sub_100009520(v72, v74, v78);
      swift_bridgeObjectRetain(v76);
      sub_10000729C(v72, v74, v78);
      swift_release(v80);
      swift_release(v81);
      swift_release(v79);
      swift_bridgeObjectRelease(v76);
      *(_QWORD *)&v94 = v79;
      *((_QWORD *)&v94 + 1) = v81;
      v95 = v80;
      v96 = (void *)v72;
      v97 = v74;
      v98 = v78;
      v99 = v76;
      v100 = 0;
      v82 = sub_100006DA4(&qword_1000ACEC0);
      v83 = sub_1000095B4(&qword_1000ACEC8, &qword_1000ACEC0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      _ConditionalContent<>.init(storage:)(&aBlock, &v94, v82, v82, v83, v83);
      sub_10000729C(v72, v74, v78);
      swift_release(v80);
      swift_release(v81);
      swift_release(v79);
      swift_bridgeObjectRelease(v76);
      v89 = aBlock;
      v88 = v102;
      v87 = v103;
      v46 = v104;
      v47 = v105;
      result = (id)(*(uint64_t (**)(uint64_t, _QWORD *))(v91 + 8))(KeyPath, v92);
      v45 = v87;
      v44 = v88;
      v43 = v89;
      goto LABEL_11;
    }
    __break(1u);
    goto LABEL_15;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_100006484()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17;
  _BYTE v18[40];
  __int128 v19;
  uint64_t v20;
  char v21;

  v1 = sub_100006DA4(&qword_1000ACC78);
  v2 = __chkstk_darwin(v1);
  v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  v5 = static VerticalAlignment.center.getter(v2);
  sub_100005AF0(v0, &v17);
  v6 = *(_QWORD *)&v18[32];
  v7 = v19;
  v8 = v17;
  v9 = *(_OWORD *)v18;
  v10 = *(_OWORD *)&v18[16];
  v17 = (unint64_t)v5;
  v18[0] = 1;
  *(_OWORD *)&v18[8] = v8;
  *(_OWORD *)&v18[24] = v9;
  v19 = v10;
  v20 = v6;
  v21 = v7;
  v11 = (char *)v0 + *(int *)(type metadata accessor for TTRNewWidgetViewModel.Reminder(0) + 28);
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(_BYTE *, char *, uint64_t))(v13 + 16))(v4, v11, v12);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v4, 0, 1, v12);
  v14 = sub_100006DA4(&qword_1000ACEB0);
  v15 = sub_1000095B4(&qword_1000ACEB8, &qword_1000ACEB0, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.widgetURL(_:)(v4, v14, v15);
  sub_100009578((uint64_t)v4, &qword_1000ACC78);
  return sub_1000093C8(*(uint64_t *)&v18[8], *(uint64_t *)&v18[16], *(uint64_t *)&v18[24], *(uint64_t *)&v18[32], v19, SBYTE8(v19), v20);
}

uint64_t sub_1000065EC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v21;
  _BYTE v22[24];
  __int128 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  v1 = sub_100006DA4(&qword_1000ACC78);
  v2 = __chkstk_darwin(v1);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  v5 = static VerticalAlignment.center.getter(v2);
  sub_10000677C(v0, (uint64_t)&v21);
  v6 = *(_QWORD *)&v22[16];
  v7 = v23;
  v8 = *((_QWORD *)&v23 + 1);
  v10 = v21;
  v9 = *(_OWORD *)v22;
  v21 = (unint64_t)v5;
  v22[0] = 1;
  *(_OWORD *)&v22[8] = v10;
  v23 = v9;
  v24 = v6;
  v25 = v7;
  v26 = v8;
  v11 = (char *)v0
      + *(int *)(type metadata accessor for TTRTodayComplicationWidget.InlineOverdueRemindersCountView(0) + 20);
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(_BYTE *, char *, uint64_t))(v13 + 16))(v4, v11, v12);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v4, 0, 1, v12);
  v14 = sub_100006DA4(&qword_1000ACEE0);
  v15 = sub_1000095B4(&qword_1000ACEE8, &qword_1000ACEE0, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.widgetURL(_:)(v4, v14, v15);
  sub_100009578((uint64_t)v4, &qword_1000ACC78);
  v16 = *(_QWORD *)&v22[8];
  v17 = v23;
  v18 = v24;
  LOBYTE(v14) = v25;
  v19 = v26;
  swift_release(*(_QWORD *)&v22[16]);
  swift_release(v16);
  swift_release(v17);
  sub_10000729C(*((uint64_t *)&v17 + 1), v18, v14);
  return swift_bridgeObjectRelease(v19);
}

uint64_t sub_10000677C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  if (qword_1000AC7E8 != -1)
    swift_once(&qword_1000AC7E8, sub_100006C54);
  v4 = qword_1000AC7F0;
  v5 = type metadata accessor for TTRTodayComplicationWidget.InlineOverdueRemindersCountView(0);
  v6 = *(uint64_t *)((char *)a1 + *(int *)(v5 + 28));
  KeyPath = swift_getKeyPath(&unk_1000885B8);
  v8 = *a1;
  swift_retain(v4);
  swift_retain(v6);
  v9 = sub_100018CEC(v8);
  v11 = v10;
  v12 = Text.font(_:)(*(uint64_t *)((char *)a1 + *(int *)(v5 + 24)), v9, v10, 0, &_swiftEmptyArrayStorage);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  swift_bridgeObjectRelease(v11);
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = KeyPath;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v12;
  *(_QWORD *)(a2 + 32) = v14;
  *(_BYTE *)(a2 + 40) = v16 & 1;
  *(_QWORD *)(a2 + 48) = v18;
  swift_retain(v4);
  swift_retain(KeyPath);
  swift_retain(v6);
  sub_100009520(v12, v14, v16 & 1);
  swift_bridgeObjectRetain(v18);
  sub_10000729C(v12, v14, v16 & 1);
  swift_release(v6);
  swift_release(KeyPath);
  swift_release(v4);
  return swift_bridgeObjectRelease(v18);
}

uint64_t sub_1000068EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  _BYTE v21[24];
  __int128 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  v1 = sub_100006DA4(&qword_1000ACC78);
  v2 = __chkstk_darwin(v1);
  v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  v5 = static VerticalAlignment.center.getter(v2);
  sub_100006A6C(v0, (uint64_t)&v20);
  v6 = *(_QWORD *)&v21[16];
  v7 = v22;
  v8 = *((_QWORD *)&v22 + 1);
  v10 = v20;
  v9 = *(_OWORD *)v21;
  v20 = (unint64_t)v5;
  v21[0] = 1;
  *(_OWORD *)&v21[8] = v10;
  v22 = v9;
  v23 = v6;
  v24 = v7;
  v25 = v8;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v4, v0, v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v4, 0, 1, v11);
  v13 = sub_100006DA4(&qword_1000ACEE0);
  v14 = sub_1000095B4(&qword_1000ACEE8, &qword_1000ACEE0, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.widgetURL(_:)(v4, v13, v14);
  sub_100009578((uint64_t)v4, &qword_1000ACC78);
  v15 = *(_QWORD *)&v21[8];
  v16 = v22;
  v17 = v23;
  LOBYTE(v13) = v24;
  v18 = v25;
  swift_release(*(_QWORD *)&v21[16]);
  swift_release(v15);
  swift_release(v16);
  sub_10000729C(*((uint64_t *)&v16 + 1), v17, v13);
  return swift_bridgeObjectRelease(v18);
}

uint64_t sub_100006A6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  if (qword_1000AC7E8 != -1)
    swift_once(&qword_1000AC7E8, sub_100006C54);
  v4 = qword_1000AC7F0;
  v5 = type metadata accessor for TTRTodayComplicationWidget.InlineNoDueRemindersView(0);
  v6 = *(_QWORD *)(a1 + *(int *)(v5 + 24));
  KeyPath = swift_getKeyPath(&unk_1000885B8);
  swift_retain(v4);
  swift_retain(v6);
  v8._countAndFlagsBits = 0xD000000000000063;
  v9._object = (void *)0x800000010008E710;
  v8._object = (void *)0x800000010008E730;
  v9._countAndFlagsBits = 0xD000000000000012;
  v10 = TTRLocalizedString(_:comment:)(v9, v8);
  v11 = Text.font(_:)(*(_QWORD *)(a1 + *(int *)(v5 + 20)), v10._countAndFlagsBits, v10._object, 0, &_swiftEmptyArrayStorage);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  swift_bridgeObjectRelease(v10._object);
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = KeyPath;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v11;
  *(_QWORD *)(a2 + 32) = v13;
  *(_BYTE *)(a2 + 40) = v15 & 1;
  *(_QWORD *)(a2 + 48) = v17;
  swift_retain(v4);
  swift_retain(KeyPath);
  swift_retain(v6);
  sub_100009520(v11, v13, v15 & 1);
  swift_bridgeObjectRetain(v17);
  sub_10000729C(v11, v13, v15 & 1);
  swift_release(v6);
  swift_release(KeyPath);
  swift_release(v4);
  return swift_bridgeObjectRelease(v17);
}

uint64_t sub_100006C04()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_100006C28()
{
  uint64_t result;

  result = Image.init(systemName:)(0x6B636F6C63, 0xE500000000000000);
  qword_1000AC7E0 = result;
  return result;
}

uint64_t sub_100006C54()
{
  uint64_t result;

  result = Image.init(systemName:)(0x6C75622E7473696CLL, 0xEB0000000074656CLL);
  qword_1000AC7F0 = result;
  return result;
}

uint64_t sub_100006C8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  __int128 v5;
  uint64_t v6;
  __int128 v7[2];

  sub_100009434(a1, (uint64_t)&v5, &qword_1000ACA30);
  if (v6)
  {
    sub_100006E64(&v5, (uint64_t)v7);
    sub_100006E64(v7, (uint64_t)&v5);
    v3 = sub_100006DA4(&qword_1000ACA38);
    return swift_dynamicCast(a2, &v5, v3, &type metadata for LimitedAvailabilityWidget, 7);
  }
  else
  {
    sub_100009578((uint64_t)&v5, &qword_1000ACA30);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000043, 0x800000010008E580, "SwiftUI/arm64-apple-ios.private.swiftinterface", 46, 2, 29706, 0);
    __break(1u);
  }
  return result;
}

void *sub_100006D64()
{
  if (sub_100085CA4(2, 16, 1, 0))
    return &type metadata for LimitedAvailabilityWidget;
  else
    return (void *)sub_100006DA4(&qword_1000ACA20);
}

uint64_t sub_100006DA4(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_100006DE4()
{
  uint64_t v0;

  v0 = sub_100085CA4(2, 16, 1, 0);
  if ((_DWORD)v0)
    return sub_100006E20();
  else
    return swift_getOpaqueTypeConformance2(v0, &opaque type descriptor for <<opaque return type of static WidgetBundleBuilder.buildBlock()>>, 1);
}

unint64_t sub_100006E20()
{
  unint64_t result;

  result = qword_1000ACA28;
  if (!qword_1000ACA28)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LimitedAvailabilityWidget, &type metadata for LimitedAvailabilityWidget);
    atomic_store(result, (unint64_t *)&qword_1000ACA28);
  }
  return result;
}

uint64_t sub_100006E64(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t *sub_100006E7C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = type metadata accessor for TTRTodayComplicationWidgetProvider(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v6);
  }
  else
  {
    v7 = *(int *)(v4 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for REMNavigationSpecifier(0);
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_retain(v6);
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_100006F20(_QWORD *a1)
{
  char *v2;
  uint64_t v3;

  swift_release(*a1);
  v2 = (char *)a1 + *(int *)(type metadata accessor for TTRTodayComplicationWidgetProvider(0) + 20);
  v3 = type metadata accessor for REMNavigationSpecifier(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t *sub_100006F6C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(type metadata accessor for TTRTodayComplicationWidgetProvider(0) + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for REMNavigationSpecifier(0);
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_retain(v4);
  v9(v6, v7, v8);
  return a1;
}

uint64_t *sub_100006FE8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = *(int *)(type metadata accessor for TTRTodayComplicationWidgetProvider(0) + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for REMNavigationSpecifier(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *sub_100007060(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for TTRTodayComplicationWidgetProvider(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for REMNavigationSpecifier(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t *sub_1000070C8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  v5 = *(int *)(type metadata accessor for TTRTodayComplicationWidgetProvider(0) + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for REMNavigationSpecifier(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t sub_100007138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100007144);
}

uint64_t sub_100007144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10000759C(a1, a2, a3, type metadata accessor for TTRTodayComplicationWidgetProvider);
}

uint64_t sub_100007150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000715C);
}

uint64_t sub_10000715C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000075F0(a1, a2, a3, a4, type metadata accessor for TTRTodayComplicationWidgetProvider);
}

uint64_t type metadata accessor for TTRTodayComplicationWidget(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000ACA98, (uint64_t)&nominal type descriptor for TTRTodayComplicationWidget);
}

uint64_t sub_10000717C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10000763C(a1, a2, a3, type metadata accessor for TTRTodayComplicationWidgetProvider);
}

__n128 initializeWithTake for TTRNewWidgetViewModel.ShareeIcon(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TTRAnyListWidget.ReminderVStack.CacheData(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TTRAnyListWidget.ReminderVStack.CacheData(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_100009608(a1, &qword_1000ACAD0, (uint64_t)&unk_1000A6908);
}

uint64_t sub_1000071F4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10009226C, 1);
}

uint64_t type metadata accessor for TTRTodayComplicationWidget.WidgetPlaceholderWrapper(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000ACB68, (uint64_t)&nominal type descriptor for TTRTodayComplicationWidget.WidgetPlaceholderWrapper);
}

uint64_t sub_100007218(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100007258(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_10000729C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease(a2);
}

uint64_t sub_1000072AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

_QWORD *sub_1000072F0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v6 = v4;
    v7 = type metadata accessor for URL(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(v6 + 20)) = *((_BYTE *)a2 + *(int *)(v6 + 20));
    v8 = *(int *)(v6 + 24);
    v9 = *(_QWORD *)((char *)a2 + v8);
    *(_QWORD *)((char *)a1 + v8) = v9;
    swift_bridgeObjectRetain(v9);
  }
  return a1;
}

uint64_t sub_100007390(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for TTRTodayComplicationWidgetViewModel(0) + 24));
  return swift_bridgeObjectRelease(v3);
}

uint64_t sub_1000073D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
  *(_BYTE *)(a1 + *(int *)(v5 + 20)) = *(_BYTE *)(a2 + *(int *)(v5 + 20));
  v6 = *(int *)(v5 + 24);
  v7 = *(_QWORD *)(a2 + v6);
  *(_QWORD *)(a1 + v6) = v7;
  swift_bridgeObjectRetain(v7);
  return a1;
}

uint64_t sub_100007440(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
  *(_BYTE *)(a1 + *(int *)(v5 + 20)) = *(_BYTE *)(a2 + *(int *)(v5 + 20));
  v6 = *(int *)(v5 + 24);
  v7 = *(_QWORD *)(a2 + v6);
  v8 = *(_QWORD *)(a1 + v6);
  *(_QWORD *)(a1 + v6) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t sub_1000074B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
  *(_BYTE *)(a1 + *(int *)(v5 + 20)) = *(_BYTE *)(a2 + *(int *)(v5 + 20));
  *(_QWORD *)(a1 + *(int *)(v5 + 24)) = *(_QWORD *)(a2 + *(int *)(v5 + 24));
  return a1;
}

uint64_t sub_100007518(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
  *(_BYTE *)(a1 + *(int *)(v5 + 20)) = *(_BYTE *)(a2 + *(int *)(v5 + 20));
  v6 = *(int *)(v5 + 24);
  v7 = *(_QWORD *)(a1 + v6);
  *(_QWORD *)(a1 + v6) = *(_QWORD *)(a2 + v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t sub_100007584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100007590);
}

uint64_t sub_100007590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10000759C(a1, a2, a3, type metadata accessor for TTRTodayComplicationWidgetViewModel);
}

uint64_t sub_10000759C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, a2, v6);
}

uint64_t sub_1000075D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000075E4);
}

uint64_t sub_1000075E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000075F0(a1, a2, a3, a4, type metadata accessor for TTRTodayComplicationWidgetViewModel);
}

uint64_t sub_1000075F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v7;

  v7 = a5(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, a2, a2, v7);
}

uint64_t sub_100007630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10000763C(a1, a2, a3, type metadata accessor for TTRTodayComplicationWidgetViewModel);
}

uint64_t sub_10000763C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v6;
  uint64_t v7;

  result = a4(319);
  if (v6 <= 0x3F)
  {
    v7 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v7, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1000076A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v0 = sub_100007258(&qword_1000ACAE8);
  v1 = sub_100007258(&qword_1000ACAE0);
  v5 = sub_100007258(&qword_1000ACAD8);
  v6 = sub_1000095B4(&qword_1000ACB00, &qword_1000ACAD8, (uint64_t)&protocol conformance descriptor for StaticConfiguration<A>);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of WidgetConfiguration.configurationDisplayName(_:)>>, 1);
  v5 = v1;
  v6 = OpaqueTypeConformance2;
  v3 = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of WidgetConfiguration.description(_:)>>, 1);
  v5 = v0;
  v6 = v3;
  return swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of WidgetConfiguration.supportedFamilies(_:)>>, 1);
}

uint64_t sub_100007760(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100092294, 1);
}

uint64_t sub_100007770()
{
  return sub_100007CC0(&qword_1000ACBB8, &qword_1000ACBC0, (void (*)(void))sub_10000779C);
}

unint64_t sub_10000779C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1000ACBC8;
  if (!qword_1000ACBC8)
  {
    v1 = sub_100007258(&qword_1000ACBD0);
    v2[0] = _s10WidgetViewVMa(255);
    v2[1] = sub_100007218(&qword_1000ACBB0, _s10WidgetViewVMa, (uint64_t)&unk_100089D7C);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.redacted(reason:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000ACBC8);
  }
  return result;
}

uint64_t type metadata accessor for TTRTodayComplicationWidget.TodayInlineView(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000ACC38, (uint64_t)&nominal type descriptor for TTRTodayComplicationWidget.TodayInlineView);
}

_QWORD *sub_10000785C(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
    *((_BYTE *)v4 + *(int *)(v8 + 20)) = *((_BYTE *)a2 + *(int *)(v8 + 20));
    v9 = *(int *)(v8 + 24);
    v10 = *(_QWORD *)((char *)a2 + v9);
    *(_QWORD *)((char *)v4 + v9) = v10;
    v11 = a3[5];
    v12 = a3[6];
    v13 = *(_QWORD *)((char *)a2 + v11);
    *(_QWORD *)((char *)v4 + v11) = v13;
    v14 = *(_QWORD *)((char *)a2 + v12);
    *(_QWORD *)((char *)v4 + v12) = v14;
    v15 = a3[7];
    v16 = *(_QWORD *)((char *)a2 + v15);
    *(_QWORD *)((char *)v4 + v15) = v16;
    swift_bridgeObjectRetain(v10);
    swift_retain(v13);
    swift_retain(v14);
  }
  swift_retain(v16);
  return v4;
}

uint64_t sub_100007938(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v5 + 24)));
  swift_release(*(_QWORD *)(a1 + a2[5]));
  swift_release(*(_QWORD *)(a1 + a2[6]));
  return swift_release(*(_QWORD *)(a1 + a2[7]));
}

uint64_t sub_1000079A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
  *(_BYTE *)(a1 + *(int *)(v7 + 20)) = *(_BYTE *)(a2 + *(int *)(v7 + 20));
  v8 = *(int *)(v7 + 24);
  v9 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v9;
  v10 = a3[5];
  v11 = a3[6];
  v12 = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(a1 + v10) = v12;
  v13 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v13;
  v14 = a3[7];
  v15 = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(a1 + v14) = v15;
  swift_bridgeObjectRetain(v9);
  swift_retain(v12);
  swift_retain(v13);
  swift_retain(v15);
  return a1;
}

uint64_t sub_100007A5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
  *(_BYTE *)(a1 + *(int *)(v7 + 20)) = *(_BYTE *)(a2 + *(int *)(v7 + 20));
  v8 = *(int *)(v7 + 24);
  v9 = *(_QWORD *)(a2 + v8);
  v10 = *(_QWORD *)(a1 + v8);
  *(_QWORD *)(a1 + v8) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  v11 = a3[5];
  v12 = *(_QWORD *)(a2 + v11);
  v13 = *(_QWORD *)(a1 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  swift_retain(v12);
  swift_release(v13);
  v14 = a3[6];
  v15 = *(_QWORD *)(a2 + v14);
  v16 = *(_QWORD *)(a1 + v14);
  *(_QWORD *)(a1 + v14) = v15;
  swift_retain(v15);
  swift_release(v16);
  v17 = a3[7];
  v18 = *(_QWORD *)(a2 + v17);
  v19 = *(_QWORD *)(a1 + v17);
  *(_QWORD *)(a1 + v17) = v18;
  swift_retain(v18);
  swift_release(v19);
  return a1;
}

uint64_t sub_100007B30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
  *(_BYTE *)(a1 + *(int *)(v7 + 20)) = *(_BYTE *)(a2 + *(int *)(v7 + 20));
  *(_QWORD *)(a1 + *(int *)(v7 + 24)) = *(_QWORD *)(a2 + *(int *)(v7 + 24));
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100007BC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
  *(_BYTE *)(a1 + *(int *)(v7 + 20)) = *(_BYTE *)(a2 + *(int *)(v7 + 20));
  v8 = *(int *)(v7 + 24);
  v9 = *(_QWORD *)(a1 + v8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_bridgeObjectRelease(v9);
  v10 = a3[5];
  v11 = *(_QWORD *)(a1 + v10);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  swift_release(v11);
  v12 = a3[6];
  v13 = *(_QWORD *)(a1 + v12);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  swift_release(v13);
  v14 = a3[7];
  v15 = *(_QWORD *)(a1 + v14);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  swift_release(v15);
  return a1;
}

uint64_t sub_100007C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100007C80);
}

uint64_t sub_100007C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000090F4(a1, a2, a3, type metadata accessor for TTRTodayComplicationWidgetViewModel);
}

uint64_t sub_100007C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100007C98);
}

uint64_t sub_100007C98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100009188(a1, a2, a3, a4, type metadata accessor for TTRTodayComplicationWidgetViewModel);
}

uint64_t sub_100007CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10000920C(a1, a2, a3, type metadata accessor for TTRTodayComplicationWidgetViewModel);
}

uint64_t sub_100007CB0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100092374, 1);
}

uint64_t sub_100007CC0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100007258(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100007D24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000ACC90;
  if (!qword_1000ACC90)
  {
    v1 = sub_100007258(&qword_1000ACC98);
    sub_100007218(&qword_1000ACCA0, type metadata accessor for TTRTodayComplicationWidget.InlineReminderView, (uint64_t)&unk_100088564);
    sub_100007DBC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000ACC90);
  }
  return result;
}

uint64_t type metadata accessor for TTRTodayComplicationWidget.InlineReminderView(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000ACE70, (uint64_t)&nominal type descriptor for TTRTodayComplicationWidget.InlineReminderView);
}

unint64_t sub_100007DBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000ACCA8;
  if (!qword_1000ACCA8)
  {
    v1 = sub_100007258(&qword_1000ACCB0);
    sub_100007218(&qword_1000ACCB8, type metadata accessor for TTRTodayComplicationWidget.InlineOverdueRemindersCountView, (uint64_t)&unk_100088514);
    sub_100007218(&qword_1000ACCC0, type metadata accessor for TTRTodayComplicationWidget.InlineNoDueRemindersView, (uint64_t)&unk_1000884C4);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000ACCA8);
  }
  return result;
}

uint64_t type metadata accessor for TTRTodayComplicationWidget.InlineOverdueRemindersCountView(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000ACDD0, (uint64_t)&nominal type descriptor for TTRTodayComplicationWidget.InlineOverdueRemindersCountView);
}

uint64_t type metadata accessor for TTRTodayComplicationWidget.InlineNoDueRemindersView(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000ACD38, (uint64_t)&nominal type descriptor for TTRTodayComplicationWidget.InlineNoDueRemindersView);
}

uint64_t sub_100007E80(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

uint64_t sub_100007EB4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100007EF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *sub_100007F34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    v9 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)v4 + v8) = v9;
    ((void (*)(void))swift_retain)();
  }
  swift_retain(v9);
  return v4;
}

uint64_t sub_100007FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 20)));
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 24)));
}

uint64_t sub_10000801C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  swift_retain(v9);
  swift_retain(v10);
  return a1;
}

uint64_t sub_10000808C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a2 + v7);
  v9 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = *(int *)(a3 + 24);
  v11 = *(_QWORD *)(a2 + v10);
  v12 = *(_QWORD *)(a1 + v10);
  *(_QWORD *)(a1 + v10) = v11;
  swift_retain(v11);
  swift_release(v12);
  return a1;
}

uint64_t sub_100008114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_100008178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_release(v8);
  v9 = *(int *)(a3 + 24);
  v10 = *(_QWORD *)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  swift_release(v10);
  return a1;
}

uint64_t sub_1000081F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000081FC);
}

uint64_t sub_1000081FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000090F4(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

uint64_t sub_100008208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100008214);
}

uint64_t sub_100008214(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100009188(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

uint64_t sub_100008220(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_100008298(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[6];
    v12 = a3[7];
    v13 = *(uint64_t *)((char *)a2 + v11);
    *(uint64_t *)((char *)v4 + v11) = v13;
    v14 = *(uint64_t *)((char *)a2 + v12);
    *(uint64_t *)((char *)v4 + v12) = v14;
    swift_retain(v13);
  }
  swift_retain(v14);
  return v4;
}

uint64_t sub_10000834C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + a2[5];
  v5 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release(*(_QWORD *)(a1 + a2[6]));
  return swift_release(*(_QWORD *)(a1 + a2[7]));
}

_QWORD *sub_1000083AC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = *(_QWORD *)((char *)a2 + v10);
  *(_QWORD *)((char *)a1 + v10) = v12;
  v13 = *(_QWORD *)((char *)a2 + v11);
  *(_QWORD *)((char *)a1 + v11) = v13;
  swift_retain(v12);
  swift_retain(v13);
  return a1;
}

_QWORD *sub_100008438(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = *(_QWORD *)((char *)a2 + v10);
  v12 = *(_QWORD *)((char *)a1 + v10);
  *(_QWORD *)((char *)a1 + v10) = v11;
  swift_retain(v11);
  swift_release(v12);
  v13 = a3[7];
  v14 = *(_QWORD *)((char *)a2 + v13);
  v15 = *(_QWORD *)((char *)a1 + v13);
  *(_QWORD *)((char *)a1 + v13) = v14;
  swift_retain(v14);
  swift_release(v15);
  return a1;
}

_QWORD *sub_1000084DC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  return a1;
}

_QWORD *sub_10000855C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = *(_QWORD *)((char *)a1 + v10);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  swift_release(v11);
  v12 = a3[7];
  v13 = *(_QWORD *)((char *)a1 + v12);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  swift_release(v13);
  return a1;
}

uint64_t sub_1000085F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000085FC);
}

uint64_t sub_1000085FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10000867C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100008688);
}

uint64_t sub_100008688(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_100008704(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

char *sub_10000878C(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  char *__dst;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    v7 = a1;
    v8 = a2[1];
    *((_QWORD *)a1 + 1) = v8;
    v9 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    v10 = v9[6];
    __dst = &v7[v10];
    v11 = (char *)a2 + v10;
    v12 = type metadata accessor for AttributedString(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    v15 = v4;
    v16 = v8;
    if (v14(v11, 1, v12))
    {
      v17 = sub_100006DA4(&qword_1000ACE10);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    v18 = v9[7];
    v19 = &v7[v18];
    v20 = (uint64_t)a2 + v18;
    v21 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v22 = v9[8];
    v23 = *(char **)((char *)a2 + v22);
    *(_QWORD *)&v7[v22] = v23;
    *(_QWORD *)&v7[v9[9]] = *(char **)((char *)a2 + v9[9]);
    v7[v9[10]] = *((_BYTE *)a2 + v9[10]);
    v7[v9[11]] = *((_BYTE *)a2 + v9[11]);
    v24 = a3[5];
    v25 = a3[6];
    v26 = *(uint64_t *)((char *)a2 + v24);
    *(_QWORD *)&v7[v24] = v26;
    v27 = *(uint64_t *)((char *)a2 + v25);
    *(_QWORD *)&v7[v25] = v27;
    v28 = a3[7];
    v4 = *(char **)((char *)a2 + v28);
    *(_QWORD *)&v7[v28] = v4;
    v29 = v23;
    swift_retain(v26);
    swift_retain(v27);
  }
  swift_retain(v4);
  return v7;
}

uint64_t sub_100008944(id *a1, int *a2)
{
  int *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v4 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v5 = (char *)a1 + v4[6];
  v6 = type metadata accessor for AttributedString(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  v8 = (char *)a1 + v4[7];
  v9 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);

  swift_release(*(id *)((char *)a1 + a2[5]));
  swift_release(*(id *)((char *)a1 + a2[6]));
  return swift_release(*(id *)((char *)a1 + a2[7]));
}

_QWORD *sub_100008A20(_QWORD *a1, uint64_t a2, int *a3)
{
  void *v5;
  void *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;

  v5 = *(void **)a2;
  v6 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (const void *)(a2 + v8);
  v11 = type metadata accessor for AttributedString(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v5;
  v15 = v6;
  if (v13(v10, 1, v11))
  {
    v16 = sub_100006DA4(&qword_1000ACE10);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v17 = v7[7];
  v18 = (char *)a1 + v17;
  v19 = a2 + v17;
  v20 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  v21 = v7[8];
  v22 = *(void **)(a2 + v21);
  *(_QWORD *)((char *)a1 + v21) = v22;
  *(_QWORD *)((char *)a1 + v7[9]) = *(_QWORD *)(a2 + v7[9]);
  *((_BYTE *)a1 + v7[10]) = *(_BYTE *)(a2 + v7[10]);
  *((_BYTE *)a1 + v7[11]) = *(_BYTE *)(a2 + v7[11]);
  v23 = a3[5];
  v24 = a3[6];
  v25 = *(_QWORD *)(a2 + v23);
  *(_QWORD *)((char *)a1 + v23) = v25;
  v26 = *(_QWORD *)(a2 + v24);
  *(_QWORD *)((char *)a1 + v24) = v26;
  v27 = a3[7];
  v28 = *(_QWORD *)(a2 + v27);
  *(_QWORD *)((char *)a1 + v27) = v28;
  v29 = v22;
  swift_retain(v25);
  swift_retain(v26);
  swift_retain(v28);
  return a1;
}

uint64_t sub_100008BAC(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  int *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a1 + 8);
  v10 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v10;
  v11 = v10;

  v12 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v13 = v12[6];
  v14 = (void *)(a1 + v13);
  v15 = (void *)(a2 + v13);
  v16 = type metadata accessor for AttributedString(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v21 = sub_100006DA4(&qword_1000ACE10);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  v22 = v12[7];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  v26 = v12[8];
  v27 = *(void **)(a1 + v26);
  v28 = *(void **)(a2 + v26);
  *(_QWORD *)(a1 + v26) = v28;
  v29 = v28;

  *(_QWORD *)(a1 + v12[9]) = *(_QWORD *)(a2 + v12[9]);
  *(_BYTE *)(a1 + v12[10]) = *(_BYTE *)(a2 + v12[10]);
  *(_BYTE *)(a1 + v12[11]) = *(_BYTE *)(a2 + v12[11]);
  v30 = a3[5];
  v31 = *(_QWORD *)(a2 + v30);
  v32 = *(_QWORD *)(a1 + v30);
  *(_QWORD *)(a1 + v30) = v31;
  swift_retain(v31);
  swift_release(v32);
  v33 = a3[6];
  v34 = *(_QWORD *)(a2 + v33);
  v35 = *(_QWORD *)(a1 + v33);
  *(_QWORD *)(a1 + v33) = v34;
  swift_retain(v34);
  swift_release(v35);
  v36 = a3[7];
  v37 = *(_QWORD *)(a2 + v36);
  v38 = *(_QWORD *)(a1 + v36);
  *(_QWORD *)(a1 + v36) = v37;
  swift_retain(v37);
  swift_release(v38);
  return a1;
}

_OWORD *sub_100008DAC(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for AttributedString(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100006DA4(&qword_1000ACE10);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = v6[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
  *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)a2 + v6[9]);
  *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
  *((_BYTE *)a1 + v6[11]) = *((_BYTE *)a2 + v6[11]);
  v17 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  return a1;
}

uint64_t sub_100008F00(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  int *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];

  v8 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v9 = v8[6];
  v10 = (void *)(a1 + v9);
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for AttributedString(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_100006DA4(&qword_1000ACE10);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v18 = v8[7];
  v19 = a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  v22 = v8[8];
  v23 = *(void **)(a1 + v22);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)((char *)a2 + v22);

  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)((char *)a2 + v8[9]);
  *(_BYTE *)(a1 + v8[10]) = *((_BYTE *)a2 + v8[10]);
  *(_BYTE *)(a1 + v8[11]) = *((_BYTE *)a2 + v8[11]);
  v24 = a3[5];
  v25 = *(_QWORD *)(a1 + v24);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)((char *)a2 + v24);
  swift_release(v25);
  v26 = a3[6];
  v27 = *(_QWORD *)(a1 + v26);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)((char *)a2 + v26);
  swift_release(v27);
  v28 = a3[7];
  v29 = *(_QWORD *)(a1 + v28);
  *(_QWORD *)(a1 + v28) = *(_QWORD *)((char *)a2 + v28);
  swift_release(v29);
  return a1;
}

uint64_t sub_1000090DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000090E8);
}

uint64_t sub_1000090E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000090F4(a1, a2, a3, type metadata accessor for TTRNewWidgetViewModel.Reminder);
}

uint64_t sub_1000090F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v10;

  v7 = a4(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, a2, v7);
  v10 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t sub_100009170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000917C);
}

uint64_t sub_10000917C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100009188(a1, a2, a3, a4, type metadata accessor for TTRNewWidgetViewModel.Reminder);
}

uint64_t sub_100009188(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;
  uint64_t v10;

  result = a5(0);
  v10 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_100009200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10000920C(a1, a2, a3, type metadata accessor for TTRNewWidgetViewModel.Reminder);
}

uint64_t sub_10000920C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v6;
  _QWORD v7[4];

  result = a4(319);
  if (v6 <= 0x3F)
  {
    v7[0] = *(_QWORD *)(result - 8) + 64;
    v7[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    v7[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    v7[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 256, 4, v7, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100009284()
{
  _QWORD v1[2];

  v1[0] = sub_100007258(&qword_1000ACC80);
  v1[1] = sub_100007CC0(&qword_1000ACC88, &qword_1000ACC80, (void (*)(void))sub_100007D24);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.widgetURL(_:)>>, 1);
}

uint64_t sub_1000092E8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10009240C, 1);
}

uint64_t sub_1000092F8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000923E4, 1);
}

uint64_t sub_100009308(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000923BC, 1);
}

uint64_t sub_100009318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_100009338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v9)(__int128 *, uint64_t, uint64_t, uint64_t);
  __int128 v11;
  __int128 v12;

  v9 = *(void (**)(__int128 *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    *((_QWORD *)&v12 + 1) = swift_getObjectType(a2);
    *(_QWORD *)&v11 = a2;
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
  }
  swift_unknownObjectRetain(a2);
  v9(&v11, a3, a4, a5);
  return sub_100009578((uint64_t)&v11, &qword_1000ACED8);
}

uint64_t sub_1000093C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  swift_release(a1);
  swift_release(a2);
  swift_release(a3);
  sub_10000729C(a4, a5, a6 & 1);
  return swift_bridgeObjectRelease(a7);
}

uint64_t sub_100009434(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100006DA4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100009478@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000094A0(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

uint64_t sub_1000094CC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;

  return sub_100071BF4(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(id *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40));
}

uint64_t sub_1000094D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000094E8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100009508(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100009518(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100009520(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain(a1);
  else
    return swift_bridgeObjectRetain(a2);
}

uint64_t sub_100009534()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100009568()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100009578(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_100006DA4(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000095B4(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100007258(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_100009608(a1, &qword_1000ACEF0, (uint64_t)&unk_1000A6A78);
}

void sub_100009608(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_10000964C(uint64_t a1)
{
  return sub_100009660(a1, &qword_1000ACEB0, &qword_1000ACEB8);
}

uint64_t sub_100009660(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  _QWORD v6[2];

  v6[0] = sub_100007258(a2);
  v6[1] = sub_1000095B4(a3, a2, (uint64_t)&protocol conformance descriptor for HStack<A>);
  return swift_getOpaqueTypeConformance2(v6, &opaque type descriptor for <<opaque return type of View.widgetURL(_:)>>, 1);
}

uint64_t sub_1000096C8(uint64_t a1)
{
  return sub_100009660(a1, &qword_1000ACEE0, &qword_1000ACEE8);
}

unint64_t sub_1000096FC()
{
  unint64_t result;

  result = qword_1000ACF18;
  if (!qword_1000ACF18)
  {
    result = swift_getWitnessTable(&unk_1000886B0, &type metadata for ShowSuggestionsEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_1000ACF18);
  }
  return result;
}

uint64_t sub_100009740()
{
  return sub_1000095B4(&qword_1000ACF20, &qword_1000ACF28, (uint64_t)&protocol conformance descriptor for _IntentUpdatableEntityProperty<A, B, C>);
}

uint64_t sub_10000976C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v0 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10000CF88(v16, qword_1000B9D60);
  sub_10000CF70(v16, (uint64_t)qword_1000B9D60);
  v17 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x800000010008E960);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v19[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "Name of Show Suggestions settings for App Intents", 49, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

uint64_t sub_100009980@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v34[2];
  char *v35;

  v34[1] = a1;
  v1 = sub_100006DA4(&qword_1000AD0B0);
  __chkstk_darwin(v1);
  v35 = (char *)v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v3);
  v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Locale(0);
  __chkstk_darwin(v10);
  v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v13);
  v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LocalizedStringResource(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v34[0] = (char *)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v21 = (char *)v34 - v20;
  v22 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x800000010008E960);
  static Locale.current.getter(v22);
  v23 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v24(v9, enum case for LocalizedStringResource.BundleDescription.main(_:), v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, 0, 0, v12, v9, "Title for Show Suggestions settings display representation for App Intents", 74, 2);
  v25 = String.LocalizationValue.init(stringLiteral:)(0x1000000000000012, 0x800000010008E9D0);
  static Locale.current.getter(v25);
  v24(v9, v23, v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, 0, 0, v12, v9, "Subtitle for reminders' control settings navigation for App Intents", 67, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v5, 0, 1, v16);
  v26 = v35;
  DisplayRepresentation.Image.init(appBundleIdentifier:)(0xD000000000000013, 0x800000010008EA40);
  v27 = type metadata accessor for DisplayRepresentation.Image(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 0, 1, v27);
  v28 = sub_100006DA4(&qword_1000AD0B8);
  v29 = swift_allocObject(v28, ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72), *(unsigned __int8 *)(v17 + 80) | 7);
  *(_OWORD *)(v29 + 16) = xmmword_1000882D0;
  v30 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x800000010008EA60);
  static Locale.current.getter(v30);
  v24(v9, v23, v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, 0, 0, v12, v9, "Synonyms keyword for Show Suggestions settings display representation for App Intents", 85, 2);
  v31 = String.LocalizationValue.init(stringLiteral:)(0x10000000000000E3, 0x800000010008EAE0);
  static Locale.current.getter(v31);
  v24(v9, v23, v6);
  v32 = v34[0];
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, 0, 0, v12, v9, "Description Text for Show Suggestions settings display representation for App Intents", 85, 2);
  return DisplayRepresentation.init(title:subtitle:image:synonyms:descriptionText:)(v21, v5, v35, v29, v32);
}

uint64_t sub_100009D90(uint64_t a1)
{
  return sub_10000B860(a1, qword_1000B9D78, 0xD000000000000017, 0x800000010008ED10);
}

uint64_t sub_100009DB4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  v0 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v0);
  v2 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v21[0] - 8);
  __chkstk_darwin(v21[0]);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100006DA4(&qword_1000AD118);
  sub_10000CF88(v16, qword_1000B9D90);
  v17 = sub_10000CF70(v16, (uint64_t)qword_1000B9D90);
  v18 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000028, 0x800000010008ECA0);
  static Locale.current.getter(v18);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v21[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "ShowSuggestionsEntity Reminders App Intent title description", 60, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  IntentDescription.init(_:categoryName:searchKeywords:)(v15, v2, &_swiftEmptyArrayStorage);
  v19 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v17, 0, 1, v19);
}

uint64_t sub_100009FF8()
{
  uint64_t result;

  result = swift_getKeyPath(&unk_100088DF8);
  qword_1000B9DA8 = result;
  return result;
}

uint64_t sub_10000A020()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_10000A050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  v4 = sub_100006DA4(&qword_1000AD0E8);
  v3[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100006DA4(&qword_1000AD0F0);
  v3[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100006DA4(&qword_1000AD0F8);
  v3[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IntentDialog(0);
  v3[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[13] = v8;
  v3[14] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006DA4(&qword_1000AD100);
  v3[15] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[16] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[17] = swift_task_alloc(v11);
  v3[18] = swift_task_alloc(v11);
  return swift_task_switch(sub_10000A15C, 0, 0);
}

uint64_t sub_10000A15C()
{
  _QWORD *v0;
  _QWORD *v1;
  unint64_t v2;

  IntentParameter.wrappedValue.getter(v0 + 2);
  v1 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to IntentDialog._CapturedContent.init<>(entity:_:)
                                  + 1));
  v0[19] = v1;
  v2 = sub_10000AF34();
  *v1 = v0;
  v1[1] = sub_10000A1DC;
  return IntentDialog._CapturedContent.init<>(entity:_:)(v0[18], v0 + 2, sub_10000A5F8, 0, &type metadata for ShowSuggestionsEntity, v2);
}

uint64_t sub_10000A1DC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 152));
  return swift_task_switch(sub_10000A230, 0, 0);
}

uint64_t sub_10000A230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 24));
  v1 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 160) = v1;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 192));
  *(_BYTE *)(v0 + 193) = *(_BYTE *)(v0 + 192);
  if (qword_1000AC810 != -1)
    swift_once(&qword_1000AC810, sub_100009FF8);
  v2 = qword_1000B9DA8;
  *(_QWORD *)(v0 + 168) = qword_1000B9DA8;
  v3 = async function pointer to AppEntity._setValue<A, B, C>(_:for:)[1];
  swift_retain(v2);
  v4 = (_QWORD *)swift_task_alloc(v3);
  *(_QWORD *)(v0 + 176) = v4;
  v5 = sub_1000095B4(&qword_1000AD0D0, &qword_1000AD0D8, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v4 = v0;
  v4[1] = sub_10000A32C;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 193, v2, &type metadata for Bool, v5);
}

uint64_t sub_10000A32C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v2);
  swift_release(v3);
  swift_release(v4);
  if (v0)
    v5 = sub_10000A56C;
  else
    v5 = sub_10000A3AC;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_10000A3AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  v13 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v0 + 104);
  v15 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 80);
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 40));
  v8 = type metadata accessor for _GeneratedContentOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = type metadata accessor for _GeneratedContentFallback(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
  v10 = sub_1000096FC();
  v11 = sub_10000B0F0();
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)(sub_10000A5F8, 0, v7, v6, &type metadata for ShowSuggestionsEntity.UpdateIntent_value);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v13);
  IntentDialog.init<A, B>(from:capturedContent:)(v5, v1, &type metadata for ShowSuggestionsEntity.UpdateIntent_value, &type metadata for ShowSuggestionsEntity, v10, v11);
  static IntentResult.result<A>(value:dialog:)(v0 + 40, v4, &type metadata for ShowSuggestionsEntity, v11);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v4, v15);
  swift_release(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v13);
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v7);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10000A56C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(v2, *(_QWORD *)(v0 + 120));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10000A5FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_100006DA4(&qword_1000AD108);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000AC810 != -1)
    swift_once(&qword_1000AC810, sub_100009FF8);
  v4 = qword_1000B9DA8;
  v5 = swift_retain(qword_1000B9DA8);
  static _DialogBuilderEntity.buildExpression<A, B>(_:)(v5);
  swift_release(v4);
  v6 = sub_10000B0F0();
  v7 = sub_1000095B4(&qword_1000AD110, &qword_1000AD108, (uint64_t)&protocol conformance descriptor for _NLGRepresentationEntity<A>);
  static _DialogBuilderEntity.buildBlock<A>(_:)(v3, &type metadata for ShowSuggestionsEntity, v0, v6, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

_QWORD *sub_10000A704@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_10000A73C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  v1 = *a1;
  v3 = v1;
  swift_retain(v1);
  IntentParameter.wrappedValue.setter(&v3);
  return swift_release(v1);
}

uint64_t (*sub_10000A780(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_10000A7C8;
}

_QWORD *sub_10000A7CC@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_10000A804(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

uint64_t (*sub_10000A838(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_10000A7C8;
}

uint64_t sub_10000A880()
{
  if (qword_1000AC810 != -1)
    swift_once(&qword_1000AC810, sub_100009FF8);
  return swift_retain(qword_1000B9DA8);
}

unint64_t sub_10000A8C4()
{
  return 0xD000000000000015;
}

unint64_t sub_10000A8E8()
{
  unint64_t result;

  result = qword_1000ACF30;
  if (!qword_1000ACF30)
  {
    result = swift_getWitnessTable(&unk_100088740, &type metadata for ShowSuggestionsEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_1000ACF30);
  }
  return result;
}

unint64_t sub_10000A930()
{
  unint64_t result;

  result = qword_1000ACF38;
  if (!qword_1000ACF38)
  {
    result = swift_getWitnessTable(&unk_100088768, &type metadata for ShowSuggestionsEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_1000ACF38);
  }
  return result;
}

uint64_t sub_10000A974(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_1000924A4, 1) + 8);
}

uint64_t sub_10000A998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10000BCB8(a1, a2, a3, (uint64_t (*)(void))sub_1000096FC);
}

uint64_t sub_10000A9A4@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B568(&qword_1000AC800, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000B9D78, (uint64_t)sub_100009D90, a1);
}

uint64_t sub_10000A9D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1000AC808 != -1)
    swift_once(&qword_1000AC808, sub_100009DB4);
  v2 = sub_100006DA4(&qword_1000AD118);
  v3 = sub_10000CF70(v2, (uint64_t)qword_1000B9D90);
  return sub_10000CFE8(v3, a1);
}

uint64_t sub_10000AA38(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_1000AD0E4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000D198;
  return sub_10000A050(a1, v5, v4);
}

uint64_t sub_10000AA9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_10000C878();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10000AAC0()
{
  return 0xD000000000000026;
}

unint64_t sub_10000AAE0()
{
  unint64_t result;

  result = qword_1000ACF48;
  if (!qword_1000ACF48)
  {
    result = swift_getWitnessTable(&unk_1000887C4, &type metadata for ShowSuggestionsEntity.ShowSuggestionsQuery);
    atomic_store(result, (unint64_t *)&qword_1000ACF48);
  }
  return result;
}

unint64_t sub_10000AB28()
{
  unint64_t result;

  result = qword_1000ACF50;
  if (!qword_1000ACF50)
  {
    result = swift_getWitnessTable(&unk_1000888F8, &type metadata for ShowSuggestionsEntity);
    atomic_store(result, (unint64_t *)&qword_1000ACF50);
  }
  return result;
}

uint64_t sub_10000AB6C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_10000AB84, 0, 0);
}

uint64_t sub_10000AB84()
{
  uint64_t v0;
  unsigned __int8 *v1;
  id v2;
  unsigned __int8 v3;

  v1 = *(unsigned __int8 **)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(REMUserDefaults), "daemonUserDefaults");
  v3 = objc_msgSend(v2, "enableAutoCompleteReminders");

  *v1 = v3;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10000ABF8(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 16) = *a2;
  return swift_task_switch(sub_10000AC14, 0, 0);
}

uint64_t sub_10000AC14()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(REMUserDefaults), "daemonUserDefaults");
  objc_msgSend(v2, "setEnableAutoCompleteReminders:", v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10000AC7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = type metadata accessor for LocalizedStringResource(0);
  *(_QWORD *)(v1 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10000ACD4, 0, 0);
}

uint64_t sub_10000ACD4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_100006DA4(&qword_1000ACF28);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000010, 0x800000010008E960);
  v3 = sub_1000095B4(&qword_1000AD0D0, &qword_1000AD0D8, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v2 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v1, &unk_1000AD0C0, 0, &unk_1000AD0C8, 0, &type metadata for ShowSuggestionsEntity.UpdateIntent_value, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_10000AD94()
{
  unint64_t result;

  result = qword_1000ACF60;
  if (!qword_1000ACF60)
  {
    result = swift_getWitnessTable(&unk_1000887FC, &type metadata for ShowSuggestionsEntity.ShowSuggestionsQuery);
    atomic_store(result, (unint64_t *)&qword_1000ACF60);
  }
  return result;
}

uint64_t sub_10000ADD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to _UniqueEntityQuery.allEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_10000B2C8();
  *v4 = v2;
  v4[1] = sub_10000AE40;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

uint64_t sub_10000AE40(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 24);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v6 + 8))();
}

unint64_t sub_10000AEA4()
{
  unint64_t result;

  result = qword_1000ACF70;
  if (!qword_1000ACF70)
  {
    result = swift_getWitnessTable(&unk_100088854, &type metadata for ShowSuggestionsEntity.ShowSuggestionsQuery);
    atomic_store(result, (unint64_t *)&qword_1000ACF70);
  }
  return result;
}

unint64_t sub_10000AEEC()
{
  unint64_t result;

  result = qword_1000ACF78;
  if (!qword_1000ACF78)
  {
    result = swift_getWitnessTable(&unk_1000888B4, &type metadata for ShowSuggestionsEntity.ShowSuggestionsQuery);
    atomic_store(result, (unint64_t *)&qword_1000ACF78);
  }
  return result;
}

unint64_t sub_10000AF34()
{
  unint64_t result;

  result = qword_1000ACF80[0];
  if (!qword_1000ACF80[0])
  {
    result = swift_getWitnessTable(&unk_100088958, &type metadata for ShowSuggestionsEntity);
    atomic_store(result, qword_1000ACF80);
  }
  return result;
}

uint64_t sub_10000AF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to _UniqueEntityQuery.entities(for:)[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10000B2C8();
  *v5 = v2;
  v5[1] = sub_10000AFE8;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10000AFE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(*v2 + 16);
  v5 = *v2;
  v6 = swift_task_dealloc(v4);
  if (!v1)
    v6 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v6);
}

uint64_t sub_10000B03C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to _UniqueEntityQuery.suggestedEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_10000B2C8();
  *v4 = v2;
  v4[1] = sub_10000D19C;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10000B0A8()
{
  unint64_t result;

  result = qword_1000ACF98;
  if (!qword_1000ACF98)
  {
    result = swift_getWitnessTable(&unk_1000888DC, &type metadata for ShowSuggestionsEntity.ShowSuggestionsQuery);
    atomic_store(result, (unint64_t *)&qword_1000ACF98);
  }
  return result;
}

unint64_t sub_10000B0F0()
{
  unint64_t result;

  result = qword_1000ACFA0;
  if (!qword_1000ACFA0)
  {
    result = swift_getWitnessTable(&unk_100088AA0, &type metadata for ShowSuggestionsEntity);
    atomic_store(result, (unint64_t *)&qword_1000ACFA0);
  }
  return result;
}

unint64_t sub_10000B138()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000ACFA8;
  if (!qword_1000ACFA8)
  {
    v1 = sub_100007258(qword_1000ACFB0);
    sub_10000B0F0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1000ACFA8);
  }
  return result;
}

uint64_t sub_10000B19C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10000AD94();
  *v5 = v2;
  v5[1] = sub_10000B208;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_10000B208()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10000B250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(async function pointer to DynamicOptionsProvider.defaultResult()[1]);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000B208;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

unint64_t sub_10000B2C8()
{
  unint64_t result;

  result = qword_1000ACFC8;
  if (!qword_1000ACFC8)
  {
    result = swift_getWitnessTable(&unk_100088784, &type metadata for ShowSuggestionsEntity.ShowSuggestionsQuery);
    atomic_store(result, (unint64_t *)&qword_1000ACFC8);
  }
  return result;
}

uint64_t sub_10000B30C()
{
  uint64_t v0;

  v0 = qword_1000ACEF8;
  swift_bridgeObjectRetain(off_1000ACF00);
  return v0;
}

unint64_t sub_10000B344()
{
  unint64_t result;

  result = qword_1000ACFD0;
  if (!qword_1000ACFD0)
  {
    result = swift_getWitnessTable(&unk_1000889B0, &type metadata for ShowSuggestionsEntity);
    atomic_store(result, (unint64_t *)&qword_1000ACFD0);
  }
  return result;
}

unint64_t sub_10000B38C()
{
  unint64_t result;

  result = qword_1000ACFD8;
  if (!qword_1000ACFD8)
  {
    result = swift_getWitnessTable(&unk_1000889E8, &type metadata for ShowSuggestionsEntity);
    atomic_store(result, (unint64_t *)&qword_1000ACFD8);
  }
  return result;
}

unint64_t sub_10000B3D4()
{
  unint64_t result;

  result = qword_1000ACFE0;
  if (!qword_1000ACFE0)
  {
    result = swift_getWitnessTable(&unk_100088A18, &type metadata for ShowSuggestionsEntity);
    atomic_store(result, (unint64_t *)&qword_1000ACFE0);
  }
  return result;
}

void *sub_10000B418()
{
  return &protocol witness table for String;
}

unint64_t sub_10000B428()
{
  unint64_t result;

  result = qword_1000ACFE8;
  if (!qword_1000ACFE8)
  {
    result = swift_getWitnessTable(&unk_100088A50, &type metadata for ShowSuggestionsEntity);
    atomic_store(result, (unint64_t *)&qword_1000ACFE8);
  }
  return result;
}

unint64_t sub_10000B470()
{
  unint64_t result;

  result = qword_1000ACFF0;
  if (!qword_1000ACFF0)
  {
    result = swift_getWitnessTable(&unk_100088A78, &type metadata for ShowSuggestionsEntity);
    atomic_store(result, (unint64_t *)&qword_1000ACFF0);
  }
  return result;
}

unint64_t sub_10000B4B8()
{
  unint64_t result;

  result = qword_1000ACFF8;
  if (!qword_1000ACFF8)
  {
    result = swift_getWitnessTable(&unk_100088AF8, &type metadata for ShowSuggestionsEntity);
    atomic_store(result, (unint64_t *)&qword_1000ACFF8);
  }
  return result;
}

void *sub_10000B4FC()
{
  return &protocol witness table for String;
}

uint64_t sub_10000B508@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_10000AB28();
  result = _UniqueEntity.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_10000B544@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B568(&qword_1000AC7F8, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000B9D60, (uint64_t)sub_10000976C, a1);
}

uint64_t sub_10000B568@<X0>(_QWORD *a1@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  if (*a1 != -1)
    swift_once(a1, a4);
  v8 = a2(0);
  v9 = sub_10000CF70(v8, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a5, v9, v8);
}

uint64_t sub_10000B5D8()
{
  return sub_1000095B4(&qword_1000AD000, &qword_1000AD008, (uint64_t)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_10000B604(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10000AF34();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10000B640()
{
  unint64_t result;

  result = qword_1000AD010;
  if (!qword_1000AD010)
  {
    result = swift_getWitnessTable(&unk_100088B28, &type metadata for ShowSuggestionsEntity);
    atomic_store(result, (unint64_t *)&qword_1000AD010);
  }
  return result;
}

uint64_t sub_10000B688(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10000B4B8();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10000B6C4()
{
  unint64_t result;

  result = qword_1000AD018;
  if (!qword_1000AD018)
  {
    result = swift_getWitnessTable(&unk_100088B88, &type metadata for ShowSuggestionsEntity);
    atomic_store(result, (unint64_t *)&qword_1000AD018);
  }
  return result;
}

uint64_t sub_10000B708(uint64_t a1)
{
  unint64_t v2;

  if (qword_1000AC880 != -1)
    swift_once(&qword_1000AC880, sub_10001D54C);
  String.append(_:)((Swift::String)xmmword_1000B9E38);
  v2 = sub_10000AF34();
  return _EntityURLRepresentation.init(_:)(0xD000000000000041, 0x800000010008E910, a1, v2);
}

uint64_t sub_10000B7AC(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_10000CF2C();
  v4 = _URLRepresentableEntity.urlRepresentationParameter.getter(a1, v3);
  return sub_10000CFC8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8), v1, v4, v5);
}

unint64_t sub_10000B7F8()
{
  unint64_t result;

  result = qword_1000AD028;
  if (!qword_1000AD028)
  {
    result = swift_getWitnessTable(&unk_100088C80, &type metadata for OpenShowSuggestionsDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000AD028);
  }
  return result;
}

uint64_t sub_10000B83C(uint64_t a1)
{
  return sub_10000B860(a1, qword_1000B9DB0, 0xD00000000000001DLL, 0x800000010008E8F0);
}

uint64_t sub_10000B860(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = type metadata accessor for LocalizedStringResource(0);
  sub_10000CF88(v7, a2);
  sub_10000CF70(v7, (uint64_t)a2);
  return LocalizedStringResource.init(stringLiteral:)(a3, a4);
}

uint64_t sub_10000B8BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000042, 0x800000010008E860);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "OpenShowSuggestionsDeepLink Reminders App Intent description", 60, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, &_swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

void sub_10000BAD4(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

unint64_t sub_10000BB08()
{
  unint64_t result;

  result = qword_1000AD030;
  if (!qword_1000AD030)
  {
    result = swift_getWitnessTable(&unk_100088CA8, &type metadata for OpenShowSuggestionsDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000AD030);
  }
  return result;
}

unint64_t sub_10000BB50()
{
  unint64_t result;

  result = qword_1000AD038;
  if (!qword_1000AD038)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Never, &type metadata for Never);
    atomic_store(result, (unint64_t *)&qword_1000AD038);
  }
  return result;
}

uint64_t sub_10000BB94(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_10000CEA4();
  v5 = sub_10000CF2C();
  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_10000BBE8()
{
  uint64_t v0;

  v0 = qword_1000ACF08;
  swift_bridgeObjectRetain(off_1000ACF10);
  return v0;
}

unint64_t sub_10000BC20()
{
  unint64_t result;

  result = qword_1000AD040;
  if (!qword_1000AD040)
  {
    result = swift_getWitnessTable(&unk_100088D38, &type metadata for OpenShowSuggestionsDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000AD040);
  }
  return result;
}

unint64_t sub_10000BC68()
{
  unint64_t result;

  result = qword_1000AD048;
  if (!qword_1000AD048)
  {
    result = swift_getWitnessTable(&unk_100088D60, &type metadata for OpenShowSuggestionsDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000AD048);
  }
  return result;
}

uint64_t sub_10000BCAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10000BCB8(a1, a2, a3, (uint64_t (*)(void))sub_10000BB08);
}

uint64_t sub_10000BCB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  _QWORD v5[2];

  v5[0] = a2;
  v5[1] = a4();
  return swift_getOpaqueTypeConformance2(v5, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

uint64_t sub_10000BCF8@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B568(&qword_1000AC818, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000B9DB0, (uint64_t)sub_10000B83C, a1);
}

uint64_t sub_10000BD1C()
{
  return 0;
}

uint64_t sub_10000BD24()
{
  return 1;
}

uint64_t sub_10000BD30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to _URLRepresentableIntent<>.perform()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10000CEA4();
  v7 = sub_10000CEE8();
  v8 = sub_10000CF2C();
  *v5 = v2;
  v5[1] = sub_10000BDBC;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_10000BDBC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(*v1 + 16);
  v3 = *v1;
  result = swift_task_dealloc(v2);
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  return result;
}

uint64_t sub_10000BE18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_10000CB9C();
  *a1 = result;
  return result;
}

uint64_t sub_10000BE3C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10000BB08();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenShowSuggestionsDeepLink()
{
  return &type metadata for OpenShowSuggestionsDeepLink;
}

ValueMetadata *type metadata accessor for ShowSuggestionsEntity.ShowSuggestionsQuery()
{
  return &type metadata for ShowSuggestionsEntity.ShowSuggestionsQuery;
}

ValueMetadata *type metadata accessor for ShowSuggestionsEntity()
{
  return &type metadata for ShowSuggestionsEntity;
}

uint64_t destroy for ShowSuggestionsEntity.UpdateIntent_value(_QWORD *a1)
{
  swift_release(*a1);
  return swift_release(a1[1]);
}

uint64_t *_s24RemindersWidgetExtension21ShowSuggestionsEntityV18UpdateIntent_valueVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *assignWithCopy for ShowSuggestionsEntity.UpdateIntent_value(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  return a1;
}

_QWORD *assignWithTake for ShowSuggestionsEntity.UpdateIntent_value(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRNewWidgetViewModel.ShareeIcon(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRNewWidgetViewModel.ShareeIcon(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowSuggestionsEntity.UpdateIntent_value()
{
  return &type metadata for ShowSuggestionsEntity.UpdateIntent_value;
}

uint64_t sub_10000C020()
{
  return sub_1000095B4(&qword_1000AD058, &qword_1000AD060, (uint64_t)&protocol conformance descriptor for <> IntentResultContainer<A, B, C, D>);
}

uint64_t sub_10000C04C()
{
  return sub_1000095B4(&qword_1000AD068, &qword_1000AD060, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_10000C078@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t OpaqueTypeConformance2;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v47 = a1;
  v1 = sub_100006DA4(&qword_1000AD120);
  v40 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100006DA4(&qword_1000AD128);
  v42 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100006DA4(&qword_1000AD130);
  v8 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  v44 = v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100006DA4(&qword_1000AD138);
  v12 = *(_QWORD *)(v11 - 8);
  v45 = v11;
  v46 = v12;
  __chkstk_darwin(v11);
  v41 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100088DF8);
  v15 = sub_100006DA4(&qword_1000AD140);
  v16 = sub_100006DA4(&qword_1000AD148);
  v17 = sub_10000AB28();
  v18 = sub_1000095B4(&qword_1000AD150, &qword_1000AD140, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v19 = sub_10000D050();
  ControlToggle.init<A, B, C, D, E, F, G>(kind:intentUpdatableProperty:title:subtitle:value:)(0xD000000000000032, 0x800000010008ED30, KeyPath, sub_10000C43C, 0, sub_10000C498, 0, sub_10000C630, 0, v15, &type metadata for Text, v16, v17, v18, &protocol witness table for Text, v19);
  v20 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000015, 0x800000010008ED70);
  v22 = v21;
  LOBYTE(v16) = v23;
  v25 = v24;
  v26 = sub_1000095B4(&qword_1000AD160, &qword_1000AD120, (uint64_t)&protocol conformance descriptor for ControlToggle<A>);
  WidgetConfiguration.configurationDisplayName(_:)(v20, v22, v16 & 1, v25, v1, v26);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v22);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v3, v1);
  v27 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000003BLL, 0x800000010008ED90);
  v29 = v28;
  LOBYTE(v3) = v30;
  v32 = v31;
  v48 = v1;
  v49 = v26;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v48, &opaque type descriptor for <<opaque return type of WidgetConfiguration.configurationDisplayName(_:)>>, 1);
  WidgetConfiguration.description(_:)(v27, v29, v3 & 1, v32, v4, OpaqueTypeConformance2);
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(v29);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v4);
  v48 = v4;
  v49 = OpaqueTypeConformance2;
  v34 = swift_getOpaqueTypeConformance2(&v48, &opaque type descriptor for <<opaque return type of WidgetConfiguration.description(_:)>>, 1);
  v35 = v41;
  v36 = v43;
  WidgetConfiguration.disablesControlStateCaching()(v43, v34);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v36);
  v48 = v36;
  v49 = v34;
  v37 = swift_getOpaqueTypeConformance2(&v48, &opaque type descriptor for <<opaque return type of WidgetConfiguration.disablesControlStateCaching()>>, 1);
  v38 = v45;
  WidgetConfiguration.hiddenControl()(v45, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v35, v38);
}

uint64_t sub_10000C43C()
{
  uint64_t v0;

  v0 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000010, 0x800000010008E960);
  return Label<>.init(_:systemImage:)(v0);
}

uint64_t sub_10000C498@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _BYTE v17[16];

  v2 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin();
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = String.LocalizationValue.init(stringLiteral:)(0x7265646E696D6552, 0xE900000000000073);
  static Locale.current.getter(v12);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v7, v5, "Reminders Toggle Control subtitle text", 38, 2);
  result = Text.init(_:)(v11);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v14;
  *(_BYTE *)(a1 + 16) = v15 & 1;
  *(_QWORD *)(a1 + 24) = v16;
  return result;
}

double sub_10000C630@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  __int128 v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _OWORD v31[2];
  char v32;

  v4 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin();
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v14 = String.LocalizationValue.init(stringLiteral:)(28239, 0xE200000000000000);
    static Locale.current.getter(v14);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v4);
    LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v9, v7, "Reminders Toggle Control On", 27, 2);
    v26 = Text.init(_:)(v13);
    v27 = v15;
    v28 = v16 & 1;
    v29 = v17;
    v30 = 0;
  }
  else
  {
    v18 = String.LocalizationValue.init(stringLiteral:)(6710863, 0xE300000000000000);
    static Locale.current.getter(v18);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v4);
    LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v9, v7, "Reminders Toggle Control Off", 28, 2);
    v26 = Text.init(_:)(v13);
    v27 = v20;
    v28 = v19 & 1;
    v29 = v21;
    v30 = 1;
  }
  _ConditionalContent<>.init(storage:)(v31, &v26, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
  result = *(double *)v31;
  v23 = v31[1];
  v24 = v32;
  *(_OWORD *)a2 = v31[0];
  *(_OWORD *)(a2 + 16) = v23;
  *(_BYTE *)(a2 + 32) = v24;
  return result;
}

uint64_t sub_10000C878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  char *v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v25;
  void (*v26)(char *);
  unsigned int v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  char *v30;
  char v31;
  uint64_t v32;

  v0 = sub_100006DA4(&qword_1000AD088);
  __chkstk_darwin(v0);
  v30 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for InputConnectionBehavior(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v29 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100006DA4(&qword_1000AD070);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v25 - v9;
  v11 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LocalizedStringResource(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100006DA4(&qword_1000AD080);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001ALL, 0x800000010008E810);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  v32 = 0;
  v18 = type metadata accessor for IntentDialog(0);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v10, 1, 1, v18);
  v19(v8, 1, 1, v18);
  v27 = enum case for InputConnectionBehavior.default(_:);
  v26 = *(void (**)(char *))(v3 + 104);
  v20 = v29;
  v26(v29);
  v21 = sub_10000AF34();
  v25 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v17, v13, &v32, v10, v8, v20, v21);
  sub_100006DA4(&qword_1000AD090);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000002ELL, 0x800000010008E830);
  v28(v13, 1, 1, v14);
  v31 = 2;
  v22 = type metadata accessor for Bool.IntentDisplayName(0);
  v23 = v30;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v30, 1, 1, v22);
  v19(v10, 1, 1, v18);
  ((void (*)(char *, _QWORD, uint64_t))v26)(v20, v27, v2);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v17, v13, &v31, v23, v10, v20);
  return v25;
}

uint64_t sub_10000CB9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  char *v27;
  char *v28;
  unint64_t v29;
  _QWORD v31[2];
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v34 = *(_QWORD *)(v0 - 8);
  v35 = v0;
  __chkstk_darwin(v0);
  v33 = (char *)v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100006DA4(&qword_1000AD070);
  v3 = __chkstk_darwin(v2);
  v32 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (char *)v31 - v5;
  v7 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v7);
  v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Locale(0);
  __chkstk_darwin(v14);
  v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v17);
  v19 = (char *)v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for LocalizedStringResource(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[1] = sub_100006DA4(&qword_1000AD080);
  v24 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000018, 0x800000010008E7C0);
  static Locale.current.getter(v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0, 0, v16, v13, "Open Show Suggestions deepLink parameter", 40, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v9, 1, 1, v20);
  v36 = 0;
  v25 = type metadata accessor for IntentDialog(0);
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v26(v6, 1, 1, v25);
  v27 = v32;
  v26(v32, 1, 1, v25);
  v28 = v33;
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v33, enum case for InputConnectionBehavior.default(_:), v35);
  v29 = sub_10000AF34();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v23, v9, &v36, v6, v27, v28, v29);
}

unint64_t sub_10000CEA4()
{
  unint64_t result;

  result = qword_1000AD098;
  if (!qword_1000AD098)
  {
    result = swift_getWitnessTable(&unk_100088BB0, &type metadata for OpenShowSuggestionsDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000AD098);
  }
  return result;
}

unint64_t sub_10000CEE8()
{
  unint64_t result;

  result = qword_1000AD0A0;
  if (!qword_1000AD0A0)
  {
    result = swift_getWitnessTable(&unk_100088C00, &type metadata for OpenShowSuggestionsDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000AD0A0);
  }
  return result;
}

unint64_t sub_10000CF2C()
{
  unint64_t result;

  result = qword_1000AD0A8;
  if (!qword_1000AD0A8)
  {
    result = swift_getWitnessTable(&unk_100088B50, &type metadata for ShowSuggestionsEntity);
    atomic_store(result, (unint64_t *)&qword_1000AD0A8);
  }
  return result;
}

uint64_t sub_10000CF70(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t *sub_10000CF88(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

uint64_t sub_10000CFC8(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

uint64_t sub_10000CFDC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_10000CFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006DA4(&qword_1000AD118);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for ShowSuggestionsToggleControl()
{
  return &type metadata for ShowSuggestionsToggleControl;
}

uint64_t sub_10000D040(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100092504, 1);
}

unint64_t sub_10000D050()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AD158;
  if (!qword_1000AD158)
  {
    v1 = sub_100007258(&qword_1000AD148);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AD158);
  }
  return result;
}

uint64_t sub_10000D0AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v0 = sub_100007258(&qword_1000AD138);
  v1 = sub_100007258(&qword_1000AD130);
  v2 = sub_100007258(&qword_1000AD128);
  v7 = sub_100007258(&qword_1000AD120);
  v8 = sub_1000095B4(&qword_1000AD160, &qword_1000AD120, (uint64_t)&protocol conformance descriptor for ControlToggle<A>);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of WidgetConfiguration.configurationDisplayName(_:)>>, 1);
  v7 = v2;
  v8 = OpaqueTypeConformance2;
  v4 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of WidgetConfiguration.description(_:)>>, 1);
  v7 = v1;
  v8 = v4;
  v5 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of WidgetConfiguration.disablesControlStateCaching()>>, 1);
  v7 = v0;
  v8 = v5;
  return swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of WidgetConfiguration.hiddenControl()>>, 1);
}

void sub_10000D1A0(char *a1)
{
  sub_10000D1F4(*a1);
}

unint64_t sub_10000D1B0()
{
  unint64_t result;

  result = qword_1000AD188;
  if (!qword_1000AD188)
  {
    result = swift_getWitnessTable(&unk_100088EC0, &type metadata for RemindersSettingsDestination);
    atomic_store(result, (unint64_t *)&qword_1000AD188);
  }
  return result;
}

void sub_10000D1F4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10000D23C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10000D2B4 + 4 * byte_100088E94[a2]))(0x5F544C5541464544);
}

uint64_t sub_10000D2B4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x5F544C5541464544 && v1 == 0xEC0000005453494CLL)
    v2 = 1;
  else
    v2 = ((uint64_t (*)(void))_stringCompareWithSmolCheck(_:_:expecting:))();
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xEC0000005453494CLL);
  return v2 & 1;
}

void sub_10000D370()
{
  char *v0;

  sub_10000D378(*v0);
}

void sub_10000D378(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X10 }
}

Swift::Int sub_10000D3C4()
{
  uint64_t v1;

  ((void (*)(uint64_t *, uint64_t, unint64_t))String.hash(into:))(&v1, 0x5F544C5541464544, 0xEC0000005453494CLL);
  swift_bridgeObjectRelease(0xEC0000005453494CLL);
  return Hasher._finalize()();
}

void sub_10000D448()
{
  __asm { BR              X10 }
}

uint64_t sub_10000D480(uint64_t a1)
{
  ((void (*)(uint64_t, uint64_t, unint64_t))String.hash(into:))(a1, 0x5F544C5541464544, 0xEC0000005453494CLL);
  return swift_bridgeObjectRelease(0xEC0000005453494CLL);
}

void sub_10000D4F0(uint64_t a1)
{
  char *v1;

  sub_10000D4F8(a1, *v1);
}

void sub_10000D4F8(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X10 }
}

Swift::Int sub_10000D540()
{
  uint64_t v1;

  ((void (*)(uint64_t *, uint64_t, unint64_t))String.hash(into:))(&v1, 0x5F544C5541464544, 0xEC0000005453494CLL);
  swift_bridgeObjectRelease(0xEC0000005453494CLL);
  return Hasher._finalize()();
}

unint64_t sub_10000D5C4@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10000F7D4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10000D5F0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_10000D61C + 4 * byte_100088EA4[*v0]))();
}

void sub_10000D61C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "DEFAULT_LIST");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_10000D640(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "ADD_LANGUAGE");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_10000D664(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x800000010008E530;
}

uint64_t sub_10000D684()
{
  return sub_1000095B4(&qword_1000AD190, &qword_1000AD198, (uint64_t)&protocol conformance descriptor for [A]);
}

void sub_10000D6B0(_QWORD *a1@<X8>)
{
  *a1 = &off_1000A6598;
}

uint64_t sub_10000D6C0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10000D6EC + 4 * byte_100088EA8[*v0]))(0x746F6F7223, 0xE500000000000000);
}

uint64_t sub_10000D6EC()
{
  return 0x5F544C5541464544;
}

uint64_t sub_10000D70C()
{
  return 0x474E414C5F444441;
}

unint64_t sub_10000D72C()
{
  return 0xD000000000000011;
}

unint64_t sub_10000D748@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _BYTE *a3@<X8>)
{
  unint64_t result;
  Swift::String v7;

  swift_bridgeObjectRetain(a2);
  v7._countAndFlagsBits = a1;
  v7._object = a2;
  result = sub_10000F7D4(v7);
  *a3 = result;
  return result;
}

unint64_t sub_10000D790()
{
  unint64_t result;

  result = qword_1000AD1A0;
  if (!qword_1000AD1A0)
  {
    result = swift_getWitnessTable(&unk_100089058, &type metadata for RemindersSettingsDeepLinks.AvailableRemindersDestinationQuery);
    atomic_store(result, (unint64_t *)&qword_1000AD1A0);
  }
  return result;
}

unint64_t sub_10000D7D8()
{
  unint64_t result;

  result = qword_1000AD1A8;
  if (!qword_1000AD1A8)
  {
    result = swift_getWitnessTable(&unk_1000890B8, &type metadata for RemindersSettingsDeepLinks.AvailableRemindersDestinationQuery);
    atomic_store(result, (unint64_t *)&qword_1000AD1A8);
  }
  return result;
}

unint64_t sub_10000D820()
{
  unint64_t result;

  result = qword_1000AD1B0[0];
  if (!qword_1000AD1B0[0])
  {
    result = swift_getWitnessTable(&unk_100089164, &type metadata for RemindersSettingsDeepLinks);
    atomic_store(result, qword_1000AD1B0);
  }
  return result;
}

uint64_t sub_10000D864()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v0 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10000CF88(v16, qword_1000B9DC8);
  sub_10000CF70(v16, (uint64_t)qword_1000B9DC8);
  v17 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001CLL, 0x800000010008F840);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v19[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "Reminders settings deep link for App Intents setting extension", 62, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

void sub_10000DA78(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v13[12];

  v13[7] = a2;
  v3 = sub_100006DA4(&qword_1000AD0B0);
  __chkstk_darwin(v3);
  v4 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  __chkstk_darwin(v5);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v8 = type metadata accessor for LocalizedStringResource(0);
  v9 = __chkstk_darwin(v8);
  v13[6] = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)sub_10000DC2C + 4 * word_100088EAC[a1];
  v13[8] = (char *)v13 - v12;
  __asm { BR              X10 }
}

uint64_t sub_10000DC2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v10 = String.LocalizationValue.init(stringLiteral:)(0x7265646E696D6552, 0xE900000000000073);
  static Locale.current.getter(v10);
  v11 = *(void (**)(uint64_t))(v1 + 104);
  v12 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v11(v2);
  *(_QWORD *)(v9 - 152) = v11;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v7, 0, 0, v4, v2, "Reminders settings deep link destination for App Intents", 56, 2);
  v13 = String.LocalizationValue.init(stringLiteral:)(1936748609, 0xE400000000000000);
  static Locale.current.getter(v13);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v2, v12, v6);
  *(_QWORD *)(v9 - 144) = v5;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v7, 0, 0, v4, v2, "Subtitle for reminders settings navigation for App Intents", 58, 2);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 56))(v5, 0, 1, v8);
  DisplayRepresentation.Image.init(appBundleIdentifier:)(0xD000000000000013, 0x800000010008EA40);
  v14 = type metadata accessor for DisplayRepresentation.Image(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v3, 0, 1, v14);
  v15 = sub_100006DA4(&qword_1000AD0B8);
  v16 = v6;
  v17 = *(_QWORD *)(v0 + 72);
  v18 = *(unsigned __int8 *)(v0 + 80);
  *(_QWORD *)(v9 - 160) = 2 * v17;
  v19 = swift_allocObject(v15, ((v18 + 32) & ~v18) + 3 * v17, v18 | 7);
  *(_OWORD *)(v19 + 16) = xmmword_1000895F0;
  *(_QWORD *)(v9 - 136) = v3;
  *(_QWORD *)(v9 - 168) = 0xD000000000000019;
  v20 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000019, 0x800000010008F590);
  static Locale.current.getter(v20);
  v21 = v16;
  v22 = v16;
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 - 152);
  v23(v2, v12, v21);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v7, 0, 0, v4, v2, "Synonyms keyword for reminders deep link destination for App Intents", 68, 2);
  v24 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x800000010008F600);
  static Locale.current.getter(v24);
  v25 = v22;
  v23(v2, v12, v22);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v7, 0, 0, v4, v2, "Synonyms keyword for reminders deep link destination for App Intents", 68, 2);
  v26 = *(_QWORD *)(v9 - 136);
  v27 = String.LocalizationValue.init(stringLiteral:)(*(_QWORD *)(v9 - 168), 0x800000010008F620);
  static Locale.current.getter(v27);
  v23(v2, v12, v25);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v7, 0, 0, v4, v2, "Synonyms keyword for reminders deep link destination for App Intents", 68, 2);
  v28 = String.LocalizationValue.init(stringLiteral:)(0x10000000000001A8, 0x800000010008F640);
  static Locale.current.getter(v28);
  v23(v2, v12, v25);
  v29 = *(_QWORD *)(v9 - 128);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v7, 0, 0, v4, v2, "Description Text for reminders settings display representation for App Intents", 78, 2);
  return DisplayRepresentation.init(title:subtitle:image:synonyms:descriptionText:)(*(_QWORD *)(v9 - 112), *(_QWORD *)(v9 - 144), v26, v19, v29);
}

uint64_t sub_10000E6F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1000AD2E0 + dword_1000AD2E0);
  v3 = (_QWORD *)swift_task_alloc(unk_1000AD2E4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000AFE8;
  return v5(a1);
}

uint64_t sub_10000E754(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (__cdecl *v4)();

  *(_QWORD *)(v1 + 16) = a1;
  v4 = (uint64_t (__cdecl *)())((char *)&dword_1000AD2D8 + dword_1000AD2D8);
  v2 = (_QWORD *)swift_task_alloc(unk_1000AD2DC);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_10000D19C;
  return v4();
}

unint64_t sub_10000E7B4()
{
  unint64_t result;

  result = qword_1000AD1C8;
  if (!qword_1000AD1C8)
  {
    result = swift_getWitnessTable(&unk_100088FC8, &type metadata for RemindersSettingsDeepLinks.AvailableRemindersDestinationQuery);
    atomic_store(result, (unint64_t *)&qword_1000AD1C8);
  }
  return result;
}

uint64_t sub_10000E7F8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (__cdecl *v4)();

  *(_QWORD *)(v1 + 16) = a1;
  v4 = (uint64_t (__cdecl *)())((char *)&dword_1000AD2D0 + dword_1000AD2D0);
  v2 = (_QWORD *)swift_task_alloc(unk_1000AD2D4);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_10000AE40;
  return v4();
}

unint64_t sub_10000E858()
{
  unint64_t result;

  result = qword_1000AD1D8;
  if (!qword_1000AD1D8)
  {
    result = swift_getWitnessTable(&unk_1000890E0, &type metadata for RemindersSettingsDeepLinks.AvailableRemindersDestinationQuery);
    atomic_store(result, (unint64_t *)&qword_1000AD1D8);
  }
  return result;
}

unint64_t sub_10000E8A0()
{
  unint64_t result;

  result = qword_1000AD1E0;
  if (!qword_1000AD1E0)
  {
    result = swift_getWitnessTable(&unk_1000892D4, &type metadata for RemindersSettingsDeepLinks);
    atomic_store(result, (unint64_t *)&qword_1000AD1E0);
  }
  return result;
}

unint64_t sub_10000E8E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AD1E8;
  if (!qword_1000AD1E8)
  {
    v1 = sub_100007258(qword_1000AD1F0);
    sub_10000E8A0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1000AD1E8);
  }
  return result;
}

uint64_t sub_10000E94C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10000E7B4();
  *v5 = v2;
  v5[1] = sub_10000B208;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_10000E9B8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (__cdecl *v4)();

  *(_QWORD *)(v1 + 16) = a1;
  v4 = (uint64_t (__cdecl *)())((char *)&dword_1000AD2C8 + dword_1000AD2C8);
  v2 = (_QWORD *)swift_task_alloc(unk_1000AD2CC);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_10000EA14;
  return v4();
}

uint64_t sub_10000EA14(char a1)
{
  uint64_t *v1;
  _BYTE *v3;
  uint64_t v5;

  v3 = *(_BYTE **)(*v1 + 16);
  v5 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 24));
  *v3 = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

unint64_t sub_10000EA68()
{
  unint64_t result;

  result = qword_1000AD208;
  if (!qword_1000AD208)
  {
    result = swift_getWitnessTable(&unk_1000891BC, &type metadata for RemindersSettingsDeepLinks);
    atomic_store(result, (unint64_t *)&qword_1000AD208);
  }
  return result;
}

uint64_t sub_10000EAAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v13;

  v2 = sub_100006DA4(&qword_1000AD2B8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100006DA4(&qword_1000AD2C0);
  __chkstk_darwin(v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000D820();
  _EntityURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)(66, 1, a1, v9);
  v10._object = (void *)0x800000010008F8A0;
  v10._countAndFlagsBits = 0xD000000000000042;
  _EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for _EntityURLRepresentation.StringInterpolation.Token.id<A>(_:), v2);
  _EntityURLRepresentation.StringInterpolation.appendInterpolation(_:)(v5, v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  _EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v11);
  return _EntityURLRepresentation.init(stringInterpolation:)(v8, a1, v9);
}

uint64_t sub_10000EBFC()
{
  uint64_t v0;

  v0 = qword_1000AD168;
  swift_bridgeObjectRetain(off_1000AD170);
  return v0;
}

unint64_t sub_10000EC34()
{
  unint64_t result;

  result = qword_1000AD210;
  if (!qword_1000AD210)
  {
    result = swift_getWitnessTable(&unk_1000891E4, &type metadata for RemindersSettingsDeepLinks);
    atomic_store(result, (unint64_t *)&qword_1000AD210);
  }
  return result;
}

unint64_t sub_10000EC7C()
{
  unint64_t result;

  result = qword_1000AD218;
  if (!qword_1000AD218)
  {
    result = swift_getWitnessTable(&unk_10008921C, &type metadata for RemindersSettingsDeepLinks);
    atomic_store(result, (unint64_t *)&qword_1000AD218);
  }
  return result;
}

unint64_t sub_10000ECC4()
{
  unint64_t result;

  result = qword_1000AD220;
  if (!qword_1000AD220)
  {
    result = swift_getWitnessTable(&unk_10008924C, &type metadata for RemindersSettingsDeepLinks);
    atomic_store(result, (unint64_t *)&qword_1000AD220);
  }
  return result;
}

unint64_t sub_10000ED10()
{
  unint64_t result;

  result = qword_1000AD228;
  if (!qword_1000AD228)
  {
    result = swift_getWitnessTable(&unk_100088F98, &type metadata for RemindersSettingsDestination);
    atomic_store(result, (unint64_t *)&qword_1000AD228);
  }
  return result;
}

uint64_t sub_10000ED54(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_100010534();
  v4 = _URLRepresentableEntity.urlRepresentationParameter.getter(a1, v3);
  return sub_10000CFC8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8), v1, v4, v5);
}

unint64_t sub_10000EDA0()
{
  unint64_t result;

  result = qword_1000AD238;
  if (!qword_1000AD238)
  {
    result = swift_getWitnessTable(&unk_100089284, &type metadata for RemindersSettingsDeepLinks);
    atomic_store(result, (unint64_t *)&qword_1000AD238);
  }
  return result;
}

unint64_t sub_10000EDE8()
{
  unint64_t result;

  result = qword_1000AD240;
  if (!qword_1000AD240)
  {
    result = swift_getWitnessTable(&unk_1000892AC, &type metadata for RemindersSettingsDeepLinks);
    atomic_store(result, (unint64_t *)&qword_1000AD240);
  }
  return result;
}

unint64_t sub_10000EE34()
{
  unint64_t result;

  result = qword_1000AD248;
  if (!qword_1000AD248)
  {
    result = swift_getWitnessTable(&unk_10008932C, &type metadata for RemindersSettingsDeepLinks);
    atomic_store(result, (unint64_t *)&qword_1000AD248);
  }
  return result;
}

unint64_t sub_10000EE7C()
{
  unint64_t result;

  result = qword_1000AD250;
  if (!qword_1000AD250)
  {
    result = swift_getWitnessTable(&unk_100088EE8, &type metadata for RemindersSettingsDestination);
    atomic_store(result, (unint64_t *)&qword_1000AD250);
  }
  return result;
}

void sub_10000EEC0(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_10000EECC@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B568(&qword_1000AC820, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000B9DC8, (uint64_t)sub_10000D864, a1);
}

uint64_t sub_10000EEF0()
{
  return sub_1000095B4(&qword_1000AD258, &qword_1000AD260, (uint64_t)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_10000EF1C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10000D820();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10000EF58()
{
  unint64_t result;

  result = qword_1000AD268;
  if (!qword_1000AD268)
  {
    result = swift_getWitnessTable(&unk_10008935C, &type metadata for RemindersSettingsDeepLinks);
    atomic_store(result, (unint64_t *)&qword_1000AD268);
  }
  return result;
}

void sub_10000EF9C(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;

  sub_10000DA78(*v1, a1);
}

uint64_t sub_10000EFA4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10000EE34();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10000EFE0()
{
  unint64_t result;

  result = qword_1000AD270;
  if (!qword_1000AD270)
  {
    result = swift_getWitnessTable(&unk_100089454, &type metadata for OpenRemindersSettingsDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000AD270);
  }
  return result;
}

uint64_t sub_10000F028()
{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10000CF88(v0, qword_1000B9DE0);
  sub_10000CF70(v0, (uint64_t)qword_1000B9DE0);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000017, 0x800000010008EEF0);
}

uint64_t sub_10000F088@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001DLL, 0x800000010008EE90);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "OpenRemindersSettingsDeepLink Reminders App Intent description", 62, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, &_swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t sub_10000F2A0()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

_QWORD *sub_10000F2D0@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_10000F308(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

void (*sub_10000F33C(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_10000BAD4;
}

unint64_t sub_10000F388()
{
  unint64_t result;

  result = qword_1000AD278;
  if (!qword_1000AD278)
  {
    result = swift_getWitnessTable(&unk_10008947C, &type metadata for OpenRemindersSettingsDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000AD278);
  }
  return result;
}

uint64_t sub_10000F3CC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_1000104AC();
  v5 = sub_100010534();
  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_10000F420()
{
  uint64_t v0;

  v0 = qword_1000AD178;
  swift_bridgeObjectRetain(off_1000AD180);
  return v0;
}

unint64_t sub_10000F458()
{
  unint64_t result;

  result = qword_1000AD280;
  if (!qword_1000AD280)
  {
    result = swift_getWitnessTable(&unk_10008950C, &type metadata for OpenRemindersSettingsDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000AD280);
  }
  return result;
}

unint64_t sub_10000F4A0()
{
  unint64_t result;

  result = qword_1000AD288;
  if (!qword_1000AD288)
  {
    result = swift_getWitnessTable(&unk_100089534, &type metadata for OpenRemindersSettingsDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000AD288);
  }
  return result;
}

uint64_t sub_10000F4E4(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_10000F388();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

uint64_t sub_10000F524@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B568(&qword_1000AC828, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000B9DE0, (uint64_t)sub_10000F028, a1);
}

uint64_t sub_10000F54C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to _URLRepresentableIntent<>.perform()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_1000104AC();
  v7 = sub_1000104F0();
  v8 = sub_100010534();
  *v5 = v2;
  v5[1] = sub_10000BDBC;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_10000F5D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1000101A0();
  *a1 = result;
  return result;
}

uint64_t sub_10000F5FC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10000F388();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenRemindersSettingsDeepLink()
{
  return &type metadata for OpenRemindersSettingsDeepLink;
}

_BYTE *initializeBufferWithCopyOfBuffer for TTRNewWidgetPresenter.DisplayDateStyle.TimeOfDayStyle(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for RemindersSettingsDeepLinks()
{
  return &type metadata for RemindersSettingsDeepLinks;
}

ValueMetadata *type metadata accessor for RemindersSettingsDeepLinks.AvailableRemindersDestinationQuery()
{
  return &type metadata for RemindersSettingsDeepLinks.AvailableRemindersDestinationQuery;
}

uint64_t _s24RemindersWidgetExtension28RemindersSettingsDestinationOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s24RemindersWidgetExtension28RemindersSettingsDestinationOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10000F744 + 4 * byte_100088EB9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10000F778 + 4 * byte_100088EB4[v4]))();
}

uint64_t sub_10000F778(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10000F780(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10000F788);
  return result;
}

uint64_t sub_10000F794(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10000F79CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10000F7A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10000F7A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10000F7B4(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_10000F7BC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for RemindersSettingsDestination()
{
  return &type metadata for RemindersSettingsDestination;
}

unint64_t sub_10000F7D4(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000A6518, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

uint64_t sub_10000F81C()
{
  return swift_task_switch(sub_10000F830, 0, 0);
}

uint64_t sub_10000F830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;

  v1 = sub_10000F940((uint64_t)&off_1000A65C0);
  v2 = v1;
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    sub_1000817B8(0, v3, 0);
    v4 = 0;
    v5 = *((_QWORD *)&_swiftEmptyArrayStorage + 2);
    do
    {
      v6 = *(_BYTE *)(v2 + v4 + 32);
      v7 = *((_QWORD *)&_swiftEmptyArrayStorage + 3);
      if (v5 + v4 >= v7 >> 1)
        sub_1000817B8(v7 > 1, v5 + v4 + 1, 1);
      *((_QWORD *)&_swiftEmptyArrayStorage + 2) = v5 + v4 + 1;
      *((_BYTE *)&_swiftEmptyArrayStorage + v5 + v4++ + 32) = v6;
    }
    while (v3 != v4);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    swift_bridgeObjectRelease(v1);
  }
  return (*(uint64_t (**)(void *))(v0 + 8))(&_swiftEmptyArrayStorage);
}

uint64_t sub_10000F940(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char *v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  unint64_t v40;
  unsigned int v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  char *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  unint64_t v52;
  _QWORD *v53;

  v2 = v1;
  v4 = type metadata accessor for REMFeatureFlags(0);
  v44 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  __chkstk_darwin(v4);
  v43 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  v49 = *(_QWORD *)(v6 - 8);
  v50 = v6;
  v7 = __chkstk_darwin(v6);
  result = __chkstk_darwin(v7);
  v11 = (char *)&v39 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v47 = v9;
    v13 = 0;
    v14 = a1 + 32;
    v41 = enum case for REMFeatureFlags.groceryMultilingual(_:);
    v15 = &_swiftEmptyArrayStorage;
    v39 = v14;
    v40 = v12;
    while (1)
    {
      v42 = v15;
      v16 = 0;
      v17 = v13 <= v12 ? v12 : v13;
      v52 = v13 - v17;
      v48 = v13;
      while (1)
      {
        if (!(v52 + v16))
        {
          __break(1u);
          return result;
        }
        v19 = *(unsigned __int8 *)(v14 + v13);
        v51 = v19;
        if (v19 == 2)
          break;
        if (v19 != 3)
          goto LABEL_20;
        v20 = v11;
        v21 = v47;
        static Locale.current.getter(result);
        type metadata accessor for REMGroceryDummyModel(0);
        v22 = Locale.identifier.getter();
        v24 = v23;
        v25 = static REMGroceryDummyModel.isSupported(localeIdentifier:)(v22);
        if (v2)
        {
          v18 = v21;
          v11 = v20;
          v13 = v48;
LABEL_8:
          (*(void (**)(char *, uint64_t))(v49 + 8))(v18, v50);
          swift_bridgeObjectRelease(v24);
          result = swift_errorRelease(v2);
          v2 = 0;
          goto LABEL_9;
        }
        v26 = v25;
        (*(void (**)(char *, uint64_t))(v49 + 8))(v21, v50);
        result = swift_bridgeObjectRelease(v24);
        v11 = v20;
        v13 = v48;
        if ((v26 & 1) != 0)
          goto LABEL_20;
LABEL_9:
        ++v16;
        ++v14;
        if (v13 == --v12)
          return (uint64_t)v42;
      }
      static Locale.current.getter(result);
      type metadata accessor for REMGroceryDummyModel(0);
      v27 = Locale.identifier.getter();
      v24 = v28;
      v29 = static REMGroceryDummyModel.isSupported(localeIdentifier:)(v27);
      if (v2)
        break;
      v30 = v29;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v11, v50);
      result = swift_bridgeObjectRelease(v24);
      if ((v30 & 1) == 0)
        goto LABEL_9;
      v31 = v43;
      v32 = v44;
      v33 = v45;
      v34 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v44 + 104))(v43, v41, v45);
      v46 = REMFeatureFlags.isEnabled.getter(v34);
      result = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v31, v33);
      if ((v46 & 1) == 0)
        goto LABEL_9;
LABEL_20:
      v15 = v42;
      result = swift_isUniquelyReferenced_nonNull_native(v42);
      v53 = v15;
      if ((result & 1) == 0)
      {
        result = sub_1000817D4(0, v15[2] + 1, 1);
        v15 = v53;
      }
      v14 = v39;
      v36 = v15[2];
      v35 = v15[3];
      if (v36 >= v35 >> 1)
      {
        result = sub_1000817D4(v35 > 1, v36 + 1, 1);
        v15 = v53;
      }
      v37 = v13 + 1;
      v13 += 1 + v16;
      v15[2] = v36 + 1;
      *((_BYTE *)v15 + v36 + 32) = v51;
      v38 = v37 == v12;
      v12 = v40;
      if (v38)
        return (uint64_t)v15;
    }
    v18 = v11;
    goto LABEL_8;
  }
  return (uint64_t)&_swiftEmptyArrayStorage;
}

uint64_t sub_10000FC74(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_10000FC8C, 0, 0);
}

uint64_t sub_10000FC8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = swift_bridgeObjectRetain(v1);
  v3 = sub_10000F940(v2);
  swift_bridgeObjectRelease(v1);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    sub_1000817B8(0, v4, 0);
    v5 = 0;
    v6 = *((_QWORD *)&_swiftEmptyArrayStorage + 2);
    do
    {
      v7 = *(_BYTE *)(v3 + v5 + 32);
      v8 = *((_QWORD *)&_swiftEmptyArrayStorage + 3);
      if (v6 + v5 >= v8 >> 1)
        sub_1000817B8(v8 > 1, v6 + v5 + 1, 1);
      *((_QWORD *)&_swiftEmptyArrayStorage + 2) = v6 + v5 + 1;
      *((_BYTE *)&_swiftEmptyArrayStorage + v6 + v5++ + 32) = v7;
    }
    while (v4 != v5);
  }
  swift_bridgeObjectRelease(v3);
  return (*(uint64_t (**)(void *))(v0 + 8))(&_swiftEmptyArrayStorage);
}

uint64_t sub_10000FDA8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = type metadata accessor for REMFeatureFlags(0);
  v0[2] = v1;
  v2 = *(_QWORD *)(v1 - 8);
  v0[3] = v2;
  v0[4] = swift_task_alloc((*(_QWORD *)(v2 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Locale(0);
  v0[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v0[6] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v0[7] = swift_task_alloc(v5);
  v0[8] = swift_task_alloc(v5);
  return swift_task_switch(sub_10000FE3C, 0, 0);
}

uint64_t sub_10000FE3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v21;

  v2 = 0;
  v3 = *(_QWORD *)(v1 + 48);
  v4 = *(_QWORD *)(v1 + 24);
  v21 = enum case for REMFeatureFlags.groceryMultilingual(_:);
  do
  {
    v5 = *((unsigned __int8 *)&off_1000A65E8 + v2 + 32);
    if ((_DWORD)v5 == 2)
    {
      static Locale.current.getter(a1);
      type metadata accessor for REMGroceryDummyModel(0);
      v10 = Locale.identifier.getter();
      v12 = v11;
      v13 = static REMGroceryDummyModel.isSupported(localeIdentifier:)(v10);
      (*(void (**)(_QWORD, _QWORD))(v3 + 8))(*(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 40));
      a1 = swift_bridgeObjectRelease(v12);
      if ((v13 & 1) != 0)
      {
        v14 = *(_QWORD *)(v1 + 32);
        v15 = *(_QWORD *)(v1 + 16);
        v16 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v14, v21, v15);
        v17 = REMFeatureFlags.isEnabled.getter(v16);
        a1 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v14, v15);
        if ((v17 & 1) != 0)
        {
          v5 = 2;
          goto LABEL_11;
        }
      }
    }
    else
    {
      if ((_DWORD)v5 != 3)
        goto LABEL_11;
      static Locale.current.getter(a1);
      type metadata accessor for REMGroceryDummyModel(0);
      v6 = Locale.identifier.getter();
      v8 = v7;
      v9 = static REMGroceryDummyModel.isSupported(localeIdentifier:)(v6);
      (*(void (**)(_QWORD, _QWORD))(v3 + 8))(*(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 40));
      a1 = swift_bridgeObjectRelease(v8);
      if ((v9 & 1) != 0)
      {
        v5 = 3;
        goto LABEL_11;
      }
    }
    ++v2;
  }
  while (v2 != 4);
  v5 = 4;
LABEL_11:
  v18 = *(_QWORD *)(v1 + 56);
  v19 = *(_QWORD *)(v1 + 32);
  swift_task_dealloc(*(_QWORD *)(v1 + 64));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v5);
}

uint64_t sub_100010010()
{
  return swift_task_switch(sub_100010024, 0, 0);
}

uint64_t sub_100010024()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  int64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1000817B8(0, 4, 0);
  v2 = *((_QWORD *)&_swiftEmptyArrayStorage + 2);
  v1 = *((_QWORD *)&_swiftEmptyArrayStorage + 3);
  v3 = v1 >> 1;
  v4 = v2 + 1;
  if (v1 >> 1 <= v2)
  {
    sub_1000817B8(v1 > 1, v2 + 1, 1);
    v1 = *((_QWORD *)&_swiftEmptyArrayStorage + 3);
    v3 = v1 >> 1;
  }
  *((_QWORD *)&_swiftEmptyArrayStorage + 2) = v4;
  *((_BYTE *)&_swiftEmptyArrayStorage + v2 + 32) = 0;
  v5 = v2 + 2;
  if (v3 < (uint64_t)(v2 + 2))
  {
    sub_1000817B8(v1 > 1, v2 + 2, 1);
    v1 = *((_QWORD *)&_swiftEmptyArrayStorage + 3);
    v3 = v1 >> 1;
  }
  *((_QWORD *)&_swiftEmptyArrayStorage + 2) = v5;
  *((_BYTE *)&_swiftEmptyArrayStorage + v4 + 32) = 1;
  v6 = v2 + 3;
  if (v3 < (uint64_t)(v2 + 3))
    sub_1000817B8(v1 > 1, v2 + 3, 1);
  *((_QWORD *)&_swiftEmptyArrayStorage + 2) = v6;
  *((_BYTE *)&_swiftEmptyArrayStorage + v5 + 32) = 2;
  v7 = *((_QWORD *)&_swiftEmptyArrayStorage + 3);
  if ((uint64_t)(v2 + 4) > (uint64_t)(v7 >> 1))
    sub_1000817B8(v7 > 1, v2 + 4, 1);
  *((_QWORD *)&_swiftEmptyArrayStorage + 2) = v2 + 4;
  *((_BYTE *)&_swiftEmptyArrayStorage + v6 + 32) = 3;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000101A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  char *v27;
  char *v28;
  unint64_t v29;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36[2];

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v34 = *(_QWORD *)(v0 - 8);
  v35 = v0;
  __chkstk_darwin(v0);
  v33 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100006DA4(&qword_1000AD070);
  v3 = __chkstk_darwin(v2);
  v32 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (char *)&v31 - v5;
  v7 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Locale(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for LocalizedStringResource(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100006DA4(&qword_1000AD298);
  v24 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x800000010008EE40);
  static Locale.current.getter(v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0, 0, v16, v13, "Open Reminders Settings deepLink parameter", 42, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v9, 1, 1, v20);
  v36[0] = 4;
  v25 = type metadata accessor for IntentDialog(0);
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v26(v6, 1, 1, v25);
  v27 = v32;
  v26(v32, 1, 1, v25);
  v28 = v33;
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v33, enum case for InputConnectionBehavior.default(_:), v35);
  v29 = sub_10000D820();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v23, v9, v36, v6, v27, v28, v29);
}

unint64_t sub_1000104AC()
{
  unint64_t result;

  result = qword_1000AD2A0;
  if (!qword_1000AD2A0)
  {
    result = swift_getWitnessTable(&unk_100089384, &type metadata for OpenRemindersSettingsDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000AD2A0);
  }
  return result;
}

unint64_t sub_1000104F0()
{
  unint64_t result;

  result = qword_1000AD2A8;
  if (!qword_1000AD2A8)
  {
    result = swift_getWitnessTable(&unk_1000893D4, &type metadata for OpenRemindersSettingsDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000AD2A8);
  }
  return result;
}

unint64_t sub_100010534()
{
  unint64_t result;

  result = qword_1000AD2B0;
  if (!qword_1000AD2B0)
  {
    result = swift_getWitnessTable(&unk_1000890FC, &type metadata for RemindersSettingsDeepLinks);
    atomic_store(result, (unint64_t *)&qword_1000AD2B0);
  }
  return result;
}

uint64_t sub_100010578(uint64_t a1)
{
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v11;

  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3._countAndFlagsBits = 0xD000000000000029;
  v11._countAndFlagsBits = 0xD000000000000030;
  v11._object = (void *)0x800000010008F9B0;
  v3._object = (void *)0x800000010008F980;
  v4.value._object = (void *)0x800000010008F920;
  v4.value._countAndFlagsBits = 0xD000000000000011;
  v5._countAndFlagsBits = 0x6174627553206425;
  v5._object = (void *)0xEB00000000736B73;
  v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v11);

  v7 = sub_100006DA4(&qword_1000AD2E8);
  v8 = swift_allocObject(v7, 72, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1000882D0;
  *(_QWORD *)(v8 + 56) = &type metadata for Int;
  *(_QWORD *)(v8 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v8 + 32) = a1;
  v9 = static String.localizedStringWithFormat(_:_:)(v6._countAndFlagsBits, v6._object, v8);
  swift_bridgeObjectRelease(v6._object);
  swift_bridgeObjectRelease(v8);
  return v9;
}

uint64_t sub_1000106B4(uint64_t a1)
{
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v11;

  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3._countAndFlagsBits = 0xD000000000000023;
  v11._countAndFlagsBits = 0xD00000000000003ALL;
  v11._object = (void *)0x800000010008F940;
  v3._object = (void *)0x800000010008F8F0;
  v4.value._object = (void *)0x800000010008F920;
  v4.value._countAndFlagsBits = 0xD000000000000011;
  v5._countAndFlagsBits = 0x6E696D6572206425;
  v5._object = (void *)0xEC00000073726564;
  v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v11);

  v7 = sub_100006DA4(&qword_1000AD2E8);
  v8 = swift_allocObject(v7, 72, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1000882D0;
  *(_QWORD *)(v8 + 56) = &type metadata for Int;
  *(_QWORD *)(v8 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v8 + 32) = a1;
  v9 = static String.localizedStringWithFormat(_:_:)(v6._countAndFlagsBits, v6._object, v8);
  swift_bridgeObjectRelease(v6._object);
  swift_bridgeObjectRelease(v8);
  return v9;
}

BOOL sub_1000107F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_100010804()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100010848()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_100010870(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_1000108B0(_QWORD *a1@<X8>)
{
  *a1 = &off_1000A6660;
}

_QWORD *sub_1000108C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD *v4;
  void (*v5)(char *, _QWORD, uint64_t);
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  _QWORD *v20;

  v0 = type metadata accessor for WidgetFamily(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = _swiftEmptyArrayStorage;
  sub_1000817F0(0, 3, 0);
  v4 = v20;
  v17 = enum case for WidgetFamily.systemLarge(_:);
  v19 = enum case for WidgetFamily.systemMedium(_:);
  v18 = enum case for WidgetFamily.systemSmall(_:);
  v5 = *(void (**)(char *, _QWORD, uint64_t))(v1 + 104);
  v5(v3, enum case for WidgetFamily.systemSmall(_:), v0);
  v20 = v4;
  v7 = v4[2];
  v6 = v4[3];
  if (v7 >= v6 >> 1)
  {
    sub_1000817F0(v6 > 1, v7 + 1, 1);
    v4 = v20;
  }
  v4[2] = v7 + 1;
  v8 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v9 = *(_QWORD *)(v1 + 72);
  v10 = *(void (**)(char *, char *, uint64_t))(v1 + 32);
  v10((char *)v4 + v8 + v9 * v7, v3, v0);
  v5(v3, v19, v0);
  v20 = v4;
  v12 = v4[2];
  v11 = v4[3];
  if (v12 >= v11 >> 1)
  {
    sub_1000817F0(v11 > 1, v12 + 1, 1);
    v4 = v20;
  }
  v4[2] = v12 + 1;
  v10((char *)v4 + v8 + v9 * v12, v3, v0);
  v5(v3, v17, v0);
  v20 = v4;
  v14 = v4[2];
  v13 = v4[3];
  if (v14 >= v13 >> 1)
  {
    sub_1000817F0(v13 > 1, v14 + 1, 1);
    v4 = v20;
  }
  v4[2] = v14 + 1;
  v10((char *)v4 + v8 + v9 * v14, v3, v0);
  return v4;
}

uint64_t getEnumTagSinglePayload for TTRSupportedSystemWidgetFamily(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRSupportedSystemWidgetFamily(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100010C0C + 4 * byte_100089605[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100010C40 + 4 * byte_100089600[v4]))();
}

uint64_t sub_100010C40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100010C48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100010C50);
  return result;
}

uint64_t sub_100010C5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100010C64);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100010C68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100010C70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRSupportedSystemWidgetFamily()
{
  return &type metadata for TTRSupportedSystemWidgetFamily;
}

unint64_t sub_100010C90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AD2F0;
  if (!qword_1000AD2F0)
  {
    v1 = sub_100007258(&qword_1000AD2F8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1000AD2F0);
  }
  return result;
}

unint64_t sub_100010CE0()
{
  unint64_t result;

  result = qword_1000AD300;
  if (!qword_1000AD300)
  {
    result = swift_getWitnessTable(&unk_1000896A8, &type metadata for TTRSupportedSystemWidgetFamily);
    atomic_store(result, (unint64_t *)&qword_1000AD300);
  }
  return result;
}

_QWORD *sub_100010D24(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  void **v11;
  int *v12;
  uint64_t v13;
  unsigned int (*v14)(void **, uint64_t, int *);
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void (*v31)(void **, _QWORD, uint64_t, int *);
  id v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  char *v63;
  void (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  char *v66;
  char *v67;
  void **__dst;
  void *__dsta;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    v7 = a2[4];
    *(_QWORD *)(a1 + 32) = v7;
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v8 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v8;
    v9 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
    v10 = v9[9];
    __dst = (void **)((char *)v4 + v10);
    v11 = (void **)((char *)a2 + v10);
    v12 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    v13 = *((_QWORD *)v12 - 1);
    v14 = *(unsigned int (**)(void **, uint64_t, int *))(v13 + 48);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    if (v14(v11, 1, v12))
    {
      v15 = sub_100006DA4(&qword_1000ACCD8);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v17 = *v11;
      v18 = v11[1];
      *__dst = *v11;
      __dst[1] = v18;
      v19 = v12[6];
      v63 = (char *)__dst + v19;
      v66 = (char *)v11 + v19;
      v20 = type metadata accessor for AttributedString(0);
      v62 = *(_QWORD *)(v20 - 8);
      v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
      v22 = v17;
      v23 = v18;
      if (v21(v66, 1, v20))
      {
        v24 = sub_100006DA4(&qword_1000ACE10);
        memcpy(v63, v66, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v63, v66, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v63, 0, 1, v20);
      }
      v25 = v12[7];
      v26 = (char *)__dst + v25;
      v27 = (char *)v11 + v25;
      v28 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      v29 = v12[8];
      v30 = *(void **)((char *)v11 + v29);
      *(void **)((char *)__dst + v29) = v30;
      *(void **)((char *)__dst + v12[9]) = *(void **)((char *)v11 + v12[9]);
      *((_BYTE *)__dst + v12[10]) = *((_BYTE *)v11 + v12[10]);
      *((_BYTE *)__dst + v12[11]) = *((_BYTE *)v11 + v12[11]);
      v31 = *(void (**)(void **, _QWORD, uint64_t, int *))(v13 + 56);
      v32 = v30;
      v31(__dst, 0, 1, v12);
    }
    v33 = v9[10];
    __dsta = *(void **)((char *)a2 + v33);
    *(_QWORD *)((char *)v4 + v33) = __dsta;
    v34 = v9[11];
    v35 = (_QWORD *)((char *)v4 + v34);
    v36 = (uint64_t *)((char *)a2 + v34);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = v9[12];
    v39 = *(void **)((char *)a2 + v38);
    *(_QWORD *)((char *)v4 + v38) = v39;
    v40 = v9[13];
    v41 = (_QWORD *)((char *)v4 + v40);
    v42 = (uint64_t *)((char *)a2 + v40);
    v43 = v42[1];
    *v41 = *v42;
    v41[1] = v43;
    v44 = v9[14];
    v45 = (_QWORD *)((char *)v4 + v44);
    v46 = (uint64_t *)((char *)a2 + v44);
    v47 = v46[1];
    *v45 = *v46;
    v45[1] = v47;
    *((_BYTE *)v4 + v9[15]) = *((_BYTE *)a2 + v9[15]);
    v48 = v9[16];
    v49 = (_QWORD *)((char *)v4 + v48);
    v50 = (uint64_t *)((char *)a2 + v48);
    v51 = v50[1];
    *v49 = *v50;
    v49[1] = v51;
    v52 = v9[17];
    v53 = *(uint64_t *)((char *)a2 + v52);
    *(_QWORD *)((char *)v4 + v52) = v53;
    v54 = v9[18];
    v65 = (uint64_t)a2 + v54;
    v67 = (char *)v4 + v54;
    v55 = type metadata accessor for URL(0);
    v64 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
    v56 = __dsta;
    swift_bridgeObjectRetain(v37);
    v57 = v39;
    swift_bridgeObjectRetain(v43);
    swift_bridgeObjectRetain(v47);
    swift_bridgeObjectRetain(v51);
    swift_bridgeObjectRetain(v53);
    v64(v67, v65, v55);
    v58 = v9[19];
    v59 = *(uint64_t *)((char *)a2 + v58);
    *(_QWORD *)((char *)v4 + v58) = v59;
    *((_BYTE *)v4 + v9[20]) = *((_BYTE *)a2 + v9[20]);
    v60 = *(int *)(a3 + 24);
    *(_QWORD *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(_QWORD *)((char *)v4 + v60) = *(uint64_t *)((char *)a2 + v60);
    swift_bridgeObjectRetain(v59);
  }
  return v4;
}

uint64_t sub_100011098(_QWORD *a1)
{
  int *v2;
  id *v3;
  int *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[4]);
  swift_bridgeObjectRelease(a1[7]);
  v2 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v3 = (id *)((char *)a1 + v2[9]);
  v4 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((_QWORD *)v4 - 1) + 48))(v3, 1, v4))
  {

    v5 = (char *)v3 + v4[6];
    v6 = type metadata accessor for AttributedString(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
      (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
    v8 = (char *)v3 + v4[7];
    v9 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);

  }
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v2[11] + 8));

  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v2[13] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v2[14] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v2[16] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v2[17]));
  v10 = (char *)a1 + v2[18];
  v11 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  return swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v2[19]));
}

uint64_t sub_100011230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void **v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(void **, uint64_t, int *);
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void (*v29)(void **, _QWORD, uint64_t, int *);
  id v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  char *v61;
  void (*v62)(uint64_t, void *, uint64_t);
  char *v63;
  void *v64;
  uint64_t v65;
  void **__dst;
  void *__dsta;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v9 = v8[9];
  __dst = (void **)(a1 + v9);
  v10 = (void **)(a2 + v9);
  v11 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(unsigned int (**)(void **, uint64_t, int *))(v12 + 48);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  if (v13(v10, 1, v11))
  {
    v14 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = *v10;
    v16 = v10[1];
    *__dst = *v10;
    __dst[1] = v16;
    v17 = v11[6];
    v61 = (char *)v10 + v17;
    v63 = (char *)__dst + v17;
    v18 = type metadata accessor for AttributedString(0);
    v60 = *(_QWORD *)(v18 - 8);
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
    v20 = v15;
    v21 = v16;
    if (v19(v61, 1, v18))
    {
      v22 = sub_100006DA4(&qword_1000ACE10);
      memcpy(v63, v61, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v63, v61, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v63, 0, 1, v18);
    }
    v23 = v11[7];
    v24 = (char *)__dst + v23;
    v25 = (char *)v10 + v23;
    v26 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
    v27 = v11[8];
    v28 = *(void **)((char *)v10 + v27);
    *(void **)((char *)__dst + v27) = v28;
    *(void **)((char *)__dst + v11[9]) = *(void **)((char *)v10 + v11[9]);
    *((_BYTE *)__dst + v11[10]) = *((_BYTE *)v10 + v11[10]);
    *((_BYTE *)__dst + v11[11]) = *((_BYTE *)v10 + v11[11]);
    v29 = *(void (**)(void **, _QWORD, uint64_t, int *))(v12 + 56);
    v30 = v28;
    v29(__dst, 0, 1, v11);
  }
  v31 = v8[10];
  __dsta = *(void **)(a2 + v31);
  *(_QWORD *)(a1 + v31) = __dsta;
  v32 = v8[11];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  v36 = v8[12];
  v37 = *(void **)(a2 + v36);
  *(_QWORD *)(a1 + v36) = v37;
  v38 = v8[13];
  v39 = (_QWORD *)(a1 + v38);
  v40 = (_QWORD *)(a2 + v38);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v42 = v8[14];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (_QWORD *)(a2 + v42);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  *(_BYTE *)(a1 + v8[15]) = *(_BYTE *)(a2 + v8[15]);
  v46 = v8[16];
  v47 = (_QWORD *)(a1 + v46);
  v48 = (_QWORD *)(a2 + v46);
  v49 = v48[1];
  *v47 = *v48;
  v47[1] = v49;
  v50 = v8[17];
  v51 = *(_QWORD *)(a2 + v50);
  *(_QWORD *)(a1 + v50) = v51;
  v52 = v8[18];
  v64 = (void *)(a2 + v52);
  v65 = a1 + v52;
  v53 = type metadata accessor for URL(0);
  v62 = *(void (**)(uint64_t, void *, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
  v54 = __dsta;
  swift_bridgeObjectRetain(v35);
  v55 = v37;
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRetain(v45);
  swift_bridgeObjectRetain(v49);
  swift_bridgeObjectRetain(v51);
  v62(v65, v64, v53);
  v56 = v8[19];
  v57 = *(_QWORD *)(a2 + v56);
  *(_QWORD *)(a1 + v56) = v57;
  *(_BYTE *)(a1 + v8[20]) = *(_BYTE *)(a2 + v8[20]);
  v58 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v58) = *(_QWORD *)(a2 + v58);
  swift_bridgeObjectRetain(v57);
  return a1;
}

uint64_t sub_100011578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  int *v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD *, uint64_t, int *);
  int v19;
  int v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  size_t v41;
  void *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void (*v49)(_QWORD *, _QWORD, uint64_t, int *);
  id v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  id v58;
  uint64_t v59;
  void *v60;
  void *v61;
  id v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  id v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  unsigned int (*__src)(char *, uint64_t, uint64_t);
  char *__dst;
  void *__dsta;
  uint64_t v104;
  uint64_t v105;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v13 = v12[9];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v17 = *((_QWORD *)v16 - 1);
  v18 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (v20)
    {
      sub_100007EB4((uint64_t)v14, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    v105 = a3;
    v29 = (void *)*v15;
    v30 = (void *)*v14;
    *v14 = *v15;
    v31 = v29;

    v32 = (void *)v14[1];
    v33 = (void *)v15[1];
    v14[1] = v33;
    v34 = v33;

    v35 = v16[6];
    v36 = (char *)v14 + v35;
    v37 = (char *)v15 + v35;
    v38 = type metadata accessor for AttributedString(0);
    v100 = *(_QWORD *)(v38 - 8);
    v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v100 + 48);
    __dsta = v36;
    LODWORD(v36) = v39(v36, 1, v38);
    v40 = v39(v37, 1, v38);
    if ((_DWORD)v36)
    {
      if (!v40)
      {
        (*(void (**)(void *, char *, uint64_t))(v100 + 16))(__dsta, v37, v38);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v100 + 56))(__dsta, 0, 1, v38);
        goto LABEL_18;
      }
      v41 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v42 = __dsta;
    }
    else
    {
      if (!v40)
      {
        (*(void (**)(void *, char *, uint64_t))(v100 + 24))(__dsta, v37, v38);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v100 + 8))(__dsta, v38);
      v41 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v42 = __dsta;
    }
    memcpy(v42, v37, v41);
LABEL_18:
    v51 = v16[7];
    v52 = (char *)v14 + v51;
    v53 = (char *)v15 + v51;
    v54 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
    v55 = v16[8];
    v56 = *(void **)((char *)v14 + v55);
    v57 = *(void **)((char *)v15 + v55);
    *(_QWORD *)((char *)v14 + v55) = v57;
    v58 = v57;

    *(_QWORD *)((char *)v14 + v16[9]) = *(_QWORD *)((char *)v15 + v16[9]);
    *((_BYTE *)v14 + v16[10]) = *((_BYTE *)v15 + v16[10]);
    *((_BYTE *)v14 + v16[11]) = *((_BYTE *)v15 + v16[11]);
    a3 = v105;
    goto LABEL_19;
  }
  if (v20)
  {
LABEL_7:
    v28 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_19;
  }
  v21 = (void *)*v15;
  *v14 = *v15;
  v22 = (void *)v15[1];
  v14[1] = v22;
  v23 = v16[6];
  __dst = (char *)v14 + v23;
  v104 = a3;
  v99 = (char *)v15 + v23;
  v24 = type metadata accessor for AttributedString(0);
  v98 = *(_QWORD *)(v24 - 8);
  __src = *(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48);
  v25 = v21;
  v26 = v22;
  if (__src(v99, 1, v24))
  {
    v27 = sub_100006DA4(&qword_1000ACE10);
    memcpy(__dst, v99, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v98 + 16))(__dst, v99, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v98 + 56))(__dst, 0, 1, v24);
  }
  a3 = v104;
  v43 = v16[7];
  v44 = (char *)v14 + v43;
  v45 = (char *)v15 + v43;
  v46 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = v16[8];
  v48 = *(void **)((char *)v15 + v47);
  *(_QWORD *)((char *)v14 + v47) = v48;
  *(_QWORD *)((char *)v14 + v16[9]) = *(_QWORD *)((char *)v15 + v16[9]);
  *((_BYTE *)v14 + v16[10]) = *((_BYTE *)v15 + v16[10]);
  *((_BYTE *)v14 + v16[11]) = *((_BYTE *)v15 + v16[11]);
  v49 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v17 + 56);
  v50 = v48;
  v49(v14, 0, 1, v16);
LABEL_19:
  v59 = v12[10];
  v60 = *(void **)(a2 + v59);
  v61 = *(void **)(a1 + v59);
  *(_QWORD *)(a1 + v59) = v60;
  v62 = v60;

  v63 = v12[11];
  v64 = (_QWORD *)(a1 + v63);
  v65 = (_QWORD *)(a2 + v63);
  *v64 = *v65;
  v66 = v65[1];
  v67 = v64[1];
  v64[1] = v66;
  swift_bridgeObjectRetain(v66);
  swift_bridgeObjectRelease(v67);
  v68 = v12[12];
  v69 = *(void **)(a1 + v68);
  v70 = *(void **)(a2 + v68);
  *(_QWORD *)(a1 + v68) = v70;
  v71 = v70;

  v72 = v12[13];
  v73 = (_QWORD *)(a1 + v72);
  v74 = (_QWORD *)(a2 + v72);
  *v73 = *v74;
  v75 = v74[1];
  v76 = v73[1];
  v73[1] = v75;
  swift_bridgeObjectRetain(v75);
  swift_bridgeObjectRelease(v76);
  v77 = v12[14];
  v78 = (_QWORD *)(a1 + v77);
  v79 = (_QWORD *)(a2 + v77);
  *v78 = *v79;
  v80 = v79[1];
  v81 = v78[1];
  v78[1] = v80;
  swift_bridgeObjectRetain(v80);
  swift_bridgeObjectRelease(v81);
  *(_BYTE *)(a1 + v12[15]) = *(_BYTE *)(a2 + v12[15]);
  v82 = v12[16];
  v83 = (_QWORD *)(a1 + v82);
  v84 = (_QWORD *)(a2 + v82);
  *v83 = *v84;
  v85 = v84[1];
  v86 = v83[1];
  v83[1] = v85;
  swift_bridgeObjectRetain(v85);
  swift_bridgeObjectRelease(v86);
  v87 = v12[17];
  v88 = *(_QWORD *)(a1 + v87);
  v89 = *(_QWORD *)(a2 + v87);
  *(_QWORD *)(a1 + v87) = v89;
  swift_bridgeObjectRetain(v89);
  swift_bridgeObjectRelease(v88);
  v90 = v12[18];
  v91 = a1 + v90;
  v92 = a2 + v90;
  v93 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 24))(v91, v92, v93);
  v94 = v12[19];
  v95 = *(_QWORD *)(a2 + v94);
  v96 = *(_QWORD *)(a1 + v94);
  *(_QWORD *)(a1 + v94) = v95;
  swift_bridgeObjectRetain(v95);
  swift_bridgeObjectRelease(v96);
  *(_BYTE *)(a1 + v12[20]) = *(_BYTE *)(a2 + v12[20]);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100011B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char *__dst;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v6 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v7 = v6[9];
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    v13 = v10[6];
    v28 = a3;
    __dst = (char *)v8 + v13;
    v14 = (char *)v9 + v13;
    v15 = type metadata accessor for AttributedString(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_100006DA4(&qword_1000ACE10);
      memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    v18 = v10[7];
    v19 = (char *)v8 + v18;
    v20 = (char *)v9 + v18;
    v21 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    *(_QWORD *)((char *)v8 + v10[8]) = *(_QWORD *)((char *)v9 + v10[8]);
    *(_QWORD *)((char *)v8 + v10[9]) = *(_QWORD *)((char *)v9 + v10[9]);
    *((_BYTE *)v8 + v10[10]) = *((_BYTE *)v9 + v10[10]);
    *((_BYTE *)v8 + v10[11]) = *((_BYTE *)v9 + v10[11]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
    a3 = v28;
  }
  *(_QWORD *)(a1 + v6[10]) = *(_QWORD *)(a2 + v6[10]);
  *(_OWORD *)(a1 + v6[11]) = *(_OWORD *)(a2 + v6[11]);
  *(_QWORD *)(a1 + v6[12]) = *(_QWORD *)(a2 + v6[12]);
  *(_OWORD *)(a1 + v6[13]) = *(_OWORD *)(a2 + v6[13]);
  *(_OWORD *)(a1 + v6[14]) = *(_OWORD *)(a2 + v6[14]);
  *(_BYTE *)(a1 + v6[15]) = *(_BYTE *)(a2 + v6[15]);
  *(_OWORD *)(a1 + v6[16]) = *(_OWORD *)(a2 + v6[16]);
  *(_QWORD *)(a1 + v6[17]) = *(_QWORD *)(a2 + v6[17]);
  v22 = v6[18];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  *(_QWORD *)(a1 + v6[19]) = *(_QWORD *)(a2 + v6[19]);
  *(_BYTE *)(a1 + v6[20]) = *(_BYTE *)(a2 + v6[20]);
  v26 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);
  return a1;
}

uint64_t sub_100011DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  int *v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD *, uint64_t, int *);
  int v18;
  int v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  size_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;
  char *__dst;
  void *__dsta;
  uint64_t v87;
  uint64_t v88;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v8);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease(v10);
  v11 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v12 = v11[9];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v16 = *((_QWORD *)v15 - 1);
  v17 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (v19)
    {
      sub_100007EB4((uint64_t)v13, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    v88 = a3;
    v26 = (void *)*v13;
    *v13 = *v14;

    v27 = (void *)v13[1];
    v13[1] = v14[1];

    v28 = v15[6];
    v29 = (char *)v13 + v28;
    v30 = (char *)v14 + v28;
    v31 = type metadata accessor for AttributedString(0);
    v84 = *(_QWORD *)(v31 - 8);
    v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 48);
    __dsta = v29;
    LODWORD(v29) = v32(v29, 1, v31);
    v33 = v32(v30, 1, v31);
    if ((_DWORD)v29)
    {
      if (!v33)
      {
        (*(void (**)(void *, char *, uint64_t))(v84 + 32))(__dsta, v30, v31);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v84 + 56))(__dsta, 0, 1, v31);
        goto LABEL_18;
      }
      v34 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v35 = __dsta;
    }
    else
    {
      if (!v33)
      {
        (*(void (**)(void *, char *, uint64_t))(v84 + 40))(__dsta, v30, v31);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v84 + 8))(__dsta, v31);
      v34 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v35 = __dsta;
    }
    memcpy(v35, v30, v34);
LABEL_18:
    v40 = v15[7];
    v41 = (char *)v13 + v40;
    v42 = (char *)v14 + v40;
    v43 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 40))(v41, v42, v43);
    v44 = v15[8];
    v45 = *(void **)((char *)v13 + v44);
    *(_QWORD *)((char *)v13 + v44) = *(_QWORD *)((char *)v14 + v44);

    *(_QWORD *)((char *)v13 + v15[9]) = *(_QWORD *)((char *)v14 + v15[9]);
    *((_BYTE *)v13 + v15[10]) = *((_BYTE *)v14 + v15[10]);
    *((_BYTE *)v13 + v15[11]) = *((_BYTE *)v14 + v15[11]);
    a3 = v88;
    goto LABEL_19;
  }
  if (v19)
  {
LABEL_7:
    v25 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_19;
  }
  *(_OWORD *)v13 = *(_OWORD *)v14;
  v20 = v15[6];
  __dst = (char *)v13 + v20;
  v87 = a3;
  v21 = (char *)v14 + v20;
  v22 = type metadata accessor for AttributedString(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = sub_100006DA4(&qword_1000ACE10);
    memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(__dst, v21, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
  }
  a3 = v87;
  v36 = v15[7];
  v37 = (char *)v13 + v36;
  v38 = (char *)v14 + v36;
  v39 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
  *(_QWORD *)((char *)v13 + v15[8]) = *(_QWORD *)((char *)v14 + v15[8]);
  *(_QWORD *)((char *)v13 + v15[9]) = *(_QWORD *)((char *)v14 + v15[9]);
  *((_BYTE *)v13 + v15[10]) = *((_BYTE *)v14 + v15[10]);
  *((_BYTE *)v13 + v15[11]) = *((_BYTE *)v14 + v15[11]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
LABEL_19:
  v46 = v11[10];
  v47 = *(void **)(a1 + v46);
  *(_QWORD *)(a1 + v46) = *(_QWORD *)(a2 + v46);

  v48 = v11[11];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (uint64_t *)(a2 + v48);
  v52 = *v50;
  v51 = v50[1];
  v53 = v49[1];
  *v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease(v53);
  v54 = v11[12];
  v55 = *(void **)(a1 + v54);
  *(_QWORD *)(a1 + v54) = *(_QWORD *)(a2 + v54);

  v56 = v11[13];
  v57 = (_QWORD *)(a1 + v56);
  v58 = (uint64_t *)(a2 + v56);
  v60 = *v58;
  v59 = v58[1];
  v61 = v57[1];
  *v57 = v60;
  v57[1] = v59;
  swift_bridgeObjectRelease(v61);
  v62 = v11[14];
  v63 = (_QWORD *)(a1 + v62);
  v64 = (uint64_t *)(a2 + v62);
  v66 = *v64;
  v65 = v64[1];
  v67 = v63[1];
  *v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease(v67);
  *(_BYTE *)(a1 + v11[15]) = *(_BYTE *)(a2 + v11[15]);
  v68 = v11[16];
  v69 = (_QWORD *)(a1 + v68);
  v70 = (uint64_t *)(a2 + v68);
  v72 = *v70;
  v71 = v70[1];
  v73 = v69[1];
  *v69 = v72;
  v69[1] = v71;
  swift_bridgeObjectRelease(v73);
  v74 = v11[17];
  v75 = *(_QWORD *)(a1 + v74);
  *(_QWORD *)(a1 + v74) = *(_QWORD *)(a2 + v74);
  swift_bridgeObjectRelease(v75);
  v76 = v11[18];
  v77 = a1 + v76;
  v78 = a2 + v76;
  v79 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 40))(v77, v78, v79);
  v80 = v11[19];
  v81 = *(_QWORD *)(a1 + v80);
  *(_QWORD *)(a1 + v80) = *(_QWORD *)(a2 + v80);
  swift_bridgeObjectRelease(v81);
  *(_BYTE *)(a1 + v11[20]) = *(_BYTE *)(a2 + v11[20]);
  v82 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v82) = *(_QWORD *)(a2 + v82);
  return a1;
}

uint64_t sub_100012270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001227C);
}

uint64_t sub_100012280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001228C);
}

uint64_t type metadata accessor for TTRIAnyListComplicationWidgetView(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000AD388, (uint64_t)&nominal type descriptor for TTRIAnyListComplicationWidgetView);
}

uint64_t sub_1000122A4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for TTRNewWidgetViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10001231C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100092610, 1);
}

uint64_t sub_10001232C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  _BYTE *v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  _BYTE *v72;
  unint64_t v73;
  unint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  uint64_t KeyPath;
  uint64_t v98;

  v94 = sub_100006DA4(&qword_1000AD478);
  __chkstk_darwin(v94);
  v96 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_100006DA4(&qword_1000AD480);
  __chkstk_darwin(v86);
  v88 = (uint64_t)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_100006DA4(&qword_1000AD488);
  __chkstk_darwin(v87);
  v84 = (uint64_t)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_100006DA4(&qword_1000AD490);
  __chkstk_darwin(v91);
  v89 = (uint64_t *)((char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = (int *)type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveReminderView(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_100006DA4(&qword_1000AD498);
  v11 = __chkstk_darwin(v85);
  v83 = (uint64_t)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v81 - v14;
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v81 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v81 - v19;
  v21 = sub_100006DA4(&qword_1000AD4A0);
  v22 = __chkstk_darwin(v21);
  v95 = (uint64_t)&v81 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v93 = (uint64_t *)((char *)&v81 - v24);
  v25 = type metadata accessor for TTRNewWidgetViewModel(0);
  v26 = 0;
  v27 = 0;
  v98 = 0;
  v28 = 0;
  v29 = *(_QWORD *)(a1 + *(int *)(v25 + 76));
  if (*(_QWORD *)(v29 + 16) <= 1uLL)
  {
    v82 = (uint64_t *)v20;
    v28 = *(_QWORD *)a1;
    v30 = *(_QWORD *)(a1 + 8);
    KeyPath = swift_getKeyPath(&unk_100089848);
    v98 = v30;
    v31 = swift_bridgeObjectRetain(v30);
    v32 = static Color.primary.getter(v31);
    v26 = v32;
    v33 = *(_QWORD *)(v29 + 16);
    if (v33 < 2)
    {
      v90 = v32;
      v92 = v28;
      if (v33)
      {
        v62 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRNewWidgetViewModel.Reminder(0) - 8) + 80);
        sub_1000072AC(v29 + ((v62 + 32) & ~v62), (uint64_t)v10, type metadata accessor for TTRNewWidgetViewModel.Reminder);
        v10[v8[5]] = 1;
        v63 = &v10[v8[6]];
        *(_QWORD *)v63 = swift_getKeyPath(&unk_1000897D0);
        v63[8] = 0;
        v64 = &v10[v8[7]];
        *(_QWORD *)v64 = swift_getKeyPath(&unk_1000897F8);
        v64[8] = 0;
        v65 = static Alignment.center.getter();
        sub_10002411C(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v18, 0.0, 1, INFINITY, 0, v65, v66);
        sub_100007EB4((uint64_t)v10, type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveReminderView);
        v67 = (uint64_t)v82;
        sub_100018778((uint64_t)v18, (uint64_t)v82, &qword_1000AD498);
        v68 = v88;
        sub_100009434(v67, v88, &qword_1000AD498);
        swift_storeEnumTagMultiPayload(v68, v86, 1);
        v69 = sub_1000095B4(&qword_1000AD4A8, &qword_1000AD488, (uint64_t)&protocol conformance descriptor for TupleView<A>);
        v70 = sub_100015DE0();
        v71 = v89;
        _ConditionalContent<>.init(storage:)(v89, v68, v87, v85, v69, v70);
        v72 = v96;
        sub_100009434((uint64_t)v71, (uint64_t)v96, &qword_1000AD490);
        swift_storeEnumTagMultiPayload(v72, v94, 0);
        v73 = sub_100015E64();
        v74 = sub_100015EE8();
        v55 = v93;
        _ConditionalContent<>.init(storage:)(v93, v72, v91, &type metadata for TTRIAnyListComplicationWidgetView.NoReminderView, v73, v74);
        sub_100009578((uint64_t)v71, &qword_1000AD490);
        sub_100009578(v67, &qword_1000AD498);
      }
      else
      {
        v75 = *(_BYTE *)(a1 + 40);
        v76 = swift_getKeyPath(&unk_100089820);
        v77 = static Color.primary.getter(v76);
        v78 = v96;
        *v96 = v75;
        *((_QWORD *)v78 + 1) = v76;
        v78[16] = 0;
        *((_QWORD *)v78 + 3) = v77;
        swift_storeEnumTagMultiPayload(v78, v94, 1);
        v79 = sub_100015E64();
        v80 = sub_100015EE8();
        v55 = v93;
        _ConditionalContent<>.init(storage:)(v93, v78, v91, &type metadata for TTRIAnyListComplicationWidgetView.NoReminderView, v79, v80);
      }
      goto LABEL_6;
    }
    v27 = KeyPath;
    v20 = (char *)v82;
  }
  v90 = v26;
  v92 = v28;
  v82 = a2;
  v34 = *(_QWORD *)(type metadata accessor for TTRNewWidgetViewModel.Reminder(0) - 8);
  v35 = v29 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
  sub_1000072AC(v35, (uint64_t)v10, type metadata accessor for TTRNewWidgetViewModel.Reminder);
  v10[v8[5]] = 0;
  v36 = &v10[v8[6]];
  *(_QWORD *)v36 = swift_getKeyPath(&unk_1000897D0);
  v36[8] = 0;
  v37 = &v10[v8[7]];
  *(_QWORD *)v37 = swift_getKeyPath(&unk_1000897F8);
  v37[8] = 0;
  v38 = static Alignment.center.getter();
  sub_10002411C(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v18, 0.0, 1, INFINITY, 0, v38, v39);
  sub_100007EB4((uint64_t)v10, type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveReminderView);
  result = sub_100018778((uint64_t)v18, (uint64_t)v20, &qword_1000AD498);
  if (*(_QWORD *)(v29 + 16) >= 2uLL)
  {
    KeyPath = v27;
    sub_1000072AC(v35 + *(_QWORD *)(v34 + 72), (uint64_t)v10, type metadata accessor for TTRNewWidgetViewModel.Reminder);
    v10[v8[5]] = 0;
    v41 = &v10[v8[6]];
    *(_QWORD *)v41 = swift_getKeyPath(&unk_1000897D0);
    v41[8] = 0;
    v42 = &v10[v8[7]];
    *(_QWORD *)v42 = swift_getKeyPath(&unk_1000897F8);
    v42[8] = 0;
    v43 = static Alignment.center.getter();
    sub_10002411C(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v15, 0.0, 1, INFINITY, 0, v43, v44);
    sub_100007EB4((uint64_t)v10, type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveReminderView);
    sub_100018778((uint64_t)v15, (uint64_t)v18, &qword_1000AD498);
    sub_100009434((uint64_t)v20, (uint64_t)v15, &qword_1000AD498);
    v45 = v83;
    sub_100009434((uint64_t)v18, v83, &qword_1000AD498);
    v46 = v84;
    sub_100009434((uint64_t)v15, v84, &qword_1000AD498);
    v47 = sub_100006DA4(&qword_1000AD4D8);
    sub_100009434(v45, v46 + *(int *)(v47 + 48), &qword_1000AD498);
    sub_100009578(v45, &qword_1000AD498);
    sub_100009578((uint64_t)v15, &qword_1000AD498);
    v48 = v88;
    sub_100009434(v46, v88, &qword_1000AD488);
    swift_storeEnumTagMultiPayload(v48, v86, 0);
    v49 = sub_1000095B4(&qword_1000AD4A8, &qword_1000AD488, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v50 = sub_100015DE0();
    v51 = v89;
    _ConditionalContent<>.init(storage:)(v89, v48, v87, v85, v49, v50);
    sub_100009578(v46, &qword_1000AD488);
    v52 = v96;
    sub_100009434((uint64_t)v51, (uint64_t)v96, &qword_1000AD490);
    swift_storeEnumTagMultiPayload(v52, v94, 0);
    v53 = sub_100015E64();
    v54 = sub_100015EE8();
    v55 = v93;
    _ConditionalContent<>.init(storage:)(v93, v52, v91, &type metadata for TTRIAnyListComplicationWidgetView.NoReminderView, v53, v54);
    sub_100009578((uint64_t)v51, &qword_1000AD490);
    sub_100009578((uint64_t)v18, &qword_1000AD498);
    sub_100009578((uint64_t)v20, &qword_1000AD498);
    a2 = v82;
LABEL_6:
    v56 = v95;
    sub_100009434((uint64_t)v55, v95, &qword_1000AD4A0);
    v57 = v92;
    v59 = KeyPath;
    v58 = v98;
    *a2 = v92;
    a2[1] = v58;
    a2[2] = v59;
    a2[3] = 0;
    v60 = v90;
    a2[4] = v90;
    v61 = sub_100006DA4(&qword_1000AD4D0);
    sub_100009434(v56, (uint64_t)a2 + *(int *)(v61 + 48), &qword_1000AD4A0);
    sub_100015F2C(v57, v58, v59, 0, v60);
    sub_100009578((uint64_t)v55, &qword_1000AD4A0);
    sub_100009578(v56, &qword_1000AD4A0);
    return sub_100015F68(v57, v58, v59, 0, v60);
  }
  __break(1u);
  return result;
}

uint64_t sub_100012C28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = sub_100006DA4(&qword_1000ACC78);
  __chkstk_darwin(v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100006DA4(&qword_1000AD460);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = static HorizontalAlignment.leading.getter(v5);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 0;
  v8 = sub_100006DA4(&qword_1000AD468);
  sub_10001232C(v0, (uint64_t *)&v7[*(int *)(v8 + 44)]);
  v9 = v0 + *(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 72);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v3, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v3, 0, 1, v10);
  v12 = sub_1000095B4(&qword_1000AD470, &qword_1000AD460, (uint64_t)&protocol conformance descriptor for VStack<A>);
  View.widgetURL(_:)(v3, v4, v12);
  sub_100009578((uint64_t)v3, &qword_1000ACC78);
  return sub_100009578((uint64_t)v7, &qword_1000AD460);
}

uint64_t sub_100012DA4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = *((_BYTE *)a1 + 24);
  swift_bridgeObjectRetain(v5);
  v8 = swift_retain(v6);
  v9 = sub_100024A40(v8, v7);
  swift_release(v6);
  v10 = Text.font(_:)(v9, v4, v5, 0, &_swiftEmptyArrayStorage);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  swift_bridgeObjectRelease(v5);
  swift_release(v9);
  LOBYTE(v5) = v14 & 1;
  v17 = Text.foregroundColor(_:)(a1[4], v10, v12, v14 & 1, v16);
  v19 = v18;
  v21 = v20;
  v23 = v22 & 1;
  sub_10000729C(v10, v12, v5);
  swift_bridgeObjectRelease(v16);
  *(_QWORD *)a2 = v17;
  *(_QWORD *)(a2 + 8) = v19;
  *(_BYTE *)(a2 + 16) = v23;
  *(_QWORD *)(a2 + 24) = v21;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 1;
  sub_100009520(v17, v19, v23);
  swift_bridgeObjectRetain(v21);
  sub_10000729C(v17, v19, v23);
  return swift_bridgeObjectRelease(v21);
}

uint64_t sub_100012EDC()
{
  return sub_100014818((uint64_t (*)(void))sub_100016014, (uint64_t)&_s34AnyListComplicationListNameFontKeyON);
}

__n128 sub_100012EF0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __n128 result;
  __n128 v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _OWORD v16[2];
  uint64_t v17;

  v4 = *(_OWORD *)(v2 + 16);
  v16[0] = *(_OWORD *)v2;
  v16[1] = v4;
  v17 = *(_QWORD *)(v2 + 32);
  v5 = static VerticalAlignment.center.getter(a1);
  sub_100012DA4((uint64_t *)v16, (uint64_t)&v11);
  v6 = v12;
  v7 = v13;
  v8 = v14;
  v9 = v15;
  result = v11;
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  *(__n128 *)(a2 + 24) = result;
  *(_BYTE *)(a2 + 40) = v6;
  *(_QWORD *)(a2 + 48) = v7;
  *(_QWORD *)(a2 + 56) = v8;
  *(_BYTE *)(a2 + 64) = v9;
  return result;
}

_QWORD *sub_100012F60@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v31;
  int *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t OpaqueTypeConformance2;
  unint64_t v46;
  _QWORD *result;
  void *v48;
  char *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  id v56;
  _QWORD *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  id v61;
  __int128 v62;
  uint64_t v63;
  void *v64;
  char *v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t KeyPath;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  id v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  _QWORD *v96;
  int *v97;
  uint64_t aBlock;
  uint64_t v99;
  uint64_t (*v100)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void *v101;
  uint64_t (*v102)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v103;
  __int128 v104;
  unsigned __int8 v105;
  void *v106;

  v96 = a1;
  v91 = sub_100006DA4(&qword_1000AD598);
  __chkstk_darwin(v91);
  v95 = (uint64_t *)((char *)&v85 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v93 = type metadata accessor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle(0);
  __chkstk_darwin(v93);
  v4 = (char *)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_100006DA4(&qword_1000AD5A0);
  v88 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v6 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_100006DA4(&qword_1000AD5A8);
  v89 = *(_QWORD *)(v94 - 8);
  v7 = __chkstk_darwin(v94);
  v87 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v85 - v9;
  v97 = (int *)type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveReminderView(0);
  __chkstk_darwin(v97);
  v12 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100006DA4(&qword_1000ACE10);
  __chkstk_darwin(v13);
  v15 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  sub_100009434((uint64_t)v1 + v16[6], (uint64_t)v15, &qword_1000ACE10);
  v17 = type metadata accessor for AttributedString(0);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v15, 1, v17);
  sub_100009578((uint64_t)v15, &qword_1000ACE10);
  sub_1000072AC((uint64_t)v1, (uint64_t)v12, type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveReminderView);
  if (v18 == 1)
  {
    v19 = *(_QWORD *)&v12[v16[9]];
    sub_100007EB4((uint64_t)v12, type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveReminderView);
    v20 = 1;
    if (v19 < 1)
      v20 = 2;
  }
  else
  {
    sub_100007EB4((uint64_t)v12, type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveReminderView);
    v20 = 1;
  }
  v90 = v20;
  v21 = *(void **)((char *)v1 + v16[8]);
  if (v21)
  {
    v22 = *((unsigned __int8 *)v1 + v16[10]);
    v23 = (void *)*v1;
    v24 = v21;
    v86 = v24;
    v25 = objc_msgSend(v23, "string");
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;

    aBlock = sub_100082C08((uint64_t)v24, v26, v28, v22 ^ 1);
    v99 = v29;
    v100 = v30;
    v31 = sub_1000177B8();
    Toggle.init<A>(isOn:intent:label:)(v22, &aBlock, nullsub_1, 0, &type metadata for EmptyView, &type metadata for TTRReminderSetCompletedIntent, &protocol witness table for EmptyView, v31);
    sub_1000072AC((uint64_t)v1, (uint64_t)v4, type metadata accessor for TTRNewWidgetViewModel.Reminder);
    v32 = (int *)v93;
    v4[*(int *)(v93 + 20)] = *((_BYTE *)v1 + v97[5]);
    *(_QWORD *)&v4[v32[6]] = v90;
    v33 = &v4[v32[7]];
    *(_QWORD *)v33 = swift_getKeyPath(&unk_1000897D0);
    v33[8] = 0;
    v34 = &v4[v32[8]];
    *(_QWORD *)v34 = swift_getKeyPath(&unk_100089B98);
    v34[8] = 0;
    v35 = &v4[v32[9]];
    *(_QWORD *)v35 = swift_getKeyPath(&unk_1000897F8);
    v35[8] = 0;
    v36 = sub_1000095B4(&qword_1000AD5B8, &qword_1000AD5A0, (uint64_t)&protocol conformance descriptor for Toggle<A>);
    v37 = sub_100007218(&qword_1000AD5C0, type metadata accessor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle, (uint64_t)&unk_100089C3C);
    v38 = v87;
    v39 = v92;
    View.toggleStyle<A>(_:)(v4, v92, v32, v36, v37);
    sub_100007EB4((uint64_t)v4, type metadata accessor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle);
    (*(void (**)(char *, uint64_t))(v88 + 8))(v6, v39);
    v40 = v89;
    v41 = v38;
    v42 = v94;
    (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v10, v41, v94);
    v43 = v95;
    (*(void (**)(uint64_t *, char *, uint64_t))(v40 + 16))(v95, v10, v42);
    swift_storeEnumTagMultiPayload(v43, v91, 0);
    v44 = sub_100006DA4(&qword_1000AD5B0);
    aBlock = v39;
    v99 = (uint64_t)v32;
    v100 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v36;
    v101 = (void *)v37;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&aBlock, &opaque type descriptor for <<opaque return type of View.toggleStyle<A>(_:)>>, 1);
    v46 = sub_100017698();
    _ConditionalContent<>.init(storage:)(v96, v43, v42, v44, OpaqueTypeConformance2, v46);

    return (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v10, v42);
  }
  v48 = (void *)*v1;
  v49 = (char *)v1 + v97[7];
  v50 = *(_QWORD *)v49;
  v51 = v49[8];
  v52 = swift_retain(*(_QWORD *)v49);
  v53 = sub_100024A40(v52, v51);
  swift_release(v50);
  result = objc_msgSend(v48, "string");
  if (!result)
    goto LABEL_13;
  v54 = result;
  v104 = xmmword_1000882E0;
  v105 = 0;
  v106 = &_swiftEmptyArrayStorage;
  v55 = objc_msgSend((id)objc_opt_self(REMTTHashtag), "attributeName");
  v56 = objc_msgSend(v48, "length");
  v57 = (_QWORD *)swift_allocObject(&unk_1000A77A8, 48, 7);
  v57[2] = &v104;
  v57[3] = v54;
  v57[4] = v53;
  v57[5] = 0;
  v58 = swift_allocObject(&unk_1000A77D0, 32, 7);
  *(_QWORD *)(v58 + 16) = sub_1000094CC;
  *(_QWORD *)(v58 + 24) = v57;
  v102 = sub_1000175C0;
  v103 = v58;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v99 = 1107296256;
  v100 = sub_100009338;
  v101 = &unk_1000A77E8;
  v59 = _Block_copy(&aBlock);
  v60 = v103;
  v61 = v54;
  v89 = v53;
  swift_retain(v53);
  swift_retain(v58);
  swift_release(v60);
  objc_msgSend(v48, "enumerateAttribute:inRange:options:usingBlock:", v55, 0, v56, 0, v59);

  _Block_release(v59);
  LOBYTE(v56) = swift_isEscapingClosureAtFileLocation(v58, "", 107, 27, 145, 1);
  result = (_QWORD *)swift_release(v58);
  if ((v56 & 1) != 0)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  v62 = v104;
  v63 = v105;
  v64 = v106;
  swift_release(v89);
  swift_release(v57);
  v65 = (char *)v1 + v97[6];
  v66 = *(_QWORD *)v65;
  v67 = v65[8];
  v68 = swift_retain(*(_QWORD *)v65);
  v69 = sub_100024A40(v68, v67);
  swift_release(v66);
  v70 = Text.font(_:)(v69, v62, *((_QWORD *)&v62 + 1), v63, v64);
  v72 = v71;
  v74 = v73;
  v76 = v75;
  swift_release(v69);
  sub_10000729C(v62, *((uint64_t *)&v62 + 1), v63);
  swift_bridgeObjectRelease(v64);
  KeyPath = swift_getKeyPath(&unk_100089B68);
  v78 = v95;
  *v95 = v70;
  v78[1] = v72;
  *((_BYTE *)v78 + 16) = v74 & 1;
  v78[3] = v76;
  v78[4] = KeyPath;
  v79 = v91;
  v78[5] = v90;
  *((_BYTE *)v78 + 48) = 0;
  swift_storeEnumTagMultiPayload(v78, v79, 1);
  v80 = sub_100006DA4(&qword_1000AD5B0);
  v81 = sub_1000095B4(&qword_1000AD5B8, &qword_1000AD5A0, (uint64_t)&protocol conformance descriptor for Toggle<A>);
  v82 = sub_100007218(&qword_1000AD5C0, type metadata accessor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle, (uint64_t)&unk_100089C3C);
  aBlock = v92;
  v99 = v93;
  v100 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v81;
  v101 = (void *)v82;
  v83 = swift_getOpaqueTypeConformance2(&aBlock, &opaque type descriptor for <<opaque return type of View.toggleStyle<A>(_:)>>, 1);
  v84 = sub_100017698();
  return _ConditionalContent<>.init(storage:)(v96, v78, v94, v80, v83, v84);
}

uint64_t sub_100013794()
{
  return sub_100014818((uint64_t (*)(void))sub_1000160E0, (uint64_t)&_s34AnyListComplicationReminderFontKeyON);
}

uint64_t sub_1000137A8()
{
  return sub_100014818((uint64_t (*)(void))sub_10001609C, (uint64_t)&_s33AnyListComplicationHashtagFontKeyON);
}

uint64_t sub_1000137C0@<X0>(void **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  char v26;
  char *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t KeyPath;
  int v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD v85[2];
  unsigned __int8 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unsigned __int8 v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v66 = sub_100006DA4(&qword_1000AD6C0);
  __chkstk_darwin(v66);
  v67 = (uint64_t *)((char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v68 = type metadata accessor for Image.Scale(0);
  v5 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100006DA4(&qword_1000AD6C8);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v62 - v12;
  v14 = type metadata accessor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100006DA4(&qword_1000AD6D0);
  v18 = __chkstk_darwin(v17);
  v81 = (uint64_t *)((char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = __chkstk_darwin(v18);
  v82 = (uint64_t)&v62 - v21;
  v22 = ToggleStyleConfiguration.isOn.getter(v20);
  v70 = v22;
  v74 = static HorizontalAlignment.leading.getter(v22);
  v23 = sub_100013DF8(a1, (uint64_t)v85);
  v76 = v85[1];
  v77 = v85[0];
  v75 = v86;
  v84 = v87;
  v69 = v88;
  v73 = v89;
  v72 = v90;
  v71 = v91;
  v79 = v93;
  v80 = v92;
  v78 = v94;
  v83 = v95;
  v24 = ToggleStyleConfiguration.isOn.getter(v23);
  sub_1000072AC((uint64_t)a1, (uint64_t)v16, type metadata accessor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle);
  if ((v24 & 1) == 0)
  {
    sub_100007EB4((uint64_t)v16, type metadata accessor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle);
    goto LABEL_5;
  }
  v63 = v8;
  v64 = v11;
  v25 = v68;
  v65 = v13;
  v26 = v16[*(int *)(type metadata accessor for TTRNewWidgetViewModel.Reminder(0) + 44)];
  sub_100007EB4((uint64_t)v16, type metadata accessor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle);
  if ((v26 & 1) == 0)
  {
LABEL_5:
    v46 = sub_100006DA4(&qword_1000AD6D8);
    v45 = v82;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v82, 1, 1, v46);
    goto LABEL_6;
  }
  v62 = Image.init(systemName:)(0x746165706572, 0xE600000000000000);
  v27 = (char *)a1 + *(int *)(v14 + 28);
  v28 = *(_QWORD *)v27;
  v29 = v27[8];
  v30 = swift_retain(*(_QWORD *)v27);
  v31 = sub_100024A40(v30, v29);
  swift_release(v28);
  KeyPath = swift_getKeyPath(&unk_100089C78);
  v33 = static HierarchicalShapeStyle.primary.getter();
  v34 = v7;
  v35 = v25;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Image.Scale.small(_:), v25);
  v36 = swift_getKeyPath(&unk_100089CA8);
  v37 = v67;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v67 + *(int *)(v66 + 28), v7, v35);
  *v37 = v36;
  v38 = (uint64_t)v64;
  sub_100009434((uint64_t)v37, (uint64_t)&v64[*(int *)(v63 + 36)], &qword_1000AD6C0);
  v39 = v62;
  *(_QWORD *)v38 = v62;
  *(_QWORD *)(v38 + 8) = KeyPath;
  *(_QWORD *)(v38 + 16) = v31;
  *(_DWORD *)(v38 + 24) = v33;
  v40 = v39;
  swift_retain(v39);
  swift_retain(KeyPath);
  swift_retain(v31);
  sub_100009578((uint64_t)v37, &qword_1000AD6C0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v34, v35);
  swift_release(v31);
  swift_release(KeyPath);
  swift_release(v40);
  v41 = (uint64_t)v65;
  sub_100018778(v38, (uint64_t)v65, &qword_1000AD6C8);
  sub_100009434(v41, v38, &qword_1000AD6C8);
  v42 = v81;
  *v81 = 0;
  *((_BYTE *)v42 + 8) = 1;
  v43 = sub_100006DA4(&qword_1000AD6E8);
  sub_100009434(v38, (uint64_t)v42 + *(int *)(v43 + 48), &qword_1000AD6C8);
  sub_100009578(v41, &qword_1000AD6C8);
  sub_100009578(v38, &qword_1000AD6C8);
  v44 = sub_100006DA4(&qword_1000AD6D8);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v42, 0, 1, v44);
  v45 = v82;
  sub_100018778((uint64_t)v42, v82, &qword_1000AD6D0);
LABEL_6:
  v47 = v70 & 1;
  v48 = v45;
  v49 = v81;
  sub_100009434(v48, (uint64_t)v81, &qword_1000AD6D0);
  *(_BYTE *)a2 = v47;
  *(_QWORD *)(a2 + 8) = v74;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 24) = 0;
  v50 = v76;
  v51 = v77;
  *(_QWORD *)(a2 + 32) = v77;
  *(_QWORD *)(a2 + 40) = v50;
  v52 = v75;
  *(_BYTE *)(a2 + 48) = v75;
  v53 = v84;
  v54 = v69;
  *(_QWORD *)(a2 + 56) = v84;
  *(_QWORD *)(a2 + 64) = v54;
  *(_QWORD *)(a2 + 72) = v73;
  *(_BYTE *)(a2 + 80) = v72;
  *(_DWORD *)(a2 + 84) = v71;
  v56 = v79;
  v55 = v80;
  *(_QWORD *)(a2 + 88) = v80;
  *(_QWORD *)(a2 + 96) = v56;
  v57 = v78;
  v58 = v83;
  *(_QWORD *)(a2 + 104) = v78;
  *(_QWORD *)(a2 + 112) = v58;
  *(_QWORD *)(a2 + 120) = 0;
  *(_BYTE *)(a2 + 128) = 0;
  v59 = sub_100006DA4(&qword_1000AD6E0);
  sub_100009434((uint64_t)v49, a2 + *(int *)(v59 + 80), &qword_1000AD6D0);
  sub_100009520(v51, v50, v52);
  swift_bridgeObjectRetain(v53);
  swift_retain(v54);
  v60 = v83;
  sub_1000186EC(v55, v56, v57, v83);
  sub_100009578(v82, &qword_1000AD6D0);
  sub_100009578((uint64_t)v49, &qword_1000AD6D0);
  sub_10000729C(v51, v50, v52);
  swift_release(v54);
  swift_bridgeObjectRelease(v84);
  return sub_10001871C(v55, v56, v57, v60);
}

id sub_100013DF8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  id result;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void **v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  int v37;
  uint64_t v38;
  uint64_t KeyPath;
  int v40;
  int v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  char v64;
  void **v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  _BYTE v76[12];
  int v77;
  uint64_t v78;
  _BYTE *v79;
  _BYTE *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  void **v90;
  _QWORD aBlock[5];
  uint64_t v92;
  __int128 v93;
  unsigned __int8 v94;
  void *v95;

  v4 = sub_100006DA4(&qword_1000ACE10);
  __chkstk_darwin(v4);
  v81 = &v76[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v83 = type metadata accessor for AttributedString(0);
  v82 = *(_QWORD *)(v83 - 8);
  v6 = __chkstk_darwin(v83);
  v79 = &v76[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v80 = &v76[-v8];
  v9 = *a1;
  v89 = type metadata accessor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle(0);
  v90 = a1;
  v10 = (char *)a1 + *(int *)(v89 + 36);
  v11 = *(_QWORD *)v10;
  v12 = v10[8];
  v13 = swift_retain(*(_QWORD *)v10);
  v14 = sub_100024A40(v13, v12);
  swift_release(v11);
  result = objc_msgSend(v9, "string");
  if (result)
  {
    v16 = result;
    v93 = xmmword_1000882E0;
    v94 = 0;
    v95 = &_swiftEmptyArrayStorage;
    v17 = objc_msgSend((id)objc_opt_self(REMTTHashtag), "attributeName");
    v18 = objc_msgSend(v9, "length");
    v19 = swift_allocObject(&unk_1000A7840, 48, 7);
    *(_QWORD *)(v19 + 16) = &v93;
    *(_QWORD *)(v19 + 24) = v16;
    *(_QWORD *)(v19 + 32) = v14;
    *(_QWORD *)(v19 + 40) = 0;
    v20 = swift_allocObject(&unk_1000A7868, 32, 7);
    *(_QWORD *)(v20 + 16) = sub_1000096E0;
    *(_QWORD *)(v20 + 24) = v19;
    aBlock[4] = sub_100018A8C;
    v92 = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100009338;
    aBlock[3] = &unk_1000A7880;
    v21 = _Block_copy(aBlock);
    v22 = v92;
    v23 = v16;
    swift_retain(v14);
    swift_retain(v20);
    swift_release(v22);
    objc_msgSend(v9, "enumerateAttribute:inRange:options:usingBlock:", v17, 0, v18, 0, v21);

    _Block_release(v21);
    LOBYTE(v22) = swift_isEscapingClosureAtFileLocation(v20, "", 107, 27, 145, 1);
    swift_release(v20);
    if ((v22 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v24 = *((_QWORD *)&v93 + 1);
      v25 = v93;
      v26 = v94;
      v27 = v95;
      swift_release(v14);
      swift_release(v19);
      v29 = v89;
      v28 = v90;
      v30 = (void **)((char *)v90 + *(int *)(v89 + 28));
      v31 = *v30;
      v32 = *((_BYTE *)v30 + 8);
      v33 = swift_retain(*v30);
      v34 = sub_100024A40(v33, v32);
      swift_release(v31);
      v85 = Text.font(_:)(v34, v25, v24, v26, v27);
      v87 = v36;
      v88 = v35;
      v84 = v37;
      swift_release(v34);
      sub_10000729C(v25, v24, v26);
      swift_bridgeObjectRelease(v27);
      v38 = *(uint64_t *)((char *)v28 + *(int *)(v29 + 24));
      KeyPath = swift_getKeyPath(&unk_100089B68);
      v40 = static HierarchicalShapeStyle.primary.getter();
      v41 = *((unsigned __int8 *)v28 + *(int *)(v29 + 20));
      v86 = v38;
      if (v41 != 1)
      {
        v46 = 0;
        v47 = 0;
        v48 = 0;
        v49 = 0;
        v17 = v87;
        v20 = v85;
        v50 = v84;
        goto LABEL_9;
      }
      LODWORD(v89) = v40;
      v42 = v81;
      sub_100014444(v81);
      v43 = v82;
      v44 = v83;
      v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v82 + 48))(v42, 1, v83);
      v17 = v87;
      if (v45 == 1)
      {
        sub_100009578((uint64_t)v42, &qword_1000ACE10);
        v46 = 0;
        v47 = 0;
        v48 = 0;
        v49 = 0;
        v20 = v85;
        v50 = v84;
        v40 = v89;
LABEL_9:
        v74 = v50 & 1;
        v75 = v88;
        *(_QWORD *)a2 = v20;
        *(_QWORD *)(a2 + 8) = v75;
        *(_BYTE *)(a2 + 16) = v50 & 1;
        *(_QWORD *)(a2 + 24) = v17;
        *(_QWORD *)(a2 + 32) = KeyPath;
        *(_QWORD *)(a2 + 40) = v86;
        *(_BYTE *)(a2 + 48) = 0;
        *(_DWORD *)(a2 + 52) = v40;
        *(_QWORD *)(a2 + 56) = v46;
        *(_QWORD *)(a2 + 64) = v47;
        *(_QWORD *)(a2 + 72) = v48;
        *(_QWORD *)(a2 + 80) = v49;
        sub_100009520(v20, v75, v50 & 1);
        swift_bridgeObjectRetain(v17);
        swift_retain(KeyPath);
        sub_1000186EC(v46, v47, v48, v49);
        sub_10001871C(v46, v47, v48, v49);
        sub_10000729C(v20, v75, v74);
        swift_release(KeyPath);
        return (id)swift_bridgeObjectRelease(v17);
      }
      v78 = KeyPath;
      v51 = v80;
      (*(void (**)(_BYTE *, char *, uint64_t))(v43 + 32))(v80, v42, v44);
      v52 = v79;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v43 + 16))(v79, v51, v44);
      v53 = Text.init(_:)(v52);
      v55 = v54;
      v57 = v56;
      v59 = v58 & 1;
      v19 = *v30;
      v60 = *((_BYTE *)v30 + 8);
      v61 = swift_retain(*v30);
      v62 = sub_100024A40(v61, v60);
      swift_release(v19);
      v81 = (char *)Text.font(_:)(v62, v53, v55, v59, v57);
      v79 = v63;
      LOBYTE(v19) = v64;
      v90 = v65;
      swift_release(v62);
      sub_10000729C(v53, v55, v59);
      swift_bridgeObjectRelease(v57);
      v20 = v85;
      if (qword_1000AC930 == -1)
      {
LABEL_8:
        v66 = qword_1000B9E70;
        v67 = swift_retain(qword_1000B9E70);
        v68 = v19 & 1;
        v69 = v81;
        v70 = (uint64_t)v79;
        v46 = Text.foregroundColor(_:)(v67, v81, v79, v68, v90);
        v47 = v71;
        v77 = v72;
        v49 = v73;
        swift_release(v66);
        v48 = v77 & 1;
        sub_10000729C((uint64_t)v69, v70, v68);
        swift_bridgeObjectRelease(v90);
        (*(void (**)(_BYTE *, uint64_t))(v82 + 8))(v80, v83);
        v50 = v84;
        v40 = v89;
        KeyPath = v78;
        goto LABEL_9;
      }
    }
    swift_once(&qword_1000AC930, sub_10005FEF4);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_100014444@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v16;

  v3 = sub_100006DA4(&qword_1000ACE10);
  __chkstk_darwin(v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AttributedString(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  sub_100009434(v1 + *(int *)(v10 + 24), (uint64_t)v5, &qword_1000ACE10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100009578((uint64_t)v5, &qword_1000ACE10);
    v11 = *(_QWORD *)(v1 + *(int *)(v10 + 36));
    if (v11 < 1)
    {
      v14 = 1;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, v14, 1, v6);
    }
    v12 = sub_100010578(v11);
    AttributedString.init(stringLiteral:)(v12);
  }
  else
  {
    v13 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v13(v9, v5, v6);
    v13(a1, v9, v6);
  }
  v14 = 0;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, v14, 1, v6);
}

uint64_t sub_1000145A0()
{
  return sub_100014818((uint64_t (*)(void))sub_100017888, (uint64_t)&_s46AnyListComplicationReminderWithSubtasksFontKeyON);
}

uint64_t sub_1000145B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void **v2;
  uint64_t v4;

  *(_QWORD *)a2 = static VerticalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v4 = sub_100006DA4(&qword_1000AD6B8);
  return sub_1000137C0(v2, a2 + *(int *)(v4 + 44));
}

uint64_t sub_10001460C@<X0>(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t result;

  if (*v1)
    v3 = 0xD000000000000017;
  else
    v3 = 0x656C63726963;
  if (*v1)
    v4 = 0x800000010008F9F0;
  else
    v4 = 0xE600000000000000;
  v5 = Image.init(systemName:)(v3, v4);
  v6 = static Font.body.getter();
  KeyPath = swift_getKeyPath(&unk_100089C78);
  v8 = static Color.secondary.getter();
  result = swift_getKeyPath(&unk_100089D38);
  *a1 = v5;
  a1[1] = KeyPath;
  a1[2] = v6;
  a1[3] = result;
  a1[4] = v8;
  return result;
}

uint64_t sub_1000146B0(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;

  v7 = TTRRemindersListViewModel.EmptyListMessagingType.localizedTitle(withTextFormat:)(1, a1);
  if (!v8)
    v7 = static TTRLocalizableStrings.RemindersList.noReminders.getter(v7);
  v9 = v7;
  v10 = v8;
  v11 = swift_retain(a2);
  v12 = sub_100024A40(v11, a3 & 1);
  swift_release(a2);
  v13 = Text.font(_:)(v12, v9, v10, 0, &_swiftEmptyArrayStorage);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  swift_bridgeObjectRelease(v10);
  swift_release(v12);
  LOBYTE(v10) = v17 & 1;
  v20 = Text.foregroundColor(_:)(a4, v13, v15, v17 & 1, v19);
  v22 = v21;
  v24 = v23;
  v26 = v25 & 1;
  sub_10000729C(v13, v15, v10);
  swift_bridgeObjectRelease(v19);
  View.lineLimit(_:reservesSpace:)(2, 1, &type metadata for Text, &protocol witness table for Text);
  sub_10000729C(v20, v22, v26);
  return swift_bridgeObjectRelease(v24);
}

uint64_t sub_100014804()
{
  return sub_100014818((uint64_t (*)(void))sub_100016058, (uint64_t)&_s36AnyListComplicationNoReminderFontKeyON);
}

uint64_t sub_100014818(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;

  v3 = a1();
  EnvironmentValues.subscript.getter(&v5, a2, a2, v3);
  return v5;
}

uint64_t sub_100014858(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t a6)
{
  uint64_t v7;
  uint64_t v9;

  v9 = *a1;
  v7 = a5();
  swift_retain(v9);
  return EnvironmentValues.subscript.setter(&v9, a6, a6, v7);
}

uint64_t sub_1000148B4()
{
  unsigned __int8 *v0;

  return sub_1000146B0(*v0, *((_QWORD *)v0 + 1), v0[16], *((_QWORD *)v0 + 3));
}

uint64_t sub_1000148D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000072AC(v1, a1, type metadata accessor for TTRNewWidgetViewModel);
}

uint64_t sub_1000148F4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void **v11;
  int *v12;
  uint64_t v13;
  unsigned int (*v14)(void **, uint64_t, int *);
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void (*v31)(void **, _QWORD, uint64_t, int *);
  id v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  char *v62;
  void (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void **__dst;
  void *__dsta;

  v4 = type metadata accessor for TTRNewWidgetViewModel(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v16);
  }
  else
  {
    v6 = (int *)v4;
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    v8 = a2[4];
    *(_QWORD *)(a1 + 32) = v8;
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v9 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v9;
    v10 = *(int *)(v4 + 36);
    __dst = (void **)(a1 + v10);
    v11 = (void **)((char *)a2 + v10);
    v12 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    v13 = *((_QWORD *)v12 - 1);
    v14 = *(unsigned int (**)(void **, uint64_t, int *))(v13 + 48);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    if (v14(v11, 1, v12))
    {
      v15 = sub_100006DA4(&qword_1000ACCD8);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v18 = *v11;
      v17 = v11[1];
      *__dst = *v11;
      __dst[1] = v17;
      v19 = v12[6];
      v62 = (char *)__dst + v19;
      v65 = (char *)v11 + v19;
      v20 = type metadata accessor for AttributedString(0);
      v61 = *(_QWORD *)(v20 - 8);
      v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
      v22 = v18;
      v23 = v17;
      if (v21(v65, 1, v20))
      {
        v24 = sub_100006DA4(&qword_1000ACE10);
        memcpy(v62, v65, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v62, v65, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v62, 0, 1, v20);
      }
      v25 = v12[7];
      v26 = (char *)__dst + v25;
      v27 = (char *)v11 + v25;
      v28 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      v29 = v12[8];
      v30 = *(void **)((char *)v11 + v29);
      *(void **)((char *)__dst + v29) = v30;
      *(void **)((char *)__dst + v12[9]) = *(void **)((char *)v11 + v12[9]);
      *((_BYTE *)__dst + v12[10]) = *((_BYTE *)v11 + v12[10]);
      *((_BYTE *)__dst + v12[11]) = *((_BYTE *)v11 + v12[11]);
      v31 = *(void (**)(void **, _QWORD, uint64_t, int *))(v13 + 56);
      v32 = v30;
      v31(__dst, 0, 1, v12);
    }
    v33 = v6[10];
    __dsta = *(void **)((char *)a2 + v33);
    *(_QWORD *)(a1 + v33) = __dsta;
    v34 = v6[11];
    v35 = (_QWORD *)(a1 + v34);
    v36 = (uint64_t *)((char *)a2 + v34);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = v6[12];
    v39 = *(void **)((char *)a2 + v38);
    *(_QWORD *)(a1 + v38) = v39;
    v40 = v6[13];
    v41 = (_QWORD *)(a1 + v40);
    v42 = (uint64_t *)((char *)a2 + v40);
    v43 = v42[1];
    *v41 = *v42;
    v41[1] = v43;
    v44 = v6[14];
    v45 = (_QWORD *)(a1 + v44);
    v46 = (uint64_t *)((char *)a2 + v44);
    v47 = v46[1];
    *v45 = *v46;
    v45[1] = v47;
    *(_BYTE *)(a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
    v48 = v6[16];
    v49 = (_QWORD *)(a1 + v48);
    v50 = (uint64_t *)((char *)a2 + v48);
    v51 = v50[1];
    *v49 = *v50;
    v49[1] = v51;
    v52 = v6[17];
    v53 = *(uint64_t *)((char *)a2 + v52);
    *(_QWORD *)(a1 + v52) = v53;
    v54 = v6[18];
    v64 = (uint64_t)a2 + v54;
    v66 = a1 + v54;
    v55 = type metadata accessor for URL(0);
    v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
    v56 = __dsta;
    swift_bridgeObjectRetain(v37);
    v57 = v39;
    swift_bridgeObjectRetain(v43);
    swift_bridgeObjectRetain(v47);
    swift_bridgeObjectRetain(v51);
    swift_bridgeObjectRetain(v53);
    v63(v66, v64, v55);
    v58 = v6[19];
    v59 = *(uint64_t *)((char *)a2 + v58);
    *(_QWORD *)(a1 + v58) = v59;
    *(_BYTE *)(a1 + v6[20]) = *((_BYTE *)a2 + v6[20]);
    swift_bridgeObjectRetain(v59);
  }
  return a1;
}

uint64_t sub_100014C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void **v9;
  int *v10;
  uint64_t v11;
  unsigned int (*v12)(void **, uint64_t, int *);
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void (*v28)(void **, _QWORD, uint64_t, int *);
  id v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  char *v59;
  void (*v60)(uint64_t, void *, uint64_t);
  char *v61;
  void *v62;
  uint64_t v63;
  void **__dst;
  void *__dsta;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v8 = v7[9];
  __dst = (void **)(a1 + v8);
  v9 = (void **)(a2 + v8);
  v10 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(unsigned int (**)(void **, uint64_t, int *))(v11 + 48);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  if (v12(v9, 1, v10))
  {
    v13 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(__dst, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v15 = *v9;
    v14 = v9[1];
    *__dst = *v9;
    __dst[1] = v14;
    v16 = v10[6];
    v59 = (char *)v9 + v16;
    v61 = (char *)__dst + v16;
    v17 = type metadata accessor for AttributedString(0);
    v58 = *(_QWORD *)(v17 - 8);
    v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48);
    v19 = v15;
    v20 = v14;
    if (v18(v59, 1, v17))
    {
      v21 = sub_100006DA4(&qword_1000ACE10);
      memcpy(v61, v59, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v61, v59, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v61, 0, 1, v17);
    }
    v22 = v10[7];
    v23 = (char *)__dst + v22;
    v24 = (char *)v9 + v22;
    v25 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    v26 = v10[8];
    v27 = *(void **)((char *)v9 + v26);
    *(void **)((char *)__dst + v26) = v27;
    *(void **)((char *)__dst + v10[9]) = *(void **)((char *)v9 + v10[9]);
    *((_BYTE *)__dst + v10[10]) = *((_BYTE *)v9 + v10[10]);
    *((_BYTE *)__dst + v10[11]) = *((_BYTE *)v9 + v10[11]);
    v28 = *(void (**)(void **, _QWORD, uint64_t, int *))(v11 + 56);
    v29 = v27;
    v28(__dst, 0, 1, v10);
  }
  v30 = v7[10];
  __dsta = *(void **)(a2 + v30);
  *(_QWORD *)(a1 + v30) = __dsta;
  v31 = v7[11];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  v35 = v7[12];
  v36 = *(void **)(a2 + v35);
  *(_QWORD *)(a1 + v35) = v36;
  v37 = v7[13];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (_QWORD *)(a2 + v37);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  v41 = v7[14];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (_QWORD *)(a2 + v41);
  v44 = v43[1];
  *v42 = *v43;
  v42[1] = v44;
  *(_BYTE *)(a1 + v7[15]) = *(_BYTE *)(a2 + v7[15]);
  v45 = v7[16];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (_QWORD *)(a2 + v45);
  v48 = v47[1];
  *v46 = *v47;
  v46[1] = v48;
  v49 = v7[17];
  v50 = *(_QWORD *)(a2 + v49);
  *(_QWORD *)(a1 + v49) = v50;
  v51 = v7[18];
  v62 = (void *)(a2 + v51);
  v63 = a1 + v51;
  v52 = type metadata accessor for URL(0);
  v60 = *(void (**)(uint64_t, void *, uint64_t))(*(_QWORD *)(v52 - 8) + 16);
  v53 = __dsta;
  swift_bridgeObjectRetain(v34);
  v54 = v36;
  swift_bridgeObjectRetain(v40);
  swift_bridgeObjectRetain(v44);
  swift_bridgeObjectRetain(v48);
  swift_bridgeObjectRetain(v50);
  v60(v63, v62, v52);
  v55 = v7[19];
  v56 = *(_QWORD *)(a2 + v55);
  *(_QWORD *)(a1 + v55) = v56;
  *(_BYTE *)(a1 + v7[20]) = *(_BYTE *)(a2 + v7[20]);
  swift_bridgeObjectRetain(v56);
  return a1;
}

uint64_t sub_100014F78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  int *v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD *, uint64_t, int *);
  int v17;
  int v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  int v38;
  size_t v39;
  void *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void (*v47)(_QWORD *, _QWORD, uint64_t, int *);
  id v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  id v56;
  uint64_t v57;
  void *v58;
  void *v59;
  id v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  id v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  unsigned int (*__src)(char *, uint64_t, uint64_t);
  char *__dst;
  void *__dsta;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v11 = v10[9];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v15 = *((_QWORD *)v14 - 1);
  v16 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (v18)
    {
      sub_100007EB4((uint64_t)v12, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    v27 = (void *)*v13;
    v28 = (void *)*v12;
    *v12 = *v13;
    v29 = v27;

    v30 = (void *)v12[1];
    v31 = (void *)v13[1];
    v12[1] = v31;
    v32 = v31;

    v33 = v14[6];
    v34 = (char *)v12 + v33;
    v35 = (char *)v13 + v33;
    v36 = type metadata accessor for AttributedString(0);
    v98 = *(_QWORD *)(v36 - 8);
    v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v98 + 48);
    __dsta = v34;
    LODWORD(v34) = v37(v34, 1, v36);
    v38 = v37(v35, 1, v36);
    if ((_DWORD)v34)
    {
      if (!v38)
      {
        (*(void (**)(void *, char *, uint64_t))(v98 + 16))(__dsta, v35, v36);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v98 + 56))(__dsta, 0, 1, v36);
        goto LABEL_18;
      }
      v39 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v40 = __dsta;
    }
    else
    {
      if (!v38)
      {
        (*(void (**)(void *, char *, uint64_t))(v98 + 24))(__dsta, v35, v36);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v98 + 8))(__dsta, v36);
      v39 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v40 = __dsta;
    }
    memcpy(v40, v35, v39);
LABEL_18:
    v49 = v14[7];
    v50 = (char *)v12 + v49;
    v51 = (char *)v13 + v49;
    v52 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 24))(v50, v51, v52);
    v53 = v14[8];
    v54 = *(void **)((char *)v12 + v53);
    v55 = *(void **)((char *)v13 + v53);
    *(_QWORD *)((char *)v12 + v53) = v55;
    v56 = v55;

    *(_QWORD *)((char *)v12 + v14[9]) = *(_QWORD *)((char *)v13 + v14[9]);
    *((_BYTE *)v12 + v14[10]) = *((_BYTE *)v13 + v14[10]);
    *((_BYTE *)v12 + v14[11]) = *((_BYTE *)v13 + v14[11]);
    goto LABEL_19;
  }
  if (v18)
  {
LABEL_7:
    v26 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  v19 = (void *)*v13;
  *v12 = *v13;
  v20 = (void *)v13[1];
  v12[1] = v20;
  v21 = v14[6];
  __dst = (char *)v12 + v21;
  v97 = (char *)v13 + v21;
  v22 = type metadata accessor for AttributedString(0);
  v96 = *(_QWORD *)(v22 - 8);
  __src = *(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48);
  v23 = v19;
  v24 = v20;
  if (__src(v97, 1, v22))
  {
    v25 = sub_100006DA4(&qword_1000ACE10);
    memcpy(__dst, v97, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v96 + 16))(__dst, v97, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(__dst, 0, 1, v22);
  }
  v41 = v14[7];
  v42 = (char *)v12 + v41;
  v43 = (char *)v13 + v41;
  v44 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
  v45 = v14[8];
  v46 = *(void **)((char *)v13 + v45);
  *(_QWORD *)((char *)v12 + v45) = v46;
  *(_QWORD *)((char *)v12 + v14[9]) = *(_QWORD *)((char *)v13 + v14[9]);
  *((_BYTE *)v12 + v14[10]) = *((_BYTE *)v13 + v14[10]);
  *((_BYTE *)v12 + v14[11]) = *((_BYTE *)v13 + v14[11]);
  v47 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v15 + 56);
  v48 = v46;
  v47(v12, 0, 1, v14);
LABEL_19:
  v57 = v10[10];
  v58 = *(void **)(a2 + v57);
  v59 = *(void **)(a1 + v57);
  *(_QWORD *)(a1 + v57) = v58;
  v60 = v58;

  v61 = v10[11];
  v62 = (_QWORD *)(a1 + v61);
  v63 = (_QWORD *)(a2 + v61);
  *v62 = *v63;
  v64 = v63[1];
  v65 = v62[1];
  v62[1] = v64;
  swift_bridgeObjectRetain(v64);
  swift_bridgeObjectRelease(v65);
  v66 = v10[12];
  v67 = *(void **)(a1 + v66);
  v68 = *(void **)(a2 + v66);
  *(_QWORD *)(a1 + v66) = v68;
  v69 = v68;

  v70 = v10[13];
  v71 = (_QWORD *)(a1 + v70);
  v72 = (_QWORD *)(a2 + v70);
  *v71 = *v72;
  v73 = v72[1];
  v74 = v71[1];
  v71[1] = v73;
  swift_bridgeObjectRetain(v73);
  swift_bridgeObjectRelease(v74);
  v75 = v10[14];
  v76 = (_QWORD *)(a1 + v75);
  v77 = (_QWORD *)(a2 + v75);
  *v76 = *v77;
  v78 = v77[1];
  v79 = v76[1];
  v76[1] = v78;
  swift_bridgeObjectRetain(v78);
  swift_bridgeObjectRelease(v79);
  *(_BYTE *)(a1 + v10[15]) = *(_BYTE *)(a2 + v10[15]);
  v80 = v10[16];
  v81 = (_QWORD *)(a1 + v80);
  v82 = (_QWORD *)(a2 + v80);
  *v81 = *v82;
  v83 = v82[1];
  v84 = v81[1];
  v81[1] = v83;
  swift_bridgeObjectRetain(v83);
  swift_bridgeObjectRelease(v84);
  v85 = v10[17];
  v86 = *(_QWORD *)(a1 + v85);
  v87 = *(_QWORD *)(a2 + v85);
  *(_QWORD *)(a1 + v85) = v87;
  swift_bridgeObjectRetain(v87);
  swift_bridgeObjectRelease(v86);
  v88 = v10[18];
  v89 = a1 + v88;
  v90 = a2 + v88;
  v91 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 24))(v89, v90, v91);
  v92 = v10[19];
  v93 = *(_QWORD *)(a2 + v92);
  v94 = *(_QWORD *)(a1 + v92);
  *(_QWORD *)(a1 + v92) = v93;
  swift_bridgeObjectRetain(v93);
  swift_bridgeObjectRelease(v94);
  *(_BYTE *)(a1 + v10[20]) = *(_BYTE *)(a2 + v10[20]);
  return a1;
}

uint64_t sub_1000154E0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *__dst;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v4 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v5 = v4[9];
  v6 = (_OWORD *)(a1 + v5);
  v7 = (_OWORD *)(a2 + v5);
  v8 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v9 = *((_QWORD *)v8 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v9 + 48))(v7, 1, v8))
  {
    v10 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v6 = *v7;
    v11 = v8[6];
    __dst = (char *)v6 + v11;
    v12 = (char *)v7 + v11;
    v13 = type metadata accessor for AttributedString(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100006DA4(&qword_1000ACE10);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(__dst, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    v16 = v8[7];
    v17 = (char *)v6 + v16;
    v18 = (char *)v7 + v16;
    v19 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    *(_QWORD *)((char *)v6 + v8[8]) = *(_QWORD *)((char *)v7 + v8[8]);
    *(_QWORD *)((char *)v6 + v8[9]) = *(_QWORD *)((char *)v7 + v8[9]);
    *((_BYTE *)v6 + v8[10]) = *((_BYTE *)v7 + v8[10]);
    *((_BYTE *)v6 + v8[11]) = *((_BYTE *)v7 + v8[11]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v9 + 56))(v6, 0, 1, v8);
  }
  *(_QWORD *)(a1 + v4[10]) = *(_QWORD *)(a2 + v4[10]);
  *(_OWORD *)(a1 + v4[11]) = *(_OWORD *)(a2 + v4[11]);
  *(_QWORD *)(a1 + v4[12]) = *(_QWORD *)(a2 + v4[12]);
  *(_OWORD *)(a1 + v4[13]) = *(_OWORD *)(a2 + v4[13]);
  *(_OWORD *)(a1 + v4[14]) = *(_OWORD *)(a2 + v4[14]);
  *(_BYTE *)(a1 + v4[15]) = *(_BYTE *)(a2 + v4[15]);
  *(_OWORD *)(a1 + v4[16]) = *(_OWORD *)(a2 + v4[16]);
  *(_QWORD *)(a1 + v4[17]) = *(_QWORD *)(a2 + v4[17]);
  v20 = v4[18];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  *(_QWORD *)(a1 + v4[19]) = *(_QWORD *)(a2 + v4[19]);
  *(_BYTE *)(a1 + v4[20]) = *(_BYTE *)(a2 + v4[20]);
  return a1;
}

uint64_t sub_100015760(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  int *v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD *, uint64_t, int *);
  int v16;
  int v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  size_t v32;
  void *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  char *__dst;
  void *__dsta;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v6);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease(v8);
  v9 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v10 = v9[9];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v14 = *((_QWORD *)v13 - 1);
  v15 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (v17)
    {
      sub_100007EB4((uint64_t)v11, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    v24 = (void *)*v11;
    *v11 = *v12;

    v25 = (void *)v11[1];
    v11[1] = v12[1];

    v26 = v13[6];
    v27 = (char *)v11 + v26;
    v28 = (char *)v12 + v26;
    v29 = type metadata accessor for AttributedString(0);
    v81 = *(_QWORD *)(v29 - 8);
    v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v81 + 48);
    __dsta = v27;
    LODWORD(v27) = v30(v27, 1, v29);
    v31 = v30(v28, 1, v29);
    if ((_DWORD)v27)
    {
      if (!v31)
      {
        (*(void (**)(void *, char *, uint64_t))(v81 + 32))(__dsta, v28, v29);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v81 + 56))(__dsta, 0, 1, v29);
        goto LABEL_18;
      }
      v32 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v33 = __dsta;
    }
    else
    {
      if (!v31)
      {
        (*(void (**)(void *, char *, uint64_t))(v81 + 40))(__dsta, v28, v29);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v81 + 8))(__dsta, v29);
      v32 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v33 = __dsta;
    }
    memcpy(v33, v28, v32);
LABEL_18:
    v38 = v13[7];
    v39 = (char *)v11 + v38;
    v40 = (char *)v12 + v38;
    v41 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 40))(v39, v40, v41);
    v42 = v13[8];
    v43 = *(void **)((char *)v11 + v42);
    *(_QWORD *)((char *)v11 + v42) = *(_QWORD *)((char *)v12 + v42);

    *(_QWORD *)((char *)v11 + v13[9]) = *(_QWORD *)((char *)v12 + v13[9]);
    *((_BYTE *)v11 + v13[10]) = *((_BYTE *)v12 + v13[10]);
    *((_BYTE *)v11 + v13[11]) = *((_BYTE *)v12 + v13[11]);
    goto LABEL_19;
  }
  if (v17)
  {
LABEL_7:
    v23 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  *(_OWORD *)v11 = *(_OWORD *)v12;
  v18 = v13[6];
  __dst = (char *)v11 + v18;
  v19 = (char *)v12 + v18;
  v20 = type metadata accessor for AttributedString(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = sub_100006DA4(&qword_1000ACE10);
    memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(__dst, v19, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
  }
  v34 = v13[7];
  v35 = (char *)v11 + v34;
  v36 = (char *)v12 + v34;
  v37 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
  *(_QWORD *)((char *)v11 + v13[8]) = *(_QWORD *)((char *)v12 + v13[8]);
  *(_QWORD *)((char *)v11 + v13[9]) = *(_QWORD *)((char *)v12 + v13[9]);
  *((_BYTE *)v11 + v13[10]) = *((_BYTE *)v12 + v13[10]);
  *((_BYTE *)v11 + v13[11]) = *((_BYTE *)v12 + v13[11]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
LABEL_19:
  v44 = v9[10];
  v45 = *(void **)(a1 + v44);
  *(_QWORD *)(a1 + v44) = *(_QWORD *)(a2 + v44);

  v46 = v9[11];
  v47 = (_QWORD *)(a1 + v46);
  v48 = (uint64_t *)(a2 + v46);
  v50 = *v48;
  v49 = v48[1];
  v51 = v47[1];
  *v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease(v51);
  v52 = v9[12];
  v53 = *(void **)(a1 + v52);
  *(_QWORD *)(a1 + v52) = *(_QWORD *)(a2 + v52);

  v54 = v9[13];
  v55 = (_QWORD *)(a1 + v54);
  v56 = (uint64_t *)(a2 + v54);
  v58 = *v56;
  v57 = v56[1];
  v59 = v55[1];
  *v55 = v58;
  v55[1] = v57;
  swift_bridgeObjectRelease(v59);
  v60 = v9[14];
  v61 = (_QWORD *)(a1 + v60);
  v62 = (uint64_t *)(a2 + v60);
  v64 = *v62;
  v63 = v62[1];
  v65 = v61[1];
  *v61 = v64;
  v61[1] = v63;
  swift_bridgeObjectRelease(v65);
  *(_BYTE *)(a1 + v9[15]) = *(_BYTE *)(a2 + v9[15]);
  v66 = v9[16];
  v67 = (_QWORD *)(a1 + v66);
  v68 = (uint64_t *)(a2 + v66);
  v70 = *v68;
  v69 = v68[1];
  v71 = v67[1];
  *v67 = v70;
  v67[1] = v69;
  swift_bridgeObjectRelease(v71);
  v72 = v9[17];
  v73 = *(_QWORD *)(a1 + v72);
  *(_QWORD *)(a1 + v72) = *(_QWORD *)(a2 + v72);
  swift_bridgeObjectRelease(v73);
  v74 = v9[18];
  v75 = a1 + v74;
  v76 = a2 + v74;
  v77 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 40))(v75, v76, v77);
  v78 = v9[19];
  v79 = *(_QWORD *)(a1 + v78);
  *(_QWORD *)(a1 + v78) = *(_QWORD *)(a2 + v78);
  swift_bridgeObjectRelease(v79);
  *(_BYTE *)(a1 + v9[20]) = *(_BYTE *)(a2 + v9[20]);
  return a1;
}

uint64_t sub_100015C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100015C14);
}

uint64_t sub_100015C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRNewWidgetViewModel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100015C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100015C60);
}

uint64_t sub_100015C64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRNewWidgetViewModel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveRemindersView(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000AD420, (uint64_t)&nominal type descriptor for TTRIAnyListComplicationWidgetView.InteractiveRemindersView);
}

uint64_t sub_100015CB8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for TTRNewWidgetViewModel(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100015D20()
{
  return sub_100007218(&qword_1000AD458, type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveRemindersView, (uint64_t)&unk_10008977C);
}

uint64_t sub_100015D4C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10009274C, 1);
}

uint64_t type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveReminderView(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000AD558, (uint64_t)&nominal type descriptor for TTRIAnyListComplicationWidgetView.InteractiveReminderView);
}

_QWORD *sub_100015D70@<X0>(_QWORD *a1@<X8>)
{
  return sub_100017810((uint64_t (*)(void))sub_1000160E0, (uint64_t)&_s34AnyListComplicationReminderFontKeyON, a1);
}

uint64_t sub_100015D84(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100014858(a1, a2, a3, a4, (uint64_t (*)(void))sub_1000160E0, (uint64_t)&_s34AnyListComplicationReminderFontKeyON);
}

_QWORD *sub_100015DA8@<X0>(_QWORD *a1@<X8>)
{
  return sub_100017810((uint64_t (*)(void))sub_10001609C, (uint64_t)&_s33AnyListComplicationHashtagFontKeyON, a1);
}

uint64_t sub_100015DBC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100014858(a1, a2, a3, a4, (uint64_t (*)(void))sub_10001609C, (uint64_t)&_s33AnyListComplicationHashtagFontKeyON);
}

unint64_t sub_100015DE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AD4B0;
  if (!qword_1000AD4B0)
  {
    v1 = sub_100007258(&qword_1000AD498);
    sub_100007218(&qword_1000AD4B8, type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveReminderView, (uint64_t)&unk_100089B18);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AD4B0);
  }
  return result;
}

unint64_t sub_100015E64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AD4C0;
  if (!qword_1000AD4C0)
  {
    v1 = sub_100007258(&qword_1000AD490);
    sub_1000095B4(&qword_1000AD4A8, &qword_1000AD488, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    sub_100015DE0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AD4C0);
  }
  return result;
}

unint64_t sub_100015EE8()
{
  unint64_t result;

  result = qword_1000AD4C8;
  if (!qword_1000AD4C8)
  {
    result = swift_getWitnessTable(&unk_100089AC8, &type metadata for TTRIAnyListComplicationWidgetView.NoReminderView);
    atomic_store(result, (unint64_t *)&qword_1000AD4C8);
  }
  return result;
}

uint64_t sub_100015F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a2)
  {
    swift_retain(a3);
    swift_retain(a5);
    return swift_bridgeObjectRetain(a2);
  }
  return result;
}

uint64_t sub_100015F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_release(a5);
    return swift_release(a3);
  }
  return result;
}

_QWORD *sub_100015FA4@<X0>(_QWORD *a1@<X8>)
{
  return sub_100017810((uint64_t (*)(void))sub_100016058, (uint64_t)&_s36AnyListComplicationNoReminderFontKeyON, a1);
}

uint64_t sub_100015FB8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100014858(a1, a2, a3, a4, (uint64_t (*)(void))sub_100016058, (uint64_t)&_s36AnyListComplicationNoReminderFontKeyON);
}

_QWORD *sub_100015FDC@<X0>(_QWORD *a1@<X8>)
{
  return sub_100017810((uint64_t (*)(void))sub_100016014, (uint64_t)&_s34AnyListComplicationListNameFontKeyON, a1);
}

uint64_t sub_100015FF0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100014858(a1, a2, a3, a4, (uint64_t (*)(void))sub_100016014, (uint64_t)&_s34AnyListComplicationListNameFontKeyON);
}

unint64_t sub_100016014()
{
  unint64_t result;

  result = qword_1000AD4E0;
  if (!qword_1000AD4E0)
  {
    result = swift_getWitnessTable(&unk_100089A90, &_s34AnyListComplicationListNameFontKeyON);
    atomic_store(result, (unint64_t *)&qword_1000AD4E0);
  }
  return result;
}

unint64_t sub_100016058()
{
  unint64_t result;

  result = qword_1000AD4E8;
  if (!qword_1000AD4E8)
  {
    result = swift_getWitnessTable(&unk_100089A58, &_s36AnyListComplicationNoReminderFontKeyON);
    atomic_store(result, (unint64_t *)&qword_1000AD4E8);
  }
  return result;
}

unint64_t sub_10001609C()
{
  unint64_t result;

  result = qword_1000AD4F0;
  if (!qword_1000AD4F0)
  {
    result = swift_getWitnessTable(&unk_100089A20, &_s33AnyListComplicationHashtagFontKeyON);
    atomic_store(result, (unint64_t *)&qword_1000AD4F0);
  }
  return result;
}

unint64_t sub_1000160E0()
{
  unint64_t result;

  result = qword_1000AD4F8;
  if (!qword_1000AD4F8)
  {
    result = swift_getWitnessTable(&unk_1000899E8, &_s34AnyListComplicationReminderFontKeyON);
    atomic_store(result, (unint64_t *)&qword_1000AD4F8);
  }
  return result;
}

ValueMetadata *_s34AnyListComplicationReminderFontKeyOMa()
{
  return &_s34AnyListComplicationReminderFontKeyON;
}

ValueMetadata *_s33AnyListComplicationHashtagFontKeyOMa()
{
  return &_s33AnyListComplicationHashtagFontKeyON;
}

ValueMetadata *_s36AnyListComplicationNoReminderFontKeyOMa()
{
  return &_s36AnyListComplicationNoReminderFontKeyON;
}

ValueMetadata *_s34AnyListComplicationListNameFontKeyOMa()
{
  return &_s34AnyListComplicationListNameFontKeyON;
}

uint64_t initializeBufferWithCopyOfBuffer for TTRNewWidgetPresenter.ShareeInfoStyle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

uint64_t destroy for TTRIAnyListComplicationWidgetView.NoReminderView(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  return swift_release(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for TTRIAnyListComplicationWidgetView.NoReminderView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  swift_retain(v3);
  swift_retain(v5);
  return a1;
}

uint64_t assignWithCopy for TTRIAnyListComplicationWidgetView.NoReminderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  swift_retain(v4);
  swift_release(v6);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain(v7);
  swift_release(v8);
  return a1;
}

__n128 initializeWithTake for TTRIAnyListComplicationWidgetView.NoReminderView(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for TTRIAnyListComplicationWidgetView.NoReminderView(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v4;
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIAnyListComplicationWidgetView.NoReminderView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIAnyListComplicationWidgetView.NoReminderView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIAnyListComplicationWidgetView.NoReminderView()
{
  return &type metadata for TTRIAnyListComplicationWidgetView.NoReminderView;
}

char *sub_10001636C(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char **v30;
  id v31;
  char *__dst;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    v7 = a1;
    v8 = a2[1];
    *((_QWORD *)a1 + 1) = v8;
    v9 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    v10 = v9[6];
    __dst = &v7[v10];
    v11 = (char *)a2 + v10;
    v12 = type metadata accessor for AttributedString(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    v15 = v4;
    v16 = v8;
    if (v14(v11, 1, v12))
    {
      v17 = sub_100006DA4(&qword_1000ACE10);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    v18 = v9[7];
    v19 = &v7[v18];
    v20 = (uint64_t)a2 + v18;
    v21 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v22 = v9[8];
    v23 = *(char **)((char *)a2 + v22);
    *(_QWORD *)&v7[v22] = v23;
    *(_QWORD *)&v7[v9[9]] = *(char **)((char *)a2 + v9[9]);
    v7[v9[10]] = *((_BYTE *)a2 + v9[10]);
    v7[v9[11]] = *((_BYTE *)a2 + v9[11]);
    v24 = a3[6];
    v7[a3[5]] = *((_BYTE *)a2 + a3[5]);
    v25 = &v7[v24];
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = *v26;
    LOBYTE(v26) = *((_BYTE *)v26 + 8);
    *(_QWORD *)v25 = v27;
    v25[8] = (char)v26;
    v28 = a3[7];
    v29 = &v7[v28];
    v30 = (char **)((char *)a2 + v28);
    v4 = *v30;
    LOBYTE(v30) = *((_BYTE *)v30 + 8);
    *(_QWORD *)v29 = v4;
    v29[8] = (char)v30;
    v31 = v23;
    swift_retain(v27);
  }
  swift_retain(v4);
  return v7;
}

uint64_t sub_10001653C(id *a1, uint64_t a2)
{
  int *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v4 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v5 = (char *)a1 + v4[6];
  v6 = type metadata accessor for AttributedString(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  v8 = (char *)a1 + v4[7];
  v9 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);

  swift_release(*(id *)((char *)a1 + *(int *)(a2 + 24)));
  return swift_release(*(id *)((char *)a1 + *(int *)(a2 + 28)));
}

_QWORD *sub_10001660C(_QWORD *a1, uint64_t a2, int *a3)
{
  void *v5;
  void *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t *v29;
  uint64_t v30;
  id v31;

  v5 = *(void **)a2;
  v6 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (const void *)(a2 + v8);
  v11 = type metadata accessor for AttributedString(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v5;
  v15 = v6;
  if (v13(v10, 1, v11))
  {
    v16 = sub_100006DA4(&qword_1000ACE10);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v17 = v7[7];
  v18 = (char *)a1 + v17;
  v19 = a2 + v17;
  v20 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  v21 = v7[8];
  v22 = *(void **)(a2 + v21);
  *(_QWORD *)((char *)a1 + v21) = v22;
  *(_QWORD *)((char *)a1 + v7[9]) = *(_QWORD *)(a2 + v7[9]);
  *((_BYTE *)a1 + v7[10]) = *(_BYTE *)(a2 + v7[10]);
  *((_BYTE *)a1 + v7[11]) = *(_BYTE *)(a2 + v7[11]);
  v23 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v24 = (char *)a1 + v23;
  v25 = (uint64_t *)(a2 + v23);
  v26 = *v25;
  LOBYTE(v25) = *((_BYTE *)v25 + 8);
  *(_QWORD *)v24 = v26;
  v24[8] = (char)v25;
  v27 = a3[7];
  v28 = (char *)a1 + v27;
  v29 = (uint64_t *)(a2 + v27);
  v30 = *v29;
  LOBYTE(v29) = *((_BYTE *)v29 + 8);
  *(_QWORD *)v28 = v30;
  v28[8] = (char)v29;
  v31 = v22;
  swift_retain(v26);
  swift_retain(v30);
  return a1;
}

uint64_t sub_1000167B0(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  int *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a1 + 8);
  v10 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v10;
  v11 = v10;

  v12 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v13 = v12[6];
  v14 = (void *)(a1 + v13);
  v15 = (void *)(a2 + v13);
  v16 = type metadata accessor for AttributedString(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v21 = sub_100006DA4(&qword_1000ACE10);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  v22 = v12[7];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  v26 = v12[8];
  v27 = *(void **)(a1 + v26);
  v28 = *(void **)(a2 + v26);
  *(_QWORD *)(a1 + v26) = v28;
  v29 = v28;

  *(_QWORD *)(a1 + v12[9]) = *(_QWORD *)(a2 + v12[9]);
  *(_BYTE *)(a1 + v12[10]) = *(_BYTE *)(a2 + v12[10]);
  *(_BYTE *)(a1 + v12[11]) = *(_BYTE *)(a2 + v12[11]);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v30 = a3[6];
  v31 = (uint64_t *)(a1 + v30);
  v32 = (uint64_t *)(a2 + v30);
  v33 = *v32;
  LOBYTE(v32) = *((_BYTE *)v32 + 8);
  v34 = *v31;
  *v31 = v33;
  *((_BYTE *)v31 + 8) = (_BYTE)v32;
  swift_retain(v33);
  swift_release(v34);
  v35 = a3[7];
  v36 = (uint64_t *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v38 = *v37;
  LOBYTE(v37) = *((_BYTE *)v37 + 8);
  v39 = *v36;
  *v36 = v38;
  *((_BYTE *)v36 + 8) = (_BYTE)v37;
  swift_retain(v38);
  swift_release(v39);
  return a1;
}

_OWORD *sub_1000169C0(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for AttributedString(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100006DA4(&qword_1000ACE10);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = v6[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
  *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)a2 + v6[9]);
  *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
  *((_BYTE *)a1 + v6[11]) = *((_BYTE *)a2 + v6[11]);
  v17 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v18[8] = v19[8];
  v20 = a3[7];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v21[8] = v22[8];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  return a1;
}

uint64_t sub_100016B34(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  int *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];

  v8 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v9 = v8[6];
  v10 = (void *)(a1 + v9);
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for AttributedString(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_100006DA4(&qword_1000ACE10);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v18 = v8[7];
  v19 = a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  v22 = v8[8];
  v23 = *(void **)(a1 + v22);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)((char *)a2 + v22);

  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)((char *)a2 + v8[9]);
  *(_BYTE *)(a1 + v8[10]) = *((_BYTE *)a2 + v8[10]);
  *(_BYTE *)(a1 + v8[11]) = *((_BYTE *)a2 + v8[11]);
  v24 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v25 = (uint64_t *)(a1 + v24);
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)v26;
  LOBYTE(v26) = v26[8];
  v28 = *v25;
  *v25 = v27;
  *((_BYTE *)v25 + 8) = (_BYTE)v26;
  swift_release(v28);
  v29 = a3[7];
  v30 = (uint64_t *)(a1 + v29);
  v31 = (char *)a2 + v29;
  v32 = *(_QWORD *)v31;
  LOBYTE(v31) = v31[8];
  v33 = *v30;
  *v30 = v32;
  *((_BYTE *)v30 + 8) = (_BYTE)v31;
  swift_release(v33);
  return a1;
}

uint64_t sub_100016D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100016D30);
}

uint64_t sub_100016D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100016D40);
}

uint64_t sub_100016D44(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for TTRNewWidgetViewModel.Reminder(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100089958;
    v4[2] = &unk_100089970;
    v4[3] = &unk_100089970;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t destroy for TTRIAnyListComplicationWidgetView.ListInfoView(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_release(a1[2]);
  return swift_release(a1[4]);
}

uint64_t initializeWithCopy for TTRIAnyListComplicationWidgetView.ListInfoView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRetain(v3);
  swift_retain(v4);
  swift_retain(v6);
  return a1;
}

uint64_t assignWithCopy for TTRIAnyListComplicationWidgetView.ListInfoView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  swift_retain(v6);
  swift_release(v8);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v9;
  swift_retain(v9);
  swift_release(v10);
  return a1;
}

__n128 initializeWithTake for TTRIAnyListComplicationWidgetView.ListInfoView(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TTRIAnyListComplicationWidgetView.ListInfoView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_BYTE *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v6;
  swift_release(v7);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release(v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIAnyListComplicationWidgetView.ListInfoView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIAnyListComplicationWidgetView.ListInfoView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIAnyListComplicationWidgetView.ListInfoView()
{
  return &type metadata for TTRIAnyListComplicationWidgetView.ListInfoView;
}

uint64_t sub_100016FE0()
{
  _QWORD v1[2];

  v1[0] = sub_100007258(&qword_1000AD460);
  v1[1] = sub_1000095B4(&qword_1000AD470, &qword_1000AD460, (uint64_t)&protocol conformance descriptor for VStack<A>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.widgetURL(_:)>>, 1);
}

uint64_t sub_100017044(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100092818, 1);
}

uint64_t sub_100017054()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v0 = sub_100006DA4(&qword_1000ACBD8);
  __chkstk_darwin(v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Font.TextStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for Font.TextStyle.headline(_:), v3);
  v7 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v2, 1, 1, v7);
  v8 = static Font.system(_:design:weight:)(v6, v2, 0, 1);
  sub_100009578((uint64_t)v2, &qword_1000ACBD8);
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  qword_1000AD308 = v8;
  return result;
}

uint64_t sub_100017170@<X0>(uint64_t *a1@<X8>)
{
  return sub_100017534(&qword_1000AC830, &qword_1000AD308, (uint64_t)sub_100017054, a1);
}

uint64_t sub_10001718C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;

  v8 = sub_1000178CC();
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_1000171DC(uint64_t a1)
{
  return sub_100017240(a1, &qword_1000AD310);
}

uint64_t sub_1000171E8@<X0>(uint64_t *a1@<X8>)
{
  return sub_100017534(&qword_1000AC838, &qword_1000AD310, (uint64_t)sub_1000171DC, a1);
}

uint64_t sub_100017204(uint64_t a1)
{
  return sub_1000173C0(a1, (double (*)(uint64_t))&static Font.Weight.semibold.getter, &qword_1000AD318);
}

uint64_t sub_100017218@<X0>(uint64_t *a1@<X8>)
{
  return sub_100017534(&qword_1000AC840, &qword_1000AD318, (uint64_t)sub_100017204, a1);
}

uint64_t sub_100017234(uint64_t a1)
{
  return sub_100017240(a1, &qword_1000AD320);
}

uint64_t sub_100017240(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v3 = sub_100006DA4(&qword_1000ACBD8);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Font.TextStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for Font.TextStyle.body(_:), v6);
  v10 = enum case for Font.Design.default(_:);
  v11 = type metadata accessor for Font.Design(0);
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 104))(v5, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v5, 0, 1, v11);
  v13 = static Font.system(_:design:weight:)(v9, v5, 0, 1);
  sub_100009578((uint64_t)v5, &qword_1000ACBD8);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *a2 = v13;
  return result;
}

uint64_t sub_100017390@<X0>(uint64_t *a1@<X8>)
{
  return sub_100017534(&qword_1000AC848, &qword_1000AD320, (uint64_t)sub_100017234, a1);
}

uint64_t sub_1000173AC(uint64_t a1)
{
  return sub_1000173C0(a1, (double (*)(uint64_t))&static Font.Weight.bold.getter, &qword_1000AD328);
}

uint64_t sub_1000173C0(uint64_t a1, double (*a2)(uint64_t), uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;

  v5 = sub_100006DA4(&qword_1000ACBD8);
  __chkstk_darwin(v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Font.TextStyle(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for Font.TextStyle.body(_:), v8);
  v12 = enum case for Font.Design.default(_:);
  v13 = type metadata accessor for Font.Design(0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 104))(v7, v12, v13);
  v15 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
  v16 = a2(v15);
  v17 = static Font.system(_:design:weight:)(v11, v7, *(_QWORD *)&v16, 0);
  sub_100009578((uint64_t)v7, &qword_1000ACBD8);
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *a3 = v17;
  return result;
}

uint64_t sub_100017518@<X0>(uint64_t *a1@<X8>)
{
  return sub_100017534(&qword_1000AC850, &qword_1000AD328, (uint64_t)sub_1000173AC, a1);
}

uint64_t sub_100017534@<X0>(_QWORD *a1@<X2>, uint64_t *a2@<X3>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v6;

  if (*a1 != -1)
    swift_once(a1, a3);
  v6 = *a2;
  *a4 = *a2;
  return swift_retain(v6);
}

uint64_t sub_100017578(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000927F0, 1);
}

uint64_t sub_100017588(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000927C8, 1);
}

uint64_t type metadata accessor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000AD650, (uint64_t)&nominal type descriptor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle);
}

uint64_t sub_1000175B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000175C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_100009318(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

uint64_t sub_1000175C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000175D8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000175E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.lineLimit.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100017610@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.lineLimit.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100017640(uint64_t a1)
{
  return EnvironmentValues.lineLimit.setter(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_10001766C(uint64_t a1)
{
  return EnvironmentValues.lineLimit.setter(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

unint64_t sub_100017698()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AD5C8;
  if (!qword_1000AD5C8)
  {
    v1 = sub_100007258(&qword_1000AD5B0);
    sub_1000095B4(&qword_1000AD5D0, &qword_1000AD5D8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AD5C8);
  }
  return result;
}

uint64_t sub_10001771C()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_10001773C(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  type metadata accessor for Image.Scale(0);
  __chkstk_darwin();
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v4 + 16))(v3, a1);
  return EnvironmentValues.imageScale.setter(v3);
}

unint64_t sub_1000177B8()
{
  unint64_t result;

  result = qword_1000AD5E0;
  if (!qword_1000AD5E0)
  {
    result = swift_getWitnessTable(&unk_10008DF60, &type metadata for TTRReminderSetCompletedIntent);
    atomic_store(result, (unint64_t *)&qword_1000AD5E0);
  }
  return result;
}

_QWORD *sub_1000177FC@<X0>(_QWORD *a1@<X8>)
{
  return sub_100017810((uint64_t (*)(void))sub_100017888, (uint64_t)&_s46AnyListComplicationReminderWithSubtasksFontKeyON, a1);
}

_QWORD *sub_100017810@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t a2@<X4>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;

  v5 = a1();
  result = EnvironmentValues.subscript.getter(&v7, a2, a2, v5);
  *a3 = v7;
  return result;
}

uint64_t sub_100017864(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100014858(a1, a2, a3, a4, (uint64_t (*)(void))sub_100017888, (uint64_t)&_s46AnyListComplicationReminderWithSubtasksFontKeyON);
}

unint64_t sub_100017888()
{
  unint64_t result;

  result = qword_1000AD5E8;
  if (!qword_1000AD5E8)
  {
    result = swift_getWitnessTable(&unk_100089C04, &_s46AnyListComplicationReminderWithSubtasksFontKeyON);
    atomic_store(result, (unint64_t *)&qword_1000AD5E8);
  }
  return result;
}

unint64_t sub_1000178CC()
{
  unint64_t result;

  result = qword_1000AD5F0;
  if (!qword_1000AD5F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Font, &type metadata for Font);
    atomic_store(result, (unint64_t *)&qword_1000AD5F0);
  }
  return result;
}

ValueMetadata *_s46AnyListComplicationReminderWithSubtasksFontKeyOMa()
{
  return &_s46AnyListComplicationReminderWithSubtasksFontKeyON;
}

char *sub_100017920(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  char *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char **v35;
  id v36;
  char *__dst;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    v7 = a1;
    v8 = a2[1];
    *((_QWORD *)a1 + 1) = v8;
    v9 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    v10 = v9[6];
    __dst = &v7[v10];
    v11 = (char *)a2 + v10;
    v12 = type metadata accessor for AttributedString(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    v15 = v4;
    v16 = v8;
    if (v14(v11, 1, v12))
    {
      v17 = sub_100006DA4(&qword_1000ACE10);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    v18 = v9[7];
    v19 = &v7[v18];
    v20 = (uint64_t)a2 + v18;
    v21 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v22 = v9[8];
    v23 = *(char **)((char *)a2 + v22);
    *(_QWORD *)&v7[v22] = v23;
    *(_QWORD *)&v7[v9[9]] = *(char **)((char *)a2 + v9[9]);
    v7[v9[10]] = *((_BYTE *)a2 + v9[10]);
    v7[v9[11]] = *((_BYTE *)a2 + v9[11]);
    v24 = a3[6];
    v7[a3[5]] = *((_BYTE *)a2 + a3[5]);
    *(_QWORD *)&v7[v24] = *(char **)((char *)a2 + v24);
    v25 = a3[7];
    v26 = a3[8];
    v27 = &v7[v25];
    v28 = (uint64_t *)((char *)a2 + v25);
    v29 = *v28;
    LOBYTE(v28) = *((_BYTE *)v28 + 8);
    *(_QWORD *)v27 = v29;
    v27[8] = (char)v28;
    v30 = &v7[v26];
    v31 = (uint64_t *)((char *)a2 + v26);
    v32 = *v31;
    LOBYTE(v31) = *((_BYTE *)v31 + 8);
    *(_QWORD *)v30 = v32;
    v30[8] = (char)v31;
    v33 = a3[9];
    v34 = &v7[v33];
    v35 = (char **)((char *)a2 + v33);
    v4 = *v35;
    LOBYTE(v35) = *((_BYTE *)v35 + 8);
    *(_QWORD *)v34 = v4;
    v34[8] = (char)v35;
    v36 = v23;
    swift_retain(v29);
    swift_retain(v32);
  }
  swift_retain(v4);
  return v7;
}

uint64_t sub_100017B1C(id *a1, int *a2)
{
  int *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v4 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v5 = (char *)a1 + v4[6];
  v6 = type metadata accessor for AttributedString(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  v8 = (char *)a1 + v4[7];
  v9 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);

  swift_release(*(id *)((char *)a1 + a2[7]));
  swift_release(*(id *)((char *)a1 + a2[8]));
  return swift_release(*(id *)((char *)a1 + a2[9]));
}

_QWORD *sub_100017BF8(_QWORD *a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  int *v8;
  uint64_t v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t *v27;
  uint64_t v28;
  char *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t *v34;
  uint64_t v35;
  id v36;
  char *__dst;

  v6 = *(void **)a2;
  v7 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v7;
  v8 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v9 = v8[6];
  __dst = (char *)a1 + v9;
  v10 = (const void *)(a2 + v9);
  v11 = type metadata accessor for AttributedString(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v6;
  v15 = v7;
  if (v13(v10, 1, v11))
  {
    v16 = sub_100006DA4(&qword_1000ACE10);
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  v17 = v8[7];
  v18 = (char *)a1 + v17;
  v19 = a2 + v17;
  v20 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  v21 = v8[8];
  v22 = *(void **)(a2 + v21);
  *(_QWORD *)((char *)a1 + v21) = v22;
  *(_QWORD *)((char *)a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  *((_BYTE *)a1 + v8[10]) = *(_BYTE *)(a2 + v8[10]);
  *((_BYTE *)a1 + v8[11]) = *(_BYTE *)(a2 + v8[11]);
  v23 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)((char *)a1 + v23) = *(_QWORD *)(a2 + v23);
  v24 = a3[7];
  v25 = a3[8];
  v26 = (char *)a1 + v24;
  v27 = (uint64_t *)(a2 + v24);
  v28 = *v27;
  LOBYTE(v27) = *((_BYTE *)v27 + 8);
  *(_QWORD *)v26 = v28;
  v26[8] = (char)v27;
  v29 = (char *)a1 + v25;
  v30 = (uint64_t *)(a2 + v25);
  v31 = *v30;
  LOBYTE(v30) = *((_BYTE *)v30 + 8);
  *(_QWORD *)v29 = v31;
  v29[8] = (char)v30;
  v32 = a3[9];
  v33 = (char *)a1 + v32;
  v34 = (uint64_t *)(a2 + v32);
  v35 = *v34;
  LOBYTE(v34) = *((_BYTE *)v34 + 8);
  *(_QWORD *)v33 = v35;
  v33[8] = (char)v34;
  v36 = v22;
  swift_retain(v28);
  swift_retain(v31);
  swift_retain(v35);
  return a1;
}

uint64_t sub_100017DCC(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  int *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a1 + 8);
  v10 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v10;
  v11 = v10;

  v12 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v13 = v12[6];
  v14 = (void *)(a1 + v13);
  v15 = (void *)(a2 + v13);
  v16 = type metadata accessor for AttributedString(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v21 = sub_100006DA4(&qword_1000ACE10);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  v22 = v12[7];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  v26 = v12[8];
  v27 = *(void **)(a1 + v26);
  v28 = *(void **)(a2 + v26);
  *(_QWORD *)(a1 + v26) = v28;
  v29 = v28;

  *(_QWORD *)(a1 + v12[9]) = *(_QWORD *)(a2 + v12[9]);
  *(_BYTE *)(a1 + v12[10]) = *(_BYTE *)(a2 + v12[10]);
  *(_BYTE *)(a1 + v12[11]) = *(_BYTE *)(a2 + v12[11]);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v30 = a3[7];
  v31 = (uint64_t *)(a1 + v30);
  v32 = (uint64_t *)(a2 + v30);
  v33 = *v32;
  LOBYTE(v32) = *((_BYTE *)v32 + 8);
  v34 = *v31;
  *v31 = v33;
  *((_BYTE *)v31 + 8) = (_BYTE)v32;
  swift_retain(v33);
  swift_release(v34);
  v35 = a3[8];
  v36 = (uint64_t *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v38 = *v37;
  LOBYTE(v37) = *((_BYTE *)v37 + 8);
  v39 = *v36;
  *v36 = v38;
  *((_BYTE *)v36 + 8) = (_BYTE)v37;
  swift_retain(v38);
  swift_release(v39);
  v40 = a3[9];
  v41 = (uint64_t *)(a1 + v40);
  v42 = (uint64_t *)(a2 + v40);
  v43 = *v42;
  LOBYTE(v42) = *((_BYTE *)v42 + 8);
  v44 = *v41;
  *v41 = v43;
  *((_BYTE *)v41 + 8) = (_BYTE)v42;
  swift_retain(v43);
  swift_release(v44);
  return a1;
}

_OWORD *sub_100018014(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for AttributedString(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100006DA4(&qword_1000ACE10);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = v6[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
  *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)a2 + v6[9]);
  *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
  *((_BYTE *)a1 + v6[11]) = *((_BYTE *)a2 + v6[11]);
  v17 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
  v18 = a3[7];
  v19 = a3[8];
  v20 = (char *)a1 + v18;
  v21 = (char *)a2 + v18;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  v22 = (char *)a1 + v19;
  v23 = (char *)a2 + v19;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v22[8] = v23[8];
  v24 = a3[9];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v25[8] = v26[8];
  return a1;
}

uint64_t sub_1000181AC(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  int *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];

  v8 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v9 = v8[6];
  v10 = (void *)(a1 + v9);
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for AttributedString(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_100006DA4(&qword_1000ACE10);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v18 = v8[7];
  v19 = a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  v22 = v8[8];
  v23 = *(void **)(a1 + v22);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)((char *)a2 + v22);

  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)((char *)a2 + v8[9]);
  *(_BYTE *)(a1 + v8[10]) = *((_BYTE *)a2 + v8[10]);
  *(_BYTE *)(a1 + v8[11]) = *((_BYTE *)a2 + v8[11]);
  v24 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)((char *)a2 + v24);
  v25 = a3[7];
  v26 = (uint64_t *)(a1 + v25);
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)v27;
  LOBYTE(v27) = v27[8];
  v29 = *v26;
  *v26 = v28;
  *((_BYTE *)v26 + 8) = (_BYTE)v27;
  swift_release(v29);
  v30 = a3[8];
  v31 = (uint64_t *)(a1 + v30);
  v32 = (char *)a2 + v30;
  v33 = *(_QWORD *)v32;
  LOBYTE(v32) = v32[8];
  v34 = *v31;
  *v31 = v33;
  *((_BYTE *)v31 + 8) = (_BYTE)v32;
  swift_release(v34);
  v35 = a3[9];
  v36 = (uint64_t *)(a1 + v35);
  v37 = (char *)a2 + v35;
  v38 = *(_QWORD *)v37;
  LOBYTE(v37) = v37[8];
  v39 = *v36;
  *v36 = v38;
  *((_BYTE *)v36 + 8) = (_BYTE)v37;
  swift_release(v39);
  return a1;
}

uint64_t sub_1000183CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000183D8);
}

uint64_t sub_1000183DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_100018468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100018474);
}

uint64_t sub_100018478(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_1000184F0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  result = type metadata accessor for TTRNewWidgetViewModel.Reminder(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100089958;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = &unk_100089970;
    v4[4] = &unk_100089970;
    v4[5] = &unk_100089970;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

unint64_t sub_100018580()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1000AD698;
  if (!qword_1000AD698)
  {
    v1 = sub_100007258(&qword_1000AD6A0);
    v2[0] = sub_100007258(&qword_1000AD5A0);
    v2[1] = type metadata accessor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle(255);
    v2[2] = sub_1000095B4(&qword_1000AD5B8, &qword_1000AD5A0, (uint64_t)&protocol conformance descriptor for Toggle<A>);
    v2[3] = sub_100007218(&qword_1000AD5C0, type metadata accessor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle, (uint64_t)&unk_100089C3C);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.toggleStyle<A>(_:)>>, 1);
    sub_100017698();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AD698);
  }
  return result;
}

uint64_t sub_100018670()
{
  _QWORD v1[2];

  v1[0] = &type metadata for Text;
  v1[1] = &protocol witness table for Text;
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.lineLimit(_:reservesSpace:)>>, 1);
}

uint64_t sub_1000186B0()
{
  return sub_1000095B4(&qword_1000AD6A8, &qword_1000AD6B0, (uint64_t)&protocol conformance descriptor for HStack<A>);
}

uint64_t sub_1000186DC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100092864, 1);
}

uint64_t sub_1000186EC(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100009520(result, a2, a3 & 1);
    return swift_bridgeObjectRetain(a4);
  }
  return result;
}

uint64_t sub_10001871C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10000729C(result, a2, a3 & 1);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

uint64_t sub_100018754()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_100018778(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100006DA4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000187C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t getEnumTagSinglePayload for TTRIAnyListComplicationWidgetView.CompletedView(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIAnyListComplicationWidgetView.CompletedView(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1000188BC + 4 * byte_1000896D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1000188F0 + 4 * byte_1000896D0[v4]))();
}

uint64_t sub_1000188F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000188F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100018900);
  return result;
}

uint64_t sub_10001890C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100018914);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100018918(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100018920(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIAnyListComplicationWidgetView.CompletedView()
{
  return &type metadata for TTRIAnyListComplicationWidgetView.CompletedView;
}

uint64_t sub_10001893C()
{
  return sub_1000095B4(&qword_1000AD6F0, &qword_1000AD6F8, (uint64_t)&protocol conformance descriptor for HStack<A>);
}

uint64_t sub_100018968(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10009288C, 1);
}

unint64_t sub_100018984()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AD700;
  if (!qword_1000AD700)
  {
    v1 = sub_100007258(&qword_1000AD708);
    sub_100018A08();
    sub_1000095B4(&qword_1000AD730, &qword_1000AD738, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AD700);
  }
  return result;
}

unint64_t sub_100018A08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AD710;
  if (!qword_1000AD710)
  {
    v1 = sub_100007258(&qword_1000AD718);
    sub_1000095B4(&qword_1000AD720, &qword_1000AD728, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AD710);
  }
  return result;
}

uint64_t sub_100018AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100018AAC);
}

uint64_t sub_100018AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100018AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100018AF4);
}

uint64_t sub_100018AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t _s10WidgetViewVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1000AD798;
  if (!qword_1000AD798)
    return swift_getSingletonMetadata(a1, &_s10WidgetViewVMn);
  return result;
}

uint64_t sub_100018B70(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for TTRTodayComplicationWidgetViewModel(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100018BD8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000928DC, 1);
}

uint64_t sub_100018BE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v3 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100018C5C(v1, (uint64_t)v5);
  return sub_1000056EC((uint64_t)v5, a1);
}

uint64_t sub_100018C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100018CA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AD7D0;
  if (!qword_1000AD7D0)
  {
    v1 = type metadata accessor for TTRTodayComplicationWidget.TodayInlineView(255);
    result = swift_getWitnessTable(&unk_10008841C, v1);
    atomic_store(result, (unint64_t *)&qword_1000AD7D0);
  }
  return result;
}

uint64_t sub_100018CEC(uint64_t a1)
{
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v11;

  v2 = *(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
  v3._countAndFlagsBits = 0xD00000000000001ELL;
  v11._countAndFlagsBits = 0xD00000000000007ELL;
  v11._object = (void *)0x800000010008FA30;
  v3._object = (void *)0x800000010008FA10;
  v4.value._object = (void *)0x800000010008F920;
  v4.value._countAndFlagsBits = 0xD000000000000011;
  v5._countAndFlagsBits = 0x647265764F206425;
  v5._object = (void *)0xEA00000000006575;
  v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v11);

  v7 = sub_100006DA4(&qword_1000AD2E8);
  v8 = swift_allocObject(v7, 72, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1000882D0;
  *(_QWORD *)(v8 + 56) = &type metadata for Int;
  *(_QWORD *)(v8 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v8 + 32) = a1;
  v9 = static String.localizedStringWithFormat(_:_:)(v6._countAndFlagsBits, v6._object, v8);
  swift_bridgeObjectRelease(v6._object);
  swift_bridgeObjectRelease(v8);
  return v9;
}

uint64_t *sub_100018E10(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for REMNavigationSpecifier(0);
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_retain(v4);
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_100018EA8(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_release(*a1);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for REMNavigationSpecifier(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t *sub_100018EF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for REMNavigationSpecifier(0);
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_retain(v4);
  v9(v6, v7, v8);
  return a1;
}

uint64_t *sub_100018F60(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for REMNavigationSpecifier(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

_QWORD *sub_100018FD4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for REMNavigationSpecifier(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t *sub_100019030(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for REMNavigationSpecifier(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_10001909C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000190A8);
}

uint64_t sub_1000190A8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for REMNavigationSpecifier(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_100019124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100019130);
}

char *sub_100019130(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for REMNavigationSpecifier(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for TTRTodayComplicationWidgetProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_1000AD848;
  if (!qword_1000AD848)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRTodayComplicationWidgetProvider);
  return result;
}

uint64_t sub_1000191E0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for REMNavigationSpecifier(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100019258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000CF88(v0, qword_1000AD7D8);
  v1 = sub_10000CF70(v0, (uint64_t)qword_1000AD7D8);
  if (qword_1000AC888 != -1)
    swift_once(&qword_1000AC888, sub_10001D5C8);
  v2 = sub_10000CF70(v0, (uint64_t)qword_1000B9E48);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_1000192E8(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t KeyPath;
  uint64_t v14;
  _UNKNOWN **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = type metadata accessor for TTRTodayComplicationWidgetTimelineEntry(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v34 - v6;
  v8 = type metadata accessor for TimelineProviderContext.EnvironmentVariants(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  TimelineProviderContext.environmentVariants.getter(v10);
  KeyPath = swift_getKeyPath(&unk_100089EA0);
  v14 = TimelineProviderContext.EnvironmentVariants.subscript.getter();
  swift_release(KeyPath);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  if (v14)
    v15 = (_UNKNOWN **)v14;
  else
    v15 = &off_1000A6688;
  v16 = type metadata accessor for TTRTodayComplicationWidgetProvider(0);
  v17 = a1 + *(int *)(v2 + 20);
  REMNavigationSpecifier.url.getter();
  v18 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
  *(_QWORD *)(v17 + *(int *)(v18 + 24)) = &_swiftEmptyArrayStorage;
  *(_BYTE *)(v17 + *(int *)(v18 + 20)) = 1;
  Date.init()();
  v19 = a1 + *(int *)(v2 + 24);
  v20 = type metadata accessor for TimelineEntryRelevance(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  swift_bridgeObjectRelease(v15);
  if (qword_1000AC858 != -1)
    swift_once(&qword_1000AC858, sub_100019258);
  v21 = type metadata accessor for Logger(0);
  sub_10000CF70(v21, (uint64_t)qword_1000AD7D8);
  v22 = sub_1000072AC(a1, (uint64_t)v7, type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v34 = v16;
    v35 = v26;
    *(_DWORD *)v25 = 136446467;
    v27 = sub_100006DA4(&qword_1000AD8C8);
    v28 = String.init<A>(describing:)(&v34, v27);
    v30 = v29;
    v34 = sub_10007FA38(v28, v29, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v25 + 4, v25 + 12);
    swift_bridgeObjectRelease(v30);
    *(_WORD *)(v25 + 12) = 2081;
    sub_1000072AC((uint64_t)v7, (uint64_t)v5, type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
    v31 = String.init<A>(describing:)(v5, v2);
    v33 = v32;
    v34 = sub_10007FA38(v31, v32, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v25 + 14, v25 + 22);
    swift_bridgeObjectRelease(v33);
    sub_100007EB4((uint64_t)v7, type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "%{public}s: Created placeholder {entry: %{private}s}", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);
  }
  else
  {
    sub_100007EB4((uint64_t)v7, type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
  }

}

void sub_100019660(double *a1@<X8>)
{
  *a1 = EnvironmentValues.displayScale.getter();
}

uint64_t sub_100019688(double *a1)
{
  return EnvironmentValues.displayScale.setter(*a1);
}

uint64_t sub_1000196AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _UNKNOWN **v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t (*v70)(void);
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85[2];

  v77 = a2;
  v78 = a3;
  v5 = type metadata accessor for Date(0);
  v80 = *(_QWORD *)(v5 - 8);
  v81 = v5;
  __chkstk_darwin(v5);
  v79 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRTodayComplicationWidgetProvider(0);
  v72 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v73 = v8;
  v76 = (uint64_t)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TimelineProviderContext(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v68 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v65 - v13;
  v15 = type metadata accessor for TimelineProviderContext.EnvironmentVariants(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for REMNavigationSpecifier(0);
  v20 = *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64);
  v21 = __chkstk_darwin(v19);
  v71 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v67 = v7;
  v74 = v3;
  v75 = v22;
  v23 = *(uint64_t (**)(void))(v22 + 16);
  v82 = (uint64_t)&v65 - v25;
  v83 = v24;
  v70 = v23;
  v26 = v23();
  v27 = a1;
  TimelineProviderContext.environmentVariants.getter(v26);
  KeyPath = swift_getKeyPath(&unk_100089EA0);
  v69 = TimelineProviderContext.EnvironmentVariants.subscript.getter();
  swift_release(KeyPath);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (qword_1000AC858 != -1)
    swift_once(&qword_1000AC858, sub_100019258);
  v29 = type metadata accessor for Logger(0);
  sub_10000CF70(v29, (uint64_t)qword_1000AD7D8);
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v31 = v30(v14, v27, v9);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.default.getter();
  v34 = v10;
  if (os_log_type_enabled(v32, v33))
  {
    v35 = swift_slowAlloc(22, -1);
    v36 = swift_slowAlloc(64, -1);
    v66 = v36;
    *(_DWORD *)v35 = 136446466;
    v65 = v34;
    v84 = v67;
    v85[0] = v36;
    v37 = sub_100006DA4(&qword_1000AD8C8);
    v38 = String.init<A>(describing:)(&v84, v37);
    v40 = v39;
    v84 = sub_10007FA38(v38, v39, v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, v85, v35 + 4, v35 + 12);
    swift_bridgeObjectRelease(v40);
    *(_WORD *)(v35 + 12) = 2082;
    v41 = v68;
    v30(v68, (uint64_t)v14, v9);
    v42 = String.init<A>(describing:)(v41, v9);
    v44 = v43;
    v84 = sub_10007FA38(v42, v43, v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, v85, v35 + 14, v35 + 22);
    swift_bridgeObjectRelease(v44);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v14, v9);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "%{public}s: Requesting snapshot {context: %{public}s", (uint8_t *)v35, 0x16u);
    v45 = v66;
    swift_arrayDestroy(v66, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1, -1);
    swift_slowDealloc(v35, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  }

  if (v69)
    v46 = (_UNKNOWN **)v69;
  else
    v46 = &off_1000A66B0;
  v47 = (uint64_t)v74;
  v69 = *v74;
  v48 = v71;
  v49 = v83;
  ((void (*)(char *, uint64_t, uint64_t))v70)(v71, v82, v83);
  v50 = v76;
  sub_1000072AC(v47, v76, type metadata accessor for TTRTodayComplicationWidgetProvider);
  v51 = v75;
  v52 = *(unsigned __int8 *)(v75 + 80);
  v53 = (v52 + 16) & ~v52;
  v54 = (v20 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  v55 = *(unsigned __int8 *)(v72 + 80);
  v56 = (v55 + v54 + 16) & ~v55;
  v57 = (v73 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
  v58 = swift_allocObject(&unk_1000A7A38, v57 + 8, v52 | v55 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v58 + v53, v48, v49);
  v59 = (_QWORD *)(v58 + v54);
  v60 = v78;
  *v59 = v77;
  v59[1] = v60;
  sub_100007EF0(v50, v58 + v56, type metadata accessor for TTRTodayComplicationWidgetProvider);
  *(_QWORD *)(v58 + v57) = v46;
  swift_retain(v60);
  v61 = swift_bridgeObjectRetain(v46);
  v62 = (uint64_t)v79;
  Date.init()(v61);
  v63 = v82;
  sub_100063834(v82, 0x7FFFFFFFFFFFFFFFLL, (uint64_t)v46, v62, (uint64_t)sub_10001CE80, v58);
  swift_bridgeObjectRelease(v46);
  swift_release(v58);
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v62, v81);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 8))(v63, v83);
}

uint64_t sub_100019BF8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  int *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  int v60;
  uint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  os_log_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE v83[4];
  int v84;
  uint64_t v85;
  os_log_t v86;
  _BYTE *v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(uint64_t);
  uint64_t v94;
  uint64_t v95;

  v88 = a2;
  v89 = a5;
  v92 = a4;
  v93 = a3;
  v91 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v8 = &v83[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_100006DA4(&qword_1000AD928);
  __chkstk_darwin(v9);
  v11 = &v83[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for TTRNewWidgetTimelineEntry(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v83[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = (_BYTE *)type metadata accessor for TTRTodayComplicationWidgetTimelineEntry(0);
  v17 = __chkstk_darwin(v16);
  v90 = &v83[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = __chkstk_darwin(v17);
  v21 = &v83[-v20];
  __chkstk_darwin(v19);
  v23 = &v83[-v22];
  v24 = type metadata accessor for REMNavigationSpecifier(0);
  v25 = __chkstk_darwin(v24);
  if (*(_QWORD *)(a1 + 16))
  {
    sub_1000072AC(a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for TTRNewWidgetTimelineEntry);
    v28 = type metadata accessor for Date(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v21, v15, v28);
    v29 = &v15[*(int *)(v12 + 20)];
    v30 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
    v31 = &v21[*((int *)v16 + 5)];
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v31, &v29[v30[18]], v91);
    v32 = v30[20];
    v33 = *(_QWORD *)&v29[v30[19]];
    LOBYTE(v29) = v29[v32];
    v34 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
    *(_QWORD *)&v31[*(int *)(v34 + 24)] = v33;
    v31[*(int *)(v34 + 20)] = (_BYTE)v29;
    sub_10001CD04((uint64_t)&v15[*(int *)(v12 + 24)], (uint64_t)v11);
    swift_bridgeObjectRetain(v33);
    sub_100007EB4((uint64_t)v15, type metadata accessor for TTRNewWidgetTimelineEntry);
    sub_10001CD4C((uint64_t)v11, (uint64_t)&v21[*((int *)v16 + 6)]);
    sub_100007EF0((uint64_t)v21, (uint64_t)v23, type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
    v35 = (uint64_t)v23;
    if (qword_1000AC858 != -1)
      swift_once(&qword_1000AC858, sub_100019258);
    v36 = type metadata accessor for Logger(0);
    sub_10000CF70(v36, (uint64_t)qword_1000AD7D8);
    v37 = v90;
    v38 = sub_1000072AC((uint64_t)v23, (uint64_t)v90, type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
    v39 = Logger.logObject.getter(v38);
    v40 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = swift_slowAlloc(22, -1);
      v42 = swift_slowAlloc(64, -1);
      v91 = v35;
      v43 = v42;
      v95 = v42;
      *(_DWORD *)v41 = 136446467;
      v94 = type metadata accessor for TTRTodayComplicationWidgetProvider(0);
      v44 = sub_100006DA4(&qword_1000AD8C8);
      v45 = String.init<A>(describing:)(&v94, v44);
      v47 = v46;
      v94 = sub_10007FA38(v45, v46, &v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v94, &v95, v41 + 4, v41 + 12);
      swift_bridgeObjectRelease(v47);
      *(_WORD *)(v41 + 12) = 2085;
      sub_1000072AC((uint64_t)v37, (uint64_t)v21, type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
      v48 = String.init<A>(describing:)(v21, v16);
      v50 = v49;
      v94 = sub_10007FA38(v48, v49, &v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v94, &v95, v41 + 14, v41 + 22);
      swift_bridgeObjectRelease(v50);
      sub_100007EB4((uint64_t)v37, type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "%{public}s: Completed snapshot {entry: %{sensitive}s}", (uint8_t *)v41, 0x16u);
      swift_arrayDestroy(v43, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1, -1);
      swift_slowDealloc(v41, -1, -1);

      v35 = v91;
    }
    else
    {
      sub_100007EB4((uint64_t)v37, type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);

    }
  }
  else
  {
    v51 = v88;
    v52 = &v83[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
    v53 = v27;
    v54 = v25;
    v87 = v21;
    v55 = v91;
    v90 = v16;
    if (qword_1000AC858 != -1)
      swift_once(&qword_1000AC858, sub_100019258);
    v56 = type metadata accessor for Logger(0);
    sub_10000CF70(v56, (uint64_t)qword_1000AD7D8);
    v57 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v53 + 16))(v52, v51, v54);
    v58 = Logger.logObject.getter(v57);
    v59 = static os_log_type_t.default.getter();
    v60 = v59;
    if (os_log_type_enabled(v58, v59))
    {
      v61 = v6;
      v62 = v8;
      v63 = v52;
      v64 = swift_slowAlloc(22, -1);
      v88 = swift_slowAlloc(64, -1);
      v95 = v88;
      *(_DWORD *)v64 = 136446467;
      v86 = v58;
      v94 = type metadata accessor for TTRTodayComplicationWidgetProvider(0);
      v65 = sub_100006DA4(&qword_1000AD8C8);
      v85 = v53;
      v66 = String.init<A>(describing:)(&v94, v65);
      v68 = v67;
      v94 = sub_10007FA38(v66, v67, &v95);
      v84 = v60;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v94, &v95, v64 + 4, v64 + 12);
      v69 = swift_bridgeObjectRelease(v68);
      *(_WORD *)(v64 + 12) = 2081;
      v70 = REMNavigationSpecifier.url.getter(v69);
      v71 = URL.absoluteString.getter(v70);
      v73 = v72;
      (*(void (**)(_BYTE *, uint64_t))(v61 + 8))(v62, v55);
      v94 = sub_10007FA38(v71, v73, &v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v94, &v95, v64 + 14, v64 + 22);
      swift_bridgeObjectRelease(v73);
      (*(void (**)(_BYTE *, uint64_t))(v85 + 8))(v63, v54);
      v74 = v86;
      _os_log_impl((void *)&_mh_execute_header, v86, (os_log_type_t)v84, "%{public}s: No timeline entries created placeholder snapshot {url: %{private}s}", (uint8_t *)v64, 0x16u);
      v75 = v88;
      swift_arrayDestroy(v88, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v75, -1, -1);
      swift_slowDealloc(v64, -1, -1);

    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v53 + 8))(v52, v54);

    }
    v76 = type metadata accessor for TTRTodayComplicationWidgetProvider(0);
    v77 = v90;
    v35 = (uint64_t)v87;
    v78 = &v87[*((int *)v90 + 5)];
    REMNavigationSpecifier.url.getter(v76);
    v79 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
    *(_QWORD *)&v78[*(int *)(v79 + 24)] = &_swiftEmptyArrayStorage;
    v78[*(int *)(v79 + 20)] = 1;
    Date.init()();
    v80 = v35 + *((int *)v77 + 6);
    v81 = type metadata accessor for TimelineEntryRelevance(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v80, 1, 1, v81);
  }
  v93(v35);
  return sub_100007EB4(v35, type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
}

uint64_t sub_10001A344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void);
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _UNKNOWN **v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v67 = a2;
  v68 = a3;
  v5 = type metadata accessor for Date(0);
  v70 = *(_QWORD *)(v5 - 8);
  v71 = v5;
  __chkstk_darwin(v5);
  v69 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRTodayComplicationWidgetProvider(0);
  v60 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v62 = v8;
  v64 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TimelineProviderContext(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v58 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v56 - v13;
  v15 = type metadata accessor for TimelineProviderContext.EnvironmentVariants(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for REMNavigationSpecifier(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = v22;
  v66 = v3;
  v63 = v23;
  v24 = *(uint64_t (**)(void))(v23 + 16);
  v61 = v21;
  v25 = v24();
  TimelineProviderContext.environmentVariants.getter(v25);
  KeyPath = swift_getKeyPath(&unk_100089EA0);
  v59 = TimelineProviderContext.EnvironmentVariants.subscript.getter();
  swift_release(KeyPath);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (qword_1000AC858 != -1)
    swift_once(&qword_1000AC858, sub_100019258);
  v27 = type metadata accessor for Logger(0);
  sub_10000CF70(v27, (uint64_t)qword_1000AD7D8);
  v28 = v10;
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v30 = v29(v14, a1, v9);
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = swift_slowAlloc(22, -1);
    v57 = swift_slowAlloc(64, -1);
    v72 = v7;
    v73 = v57;
    *(_DWORD *)v33 = 136446466;
    v34 = sub_100006DA4(&qword_1000AD8C8);
    v35 = String.init<A>(describing:)(&v72, v34);
    v37 = v36;
    v72 = sub_10007FA38(v35, v36, &v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73, v33 + 4, v33 + 12);
    swift_bridgeObjectRelease(v37);
    *(_WORD *)(v33 + 12) = 2082;
    v38 = v58;
    v29(v58, (uint64_t)v14, v9);
    v39 = String.init<A>(describing:)(v38, v9);
    v41 = v40;
    v72 = sub_10007FA38(v39, v40, &v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73, v33 + 14, v33 + 22);
    swift_bridgeObjectRelease(v41);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v9);
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "%{public}s: Requesting timeline {context: %{public}s", (uint8_t *)v33, 0x16u);
    v42 = v57;
    swift_arrayDestroy(v57, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1, -1);
    swift_slowDealloc(v33, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v9);
  }

  if (v59)
    v43 = (_UNKNOWN **)v59;
  else
    v43 = &off_1000A66D8;
  v44 = v64;
  sub_1000072AC(v66, v64, type metadata accessor for TTRTodayComplicationWidgetProvider);
  v45 = *(unsigned __int8 *)(v60 + 80);
  v46 = (v45 + 16) & ~v45;
  v47 = (v62 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
  v48 = (v47 + 15) & 0xFFFFFFFFFFFFFFF8;
  v49 = swift_allocObject(&unk_1000A7A10, v48 + 16, v45 | 7);
  sub_100007EF0(v44, v49 + v46, type metadata accessor for TTRTodayComplicationWidgetProvider);
  *(_QWORD *)(v49 + v47) = v43;
  v50 = (_QWORD *)(v49 + v48);
  v51 = v68;
  *v50 = v67;
  v50[1] = v51;
  swift_bridgeObjectRetain(v43);
  swift_retain(v51);
  v52 = (uint64_t)v69;
  Date.init()(v53);
  v54 = (uint64_t)v61;
  sub_100063834((uint64_t)v61, 0x7FFFFFFFFFFFFFFFLL, (uint64_t)v43, v52, (uint64_t)sub_10001C9AC, v49);
  swift_bridgeObjectRelease(v43);
  swift_release(v49);
  (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v52, v71);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 8))(v54, v65);
}

uint64_t sub_10001A810(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(char *, char *, uint64_t);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(uint64_t, char *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  NSObject *v99;
  os_log_type_t v100;
  int v101;
  _BOOL4 v102;
  void (*v103)(char *);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(char *);
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138[2];

  v122 = a5;
  v123 = a4;
  v136 = (char *)a2;
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v120 = (char *)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TimelineReloadPolicy(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v116 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100006DA4(&qword_1000AD928);
  __chkstk_darwin(v12);
  v134 = (uint64_t)&v116 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = type metadata accessor for TTRNewWidgetTimelineEntry(0);
  v14 = *(_QWORD *)(v133 - 8);
  v15 = __chkstk_darwin(v133);
  v130 = (uint64_t)&v116 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v132 = (char *)&v116 - v17;
  v135 = type metadata accessor for TTRTodayComplicationWidgetTimelineEntry(0);
  v18 = *(_QWORD *)(v135 - 8);
  v19 = __chkstk_darwin(v135);
  v21 = (char *)&v116 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v19);
  v131 = (char *)&v116 - v23;
  __chkstk_darwin(v22);
  v25 = (char *)&v116 - v24;
  v121 = sub_100006DA4(&qword_1000AD930);
  v124 = *(_QWORD *)(v121 - 8);
  v26 = __chkstk_darwin(v121);
  v27 = __chkstk_darwin(v26);
  v117 = (char *)&v116 - v28;
  v29 = __chkstk_darwin(v27);
  v118 = (char *)&v116 - v30;
  __chkstk_darwin(v29);
  v33 = (char *)&v116 - v31;
  v34 = *(_QWORD *)(a1 + 16);
  if (v34)
  {
    v128 = v18;
    v116 = v11;
    v119 = (char *)&v116 - v31;
    v138[0] = (uint64_t)_swiftEmptyArrayStorage;
    v136 = (char *)v34;
    sub_100081854(0, v34, 0);
    v35 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v125 = *(_QWORD *)(v14 + 72);
    v126 = v25;
    v129 = v7;
    v127 = v6;
    v37 = (uint64_t)v131;
    v36 = (uint64_t)v132;
    do
    {
      sub_1000072AC(v35, v36, type metadata accessor for TTRNewWidgetTimelineEntry);
      v38 = v130;
      sub_1000072AC(v36, v130, type metadata accessor for TTRNewWidgetTimelineEntry);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v37, v38, v6);
      v39 = v133;
      v40 = v38 + *(int *)(v133 + 20);
      v41 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
      v42 = v40 + v41[18];
      v43 = v135;
      v44 = v37 + *(int *)(v135 + 20);
      v45 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v44, v42, v45);
      v46 = v41[20];
      v47 = *(_QWORD *)(v40 + v41[19]);
      LOBYTE(v40) = *(_BYTE *)(v40 + v46);
      v48 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
      *(_QWORD *)(v44 + *(int *)(v48 + 24)) = v47;
      *(_BYTE *)(v44 + *(int *)(v48 + 20)) = v40;
      v49 = *(int *)(v39 + 24);
      v50 = (uint64_t)v126;
      v51 = v134;
      sub_10001CD04(v38 + v49, v134);
      swift_bridgeObjectRetain(v47);
      sub_100007EB4(v38, type metadata accessor for TTRNewWidgetTimelineEntry);
      sub_10001CD4C(v51, v37 + *(int *)(v43 + 24));
      sub_100007EF0(v37, v50, type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
      sub_100007EB4(v36, type metadata accessor for TTRNewWidgetTimelineEntry);
      v52 = v138[0];
      if ((swift_isUniquelyReferenced_nonNull_native(v138[0]) & 1) == 0)
      {
        sub_100081854(0, *(_QWORD *)(v52 + 16) + 1, 1);
        v52 = v138[0];
      }
      v54 = *(_QWORD *)(v52 + 16);
      v53 = *(_QWORD *)(v52 + 24);
      v6 = v127;
      v55 = v128;
      if (v54 >= v53 >> 1)
      {
        sub_100081854(v53 > 1, v54 + 1, 1);
        v52 = v138[0];
      }
      *(_QWORD *)(v52 + 16) = v54 + 1;
      v56 = sub_100007EF0(v50, v52+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(_QWORD *)(v55 + 72) * v54, type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
      v35 += v125;
      --v136;
      v7 = v129;
    }
    while (v136);
    v57 = v120;
    static Date.rem_startOfTomorrow.getter(v56);
    v58 = v116;
    static TimelineReloadPolicy.after(_:)(v57);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v57, v6);
    v59 = sub_10001BF30();
    v60 = v119;
    Timeline.init(entries:policy:)(v52, v58, v135, v59);
    if (qword_1000AC858 != -1)
      swift_once(&qword_1000AC858, sub_100019258);
    v61 = type metadata accessor for Logger(0);
    sub_10000CF70(v61, (uint64_t)qword_1000AD7D8);
    v62 = v124;
    v63 = *(uint64_t (**)(char *, char *, uint64_t))(v124 + 16);
    v64 = v118;
    v65 = v121;
    v66 = v63(v118, v60, v121);
    v67 = Logger.logObject.getter(v66);
    v68 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v67, v68))
    {
      v69 = swift_slowAlloc(22, -1);
      v136 = (char *)swift_slowAlloc(64, -1);
      v138[0] = (uint64_t)v136;
      *(_DWORD *)v69 = 136446467;
      v137 = type metadata accessor for TTRTodayComplicationWidgetProvider(0);
      v70 = sub_100006DA4(&qword_1000AD8C8);
      v71 = String.init<A>(describing:)(&v137, v70);
      v73 = v72;
      v137 = sub_10007FA38(v71, v72, v138);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, v138, v69 + 4, v69 + 12);
      swift_bridgeObjectRelease(v73);
      *(_WORD *)(v69 + 12) = 2085;
      v74 = v117;
      v63(v117, v64, v65);
      v75 = String.init<A>(describing:)(v74, v65);
      v77 = v76;
      v137 = sub_10007FA38(v75, v76, v138);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, v138, v69 + 14, v69 + 22);
      swift_bridgeObjectRelease(v77);
      v78 = *(void (**)(char *, uint64_t))(v124 + 8);
      v78(v64, v65);
      _os_log_impl((void *)&_mh_execute_header, v67, v68, "%{public}s: Completed timeline {timeline: %{sensitive}s}", (uint8_t *)v69, 0x16u);
      v79 = (uint64_t)v136;
      swift_arrayDestroy(v136, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v79, -1, -1);
      swift_slowDealloc(v69, -1, -1);
    }
    else
    {
      v78 = *(void (**)(char *, uint64_t))(v62 + 8);
      v78(v64, v65);
    }

    v123(v60);
  }
  else
  {
    v134 = v32;
    v80 = v6;
    v81 = type metadata accessor for TTRTodayComplicationWidgetProvider(0);
    v82 = v135;
    v83 = &v21[*(int *)(v135 + 20)];
    REMNavigationSpecifier.url.getter(v81);
    v84 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
    *(_QWORD *)&v83[*(int *)(v84 + 24)] = _swiftEmptyArrayStorage;
    v83[*(int *)(v84 + 20)] = 1;
    Date.init()(v84);
    v85 = &v21[*(int *)(v82 + 24)];
    v86 = type metadata accessor for TimelineEntryRelevance(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v85, 1, 1, v86);
    v87 = sub_100006DA4(&qword_1000AD938);
    v88 = *(unsigned __int8 *)(v18 + 80);
    v89 = (v88 + 32) & ~v88;
    v90 = swift_allocObject(v87, v89 + *(_QWORD *)(v18 + 72), v88 | 7);
    *(_OWORD *)(v90 + 16) = xmmword_1000882D0;
    v136 = v21;
    v91 = sub_1000072AC((uint64_t)v21, v90 + v89, type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
    v92 = v120;
    static Date.rem_startOfTomorrow.getter(v91);
    static TimelineReloadPolicy.after(_:)(v92);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v92, v80);
    v93 = sub_10001BF30();
    Timeline.init(entries:policy:)(v90, v11, v82, v93);
    v60 = v33;
    if (qword_1000AC858 != -1)
      swift_once(&qword_1000AC858, sub_100019258);
    v94 = type metadata accessor for Logger(0);
    sub_10000CF70(v94, (uint64_t)qword_1000AD7D8);
    v95 = v124;
    v96 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v124 + 16);
    v97 = v134;
    v65 = v121;
    v98 = v96(v134, v33, v121);
    v99 = Logger.logObject.getter(v98);
    v100 = static os_log_type_t.default.getter();
    v101 = v100;
    v102 = os_log_type_enabled(v99, v100);
    v103 = v123;
    if (v102)
    {
      v104 = swift_slowAlloc(22, -1);
      LODWORD(v135) = v101;
      v105 = v104;
      v106 = swift_slowAlloc(64, -1);
      v137 = v81;
      v138[0] = v106;
      *(_DWORD *)v105 = 136446467;
      v107 = sub_100006DA4(&qword_1000AD8C8);
      v119 = v33;
      v108 = String.init<A>(describing:)(&v137, v107);
      v110 = v109;
      v137 = sub_10007FA38(v108, v109, v138);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, v138, v105 + 4, v105 + 12);
      swift_bridgeObjectRelease(v110);
      *(_WORD *)(v105 + 12) = 2081;
      v111 = v117;
      v96((uint64_t)v117, (char *)v97, v65);
      v112 = String.init<A>(describing:)(v111, v65);
      v114 = v113;
      v137 = sub_10007FA38(v112, v113, v138);
      v60 = v119;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, v138, v105 + 14, v105 + 22);
      swift_bridgeObjectRelease(v114);
      v78 = *(void (**)(char *, uint64_t))(v124 + 8);
      v78((char *)v97, v65);
      _os_log_impl((void *)&_mh_execute_header, v99, (os_log_type_t)v135, "%{public}s: No timeline entries created placeholder {timeline %{private}s}", (uint8_t *)v105, 0x16u);
      swift_arrayDestroy(v106, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v106, -1, -1);
      swift_slowDealloc(v105, -1, -1);

    }
    else
    {

      v78 = *(void (**)(char *, uint64_t))(v95 + 8);
      v78((char *)v97, v65);
    }
    sub_100007EB4((uint64_t)v136, type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
    v103(v60);
  }
  return ((uint64_t (*)(char *, uint64_t))v78)(v60, v65);
}

uint64_t sub_10001B22C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2[10] = a1;
  v2[11] = v1;
  v3 = sub_100006DA4(&qword_1000AD8A8);
  v2[12] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[13] = v4;
  v2[14] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100006DA4(&qword_1000AD8B0);
  v2[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RelevantContext(0);
  v2[16] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[17] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[18] = swift_task_alloc(v8);
  v2[19] = swift_task_alloc(v8);
  v2[20] = swift_task_alloc(v8);
  v2[21] = swift_task_alloc(v8);
  v9 = sub_100006DA4(&qword_1000AD8B8);
  v2[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  v2[23] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v2[24] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[25] = swift_task_alloc(v12);
  v2[26] = swift_task_alloc(v12);
  v13 = type metadata accessor for REMFeatureFlags(0);
  v2[27] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v2[28] = v14;
  v2[29] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10001B388, 0, 0);
}

uint64_t sub_10001B388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = *(_QWORD *)(v0 + 224);
  v1 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 216);
  v4 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, enum case for REMFeatureFlags.smartStack(_:), v3);
  v5 = REMFeatureFlags.isEnabled.getter(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if ((v5 & 1) != 0)
  {
    if (qword_1000AC858 != -1)
      swift_once(&qword_1000AC858, sub_100019258);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_10000CF70(v6, (uint64_t)qword_1000AD7D8);
    *(_QWORD *)(v0 + 240) = v7;
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      v11 = swift_slowAlloc(32, -1);
      v32 = v11;
      *(_DWORD *)v10 = 136446210;
      *(_QWORD *)(v0 + 64) = type metadata accessor for TTRTodayComplicationWidgetProvider(0);
      v12 = sub_100006DA4(&qword_1000AD8C8);
      v13 = String.init<A>(describing:)(v0 + 64, v12);
      v15 = v14;
      *(_QWORD *)(v0 + 72) = sub_10007FA38(v13, v14, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80, v10 + 4, v10 + 12);
      swift_bridgeObjectRelease(v15);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s: Requesting relevances for today...", v10, 0xCu);
      swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);
    }

    v16 = *(_QWORD *)(v0 + 208);
    v17 = **(_QWORD **)(v0 + 88);
    Date.init()(v18);
    v19 = swift_task_alloc(48);
    *(_QWORD *)(v0 + 248) = v19;
    *(_QWORD *)(v19 + 16) = v17;
    *(_BYTE *)(v19 + 24) = 0;
    *(_QWORD *)(v19 + 32) = 0x7FFFFFFFFFFFFFFFLL;
    *(_QWORD *)(v19 + 40) = v16;
    v20 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 256) = v20;
    v21 = sub_100006DA4(&qword_1000AD8C0);
    *v20 = v0;
    v20[1] = sub_10001B6A8;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD00000000000003FLL, 0x800000010008FAB0, sub_10001BF78, v19, v21);
  }
  else
  {
    WidgetRelevances.init(_:)(_swiftEmptyArrayStorage, (char *)&type metadata for () + 8);
    v23 = *(_QWORD *)(v0 + 200);
    v24 = *(_QWORD *)(v0 + 208);
    v26 = *(_QWORD *)(v0 + 168);
    v25 = *(_QWORD *)(v0 + 176);
    v28 = *(_QWORD *)(v0 + 152);
    v27 = *(_QWORD *)(v0 + 160);
    v29 = *(_QWORD *)(v0 + 144);
    v31 = *(_QWORD *)(v0 + 112);
    v30 = *(_QWORD *)(v0 + 120);
    swift_task_dealloc(*(_QWORD *)(v0 + 232));
    swift_task_dealloc(v24);
    swift_task_dealloc(v23);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10001B6A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 248);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 256));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_10001B704, 0, 0);
}

uint64_t sub_10001B704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  uint8_t *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  int64_t v32;
  _QWORD *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  void (*v51)(uint64_t, char *, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  _QWORD *v78;

  v1 = *(_QWORD *)(v0 + 16);
  v76 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 192) + 8);
  v76(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 184));
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v69 = v0 + 40;
    v3 = *(_QWORD *)(v0 + 192);
    v4 = *(_QWORD *)(v0 + 136);
    v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v70 = v1;
    v71 = *(_QWORD *)(v3 + 72);
    v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    swift_bridgeObjectRetain(v1);
    v72 = _swiftEmptyArrayStorage;
    while (1)
    {
      v7 = *(_QWORD *)(v0 + 176);
      v6 = *(_QWORD *)(v0 + 184);
      v74(v7, v5, v6);
      v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v8(v7, 0, 1, v6);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v7, 1, v6) == 1)
        break;
      v9 = *(_QWORD *)(v0 + 200);
      v10 = *(_QWORD *)(v0 + 184);
      v11 = *(_QWORD *)(v0 + 120);
      v12 = *(_QWORD *)(v0 + 128);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v9, *(_QWORD *)(v0 + 176), v10);
      static RelevantContext.date(_:)(v9);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v11, 0, 1, v12);
      v76(v9, v10);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v11, 1, v12) == 1)
      {
        sub_10001C664(*(_QWORD *)(v0 + 120));
      }
      else
      {
        v14 = *(_QWORD *)(v0 + 160);
        v13 = *(_QWORD *)(v0 + 168);
        v15 = *(_QWORD *)(v0 + 128);
        v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
        v16(v13, *(_QWORD *)(v0 + 120), v15);
        v16(v14, v13, v15);
        if ((swift_isUniquelyReferenced_nonNull_native(v72) & 1) != 0)
          v17 = (unint64_t)v72;
        else
          v17 = sub_10001C1C8(0, v72[2] + 1, 1, (unint64_t)v72, &qword_1000AD8D0, (uint64_t (*)(_QWORD))&type metadata accessor for RelevantContext);
        v19 = *(_QWORD *)(v17 + 16);
        v18 = *(_QWORD *)(v17 + 24);
        if (v19 >= v18 >> 1)
          v17 = sub_10001C1C8(v18 > 1, v19 + 1, 1, v17, &qword_1000AD8D0, (uint64_t (*)(_QWORD))&type metadata accessor for RelevantContext);
        v20 = *(_QWORD *)(v0 + 160);
        v21 = *(_QWORD *)(v0 + 128);
        *(_QWORD *)(v17 + 16) = v19 + 1;
        v72 = (_QWORD *)v17;
        v16(v17+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v19, v20, v21);
      }
      v5 += v71;
      if (!--v2)
      {
        v8(*(_QWORD *)(v0 + 176), 1, 1, *(_QWORD *)(v0 + 184));
        break;
      }
    }
    swift_bridgeObjectRelease_n(v70, 2);
    v31 = v72;
    v34 = swift_bridgeObjectRetain_n(v72, 2);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = *(_QWORD *)(v0 + 128);
      v38 = swift_slowAlloc(22, -1);
      v39 = (_QWORD *)swift_slowAlloc(64, -1);
      v78 = v39;
      *(_DWORD *)v38 = 136446467;
      *(_QWORD *)(v0 + 24) = type metadata accessor for TTRTodayComplicationWidgetProvider(0);
      v40 = sub_100006DA4(&qword_1000AD8C8);
      v41 = String.init<A>(describing:)(v0 + 24, v40);
      v43 = v42;
      *(_QWORD *)(v0 + 32) = sub_10007FA38(v41, v42, (uint64_t *)&v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v69, v38 + 4, v38 + 12);
      swift_bridgeObjectRelease(v43);
      *(_WORD *)(v38 + 12) = 2085;
      v44 = swift_bridgeObjectRetain(v72);
      v45 = Array.description.getter(v44, v37);
      v47 = v46;
      swift_bridgeObjectRelease(v72);
      *(_QWORD *)(v0 + 40) = sub_10007FA38(v45, v47, (uint64_t *)&v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v69, v0 + 48, v38 + 14, v38 + 22);
      swift_bridgeObjectRelease(v47);
      swift_bridgeObjectRelease_n(v72, 2);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "%{public}s: Completed adding timeline relevances. {timeline: %{sensitive}s}", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy(v39, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v38, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(v72, 2);
    }

    v32 = v72[2];
    if (v32)
      goto LABEL_22;
LABEL_16:
    swift_bridgeObjectRelease(v31);
    v33 = _swiftEmptyArrayStorage;
    goto LABEL_29;
  }
  v22 = swift_bridgeObjectRelease(v1);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, (os_log_type_t)v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = (_QWORD *)swift_slowAlloc(32, -1);
    v78 = v26;
    *(_DWORD *)v25 = 136446210;
    *(_QWORD *)(v0 + 48) = type metadata accessor for TTRTodayComplicationWidgetProvider(0);
    v27 = sub_100006DA4(&qword_1000AD8C8);
    v28 = String.init<A>(describing:)(v0 + 48, v27);
    v30 = v29;
    *(_QWORD *)(v0 + 56) = sub_10007FA38(v28, v29, (uint64_t *)&v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v25 + 4, v25 + 12);
    swift_bridgeObjectRelease(v30);
    _os_log_impl((void *)&_mh_execute_header, v23, (os_log_type_t)v24, "%{public}s: No timeline relevances to add.", v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);
  }

  v31 = _swiftEmptyArrayStorage;
  v32 = _swiftEmptyArrayStorage[2];
  if (!v32)
    goto LABEL_16;
LABEL_22:
  v48 = *(_QWORD *)(v0 + 136);
  v49 = *(_QWORD *)(v0 + 104);
  v78 = _swiftEmptyArrayStorage;
  sub_100081880(0, v32, 0);
  v50 = (char *)v31 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
  v73 = v31;
  v75 = *(_QWORD *)(v48 + 72);
  v77 = v48;
  v51 = *(void (**)(uint64_t, char *, uint64_t))(v48 + 16);
  v33 = v78;
  do
  {
    v53 = *(_QWORD *)(v0 + 144);
    v52 = *(char **)(v0 + 152);
    v54 = *(_QWORD *)(v0 + 128);
    v51((uint64_t)v52, v50, v54);
    v51(v53, v52, v54);
    WidgetRelevanceEntry<A>.init(context:)(v53);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v52, v54);
    if ((swift_isUniquelyReferenced_nonNull_native(v33) & 1) == 0)
    {
      sub_100081880(0, v33[2] + 1, 1);
      v33 = v78;
    }
    v56 = v33[2];
    v55 = v33[3];
    if (v56 >= v55 >> 1)
    {
      sub_100081880(v55 > 1, v56 + 1, 1);
      v33 = v78;
    }
    v57 = *(_QWORD *)(v0 + 112);
    v58 = *(_QWORD *)(v0 + 96);
    v33[2] = v56 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v49 + 32))((unint64_t)v33+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(_QWORD *)(v49 + 72) * v56, v57, v58);
    v50 += v75;
    --v32;
  }
  while (v32);
  swift_bridgeObjectRelease(v73);
LABEL_29:
  WidgetRelevances.init(_:)(v33, (char *)&type metadata for () + 8);
  v59 = *(_QWORD *)(v0 + 200);
  v60 = *(_QWORD *)(v0 + 208);
  v62 = *(_QWORD *)(v0 + 168);
  v61 = *(_QWORD *)(v0 + 176);
  v64 = *(_QWORD *)(v0 + 152);
  v63 = *(_QWORD *)(v0 + 160);
  v65 = *(_QWORD *)(v0 + 144);
  v67 = *(_QWORD *)(v0 + 112);
  v66 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v60);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10001BE20(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1000AD8A4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000B208;
  return sub_10001B22C(a1);
}

uint64_t sub_10001BE70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(async function pointer to TimelineProvider.relevance()[1]);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000D198;
  return TimelineProvider.relevance()(a1, a2, a3);
}

uint64_t sub_10001BEDC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1000AD8A4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000D198;
  return sub_10001B22C(a1);
}

unint64_t sub_10001BF30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AD888[0];
  if (!qword_1000AD888[0])
  {
    v1 = type metadata accessor for TTRTodayComplicationWidgetTimelineEntry(255);
    result = swift_getWitnessTable(&unk_10008C300, v1);
    atomic_store(result, qword_1000AD888);
  }
  return result;
}

uint64_t sub_10001BF78(uint64_t a1)
{
  uint64_t v1;

  return sub_100065948(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

_QWORD *sub_10001BF88(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100006DA4(&qword_1000AD8E0);
      v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[5 * v8 + 4])
          memmove(v13, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_10001C6A8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10001C0A8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100006DA4(&qword_1000AD940);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001C7B4(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_10001C1B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10001C1C8(a1, a2, a3, a4, &qword_1000ACB08, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetFamily);
}

uint64_t sub_10001C1C8(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_100006DA4(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
    goto LABEL_29;
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = a6(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (unint64_t)v18 + v23;
  if ((a1 & 1) != 0)
  {
    v25 = a4 + v23;
    if ((unint64_t)v18 < a4 || v24 >= v25 + *(_QWORD *)(v22 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v18 + v23, v25, v11, v21);
    }
    else if (v18 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v18 + v23);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_10001CA0C(0, v11, v24, a4, a6);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v18;
}

uint64_t sub_10001C3D4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10001C1C8(a1, a2, a3, a4, &qword_1000AD8D8, (uint64_t (*)(_QWORD))&type metadata accessor for REMRemindersListDataView.ReminderLite);
}

uint64_t sub_10001C3E8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10001C1C8(a1, a2, a3, a4, &qword_1000AD918, type metadata accessor for TTRNewWidgetPresenter.Division);
}

uint64_t sub_10001C3FC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10001C1C8(a1, a2, a3, a4, &qword_1000AD8F0, (uint64_t (*)(_QWORD))&type metadata accessor for Date);
}

uint64_t sub_10001C410(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10001C1C8(a1, a2, a3, a4, &qword_1000AD908, type metadata accessor for TTRNewWidgetViewModel.Reminder);
}

uint64_t sub_10001C424(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10001C1C8(a1, a2, a3, a4, &qword_1000AD910, type metadata accessor for TTRNewWidgetPresenter.Snapshot);
}

uint64_t sub_10001C438(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10001C1C8(a1, a2, a3, a4, &qword_1000AD920, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
}

char *sub_10001C44C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100006DA4(&qword_1000AD8F8);
      v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      *((_QWORD *)v11 + 2) = v8;
      *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
      v14 = v11 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (char *)&_swiftEmptyArrayStorage;
      v14 = (char *)&_swiftEmptyArrayStorage + 32;
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[16 * v8 + 32])
          memmove(v14, a4 + 32, 16 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_10001CC14(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_10001C558(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100006DA4(&qword_1000AD900);
      v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      *((_QWORD *)v11 + 2) = v8;
      *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
      v14 = v11 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (char *)&_swiftEmptyArrayStorage;
      v14 = (char *)&_swiftEmptyArrayStorage + 32;
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[16 * v8 + 32])
          memmove(v14, a4 + 32, 16 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_10001CB24(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_10001C664(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006DA4(&qword_1000AD8B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10001C6A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 40 * a1 + 32;
  v7 = a3 + 40 * v4;
  if (v6 >= v7 || v6 + 40 * v4 <= a3)
  {
    sub_100006DA4(&qword_1000AD8E8);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10001C7B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

void sub_10001C8A4(double *a1@<X8>)
{
  *a1 = EnvironmentValues.displayScale.getter();
}

uint64_t sub_10001C8CC(double *a1)
{
  return EnvironmentValues.displayScale.setter(*a1);
}

uint64_t sub_10001C8F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for TTRTodayComplicationWidgetProvider(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4));
  v9 = v8 + *(int *)(v1 + 20);
  v10 = type metadata accessor for REMNavigationSpecifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v7 + 16, v5);
}

uint64_t sub_10001C9AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for TTRTodayComplicationWidgetProvider(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10001A810(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(void (**)(char *))(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10001CA0C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(a5(0) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v5;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v14;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10001CB24(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10001CC14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10001CD04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006DA4(&qword_1000AD928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001CD4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006DA4(&qword_1000AD928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001CD94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void (*v12)(uint64_t, uint64_t);

  v1 = type metadata accessor for REMNavigationSpecifier(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = type metadata accessor for TTRTodayComplicationWidgetProvider(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8 + 16) & ~v8;
  v10 = v3 | v8 | 7;
  v11 = (*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v12(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v5 + 8));
  swift_release(*(_QWORD *)(v0 + v9));
  v12(v0 + v9 + *(int *)(v6 + 20), v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v11));
  return swift_deallocObject(v0, v11 + 8, v10);
}

uint64_t sub_10001CE80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for REMNavigationSpecifier(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = type metadata accessor for TTRTodayComplicationWidgetProvider(0);
  return sub_100019BF8(a1, v1 + v4, *(void (**)(uint64_t))(v1 + v5), *(_QWORD *)(v1 + v5 + 8), v1+ ((v5 + *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80)));
}

uint64_t sub_10001CF10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[40];
  _QWORD v35[5];

  v33 = a1;
  v32 = sub_100006DA4(&qword_1000AD950);
  __chkstk_darwin(v32);
  v2 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100006DA4(&qword_1000AD958);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v30 - v8;
  v10 = sub_100006DA4(&qword_1000AD960);
  v31 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v30 - v14;
  v16 = type metadata accessor for TTRTodayComplicationWidget(0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v30 - v20;
  sub_10007F3E0((uint64_t *)((char *)&v30 - v20));
  v22 = sub_100006DA4(&qword_1000AD968);
  TupleWidget.init(_:)(v22, v22);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  v23 = sub_10001D4AC(&qword_1000AD970, &qword_1000AD958);
  v24 = LimitedAvailabilityWidget.init<A>(_:)(v7, v3, v23);
  v35[3] = &type metadata for LimitedAvailabilityWidget;
  v35[4] = sub_100006E20();
  v35[0] = v24;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  sub_10001D418((uint64_t)v35, (uint64_t)v34);
  sub_100006C8C((uint64_t)v34, (uint64_t)v15);
  sub_100009578((uint64_t)v34, &qword_1000ACA30);
  sub_10001D26C(v35);
  sub_10001D28C((uint64_t)v21, (uint64_t)v19);
  v25 = v31;
  v26 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  v26(v13, v15, v10);
  sub_10001D28C((uint64_t)v19, (uint64_t)v2);
  v27 = v32;
  v26(&v2[*(int *)(v32 + 64)], v13, v10);
  TupleWidget.init(_:)(v2, v27);
  v28 = *(void (**)(char *, uint64_t))(v25 + 8);
  v28(v15, v10);
  sub_10001D2D0((uint64_t)v21);
  v28(v13, v10);
  return sub_10001D2D0((uint64_t)v19);
}

int main(int argc, const char **argv, const char **envp)
{
  sub_10001D208();
  static WidgetBundle.main()();
  return 0;
}

unint64_t sub_10001D208()
{
  unint64_t result;

  result = qword_1000AD948;
  if (!qword_1000AD948)
  {
    result = swift_getWitnessTable(&unk_100089EE4, &type metadata for TTRIWidgetBundle);
    atomic_store(result, (unint64_t *)&qword_1000AD948);
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIWidgetBundle()
{
  return &type metadata for TTRIWidgetBundle;
}

uint64_t sub_10001D25C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100092948, 1);
}

uint64_t sub_10001D26C(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10001D28C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRTodayComplicationWidget(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001D2D0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRTodayComplicationWidget(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10001D30C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6[2];
  _OWORD v7[2];
  uint64_t v8;
  _QWORD v9[5];

  if (qword_1000AC978 != -1)
    swift_once(&qword_1000AC978, sub_1000714CC);
  v0 = qword_1000B0208;
  v9[3] = type metadata accessor for TTRNewWidgetInteractor(0);
  v9[4] = &off_1000A8610;
  v9[0] = v0;
  type metadata accessor for AppDependencyManager(0);
  swift_retain(v0);
  v2 = static AppDependencyManager.shared.getter(v1);
  v8 = 0;
  memset(v7, 0, sizeof(v7));
  sub_10001D418((uint64_t)v9, (uint64_t)v6);
  v3 = swift_allocObject(&unk_1000A7AE0, 56, 7);
  sub_100006E64(v6, v3 + 16);
  v4 = sub_100006DA4(&qword_1000AD978);
  AppDependencyManager.add<A>(key:dependency:)(v7, sub_10001D480, v3, v4);
  swift_release(v2);
  swift_release(v3);
  sub_100009578((uint64_t)v7, &qword_1000AD980);
  return sub_10001D26C(v9);
}

uint64_t sub_10001D418(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10001D45C()
{
  uint64_t v0;

  sub_10001D26C((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10001D480@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000714C4(v1 + 16, a1);
}

uint64_t sub_10001D488()
{
  return sub_10001D4AC(&qword_1000AD988, &qword_1000AD990);
}

uint64_t sub_10001D4AC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100007258(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for TupleWidget<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001D4EC(uint64_t a1)
{
  return sub_10001D564(a1, &REMSettingsTodayNotificationIdentifier, &qword_1000B9DF8, &qword_1000B9E00);
}

uint64_t sub_10001D504(uint64_t a1)
{
  return sub_10001D564(a1, &REMSettingsIncludeDueTodayIdentifier, &qword_1000B9E08, &qword_1000B9E10);
}

uint64_t sub_10001D51C(uint64_t a1)
{
  return sub_10001D564(a1, &REMSettingsMuteNotificationsIdentifier, &qword_1000B9E18, &qword_1000B9E20);
}

uint64_t sub_10001D534(uint64_t a1)
{
  return sub_10001D564(a1, &REMSettingsShowAsOverdueIdentifier, &qword_1000B9E28, &qword_1000B9E30);
}

uint64_t sub_10001D54C(uint64_t a1)
{
  return sub_10001D564(a1, &REMSettingsShowSuggestionsIdentifier, &qword_1000B9E38, &qword_1000B9E40);
}

uint64_t sub_10001D564(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  Swift::String v6;
  void *object;
  uint64_t result;

  v6._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(*a2);
  object = v6._object;
  String.append(_:)(v6);
  result = swift_bridgeObjectRelease(object);
  *a3 = 35;
  *a4 = 0xE100000000000000;
  return result;
}

uint64_t sub_10001D5C8()
{
  uint64_t v0;
  id v1;

  v0 = type metadata accessor for Logger(0);
  sub_10000CF88(v0, qword_1000B9E48);
  sub_10000CF70(v0, (uint64_t)qword_1000B9E48);
  v1 = objc_msgSend((id)objc_opt_self(REMLog), "ui");
  return Logger.init(_:)(v1);
}

uint64_t sub_10001D634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000CF88(v0, qword_1000AD998);
  v1 = sub_10000CF70(v0, (uint64_t)qword_1000AD998);
  if (qword_1000AC888 != -1)
    swift_once(&qword_1000AC888, sub_10001D5C8);
  v2 = sub_10000CF70(v0, (uint64_t)qword_1000B9E48);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10001D6C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t (*v7)(_QWORD);
  char v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD v16[2];

  v1 = v0;
  v2 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(unsigned __int8 *)(v1 + *(int *)(v3 + 44));
  sub_1000072AC(v1, (uint64_t)v5, v7);
  if (v6 != 1)
  {
    v9 = sub_100007EB4((uint64_t)v5, type metadata accessor for TTRNewWidgetViewModel.Reminder);
    return URL.description.getter(v9);
  }
  v8 = v5[*(int *)(v2 + 40)];
  v9 = sub_100007EB4((uint64_t)v5, type metadata accessor for TTRNewWidgetViewModel.Reminder);
  if ((v8 & 1) == 0)
    return URL.description.getter(v9);
  v16[0] = URL.description.getter(v9);
  v16[1] = v10;
  v11._countAndFlagsBits = 45;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  if (*(_BYTE *)(v1 + *(int *)(v2 + 40)))
    v12 = 1702195828;
  else
    v12 = 0x65736C6166;
  if (*(_BYTE *)(v1 + *(int *)(v2 + 40)))
    v13 = 0xE400000000000000;
  else
    v13 = 0xE500000000000000;
  v14 = v13;
  String.append(_:)(*(Swift::String *)&v12);
  swift_bridgeObjectRelease(v13);
  return v16[0];
}

BOOL sub_10001D7F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

_QWORD *sub_10001D808(double a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *result;
  uint64_t v5;
  double v6;
  double *i;
  double v8;
  id v9;
  unint64_t v11;
  double v12;
  double v13;
  double v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  unint64_t v22;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 68));
  result = _swiftEmptyArrayStorage;
  if (v3)
  {
    v22 = (unint64_t)_swiftEmptyArrayStorage;
    v5 = *(_QWORD *)(v3 + 16);
    if (v5)
    {
      v6 = fabs(a1);
      swift_bridgeObjectRetain(v3);
      for (i = (double *)(v3 + 40); ; i += 2)
      {
        v8 = *i;
        v9 = *((id *)i - 1);
        v21 = a1;
        v20 = 0x3E50000000000000;
        if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) == 0
          || (*(_QWORD *)&a1 & 0x7FF0000000000000) == 0x7FF0000000000000)
        {
          v11 = sub_1000240B4();
          if ((FloatingPoint.rescaledAlmostEqual(to:tolerance:)(&v21, &v20, &type metadata for CGFloat, v11) & 1) != 0)
            goto LABEL_19;
        }
        else
        {
          v12 = fabs(v8);
          if (v12 <= v6)
            v12 = v6;
          v13 = v12 * 0.0000000149011612;
          v14 = vabdd_f64(v8, a1);
          v15 = v12 > 2.22507386e-308;
          v16 = 0x4000000;
          if (v15)
            *(double *)&v16 = v13;
          if (v14 < *(double *)&v16)
          {
LABEL_19:
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            v18 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v17 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v18 >= v17 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
            v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v9);
            specialized Array._endMutation()(v19);
            goto LABEL_5;
          }
        }

LABEL_5:
        if (!--v5)
        {
          swift_bridgeObjectRelease(v3);
          return (_QWORD *)v22;
        }
      }
    }
  }
  return result;
}

uint64_t sub_10001D9AC()
{
  _QWORD *v0;
  int *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v49[2];

  v1 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  __chkstk_darwin(v1);
  v3 = (char *)v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100006DA4(&qword_1000AD940);
  v5 = (_QWORD *)swift_allocObject(v4, 48, 7);
  *((_OWORD *)v5 + 1) = xmmword_1000882D0;
  v6 = v0[1];
  v5[4] = *v0;
  v5[5] = v6;
  v7 = *((unsigned __int8 *)v0 + v1[15]);
  v8 = swift_bridgeObjectRetain(v6);
  if (v7 == 1)
  {
    v9 = (uint64_t *)TTRAccesibility.AccountsList.Label.SmartList.unsafeMutableAddressor(v8);
    v11 = *v9;
    v10 = v9[1];
    v12 = v5[2];
    v13 = v5[3];
    swift_bridgeObjectRetain(v10);
    if (v12 >= v13 >> 1)
      v5 = sub_10001C0A8((_QWORD *)(v13 > 1), v12 + 1, 1, v5);
    v5[2] = v12 + 1;
    v14 = &v5[2 * v12];
    v14[4] = v11;
    v14[5] = v10;
  }
  v15 = sub_1000106B4(v0[2]);
  v17 = v16;
  v19 = v5[2];
  v18 = v5[3];
  if (v19 >= v18 >> 1)
    v5 = sub_10001C0A8((_QWORD *)(v18 > 1), v19 + 1, 1, v5);
  v5[2] = v19 + 1;
  v20 = &v5[2 * v19];
  v20[4] = v15;
  v20[5] = v17;
  v21 = (_QWORD *)((char *)v0 + v1[13]);
  v23 = *v21;
  v22 = v21[1];
  sub_1000072AC((uint64_t)v0, (uint64_t)v3, type metadata accessor for TTRNewWidgetViewModel);
  if (v22)
  {
    swift_bridgeObjectRetain(v22);
    sub_100007EB4((uint64_t)v3, type metadata accessor for TTRNewWidgetViewModel);
  }
  else
  {
    v24 = &v3[v1[14]];
    v23 = *(_QWORD *)v24;
    v22 = *((_QWORD *)v24 + 1);
    swift_bridgeObjectRetain(v22);
    v25 = sub_100007EB4((uint64_t)v3, type metadata accessor for TTRNewWidgetViewModel);
    if (!v22)
      goto LABEL_15;
  }
  v26 = (_QWORD *)((char *)v0 + v1[11]);
  v27 = v26[1];
  if (v27)
  {
    v28 = *v26;
    v29._countAndFlagsBits = 0xD00000000000006ELL;
    v30._object = (void *)0x800000010008FC80;
    v29._object = (void *)0x800000010008FCB0;
    v30._countAndFlagsBits = 0xD00000000000002ALL;
    v31._countAndFlagsBits = 0x6567646162204025;
    v31._object = (void *)0xEC0000004025202CLL;
    v32 = TTRLocalizedString(_:value:comment:)(v30, v31, v29);
    v33 = sub_100006DA4(&qword_1000AD2E8);
    v34 = swift_allocObject(v33, 112, 7);
    *(_OWORD *)(v34 + 16) = xmmword_1000895E0;
    *(_QWORD *)(v34 + 56) = &type metadata for String;
    v35 = sub_100024070();
    *(_QWORD *)(v34 + 32) = v23;
    *(_QWORD *)(v34 + 40) = v22;
    *(_QWORD *)(v34 + 96) = &type metadata for String;
    *(_QWORD *)(v34 + 104) = v35;
    *(_QWORD *)(v34 + 64) = v35;
    *(_QWORD *)(v34 + 72) = v28;
    *(_QWORD *)(v34 + 80) = v27;
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v27);
    v36 = static String.localizedStringWithFormat(_:_:)(v32._countAndFlagsBits, v32._object, v34);
    v38 = v37;
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v32._object);
    v25 = swift_bridgeObjectRelease(v34);
    v40 = v5[2];
    v39 = v5[3];
    if (v40 >= v39 >> 1)
    {
      v25 = (uint64_t)sub_10001C0A8((_QWORD *)(v39 > 1), v40 + 1, 1, v5);
      v5 = (_QWORD *)v25;
    }
    v5[2] = v40 + 1;
    v41 = &v5[2 * v40];
    v41[4] = v36;
    v41[5] = v38;
  }
  else
  {
    v25 = swift_bridgeObjectRelease(v22);
  }
LABEL_15:
  v49[1] = v5;
  v42 = (uint64_t *)TTRAccesibility.General.Label.Separator.unsafeMutableAddressor(v25);
  v43 = *v42;
  v44 = v42[1];
  swift_bridgeObjectRetain(v44);
  v45 = sub_100006DA4(&qword_1000ADC78);
  v46 = sub_1000095B4(&qword_1000ADC80, &qword_1000ADC78, (uint64_t)&protocol conformance descriptor for [A]);
  v47 = BidirectionalCollection<>.joined(separator:)(v43, v44, v45, v46);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v44);
  return v47;
}

uint64_t sub_10001DD24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_10001DD5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100009434(v2 + *(int *)(a1 + 24), a2, &qword_1000AD928);
}

uint64_t sub_10001DD84@<X0>(_QWORD *a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  char *v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;

  v56 = a6;
  v52 = a4;
  v53 = a5;
  v55 = a3;
  v51 = a2;
  v54 = a7;
  v8 = type metadata accessor for URL(0);
  v49 = *(_QWORD *)(v8 - 8);
  v50 = v8;
  __chkstk_darwin(v8);
  v48 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100006DA4(&qword_1000AD9C0);
  __chkstk_darwin(v10);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for REMNavigationSpecifier(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v47 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v18 = (char *)&v47 - v17;
  v19 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[3];
  v23 = a1[4];
  sub_10001E184(a1, v22);
  v24 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 40))(v22, v23);
  if (!v24)
    v24 = objc_msgSend(objc_allocWithZone((Class)NSAttributedString), "init");
  *(_QWORD *)v21 = v24;
  v25 = a1[3];
  v26 = a1[4];
  sub_10001E184(a1, v25);
  *((_QWORD *)v21 + 1) = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 104))(v25, v26);
  if (v55 == 2)
  {
    v27 = &v21[v19[6]];
    v28 = type metadata accessor for AttributedString(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
  }
  else
  {
    sub_10001E1EC(a1, v55 & 1, v56, (uint64_t)&v21[v19[6]]);
  }
  v29 = v53;
  sub_100009434(v53, (uint64_t)v12, &qword_1000AD9C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100009578((uint64_t)v12, &qword_1000AD9C0);
    v30 = a1[3];
    v31 = a1[4];
    sub_10001E184(a1, v30);
    v32 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31);
    v33 = objc_msgSend(v32, "urlRepresentation");

    static URL._unconditionallyBridgeFromObjectiveC(_:)(v33);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v12, v13);
    v34 = v47;
    v35 = sub_10001F838(a1, v47);
    v36 = v48;
    REMNavigationSpecifier.url.getter(v35);
    v37 = *(void (**)(char *, uint64_t))(v14 + 8);
    v37(v34, v13);
    v37(v18, v13);
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(&v21[v19[7]], v36, v50);
  }
  v38 = v54;
  v39 = v52;
  v40 = v51;
  v41 = a1[3];
  v42 = a1[4];
  sub_10001E184(a1, v41);
  *(_QWORD *)&v21[v19[8]] = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v41, v42);
  v21[v19[10]] = v40 & 1;
  *(_QWORD *)&v21[v19[9]] = v39;
  v43 = a1[3];
  v44 = a1[4];
  sub_10001E184(a1, v43);
  LOBYTE(v43) = TTRReminderProtocol.isRecurringReminderThatCanAdvanceForward.getter(v43, v44);
  v45 = type metadata accessor for Locale(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v56, v45);
  sub_100009578(v29, &qword_1000AD9C0);
  v21[v19[11]] = v43 & 1;
  sub_10001E1A8((uint64_t)v21, v38);
  return sub_10001D26C(a1);
}

uint64_t type metadata accessor for TTRNewWidgetViewModel.Reminder(uint64_t a1)
{
  return sub_100007E80(a1, (uint64_t *)&unk_1000ADAA0, (uint64_t)&nominal type descriptor for TTRNewWidgetViewModel.Reminder);
}

_QWORD *sub_10001E184(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_10001E1A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001E1EC@<X0>(_QWORD *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  id v64;
  id v65;
  uint64_t v66;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  void (*v76)(char *, uint64_t, uint64_t, uint64_t);
  char *v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t, uint64_t, uint64_t);
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(uint64_t, uint64_t, uint64_t);
  int v94;
  uint64_t v95;
  void *v96;
  unint64_t *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t (*v111)(char *, uint64_t);
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char v118;
  void (*v119)(char *, uint64_t);
  id v120;
  Class v121;
  id v122;
  id v123;
  char *v124;
  Class v125;
  void *v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  Swift::String v142;
  Swift::String v143;
  Swift::String v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  void (*v153)(char *, uint64_t, uint64_t);
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  void (*v160)(char *, char *, uint64_t);
  char *v161;
  char *v162;
  char *v163;
  void (*v164)(char *, uint64_t);
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unsigned int (*v175)(uint64_t, uint64_t, uint64_t);
  __objc2_class_ro *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  void (*v183)(char *, uint64_t);
  char *v184;
  id v185;
  Class v186;
  id v187;
  id v188;
  id v189;
  char *v190;
  Class isa;
  id v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  id v196;
  uint64_t *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  char *v227;
  int v228;
  void (*v229)(char *, uint64_t *);
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  char *v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  Swift::String v255;

  v236 = a3;
  v228 = a2;
  v238 = a4;
  v244 = sub_100006DA4(&qword_1000AD9C8);
  v5 = __chkstk_darwin(v244);
  v240 = (char *)&v195 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v243 = (char *)&v195 - v7;
  v242 = sub_100006DA4(&qword_1000AD9D0);
  v8 = __chkstk_darwin(v242);
  v241 = (char *)&v195 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v239 = (uint64_t)&v195 - v10;
  v11 = type metadata accessor for AttributedString.CharacterView(0);
  v248 = *(_QWORD *)(v11 - 8);
  v249 = v11;
  __chkstk_darwin(v11);
  v247 = (char *)&v195 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100006DA4(&qword_1000AD9D8);
  __chkstk_darwin(v13);
  v246 = (uint64_t)&v195 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v254 = type metadata accessor for AttributedString.Index(0);
  v199 = *(_QWORD *)(v254 - 8);
  v15 = __chkstk_darwin(v254);
  v245 = (char *)&v195 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v253 = (char *)&v195 - v17;
  v203 = type metadata accessor for Date.FormatStyle.Symbol.Minute(0);
  v202 = *(_QWORD *)(v203 - 8);
  __chkstk_darwin(v203);
  v201 = (char *)&v195 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = type metadata accessor for Date.AttributedStyle(0);
  v226 = *(_QWORD *)(v215 - 8);
  __chkstk_darwin(v215);
  v214 = (char *)&v195 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v208 = type metadata accessor for Date.FormatStyle.Symbol.Hour.AMPMStyle(0);
  v205 = *(_QWORD *)(v208 - 8);
  __chkstk_darwin(v208);
  v204 = (char *)&v195 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = type metadata accessor for Date.FormatStyle.Symbol.Hour(0);
  v209 = *(_QWORD *)(v210 - 8);
  __chkstk_darwin(v210);
  v207 = (char *)&v195 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v213 = type metadata accessor for Date.FormatStyle(0);
  v206 = *(_QWORD *)(v213 - 8);
  v22 = __chkstk_darwin(v213);
  v200 = (char *)&v195 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v211 = (char *)&v195 - v25;
  v26 = __chkstk_darwin(v24);
  v212 = (char *)&v195 - v27;
  __chkstk_darwin(v26);
  v225 = (char *)&v195 - v28;
  v223 = type metadata accessor for Calendar.Component(0);
  v222 = *(_QWORD *)(v223 - 8);
  __chkstk_darwin(v223);
  v221 = (char *)&v195 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v220 = type metadata accessor for Calendar(0);
  v218 = *(_QWORD *)(v220 - 8);
  __chkstk_darwin(v220);
  v216 = (char *)&v195 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for AttributedString(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v250 = (char *)&v195 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v252 = type metadata accessor for Locale(0);
  v235 = *(_QWORD *)(v252 - 8);
  __chkstk_darwin(v252);
  v227 = (char *)&v195 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v233 = sub_100006DA4(&qword_1000AD9E0);
  v35 = __chkstk_darwin(v233);
  v234 = (uint64_t)&v195 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v224 = (char *)&v195 - v37;
  v38 = sub_100006DA4(&qword_1000AD9E8);
  v39 = __chkstk_darwin(v38);
  v232 = (char *)&v195 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __chkstk_darwin(v39);
  v43 = (char *)&v195 - v42;
  v44 = __chkstk_darwin(v41);
  v231 = (char *)&v195 - v45;
  v46 = __chkstk_darwin(v44);
  v198 = (uint64_t)&v195 - v47;
  v48 = __chkstk_darwin(v46);
  v217 = (char *)&v195 - v49;
  __chkstk_darwin(v48);
  v219 = (char *)&v195 - v50;
  v51 = sub_100006DA4(&qword_1000ACE10);
  v52 = __chkstk_darwin(v51);
  v54 = (char *)&v195 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v52);
  v237 = (uint64_t)&v195 - v55;
  v56 = (uint64_t *)type metadata accessor for Date(0);
  v57 = *(v56 - 1);
  __chkstk_darwin(v56);
  v59 = (char *)&v195 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = a1[3];
  v60 = a1[4];
  sub_10001E184(a1, v61);
  v62 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v60 + 104))(v61, v60);
  if (!v62)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v238, 1, 1, v31);
  v63 = v62;
  v230 = v32;
  v251 = v31;
  v64 = objc_msgSend(v62, "date");
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(v64) = Date.rem_isToday.getter();
  v229 = *(void (**)(char *, uint64_t *))(v57 + 8);
  v229(v59, v56);
  v65 = objc_msgSend(v63, "isAllDay");
  if ((v64 & 1) == 0)
  {
    v253 = v59;
    v254 = (uint64_t)v54;
    if (qword_1000AC8A0 == -1)
      goto LABEL_7;
    goto LABEL_52;
  }
  if ((v65 & 1) == 0)
  {
    v196 = v63;
    if ((v228 & 1) == 0)
    {
      v253 = v59;
      v254 = (uint64_t)v54;
      v197 = v56;
      if (qword_1000AC898 != -1)
        swift_once(&qword_1000AC898, sub_1000200D8);
      v79 = objc_msgSend((id)qword_1000AD9B0, "locale");
      v80 = v230;
      v81 = v236;
      v82 = (uint64_t)v224;
      v83 = (uint64_t)v219;
      v84 = (uint64_t)v217;
      if (v79)
      {
        v85 = v79;
        static Locale._unconditionallyBridgeFromObjectiveC(_:)();

        v86 = v235;
        v87 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v235 + 56);
        v88 = (char *)v83;
        v89 = 0;
      }
      else
      {
        v86 = v235;
        v87 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v235 + 56);
        v88 = v219;
        v89 = 1;
      }
      v173 = v252;
      v87(v88, v89, 1, v252);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 16))(v84, v81, v173);
      v87((char *)v84, 0, 1, v173);
      v174 = v82 + *(int *)(v233 + 48);
      sub_100009434(v83, v82, &qword_1000AD9E8);
      sub_100009434(v84, v174, &qword_1000AD9E8);
      v175 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48);
      if (v175(v82, 1, v173) == 1)
      {
        sub_100009578(v84, &qword_1000AD9E8);
        sub_100009578(v83, &qword_1000AD9E8);
        v176 = &TTRBundleLookupObject__metaData;
        if (v175(v174, 1, v173) == 1)
        {
          sub_100009578(v82, &qword_1000AD9E8);
LABEL_48:
          v187 = (id)qword_1000AD9B0;
          v188 = v196;
          v189 = objc_msgSend(v196, *(SEL *)&v176[19].ivar_base_size);
          v190 = v253;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          isa = Date._bridgeToObjectiveC()().super.isa;
          v229(v190, v197);
          v192 = objc_msgSend(v187, "stringFromDate:", isa);

          v193 = static String._unconditionallyBridgeFromObjectiveC(_:)(v192);
          v129 = v254;
          AttributedString.init(stringLiteral:)(v193);

          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v80 + 56))(v129, 0, 1, v251);
          goto LABEL_49;
        }
      }
      else
      {
        v177 = v198;
        sub_100009434(v82, v198, &qword_1000AD9E8);
        if (v175(v174, 1, v173) != 1)
        {
          v179 = v235;
          v180 = v80;
          v181 = v227;
          (*(void (**)(char *, uint64_t, uint64_t))(v235 + 32))(v227, v174, v173);
          v182 = sub_100007218(&qword_1000AD9F0, (uint64_t (*)(uint64_t))&type metadata accessor for Locale, (uint64_t)&protocol conformance descriptor for Locale);
          LODWORD(v252) = dispatch thunk of static Equatable.== infix(_:_:)(v177, v181, v173, v182);
          v183 = *(void (**)(char *, uint64_t))(v179 + 8);
          v184 = v181;
          v80 = v180;
          v183(v184, v173);
          sub_100009578(v84, &qword_1000AD9E8);
          sub_100009578(v83, &qword_1000AD9E8);
          v183((char *)v177, v173);
          sub_100009578(v82, &qword_1000AD9E8);
          v176 = &TTRBundleLookupObject__metaData;
          if ((v252 & 1) != 0)
            goto LABEL_48;
LABEL_47:
          v185 = (id)qword_1000AD9B0;
          v186 = Locale._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v185, "setLocale:", v186);

          goto LABEL_48;
        }
        sub_100009578(v84, &qword_1000AD9E8);
        sub_100009578(v83, &qword_1000AD9E8);
        (*(void (**)(uint64_t, uint64_t))(v235 + 8))(v177, v173);
        v176 = &TTRBundleLookupObject__metaData;
      }
      sub_100009578(v82, &qword_1000AD9E0);
      goto LABEL_47;
    }
    v98 = v216;
    static Calendar.current.getter(v65);
    v99 = v222;
    v100 = v221;
    v101 = v223;
    (*(void (**)(char *, _QWORD, uint64_t))(v222 + 104))(v221, enum case for Calendar.Component.minute(_:), v223);
    v102 = objc_msgSend(v63, "date");
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    v103 = Calendar.component(_:from:)(v100, v59);
    v229(v59, v56);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v100, v101);
    v104 = (*(uint64_t (**)(char *, uint64_t))(v218 + 8))(v98, v220);
    if (v103 || (Locale.uses12HourTime.getter(v104) & 1) == 0)
    {
      v130 = objc_msgSend(v63, "date");
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      v131 = v200;
      v132 = static FormatStyle<>.dateTime.getter();
      v133 = v204;
      static Date.FormatStyle.Symbol.Hour.AMPMStyle.abbreviated.getter(v132);
      v134 = v207;
      static Date.FormatStyle.Symbol.Hour.defaultDigits(amPM:)(v133);
      (*(void (**)(char *, uint64_t))(v205 + 8))(v133, v208);
      v135 = v211;
      Date.FormatStyle.hour(_:)(v134);
      (*(void (**)(char *, uint64_t))(v209 + 8))(v134, v210);
      v111 = *(uint64_t (**)(char *, uint64_t))(v206 + 8);
      v115 = v213;
      v136 = v111(v131, v213);
      v137 = v201;
      static Date.FormatStyle.Symbol.Minute.defaultDigits.getter(v136);
      v110 = v212;
      Date.FormatStyle.minute(_:)(v137);
      (*(void (**)(char *, uint64_t))(v202 + 8))(v137, v203);
      v112 = v253;
      v113 = v215;
      v114 = v214;
      v111(v135, v115);
    }
    else
    {
      v105 = objc_msgSend(v63, "date");
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      v106 = v211;
      v107 = static FormatStyle<>.dateTime.getter();
      v108 = v204;
      static Date.FormatStyle.Symbol.Hour.AMPMStyle.abbreviated.getter(v107);
      v109 = v207;
      static Date.FormatStyle.Symbol.Hour.defaultDigits(amPM:)(v108);
      (*(void (**)(char *, uint64_t))(v205 + 8))(v108, v208);
      v110 = v212;
      Date.FormatStyle.hour(_:)(v109);
      (*(void (**)(char *, uint64_t))(v209 + 8))(v109, v210);
      v111 = *(uint64_t (**)(char *, uint64_t))(v206 + 8);
      v112 = v253;
      v113 = v215;
      v114 = v214;
      v115 = v213;
      v111(v106, v213);
    }
    v138 = v225;
    Date.FormatStyle.locale(_:)(v236);
    v139 = v111(v110, v115);
    Date.FormatStyle.attributed.getter(v139);
    v111(v138, v115);
    v140 = sub_100007218(&qword_1000AD9F8, (uint64_t (*)(uint64_t))&type metadata accessor for Date.AttributedStyle, (uint64_t)&protocol conformance descriptor for Date.AttributedStyle);
    Date.formatted<A>(_:)(v114, v113, v140);
    (*(void (**)(char *, uint64_t))(v226 + 8))(v114, v113);
    v229(v59, v56);
    v141 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v255._countAndFlagsBits = 0xD00000000000005BLL;
    v255._object = (void *)0x800000010008FC20;
    v142._object = (void *)0x800000010008FBF0;
    v142._countAndFlagsBits = 0xD00000000000002CLL;
    v143._countAndFlagsBits = 49;
    v143._object = (void *)0xE100000000000000;
    v144 = NSLocalizedString(_:tableName:bundle:value:comment:)(v142, (Swift::String_optional)0, (NSBundle)v141, v143, v255);

    if (v144._countAndFlagsBits == 49 && v144._object == (void *)0xE100000000000000)
    {
      v145 = swift_bridgeObjectRelease(0xE100000000000000);
      v146 = v251;
      v147 = v254;
    }
    else
    {
      v148 = _stringCompareWithSmolCheck(_:_:expecting:)(v144._countAndFlagsBits, v144._object, 49, 0xE100000000000000, 0);
      v145 = swift_bridgeObjectRelease(v144._object);
      v146 = v251;
      v147 = v254;
      if ((v148 & 1) == 0)
      {

        v150 = v250;
LABEL_45:
        v178 = v230;
        v66 = v237;
        (*(void (**)(uint64_t, char *, uint64_t))(v230 + 32))(v237, v150, v146);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v178 + 56))(v66, 0, 1, v146);
        return sub_100018778(v66, v238, &qword_1000ACE10);
      }
    }
    v63 = 0;
    v149 = v199;
    v150 = v250;
    while (1)
    {
      v151 = v247;
      AttributedString.characters.getter(v145);
      v152 = v246;
      sub_10001FEE4(v246);
      (*(void (**)(char *, uint64_t))(v248 + 8))(v151, v249);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v149 + 48))(v152, 1, v147) == 1)
      {

        sub_100009578(v152, &qword_1000AD9D8);
        goto LABEL_45;
      }
      v153 = *(void (**)(char *, uint64_t, uint64_t))(v149 + 32);
      v153(v112, v152, v147);
      v154 = sub_100007218(&qword_1000ADA00, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
      v43 = v245;
      AttributedStringProtocol.index(afterCharacter:)(v112, v146, v154);
      v155 = sub_100007218(&qword_1000ADA08, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.Index, (uint64_t)&protocol conformance descriptor for AttributedString.Index);
      if ((dispatch thunk of static Comparable.<= infix(_:_:)(v112, v43, v147, v155) & 1) == 0)
        break;
      v156 = v243;
      v157 = v244;
      v158 = *(int *)(v244 + 48);
      v252 = (uint64_t)v63;
      v159 = &v243[v158];
      v160 = *(void (**)(char *, char *, uint64_t))(v149 + 16);
      v160(v243, v253, v147);
      v153(v159, (uint64_t)v43, v147);
      v161 = v240;
      v162 = &v240[*(int *)(v157 + 48)];
      v160(v240, v156, v147);
      v160(v162, v159, v147);
      v163 = v241;
      v153(v241, (uint64_t)v161, v254);
      v164 = *(void (**)(char *, uint64_t))(v149 + 8);
      v164(v162, v254);
      v165 = *(int *)(v157 + 48);
      v112 = v253;
      v166 = &v161[v165];
      v150 = v250;
      v153(v161, (uint64_t)v156, v254);
      v153(v166, (uint64_t)v159, v254);
      v167 = v242;
      v168 = v166;
      v146 = v251;
      v153(&v163[*(int *)(v242 + 36)], (uint64_t)v168, v254);
      v164(v161, v254);
      v169 = (uint64_t)v163;
      v147 = v254;
      v170 = v239;
      v56 = &qword_1000AD9D0;
      sub_100018778(v169, v239, &qword_1000AD9D0);
      v171 = sub_1000095B4(&qword_1000ADA10, &qword_1000AD9D0, (uint64_t)&protocol conformance descriptor for Range<A>);
      v172 = v167;
      v63 = (void *)v252;
      AttributedString.removeSubrange<A>(_:)(v170, v172, v171);
      sub_100009578(v170, &qword_1000AD9D0);
      v145 = ((uint64_t (*)(char *, uint64_t))v164)(v112, v147);
    }
    __break(1u);
LABEL_52:
    swift_once(&qword_1000AC8A0, sub_1000200EC);
LABEL_7:
    v68 = objc_msgSend((id)qword_1000AD9B8, "locale");
    v70 = v235;
    v69 = v236;
    v71 = v234;
    v72 = (uint64_t)v232;
    v73 = (uint64_t)v231;
    v197 = v56;
    if (v68)
    {
      v74 = v68;
      v75 = v63;
      static Locale._unconditionallyBridgeFromObjectiveC(_:)();

      v76 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56);
      v77 = (char *)v73;
      v78 = 0;
    }
    else
    {
      v75 = v63;
      v76 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v235 + 56);
      v77 = v231;
      v78 = 1;
    }
    v90 = v252;
    v76(v77, v78, 1, v252);
    (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v43, v69, v90);
    v76(v43, 0, 1, v90);
    v91 = v71 + *(int *)(v233 + 48);
    sub_100009434(v73, v71, &qword_1000AD9E8);
    v92 = v252;
    sub_100009434((uint64_t)v43, v91, &qword_1000AD9E8);
    v93 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
    if (v93(v71, 1, v92) == 1)
    {
      sub_100009578((uint64_t)v43, &qword_1000AD9E8);
      sub_100009578(v73, &qword_1000AD9E8);
      v94 = v93(v91, 1, v92);
      v95 = v230;
      v96 = v75;
      if (v94 == 1)
      {
        sub_100009578(v71, &qword_1000AD9E8);
        v97 = &qword_1000AD000;
LABEL_26:
        v122 = (id)v97[311];
        v123 = objc_msgSend(v96, "date");
        v124 = v253;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        v125 = Date._bridgeToObjectiveC()().super.isa;
        v229(v124, v197);
        v126 = v96;
        v127 = objc_msgSend(v122, "stringFromDate:", v125);

        v128 = static String._unconditionallyBridgeFromObjectiveC(_:)(v127);
        v129 = v254;
        AttributedString.init(stringLiteral:)(v128);

        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v95 + 56))(v129, 0, 1, v251);
LABEL_49:
        v194 = v129;
        v66 = v237;
        sub_100018778(v194, v237, &qword_1000ACE10);
        return sub_100018778(v66, v238, &qword_1000ACE10);
      }
    }
    else
    {
      sub_100009434(v71, v72, &qword_1000AD9E8);
      if (v93(v91, 1, v92) != 1)
      {
        v116 = v227;
        (*(void (**)(char *, uint64_t, uint64_t))(v70 + 32))(v227, v91, v92);
        v117 = sub_100007218(&qword_1000AD9F0, (uint64_t (*)(uint64_t))&type metadata accessor for Locale, (uint64_t)&protocol conformance descriptor for Locale);
        v118 = dispatch thunk of static Equatable.== infix(_:_:)(v72, v116, v92, v117);
        v119 = *(void (**)(char *, uint64_t))(v70 + 8);
        v119(v116, v92);
        sub_100009578((uint64_t)v43, &qword_1000AD9E8);
        sub_100009578(v73, &qword_1000AD9E8);
        v119((char *)v72, v92);
        sub_100009578(v234, &qword_1000AD9E8);
        v95 = v230;
        v96 = v75;
        v97 = &qword_1000AD000;
        if ((v118 & 1) != 0)
          goto LABEL_26;
LABEL_25:
        v120 = (id)v97[311];
        v121 = Locale._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v120, "setLocale:", v121);

        goto LABEL_26;
      }
      sub_100009578((uint64_t)v43, &qword_1000AD9E8);
      sub_100009578(v73, &qword_1000AD9E8);
      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v72, v92);
      v95 = v230;
      v96 = v75;
    }
    sub_100009578(v71, &qword_1000AD9E0);
    v97 = &qword_1000AD000;
    goto LABEL_25;
  }

  v66 = v237;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v230 + 56))(v237, 1, 1, v251);
  return sub_100018778(v66, v238, &qword_1000ACE10);
}

uint64_t sub_10001F838@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  id v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;

  v3 = v2;
  v6 = type metadata accessor for REMNavigationSpecifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v50 - v12;
  __chkstk_darwin(v11);
  v15 = (id *)((char *)&v50 - v14);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16((char *)&v50 - v14, v3, v6);
  v17 = (*(uint64_t (**)(id *, uint64_t))(v7 + 88))(v15, v6);
  if ((_DWORD)v17 == enum case for REMNavigationSpecifier.account(_:))
  {
    (*(void (**)(id *, uint64_t))(v7 + 96))(v15, v6);

    v18 = (char *)v15 + *(int *)(sub_100006DA4(&qword_1000ADA40) + 48);
    v19 = type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier(0);
LABEL_3:
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
    goto LABEL_4;
  }
  v31 = v17;
  if ((_DWORD)v17 == enum case for REMNavigationSpecifier.list(_:))
  {
    (*(void (**)(id *, uint64_t))(v7 + 96))(v15, v6);

    v32 = (char *)v15 + *(int *)(sub_100006DA4(&qword_1000ADA28) + 48);
    sub_100006DA4(&qword_1000ADA30);
    v33 = a1[3];
    v34 = a1[4];
    sub_10001E184(a1, v33);
    *a2 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8))(v33, v34);
    static REMNavigationSpecifier.ReminderPathSpecifier.showInList.getter();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(a2, enum case for REMNavigationSpecifier.reminder(_:), v6);
    v35 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v32, v35);
  }
  if ((_DWORD)v17 == enum case for REMNavigationSpecifier.customSmartList(_:))
  {
    (*(void (**)(id *, uint64_t))(v7 + 96))(v15, v6);
    v37 = *v15;
    v38 = *(int *)(sub_100006DA4(&qword_1000ADA28) + 48);
    v39 = (char *)v15 + v38;
    v40 = (_QWORD *)((char *)a2 + v38);
    *a2 = v37;
    v41 = a1[3];
    v42 = a1[4];
    sub_10001E184(a1, v41);
    *v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v41, v42);
    v43 = enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:);
    v44 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
    v45 = *(_QWORD *)(v44 - 8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v45 + 104))(v40, v43, v44);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v7 + 104))(a2, v31, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v39, v44);
  }
  if ((_DWORD)v17 == enum case for REMNavigationSpecifier.newList(_:))
    goto LABEL_15;
  if ((_DWORD)v17 == enum case for REMNavigationSpecifier.reminder(_:))
  {
    (*(void (**)(id *, uint64_t))(v7 + 96))(v15, v6);

    v18 = (char *)v15 + *(int *)(sub_100006DA4(&qword_1000ADA30) + 48);
    v19 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
    goto LABEL_3;
  }
  if ((_DWORD)v17 == enum case for REMNavigationSpecifier.section(_:)
    || (_DWORD)v17 == enum case for REMNavigationSpecifier.smartListSection(_:))
  {
    (*(void (**)(id *, uint64_t))(v7 + 96))(v15, v6);

    v18 = (char *)v15 + *(int *)(sub_100006DA4(&qword_1000ADA38) + 48);
    v19 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
    goto LABEL_3;
  }
  if ((_DWORD)v17 == enum case for REMNavigationSpecifier.root(_:))
    goto LABEL_15;
  if ((_DWORD)v17 == enum case for REMNavigationSpecifier.today(_:)
    || (_DWORD)v17 == enum case for REMNavigationSpecifier.scheduled(_:)
    || (_DWORD)v17 == enum case for REMNavigationSpecifier.allReminders(_:)
    || (_DWORD)v17 == enum case for REMNavigationSpecifier.flagged(_:))
  {
    goto LABEL_26;
  }
  if ((_DWORD)v17 == enum case for REMNavigationSpecifier.search(_:))
    goto LABEL_15;
  if ((_DWORD)v17 == enum case for REMNavigationSpecifier.assigned(_:)
    || (_DWORD)v17 == enum case for REMNavigationSpecifier.siriFoundInApps(_:))
  {
LABEL_26:
    v46 = a1[3];
    v47 = a1[4];
    sub_10001E184(a1, v46);
    *a2 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8))(v46, v47);
    v48 = enum case for REMNavigationSpecifier.SmartListPathSpecifier.select(_:);
    v49 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 104))(a2, v48, v49);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v7 + 104))(a2, v31, v6);
    return (*(uint64_t (**)(id *, uint64_t))(v7 + 8))(v15, v6);
  }
  if ((_DWORD)v17 == enum case for REMNavigationSpecifier.tagged(_:)
    || (_DWORD)v17 == enum case for REMNavigationSpecifier.completed(_:)
    || (_DWORD)v17 == enum case for REMNavigationSpecifier.publicTemplate(_:))
  {
LABEL_15:
    (*(void (**)(id *, uint64_t))(v7 + 8))(v15, v6);
    goto LABEL_4;
  }
  if ((_DWORD)v17 != enum case for REMNavigationSpecifier.newReminder(_:))
  {
    result = _diagnoseUnexpectedEnumCase<A>(type:)(v6, v6);
    __break(1u);
    return result;
  }
LABEL_4:
  if (qword_1000AC890 != -1)
    swift_once(&qword_1000AC890, sub_10001D634);
  v20 = type metadata accessor for Logger(0);
  sub_10000CF70(v20, (uint64_t)qword_1000AD998);
  v21 = ((uint64_t (*)(char *, uint64_t, uint64_t))v16)(v13, v3, v6);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.fault.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v52 = v3;
    v24 = (uint8_t *)swift_slowAlloc(12, -1);
    v25 = swift_slowAlloc(32, -1);
    v53 = a2;
    v26 = v25;
    v55 = v25;
    v51 = v7;
    *(_DWORD *)v24 = 136315138;
    v16(v10, (uint64_t)v13, v6);
    v27 = String.init<A>(describing:)(v10, v6);
    v29 = v28;
    v54 = sub_10007FA38(v27, v28, &v55);
    v3 = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v24 + 4, v24 + 12);
    swift_bridgeObjectRelease(v29);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v13, v6);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Can't select for %s", v24, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    v30 = v26;
    a2 = v53;
    swift_slowDealloc(v30, -1, -1);
    swift_slowDealloc(v24, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  }

  return ((uint64_t (*)(_QWORD *, uint64_t, uint64_t))v16)(a2, v3, v6);
}

uint64_t sub_10001FEE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void (*v12)(char *, uint64_t);
  void (*v13)(_BYTE *, _QWORD);
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[32];

  v21 = a1;
  v1 = type metadata accessor for AttributedString.Index(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v20 - v6;
  v8 = type metadata accessor for AttributedString.CharacterView(0);
  v9 = sub_100007218(&qword_1000ADA18, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView, (uint64_t)&protocol conformance descriptor for AttributedString.CharacterView);
  dispatch thunk of Collection.startIndex.getter(v8, v9);
  while (1)
  {
    dispatch thunk of Collection.endIndex.getter(v8, v9);
    v10 = sub_100007218(&qword_1000ADA20, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.Index, (uint64_t)&protocol conformance descriptor for AttributedString.Index);
    v11 = dispatch thunk of static Equatable.== infix(_:_:)(v7, v5, v1, v10);
    v12 = *(void (**)(char *, uint64_t))(v2 + 8);
    v12(v5, v1);
    if ((v11 & 1) != 0)
    {
      v12(v7, v1);
      v17 = 1;
      v18 = v21;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v18, v17, 1, v1);
    }
    v13 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read(v22, v7, v8, v9);
    v15 = *v14;
    v16 = v14[1];
    swift_bridgeObjectRetain(v16);
    v13(v22, 0);
    LOBYTE(v15) = Character.isWhitespace.getter(v15, v16);
    swift_bridgeObjectRelease(v16);
    if ((v15 & 1) != 0)
      break;
    dispatch thunk of Collection.formIndex(after:)(v7, v8, v9);
  }
  v18 = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v21, v7, v1);
  v17 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v18, v17, 1, v1);
}

id sub_1000200D8(uint64_t a1)
{
  return sub_100020100(a1, 0, 1, &qword_1000AD9B0);
}

id sub_1000200EC(uint64_t a1)
{
  return sub_100020100(a1, 1, 0, &qword_1000AD9B8);
}

id sub_100020100(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  id v7;
  id result;

  v7 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  objc_msgSend(v7, "setDoesRelativeDateFormatting:", 1);
  objc_msgSend(v7, "setDateStyle:", a2);
  result = objc_msgSend(v7, "setTimeStyle:", a3);
  *a4 = v7;
  return result;
}

char *sub_100020184(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a2[1];
    *((_QWORD *)a1 + 1) = v8;
    v9 = a3[6];
    v10 = &a1[v9];
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for AttributedString(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    v15 = v4;
    v16 = v8;
    if (v14(v11, 1, v12))
    {
      v17 = sub_100006DA4(&qword_1000ACE10);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v18 = a3[7];
    v19 = &v7[v18];
    v20 = (uint64_t)a2 + v18;
    v21 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v22 = a3[8];
    v23 = a3[9];
    v24 = *(char **)((char *)a2 + v22);
    *(_QWORD *)&v7[v22] = v24;
    *(_QWORD *)&v7[v23] = *(char **)((char *)a2 + v23);
    v25 = a3[11];
    v7[a3[10]] = *((_BYTE *)a2 + a3[10]);
    v7[v25] = *((_BYTE *)a2 + v25);
    v26 = v24;
  }
  return v7;
}

void sub_1000202E8(id *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v4 = (char *)a1 + a2[6];
  v5 = type metadata accessor for AttributedString(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  v7 = (char *)a1 + a2[7];
  v8 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);

}

_QWORD *sub_100020394(_QWORD *a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  char *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;

  v6 = *(void **)a2;
  v7 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (const void *)(a2 + v8);
  v11 = type metadata accessor for AttributedString(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v6;
  v15 = v7;
  if (v13(v10, 1, v11))
  {
    v16 = sub_100006DA4(&qword_1000ACE10);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v17 = a3[7];
  v18 = (char *)a1 + v17;
  v19 = a2 + v17;
  v20 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  v21 = a3[8];
  v22 = a3[9];
  v23 = *(void **)(a2 + v21);
  *(_QWORD *)((char *)a1 + v21) = v23;
  *(_QWORD *)((char *)a1 + v22) = *(_QWORD *)(a2 + v22);
  v24 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *((_BYTE *)a1 + v24) = *(_BYTE *)(a2 + v24);
  v25 = v23;
  return a1;
}

uint64_t sub_1000204C8(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a1 + 8);
  v10 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v10;
  v11 = v10;

  v12 = a3[6];
  v13 = (void *)(a1 + v12);
  v14 = (void *)(a2 + v12);
  v15 = type metadata accessor for AttributedString(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v20 = sub_100006DA4(&qword_1000ACE10);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  v21 = a3[7];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  v25 = a3[8];
  v26 = *(void **)(a1 + v25);
  v27 = *(void **)(a2 + v25);
  *(_QWORD *)(a1 + v25) = v27;
  v28 = v27;

  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

_OWORD *sub_100020668(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for AttributedString(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100006DA4(&qword_1000ACE10);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
  v17 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + v17) = *((_BYTE *)a2 + v17);
  return a1;
}

uint64_t sub_100020788(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];

  v8 = a3[6];
  v9 = (void *)(a1 + v8);
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for AttributedString(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = sub_100006DA4(&qword_1000ACE10);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  v21 = a3[8];
  v22 = *(void **)(a1 + v21);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)((char *)a2 + v21);

  v23 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *(_BYTE *)(a1 + v23) = *((_BYTE *)a2 + v23);
  *(_BYTE *)(a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  return a1;
}

uint64_t sub_100020918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100020924);
}

uint64_t sub_100020924(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100006DA4(&qword_1000ACE10);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = type metadata accessor for URL(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1000209C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000209D4);
}

char *sub_1000209D4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_100006DA4(&qword_1000ACE10);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = type metadata accessor for URL(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_100020A74(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[8];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[1] = "\b";
  sub_10002270C(319, (unint64_t *)&unk_1000ADAB0, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for URL(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      v6[4] = "\b";
      v6[5] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[6] = &unk_100089F60;
      v6[7] = &unk_100089F60;
      swift_initStructMetadata(a1, 256, 8, v6, a1 + 16);
    }
  }
}

_QWORD *sub_100020B3C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  void **v16;
  int *v17;
  uint64_t v18;
  unsigned int (*v19)(void **, uint64_t, int *);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void (*v37)(void **, _QWORD, uint64_t, int *);
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v74;
  char *v75;
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  char *v78;
  char *v79;
  void **__dst;
  void *__dsta;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    v22 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v21);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v82 = a3;
    v83 = a2;
    v8 = *(int *)(a3 + 20);
    v84 = a1;
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 1);
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *((_QWORD *)v9 + 1) = v11;
    *((_OWORD *)v9 + 1) = *((_OWORD *)v10 + 1);
    v12 = *((_QWORD *)v10 + 4);
    *((_QWORD *)v9 + 4) = v12;
    v9[40] = v10[40];
    v13 = *((_QWORD *)v10 + 7);
    *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
    *((_QWORD *)v9 + 7) = v13;
    v14 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
    v15 = v14[9];
    __dst = (void **)&v9[v15];
    v16 = (void **)&v10[v15];
    v17 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    v18 = *((_QWORD *)v17 - 1);
    v19 = *(unsigned int (**)(void **, uint64_t, int *))(v18 + 48);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v13);
    if (v19(v16, 1, v17))
    {
      v20 = sub_100006DA4(&qword_1000ACCD8);
      memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v23 = *v16;
      v24 = v16[1];
      *__dst = *v16;
      __dst[1] = v24;
      v25 = v17[6];
      v75 = (char *)__dst + v25;
      v78 = (char *)v16 + v25;
      v26 = type metadata accessor for AttributedString(0);
      v74 = *(_QWORD *)(v26 - 8);
      v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
      v28 = v23;
      v29 = v24;
      if (v27(v78, 1, v26))
      {
        v30 = sub_100006DA4(&qword_1000ACE10);
        memcpy(v75, v78, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v75, v78, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v75, 0, 1, v26);
      }
      v31 = v17[7];
      v32 = (char *)__dst + v31;
      v33 = (char *)v16 + v31;
      v34 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
      v35 = v17[8];
      v36 = *(void **)((char *)v16 + v35);
      *(void **)((char *)__dst + v35) = v36;
      *(void **)((char *)__dst + v17[9]) = *(void **)((char *)v16 + v17[9]);
      *((_BYTE *)__dst + v17[10]) = *((_BYTE *)v16 + v17[10]);
      *((_BYTE *)__dst + v17[11]) = *((_BYTE *)v16 + v17[11]);
      v37 = *(void (**)(void **, _QWORD, uint64_t, int *))(v18 + 56);
      v38 = v36;
      v37(__dst, 0, 1, v17);
    }
    v39 = v14[10];
    __dsta = *(void **)&v10[v39];
    *(_QWORD *)&v9[v39] = __dsta;
    v40 = v14[11];
    v41 = &v9[v40];
    v42 = &v10[v40];
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    v44 = v14[12];
    v45 = *(void **)&v10[v44];
    *(_QWORD *)&v9[v44] = v45;
    v46 = v14[13];
    v47 = &v9[v46];
    v48 = &v10[v46];
    v49 = *((_QWORD *)v48 + 1);
    *(_QWORD *)v47 = *(_QWORD *)v48;
    *((_QWORD *)v47 + 1) = v49;
    v50 = v14[14];
    v51 = &v9[v50];
    v52 = &v10[v50];
    v53 = *((_QWORD *)v52 + 1);
    *(_QWORD *)v51 = *(_QWORD *)v52;
    *((_QWORD *)v51 + 1) = v53;
    v9[v14[15]] = v10[v14[15]];
    v54 = v14[16];
    v55 = &v9[v54];
    v56 = &v10[v54];
    v57 = *((_QWORD *)v56 + 1);
    *(_QWORD *)v55 = *(_QWORD *)v56;
    *((_QWORD *)v55 + 1) = v57;
    v58 = v14[17];
    v59 = *(_QWORD *)&v10[v58];
    *(_QWORD *)&v9[v58] = v59;
    v60 = v14[18];
    v77 = &v10[v60];
    v79 = &v9[v60];
    v61 = type metadata accessor for URL(0);
    v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16);
    v62 = __dsta;
    swift_bridgeObjectRetain(v43);
    v63 = v45;
    swift_bridgeObjectRetain(v49);
    swift_bridgeObjectRetain(v53);
    swift_bridgeObjectRetain(v57);
    swift_bridgeObjectRetain(v59);
    v76(v79, v77, v61);
    v64 = v14[19];
    v65 = *(_QWORD *)&v10[v64];
    *(_QWORD *)&v9[v64] = v65;
    v9[v14[20]] = v10[v14[20]];
    v66 = *(int *)(v82 + 24);
    v22 = v84;
    v67 = (char *)v84 + v66;
    v68 = (char *)v83 + v66;
    v69 = type metadata accessor for TimelineEntryRelevance(0);
    v70 = *(_QWORD *)(v69 - 8);
    v71 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
    swift_bridgeObjectRetain(v65);
    if (v71(v68, 1, v69))
    {
      v72 = sub_100006DA4(&qword_1000AD928);
      memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v67, v68, v69);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
    }
  }
  return v22;
}

uint64_t type metadata accessor for TTRNewWidgetViewModel(uint64_t a1)
{
  return sub_100007E80(a1, (uint64_t *)&unk_1000ADBF0, (uint64_t)&nominal type descriptor for TTRNewWidgetViewModel);
}

uint64_t sub_100020F70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  int *v6;
  id *v7;
  int *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  swift_bridgeObjectRelease(v5[1]);
  swift_bridgeObjectRelease(v5[4]);
  swift_bridgeObjectRelease(v5[7]);
  v6 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v7 = (id *)((char *)v5 + v6[9]);
  v8 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((_QWORD *)v8 - 1) + 48))(v7, 1, v8))
  {

    v9 = (char *)v7 + v8[6];
    v10 = type metadata accessor for AttributedString(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    v12 = (char *)v7 + v8[7];
    v13 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);

  }
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v5 + v6[11] + 8));

  swift_bridgeObjectRelease(*(_QWORD *)((char *)v5 + v6[13] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v5 + v6[14] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v5 + v6[16] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v5 + v6[17]));
  v14 = (char *)v5 + v6[18];
  v15 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v5 + v6[19]));
  v16 = a1 + *(int *)(a2 + 24);
  v17 = type metadata accessor for TimelineEntryRelevance(0);
  v18 = *(_QWORD *)(v17 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  return result;
}

uint64_t sub_100021194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  void **v15;
  int *v16;
  uint64_t v17;
  unsigned int (*v18)(void **, uint64_t, int *);
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void (*v34)(void **, _QWORD, uint64_t, int *);
  id v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  const void *v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int (*v68)(const void *, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v71;
  char *v72;
  void (*v73)(uint64_t, void *, uint64_t);
  char *v74;
  void *v75;
  uint64_t v76;
  void **__dst;
  void *__dsta;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v79 = a3;
  v80 = a2;
  v7 = *(int *)(a3 + 20);
  v81 = a1;
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(a2 + v7 + 16);
  v11 = *(_QWORD *)(a2 + v7 + 32);
  *(_QWORD *)(v8 + 32) = v11;
  *(_BYTE *)(v8 + 40) = *(_BYTE *)(a2 + v7 + 40);
  v12 = *(_QWORD *)(a2 + v7 + 56);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(a2 + v7 + 48);
  *(_QWORD *)(v8 + 56) = v12;
  v13 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v14 = v13[9];
  __dst = (void **)(v8 + v14);
  v15 = (void **)(v9 + v14);
  v16 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v17 = *((_QWORD *)v16 - 1);
  v18 = *(unsigned int (**)(void **, uint64_t, int *))(v17 + 48);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  if (v18(v15, 1, v16))
  {
    v19 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v20 = *v15;
    v21 = v15[1];
    *__dst = *v15;
    __dst[1] = v21;
    v22 = v16[6];
    v72 = (char *)v15 + v22;
    v74 = (char *)__dst + v22;
    v23 = type metadata accessor for AttributedString(0);
    v71 = *(_QWORD *)(v23 - 8);
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
    v25 = v20;
    v26 = v21;
    if (v24(v72, 1, v23))
    {
      v27 = sub_100006DA4(&qword_1000ACE10);
      memcpy(v74, v72, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v74, v72, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v74, 0, 1, v23);
    }
    v28 = v16[7];
    v29 = (char *)__dst + v28;
    v30 = (char *)v15 + v28;
    v31 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = v16[8];
    v33 = *(void **)((char *)v15 + v32);
    *(void **)((char *)__dst + v32) = v33;
    *(void **)((char *)__dst + v16[9]) = *(void **)((char *)v15 + v16[9]);
    *((_BYTE *)__dst + v16[10]) = *((_BYTE *)v15 + v16[10]);
    *((_BYTE *)__dst + v16[11]) = *((_BYTE *)v15 + v16[11]);
    v34 = *(void (**)(void **, _QWORD, uint64_t, int *))(v17 + 56);
    v35 = v33;
    v34(__dst, 0, 1, v16);
  }
  v36 = v13[10];
  __dsta = *(void **)(v9 + v36);
  *(_QWORD *)(v8 + v36) = __dsta;
  v37 = v13[11];
  v38 = (_QWORD *)(v8 + v37);
  v39 = (_QWORD *)(v9 + v37);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  v41 = v13[12];
  v42 = *(void **)(v9 + v41);
  *(_QWORD *)(v8 + v41) = v42;
  v43 = v13[13];
  v44 = (_QWORD *)(v8 + v43);
  v45 = (_QWORD *)(v9 + v43);
  v46 = v45[1];
  *v44 = *v45;
  v44[1] = v46;
  v47 = v13[14];
  v48 = (_QWORD *)(v8 + v47);
  v49 = (_QWORD *)(v9 + v47);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  *(_BYTE *)(v8 + v13[15]) = *(_BYTE *)(v9 + v13[15]);
  v51 = v13[16];
  v52 = (_QWORD *)(v8 + v51);
  v53 = (_QWORD *)(v9 + v51);
  v54 = v53[1];
  *v52 = *v53;
  v52[1] = v54;
  v55 = v13[17];
  v56 = *(_QWORD *)(v9 + v55);
  *(_QWORD *)(v8 + v55) = v56;
  v57 = v13[18];
  v75 = (void *)(v9 + v57);
  v76 = v8 + v57;
  v58 = type metadata accessor for URL(0);
  v73 = *(void (**)(uint64_t, void *, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
  v59 = __dsta;
  swift_bridgeObjectRetain(v40);
  v60 = v42;
  swift_bridgeObjectRetain(v46);
  swift_bridgeObjectRetain(v50);
  swift_bridgeObjectRetain(v54);
  swift_bridgeObjectRetain(v56);
  v73(v76, v75, v58);
  v61 = v13[19];
  v62 = *(_QWORD *)(v9 + v61);
  *(_QWORD *)(v8 + v61) = v62;
  *(_BYTE *)(v8 + v13[20]) = *(_BYTE *)(v9 + v13[20]);
  v63 = *(int *)(v79 + 24);
  v64 = (void *)(v81 + v63);
  v65 = (const void *)(v80 + v63);
  v66 = type metadata accessor for TimelineEntryRelevance(0);
  v67 = *(_QWORD *)(v66 - 8);
  v68 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v67 + 48);
  swift_bridgeObjectRetain(v62);
  if (v68(v65, 1, v66))
  {
    v69 = sub_100006DA4(&qword_1000AD928);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v67 + 16))(v64, v65, v66);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
  }
  return v81;
}

uint64_t sub_100021588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  int *v20;
  uint64_t v21;
  uint64_t (*v22)(_QWORD *, uint64_t, int *);
  int v23;
  int v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  int v44;
  size_t v45;
  void *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void (*v53)(_QWORD *, _QWORD, uint64_t, int *);
  id v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  id v62;
  uint64_t v63;
  void *v64;
  void *v65;
  id v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  void *v74;
  id v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(void *, uint64_t, uint64_t);
  int v107;
  uint64_t v108;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  unsigned int (*__src)(char *, uint64_t, uint64_t);
  char *__dst;
  void *__dsta;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v118 = a3;
  v119 = a2;
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  v11 = *(_QWORD *)(a1 + v7 + 8);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  v12 = *(_QWORD *)(v9 + 32);
  v13 = *(_QWORD *)(v8 + 32);
  *(_QWORD *)(v8 + 32) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  *(_BYTE *)(v8 + 40) = *(_BYTE *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
  v14 = *(_QWORD *)(v9 + 56);
  v15 = *(_QWORD *)(v8 + 56);
  *(_QWORD *)(v8 + 56) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  v16 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v17 = v16[9];
  v18 = (_QWORD *)(v8 + v17);
  v19 = (_QWORD *)(v9 + v17);
  v20 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v21 = *((_QWORD *)v20 - 1);
  v22 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (v24)
    {
      sub_100007EB4((uint64_t)v18, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    v117 = a1;
    v33 = (void *)*v19;
    v34 = (void *)*v18;
    *v18 = *v19;
    v35 = v33;

    v36 = (void *)v18[1];
    v37 = (void *)v19[1];
    v18[1] = v37;
    v38 = v37;

    v39 = v20[6];
    v40 = (char *)v18 + v39;
    v41 = (char *)v19 + v39;
    v42 = type metadata accessor for AttributedString(0);
    v112 = *(_QWORD *)(v42 - 8);
    v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v112 + 48);
    __dsta = v40;
    LODWORD(v40) = v43(v40, 1, v42);
    v44 = v43(v41, 1, v42);
    if ((_DWORD)v40)
    {
      if (!v44)
      {
        (*(void (**)(void *, char *, uint64_t))(v112 + 16))(__dsta, v41, v42);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v112 + 56))(__dsta, 0, 1, v42);
        goto LABEL_18;
      }
      v45 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v46 = __dsta;
    }
    else
    {
      if (!v44)
      {
        (*(void (**)(void *, char *, uint64_t))(v112 + 24))(__dsta, v41, v42);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v112 + 8))(__dsta, v42);
      v45 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v46 = __dsta;
    }
    memcpy(v46, v41, v45);
LABEL_18:
    v55 = v20[7];
    v56 = (char *)v18 + v55;
    v57 = (char *)v19 + v55;
    v58 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v56, v57, v58);
    v59 = v20[8];
    v60 = *(void **)((char *)v18 + v59);
    v61 = *(void **)((char *)v19 + v59);
    *(_QWORD *)((char *)v18 + v59) = v61;
    v62 = v61;

    *(_QWORD *)((char *)v18 + v20[9]) = *(_QWORD *)((char *)v19 + v20[9]);
    *((_BYTE *)v18 + v20[10]) = *((_BYTE *)v19 + v20[10]);
    *((_BYTE *)v18 + v20[11]) = *((_BYTE *)v19 + v20[11]);
    a1 = v117;
    goto LABEL_19;
  }
  if (v24)
  {
LABEL_7:
    v32 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  v25 = (void *)*v19;
  *v18 = *v19;
  v26 = (void *)v19[1];
  v18[1] = v26;
  v27 = v20[6];
  __dst = (char *)v18 + v27;
  v116 = a1;
  v111 = (char *)v19 + v27;
  v28 = type metadata accessor for AttributedString(0);
  v110 = *(_QWORD *)(v28 - 8);
  __src = *(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48);
  v29 = v25;
  v30 = v26;
  if (__src(v111, 1, v28))
  {
    v31 = sub_100006DA4(&qword_1000ACE10);
    memcpy(__dst, v111, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v110 + 16))(__dst, v111, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(__dst, 0, 1, v28);
  }
  a1 = v116;
  v47 = v20[7];
  v48 = (char *)v18 + v47;
  v49 = (char *)v19 + v47;
  v50 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = v20[8];
  v52 = *(void **)((char *)v19 + v51);
  *(_QWORD *)((char *)v18 + v51) = v52;
  *(_QWORD *)((char *)v18 + v20[9]) = *(_QWORD *)((char *)v19 + v20[9]);
  *((_BYTE *)v18 + v20[10]) = *((_BYTE *)v19 + v20[10]);
  *((_BYTE *)v18 + v20[11]) = *((_BYTE *)v19 + v20[11]);
  v53 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v21 + 56);
  v54 = v52;
  v53(v18, 0, 1, v20);
LABEL_19:
  v63 = v16[10];
  v64 = *(void **)(v9 + v63);
  v65 = *(void **)(v8 + v63);
  *(_QWORD *)(v8 + v63) = v64;
  v66 = v64;

  v67 = v16[11];
  v68 = (_QWORD *)(v8 + v67);
  v69 = (_QWORD *)(v9 + v67);
  *v68 = *v69;
  v70 = v69[1];
  v71 = v68[1];
  v68[1] = v70;
  swift_bridgeObjectRetain(v70);
  swift_bridgeObjectRelease(v71);
  v72 = v16[12];
  v73 = *(void **)(v8 + v72);
  v74 = *(void **)(v9 + v72);
  *(_QWORD *)(v8 + v72) = v74;
  v75 = v74;

  v76 = v16[13];
  v77 = (_QWORD *)(v8 + v76);
  v78 = (_QWORD *)(v9 + v76);
  *v77 = *v78;
  v79 = v78[1];
  v80 = v77[1];
  v77[1] = v79;
  swift_bridgeObjectRetain(v79);
  swift_bridgeObjectRelease(v80);
  v81 = v16[14];
  v82 = (_QWORD *)(v8 + v81);
  v83 = (_QWORD *)(v9 + v81);
  *v82 = *v83;
  v84 = v83[1];
  v85 = v82[1];
  v82[1] = v84;
  swift_bridgeObjectRetain(v84);
  swift_bridgeObjectRelease(v85);
  *(_BYTE *)(v8 + v16[15]) = *(_BYTE *)(v9 + v16[15]);
  v86 = v16[16];
  v87 = (_QWORD *)(v8 + v86);
  v88 = (_QWORD *)(v9 + v86);
  *v87 = *v88;
  v89 = v88[1];
  v90 = v87[1];
  v87[1] = v89;
  swift_bridgeObjectRetain(v89);
  swift_bridgeObjectRelease(v90);
  v91 = v16[17];
  v92 = *(_QWORD *)(v8 + v91);
  v93 = *(_QWORD *)(v9 + v91);
  *(_QWORD *)(v8 + v91) = v93;
  swift_bridgeObjectRetain(v93);
  swift_bridgeObjectRelease(v92);
  v94 = v16[18];
  v95 = v8 + v94;
  v96 = v9 + v94;
  v97 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 24))(v95, v96, v97);
  v98 = v16[19];
  v99 = *(_QWORD *)(v9 + v98);
  v100 = *(_QWORD *)(v8 + v98);
  *(_QWORD *)(v8 + v98) = v99;
  swift_bridgeObjectRetain(v99);
  swift_bridgeObjectRelease(v100);
  *(_BYTE *)(v8 + v16[20]) = *(_BYTE *)(v9 + v16[20]);
  v101 = *(int *)(v118 + 24);
  v102 = (void *)(a1 + v101);
  v103 = (void *)(v119 + v101);
  v104 = type metadata accessor for TimelineEntryRelevance(0);
  v105 = *(_QWORD *)(v104 - 8);
  v106 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v105 + 48);
  LODWORD(v100) = v106(v102, 1, v104);
  v107 = v106(v103, 1, v104);
  if (!(_DWORD)v100)
  {
    if (!v107)
    {
      (*(void (**)(void *, void *, uint64_t))(v105 + 24))(v102, v103, v104);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v105 + 8))(v102, v104);
    goto LABEL_24;
  }
  if (v107)
  {
LABEL_24:
    v108 = sub_100006DA4(&qword_1000AD928);
    memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v105 + 16))(v102, v103, v104);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
  return a1;
}

uint64_t sub_100021BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *__dst;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a2 + v7 + 24);
  *(_BYTE *)(v8 + 40) = *(_BYTE *)(a2 + v7 + 40);
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a2 + v7 + 48);
  v10 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v11 = v10[9];
  v12 = (_OWORD *)(v8 + v11);
  v13 = (_OWORD *)(v9 + v11);
  v14 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v15 = *((_QWORD *)v14 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v37 = a3;
    v38 = a2;
    *v12 = *v13;
    v17 = v14[6];
    v39 = a1;
    __dst = (char *)v12 + v17;
    v18 = (char *)v13 + v17;
    v19 = type metadata accessor for AttributedString(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = sub_100006DA4(&qword_1000ACE10);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    v22 = v14[7];
    v23 = (char *)v12 + v22;
    v24 = (char *)v13 + v22;
    v25 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
    *(_QWORD *)((char *)v12 + v14[8]) = *(_QWORD *)((char *)v13 + v14[8]);
    *(_QWORD *)((char *)v12 + v14[9]) = *(_QWORD *)((char *)v13 + v14[9]);
    *((_BYTE *)v12 + v14[10]) = *((_BYTE *)v13 + v14[10]);
    *((_BYTE *)v12 + v14[11]) = *((_BYTE *)v13 + v14[11]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
    a2 = v38;
    a1 = v39;
    a3 = v37;
  }
  *(_QWORD *)(v8 + v10[10]) = *(_QWORD *)(v9 + v10[10]);
  *(_OWORD *)(v8 + v10[11]) = *(_OWORD *)(v9 + v10[11]);
  *(_QWORD *)(v8 + v10[12]) = *(_QWORD *)(v9 + v10[12]);
  *(_OWORD *)(v8 + v10[13]) = *(_OWORD *)(v9 + v10[13]);
  *(_OWORD *)(v8 + v10[14]) = *(_OWORD *)(v9 + v10[14]);
  *(_BYTE *)(v8 + v10[15]) = *(_BYTE *)(v9 + v10[15]);
  *(_OWORD *)(v8 + v10[16]) = *(_OWORD *)(v9 + v10[16]);
  *(_QWORD *)(v8 + v10[17]) = *(_QWORD *)(v9 + v10[17]);
  v26 = v10[18];
  v27 = v8 + v26;
  v28 = v9 + v26;
  v29 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  *(_QWORD *)(v8 + v10[19]) = *(_QWORD *)(v9 + v10[19]);
  *(_BYTE *)(v8 + v10[20]) = *(_BYTE *)(v9 + v10[20]);
  v30 = *(int *)(a3 + 24);
  v31 = (void *)(a1 + v30);
  v32 = (const void *)(a2 + v30);
  v33 = type metadata accessor for TimelineEntryRelevance(0);
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    v35 = sub_100006DA4(&qword_1000AD928);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v34 + 32))(v31, v32, v33);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  return a1;
}

uint64_t sub_100021F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  int *v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD *, uint64_t, int *);
  int v22;
  int v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  size_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t (*v91)(void *, uint64_t, uint64_t);
  int v92;
  uint64_t v93;
  uint64_t v95;
  char *__dst;
  void *__dsta;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v100 = a3;
  v101 = a2;
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  v11 = *(_QWORD *)(a1 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease(v11);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(v9 + 16);
  v12 = *(_QWORD *)(v8 + 32);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  swift_bridgeObjectRelease(v12);
  *(_BYTE *)(v8 + 40) = *(_BYTE *)(v9 + 40);
  v13 = *(_QWORD *)(v9 + 56);
  v14 = *(_QWORD *)(v8 + 56);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v8 + 56) = v13;
  swift_bridgeObjectRelease(v14);
  v15 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v16 = v15[9];
  v17 = (_QWORD *)(v8 + v16);
  v18 = (_QWORD *)(v9 + v16);
  v19 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v20 = *((_QWORD *)v19 - 1);
  v21 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (v23)
    {
      sub_100007EB4((uint64_t)v17, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    v99 = a1;
    v30 = (void *)*v17;
    *v17 = *v18;

    v31 = (void *)v17[1];
    v17[1] = v18[1];

    v32 = v19[6];
    v33 = (char *)v17 + v32;
    v34 = (char *)v18 + v32;
    v35 = type metadata accessor for AttributedString(0);
    v95 = *(_QWORD *)(v35 - 8);
    v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 48);
    __dsta = v33;
    LODWORD(v33) = v36(v33, 1, v35);
    v37 = v36(v34, 1, v35);
    if ((_DWORD)v33)
    {
      if (!v37)
      {
        (*(void (**)(void *, char *, uint64_t))(v95 + 32))(__dsta, v34, v35);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v95 + 56))(__dsta, 0, 1, v35);
        goto LABEL_18;
      }
      v38 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v39 = __dsta;
    }
    else
    {
      if (!v37)
      {
        (*(void (**)(void *, char *, uint64_t))(v95 + 40))(__dsta, v34, v35);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v95 + 8))(__dsta, v35);
      v38 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v39 = __dsta;
    }
    memcpy(v39, v34, v38);
LABEL_18:
    v44 = v19[7];
    v45 = (char *)v17 + v44;
    v46 = (char *)v18 + v44;
    v47 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 40))(v45, v46, v47);
    v48 = v19[8];
    v49 = *(void **)((char *)v17 + v48);
    *(_QWORD *)((char *)v17 + v48) = *(_QWORD *)((char *)v18 + v48);

    *(_QWORD *)((char *)v17 + v19[9]) = *(_QWORD *)((char *)v18 + v19[9]);
    *((_BYTE *)v17 + v19[10]) = *((_BYTE *)v18 + v19[10]);
    *((_BYTE *)v17 + v19[11]) = *((_BYTE *)v18 + v19[11]);
    a1 = v99;
    goto LABEL_19;
  }
  if (v23)
  {
LABEL_7:
    v29 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  *(_OWORD *)v17 = *(_OWORD *)v18;
  v24 = v19[6];
  __dst = (char *)v17 + v24;
  v98 = a1;
  v25 = (char *)v18 + v24;
  v26 = type metadata accessor for AttributedString(0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = sub_100006DA4(&qword_1000ACE10);
    memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(__dst, v25, v26);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
  }
  a1 = v98;
  v40 = v19[7];
  v41 = (char *)v17 + v40;
  v42 = (char *)v18 + v40;
  v43 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
  *(_QWORD *)((char *)v17 + v19[8]) = *(_QWORD *)((char *)v18 + v19[8]);
  *(_QWORD *)((char *)v17 + v19[9]) = *(_QWORD *)((char *)v18 + v19[9]);
  *((_BYTE *)v17 + v19[10]) = *((_BYTE *)v18 + v19[10]);
  *((_BYTE *)v17 + v19[11]) = *((_BYTE *)v18 + v19[11]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
LABEL_19:
  v50 = v15[10];
  v51 = *(void **)(v8 + v50);
  *(_QWORD *)(v8 + v50) = *(_QWORD *)(v9 + v50);

  v52 = v15[11];
  v53 = (_QWORD *)(v8 + v52);
  v54 = (uint64_t *)(v9 + v52);
  v56 = *v54;
  v55 = v54[1];
  v57 = v53[1];
  *v53 = v56;
  v53[1] = v55;
  swift_bridgeObjectRelease(v57);
  v58 = v15[12];
  v59 = *(void **)(v8 + v58);
  *(_QWORD *)(v8 + v58) = *(_QWORD *)(v9 + v58);

  v60 = v15[13];
  v61 = (_QWORD *)(v8 + v60);
  v62 = (uint64_t *)(v9 + v60);
  v64 = *v62;
  v63 = v62[1];
  v65 = v61[1];
  *v61 = v64;
  v61[1] = v63;
  swift_bridgeObjectRelease(v65);
  v66 = v15[14];
  v67 = (_QWORD *)(v8 + v66);
  v68 = (uint64_t *)(v9 + v66);
  v70 = *v68;
  v69 = v68[1];
  v71 = v67[1];
  *v67 = v70;
  v67[1] = v69;
  swift_bridgeObjectRelease(v71);
  *(_BYTE *)(v8 + v15[15]) = *(_BYTE *)(v9 + v15[15]);
  v72 = v15[16];
  v73 = (_QWORD *)(v8 + v72);
  v74 = (uint64_t *)(v9 + v72);
  v76 = *v74;
  v75 = v74[1];
  v77 = v73[1];
  *v73 = v76;
  v73[1] = v75;
  swift_bridgeObjectRelease(v77);
  v78 = v15[17];
  v79 = *(_QWORD *)(v8 + v78);
  *(_QWORD *)(v8 + v78) = *(_QWORD *)(v9 + v78);
  swift_bridgeObjectRelease(v79);
  v80 = v15[18];
  v81 = v8 + v80;
  v82 = v9 + v80;
  v83 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 40))(v81, v82, v83);
  v84 = v15[19];
  v85 = *(_QWORD *)(v8 + v84);
  *(_QWORD *)(v8 + v84) = *(_QWORD *)(v9 + v84);
  swift_bridgeObjectRelease(v85);
  *(_BYTE *)(v8 + v15[20]) = *(_BYTE *)(v9 + v15[20]);
  v86 = *(int *)(v100 + 24);
  v87 = (void *)(a1 + v86);
  v88 = (void *)(v101 + v86);
  v89 = type metadata accessor for TimelineEntryRelevance(0);
  v90 = *(_QWORD *)(v89 - 8);
  v91 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v90 + 48);
  LODWORD(v81) = v91(v87, 1, v89);
  v92 = v91(v88, 1, v89);
  if (!(_DWORD)v81)
  {
    if (!v92)
    {
      (*(void (**)(void *, void *, uint64_t))(v90 + 40))(v87, v88, v89);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v90 + 8))(v87, v89);
    goto LABEL_24;
  }
  if (v92)
  {
LABEL_24:
    v93 = sub_100006DA4(&qword_1000AD928);
    memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v90 + 32))(v87, v88, v89);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
  return a1;
}

uint64_t sub_1000224F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000224FC);
}

uint64_t sub_1000224FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = type metadata accessor for TTRNewWidgetViewModel(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = sub_100006DA4(&qword_1000AD928);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100022598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000225A4);
}

uint64_t sub_1000225A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = type metadata accessor for TTRNewWidgetViewModel(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_100006DA4(&qword_1000AD928);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for TTRNewWidgetTimelineEntry(uint64_t a1)
{
  return sub_100007E80(a1, (uint64_t *)&unk_1000ADB50, (uint64_t)&nominal type descriptor for TTRNewWidgetTimelineEntry);
}

void sub_10002265C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[3];

  v2 = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for TTRNewWidgetViewModel(319);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_10002270C(319, (unint64_t *)&qword_1000ADB60, (uint64_t (*)(uint64_t))&type metadata accessor for TimelineEntryRelevance);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 3, v8, a1 + 16);
      }
    }
  }
}

void sub_10002270C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

_QWORD *sub_100022758(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void **v11;
  int *v12;
  uint64_t v13;
  unsigned int (*v14)(void **, uint64_t, int *);
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void (*v31)(void **, _QWORD, uint64_t, int *);
  id v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  char *v65;
  void (*v66)(char *, uint64_t, uint64_t);
  char *v67;
  char *v68;
  uint64_t v69;
  void **__dst;
  void *__dsta;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    v8 = a2[4];
    *(_QWORD *)(a1 + 32) = v8;
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v9 = a2[7];
    v10 = a3[9];
    __dst = (void **)(a1 + v10);
    v11 = (void **)((char *)a2 + v10);
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v9;
    v12 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    v13 = *((_QWORD *)v12 - 1);
    v14 = *(unsigned int (**)(void **, uint64_t, int *))(v13 + 48);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    if (v14(v11, 1, v12))
    {
      v15 = sub_100006DA4(&qword_1000ACCD8);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v18 = *v11;
      v17 = v11[1];
      *__dst = *v11;
      __dst[1] = v17;
      v19 = v12[6];
      v65 = (char *)__dst + v19;
      v68 = (char *)v11 + v19;
      v20 = type metadata accessor for AttributedString(0);
      v64 = *(_QWORD *)(v20 - 8);
      v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
      v22 = v18;
      v23 = v17;
      if (v21(v68, 1, v20))
      {
        v24 = sub_100006DA4(&qword_1000ACE10);
        memcpy(v65, v68, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v65, v68, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v65, 0, 1, v20);
      }
      v25 = v12[7];
      v26 = (char *)__dst + v25;
      v27 = (char *)v11 + v25;
      v28 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      v29 = v12[8];
      v30 = *(void **)((char *)v11 + v29);
      *(void **)((char *)__dst + v29) = v30;
      *(void **)((char *)__dst + v12[9]) = *(void **)((char *)v11 + v12[9]);
      *((_BYTE *)__dst + v12[10]) = *((_BYTE *)v11 + v12[10]);
      *((_BYTE *)__dst + v12[11]) = *((_BYTE *)v11 + v12[11]);
      v31 = *(void (**)(void **, _QWORD, uint64_t, int *))(v13 + 56);
      v32 = v30;
      v31(__dst, 0, 1, v12);
    }
    v33 = a3[10];
    v34 = a3[11];
    __dsta = *(void **)((char *)a2 + v33);
    *(_QWORD *)((char *)v4 + v33) = __dsta;
    v35 = (_QWORD *)((char *)v4 + v34);
    v36 = (uint64_t *)((char *)a2 + v34);
    v37 = *v36;
    v38 = v36[1];
    v39 = a3[12];
    v40 = a3[13];
    v41 = *(void **)((char *)a2 + v39);
    *v35 = v37;
    v35[1] = v38;
    *(_QWORD *)((char *)v4 + v39) = v41;
    v42 = (_QWORD *)((char *)v4 + v40);
    v43 = *(uint64_t *)((char *)a2 + v40 + 8);
    *v42 = *(uint64_t *)((char *)a2 + v40);
    v42[1] = v43;
    v44 = a3[14];
    v45 = a3[15];
    v46 = (_QWORD *)((char *)v4 + v44);
    v47 = (uint64_t *)((char *)a2 + v44);
    v48 = *v47;
    v49 = v47[1];
    LOBYTE(v47) = *((_BYTE *)a2 + v45);
    *v46 = v48;
    v46[1] = v49;
    *((_BYTE *)v4 + v45) = (_BYTE)v47;
    v50 = a3[16];
    v51 = a3[17];
    v52 = (_QWORD *)((char *)v4 + v50);
    v53 = (uint64_t *)((char *)a2 + v50);
    v54 = v53[1];
    v55 = *(uint64_t *)((char *)a2 + v51);
    *v52 = *v53;
    v52[1] = v54;
    *(_QWORD *)((char *)v4 + v51) = v55;
    v56 = a3[18];
    v67 = (char *)v4 + v56;
    v69 = (uint64_t)a2 + v56;
    v57 = type metadata accessor for URL(0);
    v66 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
    v58 = __dsta;
    swift_bridgeObjectRetain(v38);
    v59 = v41;
    swift_bridgeObjectRetain(v43);
    swift_bridgeObjectRetain(v49);
    swift_bridgeObjectRetain(v54);
    swift_bridgeObjectRetain(v55);
    v66(v67, v69, v57);
    v60 = a3[19];
    v61 = a3[20];
    v62 = *(uint64_t *)((char *)a2 + v60);
    *(_QWORD *)((char *)v4 + v60) = v62;
    *((_BYTE *)v4 + v61) = *((_BYTE *)a2 + v61);
    swift_bridgeObjectRetain(v62);
  }
  return v4;
}

uint64_t sub_100022A94(_QWORD *a1, int *a2)
{
  id *v4;
  int *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[4]);
  swift_bridgeObjectRelease(a1[7]);
  v4 = (id *)((char *)a1 + a2[9]);
  v5 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48))(v4, 1, v5))
  {

    v6 = (char *)v4 + v5[6];
    v7 = type metadata accessor for AttributedString(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    v9 = (char *)v4 + v5[7];
    v10 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);

  }
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[11] + 8));

  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[13] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[14] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[16] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[17]));
  v11 = (char *)a1 + a2[18];
  v12 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  return swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[19]));
}

uint64_t sub_100022C24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(void **, uint64_t, int *);
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void (*v29)(void **, _QWORD, uint64_t, int *);
  id v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  char *v63;
  void (*v64)(void *, uint64_t, uint64_t);
  char *v65;
  void *v66;
  uint64_t v67;
  void **__dst;
  void *__dsta;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = a3[9];
  __dst = (void **)(a1 + v9);
  v10 = (void **)(a2 + v9);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  v11 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(unsigned int (**)(void **, uint64_t, int *))(v12 + 48);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  if (v13(v10, 1, v11))
  {
    v14 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v16 = *v10;
    v15 = v10[1];
    *__dst = *v10;
    __dst[1] = v15;
    v17 = v11[6];
    v63 = (char *)v10 + v17;
    v65 = (char *)__dst + v17;
    v18 = type metadata accessor for AttributedString(0);
    v62 = *(_QWORD *)(v18 - 8);
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
    v20 = v16;
    v21 = v15;
    if (v19(v63, 1, v18))
    {
      v22 = sub_100006DA4(&qword_1000ACE10);
      memcpy(v65, v63, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v65, v63, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v65, 0, 1, v18);
    }
    v23 = v11[7];
    v24 = (char *)__dst + v23;
    v25 = (char *)v10 + v23;
    v26 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
    v27 = v11[8];
    v28 = *(void **)((char *)v10 + v27);
    *(void **)((char *)__dst + v27) = v28;
    *(void **)((char *)__dst + v11[9]) = *(void **)((char *)v10 + v11[9]);
    *((_BYTE *)__dst + v11[10]) = *((_BYTE *)v10 + v11[10]);
    *((_BYTE *)__dst + v11[11]) = *((_BYTE *)v10 + v11[11]);
    v29 = *(void (**)(void **, _QWORD, uint64_t, int *))(v12 + 56);
    v30 = v28;
    v29(__dst, 0, 1, v11);
  }
  v31 = a3[10];
  v32 = a3[11];
  __dsta = *(void **)(a2 + v31);
  *(_QWORD *)(a1 + v31) = __dsta;
  v33 = (_QWORD *)(a1 + v32);
  v34 = (uint64_t *)(a2 + v32);
  v35 = *v34;
  v36 = v34[1];
  v37 = a3[12];
  v38 = a3[13];
  v39 = *(void **)(a2 + v37);
  *v33 = v35;
  v33[1] = v36;
  *(_QWORD *)(a1 + v37) = v39;
  v40 = (_QWORD *)(a1 + v38);
  v41 = *(_QWORD *)(a2 + v38 + 8);
  *v40 = *(_QWORD *)(a2 + v38);
  v40[1] = v41;
  v42 = a3[14];
  v43 = a3[15];
  v44 = (_QWORD *)(a1 + v42);
  v45 = (uint64_t *)(a2 + v42);
  v46 = *v45;
  v47 = v45[1];
  LOBYTE(v45) = *(_BYTE *)(a2 + v43);
  *v44 = v46;
  v44[1] = v47;
  *(_BYTE *)(a1 + v43) = (_BYTE)v45;
  v48 = a3[16];
  v49 = a3[17];
  v50 = (_QWORD *)(a1 + v48);
  v51 = (_QWORD *)(a2 + v48);
  v52 = v51[1];
  v53 = *(_QWORD *)(a2 + v49);
  *v50 = *v51;
  v50[1] = v52;
  *(_QWORD *)(a1 + v49) = v53;
  v54 = a3[18];
  v66 = (void *)(a1 + v54);
  v67 = a2 + v54;
  v55 = type metadata accessor for URL(0);
  v64 = *(void (**)(void *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
  v56 = __dsta;
  swift_bridgeObjectRetain(v36);
  v57 = v39;
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRetain(v47);
  swift_bridgeObjectRetain(v52);
  swift_bridgeObjectRetain(v53);
  v64(v66, v67, v55);
  v58 = a3[19];
  v59 = a3[20];
  v60 = *(_QWORD *)(a2 + v58);
  *(_QWORD *)(a1 + v58) = v60;
  *(_BYTE *)(a1 + v59) = *(_BYTE *)(a2 + v59);
  swift_bridgeObjectRetain(v60);
  return a1;
}

uint64_t sub_100022F34(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  int *v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD *, uint64_t, int *);
  int v18;
  int v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  int v39;
  size_t v40;
  void *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void (*v48)(_QWORD *, _QWORD, uint64_t, int *);
  id v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  id v57;
  uint64_t v58;
  void *v59;
  void *v60;
  id v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  id v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  unsigned int (*__src)(char *, uint64_t, uint64_t);
  char *__dst;
  void *__dsta;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = a3[9];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v16 = *((_QWORD *)v15 - 1);
  v17 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (v19)
    {
      sub_100007EB4((uint64_t)v13, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    v28 = (void *)*v14;
    v29 = (void *)*v13;
    *v13 = *v14;
    v30 = v28;

    v31 = (void *)v13[1];
    v32 = (void *)v14[1];
    v13[1] = v32;
    v33 = v32;

    v34 = v15[6];
    v35 = (char *)v13 + v34;
    v36 = (char *)v14 + v34;
    v37 = type metadata accessor for AttributedString(0);
    v99 = *(_QWORD *)(v37 - 8);
    v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v99 + 48);
    __dsta = v35;
    LODWORD(v35) = v38(v35, 1, v37);
    v39 = v38(v36, 1, v37);
    if ((_DWORD)v35)
    {
      if (!v39)
      {
        (*(void (**)(void *, char *, uint64_t))(v99 + 16))(__dsta, v36, v37);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v99 + 56))(__dsta, 0, 1, v37);
        goto LABEL_18;
      }
      v40 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v41 = __dsta;
    }
    else
    {
      if (!v39)
      {
        (*(void (**)(void *, char *, uint64_t))(v99 + 24))(__dsta, v36, v37);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v99 + 8))(__dsta, v37);
      v40 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v41 = __dsta;
    }
    memcpy(v41, v36, v40);
LABEL_18:
    v50 = v15[7];
    v51 = (char *)v13 + v50;
    v52 = (char *)v14 + v50;
    v53 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 24))(v51, v52, v53);
    v54 = v15[8];
    v55 = *(void **)((char *)v13 + v54);
    v56 = *(void **)((char *)v14 + v54);
    *(_QWORD *)((char *)v13 + v54) = v56;
    v57 = v56;

    *(_QWORD *)((char *)v13 + v15[9]) = *(_QWORD *)((char *)v14 + v15[9]);
    *((_BYTE *)v13 + v15[10]) = *((_BYTE *)v14 + v15[10]);
    *((_BYTE *)v13 + v15[11]) = *((_BYTE *)v14 + v15[11]);
    goto LABEL_19;
  }
  if (v19)
  {
LABEL_7:
    v27 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  v20 = (void *)*v14;
  *v13 = *v14;
  v21 = (void *)v14[1];
  v13[1] = v21;
  v22 = v15[6];
  __dst = (char *)v13 + v22;
  v98 = (char *)v14 + v22;
  v23 = type metadata accessor for AttributedString(0);
  v97 = *(_QWORD *)(v23 - 8);
  __src = *(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48);
  v24 = v20;
  v25 = v21;
  if (__src(v98, 1, v23))
  {
    v26 = sub_100006DA4(&qword_1000ACE10);
    memcpy(__dst, v98, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v97 + 16))(__dst, v98, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(__dst, 0, 1, v23);
  }
  v42 = v15[7];
  v43 = (char *)v13 + v42;
  v44 = (char *)v14 + v42;
  v45 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
  v46 = v15[8];
  v47 = *(void **)((char *)v14 + v46);
  *(_QWORD *)((char *)v13 + v46) = v47;
  *(_QWORD *)((char *)v13 + v15[9]) = *(_QWORD *)((char *)v14 + v15[9]);
  *((_BYTE *)v13 + v15[10]) = *((_BYTE *)v14 + v15[10]);
  *((_BYTE *)v13 + v15[11]) = *((_BYTE *)v14 + v15[11]);
  v48 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v16 + 56);
  v49 = v47;
  v48(v13, 0, 1, v15);
LABEL_19:
  v58 = a3[10];
  v59 = *(void **)(a2 + v58);
  v60 = *(void **)(a1 + v58);
  *(_QWORD *)(a1 + v58) = v59;
  v61 = v59;

  v62 = a3[11];
  v63 = (_QWORD *)(a1 + v62);
  v64 = (_QWORD *)(a2 + v62);
  *v63 = *v64;
  v65 = v64[1];
  v66 = v63[1];
  v63[1] = v65;
  swift_bridgeObjectRetain(v65);
  swift_bridgeObjectRelease(v66);
  v67 = a3[12];
  v68 = *(void **)(a1 + v67);
  v69 = *(void **)(a2 + v67);
  *(_QWORD *)(a1 + v67) = v69;
  v70 = v69;

  v71 = a3[13];
  v72 = (_QWORD *)(a1 + v71);
  v73 = (_QWORD *)(a2 + v71);
  *v72 = *v73;
  v74 = v73[1];
  v75 = v72[1];
  v72[1] = v74;
  swift_bridgeObjectRetain(v74);
  swift_bridgeObjectRelease(v75);
  v76 = a3[14];
  v77 = (_QWORD *)(a1 + v76);
  v78 = (_QWORD *)(a2 + v76);
  *v77 = *v78;
  v79 = v78[1];
  v80 = v77[1];
  v77[1] = v79;
  swift_bridgeObjectRetain(v79);
  swift_bridgeObjectRelease(v80);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v81 = a3[16];
  v82 = (_QWORD *)(a1 + v81);
  v83 = (_QWORD *)(a2 + v81);
  *v82 = *v83;
  v84 = v83[1];
  v85 = v82[1];
  v82[1] = v84;
  swift_bridgeObjectRetain(v84);
  swift_bridgeObjectRelease(v85);
  v86 = a3[17];
  v87 = *(_QWORD *)(a1 + v86);
  v88 = *(_QWORD *)(a2 + v86);
  *(_QWORD *)(a1 + v86) = v88;
  swift_bridgeObjectRetain(v88);
  swift_bridgeObjectRelease(v87);
  v89 = a3[18];
  v90 = a1 + v89;
  v91 = a2 + v89;
  v92 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 24))(v90, v91, v92);
  v93 = a3[19];
  v94 = *(_QWORD *)(a2 + v93);
  v95 = *(_QWORD *)(a1 + v93);
  *(_QWORD *)(a1 + v93) = v94;
  swift_bridgeObjectRetain(v94);
  swift_bridgeObjectRelease(v95);
  *(_BYTE *)(a1 + a3[20]) = *(_BYTE *)(a2 + a3[20]);
  return a1;
}

uint64_t sub_100023494(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *__dst;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v6 = a3[9];
  v7 = (_OWORD *)(a1 + v6);
  v8 = (_OWORD *)(a2 + v6);
  v9 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v12 = v9[6];
    __dst = (char *)v7 + v12;
    v13 = (char *)v8 + v12;
    v14 = type metadata accessor for AttributedString(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = sub_100006DA4(&qword_1000ACE10);
      memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(__dst, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    v17 = v9[7];
    v18 = (char *)v7 + v17;
    v19 = (char *)v8 + v17;
    v20 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    *(_QWORD *)((char *)v7 + v9[8]) = *(_QWORD *)((char *)v8 + v9[8]);
    *(_QWORD *)((char *)v7 + v9[9]) = *(_QWORD *)((char *)v8 + v9[9]);
    *((_BYTE *)v7 + v9[10]) = *((_BYTE *)v8 + v9[10]);
    *((_BYTE *)v7 + v9[11]) = *((_BYTE *)v8 + v9[11]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  v21 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  v22 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v22) = *(_OWORD *)(a2 + v22);
  v23 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
  v24 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);
  v25 = a3[18];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
  v29 = a3[20];
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  *(_BYTE *)(a1 + v29) = *(_BYTE *)(a2 + v29);
  return a1;
}

uint64_t sub_1000236F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  int *v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD *, uint64_t, int *);
  int v17;
  int v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  size_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  char *__dst;
  void *__dsta;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v8);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease(v10);
  v11 = a3[9];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v15 = *((_QWORD *)v14 - 1);
  v16 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (v18)
    {
      sub_100007EB4((uint64_t)v12, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    v25 = (void *)*v12;
    *v12 = *v13;

    v26 = (void *)v12[1];
    v12[1] = v13[1];

    v27 = v14[6];
    v28 = (char *)v12 + v27;
    v29 = (char *)v13 + v27;
    v30 = type metadata accessor for AttributedString(0);
    v82 = *(_QWORD *)(v30 - 8);
    v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v82 + 48);
    __dsta = v28;
    LODWORD(v28) = v31(v28, 1, v30);
    v32 = v31(v29, 1, v30);
    if ((_DWORD)v28)
    {
      if (!v32)
      {
        (*(void (**)(void *, char *, uint64_t))(v82 + 32))(__dsta, v29, v30);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v82 + 56))(__dsta, 0, 1, v30);
        goto LABEL_18;
      }
      v33 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v34 = __dsta;
    }
    else
    {
      if (!v32)
      {
        (*(void (**)(void *, char *, uint64_t))(v82 + 40))(__dsta, v29, v30);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v82 + 8))(__dsta, v30);
      v33 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v34 = __dsta;
    }
    memcpy(v34, v29, v33);
LABEL_18:
    v39 = v14[7];
    v40 = (char *)v12 + v39;
    v41 = (char *)v13 + v39;
    v42 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
    v43 = v14[8];
    v44 = *(void **)((char *)v12 + v43);
    *(_QWORD *)((char *)v12 + v43) = *(_QWORD *)((char *)v13 + v43);

    *(_QWORD *)((char *)v12 + v14[9]) = *(_QWORD *)((char *)v13 + v14[9]);
    *((_BYTE *)v12 + v14[10]) = *((_BYTE *)v13 + v14[10]);
    *((_BYTE *)v12 + v14[11]) = *((_BYTE *)v13 + v14[11]);
    goto LABEL_19;
  }
  if (v18)
  {
LABEL_7:
    v24 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_19;
  }
  *(_OWORD *)v12 = *(_OWORD *)v13;
  v19 = v14[6];
  __dst = (char *)v12 + v19;
  v20 = (char *)v13 + v19;
  v21 = type metadata accessor for AttributedString(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = sub_100006DA4(&qword_1000ACE10);
    memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(__dst, v20, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
  }
  v35 = v14[7];
  v36 = (char *)v12 + v35;
  v37 = (char *)v13 + v35;
  v38 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  *(_QWORD *)((char *)v12 + v14[8]) = *(_QWORD *)((char *)v13 + v14[8]);
  *(_QWORD *)((char *)v12 + v14[9]) = *(_QWORD *)((char *)v13 + v14[9]);
  *((_BYTE *)v12 + v14[10]) = *((_BYTE *)v13 + v14[10]);
  *((_BYTE *)v12 + v14[11]) = *((_BYTE *)v13 + v14[11]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
LABEL_19:
  v45 = a3[10];
  v46 = *(void **)(a1 + v45);
  *(_QWORD *)(a1 + v45) = *(_QWORD *)(a2 + v45);

  v47 = a3[11];
  v48 = (_QWORD *)(a1 + v47);
  v49 = (uint64_t *)(a2 + v47);
  v51 = *v49;
  v50 = v49[1];
  v52 = v48[1];
  *v48 = v51;
  v48[1] = v50;
  swift_bridgeObjectRelease(v52);
  v53 = a3[12];
  v54 = *(void **)(a1 + v53);
  *(_QWORD *)(a1 + v53) = *(_QWORD *)(a2 + v53);

  v55 = a3[13];
  v56 = (_QWORD *)(a1 + v55);
  v57 = (uint64_t *)(a2 + v55);
  v59 = *v57;
  v58 = v57[1];
  v60 = v56[1];
  *v56 = v59;
  v56[1] = v58;
  swift_bridgeObjectRelease(v60);
  v61 = a3[14];
  v62 = (_QWORD *)(a1 + v61);
  v63 = (uint64_t *)(a2 + v61);
  v65 = *v63;
  v64 = v63[1];
  v66 = v62[1];
  *v62 = v65;
  v62[1] = v64;
  swift_bridgeObjectRelease(v66);
  v67 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v68 = (_QWORD *)(a1 + v67);
  v69 = (uint64_t *)(a2 + v67);
  v71 = *v69;
  v70 = v69[1];
  v72 = v68[1];
  *v68 = v71;
  v68[1] = v70;
  swift_bridgeObjectRelease(v72);
  v73 = a3[17];
  v74 = *(_QWORD *)(a1 + v73);
  *(_QWORD *)(a1 + v73) = *(_QWORD *)(a2 + v73);
  swift_bridgeObjectRelease(v74);
  v75 = a3[18];
  v76 = a1 + v75;
  v77 = a2 + v75;
  v78 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 40))(v76, v77, v78);
  v79 = a3[19];
  v80 = *(_QWORD *)(a1 + v79);
  *(_QWORD *)(a1 + v79) = *(_QWORD *)(a2 + v79);
  swift_bridgeObjectRelease(v80);
  *(_BYTE *)(a1 + a3[20]) = *(_BYTE *)(a2 + a3[20]);
  return a1;
}

uint64_t sub_100023B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100023BA0);
}

uint64_t sub_100023BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100006DA4(&qword_1000ACCD8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 36);
    }
    else
    {
      v10 = type metadata accessor for URL(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 72);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_100023C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100023C50);
}

uint64_t sub_100023C50(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_100006DA4(&qword_1000ACCD8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 36);
    }
    else
    {
      v10 = type metadata accessor for URL(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 72);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_100023CF0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[17];

  v6[0] = &unk_100089FB8;
  v6[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[2] = &unk_100089FB8;
  v6[3] = &unk_100089FD0;
  v6[4] = &unk_100089FB8;
  sub_10002270C(319, (unint64_t *)&unk_1000ADC00, type metadata accessor for TTRNewWidgetViewModel.Reminder);
  if (v3 <= 0x3F)
  {
    v6[5] = *(_QWORD *)(v2 - 8) + 64;
    v6[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[7] = &unk_100089FE8;
    v6[8] = "\b";
    v6[9] = &unk_100089FE8;
    v6[10] = &unk_100089FE8;
    v6[11] = &unk_100089F60;
    v6[12] = &unk_100089FE8;
    v6[13] = "\b";
    v4 = type metadata accessor for URL(319);
    if (v5 <= 0x3F)
    {
      v6[14] = *(_QWORD *)(v4 - 8) + 64;
      v6[15] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[16] = &unk_10008A000;
      swift_initStructMetadata(a1, 256, 17, v6, a1 + 16);
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for TTRNewWidgetViewModel.ShareeIcon(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  return a1;
}

void destroy for TTRNewWidgetViewModel.ShareeIcon(id *a1)
{

}

uint64_t assignWithCopy for TTRNewWidgetViewModel.ShareeIcon(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for TTRNewWidgetViewModel.ShareeIcon(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for TTRNewWidgetViewModel.ShareeIcon()
{
  return &type metadata for TTRNewWidgetViewModel.ShareeIcon;
}

uint64_t getEnumTagSinglePayload for TTRNewWidgetPresenter.DisplayDateStyle.TimeOfDayStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRNewWidgetViewModel.BadgeShape(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100023F9C + 4 * byte_100089F35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100023FD0 + 4 * byte_100089F30[v4]))();
}

uint64_t sub_100023FD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100023FD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100023FE0);
  return result;
}

uint64_t sub_100023FEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100023FF4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100023FF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100024000(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_10002400C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for TTRNewWidgetViewModel.BadgeShape()
{
  return &type metadata for TTRNewWidgetViewModel.BadgeShape;
}

unint64_t sub_10002402C()
{
  unint64_t result;

  result = qword_1000ADC70;
  if (!qword_1000ADC70)
  {
    result = swift_getWitnessTable(&unk_10008A0C8, &type metadata for TTRNewWidgetViewModel.BadgeShape);
    atomic_store(result, (unint64_t *)&qword_1000ADC70);
  }
  return result;
}

unint64_t sub_100024070()
{
  unint64_t result;

  result = qword_1000ADC88;
  if (!qword_1000ADC88)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1000ADC88);
  }
  return result;
}

unint64_t sub_1000240B4()
{
  unint64_t result;

  result = qword_1000ADC90;
  if (!qword_1000ADC90)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1000ADC90);
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRAnyListWidget()
{
  return &type metadata for TTRAnyListWidget;
}

uint64_t sub_10002410C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100092A6C, 1);
}

double sub_10002411C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100024180(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveReminderView, (void (*)(uint64_t, uint64_t, uint64_t))sub_1000072AC, &qword_1000AD498).n128_u64[0];
  return result;
}

__n128 sub_100024180@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, void (*a17)(uint64_t, uint64_t, uint64_t), uint64_t *a18)
{
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v34;
  double v35;
  double v36;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __n128 result;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  double v49;
  double v50;
  double v51;
  double v52;
  _OWORD v53[7];

  v19 = a9;
  v20 = a17;
  v21 = a18;
  v22 = a15;
  v23 = a14;
  v24 = a12;
  v25 = a10;
  v26 = a2 & 1;
  v27 = a1;
  if ((_DWORD)v26)
    v27 = -INFINITY;
  v28 = a4 & 1;
  v29 = a3;
  if ((_DWORD)v28)
    v29 = v27;
  v30 = a6 & 1;
  v31 = a8 & 1;
  v32 = a5;
  if ((a6 & 1) != 0)
    v32 = v29;
  if (v27 > v29 || v29 > v32)
    goto LABEL_22;
  v34 = a7;
  if ((_DWORD)v31)
    v34 = -INFINITY;
  v35 = a10;
  if ((a11 & 1) != 0)
    v35 = v34;
  v36 = a12;
  if ((a13 & 1) != 0)
    v36 = v35;
  if (v34 > v35 || v35 > v36)
  {
LABEL_22:
    v51 = a5;
    v52 = a7;
    v49 = a1;
    v50 = a3;
    v47 = v28;
    v48 = v26;
    v46 = v31;
    v39 = static os_log_type_t.fault.getter();
    v40 = (void *)static Log.runtimeIssuesLog.getter();
    v41 = v39;
    v19 = a9;
    os_log(_:dso:log:_:_:)(v41, &_mh_execute_header, v40, "Contradictory frame constraints specified.", 42, 2, &_swiftEmptyArrayStorage);

    v31 = v46;
    v28 = v47;
    v26 = v48;
    v23 = a14;
    v22 = a15;
    v24 = a12;
    v25 = a10;
    a1 = v49;
    a3 = v50;
    a5 = v51;
    a7 = v52;
    v21 = a18;
    v20 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v53, *(_QWORD *)&a1, v26, *(_QWORD *)&a3, v28, *(_QWORD *)&a5, v30, *(_QWORD *)&a7, v31, *(_QWORD *)&v25, a11 & 1, *(_QWORD *)&v24, a13 & 1, v23, v22);
  v20(v18, v19, a16);
  v42 = v19 + *(int *)(sub_100006DA4(v21) + 36);
  v43 = v53[5];
  *(_OWORD *)(v42 + 64) = v53[4];
  *(_OWORD *)(v42 + 80) = v43;
  *(_OWORD *)(v42 + 96) = v53[6];
  v44 = v53[1];
  *(_OWORD *)v42 = v53[0];
  *(_OWORD *)(v42 + 16) = v44;
  result = (__n128)v53[3];
  *(_OWORD *)(v42 + 32) = v53[2];
  *(__n128 *)(v42 + 48) = result;
  return result;
}

_QWORD *sub_10002435C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v43 = a5;
    v44 = a7;
    v42 = a3;
    v41 = a1;
    v40 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v17 = a15;
    v20 = v40;
    v19 = a10;
    a1 = v41;
    a3 = v42;
    v18 = a12;
    a5 = v43;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = *(_OWORD *)(v15 + 16);
  *a9 = *(_OWORD *)v15;
  a9[1] = v34;
  v35 = *(_OWORD *)(v15 + 48);
  a9[2] = *(_OWORD *)(v15 + 32);
  a9[3] = v35;
  v36 = v45[5];
  a9[8] = v45[4];
  a9[9] = v36;
  a9[10] = v45[6];
  v37 = v45[1];
  a9[4] = v45[0];
  a9[5] = v37;
  v38 = v45[3];
  a9[6] = v45[2];
  a9[7] = v38;
  return sub_10004563C((_QWORD *)v15);
}

uint64_t sub_100024500@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v43 = a5;
    v44 = a7;
    v42 = a3;
    v41 = a1;
    v40 = v20;
    v32 = static os_log_type_t.fault.getter();
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, &_swiftEmptyArrayStorage);

    v17 = a15;
    v20 = v40;
    v19 = a10;
    a1 = v41;
    a3 = v42;
    v18 = a12;
    a5 = v43;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = *(_OWORD *)(v15 + 16);
  *a9 = *(_OWORD *)v15;
  a9[1] = v34;
  v35 = *(_OWORD *)(v15 + 48);
  a9[2] = *(_OWORD *)(v15 + 32);
  a9[3] = v35;
  v36 = v45[5];
  a9[8] = v45[4];
  a9[9] = v36;
  a9[10] = v45[6];
  v37 = v45[1];
  a9[4] = v45[0];
  a9[5] = v37;
  v38 = v45[3];
  a9[6] = v45[2];
  a9[7] = v38;
  return swift_retain(*(_QWORD *)(v15 + 8));
}

__n128 sub_1000246A4@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v32;
  double v33;
  double v34;
  uint64_t v36;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __n128 result;
  unsigned int v46;
  double v47;
  double v48;
  double v49;
  double v50;
  _OWORD v51[7];

  v18 = a9;
  v19 = a16;
  v21 = a14;
  v20 = a15;
  v22 = a12;
  v23 = a10;
  v24 = a2 & 1;
  v25 = a1;
  if ((_DWORD)v24)
    v25 = -INFINITY;
  v26 = a4 & 1;
  v27 = a3;
  if ((_DWORD)v26)
    v27 = v25;
  v28 = a6 & 1;
  v29 = a8 & 1;
  v30 = a5;
  if ((a6 & 1) != 0)
    v30 = v27;
  if (v25 > v27 || v27 > v30)
    goto LABEL_22;
  v32 = a7;
  if ((a8 & 1) != 0)
    v32 = -INFINITY;
  v33 = a10;
  if ((a11 & 1) != 0)
    v33 = v32;
  v34 = a12;
  if ((a13 & 1) != 0)
    v34 = v33;
  if (v32 > v33 || v33 > v34)
  {
LABEL_22:
    v49 = a7;
    v50 = a5;
    v47 = a1;
    v48 = a3;
    v46 = v24;
    v36 = v26;
    v38 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v39 = (void *)static Log.runtimeIssuesLog.getter();
    v40 = v38;
    v18 = a9;
    os_log(_:dso:log:_:_:)(v40, &_mh_execute_header, v39, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v26 = v36;
    v21 = a14;
    v20 = a15;
    v24 = v46;
    v23 = a10;
    v22 = a12;
    a1 = v47;
    a3 = v48;
    a7 = v49;
    a5 = v50;
    v19 = a16;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v51, *(_QWORD *)&a1, v24, *(_QWORD *)&a3, v26, *(_QWORD *)&a5, v28, *(_QWORD *)&a7, v29, *(_QWORD *)&v23, a11 & 1, *(_QWORD *)&v22, a13 & 1, v21, v20);
  v41 = sub_100006DA4(v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v18, v17, v41);
  v42 = v18 + *(int *)(sub_100006DA4(a17) + 36);
  v43 = v51[5];
  *(_OWORD *)(v42 + 64) = v51[4];
  *(_OWORD *)(v42 + 80) = v43;
  *(_OWORD *)(v42 + 96) = v51[6];
  v44 = v51[1];
  *(_OWORD *)v42 = v51[0];
  *(_OWORD *)(v42 + 16) = v44;
  result = (__n128)v51[3];
  *(_OWORD *)(v42 + 32) = v51[2];
  *(__n128 *)(v42 + 48) = result;
  return result;
}

uint64_t sub_100024880@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v44 = a7;
    v42 = a1;
    v43 = a5;
    v41 = a3;
    v40 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v17 = a15;
    v19 = a10;
    v20 = v40;
    a3 = v41;
    a1 = v42;
    a5 = v43;
    v18 = a12;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v15 + 64);
  v35 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v15;
  *(_OWORD *)(a9 + 16) = v35;
  v36 = v45[2];
  *(_OWORD *)(a9 + 136) = v45[3];
  v37 = v45[5];
  *(_OWORD *)(a9 + 152) = v45[4];
  *(_OWORD *)(a9 + 168) = v37;
  *(_OWORD *)(a9 + 184) = v45[6];
  v38 = v45[1];
  *(_OWORD *)(a9 + 88) = v45[0];
  *(_OWORD *)(a9 + 104) = v38;
  *(_BYTE *)(a9 + 80) = *(_BYTE *)(v15 + 80);
  *(_OWORD *)(a9 + 120) = v36;
  return sub_100045014(v15);
}

uint64_t sub_100024A40(uint64_t a1, char a2)
{
  return sub_100025008(a1, a2, 1953394502, 0xE400000000000000);
}

uint64_t sub_100024A50@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v21;
  os_log_type_t v22;
  NSObject *v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a3;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100006DA4(a1);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100009434(v9, (uint64_t)v17, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v17, v15);
  if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    v19 = a2(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a5, v17, v19);
  }
  else
  {
    v21 = *v17;
    v22 = static os_log_type_t.fault.getter(EnumCaseMultiPayload);
    v23 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v23, v22))
    {
      v29 = a4;
      v24 = swift_slowAlloc(12, -1);
      v30 = a5;
      v25 = (uint8_t *)v24;
      v26 = swift_slowAlloc(32, -1);
      v33 = v26;
      *(_DWORD *)v25 = 136315138;
      v32 = sub_10007FA38(v31, v29, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v25 + 4, v25 + 12);
      _os_log_impl((void *)&_mh_execute_header, v23, v22, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v25, 0xCu);
      swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      v27 = v25;
      a5 = v30;
      swift_slowDealloc(v27, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(a5, v14, v21);
    swift_release(v21);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_100024C88(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  swift_retain(a1);
  v9 = static os_log_type_t.fault.getter(v8);
  v10 = static Log.runtimeIssuesLog.getter();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v16 = v13;
    *(_DWORD *)v12 = 136315138;
    v15 = sub_10007FA38(1819242306, 0xE400000000000000, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v12 + 4, v12 + 12);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(&v16, v7, a1);
  sub_10003D1A0(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v16;
}

uint64_t sub_100024E40(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain(a1);
  if ((a2 & 1) == 0)
  {
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v16 = v13;
      *(_DWORD *)v12 = 136315138;
      v15 = sub_10007FA38(0x6C616E6F6974704FLL, 0xEF3E726F6C6F433CLL, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v12 + 4, v12 + 12);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(&v16, v7, a1);
    j__swift_release(a1);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v16;
  }
  return a1;
}

uint64_t sub_100025008(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  os_log_type_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v8 = type metadata accessor for EnvironmentValues(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_retain(a1);
  if ((a2 & 1) == 0)
  {
    v13 = static os_log_type_t.fault.getter(v12);
    v14 = static Log.runtimeIssuesLog.getter();
    v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      v22 = a4;
      v16 = (uint8_t *)swift_slowAlloc(12, -1);
      v17 = swift_slowAlloc(32, -1);
      v18 = a3;
      v19 = v17;
      v24 = v17;
      *(_DWORD *)v16 = 136315138;
      v23 = sub_10007FA38(v18, v22, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v16 + 4, v16 + 12);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v16, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(&v24, v11, a1);
    swift_release(a1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v24;
  }
  return a1;
}

double sub_1000251C4(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  double v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return *(double *)&a1;
  swift_retain(a1);
  v9 = static os_log_type_t.fault.getter(v8);
  v10 = static Log.runtimeIssuesLog.getter();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v16 = *(double *)&v13;
    *(_DWORD *)v12 = 136315138;
    v15 = sub_10007FA38(0x74616F6C464743, 0xE700000000000000, (uint64_t *)&v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v12 + 4, v12 + 12);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(&v16, v7, a1);
  sub_10003D1A0(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v16;
}

__n128 sub_100025384()
{
  __n128 result;

  __asm { FMOV            V0.2D, #20.0 }
  xmmword_1000B9E60 = (__int128)result;
  return result;
}

uint64_t sub_100025394@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t OpaqueTypeConformance2;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v61 = a1;
  v1 = type metadata accessor for REMWidgetRefresh.WidgetKind(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100006DA4(&qword_1000ADD20);
  v56 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100006DA4(&qword_1000ADD28);
  v9 = *(_QWORD *)(v8 - 8);
  v57 = v8;
  v58 = v9;
  __chkstk_darwin(v8);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100006DA4(&qword_1000ADD30);
  v13 = *(_QWORD *)(v12 - 8);
  v59 = v12;
  v60 = v13;
  __chkstk_darwin(v12);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for REMWidgetRefresh.WidgetKind.widgetForAnyList(_:), v1);
  v17 = REMWidgetRefresh.WidgetKind.widgetKindIdentifier.getter(v16);
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v20 = type metadata accessor for ConfigurationIntent(0);
  v62 = sub_1000716A4();
  v63 = v21;
  v22 = type metadata accessor for TTRAnyListWidget.WidgetPlaceholderWrapper(0);
  v23 = sub_100007218(&qword_1000ADD38, type metadata accessor for TTRAnyListWidget.WidgetPlaceholderWrapper, (uint64_t)&unk_10008A21C);
  v24 = sub_1000366E0();
  IntentConfiguration.init<A>(kind:intent:provider:content:)(v17, v19, v20, &v62, sub_100025820, 0, v20, v22, &type metadata for TTRNewWidgetProvider, v23, v24);
  v25 = LocalizedStringKey.init(stringLiteral:)(1953720652, 0xE400000000000000);
  v26 = Text.init(_:tableName:bundle:comment:)(v25);
  v28 = v27;
  v30 = v29;
  v32 = v31 & 1;
  v33 = sub_1000095B4(&qword_1000ADD48, &qword_1000ADD20, (uint64_t)&protocol conformance descriptor for IntentConfiguration<A, B>);
  WidgetConfiguration.configurationDisplayName(_:)(v26, v28, v32, v30, v5, v33);
  sub_10000729C(v26, v28, v32);
  swift_bridgeObjectRelease(v30);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v7, v5);
  v34 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000002FLL, 0x800000010008FD80);
  v35 = Text.init(_:tableName:bundle:comment:)(v34);
  v37 = v36;
  v39 = v38;
  v41 = v40 & 1;
  v62 = v5;
  v63 = v33;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v62, &opaque type descriptor for <<opaque return type of WidgetConfiguration.configurationDisplayName(_:)>>, 1);
  v43 = v57;
  WidgetConfiguration.description(_:)(v35, v37, v41, v39, v57, OpaqueTypeConformance2);
  sub_10000729C(v35, v37, v41);
  swift_bridgeObjectRelease(v39);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v11, v43);
  v44 = sub_1000108C0();
  v45 = sub_100006DA4(&qword_1000ACB08);
  v46 = type metadata accessor for WidgetFamily(0);
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(unsigned __int8 *)(v47 + 80);
  v49 = (v48 + 32) & ~v48;
  v50 = swift_allocObject(v45, v49 + *(_QWORD *)(v47 + 72), v48 | 7);
  *(_OWORD *)(v50 + 16) = xmmword_1000882D0;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v47 + 104))(v50 + v49, enum case for WidgetFamily.accessoryRectangular(_:), v46);
  v62 = (uint64_t)v44;
  sub_100054BF8(v50);
  v51 = v62;
  v62 = v43;
  v63 = OpaqueTypeConformance2;
  v52 = swift_getOpaqueTypeConformance2(&v62, &opaque type descriptor for <<opaque return type of WidgetConfiguration.description(_:)>>, 1);
  v53 = v59;
  WidgetConfiguration.supportedFamilies(_:)(v51, v59, v52);
  swift_bridgeObjectRelease(v51);
  return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v15, v53);
}

uint64_t sub_100025820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v4 = type metadata accessor for TTRNewWidgetTimelineEntry(0);
  sub_1000072AC(a1 + *(int *)(v4 + 20), a2, type metadata accessor for TTRNewWidgetViewModel);
  v5 = (_QWORD *)(a2 + *(int *)(type metadata accessor for TTRAnyListWidget.WidgetPlaceholderWrapper(0) + 20));
  *v5 = swift_getKeyPath(&unk_10008A1C8);
  v6 = sub_100006DA4(&qword_1000ADD50);
  return swift_storeEnumTagMultiPayload(v5, v6, 0);
}

uint64_t sub_100025898@<X0>(uint64_t a1@<X8>)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v2 = v1;
  v61 = a1;
  v3 = type metadata accessor for ContainerBackgroundPlacement(0);
  v53 = *(_QWORD *)(v3 - 8);
  v54 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_100006DA4(&qword_1000ADF90);
  __chkstk_darwin(v49);
  v7 = (uint64_t *)((char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_100006DA4(&qword_1000ADF98);
  v51 = *(_QWORD *)(v8 - 8);
  v52 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_100006DA4(&qword_1000ADFA0);
  __chkstk_darwin(v50);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_100006DA4(&qword_1000ADFA8);
  __chkstk_darwin(v55);
  v59 = (uint64_t)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_100006DA4(&qword_1000ADFB0);
  __chkstk_darwin(v56);
  v60 = (uint64_t)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_100006DA4(&qword_1000ADFB8);
  __chkstk_darwin(v57);
  v58 = (uint64_t)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100025D44(v2, v7);
  v17 = static ContainerBackgroundPlacement.widget.getter(v16);
  v18 = static Alignment.center.getter(v17);
  v20 = v19;
  v21 = sub_100006DA4(&qword_1000ADFC0);
  v22 = sub_100039000(&qword_1000ADFC8, &qword_1000ADF90, (void (*)(void))sub_100039064, (uint64_t)&protocol conformance descriptor for <A> Group<A>);
  v23 = sub_1000391C0();
  View.containerBackground<A>(for:alignment:content:)(v5, v18, v20, sub_1000264B8, 0, v49, v21, v22, v23);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v5, v54);
  sub_100009578((uint64_t)v7, &qword_1000ADF90);
  KeyPath = swift_getKeyPath(&unk_10008A350);
  v25 = sub_100026504();
  v27 = v51;
  v26 = v52;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v12, v10, v52);
  v28 = (uint64_t *)&v12[*(int *)(v50 + 36)];
  *v28 = KeyPath;
  v28[1] = v25;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v26);
  v29 = swift_getKeyPath(&unk_10008A378);
  v30 = type metadata accessor for TTRAnyListWidget.SystemWidgetView(0);
  v31 = sub_10003613C();
  if ((v31 & 1) != 0)
  {
    v32 = static Color.primary.getter(v31);
  }
  else
  {
    v33 = objc_retain(*(id *)&v2[*(int *)(v30 + 20)
                               + *(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 40)]);
    v32 = Color.init(_:)(v33);
  }
  v34 = v32;
  v35 = v59;
  sub_100009434((uint64_t)v12, v59, &qword_1000ADFA0);
  v36 = (uint64_t *)(v35 + *(int *)(v55 + 36));
  *v36 = v29;
  v36[1] = v34;
  sub_100009578((uint64_t)v12, &qword_1000ADFA0);
  v37 = swift_getKeyPath(&unk_10008A3A0);
  if ((sub_10003613C() & 1) != 0)
  {
    if (qword_1000AC938 != -1)
      swift_once(&qword_1000AC938, sub_10005FF08);
    v38 = &qword_1000B9E78;
  }
  else
  {
    if (qword_1000AC918 != -1)
      swift_once(&qword_1000AC918, sub_100035BCC);
    v38 = &qword_1000ADD18;
  }
  v39 = *v38;
  swift_retain(*v38);
  v40 = v60;
  sub_100009434(v35, v60, &qword_1000ADFA8);
  v41 = (uint64_t *)(v40 + *(int *)(v56 + 36));
  *v41 = v37;
  v41[1] = v39;
  sub_100009578(v35, &qword_1000ADFA8);
  v42 = swift_getKeyPath(&unk_10008A3C8);
  sub_1000268D8();
  v44 = v43;
  v45 = v58;
  sub_100009434(v40, v58, &qword_1000ADFB0);
  v46 = (uint64_t *)(v45 + *(int *)(v57 + 36));
  *v46 = v42;
  v46[1] = v44;
  sub_100009578(v40, &qword_1000ADFB0);
  return sub_100018778(v45, v61, &qword_1000ADFB8);
}

uint64_t sub_100025D44@<X0>(_BYTE *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t IsVibrantText;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t KeyPath;
  int *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;

  v73 = a2;
  v74 = type metadata accessor for TTRAnyListWidget.InteractiveLarge(0);
  __chkstk_darwin(v74);
  v4 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for TTRAnyListWidget.InteractiveMedium(0);
  __chkstk_darwin(v68);
  v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100006DA4(&qword_1000AE058);
  __chkstk_darwin(v70);
  v72 = (uint64_t)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_100006DA4(&qword_1000AE060);
  __chkstk_darwin(v67);
  v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_100006DA4(&qword_1000ADFE8);
  __chkstk_darwin(v71);
  v69 = (uint64_t *)((char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  IsVibrantText = type metadata accessor for IsVibrantText(0);
  __chkstk_darwin(IsVibrantText);
  v13 = (uint64_t *)((char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_100006DA4(&qword_1000AE068);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = type metadata accessor for TTRNewWidgetViewModel(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (int *)type metadata accessor for TTRAnyListWidget.InteractiveSmall(0);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v25 = (char *)&v65 - v24;
  if (*a1)
  {
    if (*a1 == 1)
    {
      v26 = type metadata accessor for TTRAnyListWidget.SystemWidgetView(0);
      sub_1000072AC((uint64_t)&a1[*(int *)(v26 + 20)], (uint64_t)v19, type metadata accessor for TTRNewWidgetViewModel);
      KeyPath = swift_getKeyPath(&unk_10008A3F0);
      v28 = (int *)v68;
      v29 = (uint64_t *)&v6[*(int *)(v68 + 20)];
      *v29 = KeyPath;
      v30 = sub_100006DA4(&qword_1000AE070);
      swift_storeEnumTagMultiPayload(v29, v30, 0);
      sub_100007EF0((uint64_t)v19, (uint64_t)v6, type metadata accessor for TTRNewWidgetViewModel);
      *(_QWORD *)&v6[v28[6]] = 0x4026000000000000;
      *(_QWORD *)&v6[v28[7]] = 0x4026000000000000;
      *(_QWORD *)&v6[v28[8]] = 0x4020000000000000;
      sub_1000072AC((uint64_t)v6, (uint64_t)v9, type metadata accessor for TTRAnyListWidget.InteractiveMedium);
      swift_storeEnumTagMultiPayload(v9, v67, 1);
      v31 = sub_100007218(&qword_1000ADFF0, type metadata accessor for TTRAnyListWidget.InteractiveSmall, (uint64_t)&unk_10008A75C);
      v32 = sub_100007218(&qword_1000ADFF8, type metadata accessor for TTRAnyListWidget.InteractiveMedium, (uint64_t)&unk_10008A70C);
      v33 = v69;
      _ConditionalContent<>.init(storage:)(v69, v9, v20, v28, v31, v32);
      v34 = v72;
      sub_100009434((uint64_t)v33, v72, &qword_1000ADFE8);
      swift_storeEnumTagMultiPayload(v34, v70, 0);
      v35 = sub_1000390E8();
      v36 = sub_100007218(&qword_1000AE000, type metadata accessor for TTRAnyListWidget.InteractiveLarge, (uint64_t)&unk_10008A6BC);
      _ConditionalContent<>.init(storage:)(v73, v34, v71, v74, v35, v36);
      sub_100009578((uint64_t)v33, &qword_1000ADFE8);
      v37 = (uint64_t)v6;
      v38 = type metadata accessor for TTRAnyListWidget.InteractiveMedium;
    }
    else
    {
      v56 = type metadata accessor for TTRAnyListWidget.SystemWidgetView(0);
      sub_1000072AC((uint64_t)&a1[*(int *)(v56 + 20)], (uint64_t)v19, type metadata accessor for TTRNewWidgetViewModel);
      v57 = swift_getKeyPath(&unk_10008A3F0);
      v58 = v74;
      v59 = (uint64_t *)&v4[*(int *)(v74 + 20)];
      *v59 = v57;
      v60 = sub_100006DA4(&qword_1000AE070);
      swift_storeEnumTagMultiPayload(v59, v60, 0);
      sub_100007EF0((uint64_t)v19, (uint64_t)v4, type metadata accessor for TTRNewWidgetViewModel);
      v61 = v72;
      sub_1000072AC((uint64_t)v4, v72, type metadata accessor for TTRAnyListWidget.InteractiveLarge);
      swift_storeEnumTagMultiPayload(v61, v70, 1);
      v62 = sub_1000390E8();
      v63 = sub_100007218(&qword_1000AE000, type metadata accessor for TTRAnyListWidget.InteractiveLarge, (uint64_t)&unk_10008A6BC);
      _ConditionalContent<>.init(storage:)(v73, v61, v71, v58, v62, v63);
      v37 = (uint64_t)v4;
      v38 = type metadata accessor for TTRAnyListWidget.InteractiveLarge;
    }
  }
  else
  {
    v39 = type metadata accessor for TTRAnyListWidget.SystemWidgetView(0);
    sub_1000072AC((uint64_t)&a1[*(int *)(v39 + 20)], (uint64_t)v19, type metadata accessor for TTRNewWidgetViewModel);
    *v16 = swift_getKeyPath(&unk_10008A3F0);
    v40 = sub_100006DA4(&qword_1000AE070);
    swift_storeEnumTagMultiPayload(v16, v40, 0);
    v66 = swift_getKeyPath(&unk_10008A420);
    v41 = swift_getKeyPath(&unk_10008A448);
    v42 = swift_getKeyPath(&unk_10008A478);
    sub_100007EF0((uint64_t)v19, (uint64_t)v23, type metadata accessor for TTRNewWidgetViewModel);
    v43 = &v23[v20[5]];
    *(_QWORD *)v43 = swift_getKeyPath(&unk_10008A4A8);
    v43[8] = 0;
    v44 = &v23[v20[6]];
    *(_QWORD *)v44 = swift_getKeyPath(&unk_10008A4D0);
    v45 = sub_100006DA4(&qword_1000ADE30);
    swift_storeEnumTagMultiPayload(v44, v45, 0);
    sub_100018778((uint64_t)v16, (uint64_t)&v23[v20[7]], &qword_1000AE068);
    v46 = &v23[v20[8]];
    *(_QWORD *)v46 = v66;
    v46[8] = 0;
    v47 = &v23[v20[9]];
    *(_QWORD *)v47 = v41;
    v47[8] = 0;
    v48 = &v23[v20[10]];
    *(_QWORD *)v48 = v42;
    v48[8] = 0;
    v49 = (uint64_t)&v23[v20[11]];
    *v13 = swift_getKeyPath(&unk_10008A4D0);
    swift_storeEnumTagMultiPayload(v13, v45, 0);
    sub_100007EF0((uint64_t)v13, v49, type metadata accessor for IsVibrantText);
    *(_QWORD *)&v23[v20[12]] = 0;
    *(_QWORD *)&v23[v20[13]] = 0x4040800000000000;
    sub_100007EF0((uint64_t)v23, (uint64_t)v25, type metadata accessor for TTRAnyListWidget.InteractiveSmall);
    sub_1000072AC((uint64_t)v25, (uint64_t)v9, type metadata accessor for TTRAnyListWidget.InteractiveSmall);
    swift_storeEnumTagMultiPayload(v9, v67, 0);
    v50 = sub_100007218(&qword_1000ADFF0, type metadata accessor for TTRAnyListWidget.InteractiveSmall, (uint64_t)&unk_10008A75C);
    v51 = sub_100007218(&qword_1000ADFF8, type metadata accessor for TTRAnyListWidget.InteractiveMedium, (uint64_t)&unk_10008A70C);
    v52 = v69;
    _ConditionalContent<>.init(storage:)(v69, v9, v20, v68, v50, v51);
    v53 = v72;
    sub_100009434((uint64_t)v52, v72, &qword_1000ADFE8);
    swift_storeEnumTagMultiPayload(v53, v70, 0);
    v54 = sub_1000390E8();
    v55 = sub_100007218(&qword_1000AE000, type metadata accessor for TTRAnyListWidget.InteractiveLarge, (uint64_t)&unk_10008A6BC);
    _ConditionalContent<>.init(storage:)(v73, v53, v71, v74, v54, v55);
    sub_100009578((uint64_t)v52, &qword_1000ADFE8);
    v37 = (uint64_t)v25;
    v38 = type metadata accessor for TTRAnyListWidget.InteractiveSmall;
  }
  return sub_100007EB4(v37, v38);
}

uint64_t sub_1000264B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = static SafeAreaRegions.all.getter();
  result = static Edge.Set.all.getter();
  *(_WORD *)a1 = 256;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1000264F0()
{
  return sub_100014818((uint64_t (*)(void))sub_100039408, (uint64_t)&_s13BadgeColorKeyON);
}

uint64_t sub_100026504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v30;
  uint64_t v31;

  v1 = v0;
  v2 = type metadata accessor for RedactionReasons(0);
  v31 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v30 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (char *)&v30 - v5;
  v7 = type metadata accessor for WidgetRenderingMode(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char **)((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for REMFeatureFlags(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for REMFeatureFlags.accentableWidgets(_:), v11);
  v16 = REMFeatureFlags.isEnabled.getter(v15);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if ((v16 & 1) != 0)
  {
    type metadata accessor for TTRAnyListWidget.SystemWidgetView(0);
    sub_100024A50(&qword_1000ADE30, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x800000010008FE00, v10);
    v17 = sub_100026AC0();
    v18 = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
    if ((v17 & 1) != 0)
      return static Color.black.getter(v18);
  }
  v20 = type metadata accessor for TTRAnyListWidget.SystemWidgetView(0);
  if ((sub_10003613C() & 1) != 0)
  {
    if (qword_1000AC938 != -1)
      swift_once(&qword_1000AC938, sub_10005FF08);
    v19 = qword_1000B9E78;
    swift_retain(qword_1000B9E78);
  }
  else
  {
    sub_100024A50(&qword_1000ADED8, (uint64_t (*)(_QWORD))&type metadata accessor for RedactionReasons, 0xD000000000000010, 0x800000010008FE20, v6);
    v21 = sub_100007218(&qword_1000AE040, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t)&protocol conformance descriptor for RedactionReasons);
    v22 = v30;
    dispatch thunk of SetAlgebra.init()(v2, v21);
    v23 = sub_100007218(&qword_1000AE048, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t)&protocol conformance descriptor for RedactionReasons);
    v24 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v22, v2, v23);
    v25 = *(void (**)(char *, uint64_t))(v31 + 8);
    v25(v22, v2);
    v25(v6, v2);
    v26 = objc_retain(*(id *)(v1
                            + *(int *)(v20 + 20)
                            + *(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 40)));
    v27 = Color.init(_:)(v26);
    v19 = v27;
    if ((v24 & 1) == 0)
    {
      v28 = Color.opacity(_:)(v27, 0.4);
      swift_release(v19);
      return v28;
    }
  }
  return v19;
}

uint64_t sub_10002681C()
{
  unint64_t v0;
  uint64_t v2;

  v0 = sub_1000393C4();
  EnvironmentValues.subscript.getter(&v2, &_s16ListTextColorKeyON, &_s16ListTextColorKeyON, v0);
  return v2;
}

uint64_t sub_100026854(uint64_t *a1)
{
  unint64_t v1;
  uint64_t v3;

  v3 = *a1;
  v1 = sub_1000393C4();
  swift_retain(v3);
  return EnvironmentValues.subscript.setter(&v3, &_s16ListTextColorKeyON, &_s16ListTextColorKeyON, v1);
}

uint64_t sub_1000268B0()
{
  return sub_100014818((uint64_t (*)(void))sub_100039380, (uint64_t)&_s15DividerColorKeyON);
}

uint64_t sub_1000268C4()
{
  return sub_100014818((uint64_t (*)(void))sub_10003933C, (uint64_t)&_s13CountColorKeyON);
}

double sub_1000268D8()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char v8;
  char *v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  double result;
  char v15;
  char *v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for TTRAnyListWidget.SystemWidgetView(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v21 - v6;
  if (!*v0)
  {
    v8 = sub_10003613C();
    sub_1000072AC((uint64_t)v1, (uint64_t)v7, type metadata accessor for TTRAnyListWidget.SystemWidgetView);
    if ((v8 & 1) != 0)
    {
      v9 = &v7[*(int *)(v2 + 28)];
      v10 = *(_QWORD *)v9;
      v11 = v9[8];
      sub_10003CEB8(*(_QWORD *)v9, v11);
      v12 = sub_100024C88(v10, v11);
      sub_10003D1A0(v10, v11);
      v13 = sub_100007EB4((uint64_t)v7, type metadata accessor for TTRAnyListWidget.SystemWidgetView);
      if ((v12 & 1) == 0)
      {
        static Color.primary.getter(v13);
        return result;
      }
    }
    else
    {
      sub_100007EB4((uint64_t)v7, type metadata accessor for TTRAnyListWidget.SystemWidgetView);
    }
    if (!*v1)
    {
      v15 = sub_10003613C();
      sub_1000072AC((uint64_t)v1, (uint64_t)v5, type metadata accessor for TTRAnyListWidget.SystemWidgetView);
      if ((v15 & 1) != 0)
      {
        v16 = &v5[*(int *)(v2 + 28)];
        v17 = *(_QWORD *)v16;
        v18 = v16[8];
        sub_10003CEB8(*(_QWORD *)v16, v18);
        v19 = sub_100024C88(v17, v18);
        sub_10003D1A0(v17, v18);
        v20 = sub_100007EB4((uint64_t)v5, type metadata accessor for TTRAnyListWidget.SystemWidgetView);
        if ((v19 & 1) == 0)
        {
          static Color.secondary.getter(v20);
          return result;
        }
      }
      else
      {
        sub_100007EB4((uint64_t)v5, type metadata accessor for TTRAnyListWidget.SystemWidgetView);
      }
    }
  }
  if (qword_1000AC8F8 != -1)
    swift_once(&qword_1000AC8F8, sub_1000359C4);
  *(_QWORD *)&result = swift_retain(qword_1000ADCF8).n128_u64[0];
  return result;
}

uint64_t sub_100026AC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t (*v12)(char *, uint64_t);
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v17;

  v1 = v0;
  v2 = type metadata accessor for WidgetRenderingMode(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v17 - v7;
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v17 - v7, v1, v2);
  static WidgetRenderingMode.accented.getter(v9);
  v10 = sub_100007218(&qword_1000AE030, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t)&protocol conformance descriptor for WidgetRenderingMode);
  v11 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v8, v2, v10);
  v12 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
  v13 = v12(v6, v2);
  if ((v11 & 1) == 0)
  {
    static WidgetRenderingMode.fullColor.getter(v13);
    v14 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v8, v2, v10);
    v15 = v12(v6, v2);
    if ((v14 & 1) == 0)
    {
      static WidgetRenderingMode.vibrant.getter(v15);
      dispatch thunk of static Equatable.== infix(_:_:)(v6, v8, v2, v10);
      v12(v6, v2);
    }
  }
  v12(v8, v2);
  return v11 & 1;
}

uint64_t sub_100026C24@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t OpaqueTypeConformance2;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a2;
  v29 = sub_100006DA4(&qword_1000ADDF8);
  __chkstk_darwin(v29);
  v30 = (uint64_t)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for RedactionReasons(0);
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s10WidgetViewVMa_0(0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_100006DA4(&qword_1000ADE00);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v26 - v15;
  v17 = *(_BYTE *)(a1 + *(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 80));
  type metadata accessor for TTRAnyListWidget.WidgetPlaceholderWrapper(0);
  sub_100024A50(&qword_1000ADD50, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, v9);
  v18 = sub_1000072AC(a1, (uint64_t)v9 + *(int *)(v7 + 20), type metadata accessor for TTRNewWidgetViewModel);
  if ((v17 & 1) != 0)
  {
    static RedactionReasons.placeholder.getter(v18);
    v23 = sub_100007218(&qword_1000ADE08, _s10WidgetViewVMa_0, (uint64_t)&unk_10008E42C);
    View.redacted(reason:)(v6, v7, v23);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v28);
    sub_100007EB4((uint64_t)v9, _s10WidgetViewVMa_0);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v14, v10);
    v24 = v30;
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v30, v16, v10);
    swift_storeEnumTagMultiPayload(v24, v29, 0);
    v32 = v7;
    v33 = v23;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v32, &opaque type descriptor for <<opaque return type of View.redacted(reason:)>>, 1);
    _ConditionalContent<>.init(storage:)(v31, v24, v10, v7, OpaqueTypeConformance2, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  else
  {
    v19 = v30;
    sub_1000072AC((uint64_t)v9, v30, _s10WidgetViewVMa_0);
    swift_storeEnumTagMultiPayload(v19, v29, 1);
    v20 = sub_100007218(&qword_1000ADE08, _s10WidgetViewVMa_0, (uint64_t)&unk_10008E42C);
    v32 = v7;
    v33 = v20;
    v21 = swift_getOpaqueTypeConformance2(&v32, &opaque type descriptor for <<opaque return type of View.redacted(reason:)>>, 1);
    _ConditionalContent<>.init(storage:)(v31, v19, v10, v7, v21, v20);
    return sub_100007EB4((uint64_t)v9, _s10WidgetViewVMa_0);
  }
}

uint64_t sub_100026F50@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_100026C24(v1, a1);
}

uint64_t sub_100026F58@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v3 = sub_100006DA4(&qword_1000AE918);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v18 - v7;
  v9 = sub_100006DA4(&qword_1000AE920);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v12 = static VerticalAlignment.center.getter(v10);
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  v13 = sub_100006DA4(&qword_1000AE928);
  v14 = (uint64_t)&v12[*(int *)(v13 + 44)];
  *(_QWORD *)v8 = static HorizontalAlignment.leading.getter(v13);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  v15 = sub_100006DA4(&qword_1000AE930);
  sub_100027100(v1, (uint64_t)&v8[*(int *)(v15 + 44)]);
  sub_100009434((uint64_t)v8, (uint64_t)v6, &qword_1000AE918);
  sub_100009434((uint64_t)v6, v14, &qword_1000AE918);
  v16 = v14 + *(int *)(sub_100006DA4(&qword_1000AE938) + 48);
  *(_QWORD *)v16 = 0x4020000000000000;
  *(_BYTE *)(v16 + 8) = 0;
  sub_100009578((uint64_t)v8, &qword_1000AE918);
  sub_100009578((uint64_t)v6, &qword_1000AE918);
  sub_1000273A0(v1, &qword_1000AE940, &qword_1000AE948, &qword_1000AE920, &qword_1000AE950, a1);
  return sub_100009578((uint64_t)v12, &qword_1000AE920);
}

uint64_t sub_100027100@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  void *v34;

  v4 = (int *)type metadata accessor for TTRAnyListWidget.TitleTextView(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v29 - v8;
  v10 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v34 = *(void **)((char *)a1 + v10[12]);
  v11 = v10[15];
  v12 = (_QWORD *)((char *)a1 + v10[14]);
  v13 = v12[1];
  v30 = *v12;
  v33 = *((unsigned __int8 *)a1 + v11);
  KeyPath = swift_getKeyPath(&unk_10008A350);
  v15 = a1[2];
  v16 = a1[4];
  v31 = a1[3];
  v32 = v15;
  v17 = swift_getKeyPath(&unk_10008A8B0);
  v18 = swift_getKeyPath(&unk_10008A3C8);
  sub_1000072AC((uint64_t)a1, (uint64_t)v7, type metadata accessor for TTRNewWidgetViewModel);
  *(_QWORD *)&v7[v4[5]] = 3;
  v19 = &v7[v4[6]];
  *(_QWORD *)v19 = swift_getKeyPath(&unk_10008A7B0);
  v19[8] = 0;
  v20 = &v7[v4[7]];
  *(_QWORD *)v20 = swift_getKeyPath(&unk_10008A378);
  v20[8] = 0;
  v21 = &v7[v4[8]];
  *(_QWORD *)v21 = swift_getKeyPath(&unk_10008A880);
  v22 = sub_100006DA4(&qword_1000ADED8);
  swift_storeEnumTagMultiPayload(v21, v22, 0);
  sub_100007EF0((uint64_t)v7, (uint64_t)v9, type metadata accessor for TTRAnyListWidget.TitleTextView);
  sub_1000072AC((uint64_t)v9, (uint64_t)v7, type metadata accessor for TTRAnyListWidget.TitleTextView);
  v23 = v34;
  v24 = v30;
  *(_QWORD *)a2 = v34;
  *(_QWORD *)(a2 + 8) = v24;
  *(_QWORD *)(a2 + 16) = v13;
  *(_BYTE *)(a2 + 24) = v33;
  *(_QWORD *)(a2 + 32) = KeyPath;
  *(_BYTE *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = 0;
  *(_BYTE *)(a2 + 56) = 1;
  v25 = v31;
  *(_QWORD *)(a2 + 64) = v32;
  *(_QWORD *)(a2 + 72) = v25;
  *(_QWORD *)(a2 + 80) = v16;
  *(_QWORD *)(a2 + 88) = v17;
  *(_BYTE *)(a2 + 96) = 0;
  *(_QWORD *)(a2 + 104) = v18;
  *(_BYTE *)(a2 + 112) = 0;
  v26 = sub_100006DA4(&qword_1000AE958);
  sub_1000072AC((uint64_t)v7, a2 + *(int *)(v26 + 80), type metadata accessor for TTRAnyListWidget.TitleTextView);
  swift_bridgeObjectRetain_n(v13, 2);
  swift_retain(KeyPath);
  swift_bridgeObjectRetain_n(v16, 2);
  swift_retain(v17);
  swift_retain(v18);
  v27 = v23;
  sub_100007EB4((uint64_t)v9, type metadata accessor for TTRAnyListWidget.TitleTextView);
  sub_100007EB4((uint64_t)v7, type metadata accessor for TTRAnyListWidget.TitleTextView);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v13);

  swift_release(v18);
  swift_release(v17);
  return swift_bridgeObjectRelease(v16);
}

uint64_t sub_1000273A0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, unint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t OpaqueTypeConformance2;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;
  Swift::String v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t *v60;
  unint64_t *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[2];

  v60 = a1;
  v61 = a5;
  v65 = a3;
  v69 = a6;
  v70 = type metadata accessor for AccessibilityTraits(0);
  v68 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v67 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AccessibilityChildBehavior(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100006DA4(a2);
  v63 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_100006DA4(a3);
  v18 = __chkstk_darwin(v64);
  v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v18);
  v62 = (char *)&v60 - v22;
  v23 = __chkstk_darwin(v21);
  v66 = (char *)&v60 - v24;
  static AccessibilityChildBehavior.ignore.getter(v23);
  v25 = sub_100006DA4(a4);
  v26 = sub_1000095B4(v61, a4, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.accessibilityElement(children:)(v14, v25, v26);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v27 = sub_100035C24(a1);
  v29 = v28;
  v31 = v30;
  v33 = v32 & 1;
  v71[0] = v25;
  v71[1] = v26;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v71, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  View.accessibility(label:)(v27, v29, v33, v31, v15, OpaqueTypeConformance2);
  sub_10000729C(v27, v29, v33);
  swift_bridgeObjectRelease(v31);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v17, v15);
  v35 = v60;
  v36 = sub_100035DA4((uint64_t)v60);
  v38 = v37;
  v40 = v39;
  LOBYTE(v27) = v41 & 1;
  v42 = (uint64_t)v62;
  v43 = v64;
  ModifiedContent<>.accessibility(value:)();
  sub_10000729C(v36, v38, v27);
  swift_bridgeObjectRelease(v40);
  v44 = v65;
  sub_100009578((uint64_t)v20, v65);
  v46 = *v35;
  v45 = v35[1];
  v47._countAndFlagsBits = 0xD000000000000047;
  v48._countAndFlagsBits = 0xD00000000000004CLL;
  v47._object = (void *)0x800000010008FE70;
  v49._object = (void *)0x800000010008FEC0;
  v48._object = (void *)0x800000010008FEF0;
  v49._countAndFlagsBits = 0xD000000000000022;
  v50 = TTRLocalizedString(_:value:comment:)(v47, v49, v48);
  v51 = sub_100006DA4(&qword_1000AD2E8);
  v52 = swift_allocObject(v51, 72, 7);
  *(_OWORD *)(v52 + 16) = xmmword_1000882D0;
  *(_QWORD *)(v52 + 56) = &type metadata for String;
  *(_QWORD *)(v52 + 64) = sub_100024070();
  *(_QWORD *)(v52 + 32) = v46;
  *(_QWORD *)(v52 + 40) = v45;
  swift_bridgeObjectRetain(v45);
  v53 = static String.localizedStringWithFormat(_:_:)(v50._countAndFlagsBits, v50._object, v52);
  v55 = v54;
  swift_bridgeObjectRelease(v50._object);
  swift_bridgeObjectRelease(v52);
  v56 = (uint64_t)v66;
  ModifiedContent<>.accessibility(hint:)(v53, v55, 0, _swiftEmptyArrayStorage, v43);
  swift_bridgeObjectRelease(v55);
  v57 = sub_100009578(v42, v44);
  v58 = v67;
  static AccessibilityTraits.isHeader.getter(v57);
  ModifiedContent<>.accessibility(addTraits:)(v58, v43);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v58, v70);
  return sub_100009578(v56, v44);
}

uint64_t sub_1000277A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int *v12;
  void *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v24;

  v4 = sub_100006DA4(&qword_1000AE9E0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v24 - v9;
  *(_QWORD *)v10 = static HorizontalAlignment.leading.getter(v8);
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = 1;
  v11 = sub_100006DA4(&qword_1000AE9E8);
  sub_10002793C(a1, (uint64_t)&v10[*(int *)(v11 + 44)]);
  v12 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v13 = *(void **)((char *)a1 + v12[12]);
  v14 = (_QWORD *)((char *)a1 + v12[14]);
  v16 = *v14;
  v15 = v14[1];
  v17 = *((_BYTE *)a1 + v12[15]);
  KeyPath = swift_getKeyPath(&unk_10008A350);
  sub_100009434((uint64_t)v10, (uint64_t)v7, &qword_1000AE9E0);
  sub_100009434((uint64_t)v7, a2, &qword_1000AE9E0);
  v19 = sub_100006DA4(&qword_1000AE9F0);
  v20 = a2 + *(int *)(v19 + 48);
  *(_QWORD *)v20 = 0;
  *(_BYTE *)(v20 + 8) = 1;
  v21 = a2 + *(int *)(v19 + 64);
  *(_QWORD *)v21 = v13;
  *(_QWORD *)(v21 + 8) = v16;
  *(_QWORD *)(v21 + 16) = v15;
  *(_BYTE *)(v21 + 24) = v17;
  *(_QWORD *)(v21 + 32) = KeyPath;
  *(_BYTE *)(v21 + 40) = 0;
  swift_bridgeObjectRetain_n(v15, 2);
  swift_retain(KeyPath);
  v22 = v13;
  sub_100009578((uint64_t)v10, &qword_1000AE9E0);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v15);

  return sub_100009578((uint64_t)v7, &qword_1000AE9E0);
}

uint64_t sub_10002793C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v4 = (int *)type metadata accessor for TTRAnyListWidget.TitleTextView(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v23 - v8;
  v10 = a1[2];
  v24 = a1[3];
  v11 = a1[4];
  KeyPath = swift_getKeyPath(&unk_10008A8B0);
  v13 = swift_getKeyPath(&unk_10008A3C8);
  v14 = swift_bridgeObjectRetain(v11);
  v15 = static Edge.Set.all.getter(v14);
  sub_1000072AC((uint64_t)a1, (uint64_t)v7, type metadata accessor for TTRNewWidgetViewModel);
  *(_QWORD *)&v7[v4[5]] = 1;
  v16 = &v7[v4[6]];
  *(_QWORD *)v16 = swift_getKeyPath(&unk_10008A7B0);
  v16[8] = 0;
  v17 = &v7[v4[7]];
  *(_QWORD *)v17 = swift_getKeyPath(&unk_10008A378);
  v17[8] = 0;
  v18 = &v7[v4[8]];
  *(_QWORD *)v18 = swift_getKeyPath(&unk_10008A880);
  v19 = sub_100006DA4(&qword_1000ADED8);
  swift_storeEnumTagMultiPayload(v18, v19, 0);
  sub_100007EF0((uint64_t)v7, (uint64_t)v9, type metadata accessor for TTRAnyListWidget.TitleTextView);
  sub_1000072AC((uint64_t)v9, (uint64_t)v7, type metadata accessor for TTRAnyListWidget.TitleTextView);
  v20 = v24;
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v20;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = KeyPath;
  *(_BYTE *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = v13;
  *(_BYTE *)(a2 + 48) = 0;
  *(_BYTE *)(a2 + 56) = v15;
  *(_QWORD *)(a2 + 64) = 0x4008000000000000;
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = 0;
  *(_QWORD *)(a2 + 88) = 0;
  *(_BYTE *)(a2 + 96) = 0;
  v21 = sub_100006DA4(&qword_1000AE9F8);
  sub_1000072AC((uint64_t)v7, a2 + *(int *)(v21 + 48), type metadata accessor for TTRAnyListWidget.TitleTextView);
  swift_bridgeObjectRetain(v11);
  swift_retain(KeyPath);
  swift_retain(v13);
  sub_100007EB4((uint64_t)v9, type metadata accessor for TTRAnyListWidget.TitleTextView);
  sub_100007EB4((uint64_t)v7, type metadata accessor for TTRAnyListWidget.TitleTextView);
  swift_release(v13);
  swift_release(KeyPath);
  return swift_bridgeObjectRelease(v11);
}

uint64_t sub_100027B5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = sub_100006DA4(&qword_1000AE9B8);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static VerticalAlignment.center.getter(v4);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v7 = sub_100006DA4(&qword_1000AE9C0);
  sub_1000277A0(v1, (uint64_t)&v6[*(int *)(v7 + 44)]);
  sub_1000273A0(v1, &qword_1000AE9C8, &qword_1000AE9D0, &qword_1000AE9B8, &qword_1000AE9D8, a1);
  return sub_100009578((uint64_t)v6, &qword_1000AE9B8);
}

uint64_t sub_100027C24@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t KeyPath;
  char *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t OpaqueTypeConformance2;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[2];
  uint64_t v68;
  uint64_t v69;
  char v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v2 = v1;
  v66 = a1;
  v3 = type metadata accessor for REMFeatureFlags(0);
  v59 = *(_QWORD *)(v3 - 8);
  v60 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RedactionReasons(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v57 - v11;
  v64 = sub_100006DA4(&qword_1000AEB48);
  __chkstk_darwin(v64);
  v57 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100006DA4(&qword_1000AEB50);
  v63 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v62 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100006DA4(&qword_1000AEB58);
  __chkstk_darwin(v15);
  v61 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v1[1];
  v58 = *v1;
  v18 = (int *)type metadata accessor for TTRAnyListWidget.TitleTextView(0);
  swift_bridgeObjectRetain(v17);
  sub_100024A50(&qword_1000ADED8, (uint64_t (*)(_QWORD))&type metadata accessor for RedactionReasons, 0xD000000000000010, 0x800000010008FE20, v12);
  v19 = sub_100007218(&qword_1000AE040, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t)&protocol conformance descriptor for RedactionReasons);
  dispatch thunk of SetAlgebra.init()(v6, v19);
  v20 = sub_100007218(&qword_1000AE048, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t)&protocol conformance descriptor for RedactionReasons);
  v21 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v10, v6, v20);
  v22 = *(void (**)(char *, uint64_t))(v7 + 8);
  v22(v10, v6);
  v22(v12, v6);
  if ((v21 & 1) != 0)
    v23 = *(uint64_t *)((char *)v2 + v18[5]);
  else
    v23 = 1;
  KeyPath = swift_getKeyPath(&unk_10008AF50);
  v25 = (char *)v2 + v18[6];
  v26 = *(_QWORD *)v25;
  v27 = v25[8];
  swift_retain(*(_QWORD *)v25);
  v29 = sub_100025008(v28, v27, 1953394502, 0xE400000000000000);
  swift_release(v26);
  v30 = swift_getKeyPath(&unk_10008B008);
  v31 = (uint64_t *)((char *)v2 + v18[7]);
  v32 = *v31;
  v33 = *((_BYTE *)v31 + 8);
  j__swift_retain(*v31);
  v34 = sub_100024E40(v32, v33);
  j__swift_release(v32);
  v35 = swift_getKeyPath(&unk_10008B038);
  v68 = v58;
  v69 = v17;
  v70 = 0;
  v71 = _swiftEmptyArrayStorage;
  v72 = KeyPath;
  v73 = v23;
  v74 = 0;
  v75 = v30;
  v76 = v29;
  v77 = v35;
  v78 = v34;
  v37 = v59;
  v36 = v60;
  v38 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v59 + 104))(v5, enum case for REMFeatureFlags.accentableWidgets(_:), v60);
  LOBYTE(KeyPath) = REMFeatureFlags.isEnabled.getter(v38);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v5, v36);
  v39 = sub_100006DA4(&qword_1000AEB60);
  v40 = sub_100006DA4(&qword_1000AEB68);
  v41 = sub_1000463A0();
  v67[0] = v39;
  v67[1] = v41;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v67, &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>, 1);
  v43 = (uint64_t)v57;
  View.ttr_if<A>(_:transform:)(KeyPath & 1, sub_100028120, 0, v39, v40, v41, OpaqueTypeConformance2);
  v44 = v71;
  v45 = v72;
  v46 = v75;
  v47 = v76;
  v48 = v77;
  v49 = v78;
  sub_10000729C(v68, v69, v70);
  swift_release(v48);
  swift_release(v46);
  swift_release(v45);
  swift_bridgeObjectRelease(v44);
  swift_release(v47);
  swift_release(v49);
  v50 = sub_10004A02C(&qword_1000AEB88, &qword_1000AEB48, &qword_1000AEB60, (uint64_t (*)(void))sub_1000463A0);
  v51 = v62;
  v52 = v64;
  View.hyphenationFactor(_:)(v64, v50, 1.0);
  sub_100009578(v43, &qword_1000AEB48);
  v68 = v52;
  v69 = v50;
  v53 = swift_getOpaqueTypeConformance2(&v68, &opaque type descriptor for <<opaque return type of View.hyphenationFactor(_:)>>, 1);
  v54 = (uint64_t)v61;
  v55 = v65;
  View.accessibility(hidden:)(1, v65, v53);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v51, v55);
  return sub_100018778(v54, v66, &qword_1000AEB58);
}

uint64_t sub_100028120()
{
  uint64_t v0;
  unint64_t v1;

  v0 = sub_100006DA4(&qword_1000AEB60);
  v1 = sub_1000463A0();
  return View.widgetAccentable(_:)(1, v0, v1);
}

uint64_t sub_1000281B0()
{
  return sub_100014818((uint64_t (*)(void))sub_10003F158, (uint64_t)&_s12TitleFontKeyON);
}

uint64_t sub_1000281C8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t KeyPath;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD v84[2];
  char v85;
  uint64_t v86;

  v2 = v1;
  v83 = a1;
  v3 = type metadata accessor for ContentTransition.Style(0);
  v81 = *(_QWORD *)(v3 - 8);
  v82 = v3;
  __chkstk_darwin(v3);
  v80 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for ContentTransition.NumericTextConfiguration(0);
  v73 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v69 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for ContentTransition(0);
  v76 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v67 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_100006DA4(&qword_1000AEAE0);
  v72 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v63 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100006DA4(&qword_1000AEAE8);
  __chkstk_darwin(v65);
  v64 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_100006DA4(&qword_1000AEAF0);
  __chkstk_darwin(v71);
  v70 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_100006DA4(&qword_1000AEAF8);
  __chkstk_darwin(v79);
  v77 = (uint64_t)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v1[2];
  v68 = v1[1];
  v11 = v68;
  v13 = v1[3];
  v14 = *((_BYTE *)v2 + 32);
  swift_bridgeObjectRetain(v12);
  swift_retain(v13);
  v16 = sub_100025008(v15, v14, 1953394502, 0xE400000000000000);
  swift_release(v13);
  v66 = v12;
  v17 = Text.font(_:)(v16, v11, v12, 0, _swiftEmptyArrayStorage);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  swift_bridgeObjectRelease(v12);
  swift_release(v16);
  v24 = v21 & 1;
  v25 = v2[5];
  v26 = *((_BYTE *)v2 + 48);
  swift_retain(v25);
  v28 = sub_100025008(v27, v26, 0x726F6C6F43, 0xE500000000000000);
  swift_release(v25);
  v84[0] = v28;
  v29 = Text.foregroundStyle<A>(_:)(v84, v17, v19, v24, v23, &type metadata for Color, &protocol witness table for Color);
  v31 = v30;
  v33 = v32;
  LOBYTE(v12) = v34 & 1;
  sub_10000729C(v17, v19, v24);
  swift_release(v28);
  swift_bridgeObjectRelease(v23);
  v84[0] = v29;
  v84[1] = v31;
  v85 = v12;
  v86 = v33;
  v35 = v63;
  View.unredacted()(&type metadata for Text, &protocol witness table for Text);
  sub_10000729C(v29, v31, v12);
  v36 = swift_bridgeObjectRelease(v33);
  v37 = v69;
  static ContentTransition.NumericTextConfiguration.automatic(value:)(v36, (double)(uint64_t)*v2);
  v38 = v67;
  static ContentTransition.numericText(_:)(v37);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v37, v75);
  KeyPath = swift_getKeyPath(&unk_10008AFA8);
  v40 = (uint64_t)v64;
  v41 = (uint64_t *)&v64[*(int *)(v65 + 36)];
  v42 = sub_100006DA4(&qword_1000AEB00);
  v43 = v76;
  v44 = v78;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))((char *)v41 + *(int *)(v42 + 28), v38, v78);
  *v41 = KeyPath;
  v45 = v72;
  v46 = v74;
  (*(void (**)(uint64_t, char *, uint64_t))(v72 + 16))(v40, v35, v74);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v38, v44);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v46);
  v47 = swift_getKeyPath(&unk_10008AFD8);
  v48 = v80;
  static ContentTransition.Style.sessionWidget.getter();
  v49 = (uint64_t)v70;
  v50 = (uint64_t *)&v70[*(int *)(v71 + 36)];
  v51 = sub_100006DA4(&qword_1000AEB08);
  v53 = v81;
  v52 = v82;
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))((char *)v50 + *(int *)(v51 + 28), v48, v82);
  *v50 = v47;
  sub_100009434(v40, v49, &qword_1000AEAE8);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v48, v52);
  v54 = sub_100009578(v40, &qword_1000AEAE8);
  v55 = static Animation.default.getter(v54);
  v56 = v77;
  sub_100009434(v49, v77, &qword_1000AEAF0);
  v57 = v79;
  v58 = (uint64_t *)(v56 + *(int *)(v79 + 36));
  v59 = v68;
  *v58 = v55;
  v58[1] = v59;
  v60 = v66;
  v58[2] = v66;
  swift_bridgeObjectRetain(v60);
  sub_100009578(v49, &qword_1000AEAF0);
  v61 = sub_100046198();
  View.invalidatableContent(_:)(1, v57, v61);
  return sub_100009578(v56, &qword_1000AEAF8);
}

uint64_t sub_100028720()
{
  return sub_100014818((uint64_t (*)(void))sub_10003FA28, (uint64_t)&_s12CountFontKeyON);
}

uint64_t sub_100028734@<X0>(uint64_t a1@<X8>)
{
  return sub_1000281C8(a1);
}

uint64_t sub_100028774@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  _BYTE v71[16];
  id v72;

  v69 = a2;
  v62 = type metadata accessor for TTRAnyListWidget.ListBadge.GearCorner(0);
  __chkstk_darwin(v62);
  v63 = (uint64_t *)((char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v64 = sub_100006DA4(&qword_1000AEDE8);
  __chkstk_darwin(v64);
  v66 = (uint64_t)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100006DA4(&qword_1000AEDF0);
  __chkstk_darwin(v5);
  v61 = (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_100006DA4(&qword_1000AEDF8);
  v7 = __chkstk_darwin(v68);
  v65 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v67 = (uint64_t)&v58 - v9;
  v10 = sub_100006DA4(&qword_1000AEE00);
  __chkstk_darwin(v10);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for TTRAnyListWidget.ListBadge.Core(0);
  v13 = __chkstk_darwin(v70);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v58 - v16;
  v18 = *(_BYTE *)(a1 + 24);
  v19 = *(_QWORD *)(a1 + 32);
  v20 = *(_BYTE *)(a1 + 40);
  swift_retain(v19);
  v22 = sub_100025008(v21, v20, 0x726F6C6F43, 0xE500000000000000);
  swift_release(v19);
  v23 = a1 + 8;
  if ((v18 & 1) != 0)
  {
    v59 = v12;
    v60 = v10;
    v24 = v68;
    sub_100018778(a1, (uint64_t)&v72, &qword_1000AEE08);
    sub_100018778(v23, (uint64_t)v71, &qword_1000AEE10);
    *(_QWORD *)v17 = v22;
    sub_100018778((uint64_t)&v72, (uint64_t)(v17 + 8), &qword_1000AEE08);
    sub_100018778((uint64_t)v71, (uint64_t)(v17 + 16), &qword_1000AEE10);
    v17[32] = 1;
    v25 = &v17[*(int *)(v70 + 32)];
    *(_QWORD *)v25 = swift_getKeyPath(&unk_10008A4D0);
    v26 = sub_100006DA4(&qword_1000ADE30);
    swift_storeEnumTagMultiPayload(v25, v26, 0);
    v27 = v61;
    sub_1000072AC((uint64_t)v17, v61, type metadata accessor for TTRAnyListWidget.ListBadge.Core);
    sub_100048094(&v72);
    sub_1000480BC((uint64_t)v71);
    sub_100007EB4((uint64_t)v17, type metadata accessor for TTRAnyListWidget.ListBadge.Core);
    swift_retain(v19);
    v29 = sub_100025008(v28, v20, 0x726F6C6F43, 0xE500000000000000);
    swift_release(v19);
    v30 = v62;
    v31 = (uint64_t)v63;
    *v63 = v29;
    v32 = (_QWORD *)(v31 + *(int *)(v30 + 20));
    *v32 = swift_getKeyPath(&unk_10008A4D0);
    v33 = swift_storeEnumTagMultiPayload(v32, v26, 0);
    if (qword_1000AC8B0 != -1)
      v33 = swift_once(&qword_1000AC8B0, sub_100028DC0);
    v34 = *((double *)&xmmword_1000ADC98 + 1);
    v35 = (uint64_t)v59;
    v36 = v60;
    if (qword_1000AC8B8 != -1)
      v33 = swift_once(&qword_1000AC8B8, sub_100028DD8);
    v37 = v34 - *((double *)&xmmword_1000ADCA8 + 1);
    v38 = *(double *)&xmmword_1000ADC98 - *(double *)&xmmword_1000ADCA8;
    v39 = static Edge.Set.all.getter(v33);
    v40 = v66;
    sub_1000072AC(v31, v66, type metadata accessor for TTRAnyListWidget.ListBadge.GearCorner);
    v41 = v40 + *(int *)(v64 + 36);
    *(_BYTE *)v41 = v39;
    *(double *)(v41 + 8) = v37;
    *(double *)(v41 + 16) = v38;
    *(_QWORD *)(v41 + 24) = 0;
    *(_QWORD *)(v41 + 32) = 0;
    *(_BYTE *)(v41 + 40) = 0;
    v42 = sub_100007EB4(v31, type metadata accessor for TTRAnyListWidget.ListBadge.GearCorner);
    v43 = static Alignment.center.getter(v42);
    v45 = v44;
    v46 = (uint64_t)v65;
    v47 = (uint64_t)&v65[*(int *)(v24 + 36)];
    sub_100009434(v40, v47, &qword_1000AEDE8);
    v48 = (uint64_t *)(v47 + *(int *)(sub_100006DA4(&qword_1000AEE18) + 36));
    *v48 = v43;
    v48[1] = v45;
    sub_100009434(v27, v46, &qword_1000AEDF0);
    sub_100009578(v40, &qword_1000AEDE8);
    sub_100009578(v27, &qword_1000AEDF0);
    v49 = v67;
    sub_100018778(v46, v67, &qword_1000AEDF8);
    sub_100009434(v49, v35, &qword_1000AEDF8);
    swift_storeEnumTagMultiPayload(v35, v36, 1);
    v50 = sub_100007218(&qword_1000AEE20, type metadata accessor for TTRAnyListWidget.ListBadge.Core, (uint64_t)&unk_10008B428);
    v51 = sub_1000480E4();
    _ConditionalContent<>.init(storage:)(v69, v35, v70, v24, v50, v51);
    return sub_100009578(v49, &qword_1000AEDF8);
  }
  else
  {
    sub_100018778(a1, (uint64_t)&v72, &qword_1000AEE08);
    sub_100018778(v23, (uint64_t)v71, &qword_1000AEE10);
    *(_QWORD *)v15 = v22;
    sub_100018778((uint64_t)&v72, (uint64_t)(v15 + 8), &qword_1000AEE08);
    sub_100018778((uint64_t)v71, (uint64_t)(v15 + 16), &qword_1000AEE10);
    v15[32] = 0;
    v53 = v70;
    v54 = &v15[*(int *)(v70 + 32)];
    *(_QWORD *)v54 = swift_getKeyPath(&unk_10008A4D0);
    v55 = sub_100006DA4(&qword_1000ADE30);
    swift_storeEnumTagMultiPayload(v54, v55, 0);
    sub_100007EF0((uint64_t)v15, (uint64_t)v17, type metadata accessor for TTRAnyListWidget.ListBadge.Core);
    sub_1000072AC((uint64_t)v17, (uint64_t)v12, type metadata accessor for TTRAnyListWidget.ListBadge.Core);
    swift_storeEnumTagMultiPayload(v12, v10, 0);
    sub_100048094(&v72);
    sub_1000480BC((uint64_t)v71);
    v56 = sub_100007218(&qword_1000AEE20, type metadata accessor for TTRAnyListWidget.ListBadge.Core, (uint64_t)&unk_10008B428);
    v57 = sub_1000480E4();
    _ConditionalContent<>.init(storage:)(v69, v12, v53, v68, v56, v57);
    return sub_100007EB4((uint64_t)v17, type metadata accessor for TTRAnyListWidget.ListBadge.Core);
  }
}

int64x2_t sub_100028DC0()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4041000000000000uLL);
  xmmword_1000ADC98 = (__int128)result;
  return result;
}

__n128 sub_100028DD8()
{
  __n128 result;

  __asm { FMOV            V0.2D, #13.0 }
  xmmword_1000ADCA8 = (__int128)result;
  return result;
}

__n128 sub_100028DEC()
{
  __n128 result;

  __asm { FMOV            V0.2D, #14.0 }
  xmmword_1000ADCB8 = (__int128)result;
  return result;
}

uint64_t sub_100028E00@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t OpaqueTypeConformance2;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  _BYTE *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t *v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  _QWORD *v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  _QWORD *v95;
  __n128 v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  char v109;
  __int128 v110;
  uint64_t v111;
  uint64_t KeyPath;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v141;
  char v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  _QWORD *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD *v173;
  uint64_t v174;
  uint64_t v175;
  char v176;
  uint64_t v177;
  uint64_t v178;
  __int128 v179;
  uint64_t v180;
  __int128 v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;
  char v185;
  uint64_t v186;
  char v187;
  __int128 v188;

  v173 = a2;
  v152 = type metadata accessor for Image.ResizingMode(0);
  v158 = *(char **)(v152 - 8);
  __chkstk_darwin(v152);
  v151 = (char *)&v150 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100006DA4(&qword_1000AF0F0);
  __chkstk_darwin(v4);
  v154 = (char *)&v150 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = sub_100006DA4(&qword_1000AF0F8);
  v6 = __chkstk_darwin(v168);
  v153 = (char *)&v150 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v150 - v8;
  v172 = type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground(0);
  v10 = __chkstk_darwin(v172);
  v12 = (char *)&v150 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v150 - v13;
  v169 = sub_100006DA4(&qword_1000AF100);
  __chkstk_darwin(v169);
  v171 = (uint64_t)&v150 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = sub_100006DA4(&qword_1000AF108);
  __chkstk_darwin(v165);
  v166 = (uint64_t)&v150 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = sub_100006DA4(&qword_1000AF110);
  __chkstk_darwin(v170);
  v167 = (uint64_t *)((char *)&v150 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v159 = type metadata accessor for TTRAnyListWidget.ListBadge.EmojiBackground(0);
  __chkstk_darwin(v159);
  v160 = (uint64_t *)((char *)&v150 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v164 = sub_100006DA4(&qword_1000AF118);
  __chkstk_darwin(v164);
  v161 = (char *)&v150 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = type metadata accessor for WidgetRenderingMode(0);
  v156 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v21 = (uint64_t *)((char *)&v150 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v155 = type metadata accessor for TTRAnyListWidget.ListBadge.Core(0);
  __chkstk_darwin(v155);
  v23 = (char *)&v150 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = type metadata accessor for REMFeatureFlags(0);
  v162 = *(_QWORD *)(v163 - 8);
  v24 = __chkstk_darwin(v163);
  v26 = (char *)&v150 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v28 = (char *)&v150 - v27;
  v29 = sub_100006DA4(&qword_1000ACBD8);
  __chkstk_darwin(v29);
  v31 = (char *)&v150 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100006DA4(&qword_1000AF120);
  __chkstk_darwin(v32);
  v34 = (char *)&v150 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = *(_QWORD *)(a1 + 24);
  if (v35)
  {
    v158 = v34;
    v36 = *(_QWORD *)(a1 + 16);
    v37 = type metadata accessor for Font.Design(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v31, 1, 1, v37);
    swift_bridgeObjectRetain(v35);
    v38 = static Font.system(size:weight:design:)(0, 1, v31, 17.0);
    sub_100009578((uint64_t)v31, &qword_1000ACBD8);
    v39 = Text.font(_:)(v38, v36, v35, 0, _swiftEmptyArrayStorage);
    v41 = v40;
    v43 = v42;
    v45 = v44;
    swift_bridgeObjectRelease(v35);
    v46 = swift_release(v38);
    if (qword_1000AC8B0 != -1)
      v46 = swift_once(&qword_1000AC8B0, sub_100028DC0);
    v48 = *((_QWORD *)&xmmword_1000ADC98 + 1);
    v47 = xmmword_1000ADC98;
    v49 = static Alignment.center.getter(v46);
    _FrameLayout.init(width:height:alignment:)(&v184, v47, 0, v48, 0, v49, v50);
    v174 = v39;
    v175 = v41;
    v176 = v43 & 1;
    v177 = v45;
    v178 = v184;
    LOBYTE(v179) = v185;
    *((_QWORD *)&v179 + 1) = v186;
    LOBYTE(v180) = v187;
    v181 = v188;
    v51 = v162;
    v52 = v163;
    v53 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v162 + 104))(v28, enum case for REMFeatureFlags.accentableWidgets(_:), v163);
    LOBYTE(v47) = REMFeatureFlags.isEnabled.getter(v53);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v28, v52);
    v54 = a1;
    sub_1000072AC(a1, (uint64_t)v23, type metadata accessor for TTRAnyListWidget.ListBadge.Core);
    v55 = 0;
    if ((v47 & 1) != 0)
    {
      sub_100024A50(&qword_1000ADE30, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x800000010008FE00, v21);
      v55 = sub_100026AC0();
      (*(void (**)(_QWORD *, uint64_t))(v156 + 8))(v21, v157);
    }
    sub_100007EB4((uint64_t)v23, type metadata accessor for TTRAnyListWidget.ListBadge.Core);
    v56 = sub_100006DA4(&qword_1000AF198);
    v57 = sub_100006DA4(&qword_1000AF1A0);
    v58 = sub_100049DC0(&qword_1000AF1A8, &qword_1000AF198);
    v59 = sub_100007258(&qword_1000AF1B0);
    v60 = sub_10003EFC8(&qword_1000AF1B8, &qword_1000AF1B0, (void (*)(void))sub_100049E1C);
    v182 = v59;
    v183 = v60;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v182, &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>, 1);
    v62 = (uint64_t)v158;
    View.ttr_if<A>(_:transform:)(v55 & 1, sub_100029C38, 0, v56, v57, v58, OpaqueTypeConformance2);
    v63 = v177;
    sub_10000729C(v174, v175, v176);
    swift_bridgeObjectRelease(v63);
    v64 = *(_QWORD *)v54;
    v65 = *(_BYTE *)(v54 + 32);
    v66 = v160;
    *v160 = *(_QWORD *)v54;
    v66[8] = v65;
    v67 = &v66[*(int *)(v159 + 24)];
    *v67 = swift_getKeyPath(&unk_10008A4D0);
    v68 = sub_100006DA4(&qword_1000ADE30);
    swift_storeEnumTagMultiPayload(v67, v68, 0);
    swift_retain(v64);
    v70 = static Alignment.center.getter(v69);
    v72 = v71;
    v73 = v164;
    v74 = (uint64_t)v161;
    v75 = (uint64_t)&v161[*(int *)(v164 + 36)];
    v76 = &qword_1000AF120;
    sub_100009434(v62, v75, &qword_1000AF120);
    v77 = (uint64_t *)(v75 + *(int *)(sub_100006DA4(&qword_1000AF148) + 36));
    *v77 = v70;
    v77[1] = v72;
    sub_100007EF0((uint64_t)v66, v74, type metadata accessor for TTRAnyListWidget.ListBadge.EmojiBackground);
    v78 = v166;
    sub_100009434(v74, v166, &qword_1000AF118);
    swift_storeEnumTagMultiPayload(v78, v165, 0);
    v79 = sub_100049BEC();
    v80 = sub_100049C88();
    v81 = v167;
    _ConditionalContent<>.init(storage:)(v167, v78, v73, v168, v79, v80);
    v82 = v171;
    sub_100009434((uint64_t)v81, v171, &qword_1000AF110);
    swift_storeEnumTagMultiPayload(v82, v169, 0);
    v83 = sub_100049B7C(&qword_1000AF128, &qword_1000AF110, (void (*)(void))sub_100049BEC, (void (*)(void))sub_100049C88);
    v84 = sub_100007218(&qword_1000AF158, type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground, (uint64_t)&unk_10008B514);
    _ConditionalContent<>.init(storage:)(v173, v82, v170, v172, v83, v84);
    sub_100009578((uint64_t)v81, &qword_1000AF110);
    sub_100009578(v74, &qword_1000AF118);
    v85 = v62;
    return sub_100009578(v85, v76);
  }
  v86 = v158;
  v87 = v173;
  v88 = (uint64_t)v14;
  v161 = v9;
  v89 = *(void **)(a1 + 8);
  if (v89)
  {
    v90 = *(_QWORD *)a1;
    v91 = *(_BYTE *)(a1 + 32);
    v92 = (uint64_t)v14;
    *(_QWORD *)v14 = v90;
    v14[8] = v91;
    v93 = &v14[*(int *)(v172 + 24)];
    *(_QWORD *)v93 = swift_getKeyPath(&unk_10008A4D0);
    v94 = sub_100006DA4(&qword_1000ADE30);
    swift_storeEnumTagMultiPayload(v93, v94, 0);
    v95 = v89;
    v96 = swift_retain(v90);
    v160 = v95;
    v97 = Image.init(uiImage:)(v95, v96);
    v98 = v151;
    v99 = v152;
    (*((void (**)(char *, _QWORD, uint64_t))v86 + 13))(v151, enum case for Image.ResizingMode.stretch(_:), v152);
    v100 = Image.resizable(capInsets:resizingMode:)(v98, v97, 0.0, 0.0, 0.0, 0.0);
    swift_release(v97);
    v101 = (*((uint64_t (**)(char *, uint64_t))v86 + 1))(v98, v99);
    if (qword_1000AC8B0 != -1)
      v101 = swift_once(&qword_1000AC8B0, sub_100028DC0);
    v102 = xmmword_1000ADC98;
    v103 = static Alignment.center.getter(v101);
    v105 = _FrameLayout.init(width:height:alignment:)(&v184, v102, 0, *((_QWORD *)&v102 + 1), 0, v103, v104);
    v106 = v184;
    v107 = v185;
    v108 = v186;
    v109 = v187;
    v110 = v188;
    v111 = static Color.white.getter(v105);
    KeyPath = swift_getKeyPath(&unk_10008B038);
    v174 = v100;
    v175 = v106;
    v176 = v107;
    v177 = v108;
    LOBYTE(v178) = v109;
    v179 = v110;
    v180 = KeyPath;
    *(_QWORD *)&v181 = v111;
    v113 = v162;
    v114 = v163;
    v115 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v162 + 104))(v26, enum case for REMFeatureFlags.accentableWidgets(_:), v163);
    v116 = REMFeatureFlags.isEnabled.getter(v115);
    (*(void (**)(char *, uint64_t))(v113 + 8))(v26, v114);
    v117 = sub_100006DA4(&qword_1000AF170);
    v118 = sub_100006DA4(&qword_1000AF178);
    v119 = sub_100049D24();
    v182 = v117;
    v183 = v119;
    v120 = swift_getOpaqueTypeConformance2(&v182, &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>, 1);
    v121 = (uint64_t)v154;
    View.ttr_if<A>(_:transform:)(v116 & 1, sub_100029D68, 0, v117, v118, v119, v120);
    v122 = v174;
    v123 = v181;
    swift_release(v180);
    swift_release(v122);
    v124 = swift_release(v123);
    v125 = static Alignment.center.getter(v124);
    v127 = v126;
    v128 = v168;
    v129 = (uint64_t)v153;
    v130 = (uint64_t)&v153[*(int *)(v168 + 36)];
    sub_100009434(v121, v130, &qword_1000AF0F0);
    v131 = (uint64_t *)(v130 + *(int *)(sub_100006DA4(&qword_1000AF168) + 36));
    *v131 = v125;
    v131[1] = v127;
    sub_1000072AC(v92, v129, type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground);
    sub_100009578(v121, &qword_1000AF0F0);
    sub_100007EB4(v92, type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground);
    v76 = &qword_1000AF0F8;
    v132 = (uint64_t)v161;
    sub_100018778(v129, (uint64_t)v161, &qword_1000AF0F8);
    v133 = v166;
    sub_100009434(v132, v166, &qword_1000AF0F8);
    swift_storeEnumTagMultiPayload(v133, v165, 1);
    v134 = sub_100049BEC();
    v135 = sub_100049C88();
    v136 = v167;
    _ConditionalContent<>.init(storage:)(v167, v133, v164, v128, v134, v135);
    v137 = v171;
    sub_100009434((uint64_t)v136, v171, &qword_1000AF110);
    swift_storeEnumTagMultiPayload(v137, v169, 0);
    v138 = sub_100049B7C(&qword_1000AF128, &qword_1000AF110, (void (*)(void))sub_100049BEC, (void (*)(void))sub_100049C88);
    v139 = sub_100007218(&qword_1000AF158, type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground, (uint64_t)&unk_10008B514);
    _ConditionalContent<>.init(storage:)(v173, v137, v170, v172, v138, v139);

    sub_100009578((uint64_t)v136, &qword_1000AF110);
    v85 = v132;
    return sub_100009578(v85, v76);
  }
  v141 = *(_QWORD *)a1;
  v142 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)v12 = *(_QWORD *)a1;
  v12[8] = v142;
  v143 = v172;
  v144 = &v12[*(int *)(v172 + 24)];
  *(_QWORD *)v144 = swift_getKeyPath(&unk_10008A4D0);
  v145 = sub_100006DA4(&qword_1000ADE30);
  swift_storeEnumTagMultiPayload(v144, v145, 0);
  v146 = v88;
  sub_100007EF0((uint64_t)v12, v88, type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground);
  v147 = v171;
  sub_1000072AC(v88, v171, type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground);
  swift_storeEnumTagMultiPayload(v147, v169, 1);
  v148 = sub_100049B7C(&qword_1000AF128, &qword_1000AF110, (void (*)(void))sub_100049BEC, (void (*)(void))sub_100049C88);
  v149 = sub_100007218(&qword_1000AF158, type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground, (uint64_t)&unk_10008B514);
  swift_retain(v141);
  _ConditionalContent<>.init(storage:)(v87, v147, v170, v143, v148, v149);
  return sub_100007EB4(v146, type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground);
}

uint64_t sub_100029C38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = static Color.black.getter(a1);
  static Edge.Set.all.getter(v5);
  v6 = v3;
  v7 = v4;
  v8 = v1;
  v9 = v1;
  v10 = v2;
  v11 = v2;
  LOBYTE(v2) = v6;
  sub_100009520(v8, v10, v6);
  swift_bridgeObjectRetain(v7);
  v12 = sub_100006DA4(&qword_1000AF1B0);
  v13 = sub_10003EFC8(&qword_1000AF1B8, &qword_1000AF1B0, (void (*)(void))sub_100049E1C);
  View.widgetAccentable(_:)(1, v12, v13);
  sub_10000729C(v9, v11, v2);
  swift_release(v5);
  return swift_bridgeObjectRelease(v7);
}

uint64_t sub_100029D68()
{
  uint64_t v0;
  unint64_t v1;

  v0 = sub_100006DA4(&qword_1000AF170);
  v1 = sub_100049D24();
  return View.widgetAccentable(_:)(1, v0, v1);
}

uint64_t sub_100029DF0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_100028E00(v1, a1);
}

uint64_t sub_100029DF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;
  __int16 v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  __int128 v53;
  _QWORD v54[4];
  unsigned __int8 v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  char v59;
  __int128 v60;
  CGRect v61;
  CGRect v62;

  v2 = v1;
  v41 = a1;
  v37 = type metadata accessor for WidgetRenderingMode(0);
  v36 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v35 = (uint64_t *)((char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground(0);
  __chkstk_darwin(v34);
  v40 = (uint64_t)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for REMFeatureFlags(0);
  v38 = *(_QWORD *)(v39 - 8);
  v5 = __chkstk_darwin(v39);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v2 + 8) & 1) != 0)
  {
    if (qword_1000AC8B0 != -1)
      swift_once(&qword_1000AC8B0, sub_100028DC0);
    v61.size = (CGSize)xmmword_1000ADC98;
    v61.origin.x = 0.0;
    v61.origin.y = 0.0;
    v62 = CGRectInset(v61, -2.0, -2.0);
    Path.init(_:)(v54, (__n128)v62.origin, *(__n128 *)&v62.origin.y, (__n128)v62.size, *(__n128 *)&v62.size.height);
  }
  else
  {
    if (qword_1000AC8B0 != -1)
      v5 = swift_once(&qword_1000AC8B0, sub_100028DC0);
    Path.init(ellipseIn:)(v54, v5, 0.0, 0.0, *(double *)&xmmword_1000ADC98, *((double *)&xmmword_1000ADC98 + 1));
  }
  v9 = v54[2];
  v8 = v54[3];
  v10 = v55;
  v12 = v54[0];
  v11 = v54[1];
  v13 = *(_QWORD *)v2;
  v14 = qword_1000AC8B0;
  swift_retain(*(_QWORD *)v2);
  if (v14 != -1)
    v15 = swift_once(&qword_1000AC8B0, sub_100028DC0);
  v16 = *((_QWORD *)&xmmword_1000ADC98 + 1);
  v17 = xmmword_1000ADC98;
  v18 = static Alignment.center.getter(v15);
  _FrameLayout.init(width:height:alignment:)(&v56, v17, 0, v16, 0, v18, v19);
  v42 = v12;
  v43 = v11;
  v44 = v9;
  v45 = v8;
  v46 = v10;
  v47 = v13;
  v48 = 256;
  v49 = v56;
  v50 = v57;
  v51 = v58;
  v52 = v59;
  v53 = v60;
  v20 = v38;
  v21 = v39;
  v22 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v38 + 104))(v7, enum case for REMFeatureFlags.accentableWidgets(_:), v39);
  LOBYTE(v16) = REMFeatureFlags.isEnabled.getter(v22);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v21);
  v23 = v2;
  v24 = v40;
  sub_1000072AC(v23, v40, type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground);
  v25 = 0;
  if ((v16 & 1) != 0)
  {
    v26 = v35;
    sub_100024A50(&qword_1000ADE30, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x800000010008FE00, v35);
    v25 = sub_100026AC0();
    (*(void (**)(_QWORD *, uint64_t))(v36 + 8))(v26, v37);
  }
  sub_100007EB4(v24, type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground);
  v27 = sub_100006DA4(&qword_1000AF540);
  v28 = sub_100006DA4(&qword_1000AF548);
  v29 = sub_10004B274();
  v30 = sub_10004B2F8();
  View.ttr_if<A>(_:transform:)(v25 & 1, sub_10002A1D8, 0, v27, v28, v29, v30);
  v31 = v47;
  sub_10004A404(v42, v43, v44, v45, v46);
  return swift_release(v31);
}

uint64_t sub_10002A1D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  uint64_t v16;
  unint64_t v17;
  _OWORD v19[2];
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  __int128 v28;

  v4 = sub_100006DA4(&qword_1000AF560);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v6) = *(_BYTE *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_BYTE *)(a1 + 48);
  v10 = *(_BYTE *)(a1 + 49);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_BYTE *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 72);
  v14 = *(_BYTE *)(a1 + 80);
  v15 = *(_OWORD *)(a1 + 16);
  v19[0] = *(_OWORD *)a1;
  v19[1] = v15;
  v20 = v6;
  v21 = v8;
  v22 = v9;
  v23 = v10;
  v24 = v11;
  v25 = v12;
  v26 = v13;
  v27 = v14;
  v28 = *(_OWORD *)(a1 + 88);
  v16 = sub_100006DA4(&qword_1000AF540);
  v17 = sub_10004B274();
  View.widgetAccentable(_:)(1, v16, v17);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(a2, v7, v4);
  *(_QWORD *)(a2 + *(int *)(sub_100006DA4(&qword_1000AF548) + 36)) = 0x3FBEB851EB851EB8;
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10002A314@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t (*v17)(_QWORD);
  char v18;
  void (*v19)(_QWORD *, uint64_t);
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  unint64_t v49;
  void (*v50)(_QWORD *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  unsigned __int8 v62;
  uint64_t v63;
  __int16 v64;
  _OWORD v65[2];
  unsigned __int8 v66;
  _OWORD v67[3];
  CGRect v68;
  CGRect v69;

  v2 = v1;
  v59 = a1;
  v3 = type metadata accessor for TTRAnyListWidget.ListBadge.EmojiBackground(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for REMFeatureFlags(0);
  v54 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v53 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100006DA4(&qword_1000AF4D8);
  __chkstk_darwin(v7);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100006DA4(&qword_1000AF4E0);
  __chkstk_darwin(v10);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for WidgetRenderingMode(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (uint64_t *)((char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = v3;
  v49 = (unint64_t)"nders in any list.";
  sub_100024A50(&qword_1000ADE30, v17, 0xD000000000000013, 0x800000010008FE00, v16);
  v18 = sub_100026AC0();
  v19 = *(void (**)(_QWORD *, uint64_t))(v14 + 8);
  v51 = v13;
  v50 = v19;
  v20 = ((uint64_t (*)(_QWORD *, uint64_t))v19)(v16, v13);
  v21 = *(_BYTE *)(v2 + 8);
  v58 = v5;
  v57 = v12;
  v56 = v10;
  if ((v21 & 1) != 0)
  {
    if (qword_1000AC8B0 != -1)
      swift_once(&qword_1000AC8B0, sub_100028DC0);
    v68.size = (CGSize)xmmword_1000ADC98;
    v68.origin.x = 0.0;
    v68.origin.y = 0.0;
    v69 = CGRectInset(v68, -2.0, -2.0);
    Path.init(_:)(v65, (__n128)v69.origin, *(__n128 *)&v69.origin.y, (__n128)v69.size, *(__n128 *)&v69.size.height);
  }
  else
  {
    if (qword_1000AC8B0 != -1)
      v20 = swift_once(&qword_1000AC8B0, sub_100028DC0);
    Path.init(ellipseIn:)(v65, v20, 0.0, 0.0, *(double *)&xmmword_1000ADC98, *((double *)&xmmword_1000ADC98 + 1));
  }
  v22 = *(_QWORD *)v2;
  v60 = v65[0];
  v61 = v65[1];
  v62 = v66;
  v63 = v22;
  v64 = 256;
  v23 = __chkstk_darwin(v22);
  *(&v48 - 2) = v2;
  swift_retain(v23);
  v24 = sub_100006DA4(&qword_1000AF2D0);
  v25 = sub_100006DA4(&qword_1000AF4E8);
  v26 = sub_1000095B4(&qword_1000AF2E0, &qword_1000AF2D0, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
  v27 = sub_10004B004(&qword_1000AF4F0, &qword_1000AF4E8, &qword_1000AF4F8, &qword_1000AF500);
  View.ttr_if<A>(_:transform:)((v18 & 1) == 0, sub_10004B0D4, &v48 - 4, v24, v25, v26, v27);
  v28 = v63;
  sub_10004A404(v60, *((uint64_t *)&v60 + 1), v61, *((uint64_t *)&v61 + 1), v62);
  v29 = swift_release(v28);
  if (qword_1000AC8B0 != -1)
    v29 = swift_once(&qword_1000AC8B0, sub_100028DC0);
  v31 = *((_QWORD *)&xmmword_1000ADC98 + 1);
  v30 = xmmword_1000ADC98;
  v32 = static Alignment.center.getter(v29);
  _FrameLayout.init(width:height:alignment:)(v67, v30, 0, v31, 0, v32, v33);
  v34 = (uint64_t)v57;
  sub_100009434((uint64_t)v9, (uint64_t)v57, &qword_1000AF4D8);
  v35 = v56;
  v36 = (_OWORD *)(v34 + *(int *)(v56 + 36));
  v37 = v67[1];
  *v36 = v67[0];
  v36[1] = v37;
  v36[2] = v67[2];
  sub_100009578((uint64_t)v9, &qword_1000AF4D8);
  v38 = v54;
  v39 = v53;
  v40 = v55;
  v41 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v54 + 104))(v53, enum case for REMFeatureFlags.accentableWidgets(_:), v55);
  LOBYTE(v31) = REMFeatureFlags.isEnabled.getter(v41);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
  v42 = (uint64_t)v58;
  sub_1000072AC(v2, (uint64_t)v58, type metadata accessor for TTRAnyListWidget.ListBadge.EmojiBackground);
  v43 = 0;
  if ((v31 & 1) != 0)
  {
    sub_100024A50(&qword_1000ADE30, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, v49 | 0x8000000000000000, v16);
    v43 = sub_100026AC0();
    v50(v16, v51);
  }
  sub_100007EB4(v42, type metadata accessor for TTRAnyListWidget.ListBadge.EmojiBackground);
  v44 = sub_100006DA4(&qword_1000AF508);
  v45 = sub_10004B0DC();
  v46 = sub_10004B1A4();
  View.ttr_if<A>(_:transform:)(v43 & 1, sub_10002ADA4, 0, v35, v44, v45, v46);
  return sub_100009578(v34, &qword_1000AF4E0);
}

uint64_t sub_10002A880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  int v65;
  char *v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v75[5];
  _QWORD v76[4];
  unsigned __int8 v77;
  CGRect v78;
  CGRect v79;

  v62 = a3;
  v73 = sub_100006DA4(&qword_1000AF500);
  __chkstk_darwin(v73);
  v74 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v6);
  v66 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for BlendMode(0);
  v8 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_100006DA4(&qword_1000AF530);
  __chkstk_darwin(v61);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Color.RGBColorSpace(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)a1;
  v70 = *(_QWORD *)(a1 + 8);
  v71 = v17;
  v18 = *(_QWORD *)(a1 + 16);
  v68 = *(_QWORD *)(a1 + 24);
  v69 = v18;
  v67 = *(unsigned __int8 *)(a1 + 32);
  v72 = *(_QWORD *)(a1 + 40);
  v65 = *(unsigned __int8 *)(a1 + 48);
  v64 = *(unsigned __int8 *)(a1 + 49);
  v19 = sub_100006DA4(&qword_1000AF538);
  v20 = swift_allocObject(v19, 48, 7);
  *(_OWORD *)(v20 + 16) = xmmword_1000895E0;
  v21 = enum case for Color.RGBColorSpace.sRGB(_:);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 104);
  v22(v16, enum case for Color.RGBColorSpace.sRGB(_:), v13);
  *(_QWORD *)(v20 + 32) = Color.init(_:white:opacity:)(v16, 0.796078431, 1.0);
  v22(v16, v21, v13);
  *(_QWORD *)(v20 + 40) = Color.init(_:white:opacity:)(v16, 0.701960784, 1.0);
  v75[0] = v20;
  specialized Array._endMutation()();
  v23 = Gradient.init(colors:)(v75[0]);
  v24 = static UnitPoint.top.getter();
  v26 = v25;
  v27 = static UnitPoint.bottom.getter();
  v29 = LinearGradient.init(gradient:startPoint:endPoint:)(v75, v23, v24, v26, v27, v28);
  v60 = v75[0];
  v30 = v75[1];
  v31 = v75[2];
  v32 = v75[3];
  v33 = v75[4];
  if ((*(_BYTE *)(a2 + 8) & 1) != 0)
  {
    if (qword_1000AC8B0 != -1)
      swift_once(&qword_1000AC8B0, sub_100028DC0);
    v78.size = (CGSize)xmmword_1000ADC98;
    v78.origin.x = 0.0;
    v78.origin.y = 0.0;
    v79 = CGRectInset(v78, -2.0, -2.0);
    Path.init(_:)(v76, (__n128)v79.origin, *(__n128 *)&v79.origin.y, (__n128)v79.size, *(__n128 *)&v79.size.height);
  }
  else
  {
    if (qword_1000AC8B0 != -1)
      v29 = (_QWORD *)swift_once(&qword_1000AC8B0, sub_100028DC0);
    Path.init(ellipseIn:)(v76, v29, 0.0, 0.0, *(double *)&xmmword_1000ADC98, *((double *)&xmmword_1000ADC98 + 1));
  }
  v34 = v76[2];
  v35 = v76[3];
  v36 = v76[0];
  v37 = v76[1];
  v38 = v77;
  v39 = v10;
  v40 = v63;
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for BlendMode.screen(_:), v63);
  v41 = (uint64_t)v66;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v66, v39, v40);
  sub_1000072AC(v41, (uint64_t)&v12[*(int *)(v61 + 36)], (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  *(_QWORD *)v12 = v36;
  *((_QWORD *)v12 + 1) = v37;
  v42 = v34;
  v59 = v34;
  *((_QWORD *)v12 + 2) = v34;
  *((_QWORD *)v12 + 3) = v35;
  v12[32] = v38;
  v43 = v60;
  *((_QWORD *)v12 + 5) = v60;
  *((_QWORD *)v12 + 6) = v30;
  *((_QWORD *)v12 + 7) = v31;
  *((_QWORD *)v12 + 8) = v32;
  *((_QWORD *)v12 + 9) = v33;
  *((_WORD *)v12 + 40) = 256;
  sub_10004B25C(v36, v37, v42, v35, v38);
  swift_bridgeObjectRetain(v43);
  sub_100007EB4(v41, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v39, v40);
  sub_10004A404(v36, v37, v59, v35, v38);
  v44 = swift_bridgeObjectRelease(v43);
  v45 = static Alignment.center.getter(v44);
  v47 = v46;
  v48 = v74;
  sub_100009434((uint64_t)v12, v74, &qword_1000AF530);
  v49 = (uint64_t *)(v48 + *(int *)(v73 + 36));
  *v49 = v45;
  v49[1] = v47;
  v50 = sub_100006DA4(&qword_1000AF4E8);
  v51 = v62;
  sub_100009434(v48, v62 + *(int *)(v50 + 36), &qword_1000AF500);
  v53 = v70;
  v52 = v71;
  *(_QWORD *)v51 = v71;
  *(_QWORD *)(v51 + 8) = v53;
  v55 = v68;
  v54 = v69;
  *(_QWORD *)(v51 + 16) = v69;
  *(_QWORD *)(v51 + 24) = v55;
  v56 = v67;
  *(_BYTE *)(v51 + 32) = v67;
  v57 = v72;
  *(_QWORD *)(v51 + 40) = v72;
  *(_BYTE *)(v51 + 48) = v65;
  *(_BYTE *)(v51 + 49) = v64;
  sub_10004B25C(v52, v53, v54, v55, v56);
  swift_retain(v57);
  sub_100009578(v48, &qword_1000AF500);
  return sub_100009578((uint64_t)v12, &qword_1000AF530);
}

uint64_t sub_10002ADA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = sub_100006DA4(&qword_1000AF528);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100006DA4(&qword_1000AF4E0);
  v7 = sub_10004B0DC();
  View.widgetAccentable(_:)(1, v6, v7);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(a1, v5, v2);
  *(_QWORD *)(a1 + *(int *)(sub_100006DA4(&qword_1000AF508) + 36)) = 0x3FBEB851EB851EB8;
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

double sub_10002AE88@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  _QWORD *v7;
  uint64_t v8;
  void (*v9)(_QWORD, _QWORD, _QWORD);
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double result;
  uint64_t v31;
  double v32[2];
  int v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[4];
  unsigned __int8 v43;
  _QWORD v44[4];
  unsigned __int8 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  int v50;
  __int16 v51;
  _BYTE v52[11];
  __int16 v53;
  _BYTE v54[11];
  __int16 v55;
  _DWORD v56[3];
  CGRect v57;
  CGRect v58;

  v2 = type metadata accessor for RoundedCornerStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000AC8B0 != -1)
    swift_once(&qword_1000AC8B0, sub_100028DC0);
  v6 = xmmword_1000ADC98;
  v57.origin.x = 0.0;
  v57.origin.y = 0.0;
  v57.size = (CGSize)xmmword_1000ADC98;
  v58 = CGRectInset(v57, -2.0, -2.0);
  v7 = Path.init(_:)(v42, (__n128)v58.origin, *(__n128 *)&v58.origin.y, (__n128)v58.size, *(__n128 *)&v58.size.height);
  v40 = v42[0];
  v39 = v42[1];
  v38 = v42[2];
  v37 = v42[3];
  v36 = v43;
  v41 = static Color.black.getter(v7);
  v8 = enum case for RoundedCornerStyle.continuous(_:);
  v9 = *(void (**)(_QWORD, _QWORD, _QWORD))(v3 + 104);
  v9(v5, enum case for RoundedCornerStyle.continuous(_:), v2);
  v10 = Path.init(roundedRect:cornerRadius:style:)(v44, v5, 0.0, 0.0, *(double *)&v6, *((double *)&v6 + 1), 10.0);
  v11 = v44[1];
  v35 = v44[0];
  v12 = v44[2];
  v34 = v44[3];
  v33 = v45;
  v13 = static Color.white.getter(v10);
  if (qword_1000AC8C0 != -1)
    swift_once(&qword_1000AC8C0, sub_100028DEC);
  v14 = *(double *)&v6 - *(double *)&xmmword_1000ADCB8;
  v15 = *((double *)&xmmword_1000ADC98 + 1) - *((double *)&xmmword_1000ADCB8 + 1);
  v16 = *(double *)&xmmword_1000ADCB8 + 2.0;
  v17 = *((double *)&xmmword_1000ADCB8 + 1) + 2.0;
  v9(v5, v8, v2);
  v18 = Path.init(roundedRect:cornerSize:style:)(&v46, v5, v14, v15, v16, v17, 5.0, 5.0);
  *(_OWORD *)v32 = v46;
  v19 = v47;
  v20 = v48;
  v21 = v49;
  v22 = static Color.black.getter(v18);
  v23 = static Alignment.center.getter(v22);
  v25 = v24;
  v26 = static Alignment.center.getter(v23);
  v27 = v39;
  *(_QWORD *)a1 = v40;
  *(_QWORD *)(a1 + 8) = v27;
  v28 = v37;
  *(_QWORD *)(a1 + 16) = v38;
  *(_QWORD *)(a1 + 24) = v28;
  *(_BYTE *)(a1 + 32) = v36;
  *(_DWORD *)(a1 + 33) = *(_DWORD *)v54;
  *(_DWORD *)(a1 + 36) = *(_DWORD *)&v54[3];
  *(_QWORD *)(a1 + 40) = v41;
  *(_WORD *)(a1 + 48) = 256;
  *(_DWORD *)(a1 + 50) = *(_DWORD *)&v52[7];
  *(_WORD *)(a1 + 54) = v53;
  *(_QWORD *)(a1 + 56) = v35;
  *(_QWORD *)(a1 + 64) = v11;
  v29 = v34;
  *(_QWORD *)(a1 + 72) = v12;
  *(_QWORD *)(a1 + 80) = v29;
  *(_BYTE *)(a1 + 88) = v33;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)&v52[3];
  *(_DWORD *)(a1 + 89) = *(_DWORD *)v52;
  *(_QWORD *)(a1 + 96) = v13;
  *(_WORD *)(a1 + 104) = 256;
  *(_WORD *)(a1 + 110) = v51;
  *(_DWORD *)(a1 + 106) = v50;
  *(_QWORD *)(a1 + 112) = v23;
  *(_QWORD *)(a1 + 120) = v25;
  result = v32[0];
  *(_OWORD *)(a1 + 128) = *(_OWORD *)v32;
  *(_QWORD *)(a1 + 144) = v19;
  *(_QWORD *)(a1 + 152) = v20;
  *(_BYTE *)(a1 + 160) = v21;
  LODWORD(v29) = v56[0];
  *(_DWORD *)(a1 + 164) = *(_DWORD *)((char *)v56 + 3);
  *(_DWORD *)(a1 + 161) = v29;
  *(_QWORD *)(a1 + 168) = v22;
  *(_WORD *)(a1 + 176) = 256;
  *(_DWORD *)(a1 + 178) = *(_DWORD *)&v54[7];
  *(_WORD *)(a1 + 182) = v55;
  *(_QWORD *)(a1 + 184) = v26;
  *(_QWORD *)(a1 + 192) = v31;
  return result;
}

uint64_t sub_10002B1DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t OpaqueTypeConformance2;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  __int128 v40;
  __int128 v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _OWORD *v68;
  __int128 v69;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int16 v90;
  _OWORD v91[3];
  _OWORD v92[2];
  char v93;

  v86 = a1;
  v74 = type metadata accessor for WidgetRenderingMode(0);
  v73 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v72 = (uint64_t *)((char *)&v71 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71 = type metadata accessor for TTRAnyListWidget.ListBadge.GearCorner(0);
  __chkstk_darwin(v71);
  v81 = (uint64_t)&v71 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for RoundedCornerStyle(0);
  v78 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v80 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100006DA4(&qword_1000AF2A8);
  __chkstk_darwin(v4);
  v84 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_100006DA4(&qword_1000AF2B0);
  __chkstk_darwin(v83);
  v85 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for REMFeatureFlags(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v77 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v71 - v11;
  v13 = sub_100006DA4(&qword_1000ACBD8);
  __chkstk_darwin(v13);
  v15 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100006DA4(&qword_1000AF2B8);
  __chkstk_darwin(v16);
  v18 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_100006DA4(&qword_1000AF2C0);
  __chkstk_darwin(v76);
  v20 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = Image.init(systemName:)(0x7061687372616567, 0xEE006C6C69662E65);
  v22 = static Font.Weight.bold.getter(v21);
  v23 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v15, 1, 1, v23);
  v24 = static Font.system(size:weight:design:)(*(_QWORD *)&v22, 0, v15, 9.0);
  sub_100009578((uint64_t)v15, &qword_1000ACBD8);
  KeyPath = swift_getKeyPath(&unk_10008B008);
  v26 = static Color.white.getter(KeyPath);
  v27 = swift_getKeyPath(&unk_10008B038);
  *(_QWORD *)&v87 = v21;
  *((_QWORD *)&v87 + 1) = KeyPath;
  *(_QWORD *)&v88 = v24;
  *((_QWORD *)&v88 + 1) = v27;
  *(_QWORD *)&v89 = v26;
  v28 = enum case for REMFeatureFlags.accentableWidgets(_:);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v30 = v29(v12, enum case for REMFeatureFlags.accentableWidgets(_:), v7);
  LOBYTE(v24) = REMFeatureFlags.isEnabled.getter(v30);
  v75 = *(void (**)(char *, uint64_t))(v8 + 8);
  v75(v12, v7);
  v31 = sub_100006DA4(&qword_1000AD708);
  v32 = sub_100006DA4(&qword_1000AF2C8);
  v33 = sub_100018984();
  *(_QWORD *)&v91[0] = v31;
  *((_QWORD *)&v91[0] + 1) = v33;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v91, &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>, 1);
  View.ttr_if<A>(_:transform:)(v24 & 1, sub_10002B9A4, 0, v31, v32, v33, OpaqueTypeConformance2);
  swift_release(v87);
  swift_release(*((_QWORD *)&v87 + 1));
  swift_release(v88);
  swift_release(*((_QWORD *)&v88 + 1));
  v35 = swift_release(v89);
  if (qword_1000AC8B8 != -1)
    v35 = swift_once(&qword_1000AC8B8, sub_100028DD8);
  v36 = xmmword_1000ADCA8;
  v37 = static Alignment.center.getter(v35);
  _FrameLayout.init(width:height:alignment:)(v91, v36, 0, *((_QWORD *)&v36 + 1), 0, v37, v38);
  sub_100009434((uint64_t)v18, (uint64_t)v20, &qword_1000AF2B8);
  v39 = &v20[*(int *)(v76 + 36)];
  v40 = v91[1];
  *(_OWORD *)v39 = v91[0];
  *((_OWORD *)v39 + 1) = v40;
  *((_OWORD *)v39 + 2) = v91[2];
  sub_100009578((uint64_t)v18, &qword_1000AF2B8);
  v41 = xmmword_1000ADCA8;
  v42 = v80;
  (*(void (**)(char *, _QWORD, uint64_t))(v78 + 104))(v80, enum case for RoundedCornerStyle.continuous(_:), v79);
  Path.init(roundedRect:cornerSize:style:)(v92, v42, 0.0, 0.0, *(double *)&v41, *((double *)&v41 + 1), 4.0, 4.0);
  v43 = (uint64_t)v82;
  v44 = *v82;
  v87 = v92[0];
  v88 = v92[1];
  LOBYTE(v89) = v93;
  *((_QWORD *)&v89 + 1) = v44;
  v90 = 256;
  v45 = v77;
  v29(v77, v28, v7);
  swift_retain(v44);
  LOBYTE(v44) = REMFeatureFlags.isEnabled.getter(v46);
  v75(v45, v7);
  v47 = v81;
  sub_1000072AC(v43, v81, type metadata accessor for TTRAnyListWidget.ListBadge.GearCorner);
  v48 = 0;
  if ((v44 & 1) != 0)
  {
    v49 = v72;
    sub_100024A50(&qword_1000ADE30, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x800000010008FE00, v72);
    v48 = sub_100026AC0();
    (*(void (**)(_QWORD *, uint64_t))(v73 + 8))(v49, v74);
  }
  sub_100007EB4(v47, type metadata accessor for TTRAnyListWidget.ListBadge.GearCorner);
  v50 = sub_100006DA4(&qword_1000AF2D0);
  v51 = sub_100006DA4(&qword_1000AF2D8);
  v52 = sub_1000095B4(&qword_1000AF2E0, &qword_1000AF2D0, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
  v53 = sub_10004A350();
  v54 = (uint64_t)v84;
  View.ttr_if<A>(_:transform:)(v48 & 1, sub_10002BA0C, 0, v50, v51, v52, v53);
  v55 = *((_QWORD *)&v89 + 1);
  sub_10004A404(v87, *((uint64_t *)&v87 + 1), v88, *((uint64_t *)&v88 + 1), v89);
  v56 = swift_release(v55);
  v57 = static Alignment.center.getter(v56);
  v59 = v58;
  v60 = (uint64_t)v85;
  v61 = (uint64_t)&v85[*(int *)(v83 + 36)];
  sub_100009434((uint64_t)v20, v61, &qword_1000AF2C0);
  v62 = (uint64_t *)(v61 + *(int *)(sub_100006DA4(&qword_1000AF2F0) + 36));
  *v62 = v57;
  v62[1] = v59;
  v63 = sub_100018778(v54, v60, &qword_1000AF2A8);
  v64 = xmmword_1000ADCA8;
  v65 = static Alignment.center.getter(v63);
  _FrameLayout.init(width:height:alignment:)(&v87, v64, 0, *((_QWORD *)&v64 + 1), 0, v65, v66);
  v67 = v86;
  sub_100009434(v60, v86, &qword_1000AF2B0);
  v68 = (_OWORD *)(v67 + *(int *)(sub_100006DA4(&qword_1000AF2F8) + 36));
  v69 = v88;
  *v68 = v87;
  v68[1] = v69;
  v68[2] = v89;
  sub_100009578(v60, &qword_1000AF2B0);
  return sub_100009578((uint64_t)v20, &qword_1000AF2C0);
}

uint64_t sub_10002B9A4()
{
  uint64_t v0;
  unint64_t v1;

  v0 = sub_100006DA4(&qword_1000AD708);
  v1 = sub_100018984();
  return View.widgetAccentable(_:)(1, v0, v1);
}

uint64_t sub_10002BA0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  char v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v15[2];
  char v16;
  uint64_t v17;
  char v18;
  char v19;

  v4 = sub_100006DA4(&qword_1000AF300);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v6) = *(_BYTE *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_BYTE *)(a1 + 48);
  v10 = *(_BYTE *)(a1 + 49);
  v11 = *(_OWORD *)(a1 + 16);
  v15[0] = *(_OWORD *)a1;
  v15[1] = v11;
  v16 = v6;
  v17 = v8;
  v18 = v9;
  v19 = v10;
  v12 = sub_100006DA4(&qword_1000AF2D0);
  v13 = sub_1000095B4(&qword_1000AF2E0, &qword_1000AF2D0, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
  View.widgetAccentable(_:)(1, v12, v13);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(a2, v7, v4);
  *(_QWORD *)(a2 + *(int *)(sub_100006DA4(&qword_1000AF2D8) + 36)) = 0x3FD3333333333333;
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10002BB30@<X0>(_QWORD *a1@<X8>)
{
  __int128 *v1;
  __int128 v2;
  __int128 v4;
  _OWORD v5[2];

  v2 = v1[1];
  v4 = *v1;
  v5[0] = v2;
  *(_OWORD *)((char *)v5 + 9) = *(__int128 *)((char *)v1 + 25);
  return sub_100028774((uint64_t)&v4, a1);
}

uint64_t sub_10002BB60@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  double v23;
  uint64_t v24;
  unint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[3];

  v3 = type metadata accessor for TTRAnyListWidget.ListShareeBadgesView(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100006DA4(&qword_1000AF240);
  v8 = __chkstk_darwin(v7);
  v10 = (_QWORD *)((char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    if (v11 < 0)
      v33 = *v1;
    else
      v33 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v1);
    v12 = _CocoaArrayWrapper.endIndex.getter(v33);
    v8 = swift_bridgeObjectRelease(v11);
  }
  else
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *v10 = static Alignment.center.getter(v8);
  v10[1] = v13;
  if (v12 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_100006DA4(&qword_1000AF248);
    *(_QWORD *)&v37[0] = 0;
    *((_QWORD *)&v37[0] + 1) = v12;
    KeyPath = swift_getKeyPath(&unk_10008B480);
    sub_1000072AC((uint64_t)v1, (uint64_t)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TTRAnyListWidget.ListShareeBadgesView);
    v15 = *(unsigned __int8 *)(v4 + 80);
    v16 = (v15 + 16) & ~v15;
    v17 = swift_allocObject(&unk_1000A83B8, v16 + v5, v15 | 7);
    sub_100007EF0((uint64_t)v6, v17 + v16, type metadata accessor for TTRAnyListWidget.ListShareeBadgesView);
    v18 = sub_100006DA4(&qword_1000AF250);
    v19 = sub_100006DA4(&qword_1000AF258);
    v20 = sub_10004A1B8();
    v21 = sub_10004A268();
    result = ForEach<>.init(_:id:content:)(v37, KeyPath, sub_10004A16C, v17, v18, v19, v20, &protocol witness table for Int, v21);
    if (qword_1000AC8A8 == -1)
      goto LABEL_5;
  }
  result = swift_once(&qword_1000AC8A8, sub_100025384);
LABEL_5:
  v23 = *(double *)&xmmword_1000B9E60;
  v24 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    if (v24 < 0)
      v34 = *v1;
    else
      v34 = v24 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v1);
    v35 = _CocoaArrayWrapper.endIndex.getter(v34);
    result = swift_bridgeObjectRelease(v24);
    if (v35 < 2)
      goto LABEL_9;
    v26 = *(double *)((char *)v1 + *(int *)(v3 + 24));
    swift_bridgeObjectRetain(v24);
    v36 = _CocoaArrayWrapper.endIndex.getter(v34);
    result = swift_bridgeObjectRelease(v24);
    v27 = v36 - 1;
    if (!__OFSUB__(v36, 1))
      goto LABEL_8;
  }
  else
  {
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v25 <= 1)
    {
LABEL_9:
      v28 = *((_QWORD *)&xmmword_1000B9E60 + 1);
      v29 = static Alignment.center.getter(result);
      _FrameLayout.init(width:height:alignment:)(v37, *(_QWORD *)&v23, 0, v28, 0, v29, v30);
      sub_100009434((uint64_t)v10, a1, &qword_1000AF240);
      v31 = (_OWORD *)(a1 + *(int *)(sub_100006DA4(&qword_1000AF2A0) + 36));
      v32 = v37[1];
      *v31 = v37[0];
      v31[1] = v32;
      v31[2] = v37[2];
      return sub_100009578((uint64_t)v10, &qword_1000AF240);
    }
    v26 = *(double *)((char *)v1 + *(int *)(v3 + 24));
    v27 = v25 - 1;
    if (!__OFSUB__(v25, 1))
    {
LABEL_8:
      v23 = v23
          + v26 * (double)v27
          + *(double *)((char *)v1 + *(int *)(v3 + 28))
          + *(double *)((char *)v1 + *(int *)(v3 + 28));
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10002BE94@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t result;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;

  v7 = *a1;
  v8 = *a2;
  if ((*a2 & 0xC000000000000001) == 0)
  {
    if (v7 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v7 < *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v9 = *(id *)(v8 + 8 * v7 + 32);
      goto LABEL_5;
    }
    __break(1u);
LABEL_11:
    if (v8 < 0)
      v14 = v8;
    else
      v14 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v15 = _CocoaArrayWrapper.endIndex.getter(v14);
    result = swift_bridgeObjectRelease(v8);
    if (v15 > 1)
      goto LABEL_7;
LABEL_15:
    v12 = (double)v7;
    v13 = 0.0;
    goto LABEL_16;
  }
  v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(*a1, *a2);
LABEL_5:
  v3 = v9;
  result = swift_getKeyPath(&unk_10008A448);
  v4 = result;
  if ((unint64_t)v8 >> 62)
    goto LABEL_11;
  if (*(uint64_t *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) <= 1)
    goto LABEL_15;
LABEL_7:
  result = type metadata accessor for TTRAnyListWidget.ListShareeBadgesView(0);
  v11 = *(double *)((char *)a2 + *(int *)(result + 24));
  v12 = (double)v7;
  v13 = *(double *)((char *)a2 + *(int *)(result + 28)) * -0.5 - v11 + v11 * (double)v7;
LABEL_16:
  *(_QWORD *)a3 = v3;
  *(_QWORD *)(a3 + 8) = v4;
  *(_BYTE *)(a3 + 16) = 0;
  *(double *)(a3 + 24) = v13;
  *(_QWORD *)(a3 + 32) = 0;
  *(double *)(a3 + 40) = v12;
  return result;
}

uint64_t sub_10002BFBC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __int128 v20;
  id v21;
  __n128 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t OpaqueTypeConformance2;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t KeyPath;
  uint64_t *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _OWORD v77[3];
  _QWORD v78[5];
  uint64_t v79;
  char v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE v85[7];
  char v86;
  _BYTE v87[7];
  char v88;
  int v89;
  __int16 v90;

  v73 = a3;
  v76 = a4;
  v74 = sub_100006DA4(&qword_1000AF568);
  __chkstk_darwin(v74);
  v75 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for REMFeatureFlags(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100006DA4(&qword_1000AF570);
  __chkstk_darwin(v11);
  v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100006DA4(&qword_1000AF578);
  __chkstk_darwin(v14);
  v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100006DA4(&qword_1000AF580);
  __chkstk_darwin(v17);
  v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000AC8A8 != -1)
    swift_once(&qword_1000AC8A8, sub_100025384);
  v20 = xmmword_1000B9E60;
  v21 = a1;
  v79 = Image.init(uiImage:)(v21, v22);
  v23 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for REMFeatureFlags.accentableWidgets(_:), v7);
  v24 = REMFeatureFlags.isEnabled.getter(v23);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v25 = sub_100006DA4(&qword_1000AF588);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v25, &opaque type descriptor for <<opaque return type of Image.widgetAccentedRenderingMode(_:)>>, 1);
  View.ttr_if<A>(_:transform:)(v24 & 1, sub_10002C580, 0, &type metadata for Image, v25, &protocol witness table for Image, OpaqueTypeConformance2);
  v27 = swift_release(v79);
  v28 = static Alignment.center.getter(v27);
  _FrameLayout.init(width:height:alignment:)(v77, v20, 0, *((_QWORD *)&v20 + 1), 0, v28, v29);
  sub_100009434((uint64_t)v13, (uint64_t)v16, &qword_1000AF570);
  v30 = &v16[*(int *)(v14 + 36)];
  v31 = v77[1];
  *(_OWORD *)v30 = v77[0];
  *((_OWORD *)v30 + 1) = v31;
  *((_OWORD *)v30 + 2) = v77[2];
  v32 = sub_100009578((uint64_t)v13, &qword_1000AF570);
  v33 = static Color.white.getter(v32);
  KeyPath = swift_getKeyPath(&unk_10008B038);
  sub_100009434((uint64_t)v16, (uint64_t)v19, &qword_1000AF578);
  v35 = (uint64_t *)&v19[*(int *)(v17 + 36)];
  *v35 = KeyPath;
  v35[1] = v33;
  v36 = sub_100009578((uint64_t)v16, &qword_1000AF578);
  v72 = static Color.white.getter(v36);
  v37 = StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v78, 0, 0, _swiftEmptyArrayStorage, 1.0, 10.0, 0.0);
  v38 = v78[0];
  v39 = v78[2];
  v40 = v78[3];
  v41 = v78[4];
  v71 = static Alignment.center.getter(v37);
  v70 = v42;
  LOBYTE(v33) = v73 & 1;
  sub_10003CEB8(a2, v73 & 1);
  v43 = sub_1000251C4(a2, v33);
  sub_10003D1A0(a2, v33);
  v44 = *(double *)&v20 + 1.0 / v43 + 1.0 / v43;
  sub_10003CEB8(a2, v33);
  v45 = sub_1000251C4(a2, v33);
  v46 = sub_10003D1A0(a2, v33);
  v47 = static Alignment.center.getter(v46);
  v49 = ((_QWORD *(*)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))_FrameLayout.init(width:height:alignment:))(&v79, *(_QWORD *)&v44, 0, *((double *)&v20 + 1) + 1.0 / v45 + 1.0 / v45, 0, v47, v48);
  v50 = v79;
  LOBYTE(v33) = v80;
  v51 = v81;
  LOBYTE(KeyPath) = v82;
  v52 = v83;
  v53 = v84;
  v54 = static Alignment.center.getter(v49);
  v56 = v55;
  v88 = v33;
  v86 = KeyPath;
  v57 = (uint64_t)v19;
  v58 = (uint64_t)v19;
  v59 = v75;
  sub_100009434(v57, v75, &qword_1000AF580);
  v60 = v59 + *(int *)(v74 + 36);
  v61 = v78[1];
  *(_QWORD *)v60 = v38;
  *(_QWORD *)(v60 + 8) = v61;
  *(_QWORD *)(v60 + 16) = v39;
  *(_QWORD *)(v60 + 24) = v40;
  *(_QWORD *)(v60 + 32) = v41;
  v62 = v72;
  *(_QWORD *)(v60 + 40) = v72;
  *(_WORD *)(v60 + 48) = 256;
  *(_DWORD *)(v60 + 50) = v89;
  *(_WORD *)(v60 + 54) = v90;
  v63 = v70;
  *(_QWORD *)(v60 + 56) = v71;
  *(_QWORD *)(v60 + 64) = v63;
  *(_QWORD *)(v60 + 72) = v50;
  *(_BYTE *)(v60 + 80) = v88;
  *(_DWORD *)(v60 + 84) = *(_DWORD *)&v87[3];
  *(_DWORD *)(v60 + 81) = *(_DWORD *)v87;
  *(_QWORD *)(v60 + 88) = v51;
  *(_BYTE *)(v60 + 96) = v86;
  *(_DWORD *)(v60 + 100) = *(_DWORD *)&v85[3];
  *(_DWORD *)(v60 + 97) = *(_DWORD *)v85;
  *(_QWORD *)(v60 + 104) = v52;
  *(_QWORD *)(v60 + 112) = v53;
  *(_QWORD *)(v60 + 120) = v54;
  *(_QWORD *)(v60 + 128) = v56;
  swift_bridgeObjectRetain(v40);
  swift_retain(v62);
  v65 = static Color.black.getter(v64);
  v66 = Color.opacity(_:)(v65, 0.08);
  swift_release(v65);
  swift_release(v62);
  swift_bridgeObjectRelease(v40);
  v67 = v76;
  sub_100009434(v59, v76, &qword_1000AF568);
  v68 = v67 + *(int *)(sub_100006DA4(&qword_1000AF590) + 36);
  *(_QWORD *)v68 = v66;
  *(_OWORD *)(v68 + 8) = xmmword_10008A120;
  *(_QWORD *)(v68 + 24) = 0x3FF0000000000000;
  sub_100009578(v59, &qword_1000AF568);
  return sub_100009578(v58, &qword_1000AF580);
}

uint64_t sub_10002C580(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = sub_100006DA4(&qword_1000AF598);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a1;
  static WidgetAccentedRenderingMode.fullColor.getter(v3);
  v7 = type metadata accessor for WidgetAccentedRenderingMode(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
  Image.widgetAccentedRenderingMode(_:)(v5, v6);
  return sub_100009578((uint64_t)v5, &qword_1000AF598);
}

uint64_t sub_10002C634@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10002BFBC(*(void **)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16), a1);
}

__n128 sub_10002C644@<Q0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __n128 result;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  uint64_t v24;
  __int16 v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  __int128 v30;
  _OWORD v31[11];

  v3 = *v1;
  v4 = *((_BYTE *)v1 + 8);
  v5 = v1[2];
  swift_retain(v3);
  v7 = sub_100025008(v6, v4, 0x726F6C6F43, 0xE500000000000000);
  v8 = swift_release(v3);
  v9 = static Alignment.center.getter(v8);
  v11 = _FrameLayout.init(width:height:alignment:)(&v19, 0, 1, v5, 0, v9, v10);
  v24 = v7;
  v25 = 256;
  v26 = v19;
  v27 = v20;
  v28 = v21;
  v29 = v22;
  v30 = v23;
  v12 = static Alignment.center.getter(v11);
  sub_10002435C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v31, 0.0, 1, 0.0, 1, v12, v13);
  swift_release(v7);
  v14 = v31[9];
  *(_OWORD *)(a1 + 128) = v31[8];
  *(_OWORD *)(a1 + 144) = v14;
  *(_OWORD *)(a1 + 160) = v31[10];
  v15 = v31[5];
  *(_OWORD *)(a1 + 64) = v31[4];
  *(_OWORD *)(a1 + 80) = v15;
  v16 = v31[7];
  *(_OWORD *)(a1 + 96) = v31[6];
  *(_OWORD *)(a1 + 112) = v16;
  v17 = v31[1];
  *(_OWORD *)a1 = v31[0];
  *(_OWORD *)(a1 + 16) = v17;
  result = (__n128)v31[3];
  *(_OWORD *)(a1 + 32) = v31[2];
  *(__n128 *)(a1 + 48) = result;
  return result;
}

__n128 sub_10002C788@<Q0>(__n128 *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned __int8 v13;
  __n128 v14;
  __n128 v15;
  __n128 v16;
  __n128 v17;
  __n128 result;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  double (*v28)@<D0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  unsigned __int8 v35;
  __n128 v36[11];

  v26 = v1[1];
  v27 = *((_BYTE *)v1 + 16);
  v24 = v1[3];
  v25 = *((_BYTE *)v1 + 32);
  v3 = swift_allocObject(&unk_1000A80B0, 49, 7);
  v4 = *((_OWORD *)v1 + 1);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v3 + 32) = v4;
  *(_BYTE *)(v3 + 48) = *((_BYTE *)v1 + 32);
  sub_100045610((uint64_t)&v26);
  v5 = sub_10004563C(&v24);
  v6 = static Alignment.center.getter(v5);
  v8 = _FrameLayout.init(width:height:alignment:)(&v19, 0, 1, 0x3FF0000000000000, 0, v6, v7);
  v28 = sub_100045608;
  v29 = v3;
  v30 = v19;
  v31 = v20;
  v32 = v21;
  v33 = v22;
  v34 = v23;
  v9 = static Alignment.center.getter(v8);
  sub_100024500(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v36, 0.0, 1, 0.0, 1, v9, v10);
  v11 = swift_release(v3);
  v12 = *v1;
  v13 = static Edge.Set.all.getter(v11);
  v35 = 0;
  v14 = v36[9];
  a1[8] = v36[8];
  a1[9] = v14;
  a1[10] = v36[10];
  v15 = v36[5];
  a1[4] = v36[4];
  a1[5] = v15;
  v16 = v36[7];
  a1[6] = v36[6];
  a1[7] = v16;
  v17 = v36[1];
  *a1 = v36[0];
  a1[1] = v17;
  result = v36[3];
  a1[2] = v36[2];
  a1[3] = result;
  a1[11].n128_u8[0] = v13;
  a1[11].n128_u64[1] = 0;
  a1[12].n128_u64[0] = v12;
  a1[12].n128_u64[1] = 0;
  a1[13].n128_u64[0] = 0;
  a1[13].n128_u8[8] = v35;
  return result;
}

double sub_10002C91C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  uint64_t v20;
  __int128 v21;
  _BYTE v22[16];
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _QWORD v28[5];

  v23 = a1;
  Path.init(_:)(&v24, sub_100045664, v22);
  v21 = v24;
  v5 = v25;
  v6 = v26;
  v7 = v27;
  v8 = *(_QWORD *)(a2 + 24);
  LOBYTE(a2) = *(_BYTE *)(a2 + 32);
  swift_retain(v8);
  v10 = sub_100025008(v9, a2, 0x726F6C6F43, 0xE500000000000000);
  swift_release(v8);
  v11 = sub_100006DA4(&qword_1000AEA00);
  v12 = swift_allocObject(v11, 48, 7);
  *(_OWORD *)(v12 + 16) = xmmword_1000895E0;
  *(_OWORD *)(v12 + 32) = xmmword_10008A130;
  v13 = StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v28, 1, 0, v12, 1.0, 0.0, 0.0);
  v14 = v28[0];
  v15 = v28[2];
  v16 = v28[3];
  v17 = v28[4];
  v18 = static Alignment.center.getter(v13);
  *(_OWORD *)a3 = v21;
  *(_QWORD *)(a3 + 16) = v5;
  *(_QWORD *)(a3 + 24) = v6;
  *(_BYTE *)(a3 + 32) = v7;
  result = *(double *)&v28[1];
  *(_QWORD *)(a3 + 40) = v14;
  *(double *)(a3 + 48) = result;
  *(_QWORD *)(a3 + 56) = v15;
  *(_QWORD *)(a3 + 64) = v16;
  *(_QWORD *)(a3 + 72) = v17;
  *(_QWORD *)(a3 + 80) = v10;
  *(_WORD *)(a3 + 88) = 256;
  *(_QWORD *)(a3 + 96) = v18;
  *(_QWORD *)(a3 + 104) = v20;
  return result;
}

void sub_10002CA54()
{
  unint64_t v0;

  Path.move(to:)((CGPoint)0);
  *(double *)&v0 = GeometryProxy.size.getter();
  Path.addLine(to:)((CGPoint)v0);
}

double sub_10002CAA0@<D0>(__n128 *a1@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_10002C788(a1).n128_u64[0];
  return result;
}

uint64_t sub_10002CADC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *KeyPath;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char **v64;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v80 = a1;
  v2 = sub_100006DA4(&qword_1000ACBD8);
  __chkstk_darwin(v2);
  v69 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Font.TextStyle(0);
  v67 = *(_QWORD *)(v4 - 8);
  v68 = v4;
  __chkstk_darwin(v4);
  v66 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100006DA4(&qword_1000ACC78);
  __chkstk_darwin(v6);
  KeyPath = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100006DA4(&qword_1000AE298);
  __chkstk_darwin(v70);
  v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100006DA4(&qword_1000AE2A0);
  __chkstk_darwin(v11);
  v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100006DA4(&qword_1000AE2A8);
  v71 = *(_QWORD *)(v14 - 8);
  v72 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100006DA4(&qword_1000AE2B0);
  __chkstk_darwin(v17);
  v19 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_100006DA4(&qword_1000AE2B8);
  __chkstk_darwin(v73);
  v21 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100006DA4(&qword_1000AE2C0);
  v77 = *(_QWORD *)(v22 - 8);
  v78 = v22;
  __chkstk_darwin(v22);
  v74 = (char *)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_100006DA4(&qword_1000AE2C8);
  v24 = __chkstk_darwin(v75);
  v76 = (char *)&v66 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v13 = static HorizontalAlignment.leading.getter(v24);
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 0;
  v26 = (uint64_t)&v13[*(int *)(sub_100006DA4(&qword_1000AE2D0) + 44)];
  v79 = v1;
  sub_10002D16C(v1, v26);
  v27 = (char *)enum case for DynamicTypeSize.xxLarge(_:);
  v28 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v10, v27, v28);
  v29 = sub_100007218(&qword_1000AE2D8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v10, v10, v28, v29) & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v30 = sub_1000095B4(&qword_1000AE2E0, &qword_1000AE2A0, (uint64_t)&protocol conformance descriptor for VStack<A>);
  v31 = sub_1000095B4(&qword_1000AE2E8, &qword_1000AE298, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
  View.dynamicTypeSize<A>(_:)(v10, v11, v70, v30, v31);
  sub_100009578((uint64_t)v10, &qword_1000AE298);
  v32 = sub_100009578((uint64_t)v13, &qword_1000AE2A0);
  v33 = static Alignment.center.getter(v32);
  v35 = sub_1000246A4(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v19, 0.0, 1, INFINITY, 0, v33, v34, &qword_1000AE2A8, &qword_1000AE2B0);
  (*(void (**)(char *, uint64_t, __n128))(v71 + 8))(v16, v72, v35);
  v36 = v79;
  v37 = sub_10002E664();
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v45 = v44;
  LOBYTE(v30) = static Edge.Set.all.getter(v37);
  sub_100009434((uint64_t)v19, (uint64_t)v21, &qword_1000AE2B0);
  v46 = v73;
  v47 = &v21[*(int *)(v73 + 36)];
  *v47 = v30;
  *((_QWORD *)v47 + 1) = v39;
  *((_QWORD *)v47 + 2) = v41;
  *((_QWORD *)v47 + 3) = v43;
  *((_QWORD *)v47 + 4) = v45;
  v47[40] = 0;
  sub_100009578((uint64_t)v19, &qword_1000AE2B0);
  v48 = v36 + *(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 72);
  v49 = type metadata accessor for URL(0);
  v50 = *(_QWORD *)(v49 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(KeyPath, v48, v49);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(KeyPath, 0, 1, v49);
  v51 = sub_10003EFC8(&qword_1000AE2F0, &qword_1000AE2B8, (void (*)(void))sub_10003F030);
  v27 = v74;
  View.widgetURL(_:)(KeyPath, v46, v51);
  sub_100009578((uint64_t)KeyPath, &qword_1000ACC78);
  sub_100009578((uint64_t)v21, &qword_1000AE2B8);
  KeyPath = (char *)swift_getKeyPath(&unk_10008A7B0);
  if ((sub_10002E750() & 1) == 0)
  {
    if (qword_1000AC8C8 == -1)
    {
LABEL_5:
      v59 = qword_1000ADCC8;
      v60 = swift_retain(qword_1000ADCC8);
      goto LABEL_6;
    }
LABEL_8:
    swift_once(&qword_1000AC8C8, sub_100035244);
    goto LABEL_5;
  }
  v53 = v66;
  v52 = v67;
  v54 = v68;
  (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v66, enum case for Font.TextStyle.headline(_:), v68);
  v55 = enum case for Font.Design.rounded(_:);
  v56 = type metadata accessor for Font.Design(0);
  v57 = *(_QWORD *)(v56 - 8);
  v58 = (uint64_t)v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 104))(v69, v55, v56);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v57 + 56))(v58, 0, 1, v56);
  v59 = static Font.system(_:design:weight:)(v53, v58, 0, 1);
  sub_100009578(v58, &qword_1000ACBD8);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
LABEL_6:
  v62 = (uint64_t)v76;
  v61 = v77;
  v63 = v78;
  (*(void (**)(char *, char *, uint64_t, __n128))(v77 + 16))(v76, v27, v78, v60);
  v64 = (char **)(v62 + *(int *)(v75 + 36));
  *v64 = KeyPath;
  v64[1] = (char *)v59;
  (*(void (**)(char *, uint64_t))(v61 + 8))(v27, v63);
  return sub_100018778(v62, v80, &qword_1000AE2C8);
}

uint64_t sub_10002D16C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[16];
  uint64_t v48;
  _QWORD v49[2];

  v46 = a2;
  v3 = sub_100006DA4(&qword_1000AE308);
  v4 = __chkstk_darwin(v3);
  v45 = (uint64_t)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v43 - v6);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100006DA4(&qword_1000AE310);
  v43 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_100006DA4(&qword_1000AE318);
  v15 = __chkstk_darwin(v44);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v43 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v43 - v21;
  v23 = type metadata accessor for TTRNewWidgetViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1 + *(int *)(v23 + 72), v8);
  v48 = a1;
  v24 = sub_100006DA4(&qword_1000AE320);
  v25 = sub_10003F1A4();
  Link.init(destination:label:)(v11, sub_10003F19C, v47, v24, v25);
  v26 = sub_10001D9AC();
  v28 = v27;
  v49[0] = v26;
  v49[1] = v27;
  v29 = sub_1000095B4(&qword_1000AE340, &qword_1000AE310, (uint64_t)&protocol conformance descriptor for Link<A>);
  v30 = sub_10003F228();
  View.accessibilityLabel<A>(_:)(v49, v12, &type metadata for String, v29, v30);
  swift_bridgeObjectRelease(v28);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v12);
  v31 = LocalizedStringKey.init(stringLiteral:)(0, 0xE000000000000000);
  v33 = v32;
  v35 = v34;
  ModifiedContent<>.accessibilityValue(_:)(v31);
  swift_bridgeObjectRelease(v35);
  swift_bridgeObjectRelease(v33);
  sub_100009578((uint64_t)v17, &qword_1000AE318);
  v36 = sub_100018778((uint64_t)v20, (uint64_t)v22, &qword_1000AE318);
  *v7 = static Alignment.center.getter(v36);
  v7[1] = v37;
  v38 = sub_100006DA4(&qword_1000AE350);
  sub_10002DE08(a1, (_QWORD *)((char *)v7 + *(int *)(v38 + 44)));
  sub_100009434((uint64_t)v22, (uint64_t)v20, &qword_1000AE318);
  v39 = v45;
  sub_100009434((uint64_t)v7, v45, &qword_1000AE308);
  v40 = v46;
  sub_100009434((uint64_t)v20, v46, &qword_1000AE318);
  v41 = sub_100006DA4(&qword_1000AE358);
  sub_100009434(v39, v40 + *(int *)(v41 + 48), &qword_1000AE308);
  sub_100009578((uint64_t)v7, &qword_1000AE308);
  sub_100009578((uint64_t)v22, &qword_1000AE318);
  sub_100009578(v39, &qword_1000AE308);
  return sub_100009578((uint64_t)v20, &qword_1000AE318);
}

uint64_t sub_10002D4D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v4 = sub_100006DA4(&qword_1000AE338);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = static VerticalAlignment.center.getter(v5);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 0;
  v8 = sub_100006DA4(&qword_1000AE410);
  sub_10002D5D0(a1, (uint64_t)&v7[*(int *)(v8 + 44)]);
  v9 = sub_10002DBF0();
  v11 = v10;
  v13 = v12;
  v15 = v14;
  LOBYTE(a1) = static Edge.Set.all.getter(v16);
  sub_100009434((uint64_t)v7, a2, &qword_1000AE338);
  v17 = a2 + *(int *)(sub_100006DA4(&qword_1000AE320) + 36);
  *(_BYTE *)v17 = (_BYTE)a1;
  *(double *)(v17 + 8) = v9;
  *(_QWORD *)(v17 + 16) = v11;
  *(_QWORD *)(v17 + 24) = v13;
  *(_QWORD *)(v17 + 32) = v15;
  *(_BYTE *)(v17 + 40) = 0;
  return sub_100009578((uint64_t)v7, &qword_1000AE338);
}

uint64_t sub_10002D5D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v46;
  uint64_t v47;

  v47 = a2;
  v3 = (int *)type metadata accessor for TTRAnyListWidget.TitleTextView(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100006DA4(&qword_1000AE418);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v46 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v46 - v13;
  sub_1000072AC((uint64_t)a1, (uint64_t)v5, type metadata accessor for TTRNewWidgetViewModel);
  *(_QWORD *)&v5[v3[5]] = 1;
  v15 = &v5[v3[6]];
  *(_QWORD *)v15 = swift_getKeyPath(&unk_10008A7B0);
  v15[8] = 0;
  v16 = &v5[v3[7]];
  *(_QWORD *)v16 = swift_getKeyPath(&unk_10008A378);
  v16[8] = 0;
  v17 = &v5[v3[8]];
  *(_QWORD *)v17 = swift_getKeyPath(&unk_10008A880);
  v18 = sub_100006DA4(&qword_1000ADED8);
  v19 = swift_storeEnumTagMultiPayload(v17, v18, 0);
  v20 = static Edge.Set.top.getter(v19);
  v21 = Edge.Set.init(rawValue:)(0);
  v22 = v21;
  v23 = Edge.Set.init(rawValue:)(v21);
  if (Edge.Set.init(rawValue:)(v23 & v20) != v20)
    LOBYTE(v22) = Edge.Set.init(rawValue:)(v22 | v20);
  v24 = type metadata accessor for TTRAnyListWidget.InteractiveSmall(0);
  v25 = EdgeInsets.init(_all:)(*(double *)((char *)a1 + *(int *)(v24 + 48)));
  v27 = v26;
  v29 = v28;
  v31 = v30;
  sub_1000072AC((uint64_t)v5, (uint64_t)v12, type metadata accessor for TTRAnyListWidget.TitleTextView);
  v32 = &v12[*(int *)(v6 + 36)];
  *v32 = v22;
  *((double *)v32 + 1) = v25;
  *((_QWORD *)v32 + 2) = v27;
  *((_QWORD *)v32 + 3) = v29;
  *((_QWORD *)v32 + 4) = v31;
  v32[40] = 0;
  sub_100007EB4((uint64_t)v5, type metadata accessor for TTRAnyListWidget.TitleTextView);
  sub_100018778((uint64_t)v12, (uint64_t)v14, &qword_1000AE418);
  v34 = a1[2];
  v33 = a1[3];
  v35 = a1[4];
  KeyPath = swift_getKeyPath(&unk_10008A8B0);
  v37 = swift_getKeyPath(&unk_10008A3C8);
  v38 = swift_getKeyPath(&unk_10008A8B0);
  swift_bridgeObjectRetain(v35);
  v39 = sub_10002D928();
  sub_100009434((uint64_t)v14, (uint64_t)v9, &qword_1000AE418);
  v40 = (uint64_t)v9;
  v46 = v9;
  v41 = v47;
  sub_100009434(v40, v47, &qword_1000AE418);
  v42 = sub_100006DA4(&qword_1000AE420);
  v43 = v41 + *(int *)(v42 + 48);
  *(_QWORD *)v43 = 0;
  *(_BYTE *)(v43 + 8) = 1;
  v44 = v41 + *(int *)(v42 + 64);
  *(_QWORD *)v44 = v34;
  *(_QWORD *)(v44 + 8) = v33;
  *(_QWORD *)(v44 + 16) = v35;
  *(_QWORD *)(v44 + 24) = KeyPath;
  *(_BYTE *)(v44 + 32) = 0;
  *(_QWORD *)(v44 + 40) = v37;
  *(_BYTE *)(v44 + 48) = 0;
  *(_QWORD *)(v44 + 56) = v38;
  *(_QWORD *)(v44 + 64) = v39;
  swift_bridgeObjectRetain(v35);
  swift_retain(KeyPath);
  swift_retain(v37);
  swift_retain(v38);
  swift_retain(v39);
  sub_100009578((uint64_t)v14, &qword_1000AE418);
  swift_release(v39);
  swift_release(v38);
  swift_release(v37);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v35);
  return sub_100009578((uint64_t)v46, &qword_1000AE418);
}

uint64_t sub_10002D928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v0 = type metadata accessor for Font.Leading(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100006DA4(&qword_1000ACBD8);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Font.TextStyle(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_10002E750() & 1) != 0)
  {
    if ((sub_10002E750() & 1) != 0)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for Font.TextStyle.headline(_:), v7);
      v11 = enum case for Font.Design.rounded(_:);
      v12 = type metadata accessor for Font.Design(0);
      v13 = *(_QWORD *)(v12 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v6, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
      v14 = static Font.system(_:design:weight:)(v10, v6, 0, 1);
      sub_100009578((uint64_t)v6, &qword_1000ACBD8);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    else
    {
      if (qword_1000AC8C8 != -1)
        swift_once(&qword_1000AC8C8, sub_100035244);
      v14 = qword_1000ADCC8;
      swift_retain(qword_1000ADCC8);
    }
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for Font.TextStyle.title2(_:), v7);
    v15 = enum case for Font.Design.rounded(_:);
    v16 = type metadata accessor for Font.Design(0);
    v17 = *(_QWORD *)(v16 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v6, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v6, 0, 1, v16);
    v18 = static Font.system(_:design:weight:)(v10, v6, 0, 1);
    sub_100009578((uint64_t)v6, &qword_1000ACBD8);
    v19 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    static Font.Weight.bold.getter(v19);
    v20 = Font.weight(_:)(v18);
    swift_release(v18);
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
    v14 = Font.leading(_:)(v3, v20);
    swift_release(v20);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v14;
}

double sub_10002DBF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;
  id v16;
  id v17;
  uint64_t v19;

  v1 = v0;
  v2 = type metadata accessor for WidgetRenderingMode(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for TTRAnyListWidget.InteractiveSmall(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_10002E750() & 1) != 0)
    return 0.0;
  v10 = v0 + *(int *)(v6 + 20);
  v11 = *(_QWORD *)v10;
  v12 = *(_BYTE *)(v10 + 8);
  sub_10003CEB8(*(_QWORD *)v10, v12);
  v13 = sub_100024C88(v11, v12);
  sub_10003D1A0(v11, v12);
  v9 = -5.0;
  if ((v13 & 1) != 0)
  {
    v14 = sub_10003613C();
    sub_1000072AC(v1, (uint64_t)v8, type metadata accessor for TTRAnyListWidget.InteractiveSmall);
    if ((v14 & 1) != 0)
    {
      sub_100024A50(&qword_1000ADE30, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x800000010008FE00, v5);
      v15 = sub_100026AC0();
      (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
      sub_100007EB4((uint64_t)v8, type metadata accessor for TTRAnyListWidget.InteractiveSmall);
      if ((v15 & 1) == 0)
        return v9;
    }
    else
    {
      sub_100007EB4((uint64_t)v8, type metadata accessor for TTRAnyListWidget.InteractiveSmall);
    }
    v16 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    v17 = objc_msgSend(v16, "userInterfaceIdiom");

    if (v17)
      return 0.0;
    else
      return 1.0;
  }
  return v9;
}

uint64_t sub_10002DE08@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t IsVibrantText;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v38;
  uint64_t v39;

  v38 = a2;
  v39 = sub_100006DA4(&qword_1000AE360);
  __chkstk_darwin(v39);
  v4 = (_QWORD **)((char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_100006DA4(&qword_1000AE368);
  __chkstk_darwin(v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  IsVibrantText = type metadata accessor for IsVibrantText(0);
  __chkstk_darwin(IsVibrantText);
  v10 = (_QWORD **)((char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for TTRAnyListWidget.InteractiveNoRemindersView(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100006DA4(&qword_1000AE370);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v38 - v18;
  if (*(_QWORD *)(*(_QWORD *)(a1 + *(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 76)) + 16))
  {
    *v4 = 3;
    v20 = v39;
    sub_10002E17C(a1);
    v21 = &qword_1000AE360;
    sub_100009434((uint64_t)v4, (uint64_t)v7, &qword_1000AE360);
    swift_storeEnumTagMultiPayload(v7, v5, 1);
    v22 = sub_10003F280();
    v23 = sub_10003F31C();
    _ConditionalContent<>.init(storage:)(v38, v7, v14, v20, v22, v23);
    v24 = (uint64_t)v4;
  }
  else
  {
    v25 = *(_BYTE *)(a1 + 40);
    *v13 = 0;
    v13[1] = v25;
    *((_QWORD *)v13 + 1) = swift_getKeyPath(&unk_10008A7D8);
    v13[16] = 0;
    v26 = (uint64_t)&v13[*(int *)(v11 + 28)];
    *v10 = swift_getKeyPath(&unk_10008A4D0);
    v27 = sub_100006DA4(&qword_1000ADE30);
    swift_storeEnumTagMultiPayload(v10, v27, 0);
    sub_100007EF0((uint64_t)v10, v26, type metadata accessor for IsVibrantText);
    KeyPath = swift_getKeyPath(&unk_10008A7D8);
    v29 = a1 + *(int *)(type metadata accessor for TTRAnyListWidget.InteractiveSmall(0) + 32);
    v30 = *(_QWORD *)v29;
    v31 = *(_BYTE *)(v29 + 8);
    swift_retain(*(_QWORD *)v29);
    v33 = sub_100025008(v32, v31, 1953394502, 0xE400000000000000);
    swift_release(v30);
    sub_1000072AC((uint64_t)v13, (uint64_t)v17, type metadata accessor for TTRAnyListWidget.InteractiveNoRemindersView);
    v34 = (uint64_t *)&v17[*(int *)(v14 + 36)];
    *v34 = KeyPath;
    v34[1] = v33;
    sub_100007EB4((uint64_t)v13, type metadata accessor for TTRAnyListWidget.InteractiveNoRemindersView);
    v21 = &qword_1000AE370;
    sub_100018778((uint64_t)v17, (uint64_t)v19, &qword_1000AE370);
    sub_100009434((uint64_t)v19, (uint64_t)v7, &qword_1000AE370);
    swift_storeEnumTagMultiPayload(v7, v5, 0);
    v35 = sub_10003F280();
    v36 = sub_10003F31C();
    _ConditionalContent<>.init(storage:)(v38, v7, v14, v39, v35, v36);
    v24 = (uint64_t)v19;
  }
  return sub_100009578(v24, v21);
}

uint64_t sub_10002E168()
{
  return sub_100014818((uint64_t (*)(void))sub_10003F454, (uint64_t)&_s17NoReminderFontKeyON);
}

uint64_t sub_10002E17C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v2 = type metadata accessor for TTRAnyListWidget.InteractiveSmall(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 76));
  if (*(_QWORD *)(v6 + 16) >= 3uLL)
    v7 = 3;
  else
    v7 = *(_QWORD *)(v6 + 16);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRNewWidgetViewModel.Reminder(0) - 8) + 80);
  v9 = v6 + ((v8 + 32) & ~v8);
  v10 = swift_bridgeObjectRetain(v6);
  v11 = sub_1000363AC(v10, v9, 0, (2 * v7) | 1);
  swift_bridgeObjectRelease(v6);
  v24 = v11;
  KeyPath = swift_getKeyPath(&unk_10008A800);
  sub_1000072AC(a1, (uint64_t)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TTRAnyListWidget.InteractiveSmall);
  v13 = *(unsigned __int8 *)(v3 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = (v4 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = swift_allocObject(&unk_1000A7D68, v15 + 8, v13 | 7);
  sub_100007EF0((uint64_t)v5, v16 + v14, type metadata accessor for TTRAnyListWidget.InteractiveSmall);
  *(_QWORD *)(v16 + v15) = v7;
  v17 = swift_allocObject(&unk_1000A7D90, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_10003F7DC;
  *(_QWORD *)(v17 + 24) = v16;
  v18 = sub_100006DA4(&qword_1000AE3D8);
  v19 = sub_100006DA4(&qword_1000AE3C8);
  v20 = sub_1000095B4(&qword_1000AE3E0, &qword_1000AE3D8, (uint64_t)&protocol conformance descriptor for [A]);
  v21 = sub_1000095B4(&qword_1000AE3C0, &qword_1000AE3C8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  return ForEach<>.init(_:id:content:)(&v24, KeyPath, sub_10003F844, v17, v18, v19, v20, &protocol witness table for String, v21);
}

uint64_t sub_10002E388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t result;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = a1;
  v34 = a4;
  v8 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for TTRAnyListWidget.InteractiveReminderView(0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v33 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v33 - v18;
  sub_1000072AC(a2, (uint64_t)v10, type metadata accessor for TTRNewWidgetViewModel.Reminder);
  v20 = *(_QWORD *)(*(_QWORD *)(a3 + *(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 76)) + 16);
  if (v20 == 2)
    v21 = 2;
  else
    v21 = 1;
  if (v20 == 1)
    v22 = 5;
  else
    v22 = v21;
  v23 = &v14[v11[8]];
  *(_QWORD *)v23 = swift_getKeyPath(&unk_10008A420);
  v23[8] = 0;
  v24 = &v14[v11[9]];
  *(_QWORD *)v24 = swift_getKeyPath(&unk_10008A830);
  v24[8] = 0;
  v25 = &v14[v11[10]];
  *(_QWORD *)v25 = swift_getKeyPath(&unk_10008A858);
  v25[8] = 0;
  sub_100007EF0((uint64_t)v10, (uint64_t)v14, type metadata accessor for TTRNewWidgetViewModel.Reminder);
  *(_QWORD *)&v14[v11[5]] = v22;
  v26 = &v14[v11[6]];
  *(_QWORD *)v26 = 0;
  v26[8] = 1;
  v14[v11[7]] = 1;
  sub_100007EF0((uint64_t)v14, (uint64_t)v17, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
  result = sub_100007EF0((uint64_t)v17, (uint64_t)v19, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
  if (__OFSUB__(v34, 1))
  {
    __break(1u);
  }
  else
  {
    if (v34 - 1 <= v33)
    {
      v28 = 0;
      KeyPath = 0;
      v30 = 0;
      v31 = 255;
    }
    else
    {
      v28 = *(_QWORD *)(a3 + *(int *)(type metadata accessor for TTRAnyListWidget.InteractiveSmall(0) + 52));
      KeyPath = swift_getKeyPath(&unk_10008A448);
      v30 = swift_getKeyPath(&unk_10008A3A0);
      v31 = 0;
    }
    sub_1000072AC((uint64_t)v19, (uint64_t)v14, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
    sub_1000072AC((uint64_t)v14, a5, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
    v32 = a5 + *(int *)(sub_100006DA4(&qword_1000AE3F0) + 48);
    *(_QWORD *)v32 = v28;
    *(_QWORD *)(v32 + 8) = KeyPath;
    *(_QWORD *)(v32 + 16) = v31;
    *(_QWORD *)(v32 + 24) = v30;
    *(_BYTE *)(v32 + 32) = 0;
    sub_10003F8CC(v28, KeyPath, v31, v30);
    sub_100007EB4((uint64_t)v19, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
    sub_10003F90C(v28, KeyPath, v31, v30);
    return sub_100007EB4((uint64_t)v14, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
  }
  return result;
}

uint64_t sub_10002E664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  uint64_t result;

  v1 = type metadata accessor for TTRAnyListWidget.InteractiveSmall(0);
  v2 = v0 + *(int *)(v1 + 36);
  v3 = *(_QWORD *)v2;
  v4 = *(_BYTE *)(v2 + 8);
  sub_10003CEB8(*(_QWORD *)v2, v4);
  v5 = sub_1000251C4(v3, v4);
  sub_10003D1A0(v3, v4);
  v6 = v0 + *(int *)(v1 + 40);
  v7 = *(_QWORD *)v6;
  LOBYTE(v3) = *(_BYTE *)(v6 + 8);
  v8 = 1.0 / v5;
  sub_10003CEB8(*(_QWORD *)v6, v3);
  v9 = sub_1000251C4(v7, v3);
  result = sub_10003D1A0(v7, v3);
  if (v9 >= v8)
    return sub_10002E750();
  return result;
}

uint64_t sub_10002E750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  double v16;
  double v17;
  char v18;
  char *v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  uint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for TTRAnyListWidget.InteractiveSmall(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v25 - v7;
  v9 = v0 + *(int *)(v6 + 36);
  v10 = *(_QWORD *)v9;
  v11 = *(_BYTE *)(v9 + 8);
  sub_10003CEB8(*(_QWORD *)v9, v11);
  v12 = sub_1000251C4(v10, v11);
  sub_10003D1A0(v10, v11);
  v13 = v0 + *(int *)(v2 + 40);
  v14 = *(_QWORD *)v13;
  v15 = *(_BYTE *)(v13 + 8);
  v16 = 1.0 / v12;
  sub_10003CEB8(*(_QWORD *)v13, v15);
  v17 = sub_1000251C4(v14, v15);
  sub_10003D1A0(v14, v15);
  sub_1000072AC(v0, (uint64_t)v8, type metadata accessor for TTRAnyListWidget.InteractiveSmall);
  if (v17 < v16)
  {
    sub_100007EB4((uint64_t)v8, type metadata accessor for TTRAnyListWidget.InteractiveSmall);
    sub_1000072AC(v0, (uint64_t)v5, type metadata accessor for TTRAnyListWidget.InteractiveSmall);
LABEL_5:
    v23 = 0;
    goto LABEL_6;
  }
  v18 = sub_10003613C();
  sub_100007EB4((uint64_t)v8, type metadata accessor for TTRAnyListWidget.InteractiveSmall);
  sub_1000072AC(v1, (uint64_t)v5, type metadata accessor for TTRAnyListWidget.InteractiveSmall);
  if ((v18 & 1) == 0)
    goto LABEL_5;
  v19 = &v5[*(int *)(v2 + 20)];
  v20 = *(_QWORD *)v19;
  v21 = v19[8];
  sub_10003CEB8(*(_QWORD *)v19, v21);
  v22 = sub_100024C88(v20, v21);
  sub_10003D1A0(v20, v21);
  v23 = v22 ^ 1;
LABEL_6:
  sub_100007EB4((uint64_t)v5, type metadata accessor for TTRAnyListWidget.InteractiveSmall);
  return v23 & 1;
}

uint64_t sub_10002E930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;

  *a3 = static Alignment.topLeading.getter();
  a3[1] = v6;
  v7 = (char *)a3 + *(int *)(sub_100006DA4(&qword_1000AE440) + 44);
  *(_QWORD *)v7 = static VerticalAlignment.top.getter();
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 0;
  v8 = sub_100006DA4(&qword_1000AE448);
  return sub_10002E9A4(a2, a1, (uint64_t)&v7[*(int *)(v8 + 44)]);
}

uint64_t sub_10002E9A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t OpaqueTypeConformance2;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _OWORD *v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t result;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char v98[16];
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;

  v97 = a2;
  v86 = a3;
  v96 = sub_100006DA4(&qword_1000AE298);
  __chkstk_darwin(v96);
  v95 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView(0);
  __chkstk_darwin(v92);
  v6 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_100006DA4(&qword_1000AE450);
  __chkstk_darwin(v94);
  v93 = (uint64_t)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_100006DA4(&qword_1000AE458);
  __chkstk_darwin(v90);
  v91 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_100006DA4(&qword_1000AE460);
  v83 = *(_QWORD *)(v85 - 8);
  v9 = __chkstk_darwin(v85);
  v84 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v82 = (char *)&v80 - v11;
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100006DA4(&qword_1000AE468);
  v88 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = (char *)sub_100006DA4(&qword_1000AE470);
  v19 = __chkstk_darwin(v89);
  v21 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v19);
  v87 = (char *)&v80 - v23;
  __chkstk_darwin(v22);
  v25 = (char *)&v80 - v24;
  v26 = type metadata accessor for TTRNewWidgetViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1 + *(int *)(v26 + 72), v12);
  v99 = a1;
  v100 = v97;
  v27 = sub_100006DA4(&qword_1000AE478);
  v28 = sub_100007258(&qword_1000AE480);
  v29 = sub_10003EFC8(&qword_1000AE488, &qword_1000AE480, (void (*)(void))sub_10003FD04);
  v30 = sub_1000095B4(&qword_1000AE2E8, &qword_1000AE298, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
  *(_QWORD *)&v101 = v28;
  *((_QWORD *)&v101 + 1) = v96;
  *(_QWORD *)&v102 = v29;
  *((_QWORD *)&v102 + 1) = v30;
  v81 = v30;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v101, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
  Link.init(destination:label:)(v15, sub_10003FCFC, v98, v27, OpaqueTypeConformance2);
  v32 = a1;
  v33 = sub_10001D9AC();
  v35 = v34;
  *(_QWORD *)&v101 = v33;
  *((_QWORD *)&v101 + 1) = v34;
  v36 = sub_1000095B4(&qword_1000AE4A8, &qword_1000AE468, (uint64_t)&protocol conformance descriptor for Link<A>);
  v37 = sub_10003F228();
  View.accessibilityLabel<A>(_:)(&v101, v16, &type metadata for String, v36, v37);
  swift_bridgeObjectRelease(v35);
  v38 = v18;
  v39 = v90;
  (*(void (**)(char *, uint64_t))(v88 + 8))(v38, v16);
  v40 = LocalizedStringKey.init(stringLiteral:)(0, 0xE000000000000000);
  v42 = v41;
  v44 = v43;
  v45 = (uint64_t)v87;
  ModifiedContent<>.accessibilityValue(_:)(v40);
  v46 = v44;
  v47 = (uint64_t)v91;
  swift_bridgeObjectRelease(v46);
  swift_bridgeObjectRelease(v42);
  v48 = (uint64_t)v21;
  v49 = v45;
  sub_100009578(v48, &qword_1000AE470);
  v89 = v25;
  sub_100018778(v45, (uint64_t)v25, &qword_1000AE470);
  v50 = (int *)v92;
  sub_1000072AC(v32, (uint64_t)&v6[*(int *)(v92 + 20)], type metadata accessor for TTRNewWidgetViewModel);
  *v6 = 1;
  *(_QWORD *)&v6[v50[6]] = 4;
  v51 = &v6[v50[7]];
  *(_QWORD *)v51 = swift_getKeyPath(&unk_10008A448);
  v51[8] = 0;
  *(_QWORD *)&v6[v50[8]] = 0x4040800000000000;
  v52 = type metadata accessor for TTRAnyListWidget.InteractiveMedium(0);
  v53 = *(_QWORD *)(v32 + *(int *)(v52 + 24));
  v54 = *(_QWORD *)(v32 + *(int *)(v52 + 32));
  LOBYTE(v50) = static Edge.Set.all.getter(v52);
  v55 = v93;
  sub_1000072AC((uint64_t)v6, v93, type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView);
  v56 = v55 + *(int *)(v94 + 36);
  *(_BYTE *)v56 = (_BYTE)v50;
  *(_QWORD *)(v56 + 8) = v53;
  *(_QWORD *)(v56 + 16) = 0;
  *(_QWORD *)(v56 + 24) = v54;
  *(_QWORD *)(v56 + 32) = 0x4030000000000000;
  *(_BYTE *)(v56 + 40) = 0;
  v57 = sub_100007EB4((uint64_t)v6, type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView);
  v58 = GeometryProxy.size.getter(v57) * 0.66;
  v60 = static Alignment.center.getter(v59);
  _FrameLayout.init(width:height:alignment:)(&v101, *(_QWORD *)&v58, 0, 0, 1, v60, v61);
  sub_100009434(v55, v47, &qword_1000AE450);
  v62 = (_OWORD *)(v47 + *(int *)(v39 + 36));
  v63 = v102;
  *v62 = v101;
  v62[1] = v63;
  v62[2] = v103;
  sub_100009578(v55, &qword_1000AE450);
  v64 = enum case for DynamicTypeSize.xxxLarge(_:);
  v65 = type metadata accessor for DynamicTypeSize(0);
  v66 = v95;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 104))(v95, v64, v65);
  v67 = (uint64_t)v66;
  v68 = sub_100007218(&qword_1000AE2D8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v66, v66, v65, v68);
  if ((result & 1) != 0)
  {
    v70 = sub_10003EFC8(&qword_1000AE4B0, &qword_1000AE458, (void (*)(void))sub_10003FD9C);
    v71 = v84;
    View.dynamicTypeSize<A>(_:)(v67, v39, v96, v70, v81);
    sub_100009578(v67, &qword_1000AE298);
    sub_100009578(v47, &qword_1000AE458);
    v72 = v83;
    v73 = v82;
    v74 = v85;
    (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v82, v71, v85);
    v75 = (uint64_t)v89;
    sub_100009434((uint64_t)v89, v49, &qword_1000AE470);
    v76 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
    v76(v71, v73, v74);
    v77 = v86;
    sub_100009434(v49, v86, &qword_1000AE470);
    v78 = sub_100006DA4(&qword_1000AE4C8);
    v76((char *)(v77 + *(int *)(v78 + 48)), v71, v74);
    v79 = *(void (**)(char *, uint64_t))(v72 + 8);
    v79(v73, v74);
    sub_100009578(v75, &qword_1000AE470);
    v79(v71, v74);
    return sub_100009578(v49, &qword_1000AE470);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10002F100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  _OWORD v37[3];

  v36[1] = a2;
  v36[0] = sub_100006DA4(&qword_1000AE298);
  __chkstk_darwin(v36[0]);
  v4 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRAnyListWidget.MediumHeaderView(0);
  __chkstk_darwin(v5);
  v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100006DA4(&qword_1000AE498);
  __chkstk_darwin(v8);
  v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100006DA4(&qword_1000AE480);
  __chkstk_darwin(v11);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000072AC(a1, (uint64_t)v7, type metadata accessor for TTRNewWidgetViewModel);
  v14 = type metadata accessor for TTRAnyListWidget.InteractiveMedium(0);
  v15 = *(_QWORD *)(a1 + *(int *)(v14 + 28));
  LOBYTE(a1) = static Edge.Set.all.getter(v14);
  sub_1000072AC((uint64_t)v7, (uint64_t)v10, type metadata accessor for TTRAnyListWidget.MediumHeaderView);
  v16 = &v10[*(int *)(v8 + 36)];
  *v16 = a1;
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)(v16 + 8) = _Q0;
  *((_QWORD *)v16 + 3) = v15;
  *((_QWORD *)v16 + 4) = 0;
  v16[40] = 0;
  v22 = sub_100007EB4((uint64_t)v7, type metadata accessor for TTRAnyListWidget.MediumHeaderView);
  v23 = GeometryProxy.size.getter(v22);
  v25 = v24 * 0.34;
  v26 = static Alignment.center.getter(v23);
  _FrameLayout.init(width:height:alignment:)(v37, *(_QWORD *)&v25, 0, 0, 1, v26, v27);
  sub_100009434((uint64_t)v10, (uint64_t)v13, &qword_1000AE498);
  v28 = &v13[*(int *)(v11 + 36)];
  v29 = v37[1];
  *(_OWORD *)v28 = v37[0];
  *((_OWORD *)v28 + 1) = v29;
  *((_OWORD *)v28 + 2) = v37[2];
  sub_100009578((uint64_t)v10, &qword_1000AE498);
  v30 = enum case for DynamicTypeSize.xxLarge(_:);
  v31 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v4, v30, v31);
  v32 = sub_100007218(&qword_1000AE2D8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v4, v4, v31, v32);
  if ((result & 1) != 0)
  {
    v34 = sub_10003EFC8(&qword_1000AE488, &qword_1000AE480, (void (*)(void))sub_10003FD04);
    v35 = sub_1000095B4(&qword_1000AE2E8, &qword_1000AE298, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    View.dynamicTypeSize<A>(_:)(v4, v11, v36[0], v34, v35);
    sub_100009578((uint64_t)v4, &qword_1000AE298);
    return sub_100009578((uint64_t)v13, &qword_1000AE480);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10002F400(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v19)@<X0>(uint64_t@<X0>, _QWORD *@<X8>);
  uint64_t v20;

  v3 = sub_100006DA4(&qword_1000ACC78);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v4);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000072AC(v1, (uint64_t)v9, type metadata accessor for TTRAnyListWidget.InteractiveMedium);
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = (v10 + 16) & ~v10;
  v12 = swift_allocObject(&unk_1000A7DB8, v11 + v8, v10 | 7);
  sub_100007EF0((uint64_t)v9, v12 + v11, type metadata accessor for TTRAnyListWidget.InteractiveMedium);
  v19 = sub_10003FC9C;
  v20 = v12;
  v13 = v1 + *(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 72);
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v6, v13, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v6, 0, 1, v14);
  v16 = sub_100006DA4(&qword_1000AE430);
  v17 = sub_1000095B4(&qword_1000AE438, &qword_1000AE430, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
  View.widgetURL(_:)(v6, v16, v17);
  sub_100009578((uint64_t)v6, &qword_1000ACC78);
  return swift_release(v20);
}

uint64_t sub_10002F5A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;

  v1 = sub_100006DA4(&qword_1000ACC78);
  __chkstk_darwin(v1);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100006DA4(&qword_1000AE4D0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100006DA4(&qword_1000AE4D8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v6 = static Alignment.topLeading.getter(v8);
  v6[1] = v11;
  v12 = sub_100006DA4(&qword_1000AE4E0);
  v13 = (char *)v6 + *(int *)(v12 + 44);
  *(_QWORD *)v13 = static HorizontalAlignment.leading.getter(v12);
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 0;
  v14 = sub_100006DA4(&qword_1000AE4E8);
  v15 = sub_10002F7B0(v0, (uint64_t)&v13[*(int *)(v14 + 44)]);
  LOBYTE(v13) = static Edge.Set.all.getter(v15);
  sub_100009434((uint64_t)v6, (uint64_t)v10, &qword_1000AE4D0);
  v16 = &v10[*(int *)(v7 + 36)];
  *v16 = (char)v13;
  *(_OWORD *)(v16 + 8) = xmmword_10008A140;
  *(_OWORD *)(v16 + 24) = xmmword_10008A150;
  v16[40] = 0;
  sub_100009578((uint64_t)v6, &qword_1000AE4D0);
  v17 = v0 + *(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 72);
  v18 = type metadata accessor for URL(0);
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v3, v17, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v3, 0, 1, v18);
  v20 = sub_10003FE20();
  View.widgetURL(_:)(v3, v7, v20);
  sub_100009578((uint64_t)v3, &qword_1000ACC78);
  return sub_100009578((uint64_t)v10, &qword_1000AE4D8);
}

uint64_t sub_10002F7B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t OpaqueTypeConformance2;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t result;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t, __n128);
  __n128 v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char v84[16];
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;

  v75 = a2;
  v83 = sub_100006DA4(&qword_1000AE298);
  __chkstk_darwin(v83);
  v82 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView(0);
  __chkstk_darwin(v81);
  v5 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_100006DA4(&qword_1000AE450);
  __chkstk_darwin(v77);
  v80 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_100006DA4(&qword_1000AE500);
  v72 = *(_QWORD *)(v74 - 8);
  v7 = __chkstk_darwin(v74);
  v73 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v71 = (char *)&v70 - v9;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100006DA4(&qword_1000AE508);
  v78 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_100006DA4(&qword_1000AE510);
  v17 = __chkstk_darwin(v79);
  v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v17);
  v76 = (char *)&v70 - v21;
  __chkstk_darwin(v20);
  v23 = (char *)&v70 - v22;
  v24 = type metadata accessor for TTRNewWidgetViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1 + *(int *)(v24 + 72), v10);
  v85 = a1;
  v25 = a1;
  v26 = sub_100006DA4(&qword_1000AE518);
  v27 = sub_100007258(&qword_1000AE520);
  v28 = sub_10003FEAC();
  v29 = sub_1000095B4(&qword_1000AE2E8, &qword_1000AE298, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
  v86 = v27;
  v87 = v83;
  v88 = v28;
  v89 = v29;
  v30 = v77;
  v70 = v29;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v86, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
  Link.init(destination:label:)(v13, sub_10003FEA4, v84, v26, OpaqueTypeConformance2);
  v32 = v25;
  v33 = sub_10001D9AC();
  v35 = v34;
  v86 = v33;
  v87 = v34;
  v36 = sub_1000095B4(&qword_1000AE538, &qword_1000AE508, (uint64_t)&protocol conformance descriptor for Link<A>);
  v37 = sub_10003F228();
  View.accessibilityLabel<A>(_:)(&v86, v14, &type metadata for String, v36, v37);
  swift_bridgeObjectRelease(v35);
  v38 = v14;
  v39 = (uint64_t)v23;
  v40 = (uint64_t)v76;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v16, v38);
  v41 = LocalizedStringKey.init(stringLiteral:)(0, 0xE000000000000000);
  v43 = v42;
  v45 = v44;
  ModifiedContent<>.accessibilityValue(_:)(v41);
  swift_bridgeObjectRelease(v45);
  swift_bridgeObjectRelease(v43);
  sub_100009578((uint64_t)v19, &qword_1000AE510);
  sub_100018778(v40, v39, &qword_1000AE510);
  KeyPath = swift_getKeyPath(&unk_10008A3A0);
  v47 = v81;
  sub_1000072AC(v32, (uint64_t)&v5[*(int *)(v81 + 20)], type metadata accessor for TTRNewWidgetViewModel);
  *v5 = 2;
  *(_QWORD *)&v5[*(int *)(v47 + 24)] = 7;
  v48 = v47;
  v49 = &v5[*(int *)(v47 + 28)];
  v50 = swift_getKeyPath(&unk_10008A448);
  *(_QWORD *)v49 = v50;
  v49[8] = 0;
  v51 = (uint64_t)v80;
  *(_QWORD *)&v5[*(int *)(v48 + 32)] = 0x4040800000000000;
  LOBYTE(v49) = static Edge.Set.all.getter(v50);
  sub_1000072AC((uint64_t)v5, v51, type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView);
  v52 = v51 + *(int *)(v30 + 36);
  *(_BYTE *)v52 = (_BYTE)v49;
  *(_QWORD *)(v52 + 8) = 0x4024000000000000;
  *(_QWORD *)(v52 + 16) = 0;
  *(_QWORD *)(v52 + 24) = 0;
  *(_QWORD *)(v52 + 32) = 0;
  *(_BYTE *)(v52 + 40) = 0;
  sub_100007EB4((uint64_t)v5, type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView);
  v53 = enum case for DynamicTypeSize.xxxLarge(_:);
  v54 = type metadata accessor for DynamicTypeSize(0);
  v55 = v82;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 104))(v82, v53, v54);
  v56 = (uint64_t)v55;
  v57 = sub_100007218(&qword_1000AE2D8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v55, v55, v54, v57);
  if ((result & 1) != 0)
  {
    v59 = sub_10003FD9C();
    v60 = v73;
    View.dynamicTypeSize<A>(_:)(v56, v30, v83, v59, v70);
    sub_100009578(v56, &qword_1000AE298);
    sub_100009578(v51, &qword_1000AE450);
    v62 = v71;
    v61 = v72;
    v63 = v74;
    (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v71, v60, v74);
    sub_100009434(v39, v40, &qword_1000AE510);
    v64 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
    v64(v60, v62, v63);
    v65 = v75;
    sub_100009434(v40, v75, &qword_1000AE510);
    v66 = sub_100006DA4(&qword_1000AE540);
    v67 = v65 + *(int *)(v66 + 48);
    *(_QWORD *)v67 = KeyPath;
    *(_BYTE *)(v67 + 8) = 0;
    *(_QWORD *)(v67 + 16) = 0x4000000000000000;
    v64((char *)(v65 + *(int *)(v66 + 64)), v60, v63);
    v68 = *(void (**)(char *, uint64_t, __n128))(v61 + 8);
    v69 = swift_retain(KeyPath);
    v68(v62, v63, v69);
    sub_100009578(v39, &qword_1000AE510);
    ((void (*)(char *, uint64_t))v68)(v60, v63);
    swift_release(KeyPath);
    return sub_100009578(v40, &qword_1000AE510);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10002FDE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  uint64_t v21;
  _OWORD v22[3];

  v2 = sub_100006DA4(&qword_1000AE298);
  __chkstk_darwin(v2);
  v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRAnyListWidget.LargeHeaderView(0);
  __chkstk_darwin(v5);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100006DA4(&qword_1000AE520);
  __chkstk_darwin(v8);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000072AC(a1, (uint64_t)v7, type metadata accessor for TTRNewWidgetViewModel);
  v12 = static Alignment.center.getter(v11);
  _FrameLayout.init(width:height:alignment:)(v22, 0, 1, 0x4054000000000000, 0, v12, v13);
  sub_1000072AC((uint64_t)v7, (uint64_t)v10, type metadata accessor for TTRAnyListWidget.LargeHeaderView);
  v14 = &v10[*(int *)(v8 + 36)];
  v15 = v22[1];
  *(_OWORD *)v14 = v22[0];
  *((_OWORD *)v14 + 1) = v15;
  *((_OWORD *)v14 + 2) = v22[2];
  sub_100007EB4((uint64_t)v7, type metadata accessor for TTRAnyListWidget.LargeHeaderView);
  v16 = enum case for DynamicTypeSize.xxLarge(_:);
  v17 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v4, v16, v17);
  v18 = sub_100007218(&qword_1000AE2D8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v4, v4, v17, v18);
  if ((result & 1) != 0)
  {
    v20 = sub_10003FEAC();
    v21 = sub_1000095B4(&qword_1000AE2E8, &qword_1000AE298, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    View.dynamicTypeSize<A>(_:)(v4, v8, v2, v20, v21);
    sub_100009578((uint64_t)v4, &qword_1000AE298);
    return sub_100009578((uint64_t)v10, &qword_1000AE520);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10003001C@<X0>(_QWORD *a1@<X8>)
{
  char *v1;
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView(0);
  v7 = *(int *)(v6 + 20);
  v8 = *(_QWORD *)&v1[*(int *)(v6 + 24)];
  v20 = v8;
  v9 = &v1[v7];
  v10 = *(_QWORD *)&v1[v7 + 8 + v3[16]];
  sub_1000072AC((uint64_t)&v1[v7], (uint64_t)v5, type metadata accessor for TTRNewWidgetViewModel);
  if (v10)
  {
    v11 = *(_QWORD *)&v5[v3[17]];
    swift_bridgeObjectRetain(v11);
    sub_100007EB4((uint64_t)v5, type metadata accessor for TTRNewWidgetViewModel);
    if (v11)
    {
      result = swift_bridgeObjectRelease(v11);
      if (__OFSUB__(v8--, 1))
      {
        __break(1u);
        return result;
      }
      v20 = v8;
    }
  }
  else
  {
    sub_100007EB4((uint64_t)v5, type metadata accessor for TTRNewWidgetViewModel);
  }
  v14 = *(_QWORD *)(*(_QWORD *)&v9[v3[19]] + 16);
  if (v8 < v14)
    v14 = v8;
  if (v14 <= 1)
    v15 = 1;
  else
    v15 = v14;
  v16 = swift_allocObject(&unk_1000A8038, 24, 7);
  *(_QWORD *)(v16 + 16) = v15;
  *a1 = static Alignment.center.getter(v16);
  a1[1] = v17;
  v18 = sub_100006DA4(&qword_1000AE960);
  sub_10003018C(v1, v16, &v20, (_QWORD *)((char *)a1 + *(int *)(v18 + 44)));
  return swift_release(v16);
}

uint64_t sub_10003018C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t IsVibrantText;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;

  v34 = a2;
  v35 = a3;
  v38 = a4;
  v39 = sub_100006DA4(&qword_1000AE968);
  __chkstk_darwin(v39);
  v6 = (uint64_t *)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = sub_100006DA4(&qword_1000AE970);
  __chkstk_darwin(v37);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  IsVibrantText = type metadata accessor for IsVibrantText(0);
  __chkstk_darwin(IsVibrantText);
  v11 = (uint64_t *)((char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for TTRAnyListWidget.InteractiveNoRemindersView(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_100006DA4(&qword_1000AE978);
  v15 = __chkstk_darwin(v36);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v34 - v18;
  v20 = type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView(0);
  v21 = &a1[*(int *)(v20 + 20)];
  if (*(_QWORD *)(*(_QWORD *)&v21[*(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 76)] + 16))
  {
    *v6 = *(_QWORD *)&a1[*(int *)(v20 + 24)];
    v22 = v39;
    sub_1000304D4((uint64_t)a1, v34, v35, (uint64_t)v6 + *(int *)(v39 + 44));
    sub_100009434((uint64_t)v6, (uint64_t)v8, &qword_1000AE968);
    swift_storeEnumTagMultiPayload(v8, v37, 1);
    v23 = sub_100045060();
    v24 = sub_1000450FC();
    _ConditionalContent<>.init(storage:)(v38, v8, v36, v22, v23, v24);
    v25 = (uint64_t)v6;
    v26 = &qword_1000AE968;
  }
  else
  {
    v27 = v21[40];
    *v14 = *a1;
    v14[1] = v27;
    *((_QWORD *)v14 + 1) = swift_getKeyPath(&unk_10008A7D8);
    v14[16] = 0;
    v28 = (uint64_t)&v14[*(int *)(v12 + 28)];
    *v11 = swift_getKeyPath(&unk_10008A4D0);
    v29 = sub_100006DA4(&qword_1000ADE30);
    swift_storeEnumTagMultiPayload(v11, v29, 0);
    sub_100007EF0((uint64_t)v11, v28, type metadata accessor for IsVibrantText);
    v30 = sub_100007218(&qword_1000AE380, type metadata accessor for TTRAnyListWidget.InteractiveNoRemindersView, (uint64_t)&unk_10008AEA0);
    View.accessibility(hidden:)(1, v12, v30);
    sub_100007EB4((uint64_t)v14, type metadata accessor for TTRAnyListWidget.InteractiveNoRemindersView);
    sub_100018778((uint64_t)v17, (uint64_t)v19, &qword_1000AE978);
    sub_100009434((uint64_t)v19, (uint64_t)v8, &qword_1000AE978);
    swift_storeEnumTagMultiPayload(v8, v37, 0);
    v31 = sub_100045060();
    v32 = sub_1000450FC();
    _ConditionalContent<>.init(storage:)(v38, v8, v36, v39, v31, v32);
    v25 = (uint64_t)v19;
    v26 = &qword_1000AE978;
  }
  return sub_100009578(v25, v26);
}

uint64_t sub_1000304D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  double v29;
  _QWORD *v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  void (*v58)(char *, char *, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  double v67;
  void (*v68)(char *, uint64_t, double);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85[32];

  v76 = a3;
  v7 = type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v77 = v9;
  v78 = (uint64_t)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100006DA4(&qword_1000AE3B8);
  v83 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v81 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v80 = (char *)&v69 - v13;
  v14 = type metadata accessor for TTRNewWidgetViewModel(0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = a2;
  v18 = (unint64_t *)(a2 + 16);
  v19 = *(int *)(v7 + 20);
  v82 = a1;
  v20 = a1 + v19;
  v21 = (uint64_t *)(a1 + v19 + *(int *)(v15 + 64));
  v22 = v21[1];
  sub_1000072AC(v20, (uint64_t)v17, v23);
  if (v22)
  {
    v24 = *(_QWORD *)&v17[*(int *)(v14 + 68)];
    swift_bridgeObjectRetain(v24);
    sub_100007EB4((uint64_t)v17, type metadata accessor for TTRNewWidgetViewModel);
    if (v24)
    {
      swift_bridgeObjectRelease(v24);
      v25 = v21[1];
      if (v25)
      {
        v71 = *v21;
        v26 = v82 + *(int *)(v7 + 28);
        v27 = *(_QWORD *)v26;
        v28 = *(_BYTE *)(v26 + 8);
        swift_bridgeObjectRetain(v25);
        sub_10003CEB8(v27, v28);
        v29 = sub_1000251C4(v27, v28);
        sub_10003D1A0(v27, v28);
        v30 = sub_10001D808(v29);
        KeyPath = swift_getKeyPath(&unk_10008AF28);
        v69 = v8;
        v32 = KeyPath;
        v33 = swift_getKeyPath(&unk_10008A448);
        v34 = swift_getKeyPath(&unk_10008A3A0);
        swift_bridgeObjectRetain(v25);
        swift_bridgeObjectRetain(v30);
        swift_retain(v32);
        sub_10003CEB8(v33, 0);
        swift_retain(v34);
        v73 = v33;
        sub_10003D1A0(v33, 0);
        v35 = v32;
        v36 = v32;
        v8 = v69;
        swift_release(v36);
        v74 = v30;
        swift_bridgeObjectRelease(v30);
        v75 = v25;
        swift_bridgeObjectRelease(v25);
        v72 = v34;
        swift_release(v34);
        goto LABEL_7;
      }
    }
  }
  else
  {
    sub_100007EB4((uint64_t)v17, type metadata accessor for TTRNewWidgetViewModel);
  }
  v71 = 0;
  v72 = 0;
  v74 = 0;
  v75 = 0;
  v35 = 0;
  v73 = 0;
LABEL_7:
  v37 = *(_QWORD *)(v20 + *(int *)(v14 + 76));
  result = swift_beginAccess(v18, v85, 0, 0);
  v39 = *v18;
  if ((*v18 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (*(_QWORD *)(v37 + 16) < v39)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  v40 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRNewWidgetViewModel.Reminder(0) - 8) + 80);
  v41 = v37 + ((v40 + 32) & ~v40);
  v42 = v10;
  v70 = v10;
  v43 = swift_bridgeObjectRetain(v37);
  v44 = sub_1000363AC(v43, v41, 0, (2 * v39) | 1);
  swift_bridgeObjectRelease(v37);
  if (*(_QWORD *)(v37 + 16) >= *v76)
    v45 = 1;
  else
    v45 = 2;
  v84 = v44;
  v46 = swift_getKeyPath(&unk_10008A800);
  v47 = v78;
  sub_1000072AC(v82, v78, type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView);
  v48 = *(unsigned __int8 *)(v8 + 80);
  v49 = (v48 + 32) & ~v48;
  v50 = swift_allocObject(&unk_1000A8060, v49 + v77, v48 | 7);
  *(_QWORD *)(v50 + 16) = v45;
  v51 = v79;
  *(_QWORD *)(v50 + 24) = v79;
  sub_100007EF0(v47, v50 + v49, type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView);
  v52 = swift_allocObject(&unk_1000A8088, 32, 7);
  *(_QWORD *)(v52 + 16) = sub_1000453AC;
  *(_QWORD *)(v52 + 24) = v50;
  swift_retain(v51);
  v53 = sub_100006DA4(&qword_1000AE3D8);
  v54 = sub_100006DA4(&qword_1000AE3C8);
  v55 = sub_1000095B4(&qword_1000AE3E0, &qword_1000AE3D8, (uint64_t)&protocol conformance descriptor for [A]);
  v56 = sub_1000095B4(&qword_1000AE3C0, &qword_1000AE3C8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v57 = v80;
  ForEach<>.init(_:id:content:)(&v84, v46, sub_10003F844, v52, v53, v54, v55, &protocol witness table for String, v56);
  v58 = *(void (**)(char *, char *, uint64_t))(v83 + 16);
  v59 = v81;
  v58(v81, v57, v42);
  v60 = v71;
  v61 = v72;
  v63 = (uint64_t)v74;
  v62 = v75;
  *(_QWORD *)a4 = v71;
  *(_QWORD *)(a4 + 8) = v62;
  *(_QWORD *)(a4 + 16) = v63;
  *(_QWORD *)(a4 + 24) = v35;
  *(_QWORD *)(a4 + 32) = 0;
  *(_QWORD *)(a4 + 40) = 0;
  v64 = v73;
  *(_QWORD *)(a4 + 48) = v73;
  *(_QWORD *)(a4 + 56) = 0;
  *(_QWORD *)(a4 + 64) = v61;
  *(_BYTE *)(a4 + 72) = 0;
  v65 = (char *)(a4 + *(int *)(sub_100006DA4(&qword_1000AE9A8) + 48));
  v66 = v70;
  v58(v65, v59, v70);
  v67 = sub_100045480(v60, v62, v63, v35, 0, 0, v64, 0, v61);
  v68 = *(void (**)(char *, uint64_t, double))(v83 + 8);
  v68(v57, v66, v67);
  ((void (*)(char *, uint64_t))v68)(v59, v66);
  return sub_1000454EC(v60, v62, v63, v35, 0, 0, v64, 0, v61);
}

uint64_t sub_100030A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];

  v33 = a5;
  v34 = a1;
  v10 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for TTRAnyListWidget.InteractiveReminderView(0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v32 - v17;
  sub_1000072AC(a2, (uint64_t)v12, type metadata accessor for TTRNewWidgetViewModel.Reminder);
  v19 = &v16[v13[8]];
  *(_QWORD *)v19 = swift_getKeyPath(&unk_10008A420);
  v19[8] = 0;
  v20 = &v16[v13[9]];
  *(_QWORD *)v20 = swift_getKeyPath(&unk_10008A830);
  v20[8] = 0;
  v21 = &v16[v13[10]];
  *(_QWORD *)v21 = swift_getKeyPath(&unk_10008A858);
  v21[8] = 0;
  sub_100007EF0((uint64_t)v12, (uint64_t)v16, type metadata accessor for TTRNewWidgetViewModel.Reminder);
  *(_QWORD *)&v16[v13[5]] = a3;
  v22 = &v16[v13[6]];
  *(_QWORD *)v22 = 0;
  v22[8] = 1;
  v16[v13[7]] = 0;
  sub_100007EF0((uint64_t)v16, (uint64_t)v18, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
  result = swift_beginAccess(a4 + 16, v35, 0, 0);
  v24 = *(_QWORD *)(a4 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    if (v26 <= v34)
    {
      v27 = 0;
      KeyPath = 0;
      v29 = 0;
      v30 = 255;
    }
    else
    {
      v27 = *(_QWORD *)(v33
                      + *(int *)(type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView(0) + 32));
      KeyPath = swift_getKeyPath(&unk_10008A448);
      v29 = swift_getKeyPath(&unk_10008A3A0);
      v30 = 0;
    }
    sub_1000072AC((uint64_t)v18, (uint64_t)v16, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
    sub_1000072AC((uint64_t)v16, a6, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
    v31 = a6 + *(int *)(sub_100006DA4(&qword_1000AE3F0) + 48);
    *(_QWORD *)v31 = v27;
    *(_QWORD *)(v31 + 8) = KeyPath;
    *(_QWORD *)(v31 + 16) = v30;
    *(_QWORD *)(v31 + 24) = v29;
    *(_BYTE *)(v31 + 32) = 0;
    sub_10003F8CC(v27, KeyPath, v30, v29);
    sub_100007EB4((uint64_t)v18, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
    sub_10003F90C(v27, KeyPath, v30, v29);
    return sub_100007EB4((uint64_t)v16, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
  }
  return result;
}

_QWORD *sub_100030CF4@<X0>(_QWORD *a1@<X8>)
{
  void **v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t IsVibrantText;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v45;
  uint64_t v46;
  double *v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id *v67;
  double v68;
  char v69;
  char v70;
  int *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t KeyPath;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t OpaqueTypeConformance2;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  int *v104;
  char *v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *result;
  void *v116;
  id v117;
  id v118;
  _QWORD *v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  id v123;
  char isEscapingClosureAtFileLocation;
  __int128 v125;
  uint64_t v126;
  _QWORD *v127;
  int *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  char v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  id *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  id v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t *v190;
  uint64_t v191;
  unint64_t v192;
  unint64_t v193;
  uint64_t v194;
  char *v195;
  id v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t *v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t *v218;
  _QWORD *v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  int *v223;
  void **v224;
  uint64_t aBlock;
  uint64_t v226;
  uint64_t (*v227)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void *v228;
  uint64_t (*v229)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v230;
  __int128 v231;
  unsigned __int8 v232;
  _QWORD *v233;

  v3 = sub_100006DA4(&qword_1000AEA08);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v194 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for TTRAnyListWidget.InteractiveReminderView(0);
  __chkstk_darwin(v6);
  v209 = (uint64_t)&v194 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100006DA4(&qword_1000ACE10);
  __chkstk_darwin(v8);
  v207 = (uint64_t)&v194 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = type metadata accessor for AccessibilityChildBehavior(0);
  v205 = *(_QWORD *)(v206 - 8);
  __chkstk_darwin(v206);
  v204 = (char *)&v194 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  IsVibrantText = type metadata accessor for IsVibrantText(0);
  __chkstk_darwin(IsVibrantText);
  v202 = (uint64_t *)((char *)&v194 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v200 = type metadata accessor for TTRAnyListWidget.ReminderToggleStyle(0);
  __chkstk_darwin(v200);
  v14 = (char *)&v194 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = sub_100006DA4(&qword_1000AD5A0);
  v197 = *(_QWORD *)(v198 - 8);
  __chkstk_darwin(v198);
  v16 = (char *)&v194 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100006DA4(&qword_1000AEA10);
  __chkstk_darwin(v17);
  v19 = (char *)&v194 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v220 = sub_100006DA4(&qword_1000AEA18);
  __chkstk_darwin(v220);
  v199 = (uint64_t)&v194 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v221 = sub_100006DA4(&qword_1000AEA20);
  v203 = *(_QWORD *)(v221 - 8);
  __chkstk_darwin(v221);
  v201 = (char *)&v194 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = sub_100006DA4(&qword_1000AEA28);
  v208 = *(_QWORD *)(v210 - 8);
  __chkstk_darwin(v210);
  v222 = (char *)&v194 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100006DA4(&qword_1000AEA30);
  v24 = __chkstk_darwin(v23);
  v211 = (char *)&v194 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)&v194 - v27;
  v29 = __chkstk_darwin(v26);
  v213 = (char *)&v194 - v30;
  v31 = __chkstk_darwin(v29);
  v212 = (char *)&v194 - v32;
  __chkstk_darwin(v31);
  v214 = (uint64_t)&v194 - v33;
  v34 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v35 = *(void **)((char *)v1 + *(int *)(v34 + 32));
  v219 = a1;
  v218 = v5;
  v217 = v3;
  v224 = v1;
  v216 = v23;
  if (v35)
  {
    v195 = v28;
    v223 = (int *)v34;
    v215 = *(int *)(v34 + 40);
    v36 = *((unsigned __int8 *)v1 + v215);
    v37 = *v1;
    v38 = v35;
    v39 = objc_msgSend(v37, "string");
    v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
    v42 = v41;

    v196 = v38;
    aBlock = sub_100082C08((uint64_t)v38, v40, v42, v36 ^ 1);
    v226 = v43;
    v227 = v44;
    v45 = sub_1000177B8();
    v46 = Toggle.init<A>(isOn:intent:label:)(v36, &aBlock, nullsub_1, 0, &type metadata for EmptyView, &type metadata for TTRReminderSetCompletedIntent, &protocol witness table for EmptyView, v45);
    v47 = (double *)((char *)v1 + *(int *)(v6 + 24));
    v48 = *v47;
    LOBYTE(v42) = *((_BYTE *)v47 + 8);
    v49 = static Alignment.center.getter(v46);
    v51 = sub_1000246A4(0.0, 1, 0.0, 1, 0.0, 1, v48, v42, (uint64_t)v19, 0.0, 1, 0.0, 1, v49, v50, &qword_1000AD5A0, &qword_1000AEA10);
    v52 = (*(uint64_t (**)(char *, uint64_t, __n128))(v197 + 8))(v16, v198, v51);
    v53 = static Edge.Set.leading.getter(v52);
    v54 = Edge.Set.init(rawValue:)(0);
    v55 = v54;
    v56 = Edge.Set.init(rawValue:)(v54);
    v57 = v6;
    if (Edge.Set.init(rawValue:)(v56 & v53) != v53)
      LOBYTE(v55) = Edge.Set.init(rawValue:)(v55 | v53);
    v58 = EdgeInsets.init(_all:)(-2.0);
    v60 = v59;
    v62 = v61;
    v64 = v63;
    v65 = v199;
    sub_100009434((uint64_t)v19, v199, &qword_1000AEA10);
    v66 = v65 + *(int *)(v220 + 36);
    *(_BYTE *)v66 = v55;
    *(double *)(v66 + 8) = v58;
    *(_QWORD *)(v66 + 16) = v60;
    *(_QWORD *)(v66 + 24) = v62;
    *(_QWORD *)(v66 + 32) = v64;
    *(_BYTE *)(v66 + 40) = 0;
    sub_100009578((uint64_t)v19, &qword_1000AEA10);
    v67 = v224;
    sub_1000072AC((uint64_t)v224, (uint64_t)v14, type metadata accessor for TTRNewWidgetViewModel.Reminder);
    v68 = *v47;
    v69 = *((_BYTE *)v47 + 8);
    v70 = *((_BYTE *)v67 + *(int *)(v57 + 28));
    v71 = (int *)v200;
    *(_QWORD *)&v14[*(int *)(v200 + 20)] = *(id *)((char *)v67 + *(int *)(v57 + 20));
    v72 = &v14[v71[6]];
    *(double *)v72 = v68;
    v72[8] = v69;
    v14[v71[7]] = v70;
    v73 = &v14[v71[8]];
    *(_QWORD *)v73 = swift_getKeyPath(&unk_10008A420);
    v73[8] = 0;
    v74 = &v14[v71[9]];
    *(_QWORD *)v74 = swift_getKeyPath(&unk_10008AF80);
    v74[8] = 0;
    v75 = &v14[v71[10]];
    *(_QWORD *)v75 = swift_getKeyPath(&unk_10008A830);
    v75[8] = 0;
    v76 = &v14[v71[11]];
    *(_QWORD *)v76 = swift_getKeyPath(&unk_10008A858);
    v76[8] = 0;
    v77 = (uint64_t)&v14[v71[12]];
    KeyPath = swift_getKeyPath(&unk_10008A4D0);
    v79 = (uint64_t)v202;
    *v202 = KeyPath;
    v80 = sub_100006DA4(&qword_1000ADE30);
    swift_storeEnumTagMultiPayload(v79, v80, 0);
    sub_100007EF0(v79, v77, type metadata accessor for IsVibrantText);
    v81 = sub_10003EFC8(&qword_1000AEA40, &qword_1000AEA18, (void (*)(void))sub_1000457EC);
    v82 = sub_100007218(&qword_1000AEA50, type metadata accessor for TTRAnyListWidget.ReminderToggleStyle, (uint64_t)&unk_10008B1C8);
    v83 = v201;
    v84 = v220;
    View.toggleStyle<A>(_:)(v14, v220, v71, v81, v82);
    sub_100007EB4((uint64_t)v14, type metadata accessor for TTRAnyListWidget.ReminderToggleStyle);
    v85 = sub_100009578(v65, &qword_1000AEA18);
    v86 = v204;
    static AccessibilityChildBehavior.combine.getter(v85);
    aBlock = v84;
    v226 = (uint64_t)v71;
    v227 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v81;
    v228 = (void *)v82;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&aBlock, &opaque type descriptor for <<opaque return type of View.toggleStyle<A>(_:)>>, 1);
    v88 = v221;
    View.accessibilityElement(children:)(v86, v221, OpaqueTypeConformance2);
    (*(void (**)(char *, uint64_t))(v205 + 8))(v86, v206);
    (*(void (**)(char *, uint64_t))(v203 + 8))(v83, v88);
    v89 = sub_100006DA4(&qword_1000AEA58);
    v90 = swift_allocObject(v89, 96, 7);
    *(_OWORD *)(v90 + 16) = xmmword_10008A160;
    v91 = objc_msgSend(*v67, "string");
    v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v91);
    v94 = v93;

    *(_QWORD *)(v90 + 32) = v92;
    *(_QWORD *)(v90 + 40) = v94;
    *(_QWORD *)(v90 + 48) = TTRAccesibility.RemindersList.Attribute.localizedString.getter((*((_BYTE *)v67 + v215) & 1) == 0);
    *(_QWORD *)(v90 + 56) = v95;
    v96 = v207;
    sub_100009434((uint64_t)v67 + v223[6], v207, &qword_1000ACE10);
    v97 = type metadata accessor for AttributedString(0);
    v98 = *(_QWORD *)(v97 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97) == 1)
    {
      sub_100009578(v96, &qword_1000ACE10);
      v99 = (uint64_t *)(v90 + 64);
      v100 = v209;
      sub_1000072AC((uint64_t)v67, v209, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
      v101 = (uint64_t)v211;
      v102 = v210;
    }
    else
    {
      v147 = AttributedString.ttr_stringValue.getter();
      v149 = v148;
      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v96, v97);
      v99 = (uint64_t *)(v90 + 64);
      v100 = v209;
      sub_1000072AC((uint64_t)v67, v209, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
      v102 = v210;
      if (v149)
      {
        *v99 = v147;
        v101 = (uint64_t)v211;
LABEL_16:
        *(_QWORD *)(v90 + 72) = v149;
        sub_100007EB4(v100, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
        if (*((_BYTE *)v224 + v223[11]) == 1)
        {
          v153 = TTRAccesibility.RemindersList.Attribute.localizedString.getter(10);
        }
        else
        {
          v153 = 0;
          v154 = 0;
        }
        *(_QWORD *)(v90 + 80) = v153;
        *(_QWORD *)(v90 + 88) = v154;
        aBlock = v90;
        v155 = sub_100006DA4(&qword_1000AEA60);
        v156 = sub_1000095B4(&qword_1000AEA68, &qword_1000AEA60, (uint64_t)&protocol conformance descriptor for [A]);
        v157 = Sequence.removingNils<A>()(v155, &type metadata for String, v156);
        v158 = swift_bridgeObjectRelease(v90);
        aBlock = v157;
        v159 = (uint64_t *)TTRAccesibility.General.Label.Separator.unsafeMutableAddressor(v158);
        v160 = *v159;
        v161 = v159[1];
        swift_bridgeObjectRetain(v161);
        v162 = sub_100006DA4(&qword_1000ADC78);
        v163 = sub_1000095B4(&qword_1000ADC80, &qword_1000ADC78, (uint64_t)&protocol conformance descriptor for [A]);
        v164 = BidirectionalCollection<>.joined(separator:)(v160, v161, v162, v163);
        v166 = v165;
        swift_bridgeObjectRelease(v157);
        swift_bridgeObjectRelease(v161);
        aBlock = v164;
        v226 = v166;
        *(_QWORD *)&v231 = v221;
        *((_QWORD *)&v231 + 1) = OpaqueTypeConformance2;
        v167 = swift_getOpaqueTypeConformance2(&v231, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
        v168 = sub_10003F228();
        v169 = v222;
        View.accessibilityLabel<A>(_:)(&aBlock, v102, &type metadata for String, v167, v168);
        swift_bridgeObjectRelease(v166);
        (*(void (**)(char *, uint64_t))(v208 + 8))(v169, v102);
        v170 = LocalizedStringKey.init(stringLiteral:)(0, 0xE000000000000000);
        v172 = v171;
        v174 = v173;
        v175 = (uint64_t)v195;
        v176 = v216;
        ModifiedContent<>.accessibilityValue(_:)(v170);
        swift_bridgeObjectRelease(v174);
        swift_bridgeObjectRelease(v172);
        sub_100009578(v101, &qword_1000AEA30);
        v177 = v224;
        v178 = static TTRAccesibility.RemindersList.Hint.completionToggleHintForState(isCompleted:)(*((unsigned __int8 *)v224 + v215));
        v180 = v179;
        aBlock = v178;
        v226 = v179;
        v181 = (uint64_t)v213;
        ModifiedContent<>.accessibilityHint<A>(_:)(&aBlock, v176, &type metadata for String, v168);
        swift_bridgeObjectRelease(v180);
        sub_100009578(v175, &qword_1000AEA30);
        v182 = sub_100006DA4(&qword_1000AD940);
        v183 = swift_allocObject(v182, 48, 7);
        *(_OWORD *)(v183 + 16) = xmmword_1000882D0;
        v184 = objc_msgSend(*v177, "string");
        v185 = static String._unconditionallyBridgeFromObjectiveC(_:)(v184);
        v187 = v186;

        *(_QWORD *)(v183 + 32) = v185;
        *(_QWORD *)(v183 + 40) = v187;
        v188 = (uint64_t)v212;
        ModifiedContent<>.accessibilityInputLabels<A>(_:)(v183, v176, &type metadata for String, v168);
        swift_bridgeObjectRelease(v183);
        sub_100009578(v181, &qword_1000AEA30);
        v189 = v214;
        sub_100018778(v188, v214, &qword_1000AEA30);
        v190 = v218;
        sub_100009434(v189, (uint64_t)v218, &qword_1000AEA30);
        swift_storeEnumTagMultiPayload(v190, v217, 0);
        v191 = sub_100006DA4(&qword_1000AD5B0);
        v192 = sub_1000456B4();
        v193 = sub_100017698();
        _ConditionalContent<>.init(storage:)(v219, v190, v176, v191, v192, v193);

        return (_QWORD *)sub_100009578(v189, &qword_1000AEA30);
      }
      v101 = (uint64_t)v211;
    }
    v150 = *(_QWORD *)(v100 + v223[9]);
    if (v150 < 1)
    {
      v151 = 0;
      v149 = 0;
    }
    else
    {
      v151 = sub_100010578(v150);
      v149 = v152;
    }
    *v99 = v151;
    goto LABEL_16;
  }
  v103 = *v1;
  v104 = (int *)v6;
  v105 = (char *)v1 + *(int *)(v6 + 36);
  v106 = *(_QWORD *)v105;
  v107 = v105[8];
  swift_retain(*(_QWORD *)v105);
  v109 = sub_100025008(v108, v107, 1953394502, 0xE400000000000000);
  swift_release(v106);
  v223 = v104;
  v110 = (char *)v1 + v104[10];
  v111 = *(_QWORD *)v110;
  v112 = v110[8];
  swift_retain(*(_QWORD *)v110);
  v114 = sub_100025008(v113, v112, 0x726F6C6F43, 0xE500000000000000);
  swift_release(v111);
  result = objc_msgSend(v103, "string");
  if (result)
  {
    v116 = result;
    v231 = xmmword_1000882E0;
    v232 = 0;
    v233 = _swiftEmptyArrayStorage;
    v117 = objc_msgSend((id)objc_opt_self(REMTTHashtag), "attributeName");
    v118 = objc_msgSend(v103, "length");
    v119 = (_QWORD *)swift_allocObject(&unk_1000A80D8, 48, 7);
    v119[2] = &v231;
    v119[3] = v116;
    v119[4] = v109;
    v119[5] = v114;
    v120 = swift_allocObject(&unk_1000A8100, 32, 7);
    *(_QWORD *)(v120 + 16) = sub_1000094CC;
    *(_QWORD *)(v120 + 24) = v119;
    v229 = sub_1000175C0;
    v230 = v120;
    aBlock = (uint64_t)_NSConcreteStackBlock;
    v226 = 1107296256;
    v227 = sub_100009338;
    v228 = &unk_1000A8118;
    v121 = _Block_copy(&aBlock);
    v122 = v230;
    v123 = v116;
    swift_retain(v109);
    swift_retain(v114);
    swift_retain(v120);
    swift_release(v122);
    objc_msgSend(v103, "enumerateAttribute:inRange:options:usingBlock:", v117, 0, v118, 0, v121);

    _Block_release(v121);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v120, "", 107, 27, 145, 1);
    result = (_QWORD *)swift_release(v120);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      v125 = v231;
      v126 = v232;
      v127 = v233;
      swift_release(v109);
      swift_release(v114);
      swift_release(v119);
      v128 = v223;
      v129 = (uint64_t)v224;
      v130 = (char *)v224 + v223[8];
      v131 = *(_QWORD *)v130;
      v132 = v130[8];
      swift_retain(*(_QWORD *)v130);
      v134 = sub_100025008(v133, v132, 1953394502, 0xE400000000000000);
      swift_release(v131);
      v135 = Text.font(_:)(v134, v125, *((_QWORD *)&v125 + 1), v126, v127);
      v137 = v136;
      v139 = v138;
      v222 = v140;
      swift_release(v134);
      sub_10000729C(v125, *((uint64_t *)&v125 + 1), v126);
      swift_bridgeObjectRelease(v127);
      v141 = *(_QWORD *)(v129 + v128[5]);
      v142 = swift_getKeyPath(&unk_10008AF50);
      v143 = v218;
      *v218 = v135;
      v143[1] = v137;
      *((_BYTE *)v143 + 16) = v139 & 1;
      v143[3] = (uint64_t)v222;
      v143[4] = v142;
      v143[5] = v141;
      *((_BYTE *)v143 + 48) = 0;
      swift_storeEnumTagMultiPayload(v143, v217, 1);
      v144 = sub_100006DA4(&qword_1000AD5B0);
      v145 = sub_1000456B4();
      v146 = sub_100017698();
      return _ConditionalContent<>.init(storage:)(v219, v143, v216, v144, v145, v146);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100031D6C()
{
  return sub_100014818((uint64_t (*)(void))sub_100039504, (uint64_t)&_s15ReminderFontKeyON);
}

uint64_t sub_100031D80()
{
  return sub_100014818((uint64_t (*)(void))sub_10003F990, (uint64_t)&_s14HashtagFontKeyON);
}

uint64_t sub_100031D94()
{
  return sub_100014818((uint64_t (*)(void))sub_10003F94C, (uint64_t)&_s15HashtagColorKeyON);
}

uint64_t sub_100031DAC(uint64_t a1, int a2, uint64_t a3, char a4, uint64_t a5, char *a6, void (*a7)(char *, uint64_t, uint64_t), CGFloat a8, CGFloat a9, CGFloat a10, CGFloat a11)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  char *v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double MinY;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(_QWORD *, _QWORD);
  uint64_t v47;
  char *v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  unint64_t v50;
  unint64_t v51;
  double v52;
  uint64_t v53;
  double MinX;
  double v55;
  double v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  char *v62;
  uint64_t v63;
  int v64;
  char *v65;
  uint64_t v66;
  char *v67;
  _QWORD v68[4];
  char v69;
  CGRect v70;
  CGRect v71;

  v60 = a7;
  v61 = a5;
  v62 = a6;
  v63 = a1;
  v64 = a2;
  v17 = sub_100006DA4(&qword_1000AEA78);
  __chkstk_darwin(v17);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for LayoutSubview(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v67 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_100006DA4(&qword_1000AEA80);
  __chkstk_darwin(v59);
  v24 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for LayoutSubviews(0);
  v66 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v65 = (char *)&v58 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100006DA4(&qword_1000AEA88);
  __chkstk_darwin(v27);
  v29 = (char *)&v58 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100006DA4(&qword_1000AEA90);
  result = __chkstk_darwin(v30);
  v33 = (char *)&v58 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = 0.0;
  if ((a4 & 1) != 0 || *(double *)&a3 == INFINITY)
  {
    v35 = (uint64_t)v62;
  }
  else
  {
    v35 = (uint64_t)v62;
    v57 = *((double *)v62 + 1);
    if (v57 < *(double *)&a3)
    {
      if (__OFSUB__(v60, 1))
        goto LABEL_20;
      v34 = (*(double *)&a3 - v57) / ((double)((uint64_t)v60 - 1) + (double)((uint64_t)v60 - 1));
    }
  }
  v62 = v19;
  LOBYTE(v68[0]) = v64 & 1;
  v69 = a4 & 1;
  v36 = a3;
  v37 = v61;
  v38 = sub_100045E54(v63, v64 & 1, v36, a4 & 1, v61, v35, v34);
  v70.origin.x = a8;
  v70.origin.y = a9;
  v70.size.width = a10;
  v70.size.height = a11;
  MinY = CGRectGetMinY(v70);
  v40 = v66;
  v60 = *(void (**)(char *, uint64_t, uint64_t))(v66 + 16);
  v60(v29, v37, v25);
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v65, v29, v25);
  v41 = sub_100007218(&qword_1000AEA98, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  dispatch thunk of Sequence.makeIterator()(v25, v41);
  v42 = (uint64_t *)&v33[*(int *)(v30 + 52)];
  *v42 = v38;
  v42[1] = 0;
  v61 = *(int *)(v30 + 56);
  v33[v61] = 0;
  v43 = &v33[*(int *)(sub_100006DA4(&qword_1000AEAA0) + 36)];
  v44 = sub_100007218(&qword_1000AEAA8, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  while (1)
  {
    v45 = *(_QWORD *)v43;
    dispatch thunk of Collection.endIndex.getter(v25, v44);
    if (v45 == v68[0])
    {
      v47 = (uint64_t)v62;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v62, 1, 1, v20);
LABEL_12:
      sub_100009578(v47, &qword_1000AEA78);
      goto LABEL_14;
    }
    v46 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v68, v43, v25, v44);
    v47 = (uint64_t)v62;
    (*(void (**)(char *))(v21 + 16))(v62);
    v46(v68, 0);
    v48 = v65;
    v60(v65, (uint64_t)v33, v25);
    dispatch thunk of Collection.formIndex(after:)(v43, v25, v44);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v48, v25);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(v47, 0, 1, v20);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v47, 1, v20) == 1)
      goto LABEL_12;
    v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 32);
    result = v49(v67, v47, v20);
    v50 = v42[1];
    v51 = *(_QWORD *)(*v42 + 16);
    if (v50 == v51)
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v67, v20);
LABEL_14:
      v33[v61] = 1;
      return sub_100009578((uint64_t)v33, &qword_1000AEA90);
    }
    if (v50 >= v51)
      break;
    v52 = *(double *)(*v42 + 8 * v50 + 32);
    v42[1] = v50 + 1;
    v53 = *(int *)(v59 + 48);
    v49(v24, (uint64_t)v67, v20);
    *(double *)&v24[v53] = v52;
    v71.origin.x = a8;
    v71.origin.y = a9;
    v71.size.width = a10;
    v71.size.height = a11;
    MinX = CGRectGetMinX(v71);
    v55 = static UnitPoint.topLeading.getter();
    LOBYTE(v68[0]) = v64 & 1;
    v69 = 0;
    LayoutSubview.place(at:anchor:proposal:)(v63, MinX, MinY, v55, v56);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
    MinY = MinY + v34 + v52;
    if (v33[v61] == 1)
      return sub_100009578((uint64_t)v33, &qword_1000AEA90);
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

double sub_1000322F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27[8];
  char v28[8];

  v26 = a2;
  v2 = sub_100006DA4(&qword_1000AEA78);
  __chkstk_darwin(v2);
  v25 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LayoutSubview(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v23 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - v8;
  v10 = type metadata accessor for LayoutSubviews(0);
  v11 = sub_100007218(&qword_1000AEAA8, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  dispatch thunk of Collection.startIndex.getter(v10, v11);
  dispatch thunk of Collection.endIndex.getter(v10, v11);
  v24 = v10;
  v12 = dispatch thunk of Collection.distance(from:to:)(v28, v27, v10, v11);
  if (v12 < 1)
  {
    v15 = 0.0;
  }
  else
  {
    v13 = v12;
    v14 = 0;
    v15 = 0.0;
    do
    {
      if (__OFADD__(v14, 2))
        v16 = 0x7FFFFFFFFFFFFFFFLL;
      else
        v16 = v14 + 2;
      ((void (*)(void))LayoutSubviews.subscript.getter)();
      v28[0] = 0;
      v27[0] = 1;
      LayoutSubview.sizeThatFits(_:)(0x7FF0000000000000, 0, 0, 1);
      v18 = v17;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
      if (v15 < v18)
        v15 = v18;
      v14 = v16;
    }
    while (v16 < v13);
  }
  v19 = v24;
  dispatch thunk of Collection.startIndex.getter(v24, v11);
  dispatch thunk of Collection.endIndex.getter(v19, v11);
  if (dispatch thunk of Collection.distance(from:to:)(v28, v27, v19, v11) > 1)
  {
    v20 = (uint64_t)v25;
    LayoutSubviews.subscript.getter(1);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v20, 0, 1, v4);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v20, 1, v4) != 1)
    {
      v21 = v23;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v23, v20, v4);
      v28[0] = 0;
      v27[0] = 1;
      LayoutSubview.sizeThatFits(_:)(0x7FF0000000000000, 0, 0, 1);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v21, v4);
      return v15;
    }
  }
  else
  {
    v20 = (uint64_t)v25;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v25, 1, 1, v4);
  }
  sub_100009578(v20, &qword_1000AEA78);
  return v15;
}

double sub_1000325EC(char a1, uint64_t a2, uint64_t a3)
{
  double v5;
  double result;

  LayoutSubview.sizeThatFits(_:)(0x7FF0000000000000, 0, 0, 1);
  result = v5;
  if ((a1 & 1) == 0 && v5 < *(double *)a3)
    return *(double *)a3;
  return result;
}

unint64_t sub_100032654(unint64_t result, double a2, uint64_t a3, uint64_t a4, double *a5)
{
  double v5;
  double v7;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (*(_QWORD *)(a4 + 16) <= result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v5 = *(double *)(a4 + 8 * result + 32);
  if ((result & 1) == 0 && *a5 > 0.0)
  {
    result = ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))LayoutSubview.sizeThatFits(_:))(*(_QWORD *)&a2, 0, v5 + *a5, 0);
    if (v7 - v5 <= *a5)
      *a5 = *a5 - (v7 - v5);
  }
  return result;
}

uint64_t sub_1000326F4()
{
  LayoutProperties.init()();
  return LayoutProperties.stackOrientation.setter(1);
}

void sub_10003271C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;

  *(double *)a2 = sub_1000322F0(a1, *v2);
  *(_QWORD *)(a2 + 8) = v4;
}

double sub_10003274C(uint64_t a1, char a2)
{
  double result;

  result = *(double *)&a1;
  if ((a2 & 1) != 0)
    return INFINITY;
  return result;
}

uint64_t sub_100032790(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char *a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10)
{
  void (**v10)(char *, uint64_t, uint64_t);

  return sub_100031DAC(a1, a2 & 1, a3, a4 & 1, a5, a6, *v10, a7, a8, a9, a10);
}

uint64_t sub_1000327AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_100032804(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_1000327D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_100032804(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_100032804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*sub_100032840(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Animatable<>.animatableData.modify();
  return sub_10003289C;
}

void sub_10003289C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_1000328CC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t IsVibrantText;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[16];
  uint64_t v41;
  uint64_t v42;

  v36 = a1;
  v37 = a2;
  v39 = a3;
  v35 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100006DA4(&qword_1000AED10);
  v38 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v34 - v10;
  IsVibrantText = type metadata accessor for IsVibrantText(0);
  __chkstk_darwin(IsVibrantText);
  v14 = (uint64_t *)((char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for TTRAnyListWidget.CompletedView(0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v34 - v20;
  *v18 = ToggleStyleConfiguration.isOn.getter(v19) & 1;
  *((_QWORD *)v18 + 1) = swift_getKeyPath(&unk_10008A378);
  v18[16] = 0;
  v22 = (uint64_t)&v18[*(int *)(v15 + 24)];
  *v14 = swift_getKeyPath(&unk_10008A4D0);
  v23 = sub_100006DA4(&qword_1000ADE30);
  swift_storeEnumTagMultiPayload(v14, v23, 0);
  sub_100007EF0((uint64_t)v14, v22, type metadata accessor for IsVibrantText);
  sub_100007EF0((uint64_t)v18, (uint64_t)v21, type metadata accessor for TTRAnyListWidget.CompletedView);
  v24 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v25 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v36 + *(int *)(v24 + 28), v35);
  v41 = v25;
  v42 = v37;
  v26 = sub_100006DA4(&qword_1000AED18);
  v27 = sub_10003EFC8(&qword_1000AED20, &qword_1000AED18, (void (*)(void))sub_100047F14);
  Link.init(destination:label:)(v5, sub_100047F0C, v40, v26, v27);
  sub_1000072AC((uint64_t)v21, (uint64_t)v18, type metadata accessor for TTRAnyListWidget.CompletedView);
  v28 = v38;
  v29 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
  v29(v9, v11, v6);
  v30 = v39;
  sub_1000072AC((uint64_t)v18, v39, type metadata accessor for TTRAnyListWidget.CompletedView);
  v31 = sub_100006DA4(&qword_1000AED48);
  v29((char *)(v30 + *(int *)(v31 + 48)), v9, v6);
  v32 = *(void (**)(char *, uint64_t))(v28 + 8);
  v32(v11, v6);
  sub_100007EB4((uint64_t)v21, type metadata accessor for TTRAnyListWidget.CompletedView);
  v32(v9, v6);
  return sub_100007EB4((uint64_t)v18, type metadata accessor for TTRAnyListWidget.CompletedView);
}

uint64_t sub_100032BC0@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double *v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  int v25;
  int v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v36;

  v6 = sub_100006DA4(&qword_1000AED40);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006DA4(&qword_1000AED30);
  __chkstk_darwin(v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100006DA4(&qword_1000AED18);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = static VerticalAlignment.firstTextBaseline.getter(v13);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  v16 = sub_100006DA4(&qword_1000AED50);
  sub_100032E18(a1, a2, (uint64_t)&v8[*(int *)(v16 + 44)]);
  v17 = type metadata accessor for TTRAnyListWidget.ReminderToggleStyle(0);
  v18 = (double *)((char *)a1 + *(int *)(v17 + 24));
  v19 = *v18;
  LOBYTE(a2) = *((_BYTE *)v18 + 8);
  v20 = static Alignment.center.getter(v17);
  sub_100024180(0.0, 1, 0.0, 1, 0.0, 1, v19, a2, (uint64_t)v11, 0.0, 1, 0.0, 1, v20, v21, (uint64_t)&qword_1000AED40, (void (*)(uint64_t, uint64_t, uint64_t))sub_100009434, &qword_1000AED30);
  v22 = sub_100009578((uint64_t)v8, &qword_1000AED40);
  v23 = static Edge.Set.bottom.getter(v22);
  v24 = Edge.Set.init(rawValue:)(0);
  v25 = v24;
  v26 = Edge.Set.init(rawValue:)(v24);
  if (Edge.Set.init(rawValue:)(v26 & v23) != v23)
    LOBYTE(v25) = Edge.Set.init(rawValue:)(v25 | v23);
  v27 = EdgeInsets.init(_all:)(2.0);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  sub_100009434((uint64_t)v11, (uint64_t)v15, &qword_1000AED30);
  v34 = &v15[*(int *)(v12 + 36)];
  *v34 = v25;
  *((double *)v34 + 1) = v27;
  *((_QWORD *)v34 + 2) = v29;
  *((_QWORD *)v34 + 3) = v31;
  *((_QWORD *)v34 + 4) = v33;
  v34[40] = 0;
  sub_100009578((uint64_t)v11, &qword_1000AED30);
  return sub_100018778((uint64_t)v15, a3, &qword_1000AED18);
}

id sub_100032E18@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  id result;
  void *v42;
  id v43;
  id v44;
  _QWORD *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  id v49;
  __int128 v50;
  uint64_t v51;
  _QWORD *v52;
  void **v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t KeyPath;
  uint64_t v73;
  BOOL v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, _QWORD, uint64_t);
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t (*v113)(uint64_t, uint64_t, uint64_t);
  uint64_t v114;
  int v115;
  uint64_t v116;
  void **v117;
  uint64_t *v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  int v127;
  uint64_t v128;
  void **v129;
  uint64_t v130;
  char *v131;
  void (*v132)(char *, char *, uint64_t);
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char v159;
  char v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  _QWORD *v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v189;
  _QWORD *v190;
  uint64_t v191;
  uint64_t v192;
  char v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t *v197;
  uint64_t v198;
  char *v199;
  char *v200;
  char *v201;
  uint64_t *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  _QWORD *v214;
  uint64_t v215;
  _QWORD *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  _QWORD *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  int v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  _QWORD *v230;
  void **v231;
  _QWORD aBlock[5];
  uint64_t v233;
  __int128 v234;
  unsigned __int8 v235;
  _QWORD *v236;

  v228 = a2;
  v226 = a3;
  v217 = type metadata accessor for AttributedString(0);
  v221 = *(_QWORD *)(v217 - 8);
  v4 = __chkstk_darwin(v217);
  v199 = (char *)&v196 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v201 = (char *)&v196 - v6;
  v7 = sub_100006DA4(&qword_1000ACE10);
  v8 = __chkstk_darwin(v7);
  v200 = (char *)&v196 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v204 = (uint64_t)&v196 - v10;
  v218 = sub_100006DA4(&qword_1000AED58);
  __chkstk_darwin(v218);
  v220 = (uint64_t *)((char *)&v196 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v212 = sub_100006DA4(&qword_1000AED60);
  __chkstk_darwin(v212);
  v215 = (uint64_t)&v196 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v213 = sub_100006DA4(&qword_1000AED68);
  __chkstk_darwin(v213);
  v214 = (uint64_t *)((char *)&v196 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v219 = sub_100006DA4(&qword_1000AED70);
  __chkstk_darwin(v219);
  v216 = (uint64_t *)((char *)&v196 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v206 = sub_100006DA4(&qword_1000AD6C0);
  __chkstk_darwin(v206);
  v209 = (uint64_t *)((char *)&v196 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v210 = type metadata accessor for Image.Scale(0);
  v208 = *(_QWORD *)(v210 - 8);
  __chkstk_darwin(v210);
  v207 = (char *)&v196 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = sub_100006DA4(&qword_1000AED78);
  v17 = __chkstk_darwin(v205);
  v197 = (uint64_t *)((char *)&v196 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = __chkstk_darwin(v17);
  v198 = (uint64_t)&v196 - v20;
  v21 = __chkstk_darwin(v19);
  v202 = (uint64_t *)((char *)&v196 - v22);
  __chkstk_darwin(v21);
  v211 = (uint64_t)&v196 - v23;
  v24 = sub_100006DA4(&qword_1000AED80);
  v25 = __chkstk_darwin(v24);
  v230 = (uint64_t *)((char *)&v196 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v25);
  v225 = (uint64_t)&v196 - v27;
  v28 = *a1;
  v29 = type metadata accessor for TTRAnyListWidget.ReminderToggleStyle(0);
  v30 = (char *)a1 + *(int *)(v29 + 40);
  v31 = *(_QWORD *)v30;
  v32 = v30[8];
  swift_retain(*(_QWORD *)v30);
  v34 = sub_100025008(v33, v32, 1953394502, 0xE400000000000000);
  swift_release(v31);
  v227 = v29;
  v35 = *(int *)(v29 + 44);
  v231 = a1;
  v36 = (char *)a1 + v35;
  v37 = *(_QWORD *)v36;
  v38 = v36[8];
  swift_retain(*(_QWORD *)v36);
  v40 = sub_100025008(v39, v38, 0x726F6C6F43, 0xE500000000000000);
  swift_release(v37);
  result = objc_msgSend(v28, "string");
  if (result)
  {
    v42 = result;
    v234 = xmmword_1000882E0;
    v235 = 0;
    v236 = _swiftEmptyArrayStorage;
    v43 = objc_msgSend((id)objc_opt_self(REMTTHashtag), "attributeName");
    v44 = objc_msgSend(v28, "length");
    v45 = (_QWORD *)swift_allocObject(&unk_1000A8320, 48, 7);
    v45[2] = &v234;
    v45[3] = v42;
    v45[4] = v34;
    v45[5] = v40;
    v46 = swift_allocObject(&unk_1000A8348, 32, 7);
    *(_QWORD *)(v46 + 16) = sub_1000096E0;
    *(_QWORD *)(v46 + 24) = v45;
    aBlock[4] = sub_100018A8C;
    v233 = v46;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100009338;
    aBlock[3] = &unk_1000A8360;
    v47 = _Block_copy(aBlock);
    v48 = v233;
    v49 = v42;
    swift_retain(v34);
    swift_retain(v40);
    swift_retain(v46);
    swift_release(v48);
    objc_msgSend(v28, "enumerateAttribute:inRange:options:usingBlock:", v43, 0, v44, 0, v47);

    _Block_release(v47);
    LOBYTE(v47) = swift_isEscapingClosureAtFileLocation(v46, "", 107, 27, 145, 1);
    result = (id)swift_release(v46);
    if ((v47 & 1) == 0)
    {
      v50 = v234;
      v51 = v235;
      v52 = v236;
      swift_release(v34);
      swift_release(v40);
      swift_release(v45);
      v53 = v231;
      v54 = sub_1000340D8();
      v55 = Text.font(_:)(v54, v50, *((_QWORD *)&v50 + 1), v51, v52);
      v57 = v56;
      v59 = v58;
      v61 = v60;
      swift_release(v54);
      v62 = v59 & 1;
      sub_10000729C(v50, *((uint64_t *)&v50 + 1), v51);
      swift_bridgeObjectRelease(v52);
      v63 = v228;
      v64 = Text.foregroundColor(_:)(v228, v55, v57, v62, v61);
      v223 = v65;
      v67 = v66;
      v69 = v68;
      sub_10000729C(v55, v57, v62);
      swift_bridgeObjectRelease(v61);
      v70 = v227;
      v71 = *(uint64_t *)((char *)v53 + *(int *)(v227 + 20));
      KeyPath = swift_getKeyPath(&unk_10008AF50);
      v73 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
      v74 = *((_BYTE *)v53 + *(int *)(v73 + 44)) == 1;
      v222 = KeyPath;
      v224 = v67;
      v229 = v71;
      if (v74)
      {
        v221 = Image.init(systemName:)(0x746165706572, 0xE600000000000000);
        v75 = (uint64_t *)((char *)v53 + *(int *)(v70 + 32));
        v76 = v63;
        v77 = *v75;
        v78 = *((_BYTE *)v75 + 8);
        swift_retain(*v75);
        v80 = sub_100025008(v79, v78, 1953394502, 0xE400000000000000);
        swift_release(v77);
        v81 = swift_getKeyPath(&unk_10008B008);
        v204 = v69;
        v82 = v81;
        v83 = swift_getKeyPath(&unk_10008B038);
        v84 = v208;
        v85 = *(void (**)(char *, _QWORD, uint64_t))(v208 + 104);
        v203 = v64;
        v86 = v207;
        v87 = v210;
        v85(v207, enum case for Image.Scale.small(_:), v210);
        v88 = swift_getKeyPath(&unk_10008B238);
        v89 = v209;
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))((char *)v209 + *(int *)(v206 + 28), v86, v87);
        *v89 = v88;
        v90 = v202;
        sub_100009434((uint64_t)v89, (uint64_t)v202 + *(int *)(v205 + 36), &qword_1000AD6C0);
        v91 = v221;
        *v90 = v221;
        v90[1] = v82;
        v90[2] = v80;
        v90[3] = v83;
        v90[4] = v76;
        swift_retain(v76);
        swift_retain(v91);
        swift_retain(v82);
        swift_retain(v80);
        swift_retain(v83);
        sub_100009578((uint64_t)v89, &qword_1000AD6C0);
        (*(void (**)(char *, uint64_t))(v84 + 8))(v86, v87);
        swift_release(v83);
        swift_release(v80);
        swift_release(v82);
        swift_release(v91);
        v92 = v211;
        sub_100018778((uint64_t)v90, v211, &qword_1000AED78);
        sub_100009434(v92, (uint64_t)v90, &qword_1000AED78);
        v93 = (uint64_t)v214;
        *v214 = 0;
        *(_BYTE *)(v93 + 8) = 1;
        v94 = sub_100006DA4(&qword_1000AEDB8);
        sub_100009434((uint64_t)v90, v93 + *(int *)(v94 + 48), &qword_1000AED78);
        sub_100009578((uint64_t)v90, &qword_1000AED78);
        v95 = v215;
        sub_100009434(v93, v215, &qword_1000AED68);
        swift_storeEnumTagMultiPayload(v95, v212, 0);
        v96 = sub_1000095B4(&qword_1000AEDA8, &qword_1000AED68, (uint64_t)&protocol conformance descriptor for TupleView<A>);
        v97 = v216;
        _ConditionalContent<>.init(storage:)(v216, v95, v213, v213, v96, v96);
        sub_100009578(v93, &qword_1000AED68);
        v98 = v220;
        sub_100009434((uint64_t)v97, (uint64_t)v220, &qword_1000AED70);
        swift_storeEnumTagMultiPayload(v98, v218, 0);
        v99 = sub_100006DA4(&qword_1000AED98);
        v100 = sub_100047FAC();
        v101 = sub_1000095B4(&qword_1000AEDB0, &qword_1000AED98, (uint64_t)&protocol conformance descriptor for TupleView<A>);
        v103 = v229;
        v102 = v230;
        v104 = v98;
        v64 = v203;
        v105 = v99;
        v69 = v204;
        v106 = v100;
        v107 = v222;
        _ConditionalContent<>.init(storage:)(v230, v104, v219, v105, v106, v101);
        sub_100009578((uint64_t)v97, &qword_1000AED70);
        sub_100009578(v92, &qword_1000AED78);
        v108 = sub_100006DA4(&qword_1000AED88);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56))(v102, 0, 1, v108);
        v109 = v225;
        sub_100018778((uint64_t)v102, v225, &qword_1000AED80);
        v110 = v226;
      }
      else
      {
        v111 = (uint64_t)v53 + *(int *)(v73 + 24);
        v112 = v204;
        sub_100009434(v111, v204, &qword_1000ACE10);
        v113 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v221 + 48);
        v114 = v217;
        v115 = v113(v112, 1, v217);
        v116 = v112;
        v117 = v231;
        sub_100009578(v116, &qword_1000ACE10);
        v102 = v230;
        if (v115 != 1 && *((_BYTE *)v117 + *(int *)(v70 + 28)) == 1)
        {
          v204 = v69;
          v228 = Image.init(systemName:)(0x6B636F6C63, 0xE500000000000000);
          v118 = (uint64_t *)((char *)v117 + *(int *)(v70 + 32));
          v119 = *v118;
          v120 = *((_BYTE *)v118 + 8);
          swift_retain(*v118);
          v122 = sub_100025008(v121, v120, 1953394502, 0xE400000000000000);
          swift_release(v119);
          v123 = swift_getKeyPath(&unk_10008B008);
          v124 = sub_10003613C();
          v203 = v64;
          if ((v124 & 1) != 0)
            v125 = static Color.primary.getter(v124);
          else
            v125 = static Color.secondary.getter(v124);
          v170 = v125;
          v171 = swift_getKeyPath(&unk_10008B038);
          v172 = v208;
          v173 = v207;
          v174 = v210;
          (*(void (**)(char *, _QWORD, uint64_t))(v208 + 104))(v207, enum case for Image.Scale.medium(_:), v210);
          v175 = swift_getKeyPath(&unk_10008B238);
          v176 = v209;
          (*(void (**)(char *, char *, uint64_t))(v172 + 16))((char *)v209 + *(int *)(v206 + 28), v173, v174);
          *v176 = v175;
          v177 = v197;
          sub_100009434((uint64_t)v176, (uint64_t)v197 + *(int *)(v205 + 36), &qword_1000AD6C0);
          v178 = v228;
          *v177 = v228;
          v177[1] = v123;
          v177[2] = v122;
          v177[3] = v171;
          v177[4] = v170;
          swift_retain(v178);
          swift_retain(v123);
          swift_retain(v122);
          swift_retain(v171);
          swift_retain(v170);
          sub_100009578((uint64_t)v176, &qword_1000AD6C0);
          (*(void (**)(char *, uint64_t))(v172 + 8))(v173, v174);
          swift_release(v170);
          swift_release(v171);
          swift_release(v122);
          swift_release(v123);
          swift_release(v178);
          v179 = v198;
          sub_100018778((uint64_t)v177, v198, &qword_1000AED78);
          v180 = v211;
          sub_100009434(v179, v211, &qword_1000AED78);
          v181 = (uint64_t)v214;
          *v214 = 0;
          *(_BYTE *)(v181 + 8) = 1;
          v182 = sub_100006DA4(&qword_1000AEDB8);
          sub_100009434(v180, v181 + *(int *)(v182 + 48), &qword_1000AED78);
          sub_100009578(v180, &qword_1000AED78);
          v183 = v215;
          sub_100009434(v181, v215, &qword_1000AED68);
          swift_storeEnumTagMultiPayload(v183, v212, 1);
          v184 = sub_1000095B4(&qword_1000AEDA8, &qword_1000AED68, (uint64_t)&protocol conformance descriptor for TupleView<A>);
          v185 = v216;
          _ConditionalContent<>.init(storage:)(v216, v183, v213, v213, v184, v184);
          sub_100009578(v181, &qword_1000AED68);
          v186 = v220;
          sub_100009434((uint64_t)v185, (uint64_t)v220, &qword_1000AED70);
          swift_storeEnumTagMultiPayload(v186, v218, 0);
          v187 = sub_100006DA4(&qword_1000AED98);
          v188 = sub_100047FAC();
          v189 = sub_1000095B4(&qword_1000AEDB0, &qword_1000AED98, (uint64_t)&protocol conformance descriptor for TupleView<A>);
          v190 = v230;
          _ConditionalContent<>.init(storage:)(v230, v186, v219, v187, v188, v189);
          v191 = (uint64_t)v185;
          v102 = v190;
          sub_100009578(v191, &qword_1000AED70);
          sub_100009578(v179, &qword_1000AED78);
          v192 = sub_100006DA4(&qword_1000AED88);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v192 - 8) + 56))(v190, 0, 1, v192);
          v169 = (uint64_t)v190;
LABEL_18:
          v109 = v225;
          sub_100018778(v169, v225, &qword_1000AED80);
          v110 = v226;
          v69 = v204;
          v64 = v203;
          v107 = v222;
          v103 = v229;
          goto LABEL_19;
        }
        v126 = v200;
        sub_1000341B8(v200);
        v127 = v113((uint64_t)v126, 1, v114);
        v103 = v229;
        if (v127 != 1)
        {
          v203 = v64;
          v204 = v69;
          v129 = v117;
          v130 = v221;
          v131 = v201;
          (*(void (**)(char *, char *, uint64_t))(v221 + 32))(v201, v126, v114);
          v132 = *(void (**)(char *, char *, uint64_t))(v130 + 16);
          v133 = v199;
          v132(v199, v131, v114);
          v134 = Text.init(_:)(v133);
          v136 = v135;
          v138 = v137;
          v140 = v139 & 1;
          v141 = (uint64_t *)((char *)v129 + *(int *)(v70 + 32));
          v142 = *v141;
          LOBYTE(v129) = *((_BYTE *)v141 + 8);
          swift_retain(*v141);
          v144 = sub_100025008(v143, (char)v129, 1953394502, 0xE400000000000000);
          swift_release(v142);
          v145 = Text.font(_:)(v144, v134, v136, v140, v138);
          v147 = v146;
          v149 = v148;
          v151 = v150;
          swift_release(v144);
          sub_10000729C(v134, v136, v140);
          swift_bridgeObjectRelease(v138);
          v152 = sub_10003613C();
          if ((v152 & 1) != 0)
            v153 = static Color.primary.getter(v152);
          else
            v153 = static Color.secondary.getter(v152);
          v154 = v153;
          v155 = v149 & 1;
          v156 = Text.foregroundColor(_:)(v153, v145, v147, v149 & 1, v151);
          v158 = v157;
          v160 = v159;
          v162 = v161;
          swift_release(v154);
          LOBYTE(v154) = v160 & 1;
          sub_10000729C(v145, v147, v155);
          swift_bridgeObjectRelease(v151);
          sub_100009520(v156, v158, v160 & 1);
          swift_bridgeObjectRetain(v162);
          sub_100009520(v156, v158, v160 & 1);
          swift_bridgeObjectRetain(v162);
          sub_10000729C(v156, v158, v160 & 1);
          swift_bridgeObjectRelease(v162);
          v163 = v220;
          *v220 = 0;
          *((_BYTE *)v163 + 8) = 1;
          v163[2] = v156;
          v163[3] = v158;
          *((_BYTE *)v163 + 32) = v154;
          v163[5] = v162;
          swift_storeEnumTagMultiPayload(v163, v218, 1);
          v164 = sub_100006DA4(&qword_1000AED98);
          v165 = sub_100047FAC();
          v166 = sub_1000095B4(&qword_1000AEDB0, &qword_1000AED98, (uint64_t)&protocol conformance descriptor for TupleView<A>);
          v167 = v163;
          v102 = v230;
          _ConditionalContent<>.init(storage:)(v230, v167, v219, v164, v165, v166);
          sub_10000729C(v156, v158, v154);
          swift_bridgeObjectRelease(v162);
          (*(void (**)(char *, uint64_t))(v221 + 8))(v201, v217);
          v168 = sub_100006DA4(&qword_1000AED88);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v168 - 8) + 56))(v102, 0, 1, v168);
          v169 = (uint64_t)v102;
          goto LABEL_18;
        }
        sub_100009578((uint64_t)v126, &qword_1000ACE10);
        v128 = sub_100006DA4(&qword_1000AED88);
        v109 = v225;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 56))(v225, 1, 1, v128);
        v110 = v226;
        v107 = v222;
      }
LABEL_19:
      v193 = v224 & 1;
      sub_100009434(v109, (uint64_t)v102, &qword_1000AED80);
      v194 = v223;
      *(_QWORD *)v110 = v64;
      *(_QWORD *)(v110 + 8) = v194;
      *(_BYTE *)(v110 + 16) = v193;
      *(_QWORD *)(v110 + 24) = v69;
      *(_QWORD *)(v110 + 32) = v107;
      *(_QWORD *)(v110 + 40) = v103;
      *(_BYTE *)(v110 + 48) = 0;
      *(_QWORD *)(v110 + 56) = 0;
      *(_BYTE *)(v110 + 64) = 0;
      v195 = sub_100006DA4(&qword_1000AED90);
      sub_100009434((uint64_t)v102, v110 + *(int *)(v195 + 64), &qword_1000AED80);
      sub_100009520(v64, v194, v193);
      swift_bridgeObjectRetain(v69);
      swift_retain(v107);
      sub_100009578(v109, &qword_1000AED80);
      sub_100009578((uint64_t)v102, &qword_1000AED80);
      sub_10000729C(v64, v194, v193);
      swift_release(v107);
      return (id)swift_bridgeObjectRelease(v69);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000340D8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TTRNewWidgetViewModel.Reminder(0) + 36));
  if (v1 < 1)
  {
    v4 = 8;
  }
  else
  {
    v2 = (void *)objc_opt_self(NSNumberFormatter);
    v3 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v1);

    v4 = 9;
  }
  v5 = (uint64_t *)(v0 + *(int *)(type metadata accessor for TTRAnyListWidget.ReminderToggleStyle(0) + 4 * v4));
  v6 = *v5;
  v7 = *((_BYTE *)v5 + 8);
  swift_retain(*v5);
  v9 = sub_100025008(v8, v7, 1953394502, 0xE400000000000000);
  swift_release(v6);
  return v9;
}

uint64_t sub_1000341B8@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v24;

  v3 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100006DA4(&qword_1000ACE10);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AttributedString(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  sub_100009434(v1 + *(int *)(v13 + 24), (uint64_t)v8, &qword_1000ACE10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100009578((uint64_t)v8, &qword_1000ACE10);
    v14 = *(_QWORD *)(v1 + *(int *)(v13 + 36));
    if (v14 < 1)
    {
      v22 = 1;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, v22, 1, v9);
    }
    v15 = (void *)objc_opt_self(NSNumberFormatter);
    v16 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v14);
    v17 = objc_msgSend(v15, "localizedStringFromNumber:numberStyle:", v16, 1);

    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v20 = v19;

    AttributeContainer.init()();
    AttributedString.init(_:attributes:)(v18, v20, v5);
  }
  else
  {
    v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v21(v12, v8, v9);
    v21(a1, v12, v9);
  }
  v22 = 0;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, v22, 1, v9);
}

uint64_t sub_1000343CC()
{
  return sub_100014818((uint64_t (*)(void))sub_1000458A8, (uint64_t)&_s27ReminderWithSubtasksFontKeyON);
}

uint64_t sub_1000343E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = v2;
  v5 = ToggleStyleConfiguration.isOn.getter(a1);
  v6 = sub_10003613C();
  if ((v6 & 1) != 0 || (v5 & 1) == 0)
    v7 = static Color.primary.getter(v6);
  else
    v7 = static Color.secondary.getter(v6);
  v8 = v7;
  *(_QWORD *)a2 = static VerticalAlignment.center.getter(v7);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v9 = sub_100006DA4(&qword_1000AED08);
  sub_1000328CC(v3, v8, a2 + *(int *)(v9 + 44));
  return swift_release(v8);
}

uint64_t sub_100034480@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  double v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t OpaqueTypeConformance2;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;

  v73 = a1;
  v2 = type metadata accessor for DynamicTypeSize(0);
  v71 = *(_QWORD *)(v2 - 8);
  v72 = v2;
  __chkstk_darwin(v2);
  v70 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Image.Scale(0);
  v68 = *(_QWORD *)(v4 - 8);
  v69 = v4;
  __chkstk_darwin(v4);
  v67 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for REMFeatureFlags(0);
  v60 = *(_QWORD *)(v6 - 8);
  v61 = v6;
  __chkstk_darwin(v6);
  v56 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100006DA4(&qword_1000AF1F0);
  v57 = *(_QWORD *)(v8 - 8);
  v58 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_100006DA4(&qword_1000AF1F8);
  __chkstk_darwin(v59);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100006DA4(&qword_1000AF200);
  __chkstk_darwin(v13);
  v62 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100006DA4(&qword_1000AF208);
  __chkstk_darwin(v65);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_100006DA4(&qword_1000AF210);
  v64 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v63 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)v1)
    v18 = 0xD000000000000017;
  else
    v18 = 0x656C63726963;
  if (*(_BYTE *)v1)
    v19 = 0x800000010008F9F0;
  else
    v19 = 0xE600000000000000;
  v20 = Image.init(systemName:)(v18, v19);
  v21 = static Font.body.getter();
  KeyPath = swift_getKeyPath(&unk_10008B008);
  v74 = v20;
  v75 = KeyPath;
  v76 = v21;
  v23 = static Font.Weight.regular.getter();
  v24 = sub_100006DA4(&qword_1000AD718);
  v25 = sub_100018A08();
  View.fontWeight(_:)(*(_QWORD *)&v23, 0, v24, v25);
  swift_release(v21);
  swift_release(KeyPath);
  swift_release(v20);
  type metadata accessor for TTRAnyListWidget.CompletedView(0);
  v26 = sub_10003613C();
  if ((v26 & 1) != 0)
  {
    v27 = static Color.secondary.getter(v26);
  }
  else if ((*(_BYTE *)v1 & 1) != 0)
  {
    v28 = *(_QWORD *)(v1 + 8);
    v29 = *(_BYTE *)(v1 + 16);
    j__swift_retain(v28);
    v27 = sub_100024E40(v28, v29);
    j__swift_release(v28);
  }
  else
  {
    if (qword_1000AC930 != -1)
      swift_once(&qword_1000AC930, sub_10005FEF4);
    v27 = qword_1000B9E70;
    swift_retain(qword_1000B9E70);
  }
  v30 = swift_getKeyPath(&unk_10008B038);
  v32 = v57;
  v31 = v58;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v12, v10, v58);
  v33 = v59;
  v34 = (uint64_t *)&v12[*(int *)(v59 + 36)];
  *v34 = v30;
  v34[1] = v27;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v31);
  v36 = v60;
  v35 = v61;
  v37 = v56;
  v38 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v60 + 104))(v56, enum case for REMFeatureFlags.accentableWidgets(_:), v61);
  LOBYTE(v30) = REMFeatureFlags.isEnabled.getter(v38);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v35);
  v39 = sub_100006DA4(&qword_1000AF218);
  v40 = sub_100049EDC();
  v74 = v33;
  v75 = v40;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v74, &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>, 1);
  v42 = (uint64_t)v62;
  View.ttr_if<A>(_:transform:)(v30 & 1, sub_100034A04, 0, v33, v39, v40, OpaqueTypeConformance2);
  sub_100009578((uint64_t)v12, &qword_1000AF1F8);
  v44 = v67;
  v43 = v68;
  v45 = v69;
  (*(void (**)(char *, _QWORD, uint64_t))(v68 + 104))(v67, enum case for Image.Scale.large(_:), v69);
  v46 = swift_getKeyPath(&unk_10008B238);
  v47 = v65;
  v48 = (uint64_t *)&v16[*(int *)(v65 + 36)];
  v49 = sub_100006DA4(&qword_1000AD6C0);
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))((char *)v48 + *(int *)(v49 + 28), v44, v45);
  *v48 = v46;
  sub_100009434(v42, (uint64_t)v16, &qword_1000AF200);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
  sub_100009578(v42, &qword_1000AF200);
  v51 = v70;
  v50 = v71;
  v52 = v72;
  (*(void (**)(char *, _QWORD, uint64_t))(v71 + 104))(v70, enum case for DynamicTypeSize.large(_:), v72);
  v53 = sub_100049F88();
  v54 = v63;
  View.dynamicTypeSize(_:)(v51, v47, v53);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v52);
  sub_100009578((uint64_t)v16, &qword_1000AF208);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v64 + 32))(v73, v54, v66);
}

uint64_t sub_100034A04()
{
  uint64_t v0;
  unint64_t v1;

  v0 = sub_100006DA4(&qword_1000AF1F8);
  v1 = sub_100049EDC();
  return View.widgetAccentable(_:)(1, v0, v1);
}

__n128 sub_100034A58@<Q0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  __n128 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __n128 result;
  char v20;
  uint64_t v21;
  __int128 v22;
  __n128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  char v40;
  __n128 v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v2 = v1;
  v21 = static HorizontalAlignment.center.getter();
  v4 = sub_100034BC4(v1, (uint64_t)&v22);
  v5 = v22;
  v6 = BYTE8(v22);
  v7 = BYTE9(v22);
  v8 = v23;
  v9 = v24;
  v11 = *((_QWORD *)&v24 + 1);
  v10 = v25;
  v20 = BYTE8(v25);
  if (*v2 >= 2u)
    v12 = static Alignment.center.getter(v4);
  else
    v12 = static Alignment.leading.getter(v4);
  v35 = v21;
  v36 = 0;
  v37 = 1;
  v38 = v5;
  v39 = v6;
  v40 = v7;
  v41 = v8;
  v42 = v9;
  v43 = v11;
  v44 = v10;
  v45 = v20;
  sub_100024880(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v22, 0.0, 1, 0.0, 1, v12, v13);
  sub_10000729C(v8.n128_i64[0], v8.n128_i64[1], v9);
  swift_bridgeObjectRelease(v11);
  v14 = v33;
  *(_OWORD *)(a1 + 160) = v32;
  *(_OWORD *)(a1 + 176) = v14;
  *(_QWORD *)(a1 + 192) = v34;
  v15 = v29;
  *(_OWORD *)(a1 + 96) = v28;
  *(_OWORD *)(a1 + 112) = v15;
  v16 = v31;
  *(_OWORD *)(a1 + 128) = v30;
  *(_OWORD *)(a1 + 144) = v16;
  v17 = v25;
  *(_OWORD *)(a1 + 32) = v24;
  *(_OWORD *)(a1 + 48) = v17;
  v18 = v27;
  *(_OWORD *)(a1 + 64) = v26;
  *(_OWORD *)(a1 + 80) = v18;
  result = v23;
  *(_OWORD *)a1 = v22;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100034BC4@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v32;
  BOOL v33;

  v4 = *a1;
  v5 = TTRRemindersListViewModel.EmptyListMessagingType.localizedTitle(withTextFormat:)(0, a1[1]);
  if (!v6)
    v5 = static TTRLocalizableStrings.RemindersList.noReminders.getter(v5);
  v7 = v5;
  v8 = v6;
  v9 = *((_QWORD *)a1 + 1);
  v10 = a1[16];
  swift_retain(v9);
  v12 = sub_100025008(v11, v10, 1953394502, 0xE400000000000000);
  swift_release(v9);
  v13 = Text.font(_:)(v12, v7, v8, 0, _swiftEmptyArrayStorage);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  swift_bridgeObjectRelease(v8);
  swift_release(v12);
  type metadata accessor for TTRAnyListWidget.InteractiveNoRemindersView(0);
  v20 = sub_10003613C();
  if ((v20 & 1) != 0)
    v21 = static Color.primary.getter(v20);
  else
    v21 = static Color.secondary.getter(v20);
  v22 = v21;
  v23 = v17 & 1;
  v32 = v4 != 0;
  v33 = v4 == 0;
  v24 = Text.foregroundColor(_:)(v21, v13, v15, v17 & 1, v19);
  v26 = v25;
  v28 = v27;
  v30 = v29;
  swift_release(v22);
  sub_10000729C(v13, v15, v23);
  swift_bridgeObjectRelease(v19);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = v32;
  *(_BYTE *)(a2 + 9) = v33;
  *(_QWORD *)(a2 + 16) = v24;
  *(_QWORD *)(a2 + 24) = v26;
  *(_BYTE *)(a2 + 32) = v28 & 1;
  *(_QWORD *)(a2 + 40) = v30;
  *(_QWORD *)(a2 + 48) = 0;
  *(_BYTE *)(a2 + 56) = 1;
  sub_100009520(v24, v26, v28 & 1);
  swift_bridgeObjectRetain(v30);
  sub_10000729C(v24, v26, v28 & 1);
  return swift_bridgeObjectRelease(v30);
}

uint64_t sub_100034D74@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t OpaqueTypeConformance2;
  unint64_t v19;
  _QWORD v21[2];
  _QWORD v22[2];
  __int128 v23;

  v2 = v1;
  v21[1] = a1;
  v3 = type metadata accessor for AccessibilityChildBehavior(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100006DA4(&qword_1000AEDC0);
  __chkstk_darwin(v7);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100006DA4(&qword_1000AEDC8);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v9 = static VerticalAlignment.center.getter(v12);
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  v15 = sub_100006DA4(&qword_1000AEDD0);
  v16 = sub_100034F50(v2, (uint64_t)&v9[*(int *)(v15 + 44)]);
  static AccessibilityChildBehavior.ignore.getter(v16);
  v17 = sub_1000095B4(&qword_1000AEDD8, &qword_1000AEDC0, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.accessibilityElement(children:)(v6, v7, v17);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_100009578((uint64_t)v9, &qword_1000AEDC0);
  v23 = *(_OWORD *)v2;
  v22[0] = v7;
  v22[1] = v17;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v22, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v19 = sub_10003F228();
  View.accessibilityLabel<A>(_:)(&v23, v10, &type metadata for String, OpaqueTypeConformance2, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t sub_100034F50@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t KeyPath;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v4 = (int *)type metadata accessor for TTRAnyListWidget.ListShareeBadgesView(0);
  v5 = __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  v41 = (uint64_t)&v37 - v8;
  v9 = *a1;
  v10 = a1[1];
  v11 = a1[3];
  v12 = *((_BYTE *)a1 + 32);
  swift_bridgeObjectRetain(v10);
  swift_retain(v11);
  v14 = sub_100025008(v13, v12, 1953394502, 0xE400000000000000);
  swift_release(v11);
  v15 = Text.font(_:)(v14, v9, v10, 0, _swiftEmptyArrayStorage);
  v17 = v16;
  LOBYTE(v11) = v18;
  v20 = v19;
  swift_bridgeObjectRelease(v10);
  v21 = swift_release(v14);
  v22 = v11 & 1;
  v23 = static Color.secondary.getter(v21);
  v24 = Text.foregroundColor(_:)(v23, v15, v17, v22, v20);
  v38 = v25;
  v39 = v24;
  LOBYTE(v14) = v26;
  v40 = v27;
  swift_release(v23);
  LOBYTE(v23) = v14 & 1;
  sub_10000729C(v15, v17, v22);
  swift_bridgeObjectRelease(v20);
  KeyPath = swift_getKeyPath(&unk_10008AF50);
  v42 = a1[2];
  *v7 = v42;
  v29 = (_QWORD *)((char *)v7 + v4[5]);
  *v29 = swift_getKeyPath(&unk_10008A4D0);
  v30 = sub_100006DA4(&qword_1000ADE30);
  swift_storeEnumTagMultiPayload(v29, v30, 0);
  *(_QWORD *)((char *)v7 + v4[6]) = 0x4020000000000000;
  *(_QWORD *)((char *)v7 + v4[7]) = 0x3FF0000000000000;
  v31 = v41;
  sub_100007EF0((uint64_t)v7, v41, type metadata accessor for TTRAnyListWidget.ListShareeBadgesView);
  sub_1000072AC(v31, (uint64_t)v7, type metadata accessor for TTRAnyListWidget.ListShareeBadgesView);
  v33 = v38;
  v32 = v39;
  *(_QWORD *)a2 = v39;
  *(_QWORD *)(a2 + 8) = v33;
  *(_BYTE *)(a2 + 16) = v23;
  v34 = v40;
  *(_QWORD *)(a2 + 24) = v40;
  *(_QWORD *)(a2 + 32) = KeyPath;
  *(_QWORD *)(a2 + 40) = 1;
  *(_BYTE *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0x4030000000000000;
  *(_BYTE *)(a2 + 64) = 0;
  v35 = sub_100006DA4(&qword_1000AEDE0);
  sub_1000072AC((uint64_t)v7, a2 + *(int *)(v35 + 64), type metadata accessor for TTRAnyListWidget.ListShareeBadgesView);
  sub_100009520(v32, v33, v23);
  swift_bridgeObjectRetain(v34);
  swift_retain(KeyPath);
  sub_100048044(&v42);
  sub_100007EB4(v31, type metadata accessor for TTRAnyListWidget.ListShareeBadgesView);
  sub_100007EB4((uint64_t)v7, type metadata accessor for TTRAnyListWidget.ListShareeBadgesView);
  sub_10000729C(v32, v33, v23);
  swift_release(KeyPath);
  return swift_bridgeObjectRelease(v34);
}

uint64_t sub_1000351F8()
{
  return sub_100014818((uint64_t (*)(void))sub_100045594, (uint64_t)&_s13ShareeFontKeyON);
}

uint64_t sub_10003520C@<X0>(uint64_t a1@<X8>)
{
  return sub_100034D74(a1);
}

uint64_t sub_100035244(uint64_t a1)
{
  return sub_100035634(a1, &enum case for Font.TextStyle.subheadline(_:), &qword_1000ADCC8);
}

uint64_t sub_100035258@<X0>(uint64_t *a1@<X8>)
{
  return sub_100017534(&qword_1000AC8C8, &qword_1000ADCC8, (uint64_t)sub_100035244, a1);
}

uint64_t sub_100035274(uint64_t a1)
{
  return sub_100035434(a1, (unsigned int *)&enum case for Font.TextStyle.footnote(_:), &qword_1000ADCD0);
}

uint64_t sub_100035288@<X0>(uint64_t *a1@<X8>)
{
  return sub_100017534(&qword_1000AC8D0, &qword_1000ADCD0, (uint64_t)sub_100035274, a1);
}

uint64_t sub_1000352A4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v0 = sub_100006DA4(&qword_1000ACBD8);
  __chkstk_darwin(v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Font.TextStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for Font.TextStyle.footnote(_:), v3);
  v7 = enum case for Font.Design.rounded(_:);
  v8 = type metadata accessor for Font.Design(0);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v2, v7, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v8);
  v10 = static Font.system(_:design:weight:)(v6, v2, 0, 1);
  sub_100009578((uint64_t)v2, &qword_1000ACBD8);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  static Font.Weight.bold.getter(v11);
  v12 = Font.weight(_:)(v10);
  result = swift_release(v10);
  qword_1000ADCD8 = v12;
  return result;
}

uint64_t sub_100035404@<X0>(uint64_t *a1@<X8>)
{
  return sub_100017534(&qword_1000AC8D8, &qword_1000ADCD8, (uint64_t)sub_1000352A4, a1);
}

uint64_t sub_100035420(uint64_t a1)
{
  return sub_100035434(a1, (unsigned int *)&enum case for Font.TextStyle.body(_:), &qword_1000ADCE0);
}

uint64_t sub_100035434(uint64_t a1, unsigned int *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t *v22;

  v22 = a3;
  v4 = type metadata accessor for Font.Leading(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100006DA4(&qword_1000ACBD8);
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Font.TextStyle(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *a2, v11);
  v15 = enum case for Font.Design.rounded(_:);
  v16 = type metadata accessor for Font.Design(0);
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v10, v15, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v10, 0, 1, v16);
  v18 = static Font.system(_:design:weight:)(v14, v10, 0, 1);
  sub_100009578((uint64_t)v10, &qword_1000ACBD8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Font.Leading.tight(_:), v4);
  v19 = Font.leading(_:)(v7, v18);
  swift_release(v18);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *v22 = v19;
  return result;
}

uint64_t sub_100035604@<X0>(uint64_t *a1@<X8>)
{
  return sub_100017534(&qword_1000AC8E0, &qword_1000ADCE0, (uint64_t)sub_100035420, a1);
}

uint64_t sub_100035620(uint64_t a1)
{
  return sub_100035634(a1, (unsigned int *)&enum case for Font.TextStyle.footnote(_:), &qword_1000ADCE8);
}

uint64_t sub_100035634(uint64_t a1, unsigned int *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t *v24;

  v24 = a3;
  v4 = type metadata accessor for Font.Leading(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100006DA4(&qword_1000ACBD8);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Font.TextStyle(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *a2, v11);
  v15 = enum case for Font.Design.rounded(_:);
  v16 = type metadata accessor for Font.Design(0);
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v10, v15, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v10, 0, 1, v16);
  v18 = static Font.system(_:design:weight:)(v14, v10, 0, 1);
  sub_100009578((uint64_t)v10, &qword_1000ACBD8);
  v19 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  static Font.Weight.semibold.getter(v19);
  v20 = Font.weight(_:)(v18);
  swift_release(v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Font.Leading.tight(_:), v4);
  v21 = Font.leading(_:)(v7, v20);
  swift_release(v20);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *v24 = v21;
  return result;
}

uint64_t sub_10003581C@<X0>(uint64_t *a1@<X8>)
{
  return sub_100017534(&qword_1000AC8E8, &qword_1000ADCE8, (uint64_t)sub_100035620, a1);
}

uint64_t sub_100035838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v0 = type metadata accessor for Font.Leading(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100006DA4(&qword_1000ACBD8);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = static Font.Weight.bold.getter(v5);
  v9 = enum case for Font.Design.rounded(_:);
  v10 = type metadata accessor for Font.Design(0);
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 104))(v7, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
  v12 = static Font.system(size:weight:design:)(*(_QWORD *)&v8, 0, v7, 30.0);
  sub_100009578((uint64_t)v7, &qword_1000ACBD8);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  v13 = Font.leading(_:)(v3, v12);
  swift_release(v12);
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_1000ADCF0 = v13;
  return result;
}

uint64_t sub_1000359A8@<X0>(uint64_t *a1@<X8>)
{
  return sub_100017534(&qword_1000AC8F0, &qword_1000ADCF0, (uint64_t)sub_100035838, a1);
}

uint64_t sub_1000359C4()
{
  uint64_t result;

  result = static Color.primary.getter();
  qword_1000ADCF8 = result;
  return result;
}

uint64_t sub_1000359E0@<X0>(uint64_t *a1@<X8>)
{
  return sub_100017534(&qword_1000AC8F8, &qword_1000ADCF8, (uint64_t)sub_1000359C4, a1);
}

uint64_t sub_1000359FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  if (qword_1000AC8D0 != -1)
    swift_once(&qword_1000AC8D0, sub_100035274);
  v0 = qword_1000ADCD0;
  swift_retain(qword_1000ADCD0);
  static Font.Weight.semibold.getter(v1);
  v2 = Font.weight(_:)(v0);
  result = swift_release(v0);
  qword_1000ADD00 = v2;
  return result;
}

uint64_t sub_100035A6C@<X0>(uint64_t *a1@<X8>)
{
  return sub_100017534(&qword_1000AC900, &qword_1000ADD00, (uint64_t)sub_1000359FC, a1);
}

uint64_t sub_100035A88()
{
  uint64_t result;

  result = static Color.red.getter();
  qword_1000ADD08 = result;
  return result;
}

uint64_t sub_100035AA4@<X0>(uint64_t *a1@<X8>)
{
  return sub_100017534(&qword_1000AC908, &qword_1000ADD08, (uint64_t)sub_100035A88, a1);
}

uint64_t sub_100035AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;

  v8 = sub_10003FF44();
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

void sub_100035B10(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_100035B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_100039000(&qword_1000AE550, &qword_1000AE558, (void (*)(void))sub_10003FF44, (uint64_t)&protocol conformance descriptor for <A> A?);
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_100035B88()
{
  id v0;
  uint64_t result;

  v0 = *(id *)TTRCommonAsset.Color.hashtagTokenTextColor.unsafeMutableAddressor();
  result = Color.init(_:)(v0);
  qword_1000ADD10 = result;
  return result;
}

uint64_t sub_100035BB0@<X0>(uint64_t *a1@<X8>)
{
  return sub_100017534(&qword_1000AC910, &qword_1000ADD10, (uint64_t)sub_100035B88, a1);
}

uint64_t sub_100035BCC()
{
  id v0;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "separatorColor");
  result = Color.init(_:)(v0);
  qword_1000ADD18 = result;
  return result;
}

uint64_t sub_100035C08@<X0>(uint64_t *a1@<X8>)
{
  return sub_100017534(&qword_1000AC918, &qword_1000ADD18, (uint64_t)sub_100035BCC, a1);
}

uint64_t sub_100035C24(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = sub_100006DA4(&qword_1000AD940);
  v3 = (_QWORD *)swift_allocObject(v2, 48, 7);
  *((_OWORD *)v3 + 1) = xmmword_1000882D0;
  v4 = a1[1];
  v3[4] = *a1;
  v3[5] = v4;
  LODWORD(a1) = *((unsigned __int8 *)a1 + *(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 60));
  swift_bridgeObjectRetain(v4);
  if ((_DWORD)a1 == 1)
  {
    v5._object = (void *)0x800000010008FF40;
    v6._countAndFlagsBits = 0x696C207472616D53;
    v6._object = (void *)0xEA00000000007473;
    v5._countAndFlagsBits = 0xD00000000000003CLL;
    v7 = TTRLocalizedString(_:comment:)(v6, v5);
    v9 = v3[2];
    v8 = v3[3];
    if (v9 >= v8 >> 1)
      v3 = sub_10001C0A8((_QWORD *)(v8 > 1), v9 + 1, 1, v3);
    v3[2] = v9 + 1;
    *(Swift::String *)&v3[2 * v9 + 4] = v7;
  }
  v10 = (uint64_t *)TTRAccesibility.General.Label.Separator.unsafeMutableAddressor();
  v11 = *v10;
  v12 = v10[1];
  swift_bridgeObjectRetain(v12);
  v13 = sub_100006DA4(&qword_1000ADC78);
  v14 = sub_1000095B4(&qword_1000ADC80, &qword_1000ADC78, (uint64_t)&protocol conformance descriptor for [A]);
  v15 = BidirectionalCollection<>.joined(separator:)(v11, v12, v13, v14);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v12);
  return v15;
}

uint64_t sub_100035DA4(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  void *v22;
  uint64_t v23;
  Swift::String v24;
  unint64_t v25;
  _QWORD *v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;

  v2 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(uint64_t *)(a1 + 16) < 1)
  {
    v5 = TTRRemindersListViewModel.EmptyListMessagingType.localizedTitle(withTextFormat:)(0, *(unsigned __int8 *)(a1 + 40));
    if (!v6)
      v5 = static TTRLocalizableStrings.RemindersList.noReminders.getter(v5);
  }
  else
  {
    v5 = static TTRLocalizableStrings.Common.remindersCountText(withCount:isForGroceries:)();
  }
  v7 = v5;
  v8 = v6;
  v9 = sub_10001C0A8(0, 1, 1, _swiftEmptyArrayStorage);
  v11 = v9[2];
  v10 = v9[3];
  if (v11 >= v10 >> 1)
    v9 = sub_10001C0A8((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
  v9[2] = v11 + 1;
  v12 = &v9[2 * v11];
  v12[4] = v7;
  v12[5] = v8;
  v13 = (uint64_t *)(a1 + v2[13]);
  v14 = v13[1];
  sub_1000072AC(a1, (uint64_t)v4, type metadata accessor for TTRNewWidgetViewModel);
  if (v14)
  {
    sub_100007EB4((uint64_t)v4, type metadata accessor for TTRNewWidgetViewModel);
  }
  else
  {
    v15 = *(_QWORD *)&v4[v2[11] + 8];
    v16 = sub_100007EB4((uint64_t)v4, type metadata accessor for TTRNewWidgetViewModel);
    if (!v15)
      goto LABEL_21;
  }
  v17 = v13[1];
  if (v17)
  {
    v18 = *v13;
    v19 = v13[1];
  }
  else
  {
    v20 = (uint64_t *)(a1 + v2[14]);
    v19 = v20[1];
    if (v19)
    {
      v18 = *v20;
      swift_bridgeObjectRetain(v20[1]);
    }
    else
    {
      v18 = 0;
      v19 = 0xE000000000000000;
    }
  }
  v48 = 0;
  v49 = 0xE000000000000000;
  v21 = (uint64_t *)(a1 + v2[11]);
  v22 = (void *)v21[1];
  if (v22)
  {
    v23 = *v21;
    swift_bridgeObjectRetain(v17);
    v24._countAndFlagsBits = v23;
    v24._object = v22;
    String.append(_:)(v24);
    v26 = v48;
    v25 = v49;
  }
  else
  {
    swift_bridgeObjectRetain(v17);
    v26 = 0;
    v25 = 0xE000000000000000;
  }
  v27._countAndFlagsBits = 0xD00000000000006ELL;
  v28._object = (void *)0x800000010008FC80;
  v27._object = (void *)0x800000010008FCB0;
  v28._countAndFlagsBits = 0xD00000000000002ALL;
  v29._countAndFlagsBits = 0x6567646162204025;
  v29._object = (void *)0xEC0000004025202CLL;
  v30 = TTRLocalizedString(_:value:comment:)(v28, v29, v27);
  v31 = sub_100006DA4(&qword_1000AD2E8);
  v32 = swift_allocObject(v31, 112, 7);
  *(_OWORD *)(v32 + 16) = xmmword_1000895E0;
  *(_QWORD *)(v32 + 56) = &type metadata for String;
  v33 = sub_100024070();
  *(_QWORD *)(v32 + 32) = v18;
  *(_QWORD *)(v32 + 40) = v19;
  *(_QWORD *)(v32 + 96) = &type metadata for String;
  *(_QWORD *)(v32 + 104) = v33;
  *(_QWORD *)(v32 + 64) = v33;
  *(_QWORD *)(v32 + 72) = v26;
  *(_QWORD *)(v32 + 80) = v25;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v25);
  v34 = static String.localizedStringWithFormat(_:_:)(v30._countAndFlagsBits, v30._object, v32);
  v36 = v35;
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v30._object);
  v16 = swift_bridgeObjectRelease(v32);
  v38 = v9[2];
  v37 = v9[3];
  if (v38 >= v37 >> 1)
  {
    v16 = (uint64_t)sub_10001C0A8((_QWORD *)(v37 > 1), v38 + 1, 1, v9);
    v9 = (_QWORD *)v16;
  }
  v9[2] = v38 + 1;
  v39 = &v9[2 * v38];
  v39[4] = v34;
  v39[5] = v36;
LABEL_21:
  v48 = v9;
  v40 = (uint64_t *)TTRAccesibility.General.Label.Separator.unsafeMutableAddressor(v16);
  v41 = *v40;
  v42 = v40[1];
  swift_bridgeObjectRetain(v42);
  v43 = sub_100006DA4(&qword_1000ADC78);
  v44 = sub_1000095B4(&qword_1000ADC80, &qword_1000ADC78, (uint64_t)&protocol conformance descriptor for [A]);
  v45 = BidirectionalCollection<>.joined(separator:)(v41, v42, v43, v44);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v42);
  return v45;
}

uint64_t sub_10003613C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t (*v10)(char *, uint64_t);
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v16;

  v0 = type metadata accessor for WidgetRenderingMode(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v16 - v5;
  v7 = sub_100024A50(&qword_1000ADE30, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x800000010008FE00, (uint64_t *)((char *)&v16 - v5));
  static WidgetRenderingMode.fullColor.getter(v7);
  v8 = sub_100007218(&qword_1000AE030, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t)&protocol conformance descriptor for WidgetRenderingMode);
  v9 = dispatch thunk of static Equatable.== infix(_:_:)(v4, v6, v0, v8);
  v10 = *(uint64_t (**)(char *, uint64_t))(v1 + 8);
  v11 = v10(v4, v0);
  if ((v9 & 1) != 0)
  {
    v12 = 0;
  }
  else
  {
    static WidgetRenderingMode.accented.getter(v11);
    v13 = dispatch thunk of static Equatable.== infix(_:_:)(v4, v6, v0, v8);
    v14 = v10(v4, v0);
    if ((v13 & 1) != 0)
    {
      v12 = 1;
    }
    else
    {
      static WidgetRenderingMode.vibrant.getter(v14);
      v12 = dispatch thunk of static Equatable.== infix(_:_:)(v4, v6, v0, v8);
      v10(v4, v0);
    }
  }
  v10(v6, v0);
  return v12 & 1;
}

uint64_t sub_1000362C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return static DynamicProperty._makeProperty<A>(in:container:fieldOffset:inputs:)(a1, a2, a3, a4, a6, a5);
}

uint64_t sub_1000362E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  a5(0);
  __chkstk_darwin();
  v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_10003635C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100036384(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

uint64_t sub_1000363AC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;

  v8 = sub_100006DA4(&qword_1000AE3E8);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v55 = (uint64_t *)((char *)&v48 - v13);
  __chkstk_darwin(v12);
  v56 = v15;
  v57 = (uint64_t)&v48 - v14;
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = a4 >> 1;
  v49 = a1;
  result = swift_unknownObjectRetain(a1);
  v19 = _swiftEmptyArrayStorage;
  if (v17 == a3)
  {
    v20 = 0;
LABEL_28:
    result = swift_unknownObjectRelease(v49);
    v45 = v19[3];
    if (v45 < 2)
      return (uint64_t)v19;
    v46 = v45 >> 1;
    v28 = __OFSUB__(v46, v20);
    v47 = v46 - v20;
    if (!v28)
    {
      v19[2] = v47;
      return (uint64_t)v19;
    }
  }
  else
  {
    v21 = 0;
    v20 = 0;
    v52 = (v16 + 32) & ~v16;
    v22 = (char *)_swiftEmptyArrayStorage + v52;
    v50 = v11;
    v51 = v16 | 7;
    v53 = a3 - v17;
    v54 = v17;
    v23 = _swiftEmptyArrayStorage;
    while (a3 + v21 < v54)
    {
      v24 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
      v25 = (uint64_t)&v11[*(int *)(v8 + 48)];
      result = sub_1000072AC(a2 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * (a3 + v21), v25, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      if (__OFADD__(v21, 1))
        goto LABEL_33;
      v26 = (uint64_t)v55;
      v27 = (uint64_t)v55 + *(int *)(v8 + 48);
      *v55 = v21;
      sub_100007EF0(v25, v27, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      result = sub_100018778(v26, v57, &qword_1000AE3E8);
      if (v20)
      {
        v19 = v23;
        v28 = __OFSUB__(v20--, 1);
        if (v28)
          goto LABEL_34;
      }
      else
      {
        v29 = v23[3];
        if ((uint64_t)((v29 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_35;
        v30 = a2;
        v31 = a3;
        v32 = v29 & 0xFFFFFFFFFFFFFFFELL;
        if (v32 <= 1)
          v33 = 1;
        else
          v33 = v32;
        v34 = sub_100006DA4(&qword_1000AE408);
        v35 = *(_QWORD *)(v56 + 72);
        v36 = v52;
        v19 = (_QWORD *)swift_allocObject(v34, v52 + v35 * v33, v51);
        result = j__malloc_size(v19);
        if (!v35)
          goto LABEL_36;
        v37 = result - v36;
        if (result - v36 == 0x8000000000000000 && v35 == -1)
          goto LABEL_37;
        v39 = v37 / v35;
        v19[2] = v33;
        v19[3] = 2 * (v37 / v35);
        v40 = (char *)v19 + v36;
        v41 = v23[3] >> 1;
        v42 = v41 * v35;
        if (v23[2])
        {
          v43 = (char *)v23 + v52;
          if (v19 < v23 || v40 >= &v43[v42])
          {
            swift_arrayInitWithTakeFrontToBack(v40, v43, v41, v8);
          }
          else if (v19 != v23)
          {
            swift_arrayInitWithTakeBackToFront(v40);
          }
          v23[2] = 0;
        }
        v22 = &v40[v42];
        v44 = (v39 & 0x7FFFFFFFFFFFFFFFLL) - v41;
        result = swift_release(v23);
        a3 = v31;
        a2 = v30;
        v11 = v50;
        v28 = __OFSUB__(v44, 1);
        v20 = v44 - 1;
        if (v28)
          goto LABEL_34;
      }
      result = sub_100018778(v57, (uint64_t)v22, &qword_1000AE3E8);
      v22 += *(_QWORD *)(v56 + 72);
      ++v21;
      v23 = v19;
      if (!(v53 + v21))
        goto LABEL_28;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for TTRAnyListWidget.WidgetPlaceholderWrapper(uint64_t a1)
{
  return sub_100007E80(a1, (uint64_t *)&unk_1000ADDB8, (uint64_t)&nominal type descriptor for TTRAnyListWidget.WidgetPlaceholderWrapper);
}

unint64_t sub_1000366E0()
{
  unint64_t result;

  result = qword_1000ADD40;
  if (!qword_1000ADD40)
  {
    result = swift_getWitnessTable(&unk_10008B7C8, &type metadata for TTRNewWidgetProvider);
    atomic_store(result, (unint64_t *)&qword_1000ADD40);
  }
  return result;
}

uint64_t sub_100036724()
{
  return EnvironmentValues.widgetFamily.getter();
}

_QWORD *sub_100036744(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1000395AC(a1, a2, a3, &qword_1000ADD50, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetFamily);
}

uint64_t sub_100036758(_QWORD *a1, uint64_t a2)
{
  return sub_1000399A8(a1, a2, &qword_1000ADD50, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetFamily);
}

uint64_t sub_10003676C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100039BC8(a1, a2, a3, &qword_1000ADD50, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetFamily);
}

uint64_t sub_100036780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100039F90(a1, a2, a3, &qword_1000ADD50, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetFamily);
}

uint64_t sub_100036794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10003A5A8(a1, a2, a3, &qword_1000ADD50, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetFamily);
}

uint64_t sub_1000367A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10003A8BC(a1, a2, a3, &qword_1000ADD50, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetFamily);
}

uint64_t sub_1000367BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000367C8);
}

uint64_t sub_1000367C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10003C7A8(a1, a2, a3, &qword_1000ADD58);
}

uint64_t sub_1000367D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000367E0);
}

uint64_t sub_1000367E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10003C838(a1, a2, a3, a4, &qword_1000ADD58);
}

void sub_1000367EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10003AE48(a1, a2, a3, (unint64_t *)&unk_1000ADDC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily);
}

uint64_t sub_100036800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v0 = sub_100007258(&qword_1000ADD30);
  v1 = sub_100007258(&qword_1000ADD28);
  v5 = sub_100007258(&qword_1000ADD20);
  v6 = sub_1000095B4(&qword_1000ADD48, &qword_1000ADD20, (uint64_t)&protocol conformance descriptor for IntentConfiguration<A, B>);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of WidgetConfiguration.configurationDisplayName(_:)>>, 1);
  v5 = v1;
  v6 = OpaqueTypeConformance2;
  v3 = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of WidgetConfiguration.description(_:)>>, 1);
  v5 = v0;
  v6 = v3;
  return swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of WidgetConfiguration.supportedFamilies(_:)>>, 1);
}

uint64_t sub_1000368BC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100092A94, 1);
}

uint64_t sub_1000368CC()
{
  return sub_100039000(&qword_1000ADE10, &qword_1000ADE18, (void (*)(void))sub_100036900, (uint64_t)&protocol conformance descriptor for <A> Group<A>);
}

unint64_t sub_100036900()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1000ADE20;
  if (!qword_1000ADE20)
  {
    v1 = sub_100007258(&qword_1000ADE28);
    v2[0] = _s10WidgetViewVMa_0(255);
    v2[1] = sub_100007218(&qword_1000ADE08, _s10WidgetViewVMa_0, (uint64_t)&unk_10008E42C);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.redacted(reason:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000ADE20);
  }
  return result;
}

uint64_t *sub_1000369AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_100006DA4(&qword_1000ADE30);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    v6 = v4;
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v7 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v12 = *a2;
      *a1 = *a2;
      swift_retain(v12);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_100036A74(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(a1, v2) != 1)
    return swift_release(*a1);
  v3 = type metadata accessor for WidgetRenderingMode(0);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

uint64_t *sub_100036AD8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
  {
    v5 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    v6 = a1;
    v7 = v4;
    v8 = 1;
  }
  else
  {
    v9 = *a2;
    *a1 = *a2;
    swift_retain(v9);
    v6 = a1;
    v7 = v4;
    v8 = 0;
  }
  swift_storeEnumTagMultiPayload(v6, v7, v8);
  return a1;
}

uint64_t *sub_100036B74(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_100009578((uint64_t)a1, &qword_1000ADE30);
    v4 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v5 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      v6 = a1;
      v7 = v4;
      v8 = 1;
    }
    else
    {
      v9 = *a2;
      *a1 = *a2;
      swift_retain(v9);
      v6 = a1;
      v7 = v4;
      v8 = 0;
    }
    swift_storeEnumTagMultiPayload(v6, v7, v8);
  }
  return a1;
}

void *sub_100036C28(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
  {
    v5 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload(a1, v4, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_100036CC0(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != a2)
  {
    sub_100009578((uint64_t)a1, &qword_1000ADE30);
    v4 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v5 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload(a1, v4, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100036D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100036D7C);
}

uint64_t sub_100036D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006DA4(&qword_1000ADE38);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100036DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100036DC8);
}

uint64_t sub_100036DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006DA4(&qword_1000ADE38);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for IsVibrantText(uint64_t a1)
{
  return sub_100007E80(a1, (uint64_t *)&unk_1000ADE98, (uint64_t)&nominal type descriptor for IsVibrantText);
}

void sub_100036E20(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_10003AEE4(319, (unint64_t *)&unk_1000ADEA8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
  }
}

_QWORD *sub_100036E98(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  void **v13;
  int *v14;
  uint64_t v15;
  unsigned int (*v16)(void **, uint64_t, int *);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void (*v34)(void **, _QWORD, uint64_t, int *);
  id v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  char *v92;
  void (*v93)(char *, char *, uint64_t);
  char *v94;
  char *v95;
  char *v96;
  void **__dst;
  void *__dsta;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    v19 = (_QWORD *)(v18 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v18);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = a3[5];
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = *(_QWORD *)((char *)a2 + v5 + 8);
    *(_QWORD *)v6 = *(_QWORD *)((char *)a2 + v5);
    *((_QWORD *)v6 + 1) = v8;
    *((_OWORD *)v6 + 1) = *(_OWORD *)((char *)a2 + v5 + 16);
    v9 = *(_QWORD *)((char *)a2 + v5 + 32);
    *((_QWORD *)v6 + 4) = v9;
    v6[40] = *((_BYTE *)a2 + v5 + 40);
    v10 = *(_QWORD *)((char *)a2 + v5 + 56);
    *((_QWORD *)v6 + 6) = *(_QWORD *)((char *)a2 + v5 + 48);
    *((_QWORD *)v6 + 7) = v10;
    v11 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
    v12 = v11[9];
    __dst = (void **)&v6[v12];
    v13 = (void **)&v7[v12];
    v14 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    v15 = *((_QWORD *)v14 - 1);
    v16 = *(unsigned int (**)(void **, uint64_t, int *))(v15 + 48);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    if (v16(v13, 1, v14))
    {
      v17 = sub_100006DA4(&qword_1000ACCD8);
      memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v20 = *v13;
      v21 = v13[1];
      *__dst = *v13;
      __dst[1] = v21;
      v22 = v14[6];
      v92 = (char *)__dst + v22;
      v95 = (char *)v13 + v22;
      v23 = type metadata accessor for AttributedString(0);
      v91 = *(_QWORD *)(v23 - 8);
      v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48);
      v25 = v20;
      v26 = v21;
      if (v24(v95, 1, v23))
      {
        v27 = sub_100006DA4(&qword_1000ACE10);
        memcpy(v92, v95, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v92, v95, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v92, 0, 1, v23);
      }
      v28 = v14[7];
      v29 = (char *)__dst + v28;
      v30 = (char *)v13 + v28;
      v31 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
      v32 = v14[8];
      v33 = *(void **)((char *)v13 + v32);
      *(void **)((char *)__dst + v32) = v33;
      *(void **)((char *)__dst + v14[9]) = *(void **)((char *)v13 + v14[9]);
      *((_BYTE *)__dst + v14[10]) = *((_BYTE *)v13 + v14[10]);
      *((_BYTE *)__dst + v14[11]) = *((_BYTE *)v13 + v14[11]);
      v34 = *(void (**)(void **, _QWORD, uint64_t, int *))(v15 + 56);
      v35 = v33;
      v34(__dst, 0, 1, v14);
    }
    v36 = v11[10];
    __dsta = *(void **)&v7[v36];
    *(_QWORD *)&v6[v36] = __dsta;
    v37 = v11[11];
    v38 = &v6[v37];
    v39 = &v7[v37];
    v40 = *((_QWORD *)v39 + 1);
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *((_QWORD *)v38 + 1) = v40;
    v41 = v11[12];
    v42 = *(void **)&v7[v41];
    *(_QWORD *)&v6[v41] = v42;
    v43 = v11[13];
    v44 = &v6[v43];
    v45 = &v7[v43];
    v46 = *((_QWORD *)v45 + 1);
    *(_QWORD *)v44 = *(_QWORD *)v45;
    *((_QWORD *)v44 + 1) = v46;
    v47 = v11[14];
    v48 = &v6[v47];
    v49 = &v7[v47];
    v50 = *((_QWORD *)v49 + 1);
    *(_QWORD *)v48 = *(_QWORD *)v49;
    *((_QWORD *)v48 + 1) = v50;
    v6[v11[15]] = v7[v11[15]];
    v51 = v11[16];
    v52 = &v6[v51];
    v53 = &v7[v51];
    v54 = *((_QWORD *)v53 + 1);
    *(_QWORD *)v52 = *(_QWORD *)v53;
    *((_QWORD *)v52 + 1) = v54;
    v55 = v11[17];
    v56 = *(_QWORD *)&v7[v55];
    *(_QWORD *)&v6[v55] = v56;
    v57 = v11[18];
    v94 = &v7[v57];
    v96 = &v6[v57];
    v58 = type metadata accessor for URL(0);
    v93 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
    v59 = __dsta;
    swift_bridgeObjectRetain(v40);
    v60 = v42;
    swift_bridgeObjectRetain(v46);
    swift_bridgeObjectRetain(v50);
    swift_bridgeObjectRetain(v54);
    swift_bridgeObjectRetain(v56);
    v93(v96, v94, v58);
    v61 = v11[19];
    v62 = *(_QWORD *)&v7[v61];
    *(_QWORD *)&v6[v61] = v62;
    v6[v11[20]] = v7[v11[20]];
    v63 = a3[6];
    v19 = a1;
    v64 = (_QWORD *)((char *)a1 + v63);
    v65 = (_QWORD *)((char *)a2 + v63);
    swift_bridgeObjectRetain(v62);
    v66 = sub_100006DA4(&qword_1000ADED8);
    if (swift_getEnumCaseMultiPayload(v65, v66) == 1)
    {
      v67 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v64, v65, v67);
      v68 = 1;
    }
    else
    {
      v69 = *v65;
      *v64 = *v65;
      swift_retain(v69);
      v68 = 0;
    }
    swift_storeEnumTagMultiPayload(v64, v66, v68);
    v70 = a3[7];
    v71 = (char *)a1 + v70;
    v72 = (char *)a2 + v70;
    v73 = *(_QWORD *)v72;
    v74 = v72[8];
    sub_10003CEB8(*(_QWORD *)v72, v74);
    *(_QWORD *)v71 = v73;
    v71[8] = v74;
    v75 = a3[8];
    v76 = (_QWORD *)((char *)a1 + v75);
    v77 = (_QWORD *)((char *)a2 + v75);
    v78 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v77, v78) == 1)
    {
      v79 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v76, v77, v79);
      v80 = 1;
    }
    else
    {
      v81 = *v77;
      *v76 = *v77;
      swift_retain(v81);
      v80 = 0;
    }
    swift_storeEnumTagMultiPayload(v76, v78, v80);
    v82 = a3[9];
    v83 = (_QWORD *)((char *)a1 + v82);
    v84 = (_QWORD *)((char *)a2 + v82);
    if (swift_getEnumCaseMultiPayload((char *)a2 + v82, v78) == 1)
    {
      v85 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v83, v84, v85);
      v86 = v83;
      v87 = v78;
      v88 = 1;
    }
    else
    {
      v89 = *v84;
      *v83 = *v84;
      swift_retain(v89);
      v86 = v83;
      v87 = v78;
      v88 = 0;
    }
    swift_storeEnumTagMultiPayload(v86, v87, v88);
  }
  return v19;
}

uint64_t sub_10003738C(uint64_t a1, int *a2)
{
  _QWORD *v4;
  int *v5;
  id *v6;
  int *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  v4 = (_QWORD *)(a1 + a2[5]);
  swift_bridgeObjectRelease(v4[1]);
  swift_bridgeObjectRelease(v4[4]);
  swift_bridgeObjectRelease(v4[7]);
  v5 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v6 = (id *)((char *)v4 + v5[9]);
  v7 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v6, 1, v7))
  {

    v8 = (char *)v6 + v7[6];
    v9 = type metadata accessor for AttributedString(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v11 = (char *)v6 + v7[7];
    v12 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);

  }
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[11] + 8));

  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[13] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[14] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[16] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[17]));
  v13 = (char *)v4 + v5[18];
  v14 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[19]));
  v15 = (_QWORD *)(a1 + a2[6]);
  v16 = sub_100006DA4(&qword_1000ADED8);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v15, v17);
  }
  else
  {
    swift_release(*v15);
  }
  sub_10003D1A0(*(_QWORD *)(a1 + a2[7]), *(_BYTE *)(a1 + a2[7] + 8));
  v18 = (_QWORD *)(a1 + a2[8]);
  v19 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
  {
    v20 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v18, v20);
  }
  else
  {
    swift_release(*v18);
  }
  v21 = (_QWORD *)(a1 + a2[9]);
  if (swift_getEnumCaseMultiPayload(v21, v19) != 1)
    return swift_release(*v21);
  v22 = type metadata accessor for WidgetRenderingMode(0);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
}

_BYTE *sub_100037648(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  void **v11;
  int *v12;
  uint64_t v13;
  unsigned int (*v14)(void **, uint64_t, int *);
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void (*v30)(void **, _QWORD, uint64_t, int *);
  id v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v85;
  char *v86;
  void (*v87)(_BYTE *, _BYTE *, uint64_t);
  char *v88;
  _BYTE *v89;
  _BYTE *v90;
  void **__dst;
  void *__dsta;

  *a1 = *a2;
  v3 = a3[5];
  v4 = &a1[v3];
  v5 = &a2[v3];
  v6 = *(_QWORD *)&a2[v3 + 8];
  *(_QWORD *)v4 = *(_QWORD *)&a2[v3];
  *((_QWORD *)v4 + 1) = v6;
  *((_OWORD *)v4 + 1) = *(_OWORD *)&a2[v3 + 16];
  v7 = *(_QWORD *)&a2[v3 + 32];
  *((_QWORD *)v4 + 4) = v7;
  v4[40] = a2[v3 + 40];
  v8 = *(_QWORD *)&a2[v3 + 56];
  *((_QWORD *)v4 + 6) = *(_QWORD *)&a2[v3 + 48];
  *((_QWORD *)v4 + 7) = v8;
  v9 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v10 = v9[9];
  __dst = (void **)&v4[v10];
  v11 = (void **)&v5[v10];
  v12 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v13 = *((_QWORD *)v12 - 1);
  v14 = *(unsigned int (**)(void **, uint64_t, int *))(v13 + 48);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  if (v14(v11, 1, v12))
  {
    v15 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = *v11;
    v17 = v11[1];
    *__dst = *v11;
    __dst[1] = v17;
    v18 = v12[6];
    v86 = (char *)v11 + v18;
    v88 = (char *)__dst + v18;
    v19 = type metadata accessor for AttributedString(0);
    v85 = *(_QWORD *)(v19 - 8);
    v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48);
    v21 = v16;
    v22 = v17;
    if (v20(v86, 1, v19))
    {
      v23 = sub_100006DA4(&qword_1000ACE10);
      memcpy(v88, v86, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v88, v86, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v88, 0, 1, v19);
    }
    v24 = v12[7];
    v25 = (char *)__dst + v24;
    v26 = (char *)v11 + v24;
    v27 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = v12[8];
    v29 = *(void **)((char *)v11 + v28);
    *(void **)((char *)__dst + v28) = v29;
    *(void **)((char *)__dst + v12[9]) = *(void **)((char *)v11 + v12[9]);
    *((_BYTE *)__dst + v12[10]) = *((_BYTE *)v11 + v12[10]);
    *((_BYTE *)__dst + v12[11]) = *((_BYTE *)v11 + v12[11]);
    v30 = *(void (**)(void **, _QWORD, uint64_t, int *))(v13 + 56);
    v31 = v29;
    v30(__dst, 0, 1, v12);
  }
  v32 = v9[10];
  __dsta = *(void **)&v5[v32];
  *(_QWORD *)&v4[v32] = __dsta;
  v33 = v9[11];
  v34 = &v4[v33];
  v35 = &v5[v33];
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  v37 = v9[12];
  v38 = *(void **)&v5[v37];
  *(_QWORD *)&v4[v37] = v38;
  v39 = v9[13];
  v40 = &v4[v39];
  v41 = &v5[v39];
  v42 = v41[1];
  *v40 = *v41;
  v40[1] = v42;
  v43 = v9[14];
  v44 = &v4[v43];
  v45 = &v5[v43];
  v46 = v45[1];
  *v44 = *v45;
  v44[1] = v46;
  v4[v9[15]] = v5[v9[15]];
  v47 = v9[16];
  v48 = &v4[v47];
  v49 = &v5[v47];
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  v51 = v9[17];
  v52 = *(_QWORD *)&v5[v51];
  *(_QWORD *)&v4[v51] = v52;
  v53 = v9[18];
  v89 = &v5[v53];
  v90 = &v4[v53];
  v54 = type metadata accessor for URL(0);
  v87 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
  v55 = __dsta;
  swift_bridgeObjectRetain(v36);
  v56 = v38;
  swift_bridgeObjectRetain(v42);
  swift_bridgeObjectRetain(v46);
  swift_bridgeObjectRetain(v50);
  swift_bridgeObjectRetain(v52);
  v87(v90, v89, v54);
  v57 = v9[19];
  v58 = *(_QWORD *)&v5[v57];
  *(_QWORD *)&v4[v57] = v58;
  v4[v9[20]] = v5[v9[20]];
  v59 = a3[6];
  v60 = (uint64_t *)&a1[v59];
  v61 = (uint64_t *)&a2[v59];
  swift_bridgeObjectRetain(v58);
  v62 = sub_100006DA4(&qword_1000ADED8);
  if (swift_getEnumCaseMultiPayload(v61, v62) == 1)
  {
    v63 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v60, v61, v63);
    v64 = 1;
  }
  else
  {
    v65 = *v61;
    *v60 = *v61;
    swift_retain(v65);
    v64 = 0;
  }
  swift_storeEnumTagMultiPayload(v60, v62, v64);
  v66 = a3[7];
  v67 = &a1[v66];
  v68 = &a2[v66];
  v69 = *(_QWORD *)v68;
  v70 = v68[8];
  sub_10003CEB8(*(_QWORD *)v68, v70);
  *(_QWORD *)v67 = v69;
  v67[8] = v70;
  v71 = a3[8];
  v72 = (uint64_t *)&a1[v71];
  v73 = (uint64_t *)&a2[v71];
  v74 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v73, v74) == 1)
  {
    v75 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v72, v73, v75);
    v76 = 1;
  }
  else
  {
    v77 = *v73;
    *v72 = *v73;
    swift_retain(v77);
    v76 = 0;
  }
  swift_storeEnumTagMultiPayload(v72, v74, v76);
  v78 = a3[9];
  v79 = (uint64_t *)&a1[v78];
  v80 = (uint64_t *)&a2[v78];
  if (swift_getEnumCaseMultiPayload(&a2[v78], v74) == 1)
  {
    v81 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v79, v80, v81);
    v82 = 1;
  }
  else
  {
    v83 = *v80;
    *v79 = *v80;
    swift_retain(v83);
    v82 = 0;
  }
  swift_storeEnumTagMultiPayload(v79, v74, v82);
  return a1;
}

_BYTE *sub_100037B04(_BYTE *a1, _BYTE *a2, int *a3)
{
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  int *v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD *, uint64_t, int *);
  int v20;
  int v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  int v41;
  size_t v42;
  void *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void (*v50)(_QWORD *, _QWORD, uint64_t, int *);
  id v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  id v59;
  uint64_t v60;
  void *v61;
  void *v62;
  id v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  void *v71;
  id v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  _BYTE *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _BYTE *v106;
  _BYTE *v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  unsigned int (*__src)(char *, uint64_t, uint64_t);
  char *__dst;
  void *__dsta;
  _BYTE *v133;
  _BYTE *v134;

  v3 = a1;
  *a1 = *a2;
  v4 = a3[5];
  v5 = &a1[v4];
  v6 = &a2[v4];
  *(_QWORD *)v5 = *(_QWORD *)&a2[v4];
  v7 = *(_QWORD *)&a2[v4 + 8];
  v8 = *((_QWORD *)v5 + 1);
  *((_QWORD *)v5 + 1) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  *((_QWORD *)v5 + 2) = *((_QWORD *)v6 + 2);
  *((_QWORD *)v5 + 3) = *((_QWORD *)v6 + 3);
  v9 = *((_QWORD *)v6 + 4);
  v10 = *((_QWORD *)v5 + 4);
  *((_QWORD *)v5 + 4) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  v5[40] = v6[40];
  *((_QWORD *)v5 + 6) = *((_QWORD *)v6 + 6);
  v11 = *((_QWORD *)v6 + 7);
  v12 = *((_QWORD *)v5 + 7);
  *((_QWORD *)v5 + 7) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  v13 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v14 = v13[9];
  v15 = &v5[v14];
  v16 = &v6[v14];
  v17 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v18 = *((_QWORD *)v17 - 1);
  v19 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (v21)
    {
      sub_100007EB4((uint64_t)v15, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    v134 = v3;
    v30 = (void *)*v16;
    v31 = (void *)*v15;
    *v15 = *v16;
    v32 = v30;

    v33 = (void *)v15[1];
    v34 = (void *)v16[1];
    v15[1] = v34;
    v35 = v34;

    v36 = v17[6];
    v37 = (char *)v15 + v36;
    v38 = (char *)v16 + v36;
    v39 = type metadata accessor for AttributedString(0);
    v129 = *(_QWORD *)(v39 - 8);
    v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v129 + 48);
    __dsta = v37;
    LODWORD(v37) = v40(v37, 1, v39);
    v41 = v40(v38, 1, v39);
    if ((_DWORD)v37)
    {
      if (!v41)
      {
        (*(void (**)(void *, char *, uint64_t))(v129 + 16))(__dsta, v38, v39);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v129 + 56))(__dsta, 0, 1, v39);
        goto LABEL_18;
      }
      v42 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v43 = __dsta;
    }
    else
    {
      if (!v41)
      {
        (*(void (**)(void *, char *, uint64_t))(v129 + 24))(__dsta, v38, v39);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v129 + 8))(__dsta, v39);
      v42 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v43 = __dsta;
    }
    memcpy(v43, v38, v42);
LABEL_18:
    v52 = v17[7];
    v53 = (char *)v15 + v52;
    v54 = (char *)v16 + v52;
    v55 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 24))(v53, v54, v55);
    v56 = v17[8];
    v57 = *(void **)((char *)v15 + v56);
    v58 = *(void **)((char *)v16 + v56);
    *(_QWORD *)((char *)v15 + v56) = v58;
    v59 = v58;

    *(_QWORD *)((char *)v15 + v17[9]) = *(_QWORD *)((char *)v16 + v17[9]);
    *((_BYTE *)v15 + v17[10]) = *((_BYTE *)v16 + v17[10]);
    *((_BYTE *)v15 + v17[11]) = *((_BYTE *)v16 + v17[11]);
    v3 = v134;
    goto LABEL_19;
  }
  if (v21)
  {
LABEL_7:
    v29 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  v22 = (void *)*v16;
  *v15 = *v16;
  v23 = (void *)v16[1];
  v15[1] = v23;
  v24 = v17[6];
  __dst = (char *)v15 + v24;
  v133 = v3;
  v128 = (char *)v16 + v24;
  v25 = type metadata accessor for AttributedString(0);
  v127 = *(_QWORD *)(v25 - 8);
  __src = *(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48);
  v26 = v22;
  v27 = v23;
  if (__src(v128, 1, v25))
  {
    v28 = sub_100006DA4(&qword_1000ACE10);
    memcpy(__dst, v128, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v127 + 16))(__dst, v128, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(__dst, 0, 1, v25);
  }
  v3 = v133;
  v44 = v17[7];
  v45 = (char *)v15 + v44;
  v46 = (char *)v16 + v44;
  v47 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
  v48 = v17[8];
  v49 = *(void **)((char *)v16 + v48);
  *(_QWORD *)((char *)v15 + v48) = v49;
  *(_QWORD *)((char *)v15 + v17[9]) = *(_QWORD *)((char *)v16 + v17[9]);
  *((_BYTE *)v15 + v17[10]) = *((_BYTE *)v16 + v17[10]);
  *((_BYTE *)v15 + v17[11]) = *((_BYTE *)v16 + v17[11]);
  v50 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v18 + 56);
  v51 = v49;
  v50(v15, 0, 1, v17);
LABEL_19:
  v60 = v13[10];
  v61 = *(void **)&v6[v60];
  v62 = *(void **)&v5[v60];
  *(_QWORD *)&v5[v60] = v61;
  v63 = v61;

  v64 = v13[11];
  v65 = &v5[v64];
  v66 = &v6[v64];
  *v65 = *v66;
  v67 = v66[1];
  v68 = v65[1];
  v65[1] = v67;
  swift_bridgeObjectRetain(v67);
  swift_bridgeObjectRelease(v68);
  v69 = v13[12];
  v70 = *(void **)&v5[v69];
  v71 = *(void **)&v6[v69];
  *(_QWORD *)&v5[v69] = v71;
  v72 = v71;

  v73 = v13[13];
  v74 = &v5[v73];
  v75 = &v6[v73];
  *v74 = *v75;
  v76 = v75[1];
  v77 = v74[1];
  v74[1] = v76;
  swift_bridgeObjectRetain(v76);
  swift_bridgeObjectRelease(v77);
  v78 = v13[14];
  v79 = &v5[v78];
  v80 = &v6[v78];
  *v79 = *v80;
  v81 = v80[1];
  v82 = v79[1];
  v79[1] = v81;
  swift_bridgeObjectRetain(v81);
  swift_bridgeObjectRelease(v82);
  v5[v13[15]] = v6[v13[15]];
  v83 = v13[16];
  v84 = &v5[v83];
  v85 = &v6[v83];
  *v84 = *v85;
  v86 = v85[1];
  v87 = v84[1];
  v84[1] = v86;
  swift_bridgeObjectRetain(v86);
  swift_bridgeObjectRelease(v87);
  v88 = v13[17];
  v89 = *(_QWORD *)&v5[v88];
  v90 = *(_QWORD *)&v6[v88];
  *(_QWORD *)&v5[v88] = v90;
  swift_bridgeObjectRetain(v90);
  swift_bridgeObjectRelease(v89);
  v91 = v13[18];
  v92 = &v5[v91];
  v93 = &v6[v91];
  v94 = type metadata accessor for URL(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v94 - 8) + 24))(v92, v93, v94);
  v95 = v13[19];
  v96 = *(_QWORD *)&v6[v95];
  v97 = *(_QWORD *)&v5[v95];
  *(_QWORD *)&v5[v95] = v96;
  swift_bridgeObjectRetain(v96);
  swift_bridgeObjectRelease(v97);
  v5[v13[20]] = v6[v13[20]];
  if (v3 != a2)
  {
    v98 = a3[6];
    v99 = (uint64_t *)&v3[v98];
    v100 = (uint64_t *)&a2[v98];
    sub_100009578((uint64_t)&v3[v98], &qword_1000ADED8);
    v101 = sub_100006DA4(&qword_1000ADED8);
    if (swift_getEnumCaseMultiPayload(v100, v101) == 1)
    {
      v102 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v99, v100, v102);
      v103 = 1;
    }
    else
    {
      v104 = *v100;
      *v99 = *v100;
      swift_retain(v104);
      v103 = 0;
    }
    swift_storeEnumTagMultiPayload(v99, v101, v103);
  }
  v105 = a3[7];
  v106 = &v3[v105];
  v107 = &a2[v105];
  v108 = *(_QWORD *)v107;
  v109 = v107[8];
  sub_10003CEB8(*(_QWORD *)v107, v109);
  v110 = *(_QWORD *)v106;
  v111 = v106[8];
  *(_QWORD *)v106 = v108;
  v106[8] = v109;
  sub_10003D1A0(v110, v111);
  if (v3 != a2)
  {
    v112 = a3[8];
    v113 = (uint64_t *)&v3[v112];
    v114 = (uint64_t *)&a2[v112];
    sub_100009578((uint64_t)&v3[v112], &qword_1000ADE30);
    v115 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v114, v115) == 1)
    {
      v116 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v116 - 8) + 16))(v113, v114, v116);
      v117 = 1;
    }
    else
    {
      v118 = *v114;
      *v113 = *v114;
      swift_retain(v118);
      v117 = 0;
    }
    swift_storeEnumTagMultiPayload(v113, v115, v117);
    v119 = a3[9];
    v120 = (uint64_t *)&v3[v119];
    v121 = (uint64_t *)&a2[v119];
    sub_100009578((uint64_t)&v3[v119], &qword_1000ADE30);
    v122 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v121, v122) == 1)
    {
      v123 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v123 - 8) + 16))(v120, v121, v123);
      v124 = 1;
    }
    else
    {
      v125 = *v121;
      *v120 = *v121;
      swift_retain(v125);
      v124 = 0;
    }
    swift_storeEnumTagMultiPayload(v120, v122, v124);
  }
  return v3;
}

_BYTE *sub_100038260(_BYTE *a1, _BYTE *a2, int *a3)
{
  int *v3;
  _BYTE *v4;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  int *v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v47;
  int *v48;
  _BYTE *v49;
  char *__dst;

  v3 = a3;
  v4 = a2;
  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  *(_OWORD *)v7 = *(_OWORD *)&a2[v6];
  *((_QWORD *)v7 + 2) = *(_QWORD *)&a2[v6 + 16];
  *(_OWORD *)(v7 + 24) = *(_OWORD *)&a2[v6 + 24];
  v7[40] = a2[v6 + 40];
  *((_OWORD *)v7 + 3) = *(_OWORD *)&a2[v6 + 48];
  v9 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v10 = v9[9];
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v14 = *((_QWORD *)v13 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v47 = v14;
    v48 = v3;
    *v11 = *v12;
    v16 = v13[6];
    v49 = v4;
    __dst = (char *)v11 + v16;
    v17 = (char *)v12 + v16;
    v18 = type metadata accessor for AttributedString(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_100006DA4(&qword_1000ACE10);
      memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
    }
    v21 = v13[7];
    v22 = (char *)v11 + v21;
    v23 = (char *)v12 + v21;
    v24 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    *(_QWORD *)((char *)v11 + v13[8]) = *(_QWORD *)((char *)v12 + v13[8]);
    *(_QWORD *)((char *)v11 + v13[9]) = *(_QWORD *)((char *)v12 + v13[9]);
    *((_BYTE *)v11 + v13[10]) = *((_BYTE *)v12 + v13[10]);
    *((_BYTE *)v11 + v13[11]) = *((_BYTE *)v12 + v13[11]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v47 + 56))(v11, 0, 1, v13);
    v3 = v48;
    v4 = v49;
  }
  *(_QWORD *)&v7[v9[10]] = *(_QWORD *)&v8[v9[10]];
  *(_OWORD *)&v7[v9[11]] = *(_OWORD *)&v8[v9[11]];
  *(_QWORD *)&v7[v9[12]] = *(_QWORD *)&v8[v9[12]];
  *(_OWORD *)&v7[v9[13]] = *(_OWORD *)&v8[v9[13]];
  *(_OWORD *)&v7[v9[14]] = *(_OWORD *)&v8[v9[14]];
  v7[v9[15]] = v8[v9[15]];
  *(_OWORD *)&v7[v9[16]] = *(_OWORD *)&v8[v9[16]];
  *(_QWORD *)&v7[v9[17]] = *(_QWORD *)&v8[v9[17]];
  v25 = v9[18];
  v26 = &v7[v25];
  v27 = &v8[v25];
  v28 = type metadata accessor for URL(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
  *(_QWORD *)&v7[v9[19]] = *(_QWORD *)&v8[v9[19]];
  v7[v9[20]] = v8[v9[20]];
  v29 = v3[6];
  v30 = &a1[v29];
  v31 = &v4[v29];
  v32 = sub_100006DA4(&qword_1000ADED8);
  if (swift_getEnumCaseMultiPayload(v31, v32) == 1)
  {
    v33 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v30, v31, v33);
    swift_storeEnumTagMultiPayload(v30, v32, 1);
  }
  else
  {
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  v34 = v3[7];
  v35 = v3[8];
  v36 = &a1[v34];
  v37 = &v4[v34];
  *(_QWORD *)v36 = *(_QWORD *)v37;
  v36[8] = v37[8];
  v38 = &a1[v35];
  v39 = &v4[v35];
  v40 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v39, v40) == 1)
  {
    v41 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v38, v39, v41);
    swift_storeEnumTagMultiPayload(v38, v40, 1);
  }
  else
  {
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  v42 = v3[9];
  v43 = &a1[v42];
  v44 = &v4[v42];
  if (swift_getEnumCaseMultiPayload(&v4[v42], v40) == 1)
  {
    v45 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
    swift_storeEnumTagMultiPayload(v43, v40, 1);
  }
  else
  {
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  return a1;
}

_BYTE *sub_100038674(_BYTE *a1, _BYTE *a2, int *a3)
{
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  int *v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD *, uint64_t, int *);
  int v19;
  int v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  int v34;
  size_t v35;
  void *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE *v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  _BYTE *v95;
  _BYTE *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE *v100;
  _BYTE *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v105;
  char *__dst;
  void *__dsta;
  _BYTE *v108;
  _BYTE *v109;

  v3 = a1;
  *a1 = *a2;
  v4 = a3[5];
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = *(_QWORD *)&a2[v4 + 8];
  v8 = *(_QWORD *)&a1[v4 + 8];
  *(_QWORD *)v5 = *(_QWORD *)&a2[v4];
  *((_QWORD *)v5 + 1) = v7;
  swift_bridgeObjectRelease(v8);
  *((_OWORD *)v5 + 1) = *((_OWORD *)v6 + 1);
  v9 = *((_QWORD *)v5 + 4);
  *((_QWORD *)v5 + 4) = *((_QWORD *)v6 + 4);
  swift_bridgeObjectRelease(v9);
  v5[40] = v6[40];
  v10 = *((_QWORD *)v6 + 7);
  v11 = *((_QWORD *)v5 + 7);
  *((_QWORD *)v5 + 6) = *((_QWORD *)v6 + 6);
  *((_QWORD *)v5 + 7) = v10;
  swift_bridgeObjectRelease(v11);
  v12 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v13 = v12[9];
  v14 = &v5[v13];
  v15 = &v6[v13];
  v16 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v17 = *((_QWORD *)v16 - 1);
  v18 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (v20)
    {
      sub_100007EB4((uint64_t)v14, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    v109 = v3;
    v27 = (void *)*v14;
    *v14 = *v15;

    v28 = (void *)v14[1];
    v14[1] = v15[1];

    v29 = v16[6];
    v30 = (char *)v14 + v29;
    v31 = (char *)v15 + v29;
    v32 = type metadata accessor for AttributedString(0);
    v105 = *(_QWORD *)(v32 - 8);
    v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v105 + 48);
    __dsta = v30;
    LODWORD(v30) = v33(v30, 1, v32);
    v34 = v33(v31, 1, v32);
    if ((_DWORD)v30)
    {
      if (!v34)
      {
        (*(void (**)(void *, char *, uint64_t))(v105 + 32))(__dsta, v31, v32);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v105 + 56))(__dsta, 0, 1, v32);
        goto LABEL_18;
      }
      v35 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v36 = __dsta;
    }
    else
    {
      if (!v34)
      {
        (*(void (**)(void *, char *, uint64_t))(v105 + 40))(__dsta, v31, v32);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v105 + 8))(__dsta, v32);
      v35 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v36 = __dsta;
    }
    memcpy(v36, v31, v35);
LABEL_18:
    v41 = v16[7];
    v42 = (char *)v14 + v41;
    v43 = (char *)v15 + v41;
    v44 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 40))(v42, v43, v44);
    v45 = v16[8];
    v46 = *(void **)((char *)v14 + v45);
    *(_QWORD *)((char *)v14 + v45) = *(_QWORD *)((char *)v15 + v45);

    *(_QWORD *)((char *)v14 + v16[9]) = *(_QWORD *)((char *)v15 + v16[9]);
    *((_BYTE *)v14 + v16[10]) = *((_BYTE *)v15 + v16[10]);
    *((_BYTE *)v14 + v16[11]) = *((_BYTE *)v15 + v16[11]);
    v3 = v109;
    goto LABEL_19;
  }
  if (v20)
  {
LABEL_7:
    v26 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v21 = v16[6];
  __dst = (char *)v14 + v21;
  v108 = v3;
  v22 = (char *)v15 + v21;
  v23 = type metadata accessor for AttributedString(0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = sub_100006DA4(&qword_1000ACE10);
    memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(__dst, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
  }
  v3 = v108;
  v37 = v16[7];
  v38 = (char *)v14 + v37;
  v39 = (char *)v15 + v37;
  v40 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
  *(_QWORD *)((char *)v14 + v16[8]) = *(_QWORD *)((char *)v15 + v16[8]);
  *(_QWORD *)((char *)v14 + v16[9]) = *(_QWORD *)((char *)v15 + v16[9]);
  *((_BYTE *)v14 + v16[10]) = *((_BYTE *)v15 + v16[10]);
  *((_BYTE *)v14 + v16[11]) = *((_BYTE *)v15 + v16[11]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
LABEL_19:
  v47 = v12[10];
  v48 = *(void **)&v5[v47];
  *(_QWORD *)&v5[v47] = *(_QWORD *)&v6[v47];

  v49 = v12[11];
  v50 = &v5[v49];
  v51 = (uint64_t *)&v6[v49];
  v53 = *v51;
  v52 = v51[1];
  v54 = v50[1];
  *v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease(v54);
  v55 = v12[12];
  v56 = *(void **)&v5[v55];
  *(_QWORD *)&v5[v55] = *(_QWORD *)&v6[v55];

  v57 = v12[13];
  v58 = &v5[v57];
  v59 = (uint64_t *)&v6[v57];
  v61 = *v59;
  v60 = v59[1];
  v62 = v58[1];
  *v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease(v62);
  v63 = v12[14];
  v64 = &v5[v63];
  v65 = (uint64_t *)&v6[v63];
  v67 = *v65;
  v66 = v65[1];
  v68 = v64[1];
  *v64 = v67;
  v64[1] = v66;
  swift_bridgeObjectRelease(v68);
  v5[v12[15]] = v6[v12[15]];
  v69 = v12[16];
  v70 = &v5[v69];
  v71 = (uint64_t *)&v6[v69];
  v73 = *v71;
  v72 = v71[1];
  v74 = v70[1];
  *v70 = v73;
  v70[1] = v72;
  swift_bridgeObjectRelease(v74);
  v75 = v12[17];
  v76 = *(_QWORD *)&v5[v75];
  *(_QWORD *)&v5[v75] = *(_QWORD *)&v6[v75];
  swift_bridgeObjectRelease(v76);
  v77 = v12[18];
  v78 = &v5[v77];
  v79 = &v6[v77];
  v80 = type metadata accessor for URL(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v80 - 8) + 40))(v78, v79, v80);
  v81 = v12[19];
  v82 = *(_QWORD *)&v5[v81];
  *(_QWORD *)&v5[v81] = *(_QWORD *)&v6[v81];
  swift_bridgeObjectRelease(v82);
  v5[v12[20]] = v6[v12[20]];
  if (v3 != a2)
  {
    v83 = a3[6];
    v84 = &v3[v83];
    v85 = &a2[v83];
    sub_100009578((uint64_t)&v3[v83], &qword_1000ADED8);
    v86 = sub_100006DA4(&qword_1000ADED8);
    if (swift_getEnumCaseMultiPayload(v85, v86) == 1)
    {
      v87 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v84, v85, v87);
      swift_storeEnumTagMultiPayload(v84, v86, 1);
    }
    else
    {
      memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    }
  }
  v88 = a3[7];
  v89 = &v3[v88];
  v90 = &a2[v88];
  v91 = *(_QWORD *)v90;
  LOBYTE(v90) = v90[8];
  v92 = *(_QWORD *)v89;
  v93 = v89[8];
  *(_QWORD *)v89 = v91;
  v89[8] = (_BYTE)v90;
  sub_10003D1A0(v92, v93);
  if (v3 != a2)
  {
    v94 = a3[8];
    v95 = &v3[v94];
    v96 = &a2[v94];
    sub_100009578((uint64_t)&v3[v94], &qword_1000ADE30);
    v97 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v96, v97) == 1)
    {
      v98 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v95, v96, v98);
      swift_storeEnumTagMultiPayload(v95, v97, 1);
    }
    else
    {
      memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
    }
    v99 = a3[9];
    v100 = &v3[v99];
    v101 = &a2[v99];
    sub_100009578((uint64_t)&v3[v99], &qword_1000ADE30);
    v102 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v101, v102) == 1)
    {
      v103 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v100, v101, v103);
      swift_storeEnumTagMultiPayload(v100, v102, 1);
    }
    else
    {
      memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    }
  }
  return v3;
}

uint64_t sub_100038D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100038D1C);
}

uint64_t sub_100038D1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t IsVibrantText;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v13;

  v6 = type metadata accessor for TTRNewWidgetViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    IsVibrantText = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, IsVibrantText);
  }
  v10 = sub_100006DA4(&qword_1000ADEE0);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    IsVibrantText = v10;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, IsVibrantText);
  }
  if ((_DWORD)a2 != 254)
  {
    v13 = sub_100006DA4(&qword_1000ADE38);
    v7 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    {
      IsVibrantText = v13;
      v9 = a3[8];
    }
    else
    {
      IsVibrantText = type metadata accessor for IsVibrantText(0);
      v7 = *(_QWORD *)(IsVibrantText - 8);
      v9 = a3[9];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, IsVibrantText);
  }
  v11 = *(unsigned __int8 *)(a1 + a3[7] + 8);
  if (v11 > 1)
    return (v11 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_100038E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100038E18);
}

uint64_t sub_100038E18(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t IsVibrantText;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v8 = type metadata accessor for TTRNewWidgetViewModel(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    IsVibrantText = v8;
    v11 = a4[5];
  }
  else
  {
    result = sub_100006DA4(&qword_1000ADEE0);
    v9 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      IsVibrantText = result;
      v11 = a4[6];
    }
    else
    {
      if (a3 == 254)
      {
        *(_BYTE *)(a1 + a4[7] + 8) = -(char)a2;
        return result;
      }
      v13 = sub_100006DA4(&qword_1000ADE38);
      v9 = *(_QWORD *)(v13 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        IsVibrantText = v13;
        v11 = a4[8];
      }
      else
      {
        IsVibrantText = type metadata accessor for IsVibrantText(0);
        v9 = *(_QWORD *)(IsVibrantText - 8);
        v11 = a4[9];
      }
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, IsVibrantText);
}

uint64_t type metadata accessor for TTRAnyListWidget.SystemWidgetView(uint64_t a1)
{
  return sub_100007E80(a1, (uint64_t *)&unk_1000ADF40, (uint64_t)&nominal type descriptor for TTRAnyListWidget.SystemWidgetView);
}

void sub_100038F1C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];
  uint64_t v9;
  uint64_t v10;

  v8[0] = &unk_10008A298;
  v2 = type metadata accessor for TTRNewWidgetViewModel(319);
  if (v3 <= 0x3F)
  {
    v8[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_10003AEE4(319, (unint64_t *)&unk_1000ADF50, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      v8[3] = &unk_10008A2B0;
      sub_10003AEE4(319, (unint64_t *)&unk_1000ADEA8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
      if (v7 <= 0x3F)
      {
        v9 = *(_QWORD *)(v6 - 8) + 64;
        v10 = v9;
        swift_initStructMetadata(a1, 256, 6, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_100038FF0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100092C58, 1);
}

uint64_t sub_100039000(unint64_t *a1, uint64_t *a2, void (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100007258(a2);
    a3();
    result = swift_getWitnessTable(a4, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100039064()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000ADFD0;
  if (!qword_1000ADFD0)
  {
    v1 = sub_100007258(&qword_1000ADFD8);
    sub_1000390E8();
    sub_100007218(&qword_1000AE000, type metadata accessor for TTRAnyListWidget.InteractiveLarge, (uint64_t)&unk_10008A6BC);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000ADFD0);
  }
  return result;
}

unint64_t sub_1000390E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000ADFE0;
  if (!qword_1000ADFE0)
  {
    v1 = sub_100007258(&qword_1000ADFE8);
    sub_100007218(&qword_1000ADFF0, type metadata accessor for TTRAnyListWidget.InteractiveSmall, (uint64_t)&unk_10008A75C);
    sub_100007218(&qword_1000ADFF8, type metadata accessor for TTRAnyListWidget.InteractiveMedium, (uint64_t)&unk_10008A70C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000ADFE0);
  }
  return result;
}

uint64_t type metadata accessor for TTRAnyListWidget.InteractiveSmall(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000AE210, (uint64_t)&nominal type descriptor for TTRAnyListWidget.InteractiveSmall);
}

uint64_t type metadata accessor for TTRAnyListWidget.InteractiveMedium(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000AE170, (uint64_t)&nominal type descriptor for TTRAnyListWidget.InteractiveMedium);
}

uint64_t type metadata accessor for TTRAnyListWidget.InteractiveLarge(uint64_t a1)
{
  return sub_100007E80(a1, (uint64_t *)&unk_1000AE0D8, (uint64_t)&nominal type descriptor for TTRAnyListWidget.InteractiveLarge);
}

unint64_t sub_1000391C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AE008;
  if (!qword_1000AE008)
  {
    v1 = sub_100007258(&qword_1000ADFC0);
    sub_1000095B4(&qword_1000AE010, &qword_1000AE018, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AE008);
  }
  return result;
}

_QWORD *sub_100039244@<X0>(_QWORD *a1@<X8>)
{
  return sub_100017810((uint64_t (*)(void))sub_100039408, (uint64_t)&_s13BadgeColorKeyON, a1);
}

uint64_t sub_100039258(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100014858(a1, a2, a3, a4, (uint64_t (*)(void))sub_100039408, (uint64_t)&_s13BadgeColorKeyON);
}

_QWORD *sub_10003927C@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_1000393C4();
  result = EnvironmentValues.subscript.getter(&v4, &_s16ListTextColorKeyON, &_s16ListTextColorKeyON, v2);
  *a1 = v4;
  return result;
}

_QWORD *sub_1000392CC@<X0>(_QWORD *a1@<X8>)
{
  return sub_100017810((uint64_t (*)(void))sub_100039380, (uint64_t)&_s15DividerColorKeyON, a1);
}

uint64_t sub_1000392E0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100014858(a1, a2, a3, a4, (uint64_t (*)(void))sub_100039380, (uint64_t)&_s15DividerColorKeyON);
}

_QWORD *sub_100039304@<X0>(_QWORD *a1@<X8>)
{
  return sub_100017810((uint64_t (*)(void))sub_10003933C, (uint64_t)&_s13CountColorKeyON, a1);
}

uint64_t sub_100039318(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100014858(a1, a2, a3, a4, (uint64_t (*)(void))sub_10003933C, (uint64_t)&_s13CountColorKeyON);
}

unint64_t sub_10003933C()
{
  unint64_t result;

  result = qword_1000AE020;
  if (!qword_1000AE020)
  {
    result = swift_getWitnessTable(&unk_10008A684, &_s13CountColorKeyON);
    atomic_store(result, (unint64_t *)&qword_1000AE020);
  }
  return result;
}

unint64_t sub_100039380()
{
  unint64_t result;

  result = qword_1000AE028;
  if (!qword_1000AE028)
  {
    result = swift_getWitnessTable(&unk_10008A64C, &_s15DividerColorKeyON);
    atomic_store(result, (unint64_t *)&qword_1000AE028);
  }
  return result;
}

unint64_t sub_1000393C4()
{
  unint64_t result;

  result = qword_1000AE038;
  if (!qword_1000AE038)
  {
    result = swift_getWitnessTable(&unk_10008A614, &_s16ListTextColorKeyON);
    atomic_store(result, (unint64_t *)&qword_1000AE038);
  }
  return result;
}

unint64_t sub_100039408()
{
  unint64_t result;

  result = qword_1000AE050;
  if (!qword_1000AE050)
  {
    result = swift_getWitnessTable(&unk_10008A5DC, &_s13BadgeColorKeyON);
    atomic_store(result, (unint64_t *)&qword_1000AE050);
  }
  return result;
}

uint64_t sub_10003944C()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_10003946C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000362E0(a1, a2, a3, a4, (void (*)(_QWORD))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

_QWORD *sub_100039490@<X0>(_QWORD *a1@<X8>)
{
  return sub_100017810((uint64_t (*)(void))sub_100039504, (uint64_t)&_s15ReminderFontKeyON, a1);
}

uint64_t sub_1000394A4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100014858(a1, a2, a3, a4, (uint64_t (*)(void))sub_100039504, (uint64_t)&_s15ReminderFontKeyON);
}

void sub_1000394D0(double *a1@<X8>)
{
  *a1 = EnvironmentValues.pixelLength.getter();
}

unint64_t sub_100039504()
{
  unint64_t result;

  result = qword_1000AE078;
  if (!qword_1000AE078)
  {
    result = swift_getWitnessTable(&unk_10008A5A4, &_s15ReminderFontKeyON);
    atomic_store(result, (unint64_t *)&qword_1000AE078);
  }
  return result;
}

ValueMetadata *_s15ReminderFontKeyOMa()
{
  return &_s15ReminderFontKeyON;
}

ValueMetadata *_s13BadgeColorKeyOMa()
{
  return &_s13BadgeColorKeyON;
}

ValueMetadata *_s16ListTextColorKeyOMa()
{
  return &_s16ListTextColorKeyON;
}

ValueMetadata *_s15DividerColorKeyOMa()
{
  return &_s15DividerColorKeyON;
}

ValueMetadata *_s13CountColorKeyOMa()
{
  return &_s13CountColorKeyON;
}

_QWORD *sub_100039598(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1000395AC(a1, a2, a3, &qword_1000AE070, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize);
}

_QWORD *sub_1000395AC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD))
{
  _QWORD *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  void **v13;
  int *v14;
  uint64_t v15;
  unsigned int (*v16)(void **, uint64_t, int *);
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void (*v33)(void **, _QWORD, uint64_t, int *);
  id v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  char *v74;
  void (*v75)(char *, uint64_t, uint64_t);
  uint64_t v76;
  unsigned int (*v77)(char *, uint64_t, uint64_t);
  char *v78;
  void **__dst;
  void *__dsta;

  v6 = (_QWORD *)a1;
  v7 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v7 & 0x20000) != 0)
  {
    v18 = *a2;
    *v6 = *a2;
    v6 = (_QWORD *)(v18 + ((v7 + 16) & ~(unint64_t)v7));
    swift_retain(v18);
  }
  else
  {
    v8 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v8;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    v9 = a2[4];
    *(_QWORD *)(a1 + 32) = v9;
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v10 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v10;
    v11 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
    v12 = v11[9];
    __dst = (void **)((char *)v6 + v12);
    v13 = (void **)((char *)a2 + v12);
    v14 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    v15 = *((_QWORD *)v14 - 1);
    v16 = *(unsigned int (**)(void **, uint64_t, int *))(v15 + 48);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    if (v16(v13, 1, v14))
    {
      v17 = sub_100006DA4(&qword_1000ACCD8);
      memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v20 = *v13;
      v19 = v13[1];
      *__dst = *v13;
      __dst[1] = v19;
      v21 = v14[6];
      v74 = (char *)__dst + v21;
      v22 = (char *)v13 + v21;
      v23 = type metadata accessor for AttributedString(0);
      v72 = *(_QWORD *)(v23 - 8);
      v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
      v24 = v20;
      v25 = v19;
      if (v77(v22, 1, v23))
      {
        v26 = sub_100006DA4(&qword_1000ACE10);
        memcpy(v74, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v74, v22, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v74, 0, 1, v23);
      }
      v27 = v14[7];
      v28 = (char *)__dst + v27;
      v29 = (char *)v13 + v27;
      v30 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
      v31 = v14[8];
      v32 = *(void **)((char *)v13 + v31);
      *(void **)((char *)__dst + v31) = v32;
      *(void **)((char *)__dst + v14[9]) = *(void **)((char *)v13 + v14[9]);
      *((_BYTE *)__dst + v14[10]) = *((_BYTE *)v13 + v14[10]);
      *((_BYTE *)__dst + v14[11]) = *((_BYTE *)v13 + v14[11]);
      v33 = *(void (**)(void **, _QWORD, uint64_t, int *))(v15 + 56);
      v34 = v32;
      v33(__dst, 0, 1, v14);
    }
    v35 = v11[10];
    __dsta = *(void **)((char *)a2 + v35);
    *(_QWORD *)((char *)v6 + v35) = __dsta;
    v36 = v11[11];
    v37 = (_QWORD *)((char *)v6 + v36);
    v38 = (uint64_t *)((char *)a2 + v36);
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
    v40 = v11[12];
    v41 = *(void **)((char *)a2 + v40);
    *(_QWORD *)((char *)v6 + v40) = v41;
    v42 = v11[13];
    v43 = (_QWORD *)((char *)v6 + v42);
    v44 = (uint64_t *)((char *)a2 + v42);
    v45 = v44[1];
    *v43 = *v44;
    v43[1] = v45;
    v46 = v11[14];
    v47 = (_QWORD *)((char *)v6 + v46);
    v48 = (uint64_t *)((char *)a2 + v46);
    v49 = v48[1];
    *v47 = *v48;
    v47[1] = v49;
    *((_BYTE *)v6 + v11[15]) = *((_BYTE *)a2 + v11[15]);
    v50 = v11[16];
    v51 = (_QWORD *)((char *)v6 + v50);
    v52 = (uint64_t *)((char *)a2 + v50);
    v53 = v52[1];
    *v51 = *v52;
    v51[1] = v53;
    v54 = v11[17];
    v55 = *(uint64_t *)((char *)a2 + v54);
    *(_QWORD *)((char *)v6 + v54) = v55;
    v56 = v11[18];
    v76 = (uint64_t)a2 + v56;
    v78 = (char *)v6 + v56;
    v57 = type metadata accessor for URL(0);
    v75 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
    v58 = __dsta;
    swift_bridgeObjectRetain(v39);
    v59 = v41;
    swift_bridgeObjectRetain(v45);
    swift_bridgeObjectRetain(v49);
    swift_bridgeObjectRetain(v53);
    swift_bridgeObjectRetain(v55);
    v75(v78, v76, v57);
    v60 = v11[19];
    v61 = *(uint64_t *)((char *)a2 + v60);
    *(_QWORD *)((char *)v6 + v60) = v61;
    *((_BYTE *)v6 + v11[20]) = *((_BYTE *)a2 + v11[20]);
    v62 = *(int *)(a3 + 20);
    v63 = (_QWORD *)((char *)v6 + v62);
    v64 = (uint64_t *)((char *)a2 + v62);
    swift_bridgeObjectRetain(v61);
    v65 = sub_100006DA4(a4);
    if (swift_getEnumCaseMultiPayload(v64, v65) == 1)
    {
      v66 = a5(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v63, v64, v66);
      v67 = v63;
      v68 = v65;
      v69 = 1;
    }
    else
    {
      v70 = *v64;
      *v63 = *v64;
      swift_retain(v70);
      v67 = v63;
      v68 = v65;
      v69 = 0;
    }
    swift_storeEnumTagMultiPayload(v67, v68, v69);
  }
  return v6;
}

uint64_t sub_100039994(_QWORD *a1, uint64_t a2)
{
  return sub_1000399A8(a1, a2, &qword_1000AE070, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize);
}

uint64_t sub_1000399A8(_QWORD *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  int *v8;
  id *v9;
  int *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[4]);
  swift_bridgeObjectRelease(a1[7]);
  v8 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v9 = (id *)((char *)a1 + v8[9]);
  v10 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v9, 1, v10))
  {

    v11 = (char *)v9 + v10[6];
    v12 = type metadata accessor for AttributedString(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
    v14 = (char *)v9 + v10[7];
    v15 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);

  }
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v8[11] + 8));

  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v8[13] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v8[14] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v8[16] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v8[17]));
  v16 = (char *)a1 + v8[18];
  v17 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v8[19]));
  v18 = (_QWORD *)((char *)a1 + *(int *)(a2 + 20));
  v19 = sub_100006DA4(a3);
  if (swift_getEnumCaseMultiPayload(v18, v19) != 1)
    return swift_release(*v18);
  v20 = a4(0);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v18, v20);
}

uint64_t sub_100039BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100039BC8(a1, a2, a3, &qword_1000AE070, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize);
}

uint64_t sub_100039BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void **v12;
  int *v13;
  uint64_t v14;
  unsigned int (*v15)(void **, uint64_t, int *);
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void (*v31)(void **, _QWORD, uint64_t, int *);
  id v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  unsigned int (*v70)(char *, uint64_t, uint64_t);
  void (*v71)(uint64_t, void *, uint64_t);
  char *v72;
  void *v73;
  uint64_t v74;
  void **__dst;
  void *__dsta;

  v7 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v7;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v11 = v10[9];
  __dst = (void **)(a1 + v11);
  v12 = (void **)(a2 + v11);
  v13 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v14 = *((_QWORD *)v13 - 1);
  v15 = *(unsigned int (**)(void **, uint64_t, int *))(v14 + 48);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  if (v15(v12, 1, v13))
  {
    v16 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v18 = *v12;
    v17 = v12[1];
    *__dst = *v12;
    __dst[1] = v17;
    v19 = v13[6];
    v72 = (char *)__dst + v19;
    v20 = (char *)v12 + v19;
    v21 = type metadata accessor for AttributedString(0);
    v68 = *(_QWORD *)(v21 - 8);
    v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
    v22 = v18;
    v23 = v17;
    if (v70(v20, 1, v21))
    {
      v24 = sub_100006DA4(&qword_1000ACE10);
      memcpy(v72, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v72, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v72, 0, 1, v21);
    }
    v25 = v13[7];
    v26 = (char *)__dst + v25;
    v27 = (char *)v12 + v25;
    v28 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
    v29 = v13[8];
    v30 = *(void **)((char *)v12 + v29);
    *(void **)((char *)__dst + v29) = v30;
    *(void **)((char *)__dst + v13[9]) = *(void **)((char *)v12 + v13[9]);
    *((_BYTE *)__dst + v13[10]) = *((_BYTE *)v12 + v13[10]);
    *((_BYTE *)__dst + v13[11]) = *((_BYTE *)v12 + v13[11]);
    v31 = *(void (**)(void **, _QWORD, uint64_t, int *))(v14 + 56);
    v32 = v30;
    v31(__dst, 0, 1, v13);
  }
  v33 = v10[10];
  __dsta = *(void **)(a2 + v33);
  *(_QWORD *)(a1 + v33) = __dsta;
  v34 = v10[11];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  v38 = v10[12];
  v39 = *(void **)(a2 + v38);
  *(_QWORD *)(a1 + v38) = v39;
  v40 = v10[13];
  v41 = (_QWORD *)(a1 + v40);
  v42 = (_QWORD *)(a2 + v40);
  v43 = v42[1];
  *v41 = *v42;
  v41[1] = v43;
  v44 = v10[14];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)(a2 + v44);
  v47 = v46[1];
  *v45 = *v46;
  v45[1] = v47;
  *(_BYTE *)(a1 + v10[15]) = *(_BYTE *)(a2 + v10[15]);
  v48 = v10[16];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (_QWORD *)(a2 + v48);
  v51 = v50[1];
  *v49 = *v50;
  v49[1] = v51;
  v52 = v10[17];
  v53 = *(_QWORD *)(a2 + v52);
  *(_QWORD *)(a1 + v52) = v53;
  v54 = v10[18];
  v73 = (void *)(a2 + v54);
  v74 = a1 + v54;
  v55 = type metadata accessor for URL(0);
  v71 = *(void (**)(uint64_t, void *, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
  v56 = __dsta;
  swift_bridgeObjectRetain(v37);
  v57 = v39;
  swift_bridgeObjectRetain(v43);
  swift_bridgeObjectRetain(v47);
  swift_bridgeObjectRetain(v51);
  swift_bridgeObjectRetain(v53);
  v71(v74, v73, v55);
  v58 = v10[19];
  v59 = *(_QWORD *)(a2 + v58);
  *(_QWORD *)(a1 + v58) = v59;
  *(_BYTE *)(a1 + v10[20]) = *(_BYTE *)(a2 + v10[20]);
  v60 = *(int *)(a3 + 20);
  v61 = (uint64_t *)(a1 + v60);
  v62 = (uint64_t *)(a2 + v60);
  swift_bridgeObjectRetain(v59);
  v63 = sub_100006DA4(a4);
  if (swift_getEnumCaseMultiPayload(v62, v63) == 1)
  {
    v64 = a5(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v61, v62, v64);
    v65 = 1;
  }
  else
  {
    v66 = *v62;
    *v61 = *v62;
    swift_retain(v66);
    v65 = 0;
  }
  swift_storeEnumTagMultiPayload(v61, v63, v65);
  return a1;
}

uint64_t sub_100039F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100039F90(a1, a2, a3, &qword_1000AE070, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize);
}

uint64_t sub_100039F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  int *v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD *, uint64_t, int *);
  int v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  int v41;
  size_t v42;
  void *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void (*v50)(_QWORD *, _QWORD, uint64_t, int *);
  id v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  id v59;
  uint64_t v60;
  void *v61;
  void *v62;
  id v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  void *v71;
  id v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  unsigned int (*__src)(char *, uint64_t, uint64_t);
  char *__dst;
  void *__dsta;
  uint64_t (*v112)(_QWORD);
  uint64_t (*v113)(_QWORD);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v12 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  v14 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v15 = v14[9];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v19 = *((_QWORD *)v18 - 1);
  v20 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v19 + 48);
  LODWORD(v13) = v20(v16, 1, v18);
  v21 = v20(v17, 1, v18);
  if (!(_DWORD)v13)
  {
    if (v21)
    {
      sub_100007EB4((uint64_t)v16, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    v113 = a5;
    v30 = (void *)*v17;
    v31 = (void *)*v16;
    *v16 = *v17;
    v32 = v30;

    v33 = (void *)v16[1];
    v34 = (void *)v17[1];
    v16[1] = v34;
    v35 = v34;

    v36 = v18[6];
    v37 = (char *)v16 + v36;
    v38 = (char *)v17 + v36;
    v39 = type metadata accessor for AttributedString(0);
    v108 = *(_QWORD *)(v39 - 8);
    v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v108 + 48);
    __dsta = v37;
    LODWORD(v37) = v40(v37, 1, v39);
    v41 = v40(v38, 1, v39);
    if ((_DWORD)v37)
    {
      if (!v41)
      {
        (*(void (**)(void *, char *, uint64_t))(v108 + 16))(__dsta, v38, v39);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v108 + 56))(__dsta, 0, 1, v39);
        goto LABEL_18;
      }
      v42 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v43 = __dsta;
    }
    else
    {
      if (!v41)
      {
        (*(void (**)(void *, char *, uint64_t))(v108 + 24))(__dsta, v38, v39);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v108 + 8))(__dsta, v39);
      v42 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v43 = __dsta;
    }
    memcpy(v43, v38, v42);
LABEL_18:
    a5 = v113;
    v52 = v18[7];
    v53 = (char *)v16 + v52;
    v54 = (char *)v17 + v52;
    v55 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 24))(v53, v54, v55);
    v56 = v18[8];
    v57 = *(void **)((char *)v16 + v56);
    v58 = *(void **)((char *)v17 + v56);
    *(_QWORD *)((char *)v16 + v56) = v58;
    v59 = v58;

    *(_QWORD *)((char *)v16 + v18[9]) = *(_QWORD *)((char *)v17 + v18[9]);
    *((_BYTE *)v16 + v18[10]) = *((_BYTE *)v17 + v18[10]);
    *((_BYTE *)v16 + v18[11]) = *((_BYTE *)v17 + v18[11]);
    goto LABEL_19;
  }
  if (v21)
  {
LABEL_7:
    v29 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  v22 = (void *)*v17;
  *v16 = *v17;
  v23 = (void *)v17[1];
  v16[1] = v23;
  v24 = v18[6];
  __dst = (char *)v16 + v24;
  v112 = a5;
  v107 = (char *)v17 + v24;
  v25 = type metadata accessor for AttributedString(0);
  v106 = *(_QWORD *)(v25 - 8);
  __src = *(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48);
  v26 = v22;
  v27 = v23;
  if (__src(v107, 1, v25))
  {
    v28 = sub_100006DA4(&qword_1000ACE10);
    memcpy(__dst, v107, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v106 + 16))(__dst, v107, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v106 + 56))(__dst, 0, 1, v25);
  }
  v44 = v18[7];
  v45 = (char *)v16 + v44;
  v46 = (char *)v17 + v44;
  v47 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
  v48 = v18[8];
  v49 = *(void **)((char *)v17 + v48);
  *(_QWORD *)((char *)v16 + v48) = v49;
  *(_QWORD *)((char *)v16 + v18[9]) = *(_QWORD *)((char *)v17 + v18[9]);
  *((_BYTE *)v16 + v18[10]) = *((_BYTE *)v17 + v18[10]);
  *((_BYTE *)v16 + v18[11]) = *((_BYTE *)v17 + v18[11]);
  v50 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v19 + 56);
  v51 = v49;
  v50(v16, 0, 1, v18);
  a5 = v112;
LABEL_19:
  v60 = v14[10];
  v61 = *(void **)(a2 + v60);
  v62 = *(void **)(a1 + v60);
  *(_QWORD *)(a1 + v60) = v61;
  v63 = v61;

  v64 = v14[11];
  v65 = (_QWORD *)(a1 + v64);
  v66 = (_QWORD *)(a2 + v64);
  *v65 = *v66;
  v67 = v66[1];
  v68 = v65[1];
  v65[1] = v67;
  swift_bridgeObjectRetain(v67);
  swift_bridgeObjectRelease(v68);
  v69 = v14[12];
  v70 = *(void **)(a1 + v69);
  v71 = *(void **)(a2 + v69);
  *(_QWORD *)(a1 + v69) = v71;
  v72 = v71;

  v73 = v14[13];
  v74 = (_QWORD *)(a1 + v73);
  v75 = (_QWORD *)(a2 + v73);
  *v74 = *v75;
  v76 = v75[1];
  v77 = v74[1];
  v74[1] = v76;
  swift_bridgeObjectRetain(v76);
  swift_bridgeObjectRelease(v77);
  v78 = v14[14];
  v79 = (_QWORD *)(a1 + v78);
  v80 = (_QWORD *)(a2 + v78);
  *v79 = *v80;
  v81 = v80[1];
  v82 = v79[1];
  v79[1] = v81;
  swift_bridgeObjectRetain(v81);
  swift_bridgeObjectRelease(v82);
  *(_BYTE *)(a1 + v14[15]) = *(_BYTE *)(a2 + v14[15]);
  v83 = v14[16];
  v84 = (_QWORD *)(a1 + v83);
  v85 = (_QWORD *)(a2 + v83);
  *v84 = *v85;
  v86 = v85[1];
  v87 = v84[1];
  v84[1] = v86;
  swift_bridgeObjectRetain(v86);
  swift_bridgeObjectRelease(v87);
  v88 = v14[17];
  v89 = *(_QWORD *)(a1 + v88);
  v90 = *(_QWORD *)(a2 + v88);
  *(_QWORD *)(a1 + v88) = v90;
  swift_bridgeObjectRetain(v90);
  swift_bridgeObjectRelease(v89);
  v91 = v14[18];
  v92 = a1 + v91;
  v93 = a2 + v91;
  v94 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 24))(v92, v93, v94);
  v95 = v14[19];
  v96 = *(_QWORD *)(a2 + v95);
  v97 = *(_QWORD *)(a1 + v95);
  *(_QWORD *)(a1 + v95) = v96;
  swift_bridgeObjectRetain(v96);
  swift_bridgeObjectRelease(v97);
  *(_BYTE *)(a1 + v14[20]) = *(_BYTE *)(a2 + v14[20]);
  if (a1 != a2)
  {
    v98 = *(int *)(a3 + 20);
    v99 = (uint64_t *)(a1 + v98);
    v100 = (uint64_t *)(a2 + v98);
    sub_100009578(a1 + v98, a4);
    v101 = sub_100006DA4(a4);
    if (swift_getEnumCaseMultiPayload(v100, v101) == 1)
    {
      v102 = a5(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v99, v100, v102);
      v103 = 1;
    }
    else
    {
      v104 = *v100;
      *v99 = *v100;
      swift_retain(v104);
      v103 = 0;
    }
    swift_storeEnumTagMultiPayload(v99, v101, v103);
  }
  return a1;
}

uint64_t sub_10003A594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10003A5A8(a1, a2, a3, &qword_1000AE070, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize);
}

uint64_t sub_10003A5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD))
{
  int *v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v34)(_QWORD);
  char *__dst;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v8 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v9 = v8[9];
  v10 = (_OWORD *)(a1 + v9);
  v11 = (_OWORD *)(a2 + v9);
  v12 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v13 = *((_QWORD *)v12 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
  {
    v14 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    *v10 = *v11;
    v15 = v12[6];
    v34 = a5;
    __dst = (char *)v10 + v15;
    v16 = (char *)v11 + v15;
    v17 = type metadata accessor for AttributedString(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_100006DA4(&qword_1000ACE10);
      memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(__dst, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
    }
    v20 = v12[7];
    v21 = (char *)v10 + v20;
    v22 = (char *)v11 + v20;
    v23 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    *(_QWORD *)((char *)v10 + v12[8]) = *(_QWORD *)((char *)v11 + v12[8]);
    *(_QWORD *)((char *)v10 + v12[9]) = *(_QWORD *)((char *)v11 + v12[9]);
    *((_BYTE *)v10 + v12[10]) = *((_BYTE *)v11 + v12[10]);
    *((_BYTE *)v10 + v12[11]) = *((_BYTE *)v11 + v12[11]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    a5 = v34;
  }
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  *(_OWORD *)(a1 + v8[11]) = *(_OWORD *)(a2 + v8[11]);
  *(_QWORD *)(a1 + v8[12]) = *(_QWORD *)(a2 + v8[12]);
  *(_OWORD *)(a1 + v8[13]) = *(_OWORD *)(a2 + v8[13]);
  *(_OWORD *)(a1 + v8[14]) = *(_OWORD *)(a2 + v8[14]);
  *(_BYTE *)(a1 + v8[15]) = *(_BYTE *)(a2 + v8[15]);
  *(_OWORD *)(a1 + v8[16]) = *(_OWORD *)(a2 + v8[16]);
  *(_QWORD *)(a1 + v8[17]) = *(_QWORD *)(a2 + v8[17]);
  v24 = v8[18];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
  *(_QWORD *)(a1 + v8[19]) = *(_QWORD *)(a2 + v8[19]);
  *(_BYTE *)(a1 + v8[20]) = *(_BYTE *)(a2 + v8[20]);
  v28 = *(int *)(a3 + 20);
  v29 = (void *)(a1 + v28);
  v30 = (const void *)(a2 + v28);
  v31 = sub_100006DA4(a4);
  if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
  {
    v32 = a5(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v29, v30, v32);
    swift_storeEnumTagMultiPayload(v29, v31, 1);
  }
  else
  {
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10003A8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10003A8BC(a1, a2, a3, &qword_1000AE070, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize);
}

uint64_t sub_10003A8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  int *v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD *, uint64_t, int *);
  int v20;
  int v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  size_t v36;
  void *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  const void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v90;
  char *__dst;
  void *__dsta;
  uint64_t (*v93)(_QWORD);
  uint64_t (*v94)(_QWORD);

  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v8;
  swift_bridgeObjectRelease(v9);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v10);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v11;
  swift_bridgeObjectRelease(v12);
  v13 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v14 = v13[9];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v18 = *((_QWORD *)v17 - 1);
  v19 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      *(_OWORD *)v15 = *(_OWORD *)v16;
      v22 = v17[6];
      __dst = (char *)v15 + v22;
      v93 = a5;
      v23 = (char *)v16 + v22;
      v24 = type metadata accessor for AttributedString(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        v26 = sub_100006DA4(&qword_1000ACE10);
        memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(__dst, v23, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
      }
      v38 = v17[7];
      v39 = (char *)v15 + v38;
      v40 = (char *)v16 + v38;
      v41 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
      *(_QWORD *)((char *)v15 + v17[8]) = *(_QWORD *)((char *)v16 + v17[8]);
      *(_QWORD *)((char *)v15 + v17[9]) = *(_QWORD *)((char *)v16 + v17[9]);
      *((_BYTE *)v15 + v17[10]) = *((_BYTE *)v16 + v17[10]);
      *((_BYTE *)v15 + v17[11]) = *((_BYTE *)v16 + v17[11]);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
      a5 = v93;
      goto LABEL_19;
    }
    goto LABEL_7;
  }
  if (v21)
  {
    sub_100007EB4((uint64_t)v15, type metadata accessor for TTRNewWidgetViewModel.Reminder);
LABEL_7:
    v27 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  v94 = a5;
  v28 = (void *)*v15;
  *v15 = *v16;

  v29 = (void *)v15[1];
  v15[1] = v16[1];

  v30 = v17[6];
  v31 = (char *)v15 + v30;
  v32 = (char *)v16 + v30;
  v33 = type metadata accessor for AttributedString(0);
  v90 = *(_QWORD *)(v33 - 8);
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v90 + 48);
  __dsta = v31;
  LODWORD(v31) = v34(v31, 1, v33);
  v35 = v34(v32, 1, v33);
  if ((_DWORD)v31)
  {
    if (!v35)
    {
      (*(void (**)(void *, char *, uint64_t))(v90 + 32))(__dsta, v32, v33);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v90 + 56))(__dsta, 0, 1, v33);
      goto LABEL_18;
    }
    v36 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
    v37 = __dsta;
  }
  else
  {
    if (!v35)
    {
      (*(void (**)(void *, char *, uint64_t))(v90 + 40))(__dsta, v32, v33);
      goto LABEL_18;
    }
    (*(void (**)(void *, uint64_t))(v90 + 8))(__dsta, v33);
    v36 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
    v37 = __dsta;
  }
  memcpy(v37, v32, v36);
LABEL_18:
  a5 = v94;
  v42 = v17[7];
  v43 = (char *)v15 + v42;
  v44 = (char *)v16 + v42;
  v45 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 40))(v43, v44, v45);
  v46 = v17[8];
  v47 = *(void **)((char *)v15 + v46);
  *(_QWORD *)((char *)v15 + v46) = *(_QWORD *)((char *)v16 + v46);

  *(_QWORD *)((char *)v15 + v17[9]) = *(_QWORD *)((char *)v16 + v17[9]);
  *((_BYTE *)v15 + v17[10]) = *((_BYTE *)v16 + v17[10]);
  *((_BYTE *)v15 + v17[11]) = *((_BYTE *)v16 + v17[11]);
LABEL_19:
  v48 = v13[10];
  v49 = *(void **)(a1 + v48);
  *(_QWORD *)(a1 + v48) = *(_QWORD *)(a2 + v48);

  v50 = v13[11];
  v51 = (_QWORD *)(a1 + v50);
  v52 = (uint64_t *)(a2 + v50);
  v54 = *v52;
  v53 = v52[1];
  v55 = v51[1];
  *v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease(v55);
  v56 = v13[12];
  v57 = *(void **)(a1 + v56);
  *(_QWORD *)(a1 + v56) = *(_QWORD *)(a2 + v56);

  v58 = v13[13];
  v59 = (_QWORD *)(a1 + v58);
  v60 = (uint64_t *)(a2 + v58);
  v62 = *v60;
  v61 = v60[1];
  v63 = v59[1];
  *v59 = v62;
  v59[1] = v61;
  swift_bridgeObjectRelease(v63);
  v64 = v13[14];
  v65 = (_QWORD *)(a1 + v64);
  v66 = (uint64_t *)(a2 + v64);
  v68 = *v66;
  v67 = v66[1];
  v69 = v65[1];
  *v65 = v68;
  v65[1] = v67;
  swift_bridgeObjectRelease(v69);
  *(_BYTE *)(a1 + v13[15]) = *(_BYTE *)(a2 + v13[15]);
  v70 = v13[16];
  v71 = (_QWORD *)(a1 + v70);
  v72 = (uint64_t *)(a2 + v70);
  v74 = *v72;
  v73 = v72[1];
  v75 = v71[1];
  *v71 = v74;
  v71[1] = v73;
  swift_bridgeObjectRelease(v75);
  v76 = v13[17];
  v77 = *(_QWORD *)(a1 + v76);
  *(_QWORD *)(a1 + v76) = *(_QWORD *)(a2 + v76);
  swift_bridgeObjectRelease(v77);
  v78 = v13[18];
  v79 = a1 + v78;
  v80 = a2 + v78;
  v81 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 40))(v79, v80, v81);
  v82 = v13[19];
  v83 = *(_QWORD *)(a1 + v82);
  *(_QWORD *)(a1 + v82) = *(_QWORD *)(a2 + v82);
  swift_bridgeObjectRelease(v83);
  *(_BYTE *)(a1 + v13[20]) = *(_BYTE *)(a2 + v13[20]);
  if (a1 != a2)
  {
    v84 = *(int *)(a3 + 20);
    v85 = (void *)(a1 + v84);
    v86 = (const void *)(a2 + v84);
    sub_100009578(a1 + v84, a4);
    v87 = sub_100006DA4(a4);
    if (swift_getEnumCaseMultiPayload(v86, v87) == 1)
    {
      v88 = a5(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v85, v86, v88);
      swift_storeEnumTagMultiPayload(v85, v87, 1);
    }
    else
    {
      memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10003AE04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003AE10);
}

uint64_t sub_10003AE10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10003C7A8(a1, a2, a3, &qword_1000AE068);
}

uint64_t sub_10003AE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003AE28);
}

uint64_t sub_10003AE28(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10003C838(a1, a2, a3, a4, &qword_1000AE068);
}

void sub_10003AE34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10003AE48(a1, a2, a3, (unint64_t *)&unk_1000AE0E8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
}

void sub_10003AE48(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[2];

  v8 = type metadata accessor for TTRNewWidgetViewModel(319);
  if (v9 <= 0x3F)
  {
    v12[0] = *(_QWORD *)(v8 - 8) + 64;
    sub_10003AEE4(319, a4, a5);
    if (v11 <= 0x3F)
    {
      v12[1] = *(_QWORD *)(v10 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v12, a1 + 16);
    }
  }
}

void sub_10003AEE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Environment.Content(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

_QWORD *sub_10003AF30(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  void **v11;
  int *v12;
  uint64_t v13;
  unsigned int (*v14)(void **, uint64_t, int *);
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void (*v31)(void **, _QWORD, uint64_t, int *);
  id v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  char *v70;
  void (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  char *v73;
  char *v74;
  void **__dst;
  void *__dsta;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    v7 = a2[4];
    *(_QWORD *)(a1 + 32) = v7;
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v8 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v8;
    v9 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
    v10 = v9[9];
    __dst = (void **)((char *)v4 + v10);
    v11 = (void **)((char *)a2 + v10);
    v12 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    v13 = *((_QWORD *)v12 - 1);
    v14 = *(unsigned int (**)(void **, uint64_t, int *))(v13 + 48);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    if (v14(v11, 1, v12))
    {
      v15 = sub_100006DA4(&qword_1000ACCD8);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v17 = *v11;
      v18 = v11[1];
      *__dst = *v11;
      __dst[1] = v18;
      v19 = v12[6];
      v70 = (char *)__dst + v19;
      v73 = (char *)v11 + v19;
      v20 = type metadata accessor for AttributedString(0);
      v69 = *(_QWORD *)(v20 - 8);
      v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
      v22 = v17;
      v23 = v18;
      if (v21(v73, 1, v20))
      {
        v24 = sub_100006DA4(&qword_1000ACE10);
        memcpy(v70, v73, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v70, v73, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v70, 0, 1, v20);
      }
      v25 = v12[7];
      v26 = (char *)__dst + v25;
      v27 = (char *)v11 + v25;
      v28 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      v29 = v12[8];
      v30 = *(void **)((char *)v11 + v29);
      *(void **)((char *)__dst + v29) = v30;
      *(void **)((char *)__dst + v12[9]) = *(void **)((char *)v11 + v12[9]);
      *((_BYTE *)__dst + v12[10]) = *((_BYTE *)v11 + v12[10]);
      *((_BYTE *)__dst + v12[11]) = *((_BYTE *)v11 + v12[11]);
      v31 = *(void (**)(void **, _QWORD, uint64_t, int *))(v13 + 56);
      v32 = v30;
      v31(__dst, 0, 1, v12);
    }
    v33 = v9[10];
    __dsta = *(void **)((char *)a2 + v33);
    *(_QWORD *)((char *)v4 + v33) = __dsta;
    v34 = v9[11];
    v35 = (_QWORD *)((char *)v4 + v34);
    v36 = (uint64_t *)((char *)a2 + v34);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = v9[12];
    v39 = *(void **)((char *)a2 + v38);
    *(_QWORD *)((char *)v4 + v38) = v39;
    v40 = v9[13];
    v41 = (_QWORD *)((char *)v4 + v40);
    v42 = (uint64_t *)((char *)a2 + v40);
    v43 = v42[1];
    *v41 = *v42;
    v41[1] = v43;
    v44 = v9[14];
    v45 = (_QWORD *)((char *)v4 + v44);
    v46 = (uint64_t *)((char *)a2 + v44);
    v47 = v46[1];
    *v45 = *v46;
    v45[1] = v47;
    *((_BYTE *)v4 + v9[15]) = *((_BYTE *)a2 + v9[15]);
    v48 = v9[16];
    v49 = (_QWORD *)((char *)v4 + v48);
    v50 = (uint64_t *)((char *)a2 + v48);
    v51 = v50[1];
    *v49 = *v50;
    v49[1] = v51;
    v52 = v9[17];
    v53 = *(uint64_t *)((char *)a2 + v52);
    *(_QWORD *)((char *)v4 + v52) = v53;
    v54 = v9[18];
    v72 = (uint64_t)a2 + v54;
    v74 = (char *)v4 + v54;
    v55 = type metadata accessor for URL(0);
    v71 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
    v56 = __dsta;
    swift_bridgeObjectRetain(v37);
    v57 = v39;
    swift_bridgeObjectRetain(v43);
    swift_bridgeObjectRetain(v47);
    swift_bridgeObjectRetain(v51);
    swift_bridgeObjectRetain(v53);
    v71(v74, v72, v55);
    v58 = v9[19];
    v59 = *(uint64_t *)((char *)a2 + v58);
    *(_QWORD *)((char *)v4 + v58) = v59;
    *((_BYTE *)v4 + v9[20]) = *((_BYTE *)a2 + v9[20]);
    v60 = a3[5];
    v61 = (_QWORD *)((char *)v4 + v60);
    v62 = (uint64_t *)((char *)a2 + v60);
    swift_bridgeObjectRetain(v59);
    v63 = sub_100006DA4(&qword_1000AE070);
    if (swift_getEnumCaseMultiPayload(v62, v63) == 1)
    {
      v64 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v61, v62, v64);
      v65 = 1;
    }
    else
    {
      v66 = *v62;
      *v61 = *v62;
      swift_retain(v66);
      v65 = 0;
    }
    swift_storeEnumTagMultiPayload(v61, v63, v65);
    v67 = a3[7];
    *(_QWORD *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(_QWORD *)((char *)v4 + v67) = *(uint64_t *)((char *)a2 + v67);
    *(_QWORD *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  }
  return v4;
}

uint64_t sub_10003B324(_QWORD *a1, uint64_t a2)
{
  int *v4;
  id *v5;
  int *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[4]);
  swift_bridgeObjectRelease(a1[7]);
  v4 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v5 = (id *)((char *)a1 + v4[9]);
  v6 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v5, 1, v6))
  {

    v7 = (char *)v5 + v6[6];
    v8 = type metadata accessor for AttributedString(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    v10 = (char *)v5 + v6[7];
    v11 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);

  }
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[11] + 8));

  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[13] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[14] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[16] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[17]));
  v12 = (char *)a1 + v4[18];
  v13 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[19]));
  v14 = (_QWORD *)((char *)a1 + *(int *)(a2 + 20));
  v15 = sub_100006DA4(&qword_1000AE070);
  if (swift_getEnumCaseMultiPayload(v14, v15) != 1)
    return swift_release(*v14);
  v16 = type metadata accessor for DynamicTypeSize(0);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
}

uint64_t sub_10003B520(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void **v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(void **, uint64_t, int *);
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void (*v29)(void **, _QWORD, uint64_t, int *);
  id v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  char *v68;
  void (*v69)(uint64_t, void *, uint64_t);
  char *v70;
  void *v71;
  uint64_t v72;
  void **__dst;
  void *__dsta;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v9 = v8[9];
  __dst = (void **)(a1 + v9);
  v10 = (void **)(a2 + v9);
  v11 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(unsigned int (**)(void **, uint64_t, int *))(v12 + 48);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  if (v13(v10, 1, v11))
  {
    v14 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = *v10;
    v16 = v10[1];
    *__dst = *v10;
    __dst[1] = v16;
    v17 = v11[6];
    v68 = (char *)v10 + v17;
    v70 = (char *)__dst + v17;
    v18 = type metadata accessor for AttributedString(0);
    v67 = *(_QWORD *)(v18 - 8);
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
    v20 = v15;
    v21 = v16;
    if (v19(v68, 1, v18))
    {
      v22 = sub_100006DA4(&qword_1000ACE10);
      memcpy(v70, v68, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v70, v68, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v70, 0, 1, v18);
    }
    v23 = v11[7];
    v24 = (char *)__dst + v23;
    v25 = (char *)v10 + v23;
    v26 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
    v27 = v11[8];
    v28 = *(void **)((char *)v10 + v27);
    *(void **)((char *)__dst + v27) = v28;
    *(void **)((char *)__dst + v11[9]) = *(void **)((char *)v10 + v11[9]);
    *((_BYTE *)__dst + v11[10]) = *((_BYTE *)v10 + v11[10]);
    *((_BYTE *)__dst + v11[11]) = *((_BYTE *)v10 + v11[11]);
    v29 = *(void (**)(void **, _QWORD, uint64_t, int *))(v12 + 56);
    v30 = v28;
    v29(__dst, 0, 1, v11);
  }
  v31 = v8[10];
  __dsta = *(void **)(a2 + v31);
  *(_QWORD *)(a1 + v31) = __dsta;
  v32 = v8[11];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  v36 = v8[12];
  v37 = *(void **)(a2 + v36);
  *(_QWORD *)(a1 + v36) = v37;
  v38 = v8[13];
  v39 = (_QWORD *)(a1 + v38);
  v40 = (_QWORD *)(a2 + v38);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v42 = v8[14];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (_QWORD *)(a2 + v42);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  *(_BYTE *)(a1 + v8[15]) = *(_BYTE *)(a2 + v8[15]);
  v46 = v8[16];
  v47 = (_QWORD *)(a1 + v46);
  v48 = (_QWORD *)(a2 + v46);
  v49 = v48[1];
  *v47 = *v48;
  v47[1] = v49;
  v50 = v8[17];
  v51 = *(_QWORD *)(a2 + v50);
  *(_QWORD *)(a1 + v50) = v51;
  v52 = v8[18];
  v71 = (void *)(a2 + v52);
  v72 = a1 + v52;
  v53 = type metadata accessor for URL(0);
  v69 = *(void (**)(uint64_t, void *, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
  v54 = __dsta;
  swift_bridgeObjectRetain(v35);
  v55 = v37;
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRetain(v45);
  swift_bridgeObjectRetain(v49);
  swift_bridgeObjectRetain(v51);
  v69(v72, v71, v53);
  v56 = v8[19];
  v57 = *(_QWORD *)(a2 + v56);
  *(_QWORD *)(a1 + v56) = v57;
  *(_BYTE *)(a1 + v8[20]) = *(_BYTE *)(a2 + v8[20]);
  v58 = a3[5];
  v59 = (uint64_t *)(a1 + v58);
  v60 = (uint64_t *)(a2 + v58);
  swift_bridgeObjectRetain(v57);
  v61 = sub_100006DA4(&qword_1000AE070);
  if (swift_getEnumCaseMultiPayload(v60, v61) == 1)
  {
    v62 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v59, v60, v62);
    v63 = 1;
  }
  else
  {
    v64 = *v60;
    *v59 = *v60;
    swift_retain(v64);
    v63 = 0;
  }
  swift_storeEnumTagMultiPayload(v59, v61, v63);
  v65 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v65) = *(_QWORD *)(a2 + v65);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_10003B8E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  int *v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD *, uint64_t, int *);
  int v19;
  int v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  size_t v41;
  void *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void (*v49)(_QWORD *, _QWORD, uint64_t, int *);
  id v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  id v58;
  uint64_t v59;
  void *v60;
  void *v61;
  id v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  id v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  unsigned int (*__src)(char *, uint64_t, uint64_t);
  char *__dst;
  void *__dsta;
  int *v111;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v13 = v12[9];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v17 = *((_QWORD *)v16 - 1);
  v18 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      v21 = (void *)*v15;
      *v14 = *v15;
      v22 = (void *)v15[1];
      v14[1] = v22;
      v23 = v16[6];
      __dst = (char *)v14 + v23;
      v111 = a3;
      v106 = (char *)v15 + v23;
      v24 = type metadata accessor for AttributedString(0);
      v105 = *(_QWORD *)(v24 - 8);
      __src = *(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48);
      v25 = v21;
      v26 = v22;
      if (__src(v106, 1, v24))
      {
        v27 = sub_100006DA4(&qword_1000ACE10);
        memcpy(__dst, v106, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 16))(__dst, v106, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(__dst, 0, 1, v24);
      }
      v43 = v16[7];
      v44 = (char *)v14 + v43;
      v45 = (char *)v15 + v43;
      v46 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
      v47 = v16[8];
      v48 = *(void **)((char *)v15 + v47);
      *(_QWORD *)((char *)v14 + v47) = v48;
      *(_QWORD *)((char *)v14 + v16[9]) = *(_QWORD *)((char *)v15 + v16[9]);
      *((_BYTE *)v14 + v16[10]) = *((_BYTE *)v15 + v16[10]);
      *((_BYTE *)v14 + v16[11]) = *((_BYTE *)v15 + v16[11]);
      v49 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v17 + 56);
      v50 = v48;
      v49(v14, 0, 1, v16);
      goto LABEL_19;
    }
LABEL_7:
    v28 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_20;
  }
  if (v20)
  {
    sub_100007EB4((uint64_t)v14, type metadata accessor for TTRNewWidgetViewModel.Reminder);
    goto LABEL_7;
  }
  v111 = a3;
  v29 = (void *)*v15;
  v30 = (void *)*v14;
  *v14 = *v15;
  v31 = v29;

  v32 = (void *)v14[1];
  v33 = (void *)v15[1];
  v14[1] = v33;
  v34 = v33;

  v35 = v16[6];
  v36 = (char *)v14 + v35;
  v37 = (char *)v15 + v35;
  v38 = type metadata accessor for AttributedString(0);
  v107 = *(_QWORD *)(v38 - 8);
  v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v107 + 48);
  __dsta = v36;
  LODWORD(v36) = v39(v36, 1, v38);
  v40 = v39(v37, 1, v38);
  if ((_DWORD)v36)
  {
    if (!v40)
    {
      (*(void (**)(void *, char *, uint64_t))(v107 + 16))(__dsta, v37, v38);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v107 + 56))(__dsta, 0, 1, v38);
      goto LABEL_18;
    }
    v41 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
    v42 = __dsta;
  }
  else
  {
    if (!v40)
    {
      (*(void (**)(void *, char *, uint64_t))(v107 + 24))(__dsta, v37, v38);
      goto LABEL_18;
    }
    (*(void (**)(void *, uint64_t))(v107 + 8))(__dsta, v38);
    v41 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
    v42 = __dsta;
  }
  memcpy(v42, v37, v41);
LABEL_18:
  v51 = v16[7];
  v52 = (char *)v14 + v51;
  v53 = (char *)v15 + v51;
  v54 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  v55 = v16[8];
  v56 = *(void **)((char *)v14 + v55);
  v57 = *(void **)((char *)v15 + v55);
  *(_QWORD *)((char *)v14 + v55) = v57;
  v58 = v57;

  *(_QWORD *)((char *)v14 + v16[9]) = *(_QWORD *)((char *)v15 + v16[9]);
  *((_BYTE *)v14 + v16[10]) = *((_BYTE *)v15 + v16[10]);
  *((_BYTE *)v14 + v16[11]) = *((_BYTE *)v15 + v16[11]);
LABEL_19:
  a3 = v111;
LABEL_20:
  v59 = v12[10];
  v60 = *(void **)(a2 + v59);
  v61 = *(void **)(a1 + v59);
  *(_QWORD *)(a1 + v59) = v60;
  v62 = v60;

  v63 = v12[11];
  v64 = (_QWORD *)(a1 + v63);
  v65 = (_QWORD *)(a2 + v63);
  *v64 = *v65;
  v66 = v65[1];
  v67 = v64[1];
  v64[1] = v66;
  swift_bridgeObjectRetain(v66);
  swift_bridgeObjectRelease(v67);
  v68 = v12[12];
  v69 = *(void **)(a1 + v68);
  v70 = *(void **)(a2 + v68);
  *(_QWORD *)(a1 + v68) = v70;
  v71 = v70;

  v72 = v12[13];
  v73 = (_QWORD *)(a1 + v72);
  v74 = (_QWORD *)(a2 + v72);
  *v73 = *v74;
  v75 = v74[1];
  v76 = v73[1];
  v73[1] = v75;
  swift_bridgeObjectRetain(v75);
  swift_bridgeObjectRelease(v76);
  v77 = v12[14];
  v78 = (_QWORD *)(a1 + v77);
  v79 = (_QWORD *)(a2 + v77);
  *v78 = *v79;
  v80 = v79[1];
  v81 = v78[1];
  v78[1] = v80;
  swift_bridgeObjectRetain(v80);
  swift_bridgeObjectRelease(v81);
  *(_BYTE *)(a1 + v12[15]) = *(_BYTE *)(a2 + v12[15]);
  v82 = v12[16];
  v83 = (_QWORD *)(a1 + v82);
  v84 = (_QWORD *)(a2 + v82);
  *v83 = *v84;
  v85 = v84[1];
  v86 = v83[1];
  v83[1] = v85;
  swift_bridgeObjectRetain(v85);
  swift_bridgeObjectRelease(v86);
  v87 = v12[17];
  v88 = *(_QWORD *)(a1 + v87);
  v89 = *(_QWORD *)(a2 + v87);
  *(_QWORD *)(a1 + v87) = v89;
  swift_bridgeObjectRetain(v89);
  swift_bridgeObjectRelease(v88);
  v90 = v12[18];
  v91 = a1 + v90;
  v92 = a2 + v90;
  v93 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 24))(v91, v92, v93);
  v94 = v12[19];
  v95 = *(_QWORD *)(a2 + v94);
  v96 = *(_QWORD *)(a1 + v94);
  *(_QWORD *)(a1 + v94) = v95;
  swift_bridgeObjectRetain(v95);
  swift_bridgeObjectRelease(v96);
  *(_BYTE *)(a1 + v12[20]) = *(_BYTE *)(a2 + v12[20]);
  if (a1 != a2)
  {
    v97 = a3[5];
    v98 = (uint64_t *)(a1 + v97);
    v99 = (uint64_t *)(a2 + v97);
    sub_100009578(a1 + v97, &qword_1000AE070);
    v100 = sub_100006DA4(&qword_1000AE070);
    if (swift_getEnumCaseMultiPayload(v99, v100) == 1)
    {
      v101 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v98, v99, v101);
      v102 = 1;
    }
    else
    {
      v103 = *v99;
      *v98 = *v99;
      swift_retain(v103);
      v102 = 0;
    }
    swift_storeEnumTagMultiPayload(v98, v100, v102);
  }
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_10003BF0C(uint64_t a1, uint64_t a2, int *a3)
{
  int *v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v33;
  char *__dst;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v6 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v7 = v6[9];
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    v13 = v10[6];
    v33 = a3;
    __dst = (char *)v8 + v13;
    v14 = (char *)v9 + v13;
    v15 = type metadata accessor for AttributedString(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_100006DA4(&qword_1000ACE10);
      memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    v18 = v10[7];
    v19 = (char *)v8 + v18;
    v20 = (char *)v9 + v18;
    v21 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    *(_QWORD *)((char *)v8 + v10[8]) = *(_QWORD *)((char *)v9 + v10[8]);
    *(_QWORD *)((char *)v8 + v10[9]) = *(_QWORD *)((char *)v9 + v10[9]);
    *((_BYTE *)v8 + v10[10]) = *((_BYTE *)v9 + v10[10]);
    *((_BYTE *)v8 + v10[11]) = *((_BYTE *)v9 + v10[11]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
    a3 = v33;
  }
  *(_QWORD *)(a1 + v6[10]) = *(_QWORD *)(a2 + v6[10]);
  *(_OWORD *)(a1 + v6[11]) = *(_OWORD *)(a2 + v6[11]);
  *(_QWORD *)(a1 + v6[12]) = *(_QWORD *)(a2 + v6[12]);
  *(_OWORD *)(a1 + v6[13]) = *(_OWORD *)(a2 + v6[13]);
  *(_OWORD *)(a1 + v6[14]) = *(_OWORD *)(a2 + v6[14]);
  *(_BYTE *)(a1 + v6[15]) = *(_BYTE *)(a2 + v6[15]);
  *(_OWORD *)(a1 + v6[16]) = *(_OWORD *)(a2 + v6[16]);
  *(_QWORD *)(a1 + v6[17]) = *(_QWORD *)(a2 + v6[17]);
  v22 = v6[18];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  *(_QWORD *)(a1 + v6[19]) = *(_QWORD *)(a2 + v6[19]);
  *(_BYTE *)(a1 + v6[20]) = *(_BYTE *)(a2 + v6[20]);
  v26 = a3[5];
  v27 = (void *)(a1 + v26);
  v28 = (const void *)(a2 + v26);
  v29 = sub_100006DA4(&qword_1000AE070);
  if (swift_getEnumCaseMultiPayload(v28, v29) == 1)
  {
    v30 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v27, v28, v30);
    swift_storeEnumTagMultiPayload(v27, v29, 1);
  }
  else
  {
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  v31 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v31) = *(_QWORD *)(a2 + v31);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_10003C22C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  int *v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD *, uint64_t, int *);
  int v18;
  int v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  size_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  const void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v89;
  char *__dst;
  void *__dsta;
  int *v92;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v8);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease(v10);
  v11 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v12 = v11[9];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v16 = *((_QWORD *)v15 - 1);
  v17 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v20 = v15[6];
      __dst = (char *)v13 + v20;
      v92 = a3;
      v21 = (char *)v14 + v20;
      v22 = type metadata accessor for AttributedString(0);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        v24 = sub_100006DA4(&qword_1000ACE10);
        memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(__dst, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
      }
      v36 = v15[7];
      v37 = (char *)v13 + v36;
      v38 = (char *)v14 + v36;
      v39 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
      *(_QWORD *)((char *)v13 + v15[8]) = *(_QWORD *)((char *)v14 + v15[8]);
      *(_QWORD *)((char *)v13 + v15[9]) = *(_QWORD *)((char *)v14 + v15[9]);
      *((_BYTE *)v13 + v15[10]) = *((_BYTE *)v14 + v15[10]);
      *((_BYTE *)v13 + v15[11]) = *((_BYTE *)v14 + v15[11]);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_19;
    }
LABEL_7:
    v25 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_20;
  }
  if (v19)
  {
    sub_100007EB4((uint64_t)v13, type metadata accessor for TTRNewWidgetViewModel.Reminder);
    goto LABEL_7;
  }
  v92 = a3;
  v26 = (void *)*v13;
  *v13 = *v14;

  v27 = (void *)v13[1];
  v13[1] = v14[1];

  v28 = v15[6];
  v29 = (char *)v13 + v28;
  v30 = (char *)v14 + v28;
  v31 = type metadata accessor for AttributedString(0);
  v89 = *(_QWORD *)(v31 - 8);
  v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v89 + 48);
  __dsta = v29;
  LODWORD(v29) = v32(v29, 1, v31);
  v33 = v32(v30, 1, v31);
  if ((_DWORD)v29)
  {
    if (!v33)
    {
      (*(void (**)(void *, char *, uint64_t))(v89 + 32))(__dsta, v30, v31);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v89 + 56))(__dsta, 0, 1, v31);
      goto LABEL_18;
    }
    v34 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
    v35 = __dsta;
  }
  else
  {
    if (!v33)
    {
      (*(void (**)(void *, char *, uint64_t))(v89 + 40))(__dsta, v30, v31);
      goto LABEL_18;
    }
    (*(void (**)(void *, uint64_t))(v89 + 8))(__dsta, v31);
    v34 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
    v35 = __dsta;
  }
  memcpy(v35, v30, v34);
LABEL_18:
  v40 = v15[7];
  v41 = (char *)v13 + v40;
  v42 = (char *)v14 + v40;
  v43 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 40))(v41, v42, v43);
  v44 = v15[8];
  v45 = *(void **)((char *)v13 + v44);
  *(_QWORD *)((char *)v13 + v44) = *(_QWORD *)((char *)v14 + v44);

  *(_QWORD *)((char *)v13 + v15[9]) = *(_QWORD *)((char *)v14 + v15[9]);
  *((_BYTE *)v13 + v15[10]) = *((_BYTE *)v14 + v15[10]);
  *((_BYTE *)v13 + v15[11]) = *((_BYTE *)v14 + v15[11]);
LABEL_19:
  a3 = v92;
LABEL_20:
  v46 = v11[10];
  v47 = *(void **)(a1 + v46);
  *(_QWORD *)(a1 + v46) = *(_QWORD *)(a2 + v46);

  v48 = v11[11];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (uint64_t *)(a2 + v48);
  v52 = *v50;
  v51 = v50[1];
  v53 = v49[1];
  *v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease(v53);
  v54 = v11[12];
  v55 = *(void **)(a1 + v54);
  *(_QWORD *)(a1 + v54) = *(_QWORD *)(a2 + v54);

  v56 = v11[13];
  v57 = (_QWORD *)(a1 + v56);
  v58 = (uint64_t *)(a2 + v56);
  v60 = *v58;
  v59 = v58[1];
  v61 = v57[1];
  *v57 = v60;
  v57[1] = v59;
  swift_bridgeObjectRelease(v61);
  v62 = v11[14];
  v63 = (_QWORD *)(a1 + v62);
  v64 = (uint64_t *)(a2 + v62);
  v66 = *v64;
  v65 = v64[1];
  v67 = v63[1];
  *v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease(v67);
  *(_BYTE *)(a1 + v11[15]) = *(_BYTE *)(a2 + v11[15]);
  v68 = v11[16];
  v69 = (_QWORD *)(a1 + v68);
  v70 = (uint64_t *)(a2 + v68);
  v72 = *v70;
  v71 = v70[1];
  v73 = v69[1];
  *v69 = v72;
  v69[1] = v71;
  swift_bridgeObjectRelease(v73);
  v74 = v11[17];
  v75 = *(_QWORD *)(a1 + v74);
  *(_QWORD *)(a1 + v74) = *(_QWORD *)(a2 + v74);
  swift_bridgeObjectRelease(v75);
  v76 = v11[18];
  v77 = a1 + v76;
  v78 = a2 + v76;
  v79 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 40))(v77, v78, v79);
  v80 = v11[19];
  v81 = *(_QWORD *)(a1 + v80);
  *(_QWORD *)(a1 + v80) = *(_QWORD *)(a2 + v80);
  swift_bridgeObjectRelease(v81);
  *(_BYTE *)(a1 + v11[20]) = *(_BYTE *)(a2 + v11[20]);
  if (a1 != a2)
  {
    v82 = a3[5];
    v83 = (void *)(a1 + v82);
    v84 = (const void *)(a2 + v82);
    sub_100009578(a1 + v82, &qword_1000AE070);
    v85 = sub_100006DA4(&qword_1000AE070);
    if (swift_getEnumCaseMultiPayload(v84, v85) == 1)
    {
      v86 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(v83, v84, v86);
      swift_storeEnumTagMultiPayload(v83, v85, 1);
    }
    else
    {
      memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    }
  }
  v87 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v87) = *(_QWORD *)(a2 + v87);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_10003C790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003C79C);
}

uint64_t sub_10003C79C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10003C7A8(a1, a2, a3, &qword_1000AE068);
}

uint64_t sub_10003C7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for TTRNewWidgetViewModel(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    v12 = a1;
  }
  else
  {
    v10 = sub_100006DA4(a4);
    v12 = a1 + *(int *)(a3 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  }
  return v11(v12, a2, v10);
}

uint64_t sub_10003C820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003C82C);
}

uint64_t sub_10003C82C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10003C838(a1, a2, a3, a4, &qword_1000AE068);
}

uint64_t sub_10003C838(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  v10 = type metadata accessor for TTRNewWidgetViewModel(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v11 + 84) == a3)
  {
    v12 = v10;
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v14 = a1;
  }
  else
  {
    v12 = sub_100006DA4(a5);
    v14 = a1 + *(int *)(a4 + 20);
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  }
  return v13(v14, a2, a2, v12);
}

void sub_10003C8C0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v2 = type metadata accessor for TTRNewWidgetViewModel(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10003AEE4(319, (unint64_t *)&unk_1000AE0E8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[3] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[4] = (char *)&value witness table for Builtin.Int64 + 64;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

_QWORD *sub_10003C964(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  void **v11;
  int *v12;
  uint64_t v13;
  unsigned int (*v14)(void **, uint64_t, int *);
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void (*v31)(void **, _QWORD, uint64_t, int *);
  id v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v100;
  char *v101;
  void (*v102)(char *, uint64_t, uint64_t);
  uint64_t v103;
  char *v104;
  char *v105;
  void **__dst;
  void *__dsta;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    v7 = a2[4];
    *(_QWORD *)(a1 + 32) = v7;
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v8 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v8;
    v9 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
    v10 = v9[9];
    __dst = (void **)((char *)v4 + v10);
    v11 = (void **)((char *)a2 + v10);
    v12 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    v13 = *((_QWORD *)v12 - 1);
    v14 = *(unsigned int (**)(void **, uint64_t, int *))(v13 + 48);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    if (v14(v11, 1, v12))
    {
      v15 = sub_100006DA4(&qword_1000ACCD8);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v17 = *v11;
      v18 = v11[1];
      *__dst = *v11;
      __dst[1] = v18;
      v19 = v12[6];
      v101 = (char *)__dst + v19;
      v104 = (char *)v11 + v19;
      v20 = type metadata accessor for AttributedString(0);
      v100 = *(_QWORD *)(v20 - 8);
      v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48);
      v22 = v17;
      v23 = v18;
      if (v21(v104, 1, v20))
      {
        v24 = sub_100006DA4(&qword_1000ACE10);
        memcpy(v101, v104, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v101, v104, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v101, 0, 1, v20);
      }
      v25 = v12[7];
      v26 = (char *)__dst + v25;
      v27 = (char *)v11 + v25;
      v28 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      v29 = v12[8];
      v30 = *(void **)((char *)v11 + v29);
      *(void **)((char *)__dst + v29) = v30;
      *(void **)((char *)__dst + v12[9]) = *(void **)((char *)v11 + v12[9]);
      *((_BYTE *)__dst + v12[10]) = *((_BYTE *)v11 + v12[10]);
      *((_BYTE *)__dst + v12[11]) = *((_BYTE *)v11 + v12[11]);
      v31 = *(void (**)(void **, _QWORD, uint64_t, int *))(v13 + 56);
      v32 = v30;
      v31(__dst, 0, 1, v12);
    }
    v33 = v9[10];
    __dsta = *(void **)((char *)a2 + v33);
    *(_QWORD *)((char *)v4 + v33) = __dsta;
    v34 = v9[11];
    v35 = (_QWORD *)((char *)v4 + v34);
    v36 = (uint64_t *)((char *)a2 + v34);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = v9[12];
    v39 = *(void **)((char *)a2 + v38);
    *(_QWORD *)((char *)v4 + v38) = v39;
    v40 = v9[13];
    v41 = (_QWORD *)((char *)v4 + v40);
    v42 = (uint64_t *)((char *)a2 + v40);
    v43 = v42[1];
    *v41 = *v42;
    v41[1] = v43;
    v44 = v9[14];
    v45 = (_QWORD *)((char *)v4 + v44);
    v46 = (uint64_t *)((char *)a2 + v44);
    v47 = v46[1];
    *v45 = *v46;
    v45[1] = v47;
    *((_BYTE *)v4 + v9[15]) = *((_BYTE *)a2 + v9[15]);
    v48 = v9[16];
    v49 = (_QWORD *)((char *)v4 + v48);
    v50 = (uint64_t *)((char *)a2 + v48);
    v51 = v50[1];
    *v49 = *v50;
    v49[1] = v51;
    v52 = v9[17];
    v53 = *(uint64_t *)((char *)a2 + v52);
    *(_QWORD *)((char *)v4 + v52) = v53;
    v54 = v9[18];
    v103 = (uint64_t)a2 + v54;
    v105 = (char *)v4 + v54;
    v55 = type metadata accessor for URL(0);
    v102 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
    v56 = __dsta;
    swift_bridgeObjectRetain(v37);
    v57 = v39;
    swift_bridgeObjectRetain(v43);
    swift_bridgeObjectRetain(v47);
    swift_bridgeObjectRetain(v51);
    swift_bridgeObjectRetain(v53);
    v102(v105, v103, v55);
    v58 = v9[19];
    v59 = *(uint64_t *)((char *)a2 + v58);
    *(_QWORD *)((char *)v4 + v58) = v59;
    *((_BYTE *)v4 + v9[20]) = *((_BYTE *)a2 + v9[20]);
    v60 = a3[5];
    v61 = (char *)v4 + v60;
    v62 = (uint64_t)a2 + v60;
    v63 = *(_QWORD *)v62;
    v64 = *(_BYTE *)(v62 + 8);
    swift_bridgeObjectRetain(v59);
    sub_10003CEB8(v63, v64);
    *(_QWORD *)v61 = v63;
    v61[8] = v64;
    v65 = a3[6];
    v66 = (_QWORD *)((char *)v4 + v65);
    v67 = (uint64_t *)((char *)a2 + v65);
    v68 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v67, v68) == 1)
    {
      v69 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v66, v67, v69);
      v70 = 1;
    }
    else
    {
      v71 = *v67;
      *v66 = *v67;
      swift_retain(v71);
      v70 = 0;
    }
    swift_storeEnumTagMultiPayload(v66, v68, v70);
    v72 = a3[7];
    v73 = (_QWORD *)((char *)v4 + v72);
    v74 = (uint64_t *)((char *)a2 + v72);
    v75 = sub_100006DA4(&qword_1000AE070);
    if (swift_getEnumCaseMultiPayload(v74, v75) == 1)
    {
      v76 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v73, v74, v76);
      v77 = 1;
    }
    else
    {
      v78 = *v74;
      *v73 = *v74;
      swift_retain(v78);
      v77 = 0;
    }
    swift_storeEnumTagMultiPayload(v73, v75, v77);
    v79 = a3[8];
    v80 = a3[9];
    v81 = (char *)v4 + v79;
    v82 = (uint64_t *)((char *)a2 + v79);
    v83 = *v82;
    LOBYTE(v82) = *((_BYTE *)v82 + 8);
    *(_QWORD *)v81 = v83;
    v81[8] = (char)v82;
    v84 = (char *)v4 + v80;
    v85 = *(uint64_t *)((char *)a2 + v80);
    v86 = *((_BYTE *)a2 + v80 + 8);
    swift_retain(v83);
    sub_10003CEB8(v85, v86);
    *(_QWORD *)v84 = v85;
    v84[8] = v86;
    v87 = a3[10];
    v88 = (char *)v4 + v87;
    v89 = (uint64_t)a2 + v87;
    v90 = *(_QWORD *)v89;
    v91 = *(_BYTE *)(v89 + 8);
    sub_10003CEB8(*(_QWORD *)v89, v91);
    *(_QWORD *)v88 = v90;
    v88[8] = v91;
    v92 = a3[11];
    v93 = (_QWORD *)((char *)v4 + v92);
    v94 = (uint64_t *)((char *)a2 + v92);
    if (swift_getEnumCaseMultiPayload((char *)a2 + v92, v68) == 1)
    {
      v95 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v93, v94, v95);
      v96 = 1;
    }
    else
    {
      v97 = *v94;
      *v93 = *v94;
      swift_retain(v97);
      v96 = 0;
    }
    swift_storeEnumTagMultiPayload(v93, v68, v96);
    v98 = a3[13];
    *(_QWORD *)((char *)v4 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    *(_QWORD *)((char *)v4 + v98) = *(uint64_t *)((char *)a2 + v98);
  }
  return v4;
}

uint64_t sub_10003CEB8(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
    return swift_retain(result);
  return result;
}

uint64_t sub_10003CEC4(_QWORD *a1, int *a2)
{
  int *v4;
  id *v5;
  int *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[4]);
  swift_bridgeObjectRelease(a1[7]);
  v4 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v5 = (id *)((char *)a1 + v4[9]);
  v6 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v5, 1, v6))
  {

    v7 = (char *)v5 + v6[6];
    v8 = type metadata accessor for AttributedString(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    v10 = (char *)v5 + v6[7];
    v11 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);

  }
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[11] + 8));

  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[13] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[14] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[16] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[17]));
  v12 = (char *)a1 + v4[18];
  v13 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[19]));
  sub_10003D1A0(*(_QWORD *)((char *)a1 + a2[5]), *((_BYTE *)a1 + a2[5] + 8));
  v14 = (_QWORD *)((char *)a1 + a2[6]);
  v15 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
  }
  else
  {
    swift_release(*v14);
  }
  v17 = (_QWORD *)((char *)a1 + a2[7]);
  v18 = sub_100006DA4(&qword_1000AE070);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
  }
  else
  {
    swift_release(*v17);
  }
  swift_release(*(_QWORD *)((char *)a1 + a2[8]));
  sub_10003D1A0(*(_QWORD *)((char *)a1 + a2[9]), *((_BYTE *)a1 + a2[9] + 8));
  sub_10003D1A0(*(_QWORD *)((char *)a1 + a2[10]), *((_BYTE *)a1 + a2[10] + 8));
  v20 = (_QWORD *)((char *)a1 + a2[11]);
  if (swift_getEnumCaseMultiPayload(v20, v15) != 1)
    return swift_release(*v20);
  v21 = type metadata accessor for WidgetRenderingMode(0);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
}

uint64_t sub_10003D1A0(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
    return swift_release(result);
  return result;
}

uint64_t sub_10003D1AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void **v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(void **, uint64_t, int *);
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void (*v29)(void **, _QWORD, uint64_t, int *);
  id v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  char *v99;
  void (*v100)(uint64_t, void *, uint64_t);
  char *v101;
  void *v102;
  uint64_t v103;
  void **__dst;
  void *__dsta;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v9 = v8[9];
  __dst = (void **)(a1 + v9);
  v10 = (void **)(a2 + v9);
  v11 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(unsigned int (**)(void **, uint64_t, int *))(v12 + 48);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  if (v13(v10, 1, v11))
  {
    v14 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = *v10;
    v16 = v10[1];
    *__dst = *v10;
    __dst[1] = v16;
    v17 = v11[6];
    v99 = (char *)v10 + v17;
    v101 = (char *)__dst + v17;
    v18 = type metadata accessor for AttributedString(0);
    v98 = *(_QWORD *)(v18 - 8);
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48);
    v20 = v15;
    v21 = v16;
    if (v19(v99, 1, v18))
    {
      v22 = sub_100006DA4(&qword_1000ACE10);
      memcpy(v101, v99, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v101, v99, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v101, 0, 1, v18);
    }
    v23 = v11[7];
    v24 = (char *)__dst + v23;
    v25 = (char *)v10 + v23;
    v26 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
    v27 = v11[8];
    v28 = *(void **)((char *)v10 + v27);
    *(void **)((char *)__dst + v27) = v28;
    *(void **)((char *)__dst + v11[9]) = *(void **)((char *)v10 + v11[9]);
    *((_BYTE *)__dst + v11[10]) = *((_BYTE *)v10 + v11[10]);
    *((_BYTE *)__dst + v11[11]) = *((_BYTE *)v10 + v11[11]);
    v29 = *(void (**)(void **, _QWORD, uint64_t, int *))(v12 + 56);
    v30 = v28;
    v29(__dst, 0, 1, v11);
  }
  v31 = v8[10];
  __dsta = *(void **)(a2 + v31);
  *(_QWORD *)(a1 + v31) = __dsta;
  v32 = v8[11];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  v36 = v8[12];
  v37 = *(void **)(a2 + v36);
  *(_QWORD *)(a1 + v36) = v37;
  v38 = v8[13];
  v39 = (_QWORD *)(a1 + v38);
  v40 = (_QWORD *)(a2 + v38);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v42 = v8[14];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (_QWORD *)(a2 + v42);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  *(_BYTE *)(a1 + v8[15]) = *(_BYTE *)(a2 + v8[15]);
  v46 = v8[16];
  v47 = (_QWORD *)(a1 + v46);
  v48 = (_QWORD *)(a2 + v46);
  v49 = v48[1];
  *v47 = *v48;
  v47[1] = v49;
  v50 = v8[17];
  v51 = *(_QWORD *)(a2 + v50);
  *(_QWORD *)(a1 + v50) = v51;
  v52 = v8[18];
  v102 = (void *)(a2 + v52);
  v103 = a1 + v52;
  v53 = type metadata accessor for URL(0);
  v100 = *(void (**)(uint64_t, void *, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
  v54 = __dsta;
  swift_bridgeObjectRetain(v35);
  v55 = v37;
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRetain(v45);
  swift_bridgeObjectRetain(v49);
  swift_bridgeObjectRetain(v51);
  v100(v103, v102, v53);
  v56 = v8[19];
  v57 = *(_QWORD *)(a2 + v56);
  *(_QWORD *)(a1 + v56) = v57;
  *(_BYTE *)(a1 + v8[20]) = *(_BYTE *)(a2 + v8[20]);
  v58 = a3[5];
  v59 = a1 + v58;
  v60 = a2 + v58;
  v61 = *(_QWORD *)v60;
  v62 = *(_BYTE *)(v60 + 8);
  swift_bridgeObjectRetain(v57);
  sub_10003CEB8(v61, v62);
  *(_QWORD *)v59 = v61;
  *(_BYTE *)(v59 + 8) = v62;
  v63 = a3[6];
  v64 = (uint64_t *)(a1 + v63);
  v65 = (uint64_t *)(a2 + v63);
  v66 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v65, v66) == 1)
  {
    v67 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v64, v65, v67);
    v68 = 1;
  }
  else
  {
    v69 = *v65;
    *v64 = *v65;
    swift_retain(v69);
    v68 = 0;
  }
  swift_storeEnumTagMultiPayload(v64, v66, v68);
  v70 = a3[7];
  v71 = (uint64_t *)(a1 + v70);
  v72 = (uint64_t *)(a2 + v70);
  v73 = sub_100006DA4(&qword_1000AE070);
  if (swift_getEnumCaseMultiPayload(v72, v73) == 1)
  {
    v74 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v71, v72, v74);
    v75 = 1;
  }
  else
  {
    v76 = *v72;
    *v71 = *v72;
    swift_retain(v76);
    v75 = 0;
  }
  swift_storeEnumTagMultiPayload(v71, v73, v75);
  v77 = a3[8];
  v78 = a3[9];
  v79 = a1 + v77;
  v80 = (uint64_t *)(a2 + v77);
  v81 = *v80;
  LOBYTE(v80) = *((_BYTE *)v80 + 8);
  *(_QWORD *)v79 = v81;
  *(_BYTE *)(v79 + 8) = (_BYTE)v80;
  v82 = a1 + v78;
  v83 = *(_QWORD *)(a2 + v78);
  v84 = *(_BYTE *)(a2 + v78 + 8);
  swift_retain(v81);
  sub_10003CEB8(v83, v84);
  *(_QWORD *)v82 = v83;
  *(_BYTE *)(v82 + 8) = v84;
  v85 = a3[10];
  v86 = a1 + v85;
  v87 = a2 + v85;
  v88 = *(_QWORD *)v87;
  v89 = *(_BYTE *)(v87 + 8);
  sub_10003CEB8(*(_QWORD *)v87, v89);
  *(_QWORD *)v86 = v88;
  *(_BYTE *)(v86 + 8) = v89;
  v90 = a3[11];
  v91 = (uint64_t *)(a1 + v90);
  v92 = (uint64_t *)(a2 + v90);
  if (swift_getEnumCaseMultiPayload(a2 + v90, v66) == 1)
  {
    v93 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v91, v92, v93);
    v94 = 1;
  }
  else
  {
    v95 = *v92;
    *v91 = *v92;
    swift_retain(v95);
    v94 = 0;
  }
  swift_storeEnumTagMultiPayload(v91, v66, v94);
  v96 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v96) = *(_QWORD *)(a2 + v96);
  return a1;
}

uint64_t sub_10003D6D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  int *v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD *, uint64_t, int *);
  int v19;
  int v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  size_t v41;
  void *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void (*v49)(_QWORD *, _QWORD, uint64_t, int *);
  id v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  id v58;
  uint64_t v59;
  void *v60;
  void *v61;
  id v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  id v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  unsigned int (*__src)(char *, uint64_t, uint64_t);
  char *__dst;
  void *__dsta;
  int *v150;
  int *v151;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v13 = v12[9];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v17 = *((_QWORD *)v16 - 1);
  v18 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (v20)
    {
      sub_100007EB4((uint64_t)v14, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    v151 = a3;
    v29 = (void *)*v15;
    v30 = (void *)*v14;
    *v14 = *v15;
    v31 = v29;

    v32 = (void *)v14[1];
    v33 = (void *)v15[1];
    v14[1] = v33;
    v34 = v33;

    v35 = v16[6];
    v36 = (char *)v14 + v35;
    v37 = (char *)v15 + v35;
    v38 = type metadata accessor for AttributedString(0);
    v146 = *(_QWORD *)(v38 - 8);
    v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v146 + 48);
    __dsta = v36;
    LODWORD(v36) = v39(v36, 1, v38);
    v40 = v39(v37, 1, v38);
    if ((_DWORD)v36)
    {
      if (!v40)
      {
        (*(void (**)(void *, char *, uint64_t))(v146 + 16))(__dsta, v37, v38);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v146 + 56))(__dsta, 0, 1, v38);
        goto LABEL_18;
      }
      v41 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v42 = __dsta;
    }
    else
    {
      if (!v40)
      {
        (*(void (**)(void *, char *, uint64_t))(v146 + 24))(__dsta, v37, v38);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v146 + 8))(__dsta, v38);
      v41 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v42 = __dsta;
    }
    memcpy(v42, v37, v41);
LABEL_18:
    v51 = v16[7];
    v52 = (char *)v14 + v51;
    v53 = (char *)v15 + v51;
    v54 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
    v55 = v16[8];
    v56 = *(void **)((char *)v14 + v55);
    v57 = *(void **)((char *)v15 + v55);
    *(_QWORD *)((char *)v14 + v55) = v57;
    v58 = v57;

    *(_QWORD *)((char *)v14 + v16[9]) = *(_QWORD *)((char *)v15 + v16[9]);
    *((_BYTE *)v14 + v16[10]) = *((_BYTE *)v15 + v16[10]);
    *((_BYTE *)v14 + v16[11]) = *((_BYTE *)v15 + v16[11]);
    a3 = v151;
    goto LABEL_19;
  }
  if (v20)
  {
LABEL_7:
    v28 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_19;
  }
  v21 = (void *)*v15;
  *v14 = *v15;
  v22 = (void *)v15[1];
  v14[1] = v22;
  v23 = v16[6];
  __dst = (char *)v14 + v23;
  v150 = a3;
  v145 = (char *)v15 + v23;
  v24 = type metadata accessor for AttributedString(0);
  v144 = *(_QWORD *)(v24 - 8);
  __src = *(unsigned int (**)(char *, uint64_t, uint64_t))(v144 + 48);
  v25 = v21;
  v26 = v22;
  if (__src(v145, 1, v24))
  {
    v27 = sub_100006DA4(&qword_1000ACE10);
    memcpy(__dst, v145, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v144 + 16))(__dst, v145, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(__dst, 0, 1, v24);
  }
  a3 = v150;
  v43 = v16[7];
  v44 = (char *)v14 + v43;
  v45 = (char *)v15 + v43;
  v46 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = v16[8];
  v48 = *(void **)((char *)v15 + v47);
  *(_QWORD *)((char *)v14 + v47) = v48;
  *(_QWORD *)((char *)v14 + v16[9]) = *(_QWORD *)((char *)v15 + v16[9]);
  *((_BYTE *)v14 + v16[10]) = *((_BYTE *)v15 + v16[10]);
  *((_BYTE *)v14 + v16[11]) = *((_BYTE *)v15 + v16[11]);
  v49 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v17 + 56);
  v50 = v48;
  v49(v14, 0, 1, v16);
LABEL_19:
  v59 = v12[10];
  v60 = *(void **)(a2 + v59);
  v61 = *(void **)(a1 + v59);
  *(_QWORD *)(a1 + v59) = v60;
  v62 = v60;

  v63 = v12[11];
  v64 = (_QWORD *)(a1 + v63);
  v65 = (_QWORD *)(a2 + v63);
  *v64 = *v65;
  v66 = v65[1];
  v67 = v64[1];
  v64[1] = v66;
  swift_bridgeObjectRetain(v66);
  swift_bridgeObjectRelease(v67);
  v68 = v12[12];
  v69 = *(void **)(a1 + v68);
  v70 = *(void **)(a2 + v68);
  *(_QWORD *)(a1 + v68) = v70;
  v71 = v70;

  v72 = v12[13];
  v73 = (_QWORD *)(a1 + v72);
  v74 = (_QWORD *)(a2 + v72);
  *v73 = *v74;
  v75 = v74[1];
  v76 = v73[1];
  v73[1] = v75;
  swift_bridgeObjectRetain(v75);
  swift_bridgeObjectRelease(v76);
  v77 = v12[14];
  v78 = (_QWORD *)(a1 + v77);
  v79 = (_QWORD *)(a2 + v77);
  *v78 = *v79;
  v80 = v79[1];
  v81 = v78[1];
  v78[1] = v80;
  swift_bridgeObjectRetain(v80);
  swift_bridgeObjectRelease(v81);
  *(_BYTE *)(a1 + v12[15]) = *(_BYTE *)(a2 + v12[15]);
  v82 = v12[16];
  v83 = (_QWORD *)(a1 + v82);
  v84 = (_QWORD *)(a2 + v82);
  *v83 = *v84;
  v85 = v84[1];
  v86 = v83[1];
  v83[1] = v85;
  swift_bridgeObjectRetain(v85);
  swift_bridgeObjectRelease(v86);
  v87 = v12[17];
  v88 = *(_QWORD *)(a1 + v87);
  v89 = *(_QWORD *)(a2 + v87);
  *(_QWORD *)(a1 + v87) = v89;
  swift_bridgeObjectRetain(v89);
  swift_bridgeObjectRelease(v88);
  v90 = v12[18];
  v91 = a1 + v90;
  v92 = a2 + v90;
  v93 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 24))(v91, v92, v93);
  v94 = v12[19];
  v95 = *(_QWORD *)(a2 + v94);
  v96 = *(_QWORD *)(a1 + v94);
  *(_QWORD *)(a1 + v94) = v95;
  swift_bridgeObjectRetain(v95);
  swift_bridgeObjectRelease(v96);
  *(_BYTE *)(a1 + v12[20]) = *(_BYTE *)(a2 + v12[20]);
  v97 = a3[5];
  v98 = a1 + v97;
  v99 = a2 + v97;
  v100 = *(_QWORD *)v99;
  LOBYTE(v96) = *(_BYTE *)(v99 + 8);
  sub_10003CEB8(*(_QWORD *)v99, v96);
  v101 = *(_QWORD *)v98;
  v102 = *(_BYTE *)(v98 + 8);
  *(_QWORD *)v98 = v100;
  *(_BYTE *)(v98 + 8) = v96;
  sub_10003D1A0(v101, v102);
  if (a1 != a2)
  {
    v103 = a3[6];
    v104 = (uint64_t *)(a1 + v103);
    v105 = (uint64_t *)(a2 + v103);
    sub_100009578(a1 + v103, &qword_1000ADE30);
    v106 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v105, v106) == 1)
    {
      v107 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v104, v105, v107);
      v108 = 1;
    }
    else
    {
      v109 = *v105;
      *v104 = *v105;
      swift_retain(v109);
      v108 = 0;
    }
    swift_storeEnumTagMultiPayload(v104, v106, v108);
    v110 = a3[7];
    v111 = (uint64_t *)(a1 + v110);
    v112 = (uint64_t *)(a2 + v110);
    sub_100009578(a1 + v110, &qword_1000AE070);
    v113 = sub_100006DA4(&qword_1000AE070);
    if (swift_getEnumCaseMultiPayload(v112, v113) == 1)
    {
      v114 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v114 - 8) + 16))(v111, v112, v114);
      v115 = 1;
    }
    else
    {
      v116 = *v112;
      *v111 = *v112;
      swift_retain(v116);
      v115 = 0;
    }
    swift_storeEnumTagMultiPayload(v111, v113, v115);
  }
  v117 = a3[8];
  v118 = (uint64_t *)(a1 + v117);
  v119 = (uint64_t *)(a2 + v117);
  v120 = *v119;
  LOBYTE(v119) = *((_BYTE *)v119 + 8);
  v121 = *v118;
  *v118 = v120;
  *((_BYTE *)v118 + 8) = (_BYTE)v119;
  swift_retain(v120);
  swift_release(v121);
  v122 = a3[9];
  v123 = a1 + v122;
  v124 = a2 + v122;
  v125 = *(_QWORD *)v124;
  v126 = *(_BYTE *)(v124 + 8);
  sub_10003CEB8(*(_QWORD *)v124, v126);
  v127 = *(_QWORD *)v123;
  v128 = *(_BYTE *)(v123 + 8);
  *(_QWORD *)v123 = v125;
  *(_BYTE *)(v123 + 8) = v126;
  sub_10003D1A0(v127, v128);
  v129 = a3[10];
  v130 = a1 + v129;
  v131 = a2 + v129;
  v132 = *(_QWORD *)v131;
  v133 = *(_BYTE *)(v131 + 8);
  sub_10003CEB8(*(_QWORD *)v131, v133);
  v134 = *(_QWORD *)v130;
  v135 = *(_BYTE *)(v130 + 8);
  *(_QWORD *)v130 = v132;
  *(_BYTE *)(v130 + 8) = v133;
  sub_10003D1A0(v134, v135);
  if (a1 != a2)
  {
    v136 = a3[11];
    v137 = (uint64_t *)(a1 + v136);
    v138 = (uint64_t *)(a2 + v136);
    sub_100009578(a1 + v136, &qword_1000ADE30);
    v139 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v138, v139) == 1)
    {
      v140 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v140 - 8) + 16))(v137, v138, v140);
      v141 = 1;
    }
    else
    {
      v142 = *v138;
      *v137 = *v138;
      swift_retain(v142);
      v141 = 0;
    }
    swift_storeEnumTagMultiPayload(v137, v139, v141);
  }
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_10003DEC8(uint64_t a1, uint64_t a2, int *a3)
{
  int *v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  char *__dst;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v6 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v7 = v6[9];
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    v13 = v10[6];
    v54 = v11;
    __dst = (char *)v8 + v13;
    v14 = (char *)v9 + v13;
    v15 = type metadata accessor for AttributedString(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_100006DA4(&qword_1000ACE10);
      memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    v18 = v10[7];
    v19 = (char *)v8 + v18;
    v20 = (char *)v9 + v18;
    v21 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    *(_QWORD *)((char *)v8 + v10[8]) = *(_QWORD *)((char *)v9 + v10[8]);
    *(_QWORD *)((char *)v8 + v10[9]) = *(_QWORD *)((char *)v9 + v10[9]);
    *((_BYTE *)v8 + v10[10]) = *((_BYTE *)v9 + v10[10]);
    *((_BYTE *)v8 + v10[11]) = *((_BYTE *)v9 + v10[11]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v54 + 56))(v8, 0, 1, v10);
  }
  *(_QWORD *)(a1 + v6[10]) = *(_QWORD *)(a2 + v6[10]);
  *(_OWORD *)(a1 + v6[11]) = *(_OWORD *)(a2 + v6[11]);
  *(_QWORD *)(a1 + v6[12]) = *(_QWORD *)(a2 + v6[12]);
  *(_OWORD *)(a1 + v6[13]) = *(_OWORD *)(a2 + v6[13]);
  *(_OWORD *)(a1 + v6[14]) = *(_OWORD *)(a2 + v6[14]);
  *(_BYTE *)(a1 + v6[15]) = *(_BYTE *)(a2 + v6[15]);
  *(_OWORD *)(a1 + v6[16]) = *(_OWORD *)(a2 + v6[16]);
  *(_QWORD *)(a1 + v6[17]) = *(_QWORD *)(a2 + v6[17]);
  v22 = v6[18];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  *(_QWORD *)(a1 + v6[19]) = *(_QWORD *)(a2 + v6[19]);
  *(_BYTE *)(a1 + v6[20]) = *(_BYTE *)(a2 + v6[20]);
  v26 = a3[5];
  v27 = a3[6];
  v28 = a1 + v26;
  v29 = a2 + v26;
  *(_BYTE *)(v28 + 8) = *(_BYTE *)(v29 + 8);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  v30 = (void *)(a1 + v27);
  v31 = (const void *)(a2 + v27);
  v32 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v31, v32) == 1)
  {
    v33 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v30, v31, v33);
    swift_storeEnumTagMultiPayload(v30, v32, 1);
  }
  else
  {
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  v34 = a3[7];
  v35 = (void *)(a1 + v34);
  v36 = (const void *)(a2 + v34);
  v37 = sub_100006DA4(&qword_1000AE070);
  if (swift_getEnumCaseMultiPayload(v36, v37) == 1)
  {
    v38 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v35, v36, v38);
    swift_storeEnumTagMultiPayload(v35, v37, 1);
  }
  else
  {
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  v39 = a3[8];
  v40 = a3[9];
  v41 = a1 + v39;
  v42 = a2 + v39;
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *(_BYTE *)(v41 + 8) = *(_BYTE *)(v42 + 8);
  v43 = a1 + v40;
  v44 = a2 + v40;
  *(_QWORD *)v43 = *(_QWORD *)v44;
  *(_BYTE *)(v43 + 8) = *(_BYTE *)(v44 + 8);
  v45 = a3[10];
  v46 = a3[11];
  v47 = a1 + v45;
  v48 = a2 + v45;
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *(_BYTE *)(v47 + 8) = *(_BYTE *)(v48 + 8);
  v49 = (void *)(a1 + v46);
  v50 = (const void *)(a2 + v46);
  if (swift_getEnumCaseMultiPayload(a2 + v46, v32) == 1)
  {
    v51 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
    swift_storeEnumTagMultiPayload(v49, v32, 1);
  }
  else
  {
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  v52 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v52) = *(_QWORD *)(a2 + v52);
  return a1;
}

uint64_t sub_10003E320(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  int *v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD *, uint64_t, int *);
  int v18;
  int v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  size_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  void *v89;
  const void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  const void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  void *v116;
  const void *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v122;
  char *__dst;
  void *__dsta;
  int *v125;
  int *v126;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v8);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease(v10);
  v11 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v12 = v11[9];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v16 = *((_QWORD *)v15 - 1);
  v17 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (v19)
    {
      sub_100007EB4((uint64_t)v13, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    v126 = a3;
    v26 = (void *)*v13;
    *v13 = *v14;

    v27 = (void *)v13[1];
    v13[1] = v14[1];

    v28 = v15[6];
    v29 = (char *)v13 + v28;
    v30 = (char *)v14 + v28;
    v31 = type metadata accessor for AttributedString(0);
    v122 = *(_QWORD *)(v31 - 8);
    v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v122 + 48);
    __dsta = v29;
    LODWORD(v29) = v32(v29, 1, v31);
    v33 = v32(v30, 1, v31);
    if ((_DWORD)v29)
    {
      if (!v33)
      {
        (*(void (**)(void *, char *, uint64_t))(v122 + 32))(__dsta, v30, v31);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v122 + 56))(__dsta, 0, 1, v31);
        goto LABEL_18;
      }
      v34 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v35 = __dsta;
    }
    else
    {
      if (!v33)
      {
        (*(void (**)(void *, char *, uint64_t))(v122 + 40))(__dsta, v30, v31);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v122 + 8))(__dsta, v31);
      v34 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v35 = __dsta;
    }
    memcpy(v35, v30, v34);
LABEL_18:
    v40 = v15[7];
    v41 = (char *)v13 + v40;
    v42 = (char *)v14 + v40;
    v43 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 40))(v41, v42, v43);
    v44 = v15[8];
    v45 = *(void **)((char *)v13 + v44);
    *(_QWORD *)((char *)v13 + v44) = *(_QWORD *)((char *)v14 + v44);

    *(_QWORD *)((char *)v13 + v15[9]) = *(_QWORD *)((char *)v14 + v15[9]);
    *((_BYTE *)v13 + v15[10]) = *((_BYTE *)v14 + v15[10]);
    *((_BYTE *)v13 + v15[11]) = *((_BYTE *)v14 + v15[11]);
    a3 = v126;
    goto LABEL_19;
  }
  if (v19)
  {
LABEL_7:
    v25 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_19;
  }
  *(_OWORD *)v13 = *(_OWORD *)v14;
  v20 = v15[6];
  __dst = (char *)v13 + v20;
  v125 = a3;
  v21 = (char *)v14 + v20;
  v22 = type metadata accessor for AttributedString(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = sub_100006DA4(&qword_1000ACE10);
    memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(__dst, v21, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
  }
  a3 = v125;
  v36 = v15[7];
  v37 = (char *)v13 + v36;
  v38 = (char *)v14 + v36;
  v39 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
  *(_QWORD *)((char *)v13 + v15[8]) = *(_QWORD *)((char *)v14 + v15[8]);
  *(_QWORD *)((char *)v13 + v15[9]) = *(_QWORD *)((char *)v14 + v15[9]);
  *((_BYTE *)v13 + v15[10]) = *((_BYTE *)v14 + v15[10]);
  *((_BYTE *)v13 + v15[11]) = *((_BYTE *)v14 + v15[11]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
LABEL_19:
  v46 = v11[10];
  v47 = *(void **)(a1 + v46);
  *(_QWORD *)(a1 + v46) = *(_QWORD *)(a2 + v46);

  v48 = v11[11];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (uint64_t *)(a2 + v48);
  v52 = *v50;
  v51 = v50[1];
  v53 = v49[1];
  *v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease(v53);
  v54 = v11[12];
  v55 = *(void **)(a1 + v54);
  *(_QWORD *)(a1 + v54) = *(_QWORD *)(a2 + v54);

  v56 = v11[13];
  v57 = (_QWORD *)(a1 + v56);
  v58 = (uint64_t *)(a2 + v56);
  v60 = *v58;
  v59 = v58[1];
  v61 = v57[1];
  *v57 = v60;
  v57[1] = v59;
  swift_bridgeObjectRelease(v61);
  v62 = v11[14];
  v63 = (_QWORD *)(a1 + v62);
  v64 = (uint64_t *)(a2 + v62);
  v66 = *v64;
  v65 = v64[1];
  v67 = v63[1];
  *v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease(v67);
  *(_BYTE *)(a1 + v11[15]) = *(_BYTE *)(a2 + v11[15]);
  v68 = v11[16];
  v69 = (_QWORD *)(a1 + v68);
  v70 = (uint64_t *)(a2 + v68);
  v72 = *v70;
  v71 = v70[1];
  v73 = v69[1];
  *v69 = v72;
  v69[1] = v71;
  swift_bridgeObjectRelease(v73);
  v74 = v11[17];
  v75 = *(_QWORD *)(a1 + v74);
  *(_QWORD *)(a1 + v74) = *(_QWORD *)(a2 + v74);
  swift_bridgeObjectRelease(v75);
  v76 = v11[18];
  v77 = a1 + v76;
  v78 = a2 + v76;
  v79 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 40))(v77, v78, v79);
  v80 = v11[19];
  v81 = *(_QWORD *)(a1 + v80);
  *(_QWORD *)(a1 + v80) = *(_QWORD *)(a2 + v80);
  swift_bridgeObjectRelease(v81);
  *(_BYTE *)(a1 + v11[20]) = *(_BYTE *)(a2 + v11[20]);
  v82 = a3[5];
  v83 = a1 + v82;
  v84 = (uint64_t *)(a2 + v82);
  v85 = *v84;
  LOBYTE(v84) = *((_BYTE *)v84 + 8);
  v86 = *(_QWORD *)v83;
  v87 = *(_BYTE *)(v83 + 8);
  *(_QWORD *)v83 = v85;
  *(_BYTE *)(v83 + 8) = (_BYTE)v84;
  sub_10003D1A0(v86, v87);
  if (a1 != a2)
  {
    v88 = a3[6];
    v89 = (void *)(a1 + v88);
    v90 = (const void *)(a2 + v88);
    sub_100009578(a1 + v88, &qword_1000ADE30);
    v91 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v90, v91) == 1)
    {
      v92 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v89, v90, v92);
      swift_storeEnumTagMultiPayload(v89, v91, 1);
    }
    else
    {
      memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
    }
    v93 = a3[7];
    v94 = (void *)(a1 + v93);
    v95 = (const void *)(a2 + v93);
    sub_100009578(a1 + v93, &qword_1000AE070);
    v96 = sub_100006DA4(&qword_1000AE070);
    if (swift_getEnumCaseMultiPayload(v95, v96) == 1)
    {
      v97 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v94, v95, v97);
      swift_storeEnumTagMultiPayload(v94, v96, 1);
    }
    else
    {
      memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
    }
  }
  v98 = a3[8];
  v99 = (uint64_t *)(a1 + v98);
  v100 = (uint64_t *)(a2 + v98);
  v101 = *v100;
  LOBYTE(v100) = *((_BYTE *)v100 + 8);
  v102 = *v99;
  *v99 = v101;
  *((_BYTE *)v99 + 8) = (_BYTE)v100;
  swift_release(v102);
  v103 = a3[9];
  v104 = a1 + v103;
  v105 = (uint64_t *)(a2 + v103);
  v106 = *v105;
  LOBYTE(v105) = *((_BYTE *)v105 + 8);
  v107 = *(_QWORD *)v104;
  v108 = *(_BYTE *)(v104 + 8);
  *(_QWORD *)v104 = v106;
  *(_BYTE *)(v104 + 8) = (_BYTE)v105;
  sub_10003D1A0(v107, v108);
  v109 = a3[10];
  v110 = a1 + v109;
  v111 = (uint64_t *)(a2 + v109);
  v112 = *v111;
  LOBYTE(v111) = *((_BYTE *)v111 + 8);
  v113 = *(_QWORD *)v110;
  v114 = *(_BYTE *)(v110 + 8);
  *(_QWORD *)v110 = v112;
  *(_BYTE *)(v110 + 8) = (_BYTE)v111;
  sub_10003D1A0(v113, v114);
  if (a1 != a2)
  {
    v115 = a3[11];
    v116 = (void *)(a1 + v115);
    v117 = (const void *)(a2 + v115);
    sub_100009578(a1 + v115, &qword_1000ADE30);
    v118 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v117, v118) == 1)
    {
      v119 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v119 - 8) + 32))(v116, v117, v119);
      swift_storeEnumTagMultiPayload(v116, v118, 1);
    }
    else
    {
      memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
    }
  }
  v120 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v120) = *(_QWORD *)(a2 + v120);
  return a1;
}

uint64_t sub_10003EA30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003EA3C);
}

uint64_t sub_10003EA3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t IsVibrantText;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for TTRNewWidgetViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 254)
  {
    v9 = *(unsigned __int8 *)(a1 + a3[5] + 8);
    if (v9 > 1)
      return (v9 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v10 = sub_100006DA4(&qword_1000ADE38);
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
    {
      IsVibrantText = v10;
      v13 = a3[6];
    }
    else
    {
      v14 = sub_100006DA4(&qword_1000AE068);
      v11 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
      {
        IsVibrantText = v14;
        v13 = a3[7];
      }
      else
      {
        IsVibrantText = type metadata accessor for IsVibrantText(0);
        v11 = *(_QWORD *)(IsVibrantText - 8);
        v13 = a3[11];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1 + v13, a2, IsVibrantText);
  }
}

uint64_t sub_10003EB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003EB3C);
}

uint64_t sub_10003EB3C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t IsVibrantText;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = type metadata accessor for TTRNewWidgetViewModel(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    IsVibrantText = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 254)
    {
      *(_BYTE *)(a1 + a4[5] + 8) = -(char)a2;
      return result;
    }
    v13 = sub_100006DA4(&qword_1000ADE38);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      IsVibrantText = v13;
      v15 = a4[6];
    }
    else
    {
      v16 = sub_100006DA4(&qword_1000AE068);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        IsVibrantText = v16;
        v15 = a4[7];
      }
      else
      {
        IsVibrantText = type metadata accessor for IsVibrantText(0);
        v14 = *(_QWORD *)(IsVibrantText - 8);
        v15 = a4[11];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, IsVibrantText);
}

void sub_10003EC30(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v9[10];

  v2 = type metadata accessor for TTRNewWidgetViewModel(319);
  if (v3 <= 0x3F)
  {
    v9[0] = *(_QWORD *)(v2 - 8) + 64;
    v9[1] = &unk_10008A2B0;
    sub_10003AEE4(319, (unint64_t *)&unk_1000ADEA8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
    if (v5 <= 0x3F)
    {
      v6 = *(_QWORD *)(v4 - 8) + 64;
      v9[2] = v6;
      sub_10003AEE4(319, (unint64_t *)&unk_1000AE0E8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
      if (v8 <= 0x3F)
      {
        v9[3] = *(_QWORD *)(v7 - 8) + 64;
        v9[4] = &unk_10008A2B0;
        v9[5] = &unk_10008A2B0;
        v9[6] = &unk_10008A2B0;
        v9[7] = v6;
        v9[8] = (char *)&value witness table for Builtin.Int64 + 64;
        v9[9] = (char *)&value witness table for Builtin.Int64 + 64;
        swift_initStructMetadata(a1, 256, 10, v9, a1 + 16);
      }
    }
  }
}

unint64_t sub_10003ED1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AE268;
  if (!qword_1000AE268)
  {
    v1 = sub_100007258(&qword_1000ADFB8);
    sub_10003EDA0();
    sub_1000095B4(&qword_1000AE288, &qword_1000AE290, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AE268);
  }
  return result;
}

unint64_t sub_10003EDA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AE270;
  if (!qword_1000AE270)
  {
    v1 = sub_100007258(&qword_1000ADFB0);
    sub_10003EE24();
    sub_1000095B4(&qword_1000AE288, &qword_1000AE290, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AE270);
  }
  return result;
}

unint64_t sub_10003EE24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AE278;
  if (!qword_1000AE278)
  {
    v1 = sub_100007258(&qword_1000ADFA8);
    sub_10003EEA8();
    sub_1000095B4(&qword_1000AD730, &qword_1000AD738, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AE278);
  }
  return result;
}

unint64_t sub_10003EEA8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1000AE280;
  if (!qword_1000AE280)
  {
    v1 = sub_100007258(&qword_1000ADFA0);
    v2[0] = sub_100007258(&qword_1000ADF90);
    v2[1] = sub_100007258(&qword_1000ADFC0);
    v2[2] = sub_100039000(&qword_1000ADFC8, &qword_1000ADF90, (void (*)(void))sub_100039064, (uint64_t)&protocol conformance descriptor for <A> Group<A>);
    v2[3] = sub_1000391C0();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.containerBackground<A>(for:alignment:content:)>>, 1);
    sub_1000095B4(&qword_1000AE288, &qword_1000AE290, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AE280);
  }
  return result;
}

uint64_t sub_10003EF98(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100092F34, 1);
}

uint64_t sub_10003EFA8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100092F0C, 1);
}

uint64_t sub_10003EFB8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100092EE4, 1);
}

uint64_t sub_10003EFC8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100007258(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10003F030()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1000AE2F8;
  if (!qword_1000AE2F8)
  {
    v1 = sub_100007258(&qword_1000AE2B0);
    v2[0] = sub_100007258(&qword_1000AE2A0);
    v2[1] = sub_100007258(&qword_1000AE298);
    v2[2] = sub_1000095B4(&qword_1000AE2E0, &qword_1000AE2A0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    v2[3] = sub_1000095B4(&qword_1000AE2E8, &qword_1000AE298, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AE2F8);
  }
  return result;
}

_QWORD *sub_10003F120@<X0>(_QWORD *a1@<X8>)
{
  return sub_100017810((uint64_t (*)(void))sub_10003F158, (uint64_t)&_s12TitleFontKeyON, a1);
}

uint64_t sub_10003F134(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100014858(a1, a2, a3, a4, (uint64_t (*)(void))sub_10003F158, (uint64_t)&_s12TitleFontKeyON);
}

unint64_t sub_10003F158()
{
  unint64_t result;

  result = qword_1000AE300;
  if (!qword_1000AE300)
  {
    result = swift_getWitnessTable(&unk_10008AEF0, &_s12TitleFontKeyON);
    atomic_store(result, (unint64_t *)&qword_1000AE300);
  }
  return result;
}

uint64_t sub_10003F19C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10002D4D4(*(_QWORD **)(v1 + 16), a1);
}

unint64_t sub_10003F1A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AE328;
  if (!qword_1000AE328)
  {
    v1 = sub_100007258(&qword_1000AE320);
    sub_1000095B4(&qword_1000AE330, &qword_1000AE338, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AE328);
  }
  return result;
}

unint64_t sub_10003F228()
{
  unint64_t result;

  result = qword_1000AE348;
  if (!qword_1000AE348)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1000AE348);
  }
  return result;
}

uint64_t type metadata accessor for TTRAnyListWidget.InteractiveNoRemindersView(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000AE660, (uint64_t)&nominal type descriptor for TTRAnyListWidget.InteractiveNoRemindersView);
}

unint64_t sub_10003F280()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AE378;
  if (!qword_1000AE378)
  {
    v1 = sub_100007258(&qword_1000AE370);
    sub_100007218(&qword_1000AE380, type metadata accessor for TTRAnyListWidget.InteractiveNoRemindersView, (uint64_t)&unk_10008AEA0);
    sub_1000095B4(&qword_1000AE388, &qword_1000AE390, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AE378);
  }
  return result;
}

unint64_t sub_10003F31C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AE398;
  if (!qword_1000AE398)
  {
    v1 = sub_100007258(&qword_1000AE360);
    sub_1000095B4(&qword_1000AE3A0, &qword_1000AE3A8, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
    sub_10003F3A0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AE398);
  }
  return result;
}

unint64_t sub_10003F3A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AE3B0;
  if (!qword_1000AE3B0)
  {
    v1 = sub_100007258(&qword_1000AE3B8);
    sub_1000095B4(&qword_1000AE3C0, &qword_1000AE3C8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AE3B0);
  }
  return result;
}

_QWORD *sub_10003F41C@<X0>(_QWORD *a1@<X8>)
{
  return sub_100017810((uint64_t (*)(void))sub_10003F454, (uint64_t)&_s17NoReminderFontKeyON, a1);
}

uint64_t sub_10003F430(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100014858(a1, a2, a3, a4, (uint64_t (*)(void))sub_10003F454, (uint64_t)&_s17NoReminderFontKeyON);
}

unint64_t sub_10003F454()
{
  unint64_t result;

  result = qword_1000AE3D0;
  if (!qword_1000AE3D0)
  {
    result = swift_getWitnessTable(&unk_10008AE68, &_s17NoReminderFontKeyON);
    atomic_store(result, (unint64_t *)&qword_1000AE3D0);
  }
  return result;
}

uint64_t sub_10003F498@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_10001D6C4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10003F4C0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  id *v8;
  int *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v1 = (int *)type metadata accessor for TTRAnyListWidget.InteractiveSmall(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 56));
  v7 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v8 = (id *)(v0 + v4 + v7[9]);
  v9 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48))(v8, 1, v9))
  {
    v26 = v5;
    v27 = v0;

    v10 = (char *)v8 + v9[6];
    v11 = type metadata accessor for AttributedString(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    v13 = (char *)v8 + v9[7];
    v14 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);

    v5 = v26;
    v0 = v27;
  }

  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[11] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[13] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[14] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[16] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[17]));
  v15 = v6 + v7[18];
  v16 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[19]));
  sub_10003D1A0(*(_QWORD *)(v6 + v1[5]), *(_BYTE *)(v6 + v1[5] + 8));
  v17 = (_QWORD *)(v6 + v1[6]);
  v18 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
  }
  else
  {
    swift_release(*v17);
  }
  v20 = (_QWORD *)(v6 + v1[7]);
  v21 = sub_100006DA4(&qword_1000AE070);
  if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
  {
    v22 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v20, v22);
  }
  else
  {
    swift_release(*v20);
  }
  swift_release(*(_QWORD *)(v6 + v1[8]));
  sub_10003D1A0(*(_QWORD *)(v6 + v1[9]), *(_BYTE *)(v6 + v1[9] + 8));
  sub_10003D1A0(*(_QWORD *)(v6 + v1[10]), *(_BYTE *)(v6 + v1[10] + 8));
  v23 = (_QWORD *)(v6 + v1[11]);
  if (swift_getEnumCaseMultiPayload(v23, v18) == 1)
  {
    v24 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  }
  else
  {
    swift_release(*v23);
  }
  return swift_deallocObject(v0, ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

uint64_t sub_10003F7DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(type metadata accessor for TTRAnyListWidget.InteractiveSmall(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_10002E388(a1, a2, v3 + v8, *(_QWORD *)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8)), a3);
}

uint64_t type metadata accessor for TTRAnyListWidget.InteractiveReminderView(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000AE5B8, (uint64_t)&nominal type descriptor for TTRAnyListWidget.InteractiveReminderView);
}

_QWORD *sub_10003F85C@<X0>(_QWORD *a1@<X8>)
{
  return sub_100017810((uint64_t (*)(void))sub_10003F990, (uint64_t)&_s14HashtagFontKeyON, a1);
}

uint64_t sub_10003F870(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100014858(a1, a2, a3, a4, (uint64_t (*)(void))sub_10003F990, (uint64_t)&_s14HashtagFontKeyON);
}

_QWORD *sub_10003F894@<X0>(_QWORD *a1@<X8>)
{
  return sub_100017810((uint64_t (*)(void))sub_10003F94C, (uint64_t)&_s15HashtagColorKeyON, a1);
}

uint64_t sub_10003F8A8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100014858(a1, a2, a3, a4, (uint64_t (*)(void))sub_10003F94C, (uint64_t)&_s15HashtagColorKeyON);
}

double sub_10003F8CC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  if (a3 != -1)
  {
    sub_10003CEB8(a2, a3 & 1);
    *(_QWORD *)&result = swift_retain(a4).n128_u64[0];
  }
  return result;
}

uint64_t sub_10003F90C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t result;

  if (a3 != -1)
  {
    sub_10003D1A0(a2, a3 & 1);
    return swift_release(a4);
  }
  return result;
}

unint64_t sub_10003F94C()
{
  unint64_t result;

  result = qword_1000AE3F8;
  if (!qword_1000AE3F8)
  {
    result = swift_getWitnessTable(&unk_10008AE30, &_s15HashtagColorKeyON);
    atomic_store(result, (unint64_t *)&qword_1000AE3F8);
  }
  return result;
}

unint64_t sub_10003F990()
{
  unint64_t result;

  result = qword_1000AE400;
  if (!qword_1000AE400)
  {
    result = swift_getWitnessTable(&unk_10008ADF8, &_s14HashtagFontKeyON);
    atomic_store(result, (unint64_t *)&qword_1000AE400);
  }
  return result;
}

uint64_t type metadata accessor for TTRAnyListWidget.TitleTextView(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000AE6F8, (uint64_t)&nominal type descriptor for TTRAnyListWidget.TitleTextView);
}

_QWORD *sub_10003F9F0@<X0>(_QWORD *a1@<X8>)
{
  return sub_100017810((uint64_t (*)(void))sub_10003FA28, (uint64_t)&_s12CountFontKeyON, a1);
}

uint64_t sub_10003FA04(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100014858(a1, a2, a3, a4, (uint64_t (*)(void))sub_10003FA28, (uint64_t)&_s12CountFontKeyON);
}

unint64_t sub_10003FA28()
{
  unint64_t result;

  result = qword_1000AE428;
  if (!qword_1000AE428)
  {
    result = swift_getWitnessTable(&unk_10008ADC0, &_s12CountFontKeyON);
    atomic_store(result, (unint64_t *)&qword_1000AE428);
  }
  return result;
}

uint64_t sub_10003FA6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  id *v8;
  int *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v1 = type metadata accessor for TTRAnyListWidget.InteractiveMedium(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 56));
  v7 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v8 = (id *)(v0 + v4 + v7[9]);
  v9 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48))(v8, 1, v9))
  {
    v21 = v5;
    v22 = v0;

    v10 = (char *)v8 + v9[6];
    v11 = type metadata accessor for AttributedString(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    v13 = (char *)v8 + v9[7];
    v14 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);

    v5 = v21;
    v0 = v22;
  }

  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[11] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[13] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[14] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[16] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[17]));
  v15 = v6 + v7[18];
  v16 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[19]));
  v17 = (_QWORD *)(v6 + *(int *)(v1 + 20));
  v18 = sub_100006DA4(&qword_1000AE070);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
  }
  else
  {
    swift_release(*v17);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10003FC9C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRAnyListWidget.InteractiveMedium(0) - 8) + 80);
  return sub_10002E930(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000AE828, (uint64_t)&nominal type descriptor for TTRAnyListWidget.InteractiveVerticalContentView);
}

uint64_t sub_10003FCFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10002F100(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10003FD04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AE490;
  if (!qword_1000AE490)
  {
    v1 = sub_100007258(&qword_1000AE498);
    sub_100007218(&qword_1000AE4A0, type metadata accessor for TTRAnyListWidget.MediumHeaderView, (uint64_t)&unk_10008AD70);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AE490);
  }
  return result;
}

uint64_t type metadata accessor for TTRAnyListWidget.MediumHeaderView(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000AE798, (uint64_t)&nominal type descriptor for TTRAnyListWidget.MediumHeaderView);
}

unint64_t sub_10003FD9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AE4B8;
  if (!qword_1000AE4B8)
  {
    v1 = sub_100007258(&qword_1000AE450);
    sub_100007218(&qword_1000AE4C0, type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView, (uint64_t)&unk_10008AD20);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AE4B8);
  }
  return result;
}

unint64_t sub_10003FE20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AE4F0;
  if (!qword_1000AE4F0)
  {
    v1 = sub_100007258(&qword_1000AE4D8);
    sub_1000095B4(&qword_1000AE4F8, &qword_1000AE4D0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AE4F0);
  }
  return result;
}

uint64_t sub_10003FEA4()
{
  uint64_t v0;

  return sub_10002FDE4(*(_QWORD *)(v0 + 16));
}

unint64_t sub_10003FEAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AE528;
  if (!qword_1000AE528)
  {
    v1 = sub_100007258(&qword_1000AE520);
    sub_100007218(&qword_1000AE530, type metadata accessor for TTRAnyListWidget.LargeHeaderView, (uint64_t)&unk_10008ACD0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AE528);
  }
  return result;
}

uint64_t type metadata accessor for TTRAnyListWidget.LargeHeaderView(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000AE8C8, (uint64_t)&nominal type descriptor for TTRAnyListWidget.LargeHeaderView);
}

unint64_t sub_10003FF44()
{
  unint64_t result;

  result = qword_1000AE548;
  if (!qword_1000AE548)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Color, &type metadata for Color);
    atomic_store(result, (unint64_t *)&qword_1000AE548);
  }
  return result;
}

ValueMetadata *_s12CountFontKeyOMa()
{
  return &_s12CountFontKeyON;
}

ValueMetadata *_s14HashtagFontKeyOMa()
{
  return &_s14HashtagFontKeyON;
}

ValueMetadata *_s15HashtagColorKeyOMa()
{
  return &_s15HashtagColorKeyON;
}

ValueMetadata *_s17NoReminderFontKeyOMa()
{
  return &_s17NoReminderFontKeyON;
}

ValueMetadata *_s12TitleFontKeyOMa()
{
  return &_s12TitleFontKeyON;
}

uint64_t destroy for TTRAnyListWidget.DottedDividerHorizontal(uint64_t a1)
{
  sub_10003D1A0(*(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return swift_release(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for TTRAnyListWidget.DottedDividerHorizontal(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 16);
  sub_10003CEB8(v4, v5);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  swift_retain(v6);
  return a1;
}

uint64_t assignWithCopy for TTRAnyListWidget.DottedDividerHorizontal(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10003CEB8(v4, v5);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_10003D1A0(v6, v7);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_BYTE *)(a2 + 32);
  v10 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = v9;
  swift_retain(v8);
  swift_release(v10);
  return a1;
}

__n128 initializeWithTake for TTRAnyListWidget.DottedDividerHorizontal(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TTRAnyListWidget.DottedDividerHorizontal(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_10003D1A0(v6, v7);
  v8 = *(_BYTE *)(a2 + 32);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v8;
  swift_release(v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRAnyListWidget.DottedDividerHorizontal(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRAnyListWidget.DottedDividerHorizontal(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRAnyListWidget.DottedDividerHorizontal()
{
  return &type metadata for TTRAnyListWidget.DottedDividerHorizontal;
}

char *sub_1000401F4(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t *v34;
  uint64_t v35;
  char *v36;
  char **v37;
  id v38;
  char *__dst;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    v7 = a1;
    v8 = a2[1];
    *((_QWORD *)a1 + 1) = v8;
    v9 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    v10 = v9[6];
    __dst = &v7[v10];
    v11 = (char *)a2 + v10;
    v12 = type metadata accessor for AttributedString(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    v15 = v4;
    v16 = v8;
    if (v14(v11, 1, v12))
    {
      v17 = sub_100006DA4(&qword_1000ACE10);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    v18 = v9[7];
    v19 = &v7[v18];
    v20 = (uint64_t)a2 + v18;
    v21 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v22 = v9[8];
    v23 = *(char **)((char *)a2 + v22);
    *(_QWORD *)&v7[v22] = v23;
    *(_QWORD *)&v7[v9[9]] = *(char **)((char *)a2 + v9[9]);
    v7[v9[10]] = *((_BYTE *)a2 + v9[10]);
    v7[v9[11]] = *((_BYTE *)a2 + v9[11]);
    v24 = a3[6];
    *(_QWORD *)&v7[a3[5]] = *(char **)((char *)a2 + a3[5]);
    v25 = &v7[v24];
    v26 = (uint64_t)a2 + v24;
    *(_QWORD *)v25 = *(_QWORD *)v26;
    v25[8] = *(_BYTE *)(v26 + 8);
    v27 = a3[8];
    v7[a3[7]] = *((_BYTE *)a2 + a3[7]);
    v28 = &v7[v27];
    v29 = (uint64_t *)((char *)a2 + v27);
    v30 = *v29;
    LOBYTE(v29) = *((_BYTE *)v29 + 8);
    *(_QWORD *)v28 = v30;
    v28[8] = (char)v29;
    v31 = a3[9];
    v32 = a3[10];
    v33 = &v7[v31];
    v34 = (uint64_t *)((char *)a2 + v31);
    v35 = *v34;
    LOBYTE(v34) = *((_BYTE *)v34 + 8);
    *(_QWORD *)v33 = v35;
    v33[8] = (char)v34;
    v36 = &v7[v32];
    v37 = (char **)((char *)a2 + v32);
    v4 = *v37;
    LOBYTE(v37) = *((_BYTE *)v37 + 8);
    *(_QWORD *)v36 = v4;
    v36[8] = (char)v37;
    v38 = v23;
    swift_retain(v30);
    swift_retain(v35);
  }
  swift_retain(v4);
  return v7;
}

uint64_t sub_100040408(id *a1, int *a2)
{
  int *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v4 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v5 = (char *)a1 + v4[6];
  v6 = type metadata accessor for AttributedString(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  v8 = (char *)a1 + v4[7];
  v9 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);

  swift_release(*(id *)((char *)a1 + a2[8]));
  swift_release(*(id *)((char *)a1 + a2[9]));
  return swift_release(*(id *)((char *)a1 + a2[10]));
}

_QWORD *sub_1000404E4(_QWORD *a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  int *v8;
  uint64_t v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  uint64_t v34;
  char *v35;
  uint64_t *v36;
  uint64_t v37;
  id v38;
  char *__dst;

  v6 = *(void **)a2;
  v7 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v7;
  v8 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v9 = v8[6];
  __dst = (char *)a1 + v9;
  v10 = (const void *)(a2 + v9);
  v11 = type metadata accessor for AttributedString(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v6;
  v15 = v7;
  if (v13(v10, 1, v11))
  {
    v16 = sub_100006DA4(&qword_1000ACE10);
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  v17 = v8[7];
  v18 = (char *)a1 + v17;
  v19 = a2 + v17;
  v20 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  v21 = v8[8];
  v22 = *(void **)(a2 + v21);
  *(_QWORD *)((char *)a1 + v21) = v22;
  *(_QWORD *)((char *)a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  *((_BYTE *)a1 + v8[10]) = *(_BYTE *)(a2 + v8[10]);
  *((_BYTE *)a1 + v8[11]) = *(_BYTE *)(a2 + v8[11]);
  v23 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v24 = (char *)a1 + v23;
  v25 = a2 + v23;
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v24[8] = *(_BYTE *)(v25 + 8);
  v26 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v27 = (char *)a1 + v26;
  v28 = (uint64_t *)(a2 + v26);
  v29 = *v28;
  LOBYTE(v28) = *((_BYTE *)v28 + 8);
  *(_QWORD *)v27 = v29;
  v27[8] = (char)v28;
  v30 = a3[9];
  v31 = a3[10];
  v32 = (char *)a1 + v30;
  v33 = (uint64_t *)(a2 + v30);
  v34 = *v33;
  LOBYTE(v33) = *((_BYTE *)v33 + 8);
  *(_QWORD *)v32 = v34;
  v32[8] = (char)v33;
  v35 = (char *)a1 + v31;
  v36 = (uint64_t *)(a2 + v31);
  v37 = *v36;
  LOBYTE(v36) = *((_BYTE *)v36 + 8);
  *(_QWORD *)v35 = v37;
  v35[8] = (char)v36;
  v38 = v22;
  swift_retain(v29);
  swift_retain(v34);
  swift_retain(v37);
  return a1;
}

uint64_t sub_1000406D0(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  int *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a1 + 8);
  v10 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v10;
  v11 = v10;

  v12 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v13 = v12[6];
  v14 = (void *)(a1 + v13);
  v15 = (void *)(a2 + v13);
  v16 = type metadata accessor for AttributedString(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v21 = sub_100006DA4(&qword_1000ACE10);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  v22 = v12[7];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  v26 = v12[8];
  v27 = *(void **)(a1 + v26);
  v28 = *(void **)(a2 + v26);
  *(_QWORD *)(a1 + v26) = v28;
  v29 = v28;

  *(_QWORD *)(a1 + v12[9]) = *(_QWORD *)(a2 + v12[9]);
  *(_BYTE *)(a1 + v12[10]) = *(_BYTE *)(a2 + v12[10]);
  *(_BYTE *)(a1 + v12[11]) = *(_BYTE *)(a2 + v12[11]);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v30 = a3[6];
  v31 = a1 + v30;
  v32 = (uint64_t *)(a2 + v30);
  v33 = *v32;
  *(_BYTE *)(v31 + 8) = *((_BYTE *)v32 + 8);
  *(_QWORD *)v31 = v33;
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v34 = a3[8];
  v35 = (uint64_t *)(a1 + v34);
  v36 = (uint64_t *)(a2 + v34);
  v37 = *v36;
  LOBYTE(v36) = *((_BYTE *)v36 + 8);
  v38 = *v35;
  *v35 = v37;
  *((_BYTE *)v35 + 8) = (_BYTE)v36;
  swift_retain(v37);
  swift_release(v38);
  v39 = a3[9];
  v40 = (uint64_t *)(a1 + v39);
  v41 = (uint64_t *)(a2 + v39);
  v42 = *v41;
  LOBYTE(v41) = *((_BYTE *)v41 + 8);
  v43 = *v40;
  *v40 = v42;
  *((_BYTE *)v40 + 8) = (_BYTE)v41;
  swift_retain(v42);
  swift_release(v43);
  v44 = a3[10];
  v45 = (uint64_t *)(a1 + v44);
  v46 = (uint64_t *)(a2 + v44);
  v47 = *v46;
  LOBYTE(v46) = *((_BYTE *)v46 + 8);
  v48 = *v45;
  *v45 = v47;
  *((_BYTE *)v45 + 8) = (_BYTE)v46;
  swift_retain(v47);
  swift_release(v48);
  return a1;
}

_OWORD *sub_100040934(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for AttributedString(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100006DA4(&qword_1000ACE10);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = v6[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
  *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)a2 + v6[9]);
  *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
  *((_BYTE *)a1 + v6[11]) = *((_BYTE *)a2 + v6[11]);
  v17 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v20 = a3[7];
  v21 = a3[8];
  v22 = *((_BYTE *)a2 + v20);
  v18[8] = v19[8];
  *((_BYTE *)a1 + v20) = v22;
  v23 = (char *)a1 + v21;
  *(_QWORD *)v23 = *(_QWORD *)((char *)a2 + v21);
  v23[8] = *((_BYTE *)a2 + v21 + 8);
  v24 = a3[9];
  v25 = a3[10];
  v26 = (char *)a1 + v24;
  v27 = (char *)a2 + v24;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v26[8] = v27[8];
  v28 = (char *)a1 + v25;
  v29 = (char *)a2 + v25;
  *(_QWORD *)v28 = *(_QWORD *)v29;
  v28[8] = v29[8];
  return a1;
}

uint64_t sub_100040AE4(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  int *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];

  v8 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v9 = v8[6];
  v10 = (void *)(a1 + v9);
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for AttributedString(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_100006DA4(&qword_1000ACE10);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v18 = v8[7];
  v19 = a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  v22 = v8[8];
  v23 = *(void **)(a1 + v22);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)((char *)a2 + v22);

  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)((char *)a2 + v8[9]);
  *(_BYTE *)(a1 + v8[10]) = *((_BYTE *)a2 + v8[10]);
  *(_BYTE *)(a1 + v8[11]) = *((_BYTE *)a2 + v8[11]);
  v24 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  v25 = a1 + v24;
  v26 = (char *)a2 + v24;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = v26[8];
  v27 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v28 = (uint64_t *)(a1 + v27);
  v29 = (char *)a2 + v27;
  v30 = *(_QWORD *)v29;
  LOBYTE(v29) = v29[8];
  v31 = *v28;
  *v28 = v30;
  *((_BYTE *)v28 + 8) = (_BYTE)v29;
  swift_release(v31);
  v32 = a3[9];
  v33 = (uint64_t *)(a1 + v32);
  v34 = (char *)a2 + v32;
  v35 = *(_QWORD *)v34;
  LOBYTE(v34) = v34[8];
  v36 = *v33;
  *v33 = v35;
  *((_BYTE *)v33 + 8) = (_BYTE)v34;
  swift_release(v36);
  v37 = a3[10];
  v38 = (uint64_t *)(a1 + v37);
  v39 = (char *)a2 + v37;
  v40 = *(_QWORD *)v39;
  LOBYTE(v39) = v39[8];
  v41 = *v38;
  *v38 = v40;
  *((_BYTE *)v38 + 8) = (_BYTE)v39;
  swift_release(v41);
  return a1;
}

uint64_t sub_100040D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100040D28);
}

uint64_t sub_100040D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_100040DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100040DC0);
}

uint64_t sub_100040DC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  return result;
}

uint64_t sub_100040E38(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  result = type metadata accessor for TTRNewWidgetViewModel.Reminder(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = "\t";
    v4[3] = &unk_10008A980;
    v4[4] = &unk_10008A2B0;
    v4[5] = &unk_10008A2B0;
    v4[6] = &unk_10008A2B0;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRAnyListWidget.ReminderVStack()
{
  return &type metadata for TTRAnyListWidget.ReminderVStack;
}

_WORD *sub_100040EE0(_WORD *a1, uint64_t *a2, uint64_t a3)
{
  _WORD *v3;
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)v3 = *a2;
    v3 = (_WORD *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v15);
  }
  else
  {
    *a1 = *(_WORD *)a2;
    v5 = a2[1];
    v6 = *((_BYTE *)a2 + 16);
    *((_QWORD *)v3 + 1) = v5;
    *((_BYTE *)v3 + 16) = v6;
    v7 = *(int *)(a3 + 28);
    v8 = (uint64_t *)((char *)v3 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    swift_retain(v5);
    v10 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
      v12 = v8;
      v13 = v10;
      v14 = 1;
    }
    else
    {
      v16 = *v9;
      *v8 = *v9;
      swift_retain(v16);
      v12 = v8;
      v13 = v10;
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v13, v14);
  }
  return v3;
}

uint64_t sub_100040FCC(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*(_QWORD *)(a1 + 8));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 28));
  v5 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v4, v5) != 1)
    return swift_release(*v4);
  v6 = type metadata accessor for WidgetRenderingMode(0);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
}

uint64_t sub_100041044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_WORD *)a1 = *(_WORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  v6 = *(int *)(a3 + 28);
  v7 = (uint64_t *)(a1 + v6);
  v8 = (uint64_t *)(a2 + v6);
  swift_retain(v4);
  v9 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
    v11 = 1;
  }
  else
  {
    v12 = *v8;
    *v7 = *v8;
    swift_retain(v12);
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v9, v11);
  return a1;
}

uint64_t sub_1000410FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  swift_retain(v6);
  swift_release(v8);
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 28);
    v10 = (uint64_t *)(a1 + v9);
    v11 = (uint64_t *)(a2 + v9);
    sub_100009578(a1 + v9, &qword_1000ADE30);
    v12 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
      v14 = 1;
    }
    else
    {
      v15 = *v11;
      *v10 = *v11;
      swift_retain(v15);
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v12, v14);
  }
  return a1;
}

uint64_t sub_1000411E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1000412A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;

  *(_WORD *)a1 = *(_WORD *)a2;
  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v6;
  swift_release(v7);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 28);
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    sub_100009578(a1 + v8, &qword_1000ADE30);
    v11 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100041380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004138C);
}

uint64_t sub_10004138C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t IsVibrantText;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    IsVibrantText = type metadata accessor for IsVibrantText(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(IsVibrantText - 8) + 48))(a1 + *(int *)(a3 + 28), a2, IsVibrantText);
  }
}

uint64_t sub_100041400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004140C);
}

uint64_t sub_10004140C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t IsVibrantText;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 16) = -(char)a2;
  }
  else
  {
    IsVibrantText = type metadata accessor for IsVibrantText(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(IsVibrantText - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, IsVibrantText);
  }
  return result;
}

void sub_10004147C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_10008A298;
  v4[1] = &unk_10008A9D0;
  v4[2] = &unk_10008A2B0;
  sub_10003AEE4(319, (unint64_t *)&unk_1000ADEA8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

uint64_t destroy for TTRAnyListWidget.CountTextView(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[2]);
  swift_release(a1[3]);
  return swift_release(a1[5]);
}

uint64_t initializeWithCopy for TTRAnyListWidget.CountTextView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = v7;
  swift_bridgeObjectRetain(v3);
  swift_retain(v4);
  swift_retain(v6);
  return a1;
}

uint64_t assignWithCopy for TTRAnyListWidget.CountTextView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  swift_retain(v6);
  swift_release(v8);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_BYTE *)(a2 + 48);
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  swift_retain(v9);
  swift_release(v11);
  return a1;
}

__n128 initializeWithTake for TTRAnyListWidget.CountTextView(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TTRAnyListWidget.CountTextView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v4);
  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v5;
  swift_release(v6);
  v7 = *(_BYTE *)(a2 + 48);
  v8 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = v7;
  swift_release(v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRAnyListWidget.CountTextView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRAnyListWidget.CountTextView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRAnyListWidget.CountTextView()
{
  return &type metadata for TTRAnyListWidget.CountTextView;
}

_QWORD *sub_10004176C(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  void **v11;
  int *v12;
  uint64_t v13;
  unsigned int (*v14)(void **, uint64_t, int *);
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void (*v31)(void **, _QWORD, uint64_t, int *);
  id v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  char *v79;
  void (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  char *v82;
  char *v83;
  void **__dst;
  void *__dsta;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    v7 = a2[4];
    *(_QWORD *)(a1 + 32) = v7;
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v8 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v8;
    v9 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
    v10 = v9[9];
    __dst = (void **)((char *)v4 + v10);
    v11 = (void **)((char *)a2 + v10);
    v12 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    v13 = *((_QWORD *)v12 - 1);
    v14 = *(unsigned int (**)(void **, uint64_t, int *))(v13 + 48);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    if (v14(v11, 1, v12))
    {
      v15 = sub_100006DA4(&qword_1000ACCD8);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v17 = *v11;
      v18 = v11[1];
      *__dst = *v11;
      __dst[1] = v18;
      v19 = v12[6];
      v79 = (char *)__dst + v19;
      v82 = (char *)v11 + v19;
      v20 = type metadata accessor for AttributedString(0);
      v78 = *(_QWORD *)(v20 - 8);
      v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
      v22 = v17;
      v23 = v18;
      if (v21(v82, 1, v20))
      {
        v24 = sub_100006DA4(&qword_1000ACE10);
        memcpy(v79, v82, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v79, v82, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v79, 0, 1, v20);
      }
      v25 = v12[7];
      v26 = (char *)__dst + v25;
      v27 = (char *)v11 + v25;
      v28 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      v29 = v12[8];
      v30 = *(void **)((char *)v11 + v29);
      *(void **)((char *)__dst + v29) = v30;
      *(void **)((char *)__dst + v12[9]) = *(void **)((char *)v11 + v12[9]);
      *((_BYTE *)__dst + v12[10]) = *((_BYTE *)v11 + v12[10]);
      *((_BYTE *)__dst + v12[11]) = *((_BYTE *)v11 + v12[11]);
      v31 = *(void (**)(void **, _QWORD, uint64_t, int *))(v13 + 56);
      v32 = v30;
      v31(__dst, 0, 1, v12);
    }
    v33 = v9[10];
    __dsta = *(void **)((char *)a2 + v33);
    *(_QWORD *)((char *)v4 + v33) = __dsta;
    v34 = v9[11];
    v35 = (_QWORD *)((char *)v4 + v34);
    v36 = (uint64_t *)((char *)a2 + v34);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = v9[12];
    v39 = *(void **)((char *)a2 + v38);
    *(_QWORD *)((char *)v4 + v38) = v39;
    v40 = v9[13];
    v41 = (_QWORD *)((char *)v4 + v40);
    v42 = (uint64_t *)((char *)a2 + v40);
    v43 = v42[1];
    *v41 = *v42;
    v41[1] = v43;
    v44 = v9[14];
    v45 = (_QWORD *)((char *)v4 + v44);
    v46 = (uint64_t *)((char *)a2 + v44);
    v47 = v46[1];
    *v45 = *v46;
    v45[1] = v47;
    *((_BYTE *)v4 + v9[15]) = *((_BYTE *)a2 + v9[15]);
    v48 = v9[16];
    v49 = (_QWORD *)((char *)v4 + v48);
    v50 = (uint64_t *)((char *)a2 + v48);
    v51 = v50[1];
    *v49 = *v50;
    v49[1] = v51;
    v52 = v9[17];
    v53 = *(uint64_t *)((char *)a2 + v52);
    *(_QWORD *)((char *)v4 + v52) = v53;
    v54 = v9[18];
    v81 = (uint64_t)a2 + v54;
    v83 = (char *)v4 + v54;
    v55 = type metadata accessor for URL(0);
    v80 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
    v56 = __dsta;
    swift_bridgeObjectRetain(v37);
    v57 = v39;
    swift_bridgeObjectRetain(v43);
    swift_bridgeObjectRetain(v47);
    swift_bridgeObjectRetain(v51);
    swift_bridgeObjectRetain(v53);
    v80(v83, v81, v55);
    v58 = v9[19];
    v59 = *(uint64_t *)((char *)a2 + v58);
    *(_QWORD *)((char *)v4 + v58) = v59;
    *((_BYTE *)v4 + v9[20]) = *((_BYTE *)a2 + v9[20]);
    v60 = a3[6];
    *(_QWORD *)((char *)v4 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v61 = (char *)v4 + v60;
    v62 = (uint64_t *)((char *)a2 + v60);
    v63 = *v62;
    LOBYTE(v62) = *((_BYTE *)v62 + 8);
    *(_QWORD *)v61 = v63;
    v61[8] = (char)v62;
    v64 = a3[7];
    v65 = (char *)v4 + v64;
    v66 = (uint64_t *)((char *)a2 + v64);
    v67 = *v66;
    LOBYTE(v37) = *((_BYTE *)v66 + 8);
    swift_bridgeObjectRetain(v59);
    swift_retain(v63);
    j__swift_retain(v67);
    *(_QWORD *)v65 = v67;
    v65[8] = v37;
    v68 = a3[8];
    v69 = (_QWORD *)((char *)v4 + v68);
    v70 = (uint64_t *)((char *)a2 + v68);
    v71 = sub_100006DA4(&qword_1000ADED8);
    if (swift_getEnumCaseMultiPayload(v70, v71) == 1)
    {
      v72 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v69, v70, v72);
      v73 = v69;
      v74 = v71;
      v75 = 1;
    }
    else
    {
      v76 = *v70;
      *v69 = *v70;
      swift_retain(v76);
      v73 = v69;
      v74 = v71;
      v75 = 0;
    }
    swift_storeEnumTagMultiPayload(v73, v74, v75);
  }
  return v4;
}

uint64_t sub_100041B9C(_QWORD *a1, int *a2)
{
  int *v4;
  id *v5;
  int *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[4]);
  swift_bridgeObjectRelease(a1[7]);
  v4 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v5 = (id *)((char *)a1 + v4[9]);
  v6 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v5, 1, v6))
  {

    v7 = (char *)v5 + v6[6];
    v8 = type metadata accessor for AttributedString(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    v10 = (char *)v5 + v6[7];
    v11 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);

  }
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[11] + 8));

  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[13] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[14] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[16] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[17]));
  v12 = (char *)a1 + v4[18];
  v13 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[19]));
  swift_release(*(_QWORD *)((char *)a1 + a2[6]));
  j__swift_release(*(_QWORD *)((char *)a1 + a2[7]));
  v14 = (_QWORD *)((char *)a1 + a2[8]);
  v15 = sub_100006DA4(&qword_1000ADED8);
  if (swift_getEnumCaseMultiPayload(v14, v15) != 1)
    return swift_release(*v14);
  v16 = type metadata accessor for RedactionReasons(0);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
}

uint64_t sub_100041DBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void **v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(void **, uint64_t, int *);
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void (*v29)(void **, _QWORD, uint64_t, int *);
  id v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  char *v75;
  void (*v76)(uint64_t, void *, uint64_t);
  char *v77;
  void *v78;
  uint64_t v79;
  void **__dst;
  void *__dsta;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v9 = v8[9];
  __dst = (void **)(a1 + v9);
  v10 = (void **)(a2 + v9);
  v11 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(unsigned int (**)(void **, uint64_t, int *))(v12 + 48);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  if (v13(v10, 1, v11))
  {
    v14 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = *v10;
    v16 = v10[1];
    *__dst = *v10;
    __dst[1] = v16;
    v17 = v11[6];
    v75 = (char *)v10 + v17;
    v77 = (char *)__dst + v17;
    v18 = type metadata accessor for AttributedString(0);
    v74 = *(_QWORD *)(v18 - 8);
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
    v20 = v15;
    v21 = v16;
    if (v19(v75, 1, v18))
    {
      v22 = sub_100006DA4(&qword_1000ACE10);
      memcpy(v77, v75, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v77, v75, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v77, 0, 1, v18);
    }
    v23 = v11[7];
    v24 = (char *)__dst + v23;
    v25 = (char *)v10 + v23;
    v26 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
    v27 = v11[8];
    v28 = *(void **)((char *)v10 + v27);
    *(void **)((char *)__dst + v27) = v28;
    *(void **)((char *)__dst + v11[9]) = *(void **)((char *)v10 + v11[9]);
    *((_BYTE *)__dst + v11[10]) = *((_BYTE *)v10 + v11[10]);
    *((_BYTE *)__dst + v11[11]) = *((_BYTE *)v10 + v11[11]);
    v29 = *(void (**)(void **, _QWORD, uint64_t, int *))(v12 + 56);
    v30 = v28;
    v29(__dst, 0, 1, v11);
  }
  v31 = v8[10];
  __dsta = *(void **)(a2 + v31);
  *(_QWORD *)(a1 + v31) = __dsta;
  v32 = v8[11];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  v36 = v8[12];
  v37 = *(void **)(a2 + v36);
  *(_QWORD *)(a1 + v36) = v37;
  v38 = v8[13];
  v39 = (_QWORD *)(a1 + v38);
  v40 = (_QWORD *)(a2 + v38);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v42 = v8[14];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (_QWORD *)(a2 + v42);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  *(_BYTE *)(a1 + v8[15]) = *(_BYTE *)(a2 + v8[15]);
  v46 = v8[16];
  v47 = (_QWORD *)(a1 + v46);
  v48 = (_QWORD *)(a2 + v46);
  v49 = v48[1];
  *v47 = *v48;
  v47[1] = v49;
  v50 = v8[17];
  v51 = *(_QWORD *)(a2 + v50);
  *(_QWORD *)(a1 + v50) = v51;
  v52 = v8[18];
  v78 = (void *)(a2 + v52);
  v79 = a1 + v52;
  v53 = type metadata accessor for URL(0);
  v76 = *(void (**)(uint64_t, void *, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
  v54 = __dsta;
  swift_bridgeObjectRetain(v35);
  v55 = v37;
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRetain(v45);
  swift_bridgeObjectRetain(v49);
  swift_bridgeObjectRetain(v51);
  v76(v79, v78, v53);
  v56 = v8[19];
  v57 = *(_QWORD *)(a2 + v56);
  *(_QWORD *)(a1 + v56) = v57;
  *(_BYTE *)(a1 + v8[20]) = *(_BYTE *)(a2 + v8[20]);
  v58 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v59 = a1 + v58;
  v60 = (uint64_t *)(a2 + v58);
  v61 = *v60;
  LOBYTE(v60) = *((_BYTE *)v60 + 8);
  *(_QWORD *)v59 = v61;
  *(_BYTE *)(v59 + 8) = (_BYTE)v60;
  v62 = a3[7];
  v63 = a1 + v62;
  v64 = (uint64_t *)(a2 + v62);
  v65 = *v64;
  LOBYTE(v35) = *((_BYTE *)v64 + 8);
  swift_bridgeObjectRetain(v57);
  swift_retain(v61);
  j__swift_retain(v65);
  *(_QWORD *)v63 = v65;
  *(_BYTE *)(v63 + 8) = v35;
  v66 = a3[8];
  v67 = (uint64_t *)(a1 + v66);
  v68 = (uint64_t *)(a2 + v66);
  v69 = sub_100006DA4(&qword_1000ADED8);
  if (swift_getEnumCaseMultiPayload(v68, v69) == 1)
  {
    v70 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v67, v68, v70);
    v71 = 1;
  }
  else
  {
    v72 = *v68;
    *v67 = *v68;
    swift_retain(v72);
    v71 = 0;
  }
  swift_storeEnumTagMultiPayload(v67, v69, v71);
  return a1;
}

uint64_t sub_1000421B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  int *v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD *, uint64_t, int *);
  int v19;
  int v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  size_t v41;
  void *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void (*v49)(_QWORD *, _QWORD, uint64_t, int *);
  id v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  id v58;
  uint64_t v59;
  void *v60;
  void *v61;
  id v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  id v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  unsigned int (*__src)(char *, uint64_t, uint64_t);
  char *__dst;
  void *__dsta;
  int *v121;
  int *v122;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v13 = v12[9];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v17 = *((_QWORD *)v16 - 1);
  v18 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (v20)
    {
      sub_100007EB4((uint64_t)v14, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    v122 = a3;
    v29 = (void *)*v15;
    v30 = (void *)*v14;
    *v14 = *v15;
    v31 = v29;

    v32 = (void *)v14[1];
    v33 = (void *)v15[1];
    v14[1] = v33;
    v34 = v33;

    v35 = v16[6];
    v36 = (char *)v14 + v35;
    v37 = (char *)v15 + v35;
    v38 = type metadata accessor for AttributedString(0);
    v117 = *(_QWORD *)(v38 - 8);
    v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v117 + 48);
    __dsta = v36;
    LODWORD(v36) = v39(v36, 1, v38);
    v40 = v39(v37, 1, v38);
    if ((_DWORD)v36)
    {
      if (!v40)
      {
        (*(void (**)(void *, char *, uint64_t))(v117 + 16))(__dsta, v37, v38);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v117 + 56))(__dsta, 0, 1, v38);
        goto LABEL_18;
      }
      v41 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v42 = __dsta;
    }
    else
    {
      if (!v40)
      {
        (*(void (**)(void *, char *, uint64_t))(v117 + 24))(__dsta, v37, v38);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v117 + 8))(__dsta, v38);
      v41 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v42 = __dsta;
    }
    memcpy(v42, v37, v41);
LABEL_18:
    v51 = v16[7];
    v52 = (char *)v14 + v51;
    v53 = (char *)v15 + v51;
    v54 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
    v55 = v16[8];
    v56 = *(void **)((char *)v14 + v55);
    v57 = *(void **)((char *)v15 + v55);
    *(_QWORD *)((char *)v14 + v55) = v57;
    v58 = v57;

    *(_QWORD *)((char *)v14 + v16[9]) = *(_QWORD *)((char *)v15 + v16[9]);
    *((_BYTE *)v14 + v16[10]) = *((_BYTE *)v15 + v16[10]);
    *((_BYTE *)v14 + v16[11]) = *((_BYTE *)v15 + v16[11]);
    a3 = v122;
    goto LABEL_19;
  }
  if (v20)
  {
LABEL_7:
    v28 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_19;
  }
  v21 = (void *)*v15;
  *v14 = *v15;
  v22 = (void *)v15[1];
  v14[1] = v22;
  v23 = v16[6];
  __dst = (char *)v14 + v23;
  v121 = a3;
  v116 = (char *)v15 + v23;
  v24 = type metadata accessor for AttributedString(0);
  v115 = *(_QWORD *)(v24 - 8);
  __src = *(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48);
  v25 = v21;
  v26 = v22;
  if (__src(v116, 1, v24))
  {
    v27 = sub_100006DA4(&qword_1000ACE10);
    memcpy(__dst, v116, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v115 + 16))(__dst, v116, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(__dst, 0, 1, v24);
  }
  a3 = v121;
  v43 = v16[7];
  v44 = (char *)v14 + v43;
  v45 = (char *)v15 + v43;
  v46 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = v16[8];
  v48 = *(void **)((char *)v15 + v47);
  *(_QWORD *)((char *)v14 + v47) = v48;
  *(_QWORD *)((char *)v14 + v16[9]) = *(_QWORD *)((char *)v15 + v16[9]);
  *((_BYTE *)v14 + v16[10]) = *((_BYTE *)v15 + v16[10]);
  *((_BYTE *)v14 + v16[11]) = *((_BYTE *)v15 + v16[11]);
  v49 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v17 + 56);
  v50 = v48;
  v49(v14, 0, 1, v16);
LABEL_19:
  v59 = v12[10];
  v60 = *(void **)(a2 + v59);
  v61 = *(void **)(a1 + v59);
  *(_QWORD *)(a1 + v59) = v60;
  v62 = v60;

  v63 = v12[11];
  v64 = (_QWORD *)(a1 + v63);
  v65 = (_QWORD *)(a2 + v63);
  *v64 = *v65;
  v66 = v65[1];
  v67 = v64[1];
  v64[1] = v66;
  swift_bridgeObjectRetain(v66);
  swift_bridgeObjectRelease(v67);
  v68 = v12[12];
  v69 = *(void **)(a1 + v68);
  v70 = *(void **)(a2 + v68);
  *(_QWORD *)(a1 + v68) = v70;
  v71 = v70;

  v72 = v12[13];
  v73 = (_QWORD *)(a1 + v72);
  v74 = (_QWORD *)(a2 + v72);
  *v73 = *v74;
  v75 = v74[1];
  v76 = v73[1];
  v73[1] = v75;
  swift_bridgeObjectRetain(v75);
  swift_bridgeObjectRelease(v76);
  v77 = v12[14];
  v78 = (_QWORD *)(a1 + v77);
  v79 = (_QWORD *)(a2 + v77);
  *v78 = *v79;
  v80 = v79[1];
  v81 = v78[1];
  v78[1] = v80;
  swift_bridgeObjectRetain(v80);
  swift_bridgeObjectRelease(v81);
  *(_BYTE *)(a1 + v12[15]) = *(_BYTE *)(a2 + v12[15]);
  v82 = v12[16];
  v83 = (_QWORD *)(a1 + v82);
  v84 = (_QWORD *)(a2 + v82);
  *v83 = *v84;
  v85 = v84[1];
  v86 = v83[1];
  v83[1] = v85;
  swift_bridgeObjectRetain(v85);
  swift_bridgeObjectRelease(v86);
  v87 = v12[17];
  v88 = *(_QWORD *)(a1 + v87);
  v89 = *(_QWORD *)(a2 + v87);
  *(_QWORD *)(a1 + v87) = v89;
  swift_bridgeObjectRetain(v89);
  swift_bridgeObjectRelease(v88);
  v90 = v12[18];
  v91 = a1 + v90;
  v92 = a2 + v90;
  v93 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 24))(v91, v92, v93);
  v94 = v12[19];
  v95 = *(_QWORD *)(a2 + v94);
  v96 = *(_QWORD *)(a1 + v94);
  *(_QWORD *)(a1 + v94) = v95;
  swift_bridgeObjectRetain(v95);
  swift_bridgeObjectRelease(v96);
  *(_BYTE *)(a1 + v12[20]) = *(_BYTE *)(a2 + v12[20]);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v97 = a3[6];
  v98 = (uint64_t *)(a1 + v97);
  v99 = (uint64_t *)(a2 + v97);
  v100 = *v99;
  LOBYTE(v99) = *((_BYTE *)v99 + 8);
  v101 = *v98;
  *v98 = v100;
  *((_BYTE *)v98 + 8) = (_BYTE)v99;
  swift_retain(v100);
  swift_release(v101);
  v102 = a3[7];
  v103 = (uint64_t *)(a1 + v102);
  v104 = (uint64_t *)(a2 + v102);
  v105 = *v104;
  LOBYTE(v96) = *((_BYTE *)v104 + 8);
  j__swift_retain(*v104);
  v106 = *v103;
  *v103 = v105;
  *((_BYTE *)v103 + 8) = v96;
  j__swift_release(v106);
  if (a1 != a2)
  {
    v107 = a3[8];
    v108 = (uint64_t *)(a1 + v107);
    v109 = (uint64_t *)(a2 + v107);
    sub_100009578(a1 + v107, &qword_1000ADED8);
    v110 = sub_100006DA4(&qword_1000ADED8);
    if (swift_getEnumCaseMultiPayload(v109, v110) == 1)
    {
      v111 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v111 - 8) + 16))(v108, v109, v111);
      v112 = 1;
    }
    else
    {
      v113 = *v109;
      *v108 = *v109;
      swift_retain(v113);
      v112 = 0;
    }
    swift_storeEnumTagMultiPayload(v108, v110, v112);
  }
  return a1;
}

uint64_t sub_100042828(uint64_t a1, uint64_t a2, int *a3)
{
  int *v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char *__dst;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v6 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v7 = v6[9];
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    v13 = v10[6];
    v38 = v11;
    __dst = (char *)v8 + v13;
    v14 = (char *)v9 + v13;
    v15 = type metadata accessor for AttributedString(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_100006DA4(&qword_1000ACE10);
      memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    v18 = v10[7];
    v19 = (char *)v8 + v18;
    v20 = (char *)v9 + v18;
    v21 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    *(_QWORD *)((char *)v8 + v10[8]) = *(_QWORD *)((char *)v9 + v10[8]);
    *(_QWORD *)((char *)v8 + v10[9]) = *(_QWORD *)((char *)v9 + v10[9]);
    *((_BYTE *)v8 + v10[10]) = *((_BYTE *)v9 + v10[10]);
    *((_BYTE *)v8 + v10[11]) = *((_BYTE *)v9 + v10[11]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v38 + 56))(v8, 0, 1, v10);
  }
  *(_QWORD *)(a1 + v6[10]) = *(_QWORD *)(a2 + v6[10]);
  *(_OWORD *)(a1 + v6[11]) = *(_OWORD *)(a2 + v6[11]);
  *(_QWORD *)(a1 + v6[12]) = *(_QWORD *)(a2 + v6[12]);
  *(_OWORD *)(a1 + v6[13]) = *(_OWORD *)(a2 + v6[13]);
  *(_OWORD *)(a1 + v6[14]) = *(_OWORD *)(a2 + v6[14]);
  *(_BYTE *)(a1 + v6[15]) = *(_BYTE *)(a2 + v6[15]);
  *(_OWORD *)(a1 + v6[16]) = *(_OWORD *)(a2 + v6[16]);
  *(_QWORD *)(a1 + v6[17]) = *(_QWORD *)(a2 + v6[17]);
  v22 = v6[18];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  *(_QWORD *)(a1 + v6[19]) = *(_QWORD *)(a2 + v6[19]);
  *(_BYTE *)(a1 + v6[20]) = *(_BYTE *)(a2 + v6[20]);
  v26 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  v29 = a3[7];
  v30 = a3[8];
  v31 = a1 + v29;
  v32 = a2 + v29;
  *(_BYTE *)(v31 + 8) = *(_BYTE *)(v32 + 8);
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v33 = (void *)(a1 + v30);
  v34 = (const void *)(a2 + v30);
  v35 = sub_100006DA4(&qword_1000ADED8);
  if (swift_getEnumCaseMultiPayload(v34, v35) == 1)
  {
    v36 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v33, v34, v36);
    swift_storeEnumTagMultiPayload(v33, v35, 1);
  }
  else
  {
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100042B64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  int *v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD *, uint64_t, int *);
  int v18;
  int v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  size_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  const void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  char *__dst;
  void *__dsta;
  int *v101;
  int *v102;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v8);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease(v10);
  v11 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v12 = v11[9];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v16 = *((_QWORD *)v15 - 1);
  v17 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v20 = v15[6];
      __dst = (char *)v13 + v20;
      v101 = a3;
      v21 = (char *)v14 + v20;
      v22 = type metadata accessor for AttributedString(0);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        v24 = sub_100006DA4(&qword_1000ACE10);
        memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(__dst, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
      }
      a3 = v101;
      v36 = v15[7];
      v37 = (char *)v13 + v36;
      v38 = (char *)v14 + v36;
      v39 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
      *(_QWORD *)((char *)v13 + v15[8]) = *(_QWORD *)((char *)v14 + v15[8]);
      *(_QWORD *)((char *)v13 + v15[9]) = *(_QWORD *)((char *)v14 + v15[9]);
      *((_BYTE *)v13 + v15[10]) = *((_BYTE *)v14 + v15[10]);
      *((_BYTE *)v13 + v15[11]) = *((_BYTE *)v14 + v15[11]);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_19;
    }
    goto LABEL_7;
  }
  if (v19)
  {
    sub_100007EB4((uint64_t)v13, type metadata accessor for TTRNewWidgetViewModel.Reminder);
LABEL_7:
    v25 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_19;
  }
  v102 = a3;
  v26 = (void *)*v13;
  *v13 = *v14;

  v27 = (void *)v13[1];
  v13[1] = v14[1];

  v28 = v15[6];
  v29 = (char *)v13 + v28;
  v30 = (char *)v14 + v28;
  v31 = type metadata accessor for AttributedString(0);
  v98 = *(_QWORD *)(v31 - 8);
  v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v98 + 48);
  __dsta = v29;
  LODWORD(v29) = v32(v29, 1, v31);
  v33 = v32(v30, 1, v31);
  if ((_DWORD)v29)
  {
    if (!v33)
    {
      (*(void (**)(void *, char *, uint64_t))(v98 + 32))(__dsta, v30, v31);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v98 + 56))(__dsta, 0, 1, v31);
      goto LABEL_18;
    }
    v34 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
    v35 = __dsta;
  }
  else
  {
    if (!v33)
    {
      (*(void (**)(void *, char *, uint64_t))(v98 + 40))(__dsta, v30, v31);
      goto LABEL_18;
    }
    (*(void (**)(void *, uint64_t))(v98 + 8))(__dsta, v31);
    v34 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
    v35 = __dsta;
  }
  memcpy(v35, v30, v34);
LABEL_18:
  v40 = v15[7];
  v41 = (char *)v13 + v40;
  v42 = (char *)v14 + v40;
  v43 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 40))(v41, v42, v43);
  v44 = v15[8];
  v45 = *(void **)((char *)v13 + v44);
  *(_QWORD *)((char *)v13 + v44) = *(_QWORD *)((char *)v14 + v44);

  *(_QWORD *)((char *)v13 + v15[9]) = *(_QWORD *)((char *)v14 + v15[9]);
  *((_BYTE *)v13 + v15[10]) = *((_BYTE *)v14 + v15[10]);
  *((_BYTE *)v13 + v15[11]) = *((_BYTE *)v14 + v15[11]);
  a3 = v102;
LABEL_19:
  v46 = v11[10];
  v47 = *(void **)(a1 + v46);
  *(_QWORD *)(a1 + v46) = *(_QWORD *)(a2 + v46);

  v48 = v11[11];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (uint64_t *)(a2 + v48);
  v52 = *v50;
  v51 = v50[1];
  v53 = v49[1];
  *v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease(v53);
  v54 = v11[12];
  v55 = *(void **)(a1 + v54);
  *(_QWORD *)(a1 + v54) = *(_QWORD *)(a2 + v54);

  v56 = v11[13];
  v57 = (_QWORD *)(a1 + v56);
  v58 = (uint64_t *)(a2 + v56);
  v60 = *v58;
  v59 = v58[1];
  v61 = v57[1];
  *v57 = v60;
  v57[1] = v59;
  swift_bridgeObjectRelease(v61);
  v62 = v11[14];
  v63 = (_QWORD *)(a1 + v62);
  v64 = (uint64_t *)(a2 + v62);
  v66 = *v64;
  v65 = v64[1];
  v67 = v63[1];
  *v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease(v67);
  *(_BYTE *)(a1 + v11[15]) = *(_BYTE *)(a2 + v11[15]);
  v68 = v11[16];
  v69 = (_QWORD *)(a1 + v68);
  v70 = (uint64_t *)(a2 + v68);
  v72 = *v70;
  v71 = v70[1];
  v73 = v69[1];
  *v69 = v72;
  v69[1] = v71;
  swift_bridgeObjectRelease(v73);
  v74 = v11[17];
  v75 = *(_QWORD *)(a1 + v74);
  *(_QWORD *)(a1 + v74) = *(_QWORD *)(a2 + v74);
  swift_bridgeObjectRelease(v75);
  v76 = v11[18];
  v77 = a1 + v76;
  v78 = a2 + v76;
  v79 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 40))(v77, v78, v79);
  v80 = v11[19];
  v81 = *(_QWORD *)(a1 + v80);
  *(_QWORD *)(a1 + v80) = *(_QWORD *)(a2 + v80);
  swift_bridgeObjectRelease(v81);
  *(_BYTE *)(a1 + v11[20]) = *(_BYTE *)(a2 + v11[20]);
  v82 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v83 = (uint64_t *)(a1 + v82);
  v84 = (uint64_t *)(a2 + v82);
  v85 = *v84;
  LOBYTE(v84) = *((_BYTE *)v84 + 8);
  v86 = *v83;
  *v83 = v85;
  *((_BYTE *)v83 + 8) = (_BYTE)v84;
  swift_release(v86);
  v87 = a3[7];
  v88 = (uint64_t *)(a1 + v87);
  v89 = (uint64_t *)(a2 + v87);
  v90 = *v89;
  LOBYTE(v89) = *((_BYTE *)v89 + 8);
  v91 = *v88;
  *v88 = v90;
  *((_BYTE *)v88 + 8) = (_BYTE)v89;
  j__swift_release(v91);
  if (a1 != a2)
  {
    v92 = a3[8];
    v93 = (void *)(a1 + v92);
    v94 = (const void *)(a2 + v92);
    sub_100009578(a1 + v92, &qword_1000ADED8);
    v95 = sub_100006DA4(&qword_1000ADED8);
    if (swift_getEnumCaseMultiPayload(v94, v95) == 1)
    {
      v96 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v93, v94, v96);
      swift_storeEnumTagMultiPayload(v93, v95, 1);
    }
    else
    {
      memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100043100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004310C);
}

uint64_t sub_10004310C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  uint64_t v10;

  v6 = type metadata accessor for TTRNewWidgetViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 254)
  {
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 8);
    if (v9 > 1)
      return (v9 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v10 = sub_100006DA4(&qword_1000ADEE0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v10);
  }
}

uint64_t sub_1000431B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000431C0);
}

uint64_t sub_1000431C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for TTRNewWidgetViewModel(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 254)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 24) + 8) = -(char)a2;
      return result;
    }
    v10 = sub_100006DA4(&qword_1000ADEE0);
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_100043268(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v2 = type metadata accessor for TTRNewWidgetViewModel(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v6[2] = &unk_10008A2B0;
    v6[3] = &unk_10008A2B0;
    sub_10003AEE4(319, (unint64_t *)&unk_1000ADF50, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons);
    if (v5 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

uint64_t sub_10004332C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100043338);
}

uint64_t sub_10004333C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100043348);
}

_QWORD *sub_100043350(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  void **v13;
  int *v14;
  uint64_t v15;
  unsigned int (*v16)(void **, uint64_t, int *);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void (*v34)(void **, _QWORD, uint64_t, int *);
  id v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v67;
  char *v68;
  void (*v69)(char *, char *, uint64_t);
  char *v70;
  char *v71;
  char *v72;
  void **__dst;
  void *__dsta;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    v19 = (_QWORD *)(v18 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v18);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = a3[5];
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = *(_QWORD *)((char *)a2 + v5 + 8);
    *(_QWORD *)v6 = *(_QWORD *)((char *)a2 + v5);
    *((_QWORD *)v6 + 1) = v8;
    *((_OWORD *)v6 + 1) = *(_OWORD *)((char *)a2 + v5 + 16);
    v9 = *(_QWORD *)((char *)a2 + v5 + 32);
    *((_QWORD *)v6 + 4) = v9;
    v6[40] = *((_BYTE *)a2 + v5 + 40);
    v10 = *(_QWORD *)((char *)a2 + v5 + 56);
    *((_QWORD *)v6 + 6) = *(_QWORD *)((char *)a2 + v5 + 48);
    *((_QWORD *)v6 + 7) = v10;
    v11 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
    v12 = v11[9];
    __dst = (void **)&v6[v12];
    v13 = (void **)&v7[v12];
    v14 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    v15 = *((_QWORD *)v14 - 1);
    v16 = *(unsigned int (**)(void **, uint64_t, int *))(v15 + 48);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    if (v16(v13, 1, v14))
    {
      v17 = sub_100006DA4(&qword_1000ACCD8);
      memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v20 = *v13;
      v21 = v13[1];
      *__dst = *v13;
      __dst[1] = v21;
      v22 = v14[6];
      v68 = (char *)__dst + v22;
      v71 = (char *)v13 + v22;
      v23 = type metadata accessor for AttributedString(0);
      v67 = *(_QWORD *)(v23 - 8);
      v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
      v25 = v20;
      v26 = v21;
      if (v24(v71, 1, v23))
      {
        v27 = sub_100006DA4(&qword_1000ACE10);
        memcpy(v68, v71, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v68, v71, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v68, 0, 1, v23);
      }
      v28 = v14[7];
      v29 = (char *)__dst + v28;
      v30 = (char *)v13 + v28;
      v31 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
      v32 = v14[8];
      v33 = *(void **)((char *)v13 + v32);
      *(void **)((char *)__dst + v32) = v33;
      *(void **)((char *)__dst + v14[9]) = *(void **)((char *)v13 + v14[9]);
      *((_BYTE *)__dst + v14[10]) = *((_BYTE *)v13 + v14[10]);
      *((_BYTE *)__dst + v14[11]) = *((_BYTE *)v13 + v14[11]);
      v34 = *(void (**)(void **, _QWORD, uint64_t, int *))(v15 + 56);
      v35 = v33;
      v34(__dst, 0, 1, v14);
    }
    v36 = v11[10];
    __dsta = *(void **)&v7[v36];
    *(_QWORD *)&v6[v36] = __dsta;
    v37 = v11[11];
    v38 = &v6[v37];
    v39 = &v7[v37];
    v40 = *((_QWORD *)v39 + 1);
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *((_QWORD *)v38 + 1) = v40;
    v41 = v11[12];
    v42 = *(void **)&v7[v41];
    *(_QWORD *)&v6[v41] = v42;
    v43 = v11[13];
    v44 = &v6[v43];
    v45 = &v7[v43];
    v46 = *((_QWORD *)v45 + 1);
    *(_QWORD *)v44 = *(_QWORD *)v45;
    *((_QWORD *)v44 + 1) = v46;
    v47 = v11[14];
    v48 = &v6[v47];
    v49 = &v7[v47];
    v50 = *((_QWORD *)v49 + 1);
    *(_QWORD *)v48 = *(_QWORD *)v49;
    *((_QWORD *)v48 + 1) = v50;
    v6[v11[15]] = v7[v11[15]];
    v51 = v11[16];
    v52 = &v6[v51];
    v53 = &v7[v51];
    v54 = *((_QWORD *)v53 + 1);
    *(_QWORD *)v52 = *(_QWORD *)v53;
    *((_QWORD *)v52 + 1) = v54;
    v55 = v11[17];
    v56 = *(_QWORD *)&v7[v55];
    *(_QWORD *)&v6[v55] = v56;
    v57 = v11[18];
    v70 = &v7[v57];
    v72 = &v6[v57];
    v58 = type metadata accessor for URL(0);
    v69 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
    v59 = __dsta;
    swift_bridgeObjectRetain(v40);
    v60 = v42;
    swift_bridgeObjectRetain(v46);
    swift_bridgeObjectRetain(v50);
    swift_bridgeObjectRetain(v54);
    swift_bridgeObjectRetain(v56);
    v69(v72, v70, v58);
    v61 = v11[19];
    v62 = *(_QWORD *)&v7[v61];
    *(_QWORD *)&v6[v61] = v62;
    v6[v11[20]] = v7[v11[20]];
    v63 = a3[7];
    v19 = a1;
    *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    v64 = (char *)a1 + v63;
    v65 = *(_QWORD *)((char *)a2 + v63);
    LOBYTE(v58) = *((_BYTE *)a2 + v63 + 8);
    swift_bridgeObjectRetain(v62);
    sub_10003CEB8(v65, v58);
    *(_QWORD *)v64 = v65;
    v64[8] = v58;
    *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  }
  return v19;
}

uint64_t sub_100043704(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  int *v5;
  id *v6;
  int *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  v4 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  swift_bridgeObjectRelease(v4[1]);
  swift_bridgeObjectRelease(v4[4]);
  swift_bridgeObjectRelease(v4[7]);
  v5 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v6 = (id *)((char *)v4 + v5[9]);
  v7 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v6, 1, v7))
  {

    v8 = (char *)v6 + v7[6];
    v9 = type metadata accessor for AttributedString(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v11 = (char *)v6 + v7[7];
    v12 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);

  }
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[11] + 8));

  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[13] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[14] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[16] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[17]));
  v13 = (char *)v4 + v5[18];
  v14 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v5[19]));
  return sub_10003D1A0(*(_QWORD *)(a1 + *(int *)(a2 + 28)), *(_BYTE *)(a1 + *(int *)(a2 + 28) + 8));
}

_BYTE *sub_1000438C4(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  void **v11;
  int *v12;
  uint64_t v13;
  unsigned int (*v14)(void **, uint64_t, int *);
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void (*v30)(void **, _QWORD, uint64_t, int *);
  id v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  char v62;
  uint64_t v64;
  char *v65;
  void (*v66)(_BYTE *, _BYTE *, uint64_t);
  char *v67;
  _BYTE *v68;
  _BYTE *v69;
  void **__dst;
  void *__dsta;

  *a1 = *a2;
  v3 = a3[5];
  v4 = &a1[v3];
  v5 = &a2[v3];
  v6 = *(_QWORD *)&a2[v3 + 8];
  *(_QWORD *)v4 = *(_QWORD *)&a2[v3];
  *((_QWORD *)v4 + 1) = v6;
  *((_OWORD *)v4 + 1) = *(_OWORD *)&a2[v3 + 16];
  v7 = *(_QWORD *)&a2[v3 + 32];
  *((_QWORD *)v4 + 4) = v7;
  v4[40] = a2[v3 + 40];
  v8 = *(_QWORD *)&a2[v3 + 56];
  *((_QWORD *)v4 + 6) = *(_QWORD *)&a2[v3 + 48];
  *((_QWORD *)v4 + 7) = v8;
  v9 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v10 = v9[9];
  __dst = (void **)&v4[v10];
  v11 = (void **)&v5[v10];
  v12 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v13 = *((_QWORD *)v12 - 1);
  v14 = *(unsigned int (**)(void **, uint64_t, int *))(v13 + 48);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  if (v14(v11, 1, v12))
  {
    v15 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = *v11;
    v17 = v11[1];
    *__dst = *v11;
    __dst[1] = v17;
    v18 = v12[6];
    v65 = (char *)v11 + v18;
    v67 = (char *)__dst + v18;
    v19 = type metadata accessor for AttributedString(0);
    v64 = *(_QWORD *)(v19 - 8);
    v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
    v21 = v16;
    v22 = v17;
    if (v20(v65, 1, v19))
    {
      v23 = sub_100006DA4(&qword_1000ACE10);
      memcpy(v67, v65, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v67, v65, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v67, 0, 1, v19);
    }
    v24 = v12[7];
    v25 = (char *)__dst + v24;
    v26 = (char *)v11 + v24;
    v27 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = v12[8];
    v29 = *(void **)((char *)v11 + v28);
    *(void **)((char *)__dst + v28) = v29;
    *(void **)((char *)__dst + v12[9]) = *(void **)((char *)v11 + v12[9]);
    *((_BYTE *)__dst + v12[10]) = *((_BYTE *)v11 + v12[10]);
    *((_BYTE *)__dst + v12[11]) = *((_BYTE *)v11 + v12[11]);
    v30 = *(void (**)(void **, _QWORD, uint64_t, int *))(v13 + 56);
    v31 = v29;
    v30(__dst, 0, 1, v12);
  }
  v32 = v9[10];
  __dsta = *(void **)&v5[v32];
  *(_QWORD *)&v4[v32] = __dsta;
  v33 = v9[11];
  v34 = &v4[v33];
  v35 = &v5[v33];
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  v37 = v9[12];
  v38 = *(void **)&v5[v37];
  *(_QWORD *)&v4[v37] = v38;
  v39 = v9[13];
  v40 = &v4[v39];
  v41 = &v5[v39];
  v42 = v41[1];
  *v40 = *v41;
  v40[1] = v42;
  v43 = v9[14];
  v44 = &v4[v43];
  v45 = &v5[v43];
  v46 = v45[1];
  *v44 = *v45;
  v44[1] = v46;
  v4[v9[15]] = v5[v9[15]];
  v47 = v9[16];
  v48 = &v4[v47];
  v49 = &v5[v47];
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  v51 = v9[17];
  v52 = *(_QWORD *)&v5[v51];
  *(_QWORD *)&v4[v51] = v52;
  v53 = v9[18];
  v68 = &v5[v53];
  v69 = &v4[v53];
  v54 = type metadata accessor for URL(0);
  v66 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
  v55 = __dsta;
  swift_bridgeObjectRetain(v36);
  v56 = v38;
  swift_bridgeObjectRetain(v42);
  swift_bridgeObjectRetain(v46);
  swift_bridgeObjectRetain(v50);
  swift_bridgeObjectRetain(v52);
  v66(v69, v68, v54);
  v57 = v9[19];
  v58 = *(_QWORD *)&v5[v57];
  *(_QWORD *)&v4[v57] = v58;
  v4[v9[20]] = v5[v9[20]];
  v59 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v60 = &a1[v59];
  v61 = *(_QWORD *)&a2[v59];
  v62 = a2[v59 + 8];
  swift_bridgeObjectRetain(v58);
  sub_10003CEB8(v61, v62);
  *(_QWORD *)v60 = v61;
  v60[8] = v62;
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  return a1;
}

_BYTE *sub_100043C48(_BYTE *a1, _BYTE *a2, int *a3)
{
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  int *v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD *, uint64_t, int *);
  int v20;
  int v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  int v41;
  size_t v42;
  void *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void (*v50)(_QWORD *, _QWORD, uint64_t, int *);
  id v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  id v59;
  uint64_t v60;
  void *v61;
  void *v62;
  id v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  void *v71;
  id v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  _BYTE *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE *v99;
  _BYTE *v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  unsigned int (*__src)(char *, uint64_t, uint64_t);
  char *__dst;
  void *__dsta;
  _BYTE *v111;
  _BYTE *v112;

  v3 = a1;
  *a1 = *a2;
  v4 = a3[5];
  v5 = &a1[v4];
  v6 = &a2[v4];
  *(_QWORD *)v5 = *(_QWORD *)&a2[v4];
  v7 = *(_QWORD *)&a2[v4 + 8];
  v8 = *((_QWORD *)v5 + 1);
  *((_QWORD *)v5 + 1) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  *((_QWORD *)v5 + 2) = *((_QWORD *)v6 + 2);
  *((_QWORD *)v5 + 3) = *((_QWORD *)v6 + 3);
  v9 = *((_QWORD *)v6 + 4);
  v10 = *((_QWORD *)v5 + 4);
  *((_QWORD *)v5 + 4) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  v5[40] = v6[40];
  *((_QWORD *)v5 + 6) = *((_QWORD *)v6 + 6);
  v11 = *((_QWORD *)v6 + 7);
  v12 = *((_QWORD *)v5 + 7);
  *((_QWORD *)v5 + 7) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  v13 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v14 = v13[9];
  v15 = &v5[v14];
  v16 = &v6[v14];
  v17 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v18 = *((_QWORD *)v17 - 1);
  v19 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (v21)
    {
      sub_100007EB4((uint64_t)v15, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    v112 = v3;
    v30 = (void *)*v16;
    v31 = (void *)*v15;
    *v15 = *v16;
    v32 = v30;

    v33 = (void *)v15[1];
    v34 = (void *)v16[1];
    v15[1] = v34;
    v35 = v34;

    v36 = v17[6];
    v37 = (char *)v15 + v36;
    v38 = (char *)v16 + v36;
    v39 = type metadata accessor for AttributedString(0);
    v107 = *(_QWORD *)(v39 - 8);
    v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v107 + 48);
    __dsta = v37;
    LODWORD(v37) = v40(v37, 1, v39);
    v41 = v40(v38, 1, v39);
    if ((_DWORD)v37)
    {
      if (!v41)
      {
        (*(void (**)(void *, char *, uint64_t))(v107 + 16))(__dsta, v38, v39);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v107 + 56))(__dsta, 0, 1, v39);
        goto LABEL_18;
      }
      v42 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v43 = __dsta;
    }
    else
    {
      if (!v41)
      {
        (*(void (**)(void *, char *, uint64_t))(v107 + 24))(__dsta, v38, v39);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v107 + 8))(__dsta, v39);
      v42 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v43 = __dsta;
    }
    memcpy(v43, v38, v42);
LABEL_18:
    v52 = v17[7];
    v53 = (char *)v15 + v52;
    v54 = (char *)v16 + v52;
    v55 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 24))(v53, v54, v55);
    v56 = v17[8];
    v57 = *(void **)((char *)v15 + v56);
    v58 = *(void **)((char *)v16 + v56);
    *(_QWORD *)((char *)v15 + v56) = v58;
    v59 = v58;

    *(_QWORD *)((char *)v15 + v17[9]) = *(_QWORD *)((char *)v16 + v17[9]);
    *((_BYTE *)v15 + v17[10]) = *((_BYTE *)v16 + v17[10]);
    *((_BYTE *)v15 + v17[11]) = *((_BYTE *)v16 + v17[11]);
    v3 = v112;
    goto LABEL_19;
  }
  if (v21)
  {
LABEL_7:
    v29 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  v22 = (void *)*v16;
  *v15 = *v16;
  v23 = (void *)v16[1];
  v15[1] = v23;
  v24 = v17[6];
  __dst = (char *)v15 + v24;
  v111 = v3;
  v106 = (char *)v16 + v24;
  v25 = type metadata accessor for AttributedString(0);
  v105 = *(_QWORD *)(v25 - 8);
  __src = *(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48);
  v26 = v22;
  v27 = v23;
  if (__src(v106, 1, v25))
  {
    v28 = sub_100006DA4(&qword_1000ACE10);
    memcpy(__dst, v106, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v105 + 16))(__dst, v106, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(__dst, 0, 1, v25);
  }
  v3 = v111;
  v44 = v17[7];
  v45 = (char *)v15 + v44;
  v46 = (char *)v16 + v44;
  v47 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
  v48 = v17[8];
  v49 = *(void **)((char *)v16 + v48);
  *(_QWORD *)((char *)v15 + v48) = v49;
  *(_QWORD *)((char *)v15 + v17[9]) = *(_QWORD *)((char *)v16 + v17[9]);
  *((_BYTE *)v15 + v17[10]) = *((_BYTE *)v16 + v17[10]);
  *((_BYTE *)v15 + v17[11]) = *((_BYTE *)v16 + v17[11]);
  v50 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v18 + 56);
  v51 = v49;
  v50(v15, 0, 1, v17);
LABEL_19:
  v60 = v13[10];
  v61 = *(void **)&v6[v60];
  v62 = *(void **)&v5[v60];
  *(_QWORD *)&v5[v60] = v61;
  v63 = v61;

  v64 = v13[11];
  v65 = &v5[v64];
  v66 = &v6[v64];
  *v65 = *v66;
  v67 = v66[1];
  v68 = v65[1];
  v65[1] = v67;
  swift_bridgeObjectRetain(v67);
  swift_bridgeObjectRelease(v68);
  v69 = v13[12];
  v70 = *(void **)&v5[v69];
  v71 = *(void **)&v6[v69];
  *(_QWORD *)&v5[v69] = v71;
  v72 = v71;

  v73 = v13[13];
  v74 = &v5[v73];
  v75 = &v6[v73];
  *v74 = *v75;
  v76 = v75[1];
  v77 = v74[1];
  v74[1] = v76;
  swift_bridgeObjectRetain(v76);
  swift_bridgeObjectRelease(v77);
  v78 = v13[14];
  v79 = &v5[v78];
  v80 = &v6[v78];
  *v79 = *v80;
  v81 = v80[1];
  v82 = v79[1];
  v79[1] = v81;
  swift_bridgeObjectRetain(v81);
  swift_bridgeObjectRelease(v82);
  v5[v13[15]] = v6[v13[15]];
  v83 = v13[16];
  v84 = &v5[v83];
  v85 = &v6[v83];
  *v84 = *v85;
  v86 = v85[1];
  v87 = v84[1];
  v84[1] = v86;
  swift_bridgeObjectRetain(v86);
  swift_bridgeObjectRelease(v87);
  v88 = v13[17];
  v89 = *(_QWORD *)&v5[v88];
  v90 = *(_QWORD *)&v6[v88];
  *(_QWORD *)&v5[v88] = v90;
  swift_bridgeObjectRetain(v90);
  swift_bridgeObjectRelease(v89);
  v91 = v13[18];
  v92 = &v5[v91];
  v93 = &v6[v91];
  v94 = type metadata accessor for URL(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v94 - 8) + 24))(v92, v93, v94);
  v95 = v13[19];
  v96 = *(_QWORD *)&v6[v95];
  v97 = *(_QWORD *)&v5[v95];
  *(_QWORD *)&v5[v95] = v96;
  swift_bridgeObjectRetain(v96);
  swift_bridgeObjectRelease(v97);
  v5[v13[20]] = v6[v13[20]];
  *(_QWORD *)&v3[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v98 = a3[7];
  v99 = &v3[v98];
  v100 = &a2[v98];
  v101 = *(_QWORD *)v100;
  LOBYTE(v97) = v100[8];
  sub_10003CEB8(*(_QWORD *)v100, v97);
  v102 = *(_QWORD *)v99;
  v103 = v99[8];
  *(_QWORD *)v99 = v101;
  v99[8] = v97;
  sub_10003D1A0(v102, v103);
  *(_QWORD *)&v3[a3[8]] = *(_QWORD *)&a2[a3[8]];
  return v3;
}

_BYTE *sub_100044220(_BYTE *a1, _BYTE *a2, int *a3)
{
  int *v3;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  int *v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  char *__dst;

  v3 = a3;
  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  *(_OWORD *)v7 = *(_OWORD *)&a2[v6];
  *((_QWORD *)v7 + 2) = *(_QWORD *)&a2[v6 + 16];
  *(_OWORD *)(v7 + 24) = *(_OWORD *)&a2[v6 + 24];
  v7[40] = a2[v6 + 40];
  *((_OWORD *)v7 + 3) = *(_OWORD *)&a2[v6 + 48];
  v9 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v10 = v9[9];
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v14 = *((_QWORD *)v13 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v33 = v14;
    v34 = v3;
    *v11 = *v12;
    v16 = v13[6];
    __dst = (char *)v11 + v16;
    v17 = (char *)v12 + v16;
    v18 = type metadata accessor for AttributedString(0);
    v32 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v17, 1, v18))
    {
      v19 = sub_100006DA4(&qword_1000ACE10);
      memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(__dst, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v18);
    }
    v20 = v13[7];
    v21 = (char *)v11 + v20;
    v22 = (char *)v12 + v20;
    v23 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    *(_QWORD *)((char *)v11 + v13[8]) = *(_QWORD *)((char *)v12 + v13[8]);
    *(_QWORD *)((char *)v11 + v13[9]) = *(_QWORD *)((char *)v12 + v13[9]);
    *((_BYTE *)v11 + v13[10]) = *((_BYTE *)v12 + v13[10]);
    *((_BYTE *)v11 + v13[11]) = *((_BYTE *)v12 + v13[11]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v33 + 56))(v11, 0, 1, v13);
    v3 = v34;
  }
  *(_QWORD *)&v7[v9[10]] = *(_QWORD *)&v8[v9[10]];
  *(_OWORD *)&v7[v9[11]] = *(_OWORD *)&v8[v9[11]];
  *(_QWORD *)&v7[v9[12]] = *(_QWORD *)&v8[v9[12]];
  *(_OWORD *)&v7[v9[13]] = *(_OWORD *)&v8[v9[13]];
  *(_OWORD *)&v7[v9[14]] = *(_OWORD *)&v8[v9[14]];
  v7[v9[15]] = v8[v9[15]];
  *(_OWORD *)&v7[v9[16]] = *(_OWORD *)&v8[v9[16]];
  *(_QWORD *)&v7[v9[17]] = *(_QWORD *)&v8[v9[17]];
  v24 = v9[18];
  v25 = &v7[v24];
  v26 = &v8[v24];
  v27 = type metadata accessor for URL(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
  *(_QWORD *)&v7[v9[19]] = *(_QWORD *)&v8[v9[19]];
  v7[v9[20]] = v8[v9[20]];
  v28 = v3[7];
  *(_QWORD *)&a1[v3[6]] = *(_QWORD *)&a2[v3[6]];
  v29 = &a1[v28];
  v30 = &a2[v28];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  v29[8] = v30[8];
  *(_QWORD *)&a1[v3[8]] = *(_QWORD *)&a2[v3[8]];
  return a1;
}

_BYTE *sub_1000444F8(_BYTE *a1, _BYTE *a2, int *a3)
{
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  int *v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD *, uint64_t, int *);
  int v19;
  int v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  size_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE *v83;
  _BYTE *v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  _BYTE *v89;
  uint64_t v90;
  void *v91;
  char *__src;
  char *__srca;

  v3 = a1;
  *a1 = *a2;
  v4 = a3[5];
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = *(_QWORD *)&a2[v4 + 8];
  v8 = *(_QWORD *)&a1[v4 + 8];
  *(_QWORD *)v5 = *(_QWORD *)&a2[v4];
  *((_QWORD *)v5 + 1) = v7;
  swift_bridgeObjectRelease(v8);
  *((_OWORD *)v5 + 1) = *((_OWORD *)v6 + 1);
  v9 = *((_QWORD *)v5 + 4);
  *((_QWORD *)v5 + 4) = *((_QWORD *)v6 + 4);
  swift_bridgeObjectRelease(v9);
  v5[40] = v6[40];
  v10 = *((_QWORD *)v6 + 7);
  v11 = *((_QWORD *)v5 + 7);
  *((_QWORD *)v5 + 6) = *((_QWORD *)v6 + 6);
  *((_QWORD *)v5 + 7) = v10;
  swift_bridgeObjectRelease(v11);
  v12 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v13 = v12[9];
  v14 = &v5[v13];
  v15 = &v6[v13];
  v16 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v17 = *((_QWORD *)v16 - 1);
  v18 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (v20)
    {
      sub_100007EB4((uint64_t)v14, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    v27 = (void *)*v14;
    *v14 = *v15;

    v28 = (void *)v14[1];
    v14[1] = v15[1];

    v29 = v16[6];
    v30 = (char *)v14 + v29;
    __srca = (char *)v15 + v29;
    v31 = type metadata accessor for AttributedString(0);
    v90 = *(_QWORD *)(v31 - 8);
    v91 = v30;
    v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v90 + 48);
    LODWORD(v30) = v32(v30, 1, v31);
    v33 = v32(__srca, 1, v31);
    if ((_DWORD)v30)
    {
      if (!v33)
      {
        (*(void (**)(void *, char *, uint64_t))(v90 + 32))(v91, __srca, v31);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v91, 0, 1, v31);
        goto LABEL_18;
      }
      v34 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v35 = v91;
    }
    else
    {
      if (!v33)
      {
        (*(void (**)(void *, char *, uint64_t))(v90 + 40))(v91, __srca, v31);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v90 + 8))(v91, v31);
      v34 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v35 = v91;
    }
    memcpy(v35, __srca, v34);
LABEL_18:
    v40 = v16[7];
    v41 = (char *)v14 + v40;
    v42 = (char *)v15 + v40;
    v43 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 40))(v41, v42, v43);
    v44 = v16[8];
    v45 = *(void **)((char *)v14 + v44);
    *(_QWORD *)((char *)v14 + v44) = *(_QWORD *)((char *)v15 + v44);

    *(_QWORD *)((char *)v14 + v16[9]) = *(_QWORD *)((char *)v15 + v16[9]);
    *((_BYTE *)v14 + v16[10]) = *((_BYTE *)v15 + v16[10]);
    *((_BYTE *)v14 + v16[11]) = *((_BYTE *)v15 + v16[11]);
    goto LABEL_19;
  }
  if (v20)
  {
LABEL_7:
    v26 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  v89 = v3;
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v21 = v16[6];
  __src = (char *)v14 + v21;
  v22 = (char *)v15 + v21;
  v23 = type metadata accessor for AttributedString(0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = sub_100006DA4(&qword_1000ACE10);
    memcpy(__src, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(__src, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(__src, 0, 1, v23);
  }
  v3 = v89;
  v36 = v16[7];
  v37 = (char *)v14 + v36;
  v38 = (char *)v15 + v36;
  v39 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
  *(_QWORD *)((char *)v14 + v16[8]) = *(_QWORD *)((char *)v15 + v16[8]);
  *(_QWORD *)((char *)v14 + v16[9]) = *(_QWORD *)((char *)v15 + v16[9]);
  *((_BYTE *)v14 + v16[10]) = *((_BYTE *)v15 + v16[10]);
  *((_BYTE *)v14 + v16[11]) = *((_BYTE *)v15 + v16[11]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
LABEL_19:
  v46 = v12[10];
  v47 = *(void **)&v5[v46];
  *(_QWORD *)&v5[v46] = *(_QWORD *)&v6[v46];

  v48 = v12[11];
  v49 = &v5[v48];
  v50 = (uint64_t *)&v6[v48];
  v52 = *v50;
  v51 = v50[1];
  v53 = v49[1];
  *v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease(v53);
  v54 = v12[12];
  v55 = *(void **)&v5[v54];
  *(_QWORD *)&v5[v54] = *(_QWORD *)&v6[v54];

  v56 = v12[13];
  v57 = &v5[v56];
  v58 = (uint64_t *)&v6[v56];
  v60 = *v58;
  v59 = v58[1];
  v61 = v57[1];
  *v57 = v60;
  v57[1] = v59;
  swift_bridgeObjectRelease(v61);
  v62 = v12[14];
  v63 = &v5[v62];
  v64 = (uint64_t *)&v6[v62];
  v66 = *v64;
  v65 = v64[1];
  v67 = v63[1];
  *v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease(v67);
  v5[v12[15]] = v6[v12[15]];
  v68 = v12[16];
  v69 = &v5[v68];
  v70 = (uint64_t *)&v6[v68];
  v72 = *v70;
  v71 = v70[1];
  v73 = v69[1];
  *v69 = v72;
  v69[1] = v71;
  swift_bridgeObjectRelease(v73);
  v74 = v12[17];
  v75 = *(_QWORD *)&v5[v74];
  *(_QWORD *)&v5[v74] = *(_QWORD *)&v6[v74];
  swift_bridgeObjectRelease(v75);
  v76 = v12[18];
  v77 = &v5[v76];
  v78 = &v6[v76];
  v79 = type metadata accessor for URL(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v79 - 8) + 40))(v77, v78, v79);
  v80 = v12[19];
  v81 = *(_QWORD *)&v5[v80];
  *(_QWORD *)&v5[v80] = *(_QWORD *)&v6[v80];
  swift_bridgeObjectRelease(v81);
  v5[v12[20]] = v6[v12[20]];
  v82 = a3[7];
  *(_QWORD *)&v3[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v83 = &v3[v82];
  v84 = &a2[v82];
  v85 = *(_QWORD *)v84;
  LOBYTE(v84) = v84[8];
  v86 = *(_QWORD *)v83;
  v87 = v83[8];
  *(_QWORD *)v83 = v85;
  v83[8] = (_BYTE)v84;
  sub_10003D1A0(v86, v87);
  *(_QWORD *)&v3[a3[8]] = *(_QWORD *)&a2[a3[8]];
  return v3;
}

uint64_t sub_1000449F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100044A00);
}

uint64_t sub_100044A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for TTRNewWidgetViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28) + 8);
  if (v9 > 1)
    return (v9 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_100044A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100044A8C);
}

uint64_t sub_100044A8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for TTRNewWidgetViewModel(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 28) + 8) = -(char)a2;
  return result;
}

uint64_t sub_100044B0C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_10008A298;
  result = type metadata accessor for TTRNewWidgetViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = &unk_10008A2B0;
    v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t destroy for TTRAnyListWidget.DoubleDividerHorizontal(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t _s24RemindersWidgetExtension16TTRAnyListWidgetV23DoubleDividerHorizontalVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for TTRAnyListWidget.DoubleDividerHorizontal(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v5;
  swift_retain(v4);
  swift_release(v6);
  a1[2] = a2[2];
  return a1;
}

__n128 initializeWithTake for TTRAnyListWidget.DoubleDividerHorizontal(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t *assignWithTake for TTRAnyListWidget.DoubleDividerHorizontal(uint64_t *a1, uint64_t *a2)
{
  char v4;
  uint64_t v5;

  v4 = *((_BYTE *)a2 + 8);
  v5 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v4;
  swift_release(v5);
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRAnyListWidget.DoubleDividerHorizontal(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRAnyListWidget.DoubleDividerHorizontal(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRAnyListWidget.DoubleDividerHorizontal()
{
  return &type metadata for TTRAnyListWidget.DoubleDividerHorizontal;
}

uint64_t sub_100044D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100044D34);
}

uint64_t sub_100044D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100044D44);
}

unint64_t sub_100044D4C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1000AE900;
  if (!qword_1000AE900)
  {
    v1 = sub_100007258(&qword_1000AE2C8);
    v2[0] = sub_100007258(&qword_1000AE2B8);
    v2[1] = sub_10003EFC8(&qword_1000AE2F0, &qword_1000AE2B8, (void (*)(void))sub_10003F030);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.widgetURL(_:)>>, 1);
    sub_1000095B4(&qword_1000AE388, &qword_1000AE390, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AE900);
  }
  return result;
}

uint64_t sub_100044E20()
{
  _QWORD v1[2];

  v1[0] = sub_100007258(&qword_1000AE430);
  v1[1] = sub_1000095B4(&qword_1000AE438, &qword_1000AE430, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.widgetURL(_:)>>, 1);
}

uint64_t sub_100044E84(uint64_t a1)
{
  return sub_100044EA0(a1, &qword_1000AE4D8, (uint64_t (*)(void))sub_10003FE20, (uint64_t)&opaque type descriptor for <<opaque return type of View.widgetURL(_:)>>);
}

uint64_t sub_100044EA0(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  _QWORD v7[2];

  v7[0] = sub_100007258(a2);
  v7[1] = a3();
  return swift_getOpaqueTypeConformance2(v7, a4, 1);
}

uint64_t sub_100044EF4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100093178, 1);
}

uint64_t sub_100044F04(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100093150, 1);
}

uint64_t sub_100044F14(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100093128, 1);
}

unint64_t sub_100044F28()
{
  unint64_t result;

  result = qword_1000AE908;
  if (!qword_1000AE908)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for EmptyAnimatableData, &type metadata for EmptyAnimatableData);
    atomic_store(result, (unint64_t *)&qword_1000AE908);
  }
  return result;
}

unint64_t sub_100044F70()
{
  unint64_t result;

  result = qword_1000AE910;
  if (!qword_1000AE910)
  {
    result = swift_getWitnessTable(&unk_10008AB68, &type metadata for TTRAnyListWidget.ReminderVStack);
    atomic_store(result, (unint64_t *)&qword_1000AE910);
  }
  return result;
}

uint64_t sub_100044FB4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100093100, 1);
}

uint64_t sub_100044FC4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000930D8, 1);
}

uint64_t sub_100044FD4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000930B0, 1);
}

uint64_t sub_100044FE4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100093088, 1);
}

uint64_t sub_100044FF4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100093060, 1);
}

uint64_t sub_100045004(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100093038, 1);
}

uint64_t sub_100045014(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 64);
  sub_100009520(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  swift_bridgeObjectRetain(v2);
  return a1;
}

uint64_t sub_100045050()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_100045060()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AE980;
  if (!qword_1000AE980)
  {
    v1 = sub_100007258(&qword_1000AE978);
    sub_100007218(&qword_1000AE380, type metadata accessor for TTRAnyListWidget.InteractiveNoRemindersView, (uint64_t)&unk_10008AEA0);
    sub_100007218(&qword_1000AE988, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AE980);
  }
  return result;
}

unint64_t sub_1000450FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AE990;
  if (!qword_1000AE990)
  {
    v1 = sub_100007258(&qword_1000AE968);
    sub_1000095B4(&qword_1000AE3A0, &qword_1000AE3A8, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
    sub_1000095B4(&qword_1000AE998, &qword_1000AE9A0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AE990);
  }
  return result;
}

uint64_t sub_100045198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int *v8;
  id *v9;
  int *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 24));
  v6 = v0 + v4;
  v7 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 20));
  swift_bridgeObjectRelease(v7[1]);
  swift_bridgeObjectRelease(v7[4]);
  swift_bridgeObjectRelease(v7[7]);
  v8 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v9 = (id *)((char *)v7 + v8[9]);
  v10 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v9, 1, v10))
  {
    v20 = v5;
    v21 = v0 + v4;
    v22 = v0;

    v11 = (char *)v9 + v10[6];
    v12 = type metadata accessor for AttributedString(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
    v14 = (char *)v9 + v10[7];
    v15 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);

    v6 = v21;
    v0 = v22;
    v5 = v20;
  }
  v16 = v4 + v5;

  swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[11] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[13] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[14] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[16] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[17]));
  v17 = (char *)v7 + v8[18];
  v18 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v7 + v8[19]));
  sub_10003D1A0(*(_QWORD *)(v6 + *(int *)(v1 + 28)), *(_BYTE *)(v6 + *(int *)(v1 + 28) + 8));
  return swift_deallocObject(v0, v16, v3 | 7);
}

uint64_t sub_1000453AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView(0)
                                      - 8)
                          + 80);
  return sub_100030A50(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), v3 + ((v7 + 32) & ~v7), a3);
}

uint64_t sub_100045404()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100045428(char *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, char *);
  uint64_t v4;
  uint64_t v5;

  v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  v4 = *(_QWORD *)a1;
  v5 = sub_100006DA4(&qword_1000AE3E8);
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

double sub_100045480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  char v12;
  double result;

  if (a2)
  {
    v12 = a8 & 1;
    swift_retain(a4);
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a3);
    sub_10003CEB8(a7, v12);
    *(_QWORD *)&result = swift_retain(a9).n128_u64[0];
  }
  return result;
}

uint64_t sub_1000454EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a3);
    swift_release(a4);
    sub_10003D1A0(a7, a8 & 1);
    return swift_release(a9);
  }
  return result;
}

_QWORD *sub_10004555C@<X0>(_QWORD *a1@<X8>)
{
  return sub_100017810((uint64_t (*)(void))sub_100045594, (uint64_t)&_s13ShareeFontKeyON, a1);
}

uint64_t sub_100045570(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100014858(a1, a2, a3, a4, (uint64_t (*)(void))sub_100045594, (uint64_t)&_s13ShareeFontKeyON);
}

unint64_t sub_100045594()
{
  unint64_t result;

  result = qword_1000AE9B0;
  if (!qword_1000AE9B0)
  {
    result = swift_getWitnessTable(&unk_10008B200, &_s13ShareeFontKeyON);
    atomic_store(result, (unint64_t *)&qword_1000AE9B0);
  }
  return result;
}

uint64_t sub_1000455D8()
{
  uint64_t v0;

  sub_10003D1A0(*(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 49, 7);
}

double sub_100045608@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10002C91C(a1, v2 + 16, a2);
}

uint64_t sub_100045610(uint64_t a1)
{
  sub_10003CEB8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

_QWORD *sub_10004563C(_QWORD *a1)
{
  swift_retain(*a1);
  return a1;
}

void sub_100045664()
{
  sub_10002CA54();
}

uint64_t type metadata accessor for TTRAnyListWidget.ReminderToggleStyle(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000AEBE8, (uint64_t)&nominal type descriptor for TTRAnyListWidget.ReminderToggleStyle);
}

uint64_t sub_100045684()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100045694(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000456A4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_1000456B4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = qword_1000AEA38;
  if (!qword_1000AEA38)
  {
    v1 = sub_100007258(&qword_1000AEA30);
    v2 = sub_100007258(&qword_1000AEA20);
    v4 = sub_100007258(&qword_1000AEA18);
    v5 = type metadata accessor for TTRAnyListWidget.ReminderToggleStyle(255);
    v6 = sub_10003EFC8(&qword_1000AEA40, &qword_1000AEA18, (void (*)(void))sub_1000457EC);
    v7 = sub_100007218(&qword_1000AEA50, type metadata accessor for TTRAnyListWidget.ReminderToggleStyle, (uint64_t)&unk_10008B1C8);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.toggleStyle<A>(_:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100007218(&qword_1000AE988, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AEA38);
  }
  return result;
}

unint64_t sub_1000457EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AEA48;
  if (!qword_1000AEA48)
  {
    v1 = sub_100007258(&qword_1000AEA10);
    sub_1000095B4(&qword_1000AD5B8, &qword_1000AD5A0, (uint64_t)&protocol conformance descriptor for Toggle<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AEA48);
  }
  return result;
}

_QWORD *sub_100045870@<X0>(_QWORD *a1@<X8>)
{
  return sub_100017810((uint64_t (*)(void))sub_1000458A8, (uint64_t)&_s27ReminderWithSubtasksFontKeyON, a1);
}

uint64_t sub_100045884(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100014858(a1, a2, a3, a4, (uint64_t (*)(void))sub_1000458A8, (uint64_t)&_s27ReminderWithSubtasksFontKeyON);
}

unint64_t sub_1000458A8()
{
  unint64_t result;

  result = qword_1000AEA70;
  if (!qword_1000AEA70)
  {
    result = swift_getWitnessTable(&unk_10008B190, &_s27ReminderWithSubtasksFontKeyON);
    atomic_store(result, (unint64_t *)&qword_1000AEA70);
  }
  return result;
}

uint64_t sub_1000458EC(uint64_t a1, double (*a2)(_QWORD, char *), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (**v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t result;
  void (**v31)(char *, char *, uint64_t);
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  void (**v36)(char *, char *, uint64_t);
  char *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  void (**v40)(char *, char *, uint64_t);
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  double v53;
  _QWORD *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  double (*v66)(_QWORD, char *);
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  void (**v74)(char *, char *, uint64_t);
  char *v75;
  _QWORD v76[4];
  _QWORD *v77;

  v66 = (double (*)(_QWORD, char *))a2;
  v67 = a3;
  v4 = sub_100006DA4(&qword_1000AEA78);
  __chkstk_darwin(v4);
  v73 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LayoutSubview(0);
  v71 = *(_QWORD *)(v6 - 8);
  v72 = v6;
  __chkstk_darwin(v6);
  v70 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_100006DA4(&qword_1000AEAD0);
  v8 = __chkstk_darwin(v68);
  v69 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v65 = (uint64_t *)((char *)&v58 - v11);
  __chkstk_darwin(v10);
  v64 = (uint64_t *)((char *)&v58 - v12);
  v13 = type metadata accessor for LayoutSubviews(0);
  v14 = *(void (***)(char *, char *, uint64_t))(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100006DA4(&qword_1000AEAB0);
  __chkstk_darwin(v17);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100006DA4(&qword_1000AEAD8);
  __chkstk_darwin(v20);
  v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = _swiftEmptyArrayStorage;
  sub_10008189C(0, 0, 0);
  sub_100009434(a1, (uint64_t)v19, &qword_1000AEAB0);
  v74 = v14;
  v14[4](v16, v19, v13);
  v23 = sub_100007218(&qword_1000AEA98, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  dispatch thunk of Sequence.makeIterator()(v13, v23);
  v24 = *(int *)(v20 + 36);
  *(_QWORD *)&v22[v24] = 0;
  v25 = &v22[*(int *)(sub_100006DA4(&qword_1000AEAA0) + 36)];
  v26 = sub_100007218(&qword_1000AEAA8, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  v27 = *(_QWORD *)v25;
  dispatch thunk of Collection.endIndex.getter(v13, v26);
  v75 = v22;
  if (v27 == v76[0])
  {
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56);
LABEL_3:
    v29 = (uint64_t)v73;
    v28(v73, 1, 1, v72);
  }
  else
  {
    v62 = v16;
    v63 = v24;
    v31 = v74;
    v32 = v25;
    v60 = v25;
    v61 = v13;
    v59 = v26;
    while (1)
    {
      v74 = (void (**)(char *, char *, uint64_t))dispatch thunk of Collection.subscript.read(v76, v32, v13, v26);
      v33 = v32;
      v34 = v71;
      v29 = (uint64_t)v73;
      v35 = v16;
      v36 = v31;
      v37 = v22;
      v38 = v72;
      (*(void (**)(char *))(v71 + 16))(v73);
      ((void (*)(_QWORD *, _QWORD))v74)(v76, 0);
      v36[2](v35, v37, v13);
      dispatch thunk of Collection.formIndex(after:)(v33, v13, v26);
      ((void (*)(char *, uint64_t))v36[1])(v35, v13);
      v39 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56);
      v39(v29, 0, 1, v38);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v29, 1, v38) == 1)
        break;
      v40 = v36;
      v41 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 32);
      v42 = v68;
      v43 = v70;
      v41(v70, v29, v38);
      v44 = &v69[*(int *)(v42 + 48)];
      v45 = v63;
      v46 = *(_QWORD *)&v75[v63];
      result = ((uint64_t (*)(char *, char *, uint64_t))v41)(v44, v43, v38);
      if (__OFADD__(v46, 1))
      {
        __break(1u);
        return result;
      }
      v47 = v38;
      v22 = v75;
      *(_QWORD *)&v75[v45] = v46 + 1;
      v48 = v65;
      v49 = (char *)v65 + *(int *)(v42 + 48);
      *v65 = v46;
      v50 = (uint64_t)v48;
      v41(v49, (uint64_t)v44, v47);
      v51 = v50;
      v52 = v64;
      sub_100018778(v51, (uint64_t)v64, &qword_1000AEAD0);
      v53 = v66(*v52, (char *)v52 + *(int *)(v42 + 48));
      sub_100009578((uint64_t)v52, &qword_1000AEAD0);
      v54 = v77;
      v28 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v39;
      if ((swift_isUniquelyReferenced_nonNull_native(v77) & 1) == 0)
      {
        sub_10008189C(0, v54[2] + 1, 1);
        v54 = v77;
      }
      v31 = v40;
      v26 = v59;
      v56 = v54[2];
      v55 = v54[3];
      v13 = v61;
      if (v56 >= v55 >> 1)
      {
        sub_10008189C(v55 > 1, v56 + 1, 1);
        v54 = v77;
      }
      v54[2] = v56 + 1;
      *(double *)&v54[v56 + 4] = v53;
      v32 = v60;
      v57 = *(_QWORD *)v60;
      dispatch thunk of Collection.endIndex.getter(v13, v26);
      v16 = v62;
      if (v57 == v76[0])
        goto LABEL_3;
    }
  }
  sub_100009578(v29, &qword_1000AEA78);
  sub_100009578((uint64_t)v75, &qword_1000AEAD8);
  return (uint64_t)v77;
}

uint64_t sub_100045E54(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t result;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  int v28;
  int v29;
  _BYTE v30[16];
  uint64_t v31;
  _BYTE v32[8];
  uint64_t v33;
  double v34;

  v28 = a2;
  v29 = a4;
  v26 = a1;
  v27 = *(double *)&a3;
  v10 = sub_100006DA4(&qword_1000AEAB0);
  __chkstk_darwin(v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LayoutSubviews(0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v14(v12, a5, v13);
  v31 = a6;
  v15 = sub_1000458EC((uint64_t)v12, (double (*)(_QWORD, char *))sub_1000460B8, (uint64_t)v30);
  sub_100009578((uint64_t)v12, &qword_1000AEAB0);
  v33 = v15;
  v16 = sub_100006DA4(&qword_1000AEAB8);
  v17 = sub_1000095B4(&qword_1000AEAC0, &qword_1000AEAB8, (uint64_t)&protocol conformance descriptor for [A]);
  v18 = sub_1000460C0();
  Sequence<>.sum()(&v34, v16, v17, v18);
  v19 = v34;
  v20 = sub_100007218(&qword_1000AEAA8, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  dispatch thunk of Collection.startIndex.getter(v13, v20);
  dispatch thunk of Collection.endIndex.getter(v13, v20);
  result = dispatch thunk of Collection.distance(from:to:)(&v33, v32, v13, v20);
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    if ((v29 & 1) == 0 && (v28 & 1) == 0 && v27 != INFINITY)
    {
      v22 = v19 + (double)(result - 1) * a7;
      if (v22 < v27)
      {
        v34 = v27 - v22;
        v23 = ((uint64_t (*)(char *, uint64_t, uint64_t))v14)(v12, a5, v13);
        __chkstk_darwin(v23);
        *(&v25 - 4) = v15;
        *(&v25 - 3) = (uint64_t)&v34;
        *(&v25 - 2) = v26;
        v24 = sub_1000458EC((uint64_t)v12, (double (*)(_QWORD, char *))sub_100046104, (uint64_t)(&v25 - 6));
        sub_100009578((uint64_t)v12, &qword_1000AEAB0);
        swift_bridgeObjectRelease(v15);
        return v24;
      }
    }
    return v15;
  }
  return result;
}

double sub_1000460B8(char a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1000325EC(a1, a2, *(_QWORD *)(v2 + 16));
}

unint64_t sub_1000460C0()
{
  unint64_t result;

  result = qword_1000AEAC8;
  if (!qword_1000AEAC8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1000AEAC8);
  }
  return result;
}

unint64_t sub_100046104(unint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100032654(a1, *(double *)(v2 + 32), a2, *(_QWORD *)(v2 + 16), *(double **)(v2 + 24));
}

uint64_t sub_100046110()
{
  return EnvironmentValues.contentTransition.getter();
}

uint64_t sub_100046130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000362E0(a1, a2, a3, a4, (void (*)(_QWORD))&type metadata accessor for ContentTransition, (uint64_t (*)(char *))&EnvironmentValues.contentTransition.setter);
}

uint64_t sub_100046154()
{
  return EnvironmentValues.contentTransitionStyle.getter();
}

uint64_t sub_100046174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000362E0(a1, a2, a3, a4, (void (*)(_QWORD))&type metadata accessor for ContentTransition.Style, (uint64_t (*)(char *))&EnvironmentValues.contentTransitionStyle.setter);
}

unint64_t sub_100046198()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AEB10;
  if (!qword_1000AEB10)
  {
    v1 = sub_100007258(&qword_1000AEAF8);
    sub_10004621C();
    sub_1000095B4(&qword_1000AEB38, &qword_1000AEB40, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AEB10);
  }
  return result;
}

unint64_t sub_10004621C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AEB18;
  if (!qword_1000AEB18)
  {
    v1 = sub_100007258(&qword_1000AEAF0);
    sub_1000462A0();
    sub_1000095B4(&qword_1000AEB30, &qword_1000AEB08, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AEB18);
  }
  return result;
}

unint64_t sub_1000462A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1000AEB20;
  if (!qword_1000AEB20)
  {
    v1 = sub_100007258(&qword_1000AEAE8);
    v2[0] = &type metadata for Text;
    v2[1] = &protocol witness table for Text;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.unredacted()>>, 1);
    sub_1000095B4(&qword_1000AEB28, &qword_1000AEB00, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AEB20);
  }
  return result;
}

uint64_t sub_100046350@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100046378(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

unint64_t sub_1000463A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AEB70;
  if (!qword_1000AEB70)
  {
    v1 = sub_100007258(&qword_1000AEB60);
    sub_100046424();
    sub_1000095B4(&qword_1000AD730, &qword_1000AD738, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AEB70);
  }
  return result;
}

unint64_t sub_100046424()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AEB78;
  if (!qword_1000AEB78)
  {
    v1 = sub_100007258(&qword_1000AEB80);
    sub_100017698();
    sub_1000095B4(&qword_1000AD720, &qword_1000AD728, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AEB78);
  }
  return result;
}

ValueMetadata *_s27ReminderWithSubtasksFontKeyOMa()
{
  return &_s27ReminderWithSubtasksFontKeyON;
}

ValueMetadata *_s13ShareeFontKeyOMa()
{
  return &_s13ShareeFontKeyON;
}

uint64_t destroy for TTRAnyListWidget.InteractiveListShareeRowView(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  return swift_release(a1[3]);
}

uint64_t initializeWithCopy for TTRAnyListWidget.InteractiveListShareeRowView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t assignWithCopy for TTRAnyListWidget.InteractiveListShareeRowView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_BYTE *)(a2 + 32);
  v10 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = v9;
  swift_retain(v8);
  swift_release(v10);
  return a1;
}

uint64_t assignWithTake for TTRAnyListWidget.InteractiveListShareeRowView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v5;
  swift_release(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRAnyListWidget.InteractiveListShareeRowView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRAnyListWidget.InteractiveListShareeRowView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRAnyListWidget.InteractiveListShareeRowView()
{
  return &type metadata for TTRAnyListWidget.InteractiveListShareeRowView;
}

uint64_t destroy for TTRAnyListWidget.ListBadge(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  return swift_release(*(_QWORD *)(a1 + 32));
}

uint64_t initializeWithCopy for TTRAnyListWidget.ListBadge(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  LOBYTE(v4) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = v4;
  v7 = v3;
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  return a1;
}

uint64_t assignWithCopy for TTRAnyListWidget.ListBadge(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_BYTE *)(a2 + 40);
  v11 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v9;
  *(_BYTE *)(a1 + 40) = v10;
  swift_retain(v9);
  swift_release(v11);
  return a1;
}

__n128 initializeWithTake for TTRAnyListWidget.ListBadge(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TTRAnyListWidget.ListBadge(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease(v6);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 40);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v7;
  swift_release(v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRAnyListWidget.ListBadge(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 41))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRAnyListWidget.ListBadge(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRAnyListWidget.ListBadge()
{
  return &type metadata for TTRAnyListWidget.ListBadge;
}

char *sub_100046928(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t *v34;
  uint64_t v35;
  char *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t *v42;
  uint64_t v43;
  char *v44;
  uint64_t *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *__dst;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a2[1];
    *((_QWORD *)a1 + 1) = v8;
    v9 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    v10 = v9[6];
    __dst = &v7[v10];
    v11 = (char *)a2 + v10;
    v12 = type metadata accessor for AttributedString(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    v15 = v4;
    v16 = v8;
    if (v14(v11, 1, v12))
    {
      v17 = sub_100006DA4(&qword_1000ACE10);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    v18 = v9[7];
    v19 = &v7[v18];
    v20 = (uint64_t)a2 + v18;
    v21 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v22 = v9[8];
    v23 = *(char **)((char *)a2 + v22);
    *(_QWORD *)&v7[v22] = v23;
    *(_QWORD *)&v7[v9[9]] = *(char **)((char *)a2 + v9[9]);
    v7[v9[10]] = *((_BYTE *)a2 + v9[10]);
    v7[v9[11]] = *((_BYTE *)a2 + v9[11]);
    v24 = a3[6];
    *(_QWORD *)&v7[a3[5]] = *(char **)((char *)a2 + a3[5]);
    v25 = &v7[v24];
    v26 = (uint64_t)a2 + v24;
    *(_QWORD *)v25 = *(_QWORD *)v26;
    v25[8] = *(_BYTE *)(v26 + 8);
    v27 = a3[8];
    v7[a3[7]] = *((_BYTE *)a2 + a3[7]);
    v28 = &v7[v27];
    v29 = (uint64_t *)((char *)a2 + v27);
    v30 = *v29;
    LOBYTE(v29) = *((_BYTE *)v29 + 8);
    *(_QWORD *)v28 = v30;
    v28[8] = (char)v29;
    v31 = a3[9];
    v32 = a3[10];
    v33 = &v7[v31];
    v34 = (uint64_t *)((char *)a2 + v31);
    v35 = *v34;
    LOBYTE(v34) = *((_BYTE *)v34 + 8);
    *(_QWORD *)v33 = v35;
    v33[8] = (char)v34;
    v36 = &v7[v32];
    v37 = (uint64_t *)((char *)a2 + v32);
    v38 = *v37;
    LOBYTE(v37) = *((_BYTE *)v37 + 8);
    *(_QWORD *)v36 = v38;
    v36[8] = (char)v37;
    v39 = a3[11];
    v40 = a3[12];
    v41 = &v7[v39];
    v42 = (uint64_t *)((char *)a2 + v39);
    v43 = *v42;
    LOBYTE(v42) = *((_BYTE *)v42 + 8);
    *(_QWORD *)v41 = v43;
    v41[8] = (char)v42;
    v44 = &v7[v40];
    v45 = (uint64_t *)((char *)a2 + v40);
    v46 = v23;
    swift_retain(v30);
    swift_retain(v35);
    swift_retain(v38);
    swift_retain(v43);
    v47 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v45, v47) == 1)
    {
      v48 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v44, v45, v48);
      v49 = v44;
      v50 = v47;
      v51 = 1;
    }
    else
    {
      v52 = *v45;
      *(_QWORD *)v44 = *v45;
      swift_retain(v52);
      v49 = v44;
      v50 = v47;
      v51 = 0;
    }
    swift_storeEnumTagMultiPayload(v49, v50, v51);
  }
  return v7;
}

uint64_t sub_100046BE0(id *a1, int *a2)
{
  int *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v5 = (char *)a1 + v4[6];
  v6 = type metadata accessor for AttributedString(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  v8 = (char *)a1 + v4[7];
  v9 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);

  swift_release(*(id *)((char *)a1 + a2[8]));
  swift_release(*(id *)((char *)a1 + a2[9]));
  swift_release(*(id *)((char *)a1 + a2[10]));
  swift_release(*(id *)((char *)a1 + a2[11]));
  v10 = (id *)((char *)a1 + a2[12]);
  v11 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v10, v11) != 1)
    return swift_release(*v10);
  v12 = type metadata accessor for WidgetRenderingMode(0);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
}

_QWORD *sub_100046D24(_QWORD *a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  int *v8;
  uint64_t v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  uint64_t v34;
  char *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *__dst;

  v6 = *(void **)a2;
  v7 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v7;
  v8 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v9 = v8[6];
  __dst = (char *)a1 + v9;
  v10 = (const void *)(a2 + v9);
  v11 = type metadata accessor for AttributedString(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v6;
  v15 = v7;
  if (v13(v10, 1, v11))
  {
    v16 = sub_100006DA4(&qword_1000ACE10);
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  v17 = v8[7];
  v18 = (char *)a1 + v17;
  v19 = a2 + v17;
  v20 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  v21 = v8[8];
  v22 = *(void **)(a2 + v21);
  *(_QWORD *)((char *)a1 + v21) = v22;
  *(_QWORD *)((char *)a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  *((_BYTE *)a1 + v8[10]) = *(_BYTE *)(a2 + v8[10]);
  *((_BYTE *)a1 + v8[11]) = *(_BYTE *)(a2 + v8[11]);
  v23 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v24 = (char *)a1 + v23;
  v25 = a2 + v23;
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v24[8] = *(_BYTE *)(v25 + 8);
  v26 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v27 = (char *)a1 + v26;
  v28 = (uint64_t *)(a2 + v26);
  v29 = *v28;
  LOBYTE(v28) = *((_BYTE *)v28 + 8);
  *(_QWORD *)v27 = v29;
  v27[8] = (char)v28;
  v30 = a3[9];
  v31 = a3[10];
  v32 = (char *)a1 + v30;
  v33 = (uint64_t *)(a2 + v30);
  v34 = *v33;
  LOBYTE(v33) = *((_BYTE *)v33 + 8);
  *(_QWORD *)v32 = v34;
  v32[8] = (char)v33;
  v35 = (char *)a1 + v31;
  v36 = (uint64_t *)(a2 + v31);
  v37 = *v36;
  LOBYTE(v36) = *((_BYTE *)v36 + 8);
  *(_QWORD *)v35 = v37;
  v35[8] = (char)v36;
  v38 = a3[11];
  v39 = a3[12];
  v40 = (char *)a1 + v38;
  v41 = (uint64_t *)(a2 + v38);
  v42 = *v41;
  LOBYTE(v41) = *((_BYTE *)v41 + 8);
  *(_QWORD *)v40 = v42;
  v40[8] = (char)v41;
  v43 = (_QWORD *)((char *)a1 + v39);
  v44 = (uint64_t *)(a2 + v39);
  v45 = v22;
  swift_retain(v29);
  swift_retain(v34);
  swift_retain(v37);
  swift_retain(v42);
  v46 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v44, v46) == 1)
  {
    v47 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v43, v44, v47);
    v48 = 1;
  }
  else
  {
    v49 = *v44;
    *v43 = *v44;
    swift_retain(v49);
    v48 = 0;
  }
  swift_storeEnumTagMultiPayload(v43, v46, v48);
  return a1;
}

uint64_t sub_100046FA4(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  int *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a1 + 8);
  v10 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v10;
  v11 = v10;

  v12 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v13 = v12[6];
  v14 = (void *)(a1 + v13);
  v15 = (void *)(a2 + v13);
  v16 = type metadata accessor for AttributedString(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    v21 = sub_100006DA4(&qword_1000ACE10);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v14, v15, v16);
LABEL_7:
  v22 = v12[7];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  v26 = v12[8];
  v27 = *(void **)(a1 + v26);
  v28 = *(void **)(a2 + v26);
  *(_QWORD *)(a1 + v26) = v28;
  v29 = v28;

  *(_QWORD *)(a1 + v12[9]) = *(_QWORD *)(a2 + v12[9]);
  *(_BYTE *)(a1 + v12[10]) = *(_BYTE *)(a2 + v12[10]);
  *(_BYTE *)(a1 + v12[11]) = *(_BYTE *)(a2 + v12[11]);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v30 = a3[6];
  v31 = a1 + v30;
  v32 = (uint64_t *)(a2 + v30);
  v33 = *v32;
  *(_BYTE *)(v31 + 8) = *((_BYTE *)v32 + 8);
  *(_QWORD *)v31 = v33;
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v34 = a3[8];
  v35 = (uint64_t *)(a1 + v34);
  v36 = (uint64_t *)(a2 + v34);
  v37 = *v36;
  LOBYTE(v36) = *((_BYTE *)v36 + 8);
  v38 = *v35;
  *v35 = v37;
  *((_BYTE *)v35 + 8) = (_BYTE)v36;
  swift_retain(v37);
  swift_release(v38);
  v39 = a3[9];
  v40 = (uint64_t *)(a1 + v39);
  v41 = (uint64_t *)(a2 + v39);
  v42 = *v41;
  LOBYTE(v41) = *((_BYTE *)v41 + 8);
  v43 = *v40;
  *v40 = v42;
  *((_BYTE *)v40 + 8) = (_BYTE)v41;
  swift_retain(v42);
  swift_release(v43);
  v44 = a3[10];
  v45 = (uint64_t *)(a1 + v44);
  v46 = (uint64_t *)(a2 + v44);
  v47 = *v46;
  LOBYTE(v46) = *((_BYTE *)v46 + 8);
  v48 = *v45;
  *v45 = v47;
  *((_BYTE *)v45 + 8) = (_BYTE)v46;
  swift_retain(v47);
  swift_release(v48);
  v49 = a3[11];
  v50 = (uint64_t *)(a1 + v49);
  v51 = (uint64_t *)(a2 + v49);
  v52 = *v51;
  LOBYTE(v51) = *((_BYTE *)v51 + 8);
  v53 = *v50;
  *v50 = v52;
  *((_BYTE *)v50 + 8) = (_BYTE)v51;
  swift_retain(v52);
  swift_release(v53);
  if (a1 != a2)
  {
    v54 = a3[12];
    v55 = (uint64_t *)(a1 + v54);
    v56 = (uint64_t *)(a2 + v54);
    sub_100009578(a1 + v54, &qword_1000ADE30);
    v57 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v56, v57) == 1)
    {
      v58 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v55, v56, v58);
      v59 = 1;
    }
    else
    {
      v60 = *v56;
      *v55 = *v56;
      swift_retain(v60);
      v59 = 0;
    }
    swift_storeEnumTagMultiPayload(v55, v57, v59);
  }
  return a1;
}

_OWORD *sub_1000472C0(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for AttributedString(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100006DA4(&qword_1000ACE10);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = v6[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
  *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)a2 + v6[9]);
  *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
  *((_BYTE *)a1 + v6[11]) = *((_BYTE *)a2 + v6[11]);
  v17 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v18[8] = v19[8];
  v20 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v21[8] = v22[8];
  v23 = a3[9];
  v24 = a3[10];
  v25 = (char *)a1 + v23;
  v26 = (char *)a2 + v23;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v25[8] = v26[8];
  v27 = (char *)a1 + v24;
  v28 = (char *)a2 + v24;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = a3[11];
  v30 = a3[12];
  v31 = (char *)a1 + v29;
  v32 = (char *)a2 + v29;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v31[8] = v32[8];
  v33 = (char *)a1 + v30;
  v34 = (char *)a2 + v30;
  v35 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v34, v35) == 1)
  {
    v36 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v33, v34, v36);
    swift_storeEnumTagMultiPayload(v33, v35, 1);
  }
  else
  {
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_100047500(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;

  v6 = (void *)*a1;
  *a1 = *a2;

  v7 = (void *)a1[1];
  a1[1] = a2[1];

  v8 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v9 = v8[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for AttributedString(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    v17 = sub_100006DA4(&qword_1000ACE10);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  v18 = v8[7];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  v22 = v8[8];
  v23 = *(void **)((char *)a1 + v22);
  *(_QWORD *)((char *)a1 + v22) = *(_QWORD *)((char *)a2 + v22);

  *(_QWORD *)((char *)a1 + v8[9]) = *(_QWORD *)((char *)a2 + v8[9]);
  *((_BYTE *)a1 + v8[10]) = *((_BYTE *)a2 + v8[10]);
  *((_BYTE *)a1 + v8[11]) = *((_BYTE *)a2 + v8[11]);
  v24 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v25[8] = v26[8];
  v27 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = *(_QWORD *)v29;
  LOBYTE(v29) = v29[8];
  v31 = *(_QWORD *)v28;
  *(_QWORD *)v28 = v30;
  v28[8] = (char)v29;
  swift_release(v31);
  v32 = a3[9];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = *(_QWORD *)v34;
  LOBYTE(v34) = v34[8];
  v36 = *(_QWORD *)v33;
  *(_QWORD *)v33 = v35;
  v33[8] = (char)v34;
  swift_release(v36);
  v37 = a3[10];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = *(_QWORD *)v39;
  LOBYTE(v39) = v39[8];
  v41 = *(_QWORD *)v38;
  *(_QWORD *)v38 = v40;
  v38[8] = (char)v39;
  swift_release(v41);
  v42 = a3[11];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = *(_QWORD *)v44;
  LOBYTE(v44) = v44[8];
  v46 = *(_QWORD *)v43;
  *(_QWORD *)v43 = v45;
  v43[8] = (char)v44;
  swift_release(v46);
  if (a1 != a2)
  {
    v47 = a3[12];
    v48 = (char *)a1 + v47;
    v49 = (char *)a2 + v47;
    sub_100009578((uint64_t)a1 + v47, &qword_1000ADE30);
    v50 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v49, v50) == 1)
    {
      v51 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v48, v49, v51);
      swift_storeEnumTagMultiPayload(v48, v50, 1);
    }
    else
    {
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000477EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000477F8);
}

uint64_t sub_1000477F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t IsVibrantText;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unsigned int v11;

  v6 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    IsVibrantText = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, IsVibrantText);
  }
  if ((_DWORD)a2 != 254)
  {
    IsVibrantText = type metadata accessor for IsVibrantText(0);
    v10 = a1 + *(int *)(a3 + 48);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(IsVibrantText - 8) + 48);
    return v9(v10, a2, IsVibrantText);
  }
  v11 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  if (v11 >= 2)
    return ((v11 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1000478AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000478B8);
}

uint64_t sub_1000478B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t IsVibrantText;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    IsVibrantText = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 254)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
      return result;
    }
    IsVibrantText = type metadata accessor for IsVibrantText(0);
    v12 = a1 + *(int *)(a4 + 48);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(IsVibrantText - 8) + 56);
  }
  return v11(v12, a2, a2, IsVibrantText);
}

void sub_100047958(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[9];

  v2 = type metadata accessor for TTRNewWidgetViewModel.Reminder(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v6[2] = "\t";
    v6[3] = &unk_10008A980;
    v6[4] = &unk_10008A2B0;
    v6[5] = &unk_10008A2B0;
    v6[6] = &unk_10008A2B0;
    v6[7] = &unk_10008A2B0;
    sub_10003AEE4(319, (unint64_t *)&unk_1000ADEA8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
    if (v5 <= 0x3F)
    {
      v6[8] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 9, v6, a1 + 16);
    }
  }
}

ValueMetadata *type metadata accessor for TTRAnyListWidget.ReminderVStack.CacheData()
{
  return &type metadata for TTRAnyListWidget.ReminderVStack.CacheData;
}

unint64_t sub_100047A30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AEC40;
  if (!qword_1000AEC40)
  {
    v1 = sub_100007258(&qword_1000AEC48);
    sub_1000095B4(&qword_1000AEC50, &qword_1000AEC58, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AEC40);
  }
  return result;
}

uint64_t sub_100047AB4()
{
  return sub_100047B48(&qword_1000AEC60, &qword_1000AE948, &qword_1000AE920, &qword_1000AE950);
}

uint64_t sub_100047AE8()
{
  return sub_1000095B4(&qword_1000AEC68, &qword_1000AEC70, (uint64_t)&protocol conformance descriptor for ZStack<A>);
}

uint64_t sub_100047B14()
{
  return sub_100047B48(&qword_1000AEC78, &qword_1000AE9D0, &qword_1000AE9B8, &qword_1000AE9D8);
}

uint64_t sub_100047B48(unint64_t *a1, uint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = sub_100007258(a2);
    v9[0] = sub_100007258(a3);
    v9[1] = sub_1000095B4(a4, a3, (uint64_t)&protocol conformance descriptor for HStack<A>);
    swift_getOpaqueTypeConformance2(v9, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100007218(&qword_1000AE988, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100047C0C()
{
  return sub_10003EFC8(&qword_1000AEC80, &qword_1000AEC88, (void (*)(void))sub_100047C40);
}

uint64_t sub_100047C40()
{
  return sub_10003EFC8(&qword_1000AEC90, &qword_1000AEC98, (void (*)(void))sub_100047C64);
}

unint64_t sub_100047C64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AECA0;
  if (!qword_1000AECA0)
  {
    v1 = sub_100007258(&qword_1000AECA8);
    sub_1000095B4(&qword_1000AECB0, &qword_1000AECB8, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AECA0);
  }
  return result;
}

uint64_t sub_100047CE8()
{
  return sub_100049B7C(&qword_1000AECC0, &qword_1000AECC8, (void (*)(void))sub_1000456B4, (void (*)(void))sub_100017698);
}

uint64_t sub_100047D1C(uint64_t a1)
{
  return sub_100044EA0(a1, &qword_1000AEAF8, (uint64_t (*)(void))sub_100046198, (uint64_t)&opaque type descriptor for <<opaque return type of View.invalidatableContent(_:)>>);
}

unint64_t sub_100047D3C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1000AECD0;
  if (!qword_1000AECD0)
  {
    v1 = sub_100007258(&qword_1000AEB58);
    v2[0] = sub_100007258(&qword_1000AEB48);
    v2[1] = sub_10004A02C(&qword_1000AEB88, &qword_1000AEB48, &qword_1000AEB60, (uint64_t (*)(void))sub_1000463A0);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.hyphenationFactor(_:)>>, 1);
    sub_100007218(&qword_1000AE988, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AECD0);
  }
  return result;
}

uint64_t sub_100047E10()
{
  return sub_10003EFC8(&qword_1000AECD8, &qword_1000AECE0, (void (*)(void))sub_100047E44);
}

unint64_t sub_100047E44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AECE8;
  if (!qword_1000AECE8)
  {
    v1 = sub_100007258(&qword_1000AECF0);
    sub_1000095B4(&qword_1000AECF8, &qword_1000AED00, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AECE8);
  }
  return result;
}

uint64_t sub_100047EC8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000932BC, 1);
}

uint64_t sub_100047ED8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100093294, 1);
}

uint64_t sub_100047EE8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10009326C, 1);
}

uint64_t type metadata accessor for TTRAnyListWidget.CompletedView(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000AEEA8, (uint64_t)&nominal type descriptor for TTRAnyListWidget.CompletedView);
}

uint64_t sub_100047F0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100032BC0(*(void ***)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_100047F14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AED28;
  if (!qword_1000AED28)
  {
    v1 = sub_100007258(&qword_1000AED30);
    sub_1000095B4(&qword_1000AED38, &qword_1000AED40, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AED28);
  }
  return result;
}

uint64_t sub_100047F9C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100047FAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AEDA0;
  if (!qword_1000AEDA0)
  {
    v1 = sub_100007258(&qword_1000AED70);
    sub_1000095B4(&qword_1000AEDA8, &qword_1000AED68, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AEDA0);
  }
  return result;
}

uint64_t type metadata accessor for TTRAnyListWidget.ListShareeBadgesView(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000AEF40, (uint64_t)&nominal type descriptor for TTRAnyListWidget.ListShareeBadgesView);
}

_QWORD *sub_100048044(_QWORD *a1)
{
  swift_bridgeObjectRetain(*a1);
  return a1;
}

uint64_t type metadata accessor for TTRAnyListWidget.ListBadge.GearCorner(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000AEFD8, (uint64_t)&nominal type descriptor for TTRAnyListWidget.ListBadge.GearCorner);
}

uint64_t type metadata accessor for TTRAnyListWidget.ListBadge.Core(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000AF068, (uint64_t)&nominal type descriptor for TTRAnyListWidget.ListBadge.Core);
}

id *sub_100048094(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

uint64_t sub_1000480BC(uint64_t a1)
{
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
  return a1;
}

unint64_t sub_1000480E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AEE28;
  if (!qword_1000AEE28)
  {
    v1 = sub_100007258(&qword_1000AEDF8);
    sub_100048168();
    sub_1000095B4(&qword_1000AEE48, &qword_1000AEE18, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AEE28);
  }
  return result;
}

unint64_t sub_100048168()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AEE30;
  if (!qword_1000AEE30)
  {
    v1 = sub_100007258(&qword_1000AEDF0);
    sub_100007218(&qword_1000AEE20, type metadata accessor for TTRAnyListWidget.ListBadge.Core, (uint64_t)&unk_10008B428);
    sub_1000095B4(&qword_1000AEE38, &qword_1000AEE40, (uint64_t)&protocol conformance descriptor for _MaskEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AEE30);
  }
  return result;
}

_BYTE *sub_100048204(_BYTE *a1, uint64_t *a2, uint64_t a3)
{
  _BYTE *v4;
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (_BYTE *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v17);
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a2[1];
    v8 = *((_BYTE *)a2 + 16);
    j__swift_retain(v7);
    *((_QWORD *)v4 + 1) = v7;
    v4[16] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)&v4[v9];
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
      v14 = v10;
      v15 = v12;
      v16 = 1;
    }
    else
    {
      v18 = *v11;
      *v10 = *v11;
      swift_retain(v18);
      v14 = v10;
      v15 = v12;
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v15, v16);
  }
  return v4;
}

uint64_t sub_100048308(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  j__swift_release(*(_QWORD *)(a1 + 8));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 24));
  v5 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v4, v5) != 1)
    return swift_release(*v4);
  v6 = type metadata accessor for WidgetRenderingMode(0);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
}

uint64_t sub_100048384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  j__swift_retain(v6);
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (uint64_t *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v11 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
    v13 = 1;
  }
  else
  {
    v14 = *v10;
    *v9 = *v10;
    swift_retain(v14);
    v13 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v11, v13);
  return a1;
}

uint64_t sub_100048454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  j__swift_retain(v6);
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  j__swift_release(v8);
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)(a1 + v9);
    v11 = (uint64_t *)(a2 + v9);
    sub_100009578(a1 + v9, &qword_1000ADE30);
    v12 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
      v14 = 1;
    }
    else
    {
      v15 = *v11;
      *v10 = *v11;
      swift_retain(v15);
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v12, v14);
  }
  return a1;
}

uint64_t sub_100048548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100048600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v6;
  j__swift_release(v7);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 24);
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    sub_100009578(a1 + v8, &qword_1000ADE30);
    v11 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000486E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000486F0);
}

uint64_t sub_1000486F0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t IsVibrantText;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    IsVibrantText = type metadata accessor for IsVibrantText(0);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(IsVibrantText - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, IsVibrantText);
  }
}

uint64_t sub_10004876C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100048778);
}

_BYTE *sub_100048778(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t IsVibrantText;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    IsVibrantText = type metadata accessor for IsVibrantText(0);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(IsVibrantText - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, IsVibrantText);
  }
  return result;
}

void sub_1000487E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10004A46C(a1, a2, a3, (uint64_t)&unk_10008A980, (uint64_t)&unk_10008A2B0);
}

uint64_t *sub_1000487FC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v5);
  }
  else
  {
    v8 = a3[5];
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain(v5);
    v11 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      v14 = *v10;
      *v9 = *v10;
      swift_retain(v14);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v15 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v15) = *(uint64_t *)((char *)a2 + v15);
  }
  return a1;
}

uint64_t sub_1000488EC(_QWORD *a1, uint64_t a2)
{
  return sub_100048E08(a1, a2, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t *sub_1000488F8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (uint64_t *)((char *)a1 + v7);
  v9 = (uint64_t *)((char *)a2 + v7);
  swift_bridgeObjectRetain(v6);
  v10 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = 1;
  }
  else
  {
    v13 = *v9;
    *v8 = *v9;
    swift_retain(v13);
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v12);
  v14 = a3[7];
  *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
  *(uint64_t *)((char *)a1 + v14) = *(uint64_t *)((char *)a2 + v14);
  return a1;
}

uint64_t *sub_1000489C4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  if (a1 != a2)
  {
    v8 = a3[5];
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    sub_100009578((uint64_t)a1 + v8, &qword_1000ADE30);
    v11 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      v14 = *v10;
      *v9 = *v10;
      swift_retain(v14);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
  }
  *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
  *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  return a1;
}

_QWORD *sub_100048AB8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  return a1;
}

uint64_t *sub_100048B84(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  if (a1 != a2)
  {
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_100009578((uint64_t)a1 + v7, &qword_1000ADE30);
    v10 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  v12 = a3[7];
  *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
  *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
  return a1;
}

uint64_t sub_100048C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100048C7C);
}

uint64_t sub_100048C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100048C8C);
}

void sub_100048C90(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_10003AEE4(319, (unint64_t *)&unk_1000ADEA8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

uint64_t *sub_100048D28(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v5);
  }
  else
  {
    v6 = *(int *)(a3 + 20);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain(v5);
    v9 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = v7;
      v12 = v9;
      v13 = 1;
    }
    else
    {
      v14 = *v8;
      *v7 = *v8;
      swift_retain(v14);
      v11 = v7;
      v12 = v9;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
  }
  return a1;
}

uint64_t sub_100048DFC(_QWORD *a1, uint64_t a2)
{
  return sub_100048E08(a1, a2, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100048E08(_QWORD *a1, uint64_t a2, void (*a3)(_QWORD))
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  a3(*a1);
  v5 = (_QWORD *)((char *)a1 + *(int *)(a2 + 20));
  v6 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v5, v6) != 1)
    return swift_release(*v5);
  v7 = type metadata accessor for WidgetRenderingMode(0);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
}

uint64_t *sub_100048E80(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (uint64_t *)((char *)a1 + v5);
  v7 = (uint64_t *)((char *)a2 + v5);
  swift_retain(v4);
  v8 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v6, v7, v9);
    v10 = 1;
  }
  else
  {
    v11 = *v7;
    *v6 = *v7;
    swift_retain(v11);
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v6, v8, v10);
  return a1;
}

uint64_t *sub_100048F28(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    sub_100009578((uint64_t)a1 + v8, &qword_1000ADE30);
    v11 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      v14 = *v10;
      *v9 = *v10;
      swift_retain(v14);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
  }
  return a1;
}

_QWORD *sub_100048FFC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t *sub_1000490A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_100009578((uint64_t)a1 + v7, &qword_1000ADE30);
    v10 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100049174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100049180);
}

uint64_t sub_100049184(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100006DA4(&qword_1000ADE38);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_100049204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100049210);
}

char *sub_100049214(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100006DA4(&qword_1000ADE38);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_10004928C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_10003AEE4(319, (unint64_t *)&unk_1000ADEA8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

ValueMetadata *type metadata accessor for TTRAnyListWidget.ListBadge.GearCornerMask()
{
  return &type metadata for TTRAnyListWidget.ListBadge.GearCornerMask;
}

uint64_t sub_100049324(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain(v5);
  }
  else
  {
    v7 = (void *)a2[1];
    v6 = a2[2];
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v6;
    v8 = a2[3];
    *(_QWORD *)(a1 + 24) = v8;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v9 = *(int *)(a3 + 32);
    v10 = (uint64_t *)(a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    swift_retain(v5);
    v12 = v7;
    swift_bridgeObjectRetain(v8);
    v13 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v11, v13) == 1)
    {
      v14 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v10, v11, v14);
      v15 = v10;
      v16 = v13;
      v17 = 1;
    }
    else
    {
      v18 = *v11;
      *v10 = *v11;
      swift_retain(v18);
      v15 = v10;
      v16 = v13;
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v16, v17);
  }
  return a1;
}

uint64_t sub_100049424(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*(_QWORD *)a1);

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 32));
  v5 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v4, v5) != 1)
    return swift_release(*v4);
  v6 = type metadata accessor for WidgetRenderingMode(0);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
}

uint64_t sub_1000494AC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *a2;
  v5 = (void *)a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  v7 = *(int *)(a3 + 32);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)((char *)a2 + v7);
  swift_retain(v4);
  v10 = v5;
  swift_bridgeObjectRetain(v6);
  v11 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v9, v11) == 1)
  {
    v12 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v8, v9, v12);
    v13 = 1;
  }
  else
  {
    v14 = *v9;
    *v8 = *v9;
    swift_retain(v14);
    v13 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v11, v13);
  return a1;
}

uint64_t *sub_100049578(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  v8 = (void *)a1[1];
  v9 = (void *)a2[1];
  a1[1] = (uint64_t)v9;
  v10 = v9;

  a1[2] = a2[2];
  v11 = a2[3];
  v12 = a1[3];
  a1[3] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
  if (a1 != a2)
  {
    v13 = *(int *)(a3 + 32);
    v14 = (uint64_t *)((char *)a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    sub_100009578((uint64_t)a1 + v13, &qword_1000ADE30);
    v16 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
      v18 = 1;
    }
    else
    {
      v19 = *v15;
      *v14 = *v15;
      swift_retain(v19);
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v16, v18);
  }
  return a1;
}

uint64_t sub_100049688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(int *)(a3 + 32);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload(v6, v8, 1);
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t *sub_100049740(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = (void *)a1[1];
  a1[1] = a2[1];

  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 32);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    sub_100009578((uint64_t)a1 + v10, &qword_1000ADE30);
    v13 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload(v11, v13, 1);
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100049838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100049844);
}

uint64_t sub_100049844(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100006DA4(&qword_1000ADE38);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 32)], a2, v8);
  }
}

uint64_t sub_1000498C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000498D0);
}

char *sub_1000498D0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100006DA4(&qword_1000ADE38);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 32)], a2, a2, v7);
  }
  return result;
}

void sub_100049948(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = "\b";
  v4[2] = &unk_10008B2D0;
  v4[3] = &unk_10008A980;
  sub_10003AEE4(319, (unint64_t *)&unk_1000ADEA8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t sub_1000499EC()
{
  return sub_1000095B4(&qword_1000AF0B0, &qword_1000AF0B8, (uint64_t)&protocol conformance descriptor for HStack<A>);
}

uint64_t sub_100049A18()
{
  return sub_100047B48(&qword_1000AF0C0, &qword_1000AF0C8, &qword_1000AEDC0, &qword_1000AEDD8);
}

uint64_t sub_100049A4C()
{
  return sub_100039000(&qword_1000AF0D0, &qword_1000AF0D8, (void (*)(void))sub_100049A80, (uint64_t)&protocol conformance descriptor for <A> Group<A>);
}

unint64_t sub_100049A80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AF0E0;
  if (!qword_1000AF0E0)
  {
    v1 = sub_100007258(&qword_1000AF0E8);
    sub_100007218(&qword_1000AEE20, type metadata accessor for TTRAnyListWidget.ListBadge.Core, (uint64_t)&unk_10008B428);
    sub_1000480E4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AF0E0);
  }
  return result;
}

uint64_t sub_100049B04(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000933F0, 1);
}

uint64_t sub_100049B14(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000933C8, 1);
}

uint64_t sub_100049B24(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000933A0, 1);
}

uint64_t sub_100049B34(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100093378, 1);
}

uint64_t sub_100049B44(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100093350, 1);
}

uint64_t type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000AF360, (uint64_t)&nominal type descriptor for TTRAnyListWidget.ListBadge.IconBackground);
}

uint64_t type metadata accessor for TTRAnyListWidget.ListBadge.EmojiBackground(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000AF3F8, (uint64_t)&nominal type descriptor for TTRAnyListWidget.ListBadge.EmojiBackground);
}

uint64_t sub_100049B7C(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100007258(a2);
    a3();
    a4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100049BEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AF130;
  if (!qword_1000AF130)
  {
    v1 = sub_100007258(&qword_1000AF118);
    sub_100007218(&qword_1000AF138, type metadata accessor for TTRAnyListWidget.ListBadge.EmojiBackground, (uint64_t)&unk_10008B564);
    sub_1000095B4(&qword_1000AF140, &qword_1000AF148, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AF130);
  }
  return result;
}

unint64_t sub_100049C88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AF150;
  if (!qword_1000AF150)
  {
    v1 = sub_100007258(&qword_1000AF0F8);
    sub_100007218(&qword_1000AF158, type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground, (uint64_t)&unk_10008B514);
    sub_1000095B4(&qword_1000AF160, &qword_1000AF168, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AF150);
  }
  return result;
}

unint64_t sub_100049D24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AF180;
  if (!qword_1000AF180)
  {
    v1 = sub_100007258(&qword_1000AF170);
    sub_100049DC0(&qword_1000AF188, &qword_1000AF190);
    sub_1000095B4(&qword_1000AD730, &qword_1000AD738, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AF180);
  }
  return result;
}

uint64_t sub_100049DC0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100007258(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100049E1C()
{
  return sub_10003EFC8(&qword_1000AF1C0, &qword_1000AF1C8, (void (*)(void))sub_100049E40);
}

unint64_t sub_100049E40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AF1D0;
  if (!qword_1000AF1D0)
  {
    v1 = sub_100007258(&qword_1000AF1D8);
    sub_100049DC0(&qword_1000AF1A8, &qword_1000AF198);
    sub_1000095B4(&qword_1000AF1E0, &qword_1000AF1E8, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AF1D0);
  }
  return result;
}

unint64_t sub_100049EDC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1000AF220;
  if (!qword_1000AF220)
  {
    v1 = sub_100007258(&qword_1000AF1F8);
    v2[0] = sub_100007258(&qword_1000AD718);
    v2[1] = sub_100018A08();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_1000095B4(&qword_1000AD730, &qword_1000AD738, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AF220);
  }
  return result;
}

unint64_t sub_100049F88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AF228;
  if (!qword_1000AF228)
  {
    v1 = sub_100007258(&qword_1000AF208);
    sub_10004A02C(&qword_1000AF230, &qword_1000AF200, &qword_1000AF1F8, (uint64_t (*)(void))sub_100049EDC);
    sub_1000095B4(&qword_1000AF238, &qword_1000AD6C0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AF228);
  }
  return result;
}

uint64_t sub_10004A02C(unint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = sub_100007258(a2);
    v9[0] = sub_100007258(a3);
    v9[1] = a4();
    swift_getOpaqueTypeConformance2(v9, &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10004A0BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for TTRAnyListWidget.ListShareeBadgesView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 20));
  v7 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10004A16C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRAnyListWidget.ListShareeBadgesView(0) - 8) + 80);
  return sub_10002BE94(a1, (uint64_t *)(v2 + ((v5 + 16) & ~v5)), a2);
}

unint64_t sub_10004A1B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AF260;
  if (!qword_1000AF260)
  {
    v1 = sub_100007258(&qword_1000AF250);
    sub_10004A224();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Range<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AF260);
  }
  return result;
}

unint64_t sub_10004A224()
{
  unint64_t result;

  result = qword_1000AF268;
  if (!qword_1000AF268)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_1000AF268);
  }
  return result;
}

unint64_t sub_10004A268()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AF270;
  if (!qword_1000AF270)
  {
    v1 = sub_100007258(&qword_1000AF258);
    sub_10003EFC8(&qword_1000AF278, &qword_1000AF280, (void (*)(void))sub_10004A30C);
    sub_1000095B4(&qword_1000AF290, &qword_1000AF298, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AF270);
  }
  return result;
}

unint64_t sub_10004A30C()
{
  unint64_t result;

  result = qword_1000AF288;
  if (!qword_1000AF288)
  {
    result = swift_getWitnessTable(&unk_10008B4C4, &type metadata for TTRAnyListWidget.ListShareeBadgesView.BadgeView);
    atomic_store(result, (unint64_t *)&qword_1000AF288);
  }
  return result;
}

unint64_t sub_10004A350()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1000AF2E8;
  if (!qword_1000AF2E8)
  {
    v1 = sub_100007258(&qword_1000AF2D8);
    v2[0] = sub_100007258(&qword_1000AF2D0);
    v2[1] = sub_1000095B4(&qword_1000AF2E0, &qword_1000AF2D0, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AF2E8);
  }
  return result;
}

uint64_t sub_10004A404(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 <= 3)
    return swift_release(result);
  return result;
}

uint64_t sub_10004A434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004A440);
}

uint64_t sub_10004A444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004A450);
}

void sub_10004A454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10004A46C(a1, a2, a3, (uint64_t)&value witness table for Builtin.NativeObject + 64, (uint64_t)&unk_10008A980);
}

void sub_10004A46C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[3];

  v8[0] = a4;
  v8[1] = a5;
  sub_10003AEE4(319, (unint64_t *)&unk_1000ADEA8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v7 <= 0x3F)
  {
    v8[2] = *(_QWORD *)(v6 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v8, a1 + 16);
  }
}

uint64_t sub_10004A4E8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain(v5);
  }
  else
  {
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v6 = *(int *)(a3 + 24);
    v7 = (uint64_t *)(a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain(v5);
    v9 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = v7;
      v12 = v9;
      v13 = 1;
    }
    else
    {
      v14 = *v8;
      *v7 = *v8;
      swift_retain(v14);
      v11 = v7;
      v12 = v9;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
  }
  return a1;
}

uint64_t sub_10004A5C4(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*a1);
  v4 = (_QWORD *)((char *)a1 + *(int *)(a2 + 24));
  v5 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v4, v5) != 1)
    return swift_release(*v4);
  v6 = type metadata accessor for WidgetRenderingMode(0);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
}

uint64_t sub_10004A63C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  v5 = *(int *)(a3 + 24);
  v6 = (uint64_t *)(a1 + v5);
  v7 = (uint64_t *)((char *)a2 + v5);
  swift_retain(v4);
  v8 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v6, v7, v9);
    v10 = 1;
  }
  else
  {
    v11 = *v7;
    *v6 = *v7;
    swift_retain(v11);
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v6, v8, v10);
  return a1;
}

uint64_t *sub_10004A6EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 24);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    sub_100009578((uint64_t)a1 + v8, &qword_1000ADE30);
    v11 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      v14 = *v10;
      *v9 = *v10;
      swift_retain(v14);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
  }
  return a1;
}

uint64_t sub_10004A7C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_100006DA4(&qword_1000ADE30);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for WidgetRenderingMode(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t *sub_10004A878(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_100009578((uint64_t)a1 + v7, &qword_1000ADE30);
    v10 = sub_100006DA4(&qword_1000ADE30);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for WidgetRenderingMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10004A950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004A95C);
}

uint64_t sub_10004A960(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100006DA4(&qword_1000ADE38);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_10004A9E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004A9EC);
}

char *sub_10004A9F0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100006DA4(&qword_1000ADE38);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t destroy for TTRAnyListWidget.ListShareeBadgesView.BadgeView(uint64_t a1)
{

  return sub_10003D1A0(*(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s24RemindersWidgetExtension16TTRAnyListWidgetV20ListShareeBadgesViewV9BadgeViewVwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  char v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 16);
  v6 = v3;
  sub_10003CEB8(v4, v5);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for TTRAnyListWidget.ListShareeBadgesView.BadgeView(uint64_t a1, void **a2)
{
  void **v2;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = a2;
  v4 = *a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *a2;
  v6 = v4;

  v7 = (uint64_t)v2[1];
  LOBYTE(v2) = *((_BYTE *)v2 + 16);
  sub_10003CEB8(v7, (char)v2);
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = (_BYTE)v2;
  sub_10003D1A0(v8, v9);
  return a1;
}

__n128 initializeWithTake for TTRAnyListWidget.ListShareeBadgesView.BadgeView(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TTRAnyListWidget.ListShareeBadgesView.BadgeView(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v5;
  sub_10003D1A0(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRAnyListWidget.ListShareeBadgesView.BadgeView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRAnyListWidget.ListShareeBadgesView.BadgeView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRAnyListWidget.ListShareeBadgesView.BadgeView()
{
  return &type metadata for TTRAnyListWidget.ListShareeBadgesView.BadgeView;
}

uint64_t sub_10004AC48()
{
  return sub_100039000(&qword_1000AF438, &qword_1000AF440, (void (*)(void))sub_10004AC7C, (uint64_t)&protocol conformance descriptor for <A> Group<A>);
}

unint64_t sub_10004AC7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AF448;
  if (!qword_1000AF448)
  {
    v1 = sub_100007258(&qword_1000AF450);
    sub_100049B7C(&qword_1000AF128, &qword_1000AF110, (void (*)(void))sub_100049BEC, (void (*)(void))sub_100049C88);
    sub_100007218(&qword_1000AF158, type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground, (uint64_t)&unk_10008B514);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AF448);
  }
  return result;
}

uint64_t sub_10004AD20(uint64_t a1)
{
  return sub_100044EA0(a1, &qword_1000AF208, (uint64_t (*)(void))sub_100049F88, (uint64_t)&opaque type descriptor for <<opaque return type of View.dynamicTypeSize(_:)>>);
}

unint64_t sub_10004AD40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AF458;
  if (!qword_1000AF458)
  {
    v1 = sub_100007258(&qword_1000AF2A0);
    sub_1000095B4(&qword_1000AF460, &qword_1000AF240, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AF458);
  }
  return result;
}

uint64_t sub_10004ADC4()
{
  return sub_10003EFC8(&qword_1000AF468, &qword_1000AF2F8, (void (*)(void))sub_10004ADF8);
}

unint64_t sub_10004ADF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AF470;
  if (!qword_1000AF470)
  {
    v1 = sub_100007258(&qword_1000AF2B0);
    sub_10004AE7C();
    sub_1000095B4(&qword_1000AF480, &qword_1000AF2F0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AF470);
  }
  return result;
}

unint64_t sub_10004AE7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AF478;
  if (!qword_1000AF478)
  {
    v1 = sub_100007258(&qword_1000AF2A8);
    sub_10004A350();
    sub_1000095B4(&qword_1000AF2E0, &qword_1000AF2D0, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AF478);
  }
  return result;
}

uint64_t sub_10004AF00()
{
  return sub_10003EFC8(&qword_1000AF488, &qword_1000AF490, (void (*)(void))sub_10004AF34);
}

uint64_t sub_10004AF34()
{
  return sub_10003EFC8(&qword_1000AF498, &qword_1000AF4A0, (void (*)(void))sub_10004AF58);
}

unint64_t sub_10004AF58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AF4A8;
  if (!qword_1000AF4A8)
  {
    v1 = sub_100007258(&qword_1000AF4B0);
    sub_10004B004(&qword_1000AF4B8, &qword_1000AF4C0, &qword_1000AF4C8, &qword_1000AF4D0);
    sub_1000095B4(&qword_1000AF4C8, &qword_1000AF4D0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AF4A8);
  }
  return result;
}

uint64_t sub_10004B004(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100007258(a2);
    sub_1000095B4(&qword_1000AF2E0, &qword_1000AF2D0, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
    sub_1000095B4(a3, a4, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10004B0A4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100093468, 1);
}

uint64_t sub_10004B0B4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100093440, 1);
}

uint64_t sub_10004B0C4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100093418, 1);
}

uint64_t sub_10004B0D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10002A880(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_10004B0DC()
{
  return sub_10003EFC8(&qword_1000AF510, &qword_1000AF4E0, (void (*)(void))sub_10004B100);
}

unint64_t sub_10004B100()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AF518;
  if (!qword_1000AF518)
  {
    v1 = sub_100007258(&qword_1000AF4D8);
    sub_10004B004(&qword_1000AF4F0, &qword_1000AF4E8, &qword_1000AF4F8, &qword_1000AF500);
    sub_1000095B4(&qword_1000AF2E0, &qword_1000AF2D0, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AF518);
  }
  return result;
}

uint64_t sub_10004B1A4()
{
  return sub_10004B1C8(&qword_1000AF520, &qword_1000AF508, &qword_1000AF4E0, sub_10004B0DC);
}

uint64_t sub_10004B1C8(unint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = sub_100007258(a2);
    v9[0] = sub_100007258(a3);
    v9[1] = a4();
    swift_getOpaqueTypeConformance2(v9, &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10004B25C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 <= 3)
    return swift_retain(result);
  return result;
}

unint64_t sub_10004B274()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AF550;
  if (!qword_1000AF550)
  {
    v1 = sub_100007258(&qword_1000AF540);
    sub_1000095B4(&qword_1000AF2E0, &qword_1000AF2D0, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AF550);
  }
  return result;
}

uint64_t sub_10004B2F8()
{
  return sub_10004B1C8(&qword_1000AF558, &qword_1000AF548, &qword_1000AF540, (uint64_t (*)(void))sub_10004B274);
}

uint64_t sub_10004B31C()
{
  return sub_100049B7C(&qword_1000AF5A0, &qword_1000AF5A8, (void (*)(void))sub_10004B1A4, (void (*)(void))sub_10004B0DC);
}

uint64_t sub_10004B350()
{
  return sub_100049B7C(&qword_1000AF5B0, &qword_1000AF5B8, (void (*)(void))sub_10004B2F8, (void (*)(void))sub_10004B274);
}

uint64_t sub_10004B384()
{
  return sub_10003EFC8(&qword_1000AF5C0, &qword_1000AF590, (void (*)(void))sub_10004B3B8);
}

unint64_t sub_10004B3B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AF5C8;
  if (!qword_1000AF5C8)
  {
    v1 = sub_100007258(&qword_1000AF568);
    sub_10004B43C();
    sub_1000095B4(&qword_1000AF5E8, &qword_1000AF5F0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AF5C8);
  }
  return result;
}

unint64_t sub_10004B43C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AF5D0;
  if (!qword_1000AF5D0)
  {
    v1 = sub_100007258(&qword_1000AF580);
    sub_10003EFC8(&qword_1000AF5D8, &qword_1000AF578, (void (*)(void))sub_10004B4E0);
    sub_1000095B4(&qword_1000AD730, &qword_1000AD738, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AF5D0);
  }
  return result;
}

unint64_t sub_10004B4E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AF5E0;
  if (!qword_1000AF5E0)
  {
    v1 = sub_100007258(&qword_1000AF570);
    swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of Image.widgetAccentedRenderingMode(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000AF5E0);
  }
  return result;
}

uint64_t sub_10004B568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000CF88(v0, qword_1000AF5F8);
  v1 = sub_10000CF70(v0, (uint64_t)qword_1000AF5F8);
  if (qword_1000AC888 != -1)
    swift_once(&qword_1000AC888, sub_10001D5C8);
  v2 = sub_10000CF70(v0, (uint64_t)qword_1000B9E48);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10004B5F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Configuration;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = v3;
  v41 = a2;
  v42 = a3;
  v6 = sub_100006DA4(&qword_1000AF8B8);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Configuration = type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  v40 = *(_QWORD *)(Configuration - 8);
  v10 = *(_QWORD *)(v40 + 64);
  v11 = __chkstk_darwin(Configuration);
  v12 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v37 - v13;
  if (qword_1000AC920 != -1)
    swift_once(&qword_1000AC920, sub_10004B568);
  v15 = type metadata accessor for Logger(0);
  sub_10000CF70(v15, (uint64_t)qword_1000AF5F8);
  v16 = sub_1000072AC(a1, (uint64_t)v14, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v37 = a1;
    v19 = swift_slowAlloc(12, -1);
    v39 = v4;
    v20 = (uint8_t *)v19;
    v21 = swift_slowAlloc(32, -1);
    v44 = v21;
    v38 = v8;
    *(_DWORD *)v20 = 136446210;
    sub_1000072AC((uint64_t)v14, (uint64_t)v12, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
    v22 = String.init<A>(describing:)(v12, Configuration);
    v24 = v23;
    v43 = sub_10007FA38(v22, v23, &v44);
    a1 = v37;
    v8 = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v20 + 4, v20 + 12);
    swift_bridgeObjectRelease(v24);
    sub_100007EB4((uint64_t)v14, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "TTRNewWidgetInteractor fetching default list {configuration: %{public}s}", v20, 0xCu);
    swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    v25 = v20;
    v4 = v39;
    swift_slowDealloc(v25, -1, -1);
  }
  else
  {
    sub_100007EB4((uint64_t)v14, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  }

  sub_1000072AC(a1, (uint64_t)v12, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  v26 = *(unsigned __int8 *)(v40 + 80);
  v27 = (v26 + 24) & ~v26;
  v28 = swift_allocObject(&unk_1000A8BD8, v27 + v10, v26 | 7);
  *(_QWORD *)(v28 + 16) = v4;
  sub_100007EF0((uint64_t)v12, v28 + v27, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  v29 = swift_allocObject(&unk_1000A8C00, 32, 7);
  v30 = v42;
  *(_QWORD *)(v29 + 16) = v41;
  *(_QWORD *)(v29 + 24) = v30;
  v31 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v8, 1, 1, v31);
  type metadata accessor for MainActor(0);
  swift_retain_n(v4, 2);
  swift_retain(v30);
  swift_retain(v28);
  v32 = swift_retain(v29);
  v33 = static MainActor.shared.getter(v32);
  v34 = (_QWORD *)swift_allocObject(&unk_1000A8C28, 72, 7);
  v34[2] = v33;
  v34[3] = &protocol witness table for MainActor;
  v34[4] = &unk_1000AFAA0;
  v34[5] = v28;
  v34[6] = v4;
  v34[7] = sub_10005C760;
  v34[8] = v29;
  v35 = sub_100054AAC((uint64_t)v8, (uint64_t)&unk_1000AFAA8, (uint64_t)v34);
  swift_release(v28);
  swift_release(v29);
  return swift_release(v35);
}

uint64_t sub_10004B9A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3[8] = a2;
  v3[9] = a3;
  v3[7] = a1;
  v4 = type metadata accessor for REMRemindersListDataView.ReminderLite(0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v3[12] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for REMRemindersListDataView.FlatModel(0);
  v3[13] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[14] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[15] = swift_task_alloc(v8);
  v3[16] = swift_task_alloc(v8);
  v3[17] = swift_task_alloc(v8);
  v3[18] = swift_task_alloc(v8);
  v9 = sub_100006DA4(&qword_1000AFAB0);
  v3[19] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[20] = v10;
  v3[21] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for REMRemindersListDataView.ListModel(0);
  v3[22] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v3[23] = v12;
  v3[24] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  v3[25] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v3[26] = v14;
  v3[27] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  v3[28] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v3[29] = v16;
  v3[30] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100006DA4(&qword_1000AF8A0);
  v3[31] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v3[32] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v3[33] = v19;
  v3[34] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10004BB78, 0, 0);
}

uint64_t sub_10004BB78()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t Configuration;
  uint64_t v35;
  uint64_t v36;

  v1 = *(void **)(*(_QWORD *)(v0 + 64) + 24);
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 280) = v1;
  v2 = objc_msgSend(v1, "fetchDefaultListWithError:", v0 + 40);
  v3 = v2;
  *(_QWORD *)(v0 + 288) = v2;
  if (*(_QWORD *)(v0 + 40))
  {
    v4 = *(id *)(v0 + 40);
LABEL_3:

    swift_willThrow();
    v6 = *(_QWORD *)(v0 + 240);
    v5 = *(_QWORD *)(v0 + 248);
    v7 = *(_QWORD *)(v0 + 216);
    v8 = *(_QWORD *)(v0 + 192);
    v9 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 144);
    v12 = *(_QWORD *)(v0 + 120);
    v13 = *(_QWORD *)(v0 + 128);
    v35 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 272));
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v13);
    swift_task_dealloc(v12);
    swift_task_dealloc(v35);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (!v2)
  {
    v26 = (void *)objc_opt_self(REMError);
    v3 = String._bridgeToObjectiveC()();
    v27 = objc_msgSend(v26, "internalErrorWithDebugDescription:", v3);
    goto LABEL_3;
  }
  if (qword_1000AC920 != -1)
    swift_once(&qword_1000AC920, sub_10004B568);
  v15 = type metadata accessor for Logger(0);
  sub_10000CF70(v15, (uint64_t)qword_1000AF5F8);
  v16 = v3;
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v36 = v20;
    *(_DWORD *)v19 = 136446210;
    v21 = objc_msgSend(v16, "objectID");
    v22 = objc_msgSend(v21, "stringRepresentation");

    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v25 = v24;

    *(_QWORD *)(v0 + 48) = sub_10007FA38(v23, v25, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v19 + 4, v19 + 12);
    swift_bridgeObjectRelease(v25);

    _os_log_impl((void *)&_mh_execute_header, v17, v18, "TTRNewWidgetInteractor fetched default list {listID: %{public}s}", v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);
  }
  else
  {

  }
  v28 = *(_QWORD *)(v0 + 256);
  v29 = *(_QWORD *)(v0 + 264);
  v30 = *(_QWORD *)(v0 + 248);
  sub_100009434(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_sortingStyle, v30, &qword_1000AF8A0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v30, 1, v28) == 1)
  {
    v31 = *(_QWORD *)(v0 + 248);
    v32 = objc_msgSend(v16, "sortingStyle");
    REMSortingStyle.dataViewSortingStyle.getter();

    sub_100009578(v31, &qword_1000AF8A0);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 264) + 32))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 256));
  }
  v33 = *(_QWORD *)(*(_QWORD *)(v0 + 64)
                  + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache);
  *(_QWORD *)(v0 + 296) = v33;
  Configuration = type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  *(_QWORD *)(v0 + 304) = Configuration;
  *(_DWORD *)(v0 + 320) = *(_DWORD *)(Configuration + 28);
  return swift_task_switch(sub_10004BFC4, v33, 0);
}

uint64_t sub_10004BFC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 72) + *(int *)(v0 + 320);
  swift_beginAccess(v1 + 120, v0 + 16, 0, 0);
  v3 = *(_QWORD *)(v1 + 120);
  v4 = swift_task_alloc(32);
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = swift_bridgeObjectRetain(v3);
  v6 = sub_10005A260(v5, (uint64_t (*)(void *, uint64_t))sub_10005E234, v4);
  *(_QWORD *)(v0 + 312) = 0;
  swift_bridgeObjectRelease(v3);
  swift_task_dealloc(v4);
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v14 = v6;
    else
      v14 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v9 = *(_QWORD *)(v0 + 232);
  v8 = *(uint64_t **)(v0 + 240);
  v10 = *(_QWORD *)(v0 + 224);
  if (v7)
  {
    v11 = sub_10005A4EC(v6);
    swift_bridgeObjectRelease(v6);
    *v8 = v11;
    v12 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.allowlist(_:);
  }
  else
  {
    swift_bridgeObjectRelease(v6);
    v12 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.off(_:);
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v8, *v12, v10);
  return swift_task_switch(sub_10004C130, 0, 0);
}

uint64_t sub_10004C130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(_QWORD, unint64_t, _QWORD);
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v1 = *(_QWORD *)(v0 + 304);
  v90 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 288);
  v4 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 240);
  v6 = *(_QWORD **)(v0 + 216);
  v7 = *(uint64_t **)(v0 + 72);
  sub_10004C624(v7, v5, v6);
  static REMRemindersListDataView.fetchList(store:list:sortingStyle:showCompleted:countCompleted:remindersPrefetch:fetchSubtasks:diffingAgainst:)(v3, v2, v4, v5, 0, v6, (char *)v7 + *(int *)(v1 + 24), 0);
  if (v90)
  {
    v9 = *(_QWORD *)(v0 + 264);
    v8 = *(_QWORD *)(v0 + 272);
    v10 = *(_QWORD *)(v0 + 256);
    v12 = *(_QWORD *)(v0 + 232);
    v11 = *(_QWORD *)(v0 + 240);
    v14 = *(_QWORD *)(v0 + 216);
    v13 = *(_QWORD *)(v0 + 224);
    v16 = *(_QWORD *)(v0 + 200);
    v15 = *(_QWORD *)(v0 + 208);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    v17 = *(_QWORD *)(v0 + 240);
    v18 = *(_QWORD *)(v0 + 248);
    v19 = *(_QWORD *)(v0 + 216);
    v20 = *(_QWORD *)(v0 + 192);
    v21 = *(_QWORD *)(v0 + 168);
    v23 = *(_QWORD *)(v0 + 136);
    v22 = *(_QWORD *)(v0 + 144);
    v24 = *(_QWORD *)(v0 + 128);
    v91 = *(_QWORD *)(v0 + 120);
    v25 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 272));
    swift_task_dealloc(v18);
    swift_task_dealloc(v17);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v91);
    swift_task_dealloc(v25);
    v26 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v28 = *(_QWORD *)(v0 + 160);
    v27 = *(_QWORD *)(v0 + 168);
    v30 = *(_QWORD *)(v0 + 144);
    v29 = *(_QWORD *)(v0 + 152);
    v31 = *(_QWORD *)(v0 + 136);
    v32 = *(_QWORD *)(v0 + 104);
    v33 = *(_QWORD *)(v0 + 112);
    v34 = *(uint64_t **)(v0 + 72);
    REMRemindersListDataView.Result.model.getter(v29);
    v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
    v36 = REMRemindersListDataView.ListModel.model.getter(v35);
    v37 = REMRemindersListDataView.FlatModel.reminders.getter(v36);
    v38 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v38(v30, v32);
    v39 = sub_10005A64C(v37, v34);
    v40 = swift_bridgeObjectRelease(v37);
    v41 = REMRemindersListDataView.ListModel.model.getter(v40);
    v42 = REMRemindersListDataView.FlatModel.reminders.getter(v41);
    v89 = (uint64_t (*)(uint64_t, uint64_t))v38;
    v38(v31, v32);
    v43 = *(_QWORD *)(v42 + 16);
    v92 = v39;
    if (v43)
    {
      v44 = *(_QWORD *)(v0 + 88);
      v45 = v42 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
      v46 = *(_QWORD *)(v44 + 72);
      v47 = *(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v44 + 16);
      swift_bridgeObjectRetain(v42);
      v48 = 0;
      while (1)
      {
        v49 = v47(*(_QWORD *)(v0 + 96), v45, *(_QWORD *)(v0 + 80));
        if ((REMRemindersListDataView.ReminderLite.isCompleted.getter(v49) & 1) == 0)
        {
          v50 = __OFADD__(v48, 1);
          v51 = v48 + 1;
          if (v50)
            __break(1u);
          v52 = REMRemindersListDataView.ReminderLite.subtaskCount.getter();
          v50 = __OFADD__(v51, v52);
          v48 = v51 + v52;
          if (v50)
            break;
        }
        (*(void (**)(_QWORD, _QWORD))(v44 + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
        v45 += v46;
        if (!--v43)
          goto LABEL_11;
      }
      __break(1u);
LABEL_11:
      v53 = swift_bridgeObjectRelease_n(v42, 2);
    }
    else
    {
      v53 = swift_bridgeObjectRelease(v42);
      v48 = 0;
    }
    v82 = *(_QWORD *)(v0 + 256);
    v83 = *(_QWORD *)(v0 + 272);
    v80 = *(_QWORD *)(v0 + 240);
    v81 = *(_QWORD *)(v0 + 264);
    v78 = *(_QWORD *)(v0 + 232);
    v79 = *(_QWORD *)(v0 + 224);
    v74 = *(_QWORD *)(v0 + 208);
    v75 = *(void **)(v0 + 288);
    v54 = *(_QWORD *)(v0 + 192);
    v76 = *(_QWORD *)(v0 + 200);
    v77 = *(_QWORD *)(v0 + 216);
    v72 = *(_QWORD *)(v0 + 184);
    v73 = *(_QWORD *)(v0 + 176);
    v85 = *(_QWORD *)(v0 + 248);
    v86 = *(_QWORD *)(v0 + 168);
    v55 = *(_QWORD *)(v0 + 144);
    v87 = *(_QWORD *)(v0 + 136);
    v56 = *(_QWORD *)(v0 + 120);
    v84 = *(_QWORD *)(v0 + 128);
    v57 = *(_QWORD *)(v0 + 104);
    v88 = *(_QWORD *)(v0 + 96);
    v58 = *(_QWORD *)(v0 + 56);
    v59 = REMRemindersListDataView.ListModel.model.getter(v53);
    v60 = REMRemindersListDataView.FlatModel.hasIncompleteOrCompletedReminders.getter(v59);
    v61 = v89(v84, v57);
    v62 = v60 & 1 | 0x40;
    v71 = REMRemindersListDataView.ListModel.list.getter(v61);
    v63 = REMRemindersListDataView.ListModel.model.getter(v71);
    v64 = REMRemindersListDataView.FlatModel.prefetchedReminders.getter(v63);
    v89(v55, v57);
    v70 = sub_10004C7F0(v64);
    v65 = swift_bridgeObjectRelease(v64);
    v66 = REMRemindersListDataView.ListModel.model.getter(v65);
    v67 = REMRemindersListDataView.FlatModel.prefetchedDueReminders.getter(v66);
    v89(v56, v57);
    v68 = sub_10004C7F0(v67);
    swift_bridgeObjectRelease(v67);

    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v54, v73);
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v77, v76);
    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v80, v79);
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v83, v82);
    *(_QWORD *)v58 = v71;
    *(_QWORD *)(v58 + 8) = v48;
    *(_BYTE *)(v58 + 16) = v62;
    *(_QWORD *)(v58 + 24) = v92;
    *(_QWORD *)(v58 + 32) = v70;
    *(_QWORD *)(v58 + 40) = v68;
    swift_task_dealloc(v83);
    swift_task_dealloc(v85);
    swift_task_dealloc(v80);
    swift_task_dealloc(v77);
    swift_task_dealloc(v54);
    swift_task_dealloc(v86);
    swift_task_dealloc(v55);
    swift_task_dealloc(v87);
    swift_task_dealloc(v84);
    swift_task_dealloc(v56);
    swift_task_dealloc(v88);
    v26 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v26();
}

uint64_t sub_10004C624@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t Configuration;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;

  v6 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *a1;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 88))(v9, v6);
  if (v11 == enum case for REMRemindersListDataView.ShowCompleted.after(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
LABEL_14:
    v15 = v10;
LABEL_15:
    v16 = (uint64_t)a3 + *(int *)(sub_100006DA4(&qword_1000AF950) + 48);
    *a3 = v15;
    Configuration = type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
    sub_100009434((uint64_t)a1 + *(int *)(Configuration + 20), v16, &qword_1000AF8C8);
    v18 = enum case for REMRemindersListDataView.RemindersPrefetch.initialAndDateRange(_:);
    v19 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(a3, v18, v19);
  }
  if (v11 == enum case for REMRemindersListDataView.ShowCompleted.allowlist(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v7 + 96))(v9, v6);
    v12 = *v9;
    if ((v12 & 0xC000000000000001) != 0)
    {
      if (v12 < 0)
        v13 = v12;
      else
        v13 = v12 & 0xFFFFFFFFFFFFFF8;
      v6 = __CocoaSet.count.getter(v13);
    }
    else
    {
      v6 = *(_QWORD *)(v12 + 16);
    }
    swift_bridgeObjectRelease(v12);
    v15 = v10 + v6;
    if (!__OFADD__(v10, v6))
      goto LABEL_15;
    __break(1u);
  }
  else if (v11 == enum case for REMRemindersListDataView.ShowCompleted.off(_:)
         || v11 == enum case for REMRemindersListDataView.ShowCompleted.on(_:))
  {
    goto LABEL_14;
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v6, v6);
  __break(1u);
  return result;
}

uint64_t sub_10004C7F0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void **v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v18 = _swiftEmptyArrayStorage;
  result = sub_1000818B8(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v18;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
        v18 = v3;
        v8 = v3[2];
        v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_1000818B8(v7 > 1, v8 + 1, 1);
          v3 = v18;
        }
        ++v5;
        v16 = type metadata accessor for REMReminder_Codable(0);
        v17 = &protocol witness table for REMReminder;
        *(_QWORD *)&v15 = v6;
        v3[2] = v8 + 1;
        sub_100006E64(&v15, (uint64_t)&v3[5 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (void **)(a1 + 32);
      do
      {
        v10 = *v9;
        v18 = v3;
        v11 = v3[2];
        v12 = v3[3];
        v13 = v10;
        if (v11 >= v12 >> 1)
        {
          sub_1000818B8(v12 > 1, v11 + 1, 1);
          v3 = v18;
        }
        v16 = type metadata accessor for REMReminder_Codable(0);
        v17 = &protocol witness table for REMReminder;
        *(_QWORD *)&v15 = v13;
        v3[2] = v11 + 1;
        sub_100006E64(&v15, (uint64_t)&v3[5 * v11 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_10004C9B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t Configuration;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v5 = v4;
  v55 = a3;
  v56 = a4;
  v8 = sub_100006DA4(&qword_1000AF8B8);
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Configuration = type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  v11 = *(_QWORD *)(Configuration - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = __chkstk_darwin(Configuration);
  v14 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)&v47 - v15;
  if (qword_1000AC920 != -1)
    swift_once(&qword_1000AC920, sub_10004B568);
  v17 = type metadata accessor for Logger(0);
  sub_10000CF70(v17, (uint64_t)qword_1000AF5F8);
  sub_1000072AC(a2, (uint64_t)v16, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  v18 = a1;
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(22, -1);
    v50 = v11;
    v22 = v21;
    v49 = swift_slowAlloc(64, -1);
    v58 = v49;
    *(_DWORD *)v22 = 136446466;
    v48 = v22 + 4;
    v23 = objc_msgSend(v18, "stringRepresentation");
    v53 = v5;
    v24 = v23;
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v51 = a2;
    v52 = v10;
    v26 = v25;
    v28 = v27;

    v57 = sub_10007FA38(v26, v28, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v48, v22 + 12);

    swift_bridgeObjectRelease(v28);
    *(_WORD *)(v22 + 12) = 2082;
    sub_1000072AC((uint64_t)v16, (uint64_t)v14, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
    v29 = String.init<A>(describing:)(v14, Configuration);
    v31 = v30;
    v57 = sub_10007FA38(v29, v30, &v58);
    v5 = v53;
    a2 = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v22 + 14, v22 + 22);
    v32 = v31;
    v10 = v52;
    swift_bridgeObjectRelease(v32);
    sub_100007EB4((uint64_t)v16, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "TTRNewWidgetInteractor fetching list {listID: %{public}s configuration: %{public}s}", (uint8_t *)v22, 0x16u);
    v33 = v49;
    swift_arrayDestroy(v49, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    v34 = v22;
    v11 = v50;
    swift_slowDealloc(v34, -1, -1);
  }
  else
  {

    sub_100007EB4((uint64_t)v16, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  }

  sub_1000072AC(a2, (uint64_t)v14, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  v35 = *(unsigned __int8 *)(v11 + 80);
  v36 = (v35 + 32) & ~v35;
  v37 = swift_allocObject(&unk_1000A8B60, v36 + v12, v35 | 7);
  *(_QWORD *)(v37 + 16) = v5;
  *(_QWORD *)(v37 + 24) = v18;
  sub_100007EF0((uint64_t)v14, v37 + v36, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  v38 = swift_allocObject(&unk_1000A8B88, 32, 7);
  v39 = v56;
  *(_QWORD *)(v38 + 16) = v55;
  *(_QWORD *)(v38 + 24) = v39;
  v40 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v10, 1, 1, v40);
  type metadata accessor for MainActor(0);
  swift_retain_n(v5, 2);
  v41 = v18;
  swift_retain(v39);
  swift_retain(v37);
  v42 = swift_retain(v38);
  v43 = static MainActor.shared.getter(v42);
  v44 = (_QWORD *)swift_allocObject(&unk_1000A8BB0, 72, 7);
  v44[2] = v43;
  v44[3] = &protocol witness table for MainActor;
  v44[4] = &unk_1000AFA50;
  v44[5] = v37;
  v44[6] = v5;
  v44[7] = sub_10005C760;
  v44[8] = v38;
  v45 = sub_100054AAC((uint64_t)v10, (uint64_t)&unk_1000AFA60, (uint64_t)v44);
  swift_release(v37);
  swift_release(v38);
  return swift_release(v45);
}

uint64_t sub_10004CDF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t Subtasks;
  uint64_t v13;
  uint64_t Configuration;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  v5 = type metadata accessor for REMRemindersListDataView.SectionLite(0);
  v4[11] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[12] = v6;
  v4[13] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for REMRemindersListDataView.ReminderLite(0);
  v4[14] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[15] = v8;
  v4[16] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for REMRemindersListDataView.SectionsModel(0);
  v4[17] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[18] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[19] = swift_task_alloc(v11);
  v4[20] = swift_task_alloc(v11);
  v4[21] = swift_task_alloc(v11);
  v4[22] = swift_task_alloc(v11);
  Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
  v4[23] = Subtasks;
  v13 = *(_QWORD *)(Subtasks - 8);
  v4[24] = v13;
  v4[25] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  Configuration = type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  v4[26] = Configuration;
  v15 = *(_QWORD *)(Configuration - 8);
  v4[27] = v15;
  v4[28] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100006DA4(&qword_1000AFA80);
  v4[29] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v4[30] = v17;
  v4[31] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for REMRemindersListDataView.ListSectionsModel(0);
  v4[32] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v4[33] = v19;
  v4[34] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  v4[35] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v4[36] = v21;
  v22 = (*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[37] = swift_task_alloc(v22);
  v4[38] = swift_task_alloc(v22);
  v23 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  v4[39] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v4[40] = v24;
  v25 = (*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[41] = swift_task_alloc(v25);
  v4[42] = swift_task_alloc(v25);
  v26 = sub_100006DA4(&qword_1000AF8A0);
  v4[43] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v26 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v4[44] = v27;
  v28 = *(_QWORD *)(v27 - 8);
  v4[45] = v28;
  v29 = (*(_QWORD *)(v28 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[46] = swift_task_alloc(v29);
  v4[47] = swift_task_alloc(v29);
  return swift_task_switch(sub_10004D070, 0, 0);
}

uint64_t sub_10004D070()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t Configuration;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = *(void **)(*(_QWORD *)(v0 + 64) + 24);
  *(_QWORD *)(v0 + 40) = 0;
  v2 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 384) = v1;
  v3 = objc_msgSend(v1, "fetchListWithObjectID:error:", v2, v0 + 40);
  *(_QWORD *)(v0 + 392) = v3;
  v4 = *(void **)(v0 + 40);
  if (v3)
  {
    v5 = v3;
    v6 = qword_1000AC920;
    v7 = v4;
    if (v6 != -1)
      swift_once(&qword_1000AC920, sub_10004B568);
    v8 = type metadata accessor for Logger(0);
    sub_10000CF70(v8, (uint64_t)qword_1000AF5F8);
    v9 = v5;
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v44 = v13;
      *(_DWORD *)v12 = 136446210;
      v14 = objc_msgSend(v9, "objectID");
      v15 = objc_msgSend(v14, "stringRepresentation");

      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v18 = v17;

      *(_QWORD *)(v0 + 48) = sub_10007FA38(v16, v18, &v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v12 + 4, v12 + 12);
      swift_bridgeObjectRelease(v18);

      _os_log_impl((void *)&_mh_execute_header, v10, v11, "TTRNewWidgetInteractor fetched list {listID: %{public}s}", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }
    else
    {

    }
    v30 = *(_QWORD *)(v0 + 352);
    v31 = *(_QWORD *)(v0 + 360);
    v32 = *(_QWORD *)(v0 + 344);
    sub_100009434(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_sortingStyle, v32, &qword_1000AF8A0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v32, 1, v30) == 1)
    {
      v33 = *(_QWORD *)(v0 + 344);
      v34 = objc_msgSend(v9, "sortingStyle");
      REMSortingStyle.dataViewSortingStyle.getter();

      sub_100009578(v33, &qword_1000AF8A0);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 360) + 32))(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 352));
    }
    v35 = *(_QWORD *)(*(_QWORD *)(v0 + 64)
                    + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache);
    *(_QWORD *)(v0 + 400) = v35;
    Configuration = type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
    *(_QWORD *)(v0 + 408) = Configuration;
    *(_DWORD *)(v0 + 424) = *(_DWORD *)(Configuration + 28);
    return swift_task_switch(sub_10004D4CC, v35, 0);
  }
  else
  {
    v19 = v4;
    _convertNSErrorToError(_:)(v4);

    swift_willThrow();
    v20 = *(_QWORD *)(v0 + 368);
    v22 = *(_QWORD *)(v0 + 336);
    v21 = *(_QWORD *)(v0 + 344);
    v23 = *(_QWORD *)(v0 + 328);
    v24 = *(_QWORD *)(v0 + 296);
    v25 = *(_QWORD *)(v0 + 304);
    v26 = *(_QWORD *)(v0 + 272);
    v27 = *(_QWORD *)(v0 + 248);
    v28 = *(_QWORD *)(v0 + 224);
    v37 = *(_QWORD *)(v0 + 200);
    v38 = *(_QWORD *)(v0 + 176);
    v39 = *(_QWORD *)(v0 + 168);
    v40 = *(_QWORD *)(v0 + 160);
    v41 = *(_QWORD *)(v0 + 152);
    v42 = *(_QWORD *)(v0 + 128);
    v43 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 376));
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v25);
    swift_task_dealloc(v24);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10004D4CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 400);
  v2 = *(_QWORD *)(v0 + 80) + *(int *)(v0 + 424);
  swift_beginAccess(v1 + 120, v0 + 16, 0, 0);
  v3 = *(_QWORD *)(v1 + 120);
  v4 = swift_task_alloc(32);
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = swift_bridgeObjectRetain(v3);
  v6 = sub_10005A260(v5, (uint64_t (*)(void *, uint64_t))sub_10005E234, v4);
  *(_QWORD *)(v0 + 416) = 0;
  swift_bridgeObjectRelease(v3);
  swift_task_dealloc(v4);
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v14 = v6;
    else
      v14 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v8 = *(uint64_t **)(v0 + 336);
  v9 = *(_QWORD *)(v0 + 312);
  v10 = *(_QWORD *)(v0 + 320);
  if (v7)
  {
    v11 = sub_10005A4EC(v6);
    swift_bridgeObjectRelease(v6);
    *v8 = v11;
    v12 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.allowlist(_:);
  }
  else
  {
    swift_bridgeObjectRelease(v6);
    v12 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.off(_:);
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v8, *v12, v9);
  return swift_task_switch(sub_10004D638, 0, 0);
}

uint64_t sub_10004D638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, unint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t (*v51)(_QWORD, char *, _QWORD);
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t);

  v107 = *(_QWORD *)(v0 + 408);
  v116 = *(_QWORD *)(v0 + 392);
  v121 = *(_QWORD *)(v0 + 416);
  v112 = *(_QWORD *)(v0 + 384);
  v1 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 352);
  v2 = *(_QWORD *)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 336);
  v89 = *(_QWORD *)(v0 + 376);
  v91 = *(_QWORD *)(v0 + 328);
  v87 = *(_QWORD *)(v0 + 320);
  v5 = *(_QWORD **)(v0 + 304);
  v6 = *(_QWORD *)(v0 + 296);
  v93 = *(_QWORD *)(v0 + 288);
  v95 = *(_QWORD *)(v0 + 312);
  v97 = *(_QWORD *)(v0 + 280);
  v104 = *(_QWORD *)(v0 + 224);
  v7 = *(_QWORD *)(v0 + 200);
  v99 = *(_QWORD *)(v0 + 192);
  v101 = *(_QWORD *)(v0 + 184);
  v8 = *(uint64_t **)(v0 + 80);
  sub_10004C624(v8, v4, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v89, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 16))(v91, v4, v95);
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v93 + 16))(v6, v5, v97);
  (*(void (**)(uint64_t, char *, uint64_t))(v99 + 16))(v7, (char *)v8 + *(int *)(v107 + 24), v101);
  REMRemindersListDataView.FetchConfiguration.init(sortingStyle:showCompleted:countCompleted:remindersPrefetch:fetchSubtasks:)(v1, v91, 0, v6, v7);
  static REMRemindersListDataView.fetchList_Sections(store:list:configuration:diffingAgainst:)(v112, v116, v104, 0);
  if (v121)
  {
    v113 = *(_QWORD *)(v0 + 360);
    v117 = *(_QWORD *)(v0 + 352);
    v122 = *(_QWORD *)(v0 + 376);
    v9 = *(_QWORD *)(v0 + 336);
    v11 = *(_QWORD *)(v0 + 312);
    v10 = *(_QWORD *)(v0 + 320);
    v12 = *(_QWORD *)(v0 + 304);
    v14 = *(_QWORD *)(v0 + 280);
    v13 = *(_QWORD *)(v0 + 288);
    v15 = *(_QWORD *)(v0 + 216);
    v16 = *(_QWORD *)(v0 + 224);
    v17 = *(_QWORD *)(v0 + 208);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v17);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v122, v117);
    v18 = *(_QWORD *)(v0 + 368);
    v20 = *(_QWORD *)(v0 + 336);
    v19 = *(_QWORD *)(v0 + 344);
    v21 = *(_QWORD *)(v0 + 328);
    v22 = *(_QWORD *)(v0 + 296);
    v23 = *(_QWORD *)(v0 + 304);
    v24 = *(_QWORD *)(v0 + 272);
    v25 = *(_QWORD *)(v0 + 248);
    v26 = *(_QWORD *)(v0 + 224);
    v102 = *(_QWORD *)(v0 + 200);
    v105 = *(_QWORD *)(v0 + 176);
    v108 = *(_QWORD *)(v0 + 168);
    v110 = *(_QWORD *)(v0 + 160);
    v114 = *(_QWORD *)(v0 + 152);
    v118 = *(_QWORD *)(v0 + 128);
    v123 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 376));
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v23);
    swift_task_dealloc(v22);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v102);
    swift_task_dealloc(v105);
    swift_task_dealloc(v108);
    swift_task_dealloc(v110);
    swift_task_dealloc(v114);
    swift_task_dealloc(v118);
    swift_task_dealloc(v123);
    v27 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v29 = *(_QWORD *)(v0 + 240);
    v28 = *(_QWORD *)(v0 + 248);
    v30 = *(_QWORD *)(v0 + 232);
    v31 = *(_QWORD *)(v0 + 176);
    v32 = *(_QWORD *)(v0 + 136);
    v33 = *(_QWORD *)(v0 + 144);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 8))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 208));
    REMRemindersListDataView.Result.model.getter(v30);
    v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    v35 = REMRemindersListDataView.ListSectionsModel.sectionsModel.getter(v34);
    v36 = REMRemindersListDataView.SectionsModel.sections.getter(v35);
    v124 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v124(v31, v32);
    v37 = *(_QWORD *)(v36 + 16);
    if (v37)
    {
      v38 = *(_QWORD *)(v0 + 96);
      v39 = v36 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
      v40 = *(_QWORD *)(v38 + 72);
      v41 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v38 + 16);
      v119 = v36;
      swift_bridgeObjectRetain(v36);
      do
      {
        v42 = *(_QWORD *)(v0 + 104);
        v43 = *(_QWORD *)(v0 + 88);
        v44 = v41(v42, v39, v43);
        v45 = REMRemindersListDataView.SectionLite.reminders.getter(v44);
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v42, v43);
        sub_10005572C(v45, (uint64_t (*)(void))sub_10001C3D4, (uint64_t (*)(_QWORD))&type metadata accessor for REMRemindersListDataView.ReminderLite);
        v39 += v40;
        --v37;
      }
      while (v37);
      swift_bridgeObjectRelease_n(v119, 2);
    }
    else
    {
      swift_bridgeObjectRelease(v36);
    }
    v46 = sub_10005A64C((uint64_t)_swiftEmptyArrayStorage, *(uint64_t **)(v0 + 80));
    v47 = _swiftEmptyArrayStorage[2];
    v120 = v46;
    if (v47)
    {
      v48 = *(_QWORD *)(v0 + 120);
      v49 = (char *)_swiftEmptyArrayStorage
          + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
      v50 = *(_QWORD *)(v48 + 72);
      v51 = *(uint64_t (**)(_QWORD, char *, _QWORD))(v48 + 16);
      swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
      v52 = 0;
      while (1)
      {
        v53 = v51(*(_QWORD *)(v0 + 128), v49, *(_QWORD *)(v0 + 112));
        if ((REMRemindersListDataView.ReminderLite.isCompleted.getter(v53) & 1) == 0)
        {
          v54 = __OFADD__(v52, 1);
          v55 = v52 + 1;
          if (v54)
            __break(1u);
          v56 = REMRemindersListDataView.ReminderLite.subtaskCount.getter();
          v54 = __OFADD__(v55, v56);
          v52 = v55 + v56;
          if (v54)
            break;
        }
        (*(void (**)(_QWORD, _QWORD))(v48 + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
        v49 += v50;
        if (!--v47)
          goto LABEL_16;
      }
      __break(1u);
LABEL_16:
      v57 = swift_bridgeObjectRelease_n(_swiftEmptyArrayStorage, 2);
    }
    else
    {
      v57 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      v52 = 0;
    }
    v88 = *(_QWORD *)(v0 + 376);
    v90 = *(_QWORD *)(v0 + 368);
    v85 = *(_QWORD *)(v0 + 360);
    v86 = *(_QWORD *)(v0 + 352);
    v92 = *(_QWORD *)(v0 + 344);
    v82 = *(_QWORD *)(v0 + 320);
    v83 = *(_QWORD *)(v0 + 312);
    v84 = *(_QWORD *)(v0 + 336);
    v80 = *(_QWORD *)(v0 + 304);
    v81 = *(void **)(v0 + 392);
    v96 = *(_QWORD *)(v0 + 328);
    v98 = *(_QWORD *)(v0 + 296);
    v58 = *(_QWORD *)(v0 + 272);
    v78 = *(_QWORD *)(v0 + 288);
    v79 = *(_QWORD *)(v0 + 280);
    v76 = *(_QWORD *)(v0 + 264);
    v77 = *(_QWORD *)(v0 + 256);
    v100 = *(_QWORD *)(v0 + 248);
    v103 = *(_QWORD *)(v0 + 224);
    v106 = *(_QWORD *)(v0 + 200);
    v59 = *(_QWORD *)(v0 + 168);
    v109 = *(_QWORD *)(v0 + 176);
    v94 = v59;
    v60 = *(_QWORD *)(v0 + 152);
    v61 = *(_QWORD *)(v0 + 160);
    v62 = *(_QWORD *)(v0 + 136);
    v111 = *(_QWORD *)(v0 + 128);
    v115 = *(_QWORD *)(v0 + 104);
    v63 = *(_QWORD *)(v0 + 56);
    v64 = REMRemindersListDataView.ListSectionsModel.sectionsModel.getter(v57);
    v65 = REMRemindersListDataView.SectionsModel.hasIncompleteOrCompletedReminders.getter(v64);
    v66 = ((uint64_t (*)(uint64_t, uint64_t))v124)(v59, v62);
    LOBYTE(v59) = v65 & 1 | 0x40;
    v75 = REMRemindersListDataView.ListSectionsModel.list.getter(v66);
    v67 = REMRemindersListDataView.ListSectionsModel.sectionsModel.getter(v75);
    v68 = REMRemindersListDataView.SectionsModel.prefetchedReminders.getter(v67);
    v124(v61, v62);
    v74 = sub_10004C7F0(v68);
    v69 = swift_bridgeObjectRelease(v68);
    v70 = REMRemindersListDataView.ListSectionsModel.sectionsModel.getter(v69);
    v71 = REMRemindersListDataView.SectionsModel.prefetchedDueReminders.getter(v70);
    v124(v60, v62);
    v72 = sub_10004C7F0(v71);
    swift_bridgeObjectRelease(v71);

    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v58, v77);
    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v80, v79);
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v84, v83);
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v88, v86);
    *(_QWORD *)v63 = v75;
    *(_QWORD *)(v63 + 8) = v52;
    *(_BYTE *)(v63 + 16) = v59;
    *(_QWORD *)(v63 + 24) = v120;
    *(_QWORD *)(v63 + 32) = v74;
    *(_QWORD *)(v63 + 40) = v72;
    swift_task_dealloc(v88);
    swift_task_dealloc(v90);
    swift_task_dealloc(v92);
    swift_task_dealloc(v84);
    swift_task_dealloc(v96);
    swift_task_dealloc(v80);
    swift_task_dealloc(v98);
    swift_task_dealloc(v58);
    swift_task_dealloc(v100);
    swift_task_dealloc(v103);
    swift_task_dealloc(v106);
    swift_task_dealloc(v109);
    swift_task_dealloc(v94);
    swift_task_dealloc(v61);
    swift_task_dealloc(v60);
    swift_task_dealloc(v111);
    swift_task_dealloc(v115);
    v27 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v27();
}

uint64_t sub_10004DD54(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t Configuration;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v5 = v4;
  v55 = a3;
  v56 = a4;
  v8 = sub_100006DA4(&qword_1000AF8B8);
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Configuration = type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  v11 = *(_QWORD *)(Configuration - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = __chkstk_darwin(Configuration);
  v14 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)&v47 - v15;
  if (qword_1000AC920 != -1)
    swift_once(&qword_1000AC920, sub_10004B568);
  v17 = type metadata accessor for Logger(0);
  sub_10000CF70(v17, (uint64_t)qword_1000AF5F8);
  sub_1000072AC(a2, (uint64_t)v16, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  v18 = a1;
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(22, -1);
    v50 = v11;
    v22 = v21;
    v49 = swift_slowAlloc(64, -1);
    v58 = v49;
    *(_DWORD *)v22 = 136446466;
    v48 = v22 + 4;
    v23 = objc_msgSend(v18, "stringRepresentation");
    v53 = v5;
    v24 = v23;
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v51 = a2;
    v52 = v10;
    v26 = v25;
    v28 = v27;

    v57 = sub_10007FA38(v26, v28, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v48, v22 + 12);

    swift_bridgeObjectRelease(v28);
    *(_WORD *)(v22 + 12) = 2082;
    sub_1000072AC((uint64_t)v16, (uint64_t)v14, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
    v29 = String.init<A>(describing:)(v14, Configuration);
    v31 = v30;
    v57 = sub_10007FA38(v29, v30, &v58);
    v5 = v53;
    a2 = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v22 + 14, v22 + 22);
    v32 = v31;
    v10 = v52;
    swift_bridgeObjectRelease(v32);
    sub_100007EB4((uint64_t)v16, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "TTRNewWidgetInteractor fetching custom smart list {customSmartListID: %{public}s configuration: %{public}s}", (uint8_t *)v22, 0x16u);
    v33 = v49;
    swift_arrayDestroy(v49, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    v34 = v22;
    v11 = v50;
    swift_slowDealloc(v34, -1, -1);
  }
  else
  {

    sub_100007EB4((uint64_t)v16, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  }

  sub_1000072AC(a2, (uint64_t)v14, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  v35 = *(unsigned __int8 *)(v11 + 80);
  v36 = (v35 + 32) & ~v35;
  v37 = swift_allocObject(&unk_1000A8C50, v36 + v12, v35 | 7);
  *(_QWORD *)(v37 + 16) = v5;
  *(_QWORD *)(v37 + 24) = v18;
  sub_100007EF0((uint64_t)v14, v37 + v36, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  v38 = swift_allocObject(&unk_1000A8C78, 32, 7);
  v39 = v56;
  *(_QWORD *)(v38 + 16) = v55;
  *(_QWORD *)(v38 + 24) = v39;
  v40 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v10, 1, 1, v40);
  type metadata accessor for MainActor(0);
  swift_retain_n(v5, 2);
  v41 = v18;
  swift_retain(v39);
  swift_retain(v37);
  v42 = swift_retain(v38);
  v43 = static MainActor.shared.getter(v42);
  v44 = (_QWORD *)swift_allocObject(&unk_1000A8CA0, 72, 7);
  v44[2] = v43;
  v44[3] = &protocol witness table for MainActor;
  v44[4] = &unk_1000AFAC0;
  v44[5] = v37;
  v44[6] = v5;
  v44[7] = sub_10005CA04;
  v44[8] = v38;
  v45 = sub_100054AAC((uint64_t)v10, (uint64_t)&unk_1000AFAD0, (uint64_t)v44);
  swift_release(v37);
  swift_release(v38);
  return swift_release(v45);
}

uint64_t sub_10004E194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t Subtasks;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  v5 = type metadata accessor for REMRemindersListDataView.ReminderLite(0);
  v4[11] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[12] = v6;
  v4[13] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for REMRemindersListDataView.FlatModel(0);
  v4[14] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[15] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[16] = swift_task_alloc(v9);
  v4[17] = swift_task_alloc(v9);
  v4[18] = swift_task_alloc(v9);
  v4[19] = swift_task_alloc(v9);
  Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
  v4[20] = Subtasks;
  v11 = *(_QWORD *)(Subtasks - 8);
  v4[21] = v11;
  v4[22] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100006DA4(qword_1000AFAF0);
  v4[23] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v4[24] = v13;
  v4[25] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for REMRemindersListDataView.CustomSmartListModel(0);
  v4[26] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v4[27] = v15;
  v4[28] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  v4[29] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v4[30] = v17;
  v4[31] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  v4[32] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v4[33] = v19;
  v4[34] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100006DA4(&qword_1000AF8A0);
  v4[35] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v20 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v4[36] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v4[37] = v22;
  v4[38] = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10004E38C, 0, 0);
}

uint64_t sub_10004E38C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(void **)(*(_QWORD *)(v0 + 64) + 24);
  *(_QWORD *)(v0 + 40) = 0;
  v2 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 312) = v1;
  v3 = objc_msgSend(v1, "fetchCustomSmartListWithObjectID:error:", v2, v0 + 40);
  *(_QWORD *)(v0 + 320) = v3;
  v4 = *(void **)(v0 + 40);
  if (v3)
  {
    v5 = v3;
    v6 = qword_1000AC920;
    v7 = v4;
    if (v6 != -1)
      swift_once(&qword_1000AC920, sub_10004B568);
    v8 = type metadata accessor for Logger(0);
    sub_10000CF70(v8, (uint64_t)qword_1000AF5F8);
    v9 = v5;
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v38 = v13;
      *(_DWORD *)v12 = 136446210;
      v14 = objc_msgSend(v9, "objectID");
      v15 = objc_msgSend(v14, "stringRepresentation");

      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v18 = v17;

      *(_QWORD *)(v0 + 48) = sub_10007FA38(v16, v18, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v12 + 4, v12 + 12);
      swift_bridgeObjectRelease(v18);

      _os_log_impl((void *)&_mh_execute_header, v10, v11, "TTRNewWidgetInteractor fetched custom smart list {listID: %{public}s}", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }
    else
    {

    }
    v30 = *(_QWORD *)(v0 + 288);
    v31 = *(_QWORD *)(v0 + 296);
    v32 = *(_QWORD *)(v0 + 280);
    sub_100009434(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_sortingStyle, v32, &qword_1000AF8A0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v32, 1, v30) == 1)
    {
      v33 = *(_QWORD *)(v0 + 280);
      v34 = objc_msgSend(v9, "sortingStyle");
      REMSortingStyle.dataViewSortingStyle.getter();

      sub_100009578(v33, &qword_1000AF8A0);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 296) + 32))(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 288));
    }
    v35 = *(_QWORD *)(*(_QWORD *)(v0 + 64)
                    + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache);
    *(_QWORD *)(v0 + 328) = v35;
    *(_DWORD *)(v0 + 344) = *(_DWORD *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) + 28);
    return swift_task_switch(sub_10004E79C, v35, 0);
  }
  else
  {
    v19 = v4;
    _convertNSErrorToError(_:)(v4);

    swift_willThrow();
    v21 = *(_QWORD *)(v0 + 272);
    v20 = *(_QWORD *)(v0 + 280);
    v22 = *(_QWORD *)(v0 + 248);
    v23 = *(_QWORD *)(v0 + 224);
    v24 = *(_QWORD *)(v0 + 200);
    v25 = *(_QWORD *)(v0 + 176);
    v27 = *(_QWORD *)(v0 + 144);
    v26 = *(_QWORD *)(v0 + 152);
    v28 = *(_QWORD *)(v0 + 136);
    v36 = *(_QWORD *)(v0 + 128);
    v37 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 304));
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10004E79C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 328);
  v2 = *(_QWORD *)(v0 + 80) + *(int *)(v0 + 344);
  swift_beginAccess(v1 + 120, v0 + 16, 0, 0);
  v3 = *(_QWORD *)(v1 + 120);
  v4 = swift_task_alloc(32);
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = swift_bridgeObjectRetain(v3);
  v6 = sub_10005A260(v5, (uint64_t (*)(void *, uint64_t))sub_10005E234, v4);
  *(_QWORD *)(v0 + 336) = 0;
  swift_bridgeObjectRelease(v3);
  swift_task_dealloc(v4);
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v14 = v6;
    else
      v14 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v9 = *(_QWORD *)(v0 + 264);
  v8 = *(uint64_t **)(v0 + 272);
  v10 = *(_QWORD *)(v0 + 256);
  if (v7)
  {
    v11 = sub_10005A4EC(v6);
    swift_bridgeObjectRelease(v6);
    *v8 = v11;
    v12 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.allowlist(_:);
  }
  else
  {
    swift_bridgeObjectRelease(v6);
    v12 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.off(_:);
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v8, *v12, v10);
  return swift_task_switch(sub_10004E908, 0, 0);
}

uint64_t sub_10004E908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(_QWORD, unint64_t, _QWORD);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v1 = *(_QWORD *)(v0 + 312);
  v89 = *(_QWORD *)(v0 + 320);
  v93 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 272);
  v4 = *(_QWORD **)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 160);
  sub_10004C624(*(uint64_t **)(v0 + 80), v3, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v6, enum case for REMRemindersListDataView.FetchSubtasks.count(_:), v7);
  static REMRemindersListDataView.fetchCustomSmartList(store:smartList:sortingStyle:showCompleted:countCompleted:remindersPrefetch:fetchSubtasks:shouldFetchManualOrderingID:diffingAgainst:)(v1, v89, v2, v3, 0, v4, v6, 0, 0);
  if (v93)
  {
    v87 = *(_QWORD *)(v0 + 296);
    v90 = *(_QWORD *)(v0 + 288);
    v94 = *(_QWORD *)(v0 + 304);
    v8 = *(_QWORD *)(v0 + 264);
    v9 = *(_QWORD *)(v0 + 272);
    v11 = *(_QWORD *)(v0 + 248);
    v10 = *(_QWORD *)(v0 + 256);
    v13 = *(_QWORD *)(v0 + 232);
    v12 = *(_QWORD *)(v0 + 240);
    v14 = *(_QWORD *)(v0 + 168);
    v15 = *(_QWORD *)(v0 + 176);
    v16 = *(_QWORD *)(v0 + 160);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v16);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v94, v90);
    v17 = *(_QWORD *)(v0 + 272);
    v18 = *(_QWORD *)(v0 + 280);
    v19 = *(_QWORD *)(v0 + 248);
    v20 = *(_QWORD *)(v0 + 224);
    v21 = *(_QWORD *)(v0 + 200);
    v22 = *(_QWORD *)(v0 + 176);
    v24 = *(_QWORD *)(v0 + 144);
    v23 = *(_QWORD *)(v0 + 152);
    v25 = *(_QWORD *)(v0 + 136);
    v91 = *(_QWORD *)(v0 + 128);
    v95 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 304));
    swift_task_dealloc(v18);
    swift_task_dealloc(v17);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v91);
    swift_task_dealloc(v95);
    v26 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v28 = *(_QWORD *)(v0 + 192);
    v27 = *(_QWORD *)(v0 + 200);
    v29 = *(_QWORD *)(v0 + 184);
    v30 = *(_QWORD *)(v0 + 144);
    v31 = *(_QWORD *)(v0 + 152);
    v32 = *(_QWORD *)(v0 + 112);
    v33 = *(_QWORD *)(v0 + 120);
    v34 = *(uint64_t **)(v0 + 80);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
    REMRemindersListDataView.Result.model.getter(v29);
    v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
    v36 = REMRemindersListDataView.CustomSmartListModel.model.getter(v35);
    v37 = REMRemindersListDataView.FlatModel.reminders.getter(v36);
    v38 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v38(v31, v32);
    v96 = sub_10005A64C(v37, v34);
    v39 = swift_bridgeObjectRelease(v37);
    v40 = REMRemindersListDataView.CustomSmartListModel.model.getter(v39);
    v41 = REMRemindersListDataView.FlatModel.reminders.getter(v40);
    v92 = (uint64_t (*)(uint64_t, uint64_t))v38;
    v38(v30, v32);
    v42 = *(_QWORD *)(v41 + 16);
    if (v42)
    {
      v43 = *(_QWORD *)(v0 + 96);
      v44 = v41 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
      v45 = *(_QWORD *)(v43 + 72);
      v46 = *(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v43 + 16);
      swift_bridgeObjectRetain(v41);
      v47 = 0;
      while (1)
      {
        v48 = v46(*(_QWORD *)(v0 + 104), v44, *(_QWORD *)(v0 + 88));
        if ((REMRemindersListDataView.ReminderLite.isCompleted.getter(v48) & 1) == 0)
        {
          v49 = v47 + 1;
          if (__OFADD__(v47, 1))
            __break(1u);
          v50 = REMRemindersListDataView.ReminderLite.subtaskCount.getter();
          v47 = v49 + v50;
          if (__OFADD__(v49, v50))
            break;
        }
        (*(void (**)(_QWORD, _QWORD))(v43 + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
        v44 += v45;
        if (!--v42)
          goto LABEL_11;
      }
      __break(1u);
LABEL_11:
      v51 = swift_bridgeObjectRelease_n(v41, 2);
    }
    else
    {
      v51 = swift_bridgeObjectRelease(v41);
      v47 = 0;
    }
    v80 = *(_QWORD *)(v0 + 288);
    v81 = *(_QWORD *)(v0 + 304);
    v82 = *(_QWORD *)(v0 + 280);
    v78 = *(_QWORD *)(v0 + 272);
    v79 = *(_QWORD *)(v0 + 296);
    v76 = *(_QWORD *)(v0 + 264);
    v77 = *(_QWORD *)(v0 + 256);
    v72 = *(_QWORD *)(v0 + 240);
    v73 = *(void **)(v0 + 320);
    v52 = *(_QWORD *)(v0 + 224);
    v74 = *(_QWORD *)(v0 + 232);
    v75 = *(_QWORD *)(v0 + 248);
    v70 = *(_QWORD *)(v0 + 216);
    v71 = *(_QWORD *)(v0 + 208);
    v84 = *(_QWORD *)(v0 + 200);
    v53 = *(_QWORD *)(v0 + 152);
    v85 = *(_QWORD *)(v0 + 176);
    v86 = *(_QWORD *)(v0 + 144);
    v54 = *(_QWORD *)(v0 + 128);
    v83 = *(_QWORD *)(v0 + 136);
    v55 = *(_QWORD *)(v0 + 112);
    v88 = *(_QWORD *)(v0 + 104);
    v56 = *(_QWORD *)(v0 + 56);
    v57 = REMRemindersListDataView.CustomSmartListModel.model.getter(v51);
    v58 = REMRemindersListDataView.FlatModel.hasIncompleteOrCompletedReminders.getter(v57);
    v59 = v92(v83, v55);
    v60 = v58 & 1 | 0x40;
    v69 = REMRemindersListDataView.CustomSmartListModel.smartList.getter(v59);
    v61 = REMRemindersListDataView.CustomSmartListModel.model.getter(v69);
    v62 = REMRemindersListDataView.FlatModel.prefetchedReminders.getter(v61);
    v92(v53, v55);
    v68 = sub_10004C7F0(v62);
    v63 = swift_bridgeObjectRelease(v62);
    v64 = REMRemindersListDataView.CustomSmartListModel.model.getter(v63);
    v65 = REMRemindersListDataView.FlatModel.prefetchedDueReminders.getter(v64);
    v92(v54, v55);
    v66 = sub_10004C7F0(v65);
    swift_bridgeObjectRelease(v65);

    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v52, v71);
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v75, v74);
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v78, v77);
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v81, v80);
    *(_QWORD *)v56 = v69;
    *(_QWORD *)(v56 + 8) = v47;
    *(_BYTE *)(v56 + 16) = v60;
    *(_QWORD *)(v56 + 24) = v96;
    *(_QWORD *)(v56 + 32) = v68;
    *(_QWORD *)(v56 + 40) = v66;
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v78);
    swift_task_dealloc(v75);
    swift_task_dealloc(v52);
    swift_task_dealloc(v84);
    swift_task_dealloc(v85);
    swift_task_dealloc(v53);
    swift_task_dealloc(v86);
    swift_task_dealloc(v83);
    swift_task_dealloc(v54);
    swift_task_dealloc(v88);
    v26 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v26();
}

void sub_10004EE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  int v35;
  _DWORD *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t Configuration;
  uint64_t (*v44)(char *, char *, uint64_t);
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;

  v51 = a3;
  v52 = a4;
  v56 = a2;
  v6 = sub_100006DA4(&qword_1000AF8B8);
  __chkstk_darwin(v6);
  v49 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Configuration = type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  v47 = *(_QWORD *)(Configuration - 8);
  v8 = __chkstk_darwin(Configuration);
  v53 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = v9;
  __chkstk_darwin(v8);
  v55 = (char *)&v37 - v10;
  v11 = sub_100006DA4(&qword_1000AF8A0);
  __chkstk_darwin(v11);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = __chkstk_darwin(v14);
  v54 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v37 - v19;
  v21 = __chkstk_darwin(v18);
  v23 = (char *)&v37 - v22;
  __chkstk_darwin(v21);
  v25 = (char *)&v37 - v24;
  v50 = v4;
  sub_100009434(v4 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_sortingStyle, (uint64_t)v13, &qword_1000AF8A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_100009578((uint64_t)v13, &qword_1000AF8A0);
    TTRListType.PredefinedSmartListType.fallbackSortingStyle.getter(a1);
    v26 = a1;
    v27 = (uint64_t)v55;
    if (((1 << a1) & 0x66) == 0)
    {
      v28 = (void *)TTRListType.PredefinedSmartListType.smartList(in:)(*(_QWORD *)(v50 + 24), a1);
      if (v28)
      {
        v29 = v28;
        v30 = objc_msgSend(v28, "sortingStyle");
        REMSortingStyle.dataViewSortingStyle.getter();

        v27 = (uint64_t)v55;
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v23, v20, v14);
      }
    }
    v45 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v45(v25, v23, v14);
  }
  else
  {
    v45 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v45(v25, v13, v14);
    v26 = a1;
    v27 = (uint64_t)v55;
  }
  v46 = v20;
  v31 = v54;
  if (qword_1000AC920 != -1)
    swift_once(&qword_1000AC920, sub_10004B568);
  v32 = type metadata accessor for Logger(0);
  sub_10000CF70(v32, (uint64_t)qword_1000AF5F8);
  sub_1000072AC(v56, v27, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  v44 = *(uint64_t (**)(char *, char *, uint64_t))(v15 + 16);
  v33 = v44(v31, v25, v14);
  v34 = Logger.logObject.getter(v33);
  v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, (os_log_type_t)v35))
  {
    v39 = v35;
    v41 = v25;
    v36 = (_DWORD *)swift_slowAlloc(32, -1);
    v38 = swift_slowAlloc(96, -1);
    v57 = v38;
    *v36 = 136315650;
    v40 = v26;
    v42 = v14;
    __asm { BR              X10 }
  }
  sub_100007EB4(v27, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v31, v14);

  __asm { BR              X10 }
}

uint64_t sub_10004FC90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t Subtasks;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t Configuration;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  v5 = type metadata accessor for REMRemindersListDataView.ReminderLite(0);
  v4[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[10] = v6;
  v4[11] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v4[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[13] = v8;
  v4[14] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006DA4(&qword_1000AF948);
  v4[15] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[16] = v10;
  v4[17] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for REMRemindersListDataView.TodayGroupModel(0);
  v4[18] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v4[19] = v12;
  v4[20] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
  v4[21] = Subtasks;
  v14 = *(_QWORD *)(Subtasks - 8);
  v4[22] = v14;
  v4[23] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v4[24] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v4[25] = v16;
  v4[26] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  Configuration = type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  v4[27] = Configuration;
  v18 = *(_QWORD *)(Configuration - 8);
  v4[28] = v18;
  v4[29] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  v4[30] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v4[31] = v20;
  v21 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[32] = swift_task_alloc(v21);
  v4[33] = swift_task_alloc(v21);
  v22 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  v4[34] = v22;
  v23 = *(_QWORD *)(v22 - 8);
  v4[35] = v23;
  v24 = (*(_QWORD *)(v23 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[36] = swift_task_alloc(v24);
  v4[37] = swift_task_alloc(v24);
  return swift_task_switch(sub_10004FE58, 0, 0);
}

uint64_t sub_10004FE58()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48)
                 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache);
  *(_QWORD *)(v0 + 304) = v1;
  *(_DWORD *)(v0 + 320) = *(_DWORD *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) + 28);
  return swift_task_switch(sub_10004FEB0, v1, 0);
}

uint64_t sub_10004FEB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 56) + *(int *)(v0 + 320);
  swift_beginAccess(v1 + 120, v0 + 16, 0, 0);
  v3 = *(_QWORD *)(v1 + 120);
  v4 = swift_task_alloc(32);
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = swift_bridgeObjectRetain(v3);
  v6 = sub_10005A260(v5, (uint64_t (*)(void *, uint64_t))sub_10005BE04, v4);
  *(_QWORD *)(v0 + 312) = 0;
  swift_bridgeObjectRelease(v3);
  swift_task_dealloc(v4);
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v14 = v6;
    else
      v14 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v8 = *(uint64_t **)(v0 + 296);
  v9 = *(_QWORD *)(v0 + 272);
  v10 = *(_QWORD *)(v0 + 280);
  if (v7)
  {
    v11 = sub_10005A4EC(v6);
    swift_bridgeObjectRelease(v6);
    *v8 = v11;
    v12 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.allowlist(_:);
  }
  else
  {
    swift_bridgeObjectRelease(v6);
    v12 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.off(_:);
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v8, *v12, v9);
  return swift_task_switch(sub_10004FFF0, 0, 0);
}

uint64_t sub_10004FFF0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD, unint64_t, _QWORD);
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v82 = *(_QWORD *)(v0 + 312);
  v1 = *(_QWORD *)(v0 + 296);
  v55 = *(_QWORD *)(v0 + 280);
  v57 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD **)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 256);
  v59 = *(_QWORD *)(v0 + 248);
  v62 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 208);
  v7 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 192);
  v65 = *(_QWORD *)(v0 + 176);
  v68 = *(_QWORD *)(v0 + 240);
  v71 = *(_QWORD *)(v0 + 168);
  v74 = *(_QWORD *)(v0 + 232);
  v77 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 48);
  sub_10004C624(*(uint64_t **)(v0 + 56), v1, v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v8, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v57, v1, v62);
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v59 + 16))(v3, v2, v68);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v65 + 104))(v7, enum case for REMRemindersListDataView.FetchSubtasks.count(_:), v71);
  v10 = REMRemindersListDataView.FetchConfiguration.init(sortingStyle:showCompleted:countCompleted:remindersPrefetch:fetchSubtasks:)(v4, v57, 0, v3, v7);
  v11 = *(_QWORD *)(v9 + 24);
  Date.init()(v10);
  static REMRemindersListDataView.fetchToday_Groups(store:grouped:currentLocation:today:configuration:diffingAgainst:)(v11, 0, 0, v77, v74, 0);
  if (v82)
  {
    v12 = *(_QWORD *)(v0 + 296);
    v60 = *(_QWORD *)(v0 + 280);
    v13 = *(_QWORD *)(v0 + 264);
    v63 = *(_QWORD *)(v0 + 272);
    v66 = *(_QWORD *)(v0 + 288);
    v14 = *(_QWORD *)(v0 + 248);
    v16 = *(_QWORD *)(v0 + 232);
    v15 = *(_QWORD *)(v0 + 240);
    v17 = *(_QWORD *)(v0 + 216);
    v18 = *(_QWORD *)(v0 + 224);
    v69 = *(_QWORD *)(v0 + 256);
    v72 = *(_QWORD *)(v0 + 208);
    v75 = *(_QWORD *)(v0 + 184);
    v78 = *(_QWORD *)(v0 + 160);
    v19 = *(_QWORD *)(v0 + 112);
    v80 = *(_QWORD *)(v0 + 136);
    v83 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(v19, *(_QWORD *)(v0 + 96));
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v12, v63);
    swift_task_dealloc(v12);
    swift_task_dealloc(v66);
    swift_task_dealloc(v13);
    swift_task_dealloc(v69);
    swift_task_dealloc(v16);
    swift_task_dealloc(v72);
    swift_task_dealloc(v75);
    swift_task_dealloc(v78);
    swift_task_dealloc(v80);
    swift_task_dealloc(v19);
    swift_task_dealloc(v83);
    v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
  v22 = *(_QWORD *)(v0 + 128);
  v21 = *(_QWORD *)(v0 + 136);
  v23 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
  REMRemindersListDataView.Result.model.getter(v23);
  v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  v25 = REMRemindersListDataView.TodayGroupModel.todayReminders.getter(v24);
  v26 = REMRemindersListDataView.TodayGroupModel.nearbyReminders.getter();
  swift_bridgeObjectRetain(v25);
  sub_10005572C(v26, (uint64_t (*)(void))sub_10001C3D4, (uint64_t (*)(_QWORD))&type metadata accessor for REMRemindersListDataView.ReminderLite);
  v27 = v25;
  v28 = *(_QWORD *)(v25 + 16);
  v84 = v25;
  if (!v28)
  {
    v38 = swift_bridgeObjectRelease(v25);
    v33 = 0;
LABEL_13:
    v39 = *(_QWORD *)(v0 + 296);
    v61 = *(_QWORD *)(v0 + 272);
    v64 = *(_QWORD *)(v0 + 288);
    v56 = *(_QWORD *)(v0 + 264);
    v58 = *(_QWORD *)(v0 + 280);
    v53 = *(_QWORD *)(v0 + 248);
    v54 = *(_QWORD *)(v0 + 240);
    v49 = *(_QWORD *)(v0 + 224);
    v50 = *(_QWORD *)(v0 + 216);
    v51 = *(_QWORD *)(v0 + 232);
    v67 = *(_QWORD *)(v0 + 256);
    v70 = *(_QWORD *)(v0 + 208);
    v41 = *(_QWORD *)(v0 + 152);
    v40 = *(_QWORD *)(v0 + 160);
    v42 = *(_QWORD *)(v0 + 144);
    v73 = *(_QWORD *)(v0 + 184);
    v76 = *(_QWORD *)(v0 + 136);
    v79 = *(_QWORD *)(v0 + 112);
    v81 = *(_QWORD *)(v0 + 88);
    v43 = *(_QWORD *)(v0 + 40);
    v52 = REMRemindersListDataView.TodayGroupModel.todaySmartList.getter(v38);
    v44 = REMRemindersListDataView.TodayGroupModel.prefetchedReminders.getter();
    v45 = sub_10004C7F0(v44);
    v46 = swift_bridgeObjectRelease(v44);
    v47 = REMRemindersListDataView.TodayGroupModel.prefetchedDueReminders.getter(v46);
    v48 = sub_10004C7F0(v47);
    swift_bridgeObjectRelease(v47);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v51, v50);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v56, v54);
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v39, v61);
    *(_QWORD *)v43 = v52;
    *(_QWORD *)(v43 + 8) = v33;
    *(_BYTE *)(v43 + 16) = 64;
    *(_QWORD *)(v43 + 24) = v84;
    *(_QWORD *)(v43 + 32) = v45;
    *(_QWORD *)(v43 + 40) = v48;
    swift_task_dealloc(v39);
    swift_task_dealloc(v64);
    swift_task_dealloc(v56);
    swift_task_dealloc(v67);
    swift_task_dealloc(v51);
    swift_task_dealloc(v70);
    swift_task_dealloc(v73);
    swift_task_dealloc(v40);
    swift_task_dealloc(v76);
    swift_task_dealloc(v79);
    swift_task_dealloc(v81);
    v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
  v29 = *(_QWORD *)(v0 + 80);
  v30 = v25 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
  v31 = *(_QWORD *)(v29 + 72);
  v32 = *(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v29 + 16);
  swift_bridgeObjectRetain(v27);
  v33 = 0;
  while (1)
  {
    v34 = v32(*(_QWORD *)(v0 + 88), v30, *(_QWORD *)(v0 + 72));
    result = REMRemindersListDataView.ReminderLite.isCompleted.getter(v34);
    if ((result & 1) != 0)
      goto LABEL_5;
    v36 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    v37 = REMRemindersListDataView.ReminderLite.subtaskCount.getter();
    v33 = v36 + v37;
    if (__OFADD__(v36, v37))
    {
      __break(1u);
LABEL_11:
      v38 = swift_bridgeObjectRelease_n(v27, 2);
      goto LABEL_13;
    }
LABEL_5:
    (*(void (**)(_QWORD, _QWORD))(v29 + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
    v30 += v31;
    if (!--v28)
      goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000504B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  v5 = type metadata accessor for REMRemindersListDataView.ReminderLite(0);
  v4[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[10] = v6;
  v4[11] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for REMRemindersListDataView.FlatModel(0);
  v4[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[13] = v8;
  v4[14] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006DA4(&qword_1000AF968);
  v4[15] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[16] = v10;
  v4[17] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for REMRemindersListDataView.FlaggedModel(0);
  v4[18] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v4[19] = v12;
  v4[20] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  v4[21] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v4[22] = v14;
  v4[23] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  v4[24] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v4[25] = v16;
  v4[26] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000505E8, 0, 0);
}

uint64_t sub_1000505E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48)
                 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache);
  *(_QWORD *)(v0 + 216) = v1;
  *(_DWORD *)(v0 + 232) = *(_DWORD *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) + 28);
  return swift_task_switch(sub_100050640, v1, 0);
}

uint64_t sub_100050640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 56) + *(int *)(v0 + 232);
  swift_beginAccess(v1 + 120, v0 + 16, 0, 0);
  v3 = *(_QWORD *)(v1 + 120);
  v4 = swift_task_alloc(32);
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = swift_bridgeObjectRetain(v3);
  v6 = sub_10005A260(v5, (uint64_t (*)(void *, uint64_t))sub_10005E234, v4);
  *(_QWORD *)(v0 + 224) = 0;
  swift_bridgeObjectRelease(v3);
  swift_task_dealloc(v4);
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v14 = v6;
    else
      v14 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v9 = *(_QWORD *)(v0 + 200);
  v8 = *(uint64_t **)(v0 + 208);
  v10 = *(_QWORD *)(v0 + 192);
  if (v7)
  {
    v11 = sub_10005A4EC(v6);
    swift_bridgeObjectRelease(v6);
    *v8 = v11;
    v12 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.allowlist(_:);
  }
  else
  {
    swift_bridgeObjectRelease(v6);
    v12 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.off(_:);
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v8, *v12, v10);
  return swift_task_switch(sub_100050780, 0, 0);
}

uint64_t sub_100050780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD, unint64_t, _QWORD);
  uint64_t v30;
  uint64_t result;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD **)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  sub_10004C624(*(uint64_t **)(v0 + 56), v2, v3);
  static REMRemindersListDataView.fetchFlagged(store:sortingStyle:showCompleted:countCompleted:remindersPrefetch:diffingAgainst:)(*(_QWORD *)(v5 + 24), v4, v2, 0, v3, 0);
  if (v1)
  {
    v7 = *(_QWORD *)(v0 + 200);
    v6 = *(_QWORD *)(v0 + 208);
    v9 = *(_QWORD *)(v0 + 184);
    v8 = *(_QWORD *)(v0 + 192);
    v10 = *(_QWORD *)(v0 + 160);
    v11 = *(_QWORD *)(v0 + 136);
    v12 = *(_QWORD *)(v0 + 112);
    v13 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(v9, *(_QWORD *)(v0 + 168));
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_task_dealloc(v6);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
  v16 = *(_QWORD *)(v0 + 128);
  v15 = *(_QWORD *)(v0 + 136);
  v17 = *(_QWORD *)(v0 + 120);
  REMRemindersListDataView.Result.model.getter(v17);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  v19 = REMRemindersListDataView.FlaggedModel.flatModel.getter(v18);
  v20 = REMRemindersListDataView.FlatModel.hasIncompleteOrCompletedReminders.getter(v19);
  v21 = v20;
  v22 = REMRemindersListDataView.FlatModel.reminders.getter(v20);
  v23 = v22;
  v24 = *(_QWORD *)(v22 + 16);
  if (!v24)
  {
    v35 = swift_bridgeObjectRelease(v22);
    v25 = 0;
LABEL_13:
    v55 = *(_QWORD *)(v0 + 192);
    v56 = *(_QWORD *)(v0 + 208);
    v53 = *(_QWORD *)(v0 + 184);
    v54 = *(_QWORD *)(v0 + 200);
    v36 = *(_QWORD *)(v0 + 160);
    v51 = *(_QWORD *)(v0 + 176);
    v52 = *(_QWORD *)(v0 + 168);
    v49 = *(_QWORD *)(v0 + 144);
    v57 = *(_QWORD *)(v0 + 136);
    v38 = *(_QWORD *)(v0 + 104);
    v37 = *(_QWORD *)(v0 + 112);
    v46 = *(_QWORD *)(v0 + 96);
    v47 = *(_QWORD *)(v0 + 152);
    v58 = *(_QWORD *)(v0 + 88);
    v39 = v21 & 1 | 0x40;
    v40 = *(_QWORD *)(v0 + 40);
    v50 = REMRemindersListDataView.FlaggedModel.flaggedSmartList.getter(v35);
    v48 = REMRemindersListDataView.FlatModel.reminders.getter(v50);
    v41 = REMRemindersListDataView.FlatModel.prefetchedReminders.getter(v48);
    v42 = sub_10004C7F0(v41);
    v43 = swift_bridgeObjectRelease(v41);
    v44 = REMRemindersListDataView.FlatModel.prefetchedDueReminders.getter(v43);
    v45 = sub_10004C7F0(v44);
    swift_bridgeObjectRelease(v44);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v46);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v36, v49);
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v53, v52);
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v56, v55);
    *(_QWORD *)v40 = v50;
    *(_QWORD *)(v40 + 8) = v25;
    *(_BYTE *)(v40 + 16) = v39;
    *(_QWORD *)(v40 + 24) = v48;
    *(_QWORD *)(v40 + 32) = v42;
    *(_QWORD *)(v40 + 40) = v45;
    swift_task_dealloc(v56);
    swift_task_dealloc(v53);
    swift_task_dealloc(v36);
    swift_task_dealloc(v57);
    swift_task_dealloc(v37);
    swift_task_dealloc(v58);
    v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
  v25 = 0;
  v26 = *(_QWORD *)(v0 + 80);
  v27 = v22 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
  v28 = *(_QWORD *)(v26 + 72);
  v29 = *(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v26 + 16);
  while (1)
  {
    v30 = v29(*(_QWORD *)(v0 + 88), v27, *(_QWORD *)(v0 + 72));
    result = REMRemindersListDataView.ReminderLite.isCompleted.getter(v30);
    if ((result & 1) != 0)
      goto LABEL_5;
    v32 = __OFADD__(v25, 1);
    v33 = v25 + 1;
    if (v32)
      break;
    v34 = REMRemindersListDataView.ReminderLite.subtaskCount.getter();
    v32 = __OFADD__(v33, v34);
    v25 = v33 + v34;
    if (v32)
    {
      __break(1u);
LABEL_11:
      v35 = swift_bridgeObjectRelease(v23);
      goto LABEL_13;
    }
LABEL_5:
    (*(void (**)(_QWORD, _QWORD))(v26 + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
    v27 += v28;
    if (!--v24)
      goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100050AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Subtasks;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t Configuration;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  v4 = type metadata accessor for REMRemindersListDataView.ReminderLite(0);
  v3[8] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[9] = v5;
  v3[10] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100006DA4(&qword_1000AF970);
  v3[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[12] = v7;
  v3[13] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for REMRemindersListDataView.FlatModel(0);
  v3[14] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[15] = v9;
  v3[16] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
  v3[17] = Subtasks;
  v11 = *(_QWORD *)(Subtasks - 8);
  v3[18] = v11;
  v3[19] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v3[20] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v3[21] = v13;
  v3[22] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  Configuration = type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  v3[23] = Configuration;
  v15 = *(_QWORD *)(Configuration - 8);
  v3[24] = v15;
  v3[25] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  v3[26] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v3[27] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[28] = swift_task_alloc(v18);
  v3[29] = swift_task_alloc(v18);
  v19 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  v3[30] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v3[31] = v20;
  v21 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[32] = swift_task_alloc(v21);
  v3[33] = swift_task_alloc(v21);
  return swift_task_switch(sub_100050C44, 0, 0);
}

uint64_t sub_100050C44()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48)
                 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache);
  *(_QWORD *)(v0 + 272) = v1;
  *(_DWORD *)(v0 + 288) = *(_DWORD *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) + 28);
  return swift_task_switch(sub_100050C9C, v1, 0);
}

uint64_t sub_100050C9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 56) + *(int *)(v0 + 288);
  swift_beginAccess(v1 + 120, v0 + 16, 0, 0);
  v3 = *(_QWORD *)(v1 + 120);
  v4 = swift_task_alloc(32);
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = swift_bridgeObjectRetain(v3);
  v6 = sub_10005A260(v5, (uint64_t (*)(void *, uint64_t))sub_10005E234, v4);
  *(_QWORD *)(v0 + 280) = 0;
  swift_bridgeObjectRelease(v3);
  swift_task_dealloc(v4);
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v14 = v6;
    else
      v14 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v8 = *(uint64_t **)(v0 + 264);
  v9 = *(_QWORD *)(v0 + 240);
  v10 = *(_QWORD *)(v0 + 248);
  if (v7)
  {
    v11 = sub_10005A4EC(v6);
    swift_bridgeObjectRelease(v6);
    *v8 = v11;
    v12 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.allowlist(_:);
  }
  else
  {
    swift_bridgeObjectRelease(v6);
    v12 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.off(_:);
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v8, *v12, v9);
  return swift_task_switch(sub_100050DDC, 0, 0);
}

uint64_t sub_100050DDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD, unint64_t, _QWORD);
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v72 = *(_QWORD *)(v0 + 280);
  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD **)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 224);
  v52 = *(_QWORD *)(v0 + 248);
  v54 = *(_QWORD *)(v0 + 216);
  v67 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 152);
  v8 = *(_QWORD *)(v0 + 160);
  v56 = *(_QWORD *)(v0 + 240);
  v58 = *(_QWORD *)(v0 + 144);
  v61 = *(_QWORD *)(v0 + 208);
  v64 = *(_QWORD *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 48);
  sub_10004C624(*(uint64_t **)(v0 + 56), v2, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v6, enum case for REMRemindersListDataView.SortingStyle.default(_:), v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v1, v2, v56);
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v54 + 16))(v4, v3, v61);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v58 + 104))(v7, enum case for REMRemindersListDataView.FetchSubtasks.count(_:), v64);
  REMRemindersListDataView.FetchConfiguration.init(sortingStyle:showCompleted:countCompleted:remindersPrefetch:fetchSubtasks:)(v6, v1, 0, v4, v7);
  static REMRemindersListDataView.fetchScheduled_Flat(store:configuration:diffingAgainst:)(*(_QWORD *)(v9 + 24), v67, 0);
  if (v72)
  {
    v10 = *(_QWORD *)(v0 + 256);
    v11 = *(_QWORD *)(v0 + 264);
    v12 = *(_QWORD *)(v0 + 240);
    v13 = *(_QWORD *)(v0 + 248);
    v14 = *(_QWORD *)(v0 + 232);
    v16 = *(_QWORD *)(v0 + 208);
    v15 = *(_QWORD *)(v0 + 216);
    v17 = *(_QWORD *)(v0 + 200);
    v59 = *(_QWORD *)(v0 + 224);
    v62 = *(_QWORD *)(v0 + 176);
    v65 = *(_QWORD *)(v0 + 152);
    v68 = *(_QWORD *)(v0 + 128);
    v70 = *(_QWORD *)(v0 + 104);
    v73 = *(_QWORD *)(v0 + 80);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(v17, *(_QWORD *)(v0 + 184));
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    swift_task_dealloc(v11);
    swift_task_dealloc(v10);
    swift_task_dealloc(v14);
    swift_task_dealloc(v59);
    swift_task_dealloc(v17);
    swift_task_dealloc(v62);
    swift_task_dealloc(v65);
    swift_task_dealloc(v68);
    swift_task_dealloc(v70);
    swift_task_dealloc(v73);
    v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
  v20 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 104);
  v21 = *(_QWORD *)(v0 + 88);
  REMRemindersListDataView.Result.model.getter(v21);
  v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  v23 = REMRemindersListDataView.FlatModel.reminders.getter(v22);
  v24 = *(_QWORD *)(v23 + 16);
  v74 = v23;
  if (!v24)
  {
    v30 = 0;
LABEL_13:
    v36 = *(_QWORD *)(v0 + 264);
    v55 = *(_QWORD *)(v0 + 240);
    v57 = *(_QWORD *)(v0 + 256);
    v51 = *(_QWORD *)(v0 + 232);
    v53 = *(_QWORD *)(v0 + 248);
    v49 = *(_QWORD *)(v0 + 216);
    v50 = *(_QWORD *)(v0 + 208);
    v37 = *(_QWORD *)(v0 + 192);
    v46 = *(_QWORD *)(v0 + 184);
    v47 = *(_QWORD *)(v0 + 200);
    v60 = *(_QWORD *)(v0 + 224);
    v63 = *(_QWORD *)(v0 + 176);
    v39 = *(_QWORD *)(v0 + 120);
    v38 = *(_QWORD *)(v0 + 128);
    v40 = *(_QWORD *)(v0 + 112);
    v66 = *(_QWORD *)(v0 + 152);
    v69 = *(_QWORD *)(v0 + 104);
    v71 = *(_QWORD *)(v0 + 80);
    v41 = *(_QWORD *)(v0 + 40);
    v42 = REMRemindersListDataView.FlatModel.prefetchedReminders.getter(v23);
    v48 = sub_10004C7F0(v42);
    v43 = swift_bridgeObjectRelease(v42);
    v44 = REMRemindersListDataView.FlatModel.prefetchedDueReminders.getter(v43);
    v45 = sub_10004C7F0(v44);
    swift_bridgeObjectRelease(v44);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v47, v46);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v51, v50);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v36, v55);
    *(_QWORD *)v41 = 0;
    *(_QWORD *)(v41 + 8) = v30;
    *(_BYTE *)(v41 + 16) = 64;
    *(_QWORD *)(v41 + 24) = v74;
    *(_QWORD *)(v41 + 32) = v48;
    *(_QWORD *)(v41 + 40) = v45;
    swift_task_dealloc(v36);
    swift_task_dealloc(v57);
    swift_task_dealloc(v51);
    swift_task_dealloc(v60);
    swift_task_dealloc(v47);
    swift_task_dealloc(v63);
    swift_task_dealloc(v66);
    swift_task_dealloc(v38);
    swift_task_dealloc(v69);
    swift_task_dealloc(v71);
    v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
  v25 = v23;
  v26 = *(_QWORD *)(v0 + 72);
  v27 = v23 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
  v28 = *(_QWORD *)(v26 + 72);
  v29 = *(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v26 + 16);
  swift_bridgeObjectRetain(v23);
  v30 = 0;
  while (1)
  {
    v31 = v29(*(_QWORD *)(v0 + 80), v27, *(_QWORD *)(v0 + 64));
    result = REMRemindersListDataView.ReminderLite.isCompleted.getter(v31);
    if ((result & 1) != 0)
      goto LABEL_5;
    v33 = __OFADD__(v30, 1);
    v34 = v30 + 1;
    if (v33)
      break;
    v35 = REMRemindersListDataView.ReminderLite.subtaskCount.getter();
    v33 = __OFADD__(v34, v35);
    v30 = v34 + v35;
    if (v33)
    {
      __break(1u);
LABEL_11:
      v23 = swift_bridgeObjectRelease(v25);
      goto LABEL_13;
    }
LABEL_5:
    (*(void (**)(_QWORD, _QWORD))(v26 + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
    v27 += v28;
    if (!--v24)
      goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000511E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  v5 = type metadata accessor for REMRemindersListDataView.ListsModel.Sublist(0);
  v4[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[10] = v6;
  v4[11] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for REMRemindersListDataView.ReminderLite(0);
  v4[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[13] = v8;
  v4[14] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006DA4(&qword_1000AF978);
  v4[15] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[16] = v10;
  v4[17] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for REMRemindersListDataView.ListsModel(0);
  v4[18] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v4[19] = v12;
  v4[20] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  v4[21] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v4[22] = v14;
  v4[23] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  v4[24] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v4[25] = v16;
  v4[26] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100051318, 0, 0);
}

uint64_t sub_100051318()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48)
                 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache);
  *(_QWORD *)(v0 + 216) = v1;
  *(_DWORD *)(v0 + 232) = *(_DWORD *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) + 28);
  return swift_task_switch(sub_100051370, v1, 0);
}

uint64_t sub_100051370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 56) + *(int *)(v0 + 232);
  swift_beginAccess(v1 + 120, v0 + 16, 0, 0);
  v3 = *(_QWORD *)(v1 + 120);
  v4 = swift_task_alloc(32);
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = swift_bridgeObjectRetain(v3);
  v6 = sub_10005A260(v5, (uint64_t (*)(void *, uint64_t))sub_10005E234, v4);
  *(_QWORD *)(v0 + 224) = 0;
  swift_bridgeObjectRelease(v3);
  swift_task_dealloc(v4);
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v14 = v6;
    else
      v14 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v9 = *(_QWORD *)(v0 + 200);
  v8 = *(uint64_t **)(v0 + 208);
  v10 = *(_QWORD *)(v0 + 192);
  if (v7)
  {
    v11 = sub_10005A4EC(v6);
    swift_bridgeObjectRelease(v6);
    *v8 = v11;
    v12 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.allowlist(_:);
  }
  else
  {
    swift_bridgeObjectRelease(v6);
    v12 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.off(_:);
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v8, *v12, v10);
  return swift_task_switch(sub_1000514B0, 0, 0);
}

uint64_t sub_1000514B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, unint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t (*v34)(_QWORD, char *, _QWORD);
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD **)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  sub_10004C624(*(uint64_t **)(v0 + 56), v2, v3);
  static REMRemindersListDataView.fetchAll(store:sortingStyle:showCompleted:countCompleted:remindersPrefetch:diffingAgainst:)(*(_QWORD *)(v5 + 24), v4, v2, 0, v3, 0);
  if (v1)
  {
    v7 = *(_QWORD *)(v0 + 200);
    v6 = *(_QWORD *)(v0 + 208);
    v9 = *(_QWORD *)(v0 + 184);
    v8 = *(_QWORD *)(v0 + 192);
    v10 = *(_QWORD *)(v0 + 160);
    v11 = *(_QWORD *)(v0 + 136);
    v12 = *(_QWORD *)(v0 + 112);
    v13 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(v9, *(_QWORD *)(v0 + 168));
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_task_dealloc(v6);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
  v16 = *(_QWORD *)(v0 + 128);
  v15 = *(_QWORD *)(v0 + 136);
  v17 = *(_QWORD *)(v0 + 120);
  REMRemindersListDataView.Result.model.getter(v17);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  v19 = REMRemindersListDataView.ListsModel.groups.getter(v18);
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    v21 = *(_QWORD *)(v0 + 80);
    v58 = v19;
    v22 = v19 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    v23 = *(_QWORD *)(v21 + 72);
    v24 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v21 + 16);
    do
    {
      v25 = *(_QWORD *)(v0 + 88);
      v26 = *(_QWORD *)(v0 + 72);
      v27 = v24(v25, v22, v26);
      v28 = REMRemindersListDataView.ListsModel.Sublist.reminders.getter(v27);
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v25, v26);
      sub_10005572C(v28, (uint64_t (*)(void))sub_10001C3D4, (uint64_t (*)(_QWORD))&type metadata accessor for REMRemindersListDataView.ReminderLite);
      v22 += v23;
      --v20;
    }
    while (v20);
    v29 = swift_bridgeObjectRelease(v58);
  }
  else
  {
    v29 = swift_bridgeObjectRelease(v19);
  }
  v30 = _swiftEmptyArrayStorage[2];
  if (!v30)
  {
    v35 = 0;
LABEL_18:
    v40 = *(_QWORD *)(v0 + 208);
    v41 = *(_QWORD *)(v0 + 184);
    v53 = *(_QWORD *)(v0 + 200);
    v54 = *(_QWORD *)(v0 + 192);
    v42 = *(_QWORD *)(v0 + 160);
    v51 = *(_QWORD *)(v0 + 176);
    v52 = *(_QWORD *)(v0 + 168);
    v43 = *(_QWORD *)(v0 + 144);
    v44 = *(_QWORD *)(v0 + 152);
    v55 = *(_QWORD *)(v0 + 136);
    v56 = *(_QWORD *)(v0 + 112);
    v57 = *(_QWORD *)(v0 + 88);
    v45 = *(_QWORD *)(v0 + 40);
    v46 = REMRemindersListDataView.ListsModel.prefetchedReminders.getter(v29);
    v50 = sub_10004C7F0(v46);
    v47 = swift_bridgeObjectRelease(v46);
    v48 = REMRemindersListDataView.ListsModel.prefetchedDueReminders.getter(v47);
    v49 = sub_10004C7F0(v48);
    swift_bridgeObjectRelease(v48);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v41, v52);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v40, v54);
    *(_QWORD *)v45 = 0;
    *(_QWORD *)(v45 + 8) = v35;
    *(_BYTE *)(v45 + 16) = 64;
    *(_QWORD *)(v45 + 24) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v45 + 32) = v50;
    *(_QWORD *)(v45 + 40) = v49;
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
  v31 = *(_QWORD *)(v0 + 104);
  v32 = (char *)_swiftEmptyArrayStorage
      + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
  v33 = *(_QWORD *)(v31 + 72);
  v34 = *(uint64_t (**)(_QWORD, char *, _QWORD))(v31 + 16);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v35 = 0;
  while (1)
  {
    v36 = v34(*(_QWORD *)(v0 + 112), v32, *(_QWORD *)(v0 + 96));
    result = REMRemindersListDataView.ReminderLite.isCompleted.getter(v36);
    if ((result & 1) != 0)
      goto LABEL_10;
    v38 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    v39 = REMRemindersListDataView.ReminderLite.subtaskCount.getter();
    v35 = v38 + v39;
    if (__OFADD__(v38, v39))
    {
      __break(1u);
LABEL_16:
      v29 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      goto LABEL_18;
    }
LABEL_10:
    (*(void (**)(_QWORD, _QWORD))(v31 + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
    v32 += v33;
    if (!--v30)
      goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_100051814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  v5 = type metadata accessor for REMRemindersListDataView.ListsModel.Sublist(0);
  v4[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[10] = v6;
  v4[11] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for REMRemindersListDataView.ReminderLite(0);
  v4[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[13] = v8;
  v4[14] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for REMRemindersListDataView.ListsModel(0);
  v4[15] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[16] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[17] = swift_task_alloc(v11);
  v4[18] = swift_task_alloc(v11);
  v12 = sub_100006DA4(&qword_1000AF9F0);
  v4[19] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v4[20] = v13;
  v4[21] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for REMRemindersListDataView.AssignedModel(0);
  v4[22] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v4[23] = v15;
  v4[24] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  v4[25] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v4[26] = v17;
  v4[27] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  v4[28] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v4[29] = v19;
  v4[30] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10005197C, 0, 0);
}

uint64_t sub_10005197C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48)
                 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache);
  *(_QWORD *)(v0 + 248) = v1;
  *(_DWORD *)(v0 + 264) = *(_DWORD *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) + 28);
  return swift_task_switch(sub_1000519D4, v1, 0);
}

uint64_t sub_1000519D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 56) + *(int *)(v0 + 264);
  swift_beginAccess(v1 + 120, v0 + 16, 0, 0);
  v3 = *(_QWORD *)(v1 + 120);
  v4 = swift_task_alloc(32);
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = swift_bridgeObjectRetain(v3);
  v6 = sub_10005A260(v5, (uint64_t (*)(void *, uint64_t))sub_10005E234, v4);
  *(_QWORD *)(v0 + 256) = 0;
  swift_bridgeObjectRelease(v3);
  swift_task_dealloc(v4);
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v14 = v6;
    else
      v14 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v9 = *(_QWORD *)(v0 + 232);
  v8 = *(uint64_t **)(v0 + 240);
  v10 = *(_QWORD *)(v0 + 224);
  if (v7)
  {
    v11 = sub_10005A4EC(v6);
    swift_bridgeObjectRelease(v6);
    *v8 = v11;
    v12 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.allowlist(_:);
  }
  else
  {
    swift_bridgeObjectRelease(v6);
    v12 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.off(_:);
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v8, *v12, v10);
  return swift_task_switch(sub_100051B14, 0, 0);
}

uint64_t sub_100051B14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, unint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD, char *, _QWORD);
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD **)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  sub_10004C624(*(uint64_t **)(v0 + 56), v2, v3);
  static REMRemindersListDataView.fetchAssigned(store:sortingStyle:showCompleted:countCompleted:remindersPrefetch:diffingAgainst:currentUserShareParticipantIDsOverride:)(*(_QWORD *)(v5 + 24), v4, v2, 0, v3, 0, 0);
  if (v1)
  {
    v7 = *(_QWORD *)(v0 + 232);
    v6 = *(_QWORD *)(v0 + 240);
    v9 = *(_QWORD *)(v0 + 216);
    v8 = *(_QWORD *)(v0 + 224);
    v10 = *(_QWORD *)(v0 + 192);
    v11 = *(_QWORD *)(v0 + 168);
    v13 = *(_QWORD *)(v0 + 136);
    v12 = *(_QWORD *)(v0 + 144);
    v68 = *(_QWORD *)(v0 + 112);
    v70 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(v9, *(_QWORD *)(v0 + 200));
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_task_dealloc(v6);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v68);
    swift_task_dealloc(v70);
    v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
  v16 = *(_QWORD *)(v0 + 160);
  v15 = *(_QWORD *)(v0 + 168);
  v17 = *(_QWORD *)(v0 + 152);
  REMRemindersListDataView.Result.model.getter(v17);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  v19 = REMRemindersListDataView.AssignedModel.listsModel.getter(v18);
  v20 = REMRemindersListDataView.ListsModel.groups.getter(v19);
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    v22 = *(_QWORD *)(v0 + 80);
    v71 = v20;
    v23 = v20 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    v24 = *(_QWORD *)(v22 + 72);
    v25 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v22 + 16);
    do
    {
      v26 = *(_QWORD *)(v0 + 88);
      v27 = *(_QWORD *)(v0 + 72);
      v28 = v25(v26, v23, v27);
      v29 = REMRemindersListDataView.ListsModel.Sublist.reminders.getter(v28);
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v26, v27);
      sub_10005572C(v29, (uint64_t (*)(void))sub_10001C3D4, (uint64_t (*)(_QWORD))&type metadata accessor for REMRemindersListDataView.ReminderLite);
      v23 += v24;
      --v21;
    }
    while (v21);
    v30 = swift_bridgeObjectRelease(v71);
  }
  else
  {
    v30 = swift_bridgeObjectRelease(v20);
  }
  v31 = _swiftEmptyArrayStorage[2];
  if (!v31)
  {
    v36 = 0;
LABEL_18:
    v64 = *(_QWORD *)(v0 + 224);
    v65 = *(_QWORD *)(v0 + 240);
    v62 = *(_QWORD *)(v0 + 216);
    v63 = *(_QWORD *)(v0 + 232);
    v41 = *(_QWORD *)(v0 + 192);
    v60 = *(_QWORD *)(v0 + 208);
    v61 = *(_QWORD *)(v0 + 200);
    v57 = *(_QWORD *)(v0 + 184);
    v58 = *(_QWORD *)(v0 + 176);
    v42 = *(_QWORD *)(v0 + 136);
    v43 = *(_QWORD *)(v0 + 144);
    v45 = *(_QWORD *)(v0 + 120);
    v44 = *(_QWORD *)(v0 + 128);
    v66 = *(_QWORD *)(v0 + 168);
    v67 = *(_QWORD *)(v0 + 112);
    v69 = *(_QWORD *)(v0 + 88);
    v46 = *(_QWORD *)(v0 + 40);
    v59 = REMRemindersListDataView.AssignedModel.assignedSmartList.getter(v30);
    v47 = REMRemindersListDataView.AssignedModel.listsModel.getter(v59);
    v48 = REMRemindersListDataView.ListsModel.hasCompletedReminders.getter(v47);
    v49 = *(uint64_t (**)(uint64_t, uint64_t))(v44 + 8);
    v50 = v49(v42, v45);
    v56 = v48 & 1;
    v51 = REMRemindersListDataView.ListsModel.prefetchedReminders.getter(v50);
    v55 = sub_10004C7F0(v51);
    v52 = swift_bridgeObjectRelease(v51);
    v53 = REMRemindersListDataView.ListsModel.prefetchedDueReminders.getter(v52);
    v54 = sub_10004C7F0(v53);
    swift_bridgeObjectRelease(v53);
    v49(v43, v45);
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v41, v58);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v62, v61);
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v65, v64);
    *(_QWORD *)v46 = v59;
    *(_QWORD *)(v46 + 8) = v36;
    *(_BYTE *)(v46 + 16) = v56;
    *(_QWORD *)(v46 + 24) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v46 + 32) = v55;
    *(_QWORD *)(v46 + 40) = v54;
    swift_task_dealloc(v65);
    swift_task_dealloc(v62);
    swift_task_dealloc(v41);
    swift_task_dealloc(v66);
    swift_task_dealloc(v43);
    swift_task_dealloc(v42);
    swift_task_dealloc(v67);
    swift_task_dealloc(v69);
    v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
  v32 = *(_QWORD *)(v0 + 104);
  v33 = (char *)_swiftEmptyArrayStorage
      + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
  v34 = *(_QWORD *)(v32 + 72);
  v35 = *(uint64_t (**)(_QWORD, char *, _QWORD))(v32 + 16);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v36 = 0;
  while (1)
  {
    v37 = v35(*(_QWORD *)(v0 + 112), v33, *(_QWORD *)(v0 + 96));
    result = REMRemindersListDataView.ReminderLite.isCompleted.getter(v37);
    if ((result & 1) != 0)
      goto LABEL_10;
    v39 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    v40 = REMRemindersListDataView.ReminderLite.subtaskCount.getter();
    v36 = v39 + v40;
    if (__OFADD__(v39, v40))
    {
      __break(1u);
LABEL_16:
      v30 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      goto LABEL_18;
    }
LABEL_10:
    (*(void (**)(_QWORD, _QWORD))(v32 + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
    v33 += v34;
    if (!--v31)
      goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_100051F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v4;
  uint64_t result;

  type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry(0);
  v4 = Date.distance(to:)(a3);
  result = 0;
  if (v4 <= 2.0)
    return REMObjectID.codable.getter(0);
  return result;
}

uint64_t sub_100051F84(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(v4 + 128) = a3;
  *(_QWORD *)(v4 + 136) = v3;
  *(_BYTE *)(v4 + 176) = a2;
  *(_QWORD *)(v4 + 120) = a1;
  v5 = type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry(0);
  *(_QWORD *)(v4 + 144) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 152) = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 160) = swift_task_alloc(v7);
  *(_QWORD *)(v4 + 168) = swift_task_alloc(v7);
  return swift_task_switch(sub_100051FFC, v3, 0);
}

void sub_100051FFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  id v39;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  id *v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;

  v65 = v0 + 80;
  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = (_QWORD *)(v1 + 120);
  swift_beginAccess(v1 + 120, v0 + 56, 1, 0);
  v5 = *(_QWORD *)(v1 + 120);
  v6 = swift_task_alloc(32);
  *(_QWORD *)(v6 + 16) = v1;
  *(_QWORD *)(v6 + 24) = v2;
  swift_bridgeObjectRetain(v5);
  v7 = sub_100057BCC((uint64_t)sub_100057E84, v6, v5);
  swift_bridgeObjectRelease(v5);
  swift_task_dealloc(v6);
  v8 = *(_QWORD *)(v1 + 120);
  *(_QWORD *)(v1 + 120) = v7;
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(v0 + 120);
  if ((v3 & 0xC000000000000001) != 0)
  {
    if (v9 < 0)
      v10 = *(_QWORD *)(v0 + 120);
    else
      v10 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v11 = __CocoaSet.makeIterator()(v10);
    v12 = sub_100058A28(0, &qword_1000AF878, REMObjectID_ptr);
    v13 = sub_100057EA0();
    v14 = Set.Iterator.init(_cocoa:)(v11, v12, v13);
    v3 = *(_QWORD *)(v0 + 16);
    v61 = *(_QWORD *)(v0 + 24);
    v15 = *(_QWORD *)(v0 + 32);
    v16 = *(_QWORD *)(v0 + 40);
    v17 = *(_QWORD *)(v0 + 48);
  }
  else
  {
    v18 = -1 << *(_BYTE *)(v9 + 32);
    v61 = v9 + 56;
    v15 = ~v18;
    v19 = -v18;
    if (v19 < 64)
      v20 = ~(-1 << v19);
    else
      v20 = -1;
    v17 = v20 & *(_QWORD *)(v9 + 56);
    v14 = swift_bridgeObjectRetain(v9);
    v16 = 0;
  }
  v58 = (uint64_t *)(v0 + 112);
  v59 = (id *)(v0 + 104);
  v62 = *(_QWORD *)(v0 + 152);
  v64 = *(_QWORD *)(v0 + 144);
  v66 = v0;
  v63 = *(_BYTE *)(v0 + 176);
  v60 = (unint64_t)(v15 + 64) >> 6;
  while (1)
  {
    if (v3 < 0)
    {
      v25 = __CocoaSet.Iterator.next()(v14);
      if (!v25)
        goto LABEL_44;
      v26 = v25;
      *v58 = v25;
      v27 = sub_100058A28(0, &qword_1000AF878, REMObjectID_ptr);
      swift_unknownObjectRetain(v26);
      swift_dynamicCast(v59, v58, (char *)&type metadata for Swift.AnyObject + 8, v27, 7);
      v28 = *v59;
      swift_unknownObjectRelease(v26);
      v24 = v16;
      v22 = v17;
      if (!v28)
        goto LABEL_44;
    }
    else
    {
      if (v17)
      {
        v22 = (v17 - 1) & v17;
        v23 = __clz(__rbit64(v17)) | (v16 << 6);
        v24 = v16;
      }
      else
      {
        v29 = v16 + 1;
        if (__OFADD__(v16, 1))
          goto LABEL_47;
        if (v29 >= v60)
          goto LABEL_44;
        v30 = *(_QWORD *)(v61 + 8 * v29);
        v24 = v16 + 1;
        if (!v30)
        {
          v24 = v16 + 2;
          if (v16 + 2 >= v60)
            goto LABEL_44;
          v30 = *(_QWORD *)(v61 + 8 * v24);
          if (!v30)
          {
            v24 = v16 + 3;
            if (v16 + 3 >= v60)
              goto LABEL_44;
            v30 = *(_QWORD *)(v61 + 8 * v24);
            if (!v30)
            {
              v24 = v16 + 4;
              if (v16 + 4 >= v60)
                goto LABEL_44;
              v30 = *(_QWORD *)(v61 + 8 * v24);
              if (!v30)
              {
                v31 = v16 + 5;
                while (v60 != v31)
                {
                  v30 = *(_QWORD *)(v61 + 8 * v31++);
                  if (v30)
                  {
                    v24 = v31 - 1;
                    goto LABEL_32;
                  }
                }
LABEL_44:
                v56 = *(_QWORD *)(v66 + 160);
                v57 = *(_QWORD *)(v66 + 168);
                sub_100057EF8(v3);
                swift_task_dealloc(v57);
                swift_task_dealloc(v56);
                (*(void (**)(void))(v66 + 8))();
                return;
              }
            }
          }
        }
LABEL_32:
        v22 = (v30 - 1) & v30;
        v23 = __clz(__rbit64(v30)) + (v24 << 6);
      }
      v28 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v23);
      if (!v28)
        goto LABEL_44;
    }
    v32 = v3;
    v33 = v15;
    v35 = *(_QWORD *)(v66 + 160);
    v34 = *(_BYTE **)(v66 + 168);
    v36 = *(_QWORD *)(v66 + 128);
    v37 = &v34[*(int *)(v64 + 20)];
    v38 = type metadata accessor for Date(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v37, v36, v38);
    *v34 = v63;
    swift_beginAccess(v4, v65, 33, 0);
    sub_100007EF0((uint64_t)v34, v35, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
    v39 = v28;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v41 = (_QWORD *)*v4;
    v67 = (_QWORD *)*v4;
    *v4 = 0x8000000000000000;
    v43 = sub_100057D3C((uint64_t)v39);
    v44 = v41[2];
    v45 = (v42 & 1) == 0;
    v46 = v44 + v45;
    if (__OFADD__(v44, v45))
      break;
    v47 = v42;
    if (v41[3] >= v46)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100058238();
        v41 = v67;
      }
    }
    else
    {
      sub_100057878(v46, isUniquelyReferenced_nonNull_native);
      v41 = v67;
      v48 = sub_100057D3C((uint64_t)v39);
      if ((v47 & 1) != (v49 & 1))
      {
        v55 = sub_100058A28(0, &qword_1000AF878, REMObjectID_ptr);
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v55);
        return;
      }
      v43 = v48;
    }
    v15 = v33;
    v3 = v32;
    v50 = *(_QWORD *)(v66 + 160);
    if ((v47 & 1) != 0)
    {
      sub_100058468(v50, v41[7] + *(_QWORD *)(v62 + 72) * v43);
    }
    else
    {
      v41[(v43 >> 6) + 8] |= 1 << v43;
      *(_QWORD *)(v41[6] + 8 * v43) = v39;
      sub_100007EF0(v50, v41[7] + *(_QWORD *)(v62 + 72) * v43, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
      v51 = v41[2];
      v52 = __OFADD__(v51, 1);
      v53 = v51 + 1;
      if (v52)
        goto LABEL_46;
      v41[2] = v53;
      v54 = v39;
    }
    v21 = *v4;
    *v4 = v41;
    swift_bridgeObjectRelease(v21);

    swift_endAccess(v65);
    v16 = v24;
    v17 = v22;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
}

BOOL sub_100052538(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a2;
  v31 = a4;
  v5 = type metadata accessor for Date(0);
  v29 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v28 - v9;
  v11 = sub_100006DA4(&qword_1000AF890);
  v12 = __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v28 - v16;
  v18 = *a1;
  v19 = (char *)&v28 + *(int *)(v15 + 48) - v16;
  *(uint64_t *)((char *)&v28 - v16) = (uint64_t)v18;
  sub_1000072AC(v30, (uint64_t)v19, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
  v20 = (uint64_t)v14 + *(int *)(v11 + 48);
  *v14 = v18;
  sub_1000072AC((uint64_t)v19, v20, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
  v21 = type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry(0);
  v22 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v8, v20 + *(int *)(v21 + 20), v5);
  v23 = v18;
  v24 = sub_100007EB4(v20, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
  Date.addingTimeInterval(_:)(v24, 2.0);
  v25 = *(void (**)(char *, uint64_t))(v22 + 8);
  v25(v8, v5);
  v26 = sub_100007218(&qword_1000AF898, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  LOBYTE(v18) = dispatch thunk of static Comparable.< infix(_:_:)(v10, v31, v5, v26);
  v25(v10, v5);
  sub_100009578((uint64_t)v17, &qword_1000AF890);
  return (v18 & 1) == 0;
}

uint64_t sub_100052728@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[24];

  v5 = sub_100006DA4(&qword_1000AF870);
  __chkstk_darwin(v5);
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess(v2 + 120, v23, 0, 0);
  v12 = *(_QWORD *)(v2 + 120);
  if (!*(_QWORD *)(v12 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_7:
    sub_100009578((uint64_t)v7, &qword_1000AF870);
LABEL_8:
    v17 = type metadata accessor for Date(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a2, 1, 1, v17);
  }
  v13 = a1;
  swift_bridgeObjectRetain(v12);
  v14 = sub_100057D3C((uint64_t)v13);
  if ((v15 & 1) != 0)
  {
    sub_1000072AC(*(_QWORD *)(v12 + 56) + *(_QWORD *)(v9 + 72) * v14, (uint64_t)v7, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
    v16 = 0;
  }
  else
  {
    v16 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v16, 1, v8);

  swift_bridgeObjectRelease(v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    goto LABEL_7;
  sub_100007EF0((uint64_t)v7, (uint64_t)v11, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
  if (*v11 != 1)
  {
    sub_100007EB4((uint64_t)v11, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
    goto LABEL_8;
  }
  v19 = &v11[*(int *)(v8 + 20)];
  v20 = type metadata accessor for Date(0);
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v21 + 32))(a2, v19, v20);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(a2, 0, 1, v20);
}

uint64_t sub_100052940()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120));
  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_100052964()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100052970(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(_QWORD *);

  v8[25] = a7;
  v8[26] = a8;
  v8[24] = a6;
  v10 = type metadata accessor for REMRemindersListDataView.ReminderLite(0);
  v8[27] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v8[28] = v11;
  v8[29] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v8[30] = v12;
  v8[31] = static MainActor.shared.getter(v12);
  v15 = (uint64_t (*)(_QWORD *))((char *)a4 + *a4);
  v13 = (_QWORD *)swift_task_alloc(a4[1]);
  v8[32] = v13;
  *v13 = v8;
  v13[1] = sub_100052A2C;
  return v15(v8 + 2);
}

uint64_t sub_100052A2C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 256);
  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2[30], &protocol witness table for MainActor);
  v6 = v4;
  if (v0)
  {
    v7 = sub_10005E230;
  }
  else
  {
    v2[34] = v4;
    v2[35] = v5;
    v7 = sub_100052AB4;
  }
  return swift_task_switch(v7, v6, v5);
}

uint64_t sub_100052AB4()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[2];

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    v49[0] = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v1);
    sub_100081838(0, v2, 0);
    v3 = _swiftEmptyArrayStorage;
    v47 = v1;
    v4 = v1 + 32;
    do
    {
      sub_10001D418(v4, v0 + 112);
      v5 = *(_QWORD *)(v0 + 136);
      v6 = *(_QWORD *)(v0 + 144);
      sub_10001E184((_QWORD *)(v0 + 112), v5);
      *(_QWORD *)(v0 + 64) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      sub_100006E64((__int128 *)(v0 + 112), v0 + 72);
      v49[0] = (uint64_t)v3;
      if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
      {
        sub_100081838(0, v3[2] + 1, 1);
        v3 = (_QWORD *)v49[0];
      }
      v8 = v3[2];
      v7 = v3[3];
      if (v8 >= v7 >> 1)
      {
        sub_100081838(v7 > 1, v8 + 1, 1);
        v3 = (_QWORD *)v49[0];
      }
      v3[2] = v8 + 1;
      v9 = &v3[6 * v8];
      v10 = *(_OWORD *)(v0 + 64);
      v11 = *(_OWORD *)(v0 + 96);
      v9[3] = *(_OWORD *)(v0 + 80);
      v9[4] = v11;
      v9[2] = v10;
      v4 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease(v47);
  }
  v12 = v3[2];
  if (v12)
  {
    sub_100006DA4(&qword_1000AF990);
    v13 = (void *)static _DictionaryStorage.allocate(capacity:)(v12);
  }
  else
  {
    v13 = &_swiftEmptyDictionarySingleton;
  }
  v14 = *(_QWORD *)(v0 + 264);
  v49[0] = (uint64_t)v13;
  sub_10005BE7C((uint64_t)v3, 1, v49);
  swift_bridgeObjectRelease(v3);
  v15 = v49[0];
  if (v14)
    return swift_release(v49[0]);
  v16 = *(_QWORD *)(v0 + 40);
  v17 = *(_QWORD *)(v16 + 16);
  v18 = _swiftEmptyArrayStorage;
  if (v17)
  {
    v45 = v49[0];
    v19 = *(_QWORD *)(v0 + 224);
    v49[0] = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v16);
    sub_10008181C(0, v17, 0);
    v44 = v16;
    v20 = v16 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v21 = v19;
    v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
    v48 = *(_QWORD *)(v19 + 72);
    do
    {
      v22 = *(_QWORD *)(v0 + 232);
      v23 = *(_QWORD *)(v0 + 216);
      v24 = v46(v22, v20, v23);
      v25 = REMRemindersListDataView.ReminderLite.objectID.getter(v24);
      v26 = REMRemindersListDataView.ReminderLite.subtaskCount.getter();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v23);
      v18 = (_QWORD *)v49[0];
      if ((swift_isUniquelyReferenced_nonNull_native(v49[0]) & 1) == 0)
      {
        sub_10008181C(0, v18[2] + 1, 1);
        v18 = (_QWORD *)v49[0];
      }
      v28 = v18[2];
      v27 = v18[3];
      if (v28 >= v27 >> 1)
      {
        sub_10008181C(v27 > 1, v28 + 1, 1);
        v18 = (_QWORD *)v49[0];
      }
      v18[2] = v28 + 1;
      v29 = &v18[2 * v28];
      v29[4] = v25;
      v29[5] = v26;
      v20 += v48;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease(v44);
    v15 = v45;
  }
  v30 = v18[2];
  if (v30)
  {
    sub_100006DA4(&qword_1000AF998);
    v31 = (void *)static _DictionaryStorage.allocate(capacity:)(v30);
  }
  else
  {
    v31 = &_swiftEmptyDictionarySingleton;
  }
  v49[0] = (uint64_t)v31;
  sub_10005C184((uint64_t)v18, 1, v49);
  swift_bridgeObjectRelease(v18);
  v32 = v49[0];
  *(_QWORD *)(v0 + 288) = v49[0];
  v33 = *(_QWORD *)(v0 + 40);
  swift_retain(v15);
  v34 = swift_bridgeObjectRetain(v33);
  v35 = sub_10005A0B8(v34, v15);
  *(_QWORD *)(v0 + 296) = v35;
  swift_release_n(v15, 2);
  swift_bridgeObjectRelease(v33);
  v36 = *(_QWORD *)(v0 + 56);
  v49[0] = v36;
  swift_bridgeObjectRetain_n(v36, 2);
  sub_100058A60(v49);
  v38 = *(_QWORD *)(v0 + 192);
  swift_bridgeObjectRelease(v36);
  *(_QWORD *)(v0 + 304) = v49[0];
  *(_QWORD *)(v0 + 152) = v35;
  v39 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 312) = v39;
  *(_QWORD *)(v39 + 16) = v38;
  *(_QWORD *)(v39 + 24) = v32;
  v40 = (_QWORD *)swift_task_alloc(async function pointer to Sequence.asyncMap<A>(_:)[1]);
  *(_QWORD *)(v0 + 320) = v40;
  v41 = sub_100006DA4(&qword_1000AF9B0);
  *(_QWORD *)(v0 + 328) = v41;
  v42 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  *(_QWORD *)(v0 + 336) = v42;
  v43 = sub_10005C458();
  *(_QWORD *)(v0 + 344) = v43;
  *v40 = v0;
  v40[1] = sub_100052F18;
  return Sequence.asyncMap<A>(_:)(&unk_1000AFA68, v39, v41, v42, v43);
}

uint64_t sub_100052F18(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 312);
  v3 = *(_QWORD *)(*v1 + 320);
  *(_QWORD *)(*v1 + 352) = a1;
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return swift_task_switch(sub_100052F78, *(_QWORD *)(v2 + 272), *(_QWORD *)(v2 + 280));
}

uint64_t sub_100052F78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[36];
  v2 = v0[24];
  v0[20] = v0[38];
  v3 = swift_task_alloc(32);
  v0[45] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to Sequence.asyncMap<A>(_:)[1]);
  v0[46] = v4;
  *v4 = v0;
  v4[1] = sub_100053008;
  return Sequence.asyncMap<A>(_:)(&unk_1000AFA70, v3, v0[41], v0[42], v0[43]);
}

uint64_t sub_100053008(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 360);
  v3 = *(_QWORD *)(*v1 + 368);
  v5 = *(_QWORD *)(*v1 + 304);
  v6 = *(_QWORD *)(*v1 + 288);
  *(_QWORD *)(*v1 + 376) = a1;
  swift_task_dealloc(v3);
  swift_release(v6);
  swift_release(v5);
  swift_task_dealloc(v4);
  return swift_task_switch(sub_10005E22C, *(_QWORD *)(v2 + 272), *(_QWORD *)(v2 + 280));
}

uint64_t sub_100053088(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(_QWORD *);

  v8[25] = a7;
  v8[26] = a8;
  v8[24] = a6;
  v10 = type metadata accessor for REMRemindersListDataView.ReminderLite(0);
  v8[27] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v8[28] = v11;
  v8[29] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v8[30] = v12;
  v8[31] = static MainActor.shared.getter(v12);
  v15 = (uint64_t (*)(_QWORD *))((char *)a4 + *a4);
  v13 = (_QWORD *)swift_task_alloc(a4[1]);
  v8[32] = v13;
  *v13 = v8;
  v13[1] = sub_100053144;
  return v15(v8 + 2);
}

uint64_t sub_100053144()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 256);
  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2[30], &protocol witness table for MainActor);
  v6 = v4;
  if (v0)
  {
    v7 = sub_10005E230;
  }
  else
  {
    v2[34] = v4;
    v2[35] = v5;
    v7 = sub_1000531CC;
  }
  return swift_task_switch(v7, v6, v5);
}

uint64_t sub_1000531CC()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[2];

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    v49[0] = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v1);
    sub_100081838(0, v2, 0);
    v3 = _swiftEmptyArrayStorage;
    v47 = v1;
    v4 = v1 + 32;
    do
    {
      sub_10001D418(v4, v0 + 112);
      v5 = *(_QWORD *)(v0 + 136);
      v6 = *(_QWORD *)(v0 + 144);
      sub_10001E184((_QWORD *)(v0 + 112), v5);
      *(_QWORD *)(v0 + 64) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      sub_100006E64((__int128 *)(v0 + 112), v0 + 72);
      v49[0] = (uint64_t)v3;
      if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
      {
        sub_100081838(0, v3[2] + 1, 1);
        v3 = (_QWORD *)v49[0];
      }
      v8 = v3[2];
      v7 = v3[3];
      if (v8 >= v7 >> 1)
      {
        sub_100081838(v7 > 1, v8 + 1, 1);
        v3 = (_QWORD *)v49[0];
      }
      v3[2] = v8 + 1;
      v9 = &v3[6 * v8];
      v10 = *(_OWORD *)(v0 + 64);
      v11 = *(_OWORD *)(v0 + 96);
      v9[3] = *(_OWORD *)(v0 + 80);
      v9[4] = v11;
      v9[2] = v10;
      v4 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease(v47);
  }
  v12 = v3[2];
  if (v12)
  {
    sub_100006DA4(&qword_1000AF990);
    v13 = (void *)static _DictionaryStorage.allocate(capacity:)(v12);
  }
  else
  {
    v13 = &_swiftEmptyDictionarySingleton;
  }
  v14 = *(_QWORD *)(v0 + 264);
  v49[0] = (uint64_t)v13;
  sub_10005BE7C((uint64_t)v3, 1, v49);
  swift_bridgeObjectRelease(v3);
  v15 = v49[0];
  if (v14)
    return swift_release(v49[0]);
  v16 = *(_QWORD *)(v0 + 40);
  v17 = *(_QWORD *)(v16 + 16);
  v18 = _swiftEmptyArrayStorage;
  if (v17)
  {
    v45 = v49[0];
    v19 = *(_QWORD *)(v0 + 224);
    v49[0] = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v16);
    sub_10008181C(0, v17, 0);
    v44 = v16;
    v20 = v16 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v21 = v19;
    v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
    v48 = *(_QWORD *)(v19 + 72);
    do
    {
      v22 = *(_QWORD *)(v0 + 232);
      v23 = *(_QWORD *)(v0 + 216);
      v24 = v46(v22, v20, v23);
      v25 = REMRemindersListDataView.ReminderLite.objectID.getter(v24);
      v26 = REMRemindersListDataView.ReminderLite.subtaskCount.getter();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v23);
      v18 = (_QWORD *)v49[0];
      if ((swift_isUniquelyReferenced_nonNull_native(v49[0]) & 1) == 0)
      {
        sub_10008181C(0, v18[2] + 1, 1);
        v18 = (_QWORD *)v49[0];
      }
      v28 = v18[2];
      v27 = v18[3];
      if (v28 >= v27 >> 1)
      {
        sub_10008181C(v27 > 1, v28 + 1, 1);
        v18 = (_QWORD *)v49[0];
      }
      v18[2] = v28 + 1;
      v29 = &v18[2 * v28];
      v29[4] = v25;
      v29[5] = v26;
      v20 += v48;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease(v44);
    v15 = v45;
  }
  v30 = v18[2];
  if (v30)
  {
    sub_100006DA4(&qword_1000AF998);
    v31 = (void *)static _DictionaryStorage.allocate(capacity:)(v30);
  }
  else
  {
    v31 = &_swiftEmptyDictionarySingleton;
  }
  v49[0] = (uint64_t)v31;
  sub_10005C184((uint64_t)v18, 1, v49);
  swift_bridgeObjectRelease(v18);
  v32 = v49[0];
  *(_QWORD *)(v0 + 288) = v49[0];
  v33 = *(_QWORD *)(v0 + 40);
  swift_retain(v15);
  v34 = swift_bridgeObjectRetain(v33);
  v35 = sub_10005A0B8(v34, v15);
  *(_QWORD *)(v0 + 296) = v35;
  swift_release_n(v15, 2);
  swift_bridgeObjectRelease(v33);
  v36 = *(_QWORD *)(v0 + 56);
  v49[0] = v36;
  swift_bridgeObjectRetain_n(v36, 2);
  sub_100058A60(v49);
  v38 = *(_QWORD *)(v0 + 192);
  swift_bridgeObjectRelease(v36);
  *(_QWORD *)(v0 + 304) = v49[0];
  *(_QWORD *)(v0 + 152) = v35;
  v39 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 312) = v39;
  *(_QWORD *)(v39 + 16) = v38;
  *(_QWORD *)(v39 + 24) = v32;
  v40 = (_QWORD *)swift_task_alloc(async function pointer to Sequence.asyncMap<A>(_:)[1]);
  *(_QWORD *)(v0 + 320) = v40;
  v41 = sub_100006DA4(&qword_1000AF9B0);
  *(_QWORD *)(v0 + 328) = v41;
  v42 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  *(_QWORD *)(v0 + 336) = v42;
  v43 = sub_10005C458();
  *(_QWORD *)(v0 + 344) = v43;
  *v40 = v0;
  v40[1] = sub_100053630;
  return Sequence.asyncMap<A>(_:)(&unk_1000AFAD8, v39, v41, v42, v43);
}

uint64_t sub_100053630(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 312);
  v3 = *(_QWORD *)(*v1 + 320);
  *(_QWORD *)(*v1 + 352) = a1;
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return swift_task_switch(sub_100053690, *(_QWORD *)(v2 + 272), *(_QWORD *)(v2 + 280));
}

uint64_t sub_100053690()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[36];
  v2 = v0[24];
  v0[20] = v0[38];
  v3 = swift_task_alloc(32);
  v0[45] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to Sequence.asyncMap<A>(_:)[1]);
  v0[46] = v4;
  *v4 = v0;
  v4[1] = sub_100053720;
  return Sequence.asyncMap<A>(_:)(&unk_1000AFAE0, v3, v0[41], v0[42], v0[43]);
}

uint64_t sub_100053720(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 360);
  v3 = *(_QWORD *)(*v1 + 368);
  v5 = *(_QWORD *)(*v1 + 304);
  v6 = *(_QWORD *)(*v1 + 288);
  *(_QWORD *)(*v1 + 376) = a1;
  swift_task_dealloc(v3);
  swift_release(v6);
  swift_release(v5);
  swift_task_dealloc(v4);
  return swift_task_switch(sub_1000537A0, *(_QWORD *)(v2 + 272), *(_QWORD *)(v2 + 280));
}

uint64_t sub_1000537A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD *);
  id v17;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[5];
  char v24;

  swift_release(*(_QWORD *)(v0 + 248));
  v21 = *(_QWORD *)(v0 + 24);
  v22 = *(unsigned __int8 *)(v0 + 32);
  v1 = qword_1000AC920;
  v20 = *(id *)(v0 + 16);
  if (v1 != -1)
    swift_once(&qword_1000AC920, sub_10004B568);
  v2 = *(_QWORD *)(v0 + 296);
  v3 = type metadata accessor for Logger(0);
  sub_10000CF70(v3, (uint64_t)qword_1000AF5F8);
  v5 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);
  v19 = *(id *)(v0 + 16);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v5);
  v7 = swift_bridgeObjectRetain(v2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 296);
  if (v10)
  {
    v12 = swift_slowAlloc(32, -1);
    *(_DWORD *)v12 = 134218496;
    *(_QWORD *)(v0 + 168) = *(_QWORD *)(v5 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176, v12 + 4, v12 + 12);
    *(_WORD *)(v12 + 12) = 2048;
    *(_QWORD *)(v0 + 176) = *(_QWORD *)(v4 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 176, v0 + 184, v12 + 14, v12 + 22);

    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v6);
    *(_WORD *)(v12 + 22) = 2048;
    v13 = *(_QWORD *)(v11 + 16);
    swift_bridgeObjectRelease(v11);
    *(_QWORD *)(v0 + 184) = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 184, v0 + 192, v12 + 24, v12 + 32);
    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Widget interactor: fetched total %ld reminders %ld result %ld", (uint8_t *)v12, 0x20u);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 296), 2);

    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v6);
  }

  v14 = *(_QWORD *)(v0 + 376);
  v15 = *(_QWORD *)(v0 + 352);
  v16 = *(void (**)(_QWORD *))(v0 + 200);
  v23[0] = v20;
  v23[1] = v21;
  v23[2] = v22;
  v23[3] = v15;
  v23[4] = v14;
  v24 = 0;
  v17 = v20;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v14);
  v16(v23);

  swift_bridgeObjectRelease_n(v15, 2);
  swift_bridgeObjectRelease_n(v14, 2);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100053A60(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(_QWORD *);

  v8[25] = a7;
  v8[26] = a8;
  v8[24] = a6;
  v10 = type metadata accessor for REMRemindersListDataView.ReminderLite(0);
  v8[27] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v8[28] = v11;
  v8[29] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v8[30] = v12;
  v8[31] = static MainActor.shared.getter(v12);
  v15 = (uint64_t (*)(_QWORD *))((char *)a4 + *a4);
  v13 = (_QWORD *)swift_task_alloc(a4[1]);
  v8[32] = v13;
  *v13 = v8;
  v13[1] = sub_100053B1C;
  return v15(v8 + 2);
}

uint64_t sub_100053B1C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 256);
  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2[30], &protocol witness table for MainActor);
  v6 = v4;
  if (v0)
  {
    v7 = sub_100053BA4;
  }
  else
  {
    v2[34] = v4;
    v2[35] = v5;
    v7 = sub_100053C20;
  }
  return swift_task_switch(v7, v6, v5);
}

uint64_t sub_100053BA4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t *);
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  char v7;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(void (**)(uint64_t *))(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 248));
  v4 = v1;
  v5 = 0u;
  v6 = 0u;
  v7 = 1;
  swift_errorRetain(v1);
  v2(&v4);
  swift_errorRelease(v1);
  swift_errorRelease(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100053C20()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[2];

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    v49[0] = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v1);
    sub_100081838(0, v2, 0);
    v3 = _swiftEmptyArrayStorage;
    v47 = v1;
    v4 = v1 + 32;
    do
    {
      sub_10001D418(v4, v0 + 112);
      v5 = *(_QWORD *)(v0 + 136);
      v6 = *(_QWORD *)(v0 + 144);
      sub_10001E184((_QWORD *)(v0 + 112), v5);
      *(_QWORD *)(v0 + 64) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      sub_100006E64((__int128 *)(v0 + 112), v0 + 72);
      v49[0] = (uint64_t)v3;
      if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
      {
        sub_100081838(0, v3[2] + 1, 1);
        v3 = (_QWORD *)v49[0];
      }
      v8 = v3[2];
      v7 = v3[3];
      if (v8 >= v7 >> 1)
      {
        sub_100081838(v7 > 1, v8 + 1, 1);
        v3 = (_QWORD *)v49[0];
      }
      v3[2] = v8 + 1;
      v9 = &v3[6 * v8];
      v10 = *(_OWORD *)(v0 + 64);
      v11 = *(_OWORD *)(v0 + 96);
      v9[3] = *(_OWORD *)(v0 + 80);
      v9[4] = v11;
      v9[2] = v10;
      v4 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease(v47);
  }
  v12 = v3[2];
  if (v12)
  {
    sub_100006DA4(&qword_1000AF990);
    v13 = (void *)static _DictionaryStorage.allocate(capacity:)(v12);
  }
  else
  {
    v13 = &_swiftEmptyDictionarySingleton;
  }
  v14 = *(_QWORD *)(v0 + 264);
  v49[0] = (uint64_t)v13;
  sub_10005BE7C((uint64_t)v3, 1, v49);
  swift_bridgeObjectRelease(v3);
  v15 = v49[0];
  if (v14)
    return swift_release(v49[0]);
  v16 = *(_QWORD *)(v0 + 40);
  v17 = *(_QWORD *)(v16 + 16);
  v18 = _swiftEmptyArrayStorage;
  if (v17)
  {
    v45 = v49[0];
    v19 = *(_QWORD *)(v0 + 224);
    v49[0] = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v16);
    sub_10008181C(0, v17, 0);
    v44 = v16;
    v20 = v16 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v21 = v19;
    v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
    v48 = *(_QWORD *)(v19 + 72);
    do
    {
      v22 = *(_QWORD *)(v0 + 232);
      v23 = *(_QWORD *)(v0 + 216);
      v24 = v46(v22, v20, v23);
      v25 = REMRemindersListDataView.ReminderLite.objectID.getter(v24);
      v26 = REMRemindersListDataView.ReminderLite.subtaskCount.getter();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v23);
      v18 = (_QWORD *)v49[0];
      if ((swift_isUniquelyReferenced_nonNull_native(v49[0]) & 1) == 0)
      {
        sub_10008181C(0, v18[2] + 1, 1);
        v18 = (_QWORD *)v49[0];
      }
      v28 = v18[2];
      v27 = v18[3];
      if (v28 >= v27 >> 1)
      {
        sub_10008181C(v27 > 1, v28 + 1, 1);
        v18 = (_QWORD *)v49[0];
      }
      v18[2] = v28 + 1;
      v29 = &v18[2 * v28];
      v29[4] = v25;
      v29[5] = v26;
      v20 += v48;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease(v44);
    v15 = v45;
  }
  v30 = v18[2];
  if (v30)
  {
    sub_100006DA4(&qword_1000AF998);
    v31 = (void *)static _DictionaryStorage.allocate(capacity:)(v30);
  }
  else
  {
    v31 = &_swiftEmptyDictionarySingleton;
  }
  v49[0] = (uint64_t)v31;
  sub_10005C184((uint64_t)v18, 1, v49);
  swift_bridgeObjectRelease(v18);
  v32 = v49[0];
  *(_QWORD *)(v0 + 288) = v49[0];
  v33 = *(_QWORD *)(v0 + 40);
  swift_retain(v15);
  v34 = swift_bridgeObjectRetain(v33);
  v35 = sub_10005A0B8(v34, v15);
  *(_QWORD *)(v0 + 296) = v35;
  swift_release_n(v15, 2);
  swift_bridgeObjectRelease(v33);
  v36 = *(_QWORD *)(v0 + 56);
  v49[0] = v36;
  swift_bridgeObjectRetain_n(v36, 2);
  sub_100058A60(v49);
  v38 = *(_QWORD *)(v0 + 192);
  swift_bridgeObjectRelease(v36);
  *(_QWORD *)(v0 + 304) = v49[0];
  *(_QWORD *)(v0 + 152) = v35;
  v39 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 312) = v39;
  *(_QWORD *)(v39 + 16) = v38;
  *(_QWORD *)(v39 + 24) = v32;
  v40 = (_QWORD *)swift_task_alloc(async function pointer to Sequence.asyncMap<A>(_:)[1]);
  *(_QWORD *)(v0 + 320) = v40;
  v41 = sub_100006DA4(&qword_1000AF9B0);
  *(_QWORD *)(v0 + 328) = v41;
  v42 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  *(_QWORD *)(v0 + 336) = v42;
  v43 = sub_10005C458();
  *(_QWORD *)(v0 + 344) = v43;
  *v40 = v0;
  v40[1] = sub_100054084;
  return Sequence.asyncMap<A>(_:)(&unk_1000AF9A8, v39, v41, v42, v43);
}

uint64_t sub_100054084(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 312);
  v3 = *(_QWORD *)(*v1 + 320);
  *(_QWORD *)(*v1 + 352) = a1;
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return swift_task_switch(sub_1000540E4, *(_QWORD *)(v2 + 272), *(_QWORD *)(v2 + 280));
}

uint64_t sub_1000540E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[36];
  v2 = v0[24];
  v0[20] = v0[38];
  v3 = swift_task_alloc(32);
  v0[45] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to Sequence.asyncMap<A>(_:)[1]);
  v0[46] = v4;
  *v4 = v0;
  v4[1] = sub_100054174;
  return Sequence.asyncMap<A>(_:)(&unk_1000AF9C8, v3, v0[41], v0[42], v0[43]);
}

uint64_t sub_100054174(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 360);
  v3 = *(_QWORD *)(*v1 + 368);
  v5 = *(_QWORD *)(*v1 + 304);
  v6 = *(_QWORD *)(*v1 + 288);
  *(_QWORD *)(*v1 + 376) = a1;
  swift_task_dealloc(v3);
  swift_release(v6);
  swift_release(v5);
  swift_task_dealloc(v4);
  return swift_task_switch(sub_1000541F4, *(_QWORD *)(v2 + 272), *(_QWORD *)(v2 + 280));
}

uint64_t sub_1000541F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(__int128 *);
  id v17;
  id v19;
  id v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  swift_release(*(_QWORD *)(v0 + 248));
  v21 = *(unsigned __int8 *)(v0 + 32);
  v22 = *(_OWORD *)(v0 + 16);
  v1 = qword_1000AC920;
  v20 = (id)v22;
  if (v1 != -1)
    swift_once(&qword_1000AC920, sub_10004B568);
  v2 = *(_QWORD *)(v0 + 296);
  v3 = type metadata accessor for Logger(0);
  sub_10000CF70(v3, (uint64_t)qword_1000AF5F8);
  v5 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);
  v19 = *(id *)(v0 + 16);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v5);
  v7 = swift_bridgeObjectRetain(v2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 296);
  if (v10)
  {
    v12 = swift_slowAlloc(32, -1);
    *(_DWORD *)v12 = 134218496;
    *(_QWORD *)(v0 + 168) = *(_QWORD *)(v5 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176, v12 + 4, v12 + 12);
    *(_WORD *)(v12 + 12) = 2048;
    *(_QWORD *)(v0 + 176) = *(_QWORD *)(v4 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 176, v0 + 184, v12 + 14, v12 + 22);

    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v6);
    *(_WORD *)(v12 + 22) = 2048;
    v13 = *(_QWORD *)(v11 + 16);
    swift_bridgeObjectRelease(v11);
    *(_QWORD *)(v0 + 184) = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 184, v0 + 192, v12 + 24, v12 + 32);
    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Widget interactor: fetched total %ld reminders %ld result %ld", (uint8_t *)v12, 0x20u);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 296), 2);

    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v6);
  }

  v14 = *(_QWORD *)(v0 + 376);
  v15 = *(_QWORD *)(v0 + 352);
  v16 = *(void (**)(__int128 *))(v0 + 200);
  v23 = v22;
  v24 = v21;
  v25 = v15;
  v26 = v14;
  v27 = 0;
  v17 = v20;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v14);
  v16(&v23);

  swift_bridgeObjectRelease_n(v15, 2);
  swift_bridgeObjectRelease_n(v14, 2);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000544C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  v5 = sub_100006DA4(&qword_1000AD8B8);
  v4[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v4[12] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v4[13] = v7;
  v4[14] = v8;
  return swift_task_switch(sub_100054554, v7, v8);
}

uint64_t sub_100054554()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD **)(v0 + 64);
  v2 = v1[3];
  v3 = v1[4];
  sub_10001E184(v1, v2);
  if ((TTRReminderProtocol.isRecurringReminderThatCanAdvanceForward.getter(v2, v3) & 1) != 0)
  {
    v4 = *(_QWORD **)(v0 + 64);
    v5 = *(_QWORD *)(*(_QWORD *)(v0 + 72)
                   + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache);
    *(_QWORD *)(v0 + 120) = v5;
    v7 = v1[3];
    v6 = v1[4];
    sub_10001E184(v4, v7);
    *(_QWORD *)(v0 + 128) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v6);
    return swift_task_switch(sub_1000546F8, v5, 0);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 88);
    swift_release(*(_QWORD *)(v0 + 96));
    v10 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
    v11 = *(_QWORD *)(v0 + 80);
    v12 = *(_QWORD **)(v0 + 64);
    sub_10001D418((uint64_t)v12, v0 + 16);
    v13 = v12[3];
    v14 = v12[4];
    sub_10001E184(v12, v13);
    v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
    v16 = (void *)v15;
    if (*(_QWORD *)(v11 + 16) && (v17 = sub_100057D3C(v15), (v18 & 1) != 0))
      v19 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 80) + 56) + 8 * v17);
    else
      v19 = 0;
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 56);

    sub_100006E64((__int128 *)(v0 + 16), v21);
    *(_QWORD *)(v21 + 40) = v19;
    v22 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
    sub_100018778(v20, v21 + *(int *)(v22 + 24), &qword_1000AD8B8);
    swift_task_dealloc(v20);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1000546F8()
{
  uint64_t *v0;
  void *v1;

  v1 = (void *)v0[16];
  sub_100052728(v1, v0[11]);

  return swift_task_switch(sub_10005473C, v0[13], v0[14]);
}

uint64_t sub_10005473C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_release(*(_QWORD *)(v0 + 96));
  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD **)(v0 + 64);
  sub_10001D418((uint64_t)v2, v0 + 16);
  v3 = v2[3];
  v4 = v2[4];
  sub_10001E184(v2, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  v6 = (void *)v5;
  if (*(_QWORD *)(v1 + 16) && (v7 = sub_100057D3C(v5), (v8 & 1) != 0))
    v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 80) + 56) + 8 * v7);
  else
    v9 = 0;
  v10 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD *)(v0 + 56);

  sub_100006E64((__int128 *)(v0 + 16), v11);
  *(_QWORD *)(v11 + 40) = v9;
  v12 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  sub_100018778(v10, v11 + *(int *)(v12 + 24), &qword_1000AD8B8);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100054830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  v5 = sub_100006DA4(&qword_1000AD8B8);
  v4[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v4[12] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v4[13] = v7;
  v4[14] = v8;
  return swift_task_switch(sub_1000548C4, v7, v8);
}

uint64_t sub_1000548C4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD **)(v0 + 64);
  v2 = v1[3];
  v3 = v1[4];
  sub_10001E184(v1, v2);
  if ((TTRReminderProtocol.isRecurringReminderThatCanAdvanceForward.getter(v2, v3) & 1) != 0)
  {
    v4 = *(_QWORD **)(v0 + 64);
    v5 = *(_QWORD *)(*(_QWORD *)(v0 + 72)
                   + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache);
    *(_QWORD *)(v0 + 120) = v5;
    v7 = v1[3];
    v6 = v1[4];
    sub_10001E184(v4, v7);
    *(_QWORD *)(v0 + 128) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v6);
    return swift_task_switch(sub_100054A68, v5, 0);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 88);
    swift_release(*(_QWORD *)(v0 + 96));
    v10 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
    v11 = *(_QWORD *)(v0 + 80);
    v12 = *(_QWORD **)(v0 + 64);
    sub_10001D418((uint64_t)v12, v0 + 16);
    v13 = v12[3];
    v14 = v12[4];
    sub_10001E184(v12, v13);
    v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
    v16 = (void *)v15;
    if (*(_QWORD *)(v11 + 16) && (v17 = sub_100057D3C(v15), (v18 & 1) != 0))
      v19 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 80) + 56) + 8 * v17);
    else
      v19 = 0;
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 56);

    sub_100006E64((__int128 *)(v0 + 16), v21);
    *(_QWORD *)(v21 + 40) = v19;
    v22 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
    sub_100018778(v20, v21 + *(int *)(v22 + 24), &qword_1000AD8B8);
    swift_task_dealloc(v20);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100054A68()
{
  uint64_t *v0;
  void *v1;

  v1 = (void *)v0[16];
  sub_100052728(v1, v0[11]);

  return swift_task_switch(sub_10005E1F4, v0[13], v0[14]);
}

uint64_t sub_100054AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v19[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_100009578(a1, &qword_1000AF8B8);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      v10 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v9);
      swift_unknownObjectRetain(v9);
      v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
      v14 = v13;
      swift_unknownObjectRelease(v9);
      goto LABEL_6;
    }
  }
  else
  {
    v15 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v15 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v16 = swift_allocObject(&unk_1000A88E0, 32, 7);
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    v17 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  else
  {
    v17 = 0;
  }
  return swift_task_create(v8, v17, (char *)&type metadata for () + 8, &unk_1000AF988, v16);
}

uint64_t sub_100054BF8(uint64_t a1)
{
  return sub_1000558B8(a1, (uint64_t (*)(void))sub_10001C1B4, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetFamily);
}

uint64_t sub_100054C0C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  int64_t v22;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, char *, uint64_t);
  void (*v46)(_QWORD *);
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  void (*v52)(uint64_t, char *, uint64_t);
  uint64_t v53;
  unsigned int (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61[4];

  v59 = a2;
  v9 = type metadata accessor for REMRemindersListDataView.ReminderLite(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v57 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100006DA4(&qword_1000AFA88);
  v13 = __chkstk_darwin(v12);
  v14 = __chkstk_darwin(v13);
  v55 = (uint64_t)&v49 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v49 - v17;
  v56 = a4;
  v19 = a4 >> 1;
  v20 = __OFSUB__(a4 >> 1, a3);
  v21 = (a4 >> 1) - a3;
  if (v20)
  {
    __break(1u);
    goto LABEL_26;
  }
  v60 = a1;
  a1 = *v4;
  v22 = *(_QWORD *)(*v4 + 16);
  v5 = v22 + v21;
  if (__OFADD__(v22, v21))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v58 = v16;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a1);
  *v4 = a1;
  if (!isUniquelyReferenced_nonNull_native || (v24 = *(_QWORD *)(a1 + 24) >> 1, v24 < v5))
  {
    if (v22 <= v5)
      v25 = v22 + v21;
    else
      v25 = v22;
    a1 = sub_10001C3D4(isUniquelyReferenced_nonNull_native, v25, 1, a1);
    *v4 = a1;
    v24 = *(_QWORD *)(a1 + 24) >> 1;
  }
  v26 = *(_QWORD *)(a1 + 16);
  v27 = v24 - v26;
  if (v19 == a3)
  {
    if (v21 <= 0)
    {
      v21 = 0;
      v5 = a3;
      goto LABEL_23;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v27 < v21)
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v21 < 0)
    goto LABEL_51;
  v28 = *(_QWORD *)(v10 + 72);
  v29 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)) + v28 * v26;
  v30 = v59 + v28 * a3;
  if (v30 >= v29 + v28 * v21 || v29 >= v30 + v28 * v21)
  {
    swift_arrayInitWithCopy(v29);
    if (!v21)
    {
LABEL_22:
      v5 = v19;
LABEL_23:
      if (v21 != v27)
        return swift_unknownObjectRelease(v60);
LABEL_28:
      v21 = *(_QWORD *)(a1 + 16);
      v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v50(v18, 1, 1, v9);
      a1 = v55;
      sub_100009434((uint64_t)v18, v55, &qword_1000AFA88);
      v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      if (v54(a1, 1, v9) == 1)
      {
LABEL_29:
        sub_100009578((uint64_t)v18, &qword_1000AFA88);
        swift_unknownObjectRelease(v60);
        return sub_100009578(a1, &qword_1000AFA88);
      }
      do
      {
LABEL_34:
        sub_100009578(a1, &qword_1000AFA88);
        v35 = *v4;
        v36 = *(_QWORD *)(*v4 + 24);
        if ((uint64_t)(v36 >> 1) < v21 + 1)
        {
          v37 = v5;
          v47 = sub_10001C3D4(v36 > 1, v21 + 1, 1, v35);
          *v4 = v47;
          v53 = v47;
          v49 = *(_QWORD *)(v47 + 24) >> 1;
        }
        else
        {
          v49 = v36 >> 1;
          v53 = v35;
          v37 = v5;
        }
        v38 = *(unsigned __int8 *)(v10 + 80);
        v39 = v58;
        sub_100009434((uint64_t)v18, v58, &qword_1000AFA88);
        if (v54(v39, 1, v9) == 1)
        {
          v40 = v58;
LABEL_38:
          sub_100009578(v40, &qword_1000AFA88);
          v34 = v21;
          v5 = v37;
        }
        else
        {
          v51 = v53 + ((v38 + 32) & ~v38);
          v41 = v49;
          if (v21 > v49)
            v41 = v21;
          v52 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
          v53 = v41;
          v42 = v57;
          v40 = v58;
          while (1)
          {
            v44 = v40;
            v45 = v52;
            v52((uint64_t)v42, (char *)v44, v9);
            if (v53 == v21)
              break;
            sub_100009578((uint64_t)v18, &qword_1000AFA88);
            v45(v51 + *(_QWORD *)(v10 + 72) * v21, v42, v9);
            if (v37 == v19)
            {
              v43 = 1;
              v37 = v19;
            }
            else
            {
              v46 = sub_100059F18(v61, v37, v60, v59, a3, v56);
              (*(void (**)(char *))(v10 + 16))(v18);
              ((void (*)(uint64_t *, _QWORD))v46)(v61, 0);
              v20 = __OFADD__(v37++, 1);
              if (v20)
                goto LABEL_50;
              v43 = 0;
              v42 = v57;
            }
            v50(v18, v43, 1, v9);
            v40 = v58;
            sub_100009434((uint64_t)v18, v58, &qword_1000AFA88);
            ++v21;
            if (v54(v40, 1, v9) == 1)
              goto LABEL_38;
          }
          (*(void (**)(char *, uint64_t))(v10 + 8))(v42, v9);
          v34 = v53;
          v21 = v53;
          v5 = v37;
        }
        *(_QWORD *)(*v4 + 16) = v34;
        a1 = v55;
        sub_100009434((uint64_t)v18, v55, &qword_1000AFA88);
      }
      while (v54(a1, 1, v9) != 1);
      goto LABEL_29;
    }
    v32 = *(_QWORD *)(a1 + 16);
    v20 = __OFADD__(v32, v21);
    v33 = v32 + v21;
    if (!v20)
    {
      *(_QWORD *)(a1 + 16) = v33;
      goto LABEL_22;
    }
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_52;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_1000551A0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  int64_t v22;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t *);
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v50;
  unsigned int (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59[4])(uint64_t *);

  v57 = a2;
  v9 = type metadata accessor for TTRNewWidgetPresenter.Division(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v55 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100006DA4(&qword_1000AFA90);
  v13 = __chkstk_darwin(v12);
  v14 = __chkstk_darwin(v13);
  v53 = (uint64_t)&v47 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v47 - v17;
  v54 = a4;
  v19 = a4 >> 1;
  v20 = __OFSUB__(a4 >> 1, a3);
  v21 = (a4 >> 1) - a3;
  if (v20)
  {
    __break(1u);
    goto LABEL_26;
  }
  v58 = a1;
  a1 = *v4;
  v22 = *(_QWORD *)(*v4 + 16);
  v5 = v22 + v21;
  if (__OFADD__(v22, v21))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v56 = v16;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a1);
  *v4 = a1;
  if (!isUniquelyReferenced_nonNull_native || (v24 = *(_QWORD *)(a1 + 24) >> 1, v24 < v5))
  {
    if (v22 <= v5)
      v25 = v22 + v21;
    else
      v25 = v22;
    a1 = sub_10001C3E8(isUniquelyReferenced_nonNull_native, v25, 1, a1);
    *v4 = a1;
    v24 = *(_QWORD *)(a1 + 24) >> 1;
  }
  v26 = *(_QWORD *)(a1 + 16);
  v27 = v24 - v26;
  if (v19 == a3)
  {
    if (v21 <= 0)
    {
      v21 = 0;
      v5 = a3;
      goto LABEL_23;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v27 < v21)
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v21 < 0)
    goto LABEL_52;
  v28 = *(_QWORD *)(v10 + 72);
  v29 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)) + v28 * v26;
  v30 = v57 + v28 * a3;
  if (v30 >= v29 + v28 * v21 || v29 >= v30 + v28 * v21)
  {
    swift_arrayInitWithCopy(v29);
    if (!v21)
    {
LABEL_22:
      v5 = v19;
LABEL_23:
      if (v21 != v27)
        return swift_unknownObjectRelease(v58);
LABEL_28:
      v21 = *(_QWORD *)(a1 + 16);
      v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v49(v18, 1, 1, v9);
      a1 = v53;
      sub_100009434((uint64_t)v18, v53, &qword_1000AFA90);
      v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      if (v51(a1, 1, v9) == 1)
      {
LABEL_29:
        sub_100009578((uint64_t)v18, &qword_1000AFA90);
        swift_unknownObjectRelease(v58);
        return sub_100009578(a1, &qword_1000AFA90);
      }
      do
      {
LABEL_34:
        sub_100009578(a1, &qword_1000AFA90);
        v34 = *v4;
        v35 = *(_QWORD *)(*v4 + 24);
        v52 = v5;
        if ((uint64_t)(v35 >> 1) < v21 + 1)
        {
          v34 = sub_10001C3E8(v35 > 1, v21 + 1, 1, v34);
          *v4 = v34;
          v48 = *(_QWORD *)(v34 + 24) >> 1;
        }
        else
        {
          v48 = v35 >> 1;
        }
        v36 = *(unsigned __int8 *)(v10 + 80);
        v37 = v56;
        sub_100009434((uint64_t)v18, v56, &qword_1000AFA90);
        if (v51(v37, 1, v9) == 1)
        {
          v38 = v56;
LABEL_38:
          sub_100009578(v38, &qword_1000AFA90);
          v39 = v21;
        }
        else
        {
          v50 = v34 + ((v36 + 32) & ~v36);
          if (v21 <= v48)
            v39 = v48;
          else
            v39 = v21;
          v40 = (uint64_t)v55;
          v38 = v56;
          while (1)
          {
            sub_100007EF0(v38, v40, type metadata accessor for TTRNewWidgetPresenter.Division);
            if (v39 == v21)
              break;
            sub_100009578((uint64_t)v18, &qword_1000AFA90);
            sub_100007EF0(v40, v50 + *(_QWORD *)(v10 + 72) * v21, type metadata accessor for TTRNewWidgetPresenter.Division);
            v42 = v52;
            if (v52 == v19)
            {
              v41 = 1;
              v52 = v19;
            }
            else
            {
              v43 = sub_100059FEC(v59, v52, v58, v57, a3, v54);
              sub_1000072AC(v44, (uint64_t)v18, type metadata accessor for TTRNewWidgetPresenter.Division);
              ((void (*)(void (**)(uint64_t *), _QWORD))v43)(v59, 0);
              v20 = __OFADD__(v42, 1);
              v45 = v42 + 1;
              if (v20)
                goto LABEL_51;
              v52 = v45;
              v41 = 0;
              v40 = (uint64_t)v55;
            }
            v49(v18, v41, 1, v9);
            v38 = v56;
            sub_100009434((uint64_t)v18, v56, &qword_1000AFA90);
            ++v21;
            if (v51(v38, 1, v9) == 1)
              goto LABEL_38;
          }
          sub_100007EB4(v40, type metadata accessor for TTRNewWidgetPresenter.Division);
          v21 = v39;
        }
        v5 = v52;
        a1 = v53;
        *(_QWORD *)(*v4 + 16) = v39;
        sub_100009434((uint64_t)v18, a1, &qword_1000AFA90);
      }
      while (v51(a1, 1, v9) != 1);
      goto LABEL_29;
    }
    v32 = *(_QWORD *)(a1 + 16);
    v20 = __OFADD__(v32, v21);
    v33 = v32 + v21;
    if (!v20)
    {
      *(_QWORD *)(a1 + 16) = v33;
      goto LABEL_22;
    }
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_53;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_100055718(uint64_t a1)
{
  return sub_10005572C(a1, (uint64_t (*)(void))sub_10001C3E8, type metadata accessor for TTRNewWidgetPresenter.Division);
}

uint64_t sub_10005572C(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;
  char v26;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native(*v3) && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  v11 = (*(_QWORD *)(v5 + 24) >> 1) - v10;
  v12 = a3(0);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v5 + v14 + v15 * v10;
  v17 = a1 + v14;
  v18 = v15 * v4;
  v19 = v16 + v18;
  v20 = v17 + v18;
  if (v17 < v19 && v16 < v20)
    goto LABEL_21;
  swift_arrayInitWithCopy(v16);
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease(a1);
    *v3 = v5;
    return result;
  }
  v22 = *(_QWORD *)(v5 + 16);
  v23 = __OFADD__(v22, v4);
  v24 = v22 + v4;
  if (!v23)
  {
    *(_QWORD *)(v5 + 16) = v24;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  v26 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v26, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000558A4(uint64_t a1)
{
  return sub_1000558B8(a1, (uint64_t (*)(void))sub_10001C438, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
}

uint64_t sub_1000558B8(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;
  char v27;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native(*v3)
    && (int64_t)(v6 + v4) <= *(_QWORD *)(v5 + 24) >> 1)
  {
    v10 = *(_QWORD *)(a1 + 16);
    if (v10)
      goto LABEL_5;
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
  v5 = a2();
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
    goto LABEL_15;
LABEL_5:
  v11 = *(_QWORD *)(v5 + 16);
  v12 = (*(_QWORD *)(v5 + 24) >> 1) - v11;
  v13 = a3(0);
  if (v12 < (uint64_t)v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v14 + 72);
  v17 = v5 + v15 + v16 * v11;
  v18 = a1 + v15;
  v19 = v16 * v10;
  v20 = v17 + v19;
  v21 = v18 + v19;
  if (v18 < v20 && v17 < v21)
    goto LABEL_21;
  swift_arrayInitWithCopy(v17);
  if (v10 < v4)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v23 = *(_QWORD *)(v5 + 16);
  v24 = __OFADD__(v23, v10);
  v25 = v23 + v10;
  if (!v24)
  {
    *(_QWORD *)(v5 + 16) = v25;
LABEL_16:
    result = swift_bridgeObjectRelease(a1);
    *v3 = v5;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  v27 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v27, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100055A34()
{
  id *v0;

  sub_100009578((uint64_t)v0 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_sortingStyle, &qword_1000AF8A0);
  swift_release(*(id *)((char *)v0 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache));
  return swift_deallocClassInstance(v0, *((unsigned int *)*v0 + 12), *((unsigned __int16 *)*v0 + 26));
}

uint64_t sub_100055A8C()
{
  return type metadata accessor for TTRNewWidgetInteractor(0);
}

uint64_t type metadata accessor for TTRNewWidgetInteractor(uint64_t a1)
{
  return sub_100007E80(a1, (uint64_t *)&unk_1000AF648, (uint64_t)&nominal type descriptor for TTRNewWidgetInteractor);
}

void sub_100055AA8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_10002270C(319, (unint64_t *)&unk_1000AF658, (uint64_t (*)(uint64_t))&type metadata accessor for REMRemindersListDataView.SortingStyle);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

uint64_t type metadata accessor for TTRNewWidgetInteractor.CompletedCache()
{
  return objc_opt_self(_TtCC24RemindersWidgetExtension22TTRNewWidgetInteractorP33_7F1F57FE36EA6BE84CC6E0D828FF4F7414CompletedCache);
}

uint64_t *sub_100055B70(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v9);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = type metadata accessor for Date(0);
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_100055BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_BYTE *sub_100055C30(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *sub_100055C8C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_BYTE *sub_100055CE8(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *sub_100055D44(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_100055DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100055DAC);
}

uint64_t sub_100055DAC(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = type metadata accessor for Date(0);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v10);
  }
}

uint64_t sub_100055E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100055E34);
}

_BYTE *sub_100055E34(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000AF838, (uint64_t)&nominal type descriptor for TTRNewWidgetInteractor.CompletedCacheEntry);
}

uint64_t sub_100055EB8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_10008B678;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100055F2C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 104) = a3;
  *(_QWORD *)(v4 + 112) = v3;
  *(_BYTE *)(v4 + 192) = a2;
  *(_QWORD *)(v4 + 96) = a1;
  return swift_task_switch(sub_100055F98, 0, 0);
}

uint64_t sub_100055F98()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  _QWORD *v6;
  _QWORD *v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;

  v1 = *(void **)(*(_QWORD *)(v0 + 112) + 24);
  *(_QWORD *)(v0 + 64) = 0;
  v2 = objc_msgSend(v1, "fetchReminderWithObjectID:error:", *(_QWORD *)(v0 + 96), v0 + 64);
  *(_QWORD *)(v0 + 120) = v2;
  v3 = *(void **)(v0 + 64);
  if (!v2)
  {
    v23 = v3;
    _convertNSErrorToError(_:)(v3);

    swift_willThrow(v24);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = v2;
  v5 = v3;
  v6 = objc_msgSend(v4, "subtaskContext");
  v7 = v6;
  if (v6)
  {
    *(_QWORD *)(v0 + 88) = 0;
    v8 = objc_msgSend(v6, "fetchRemindersWithError:", v0 + 88);

    v9 = *(void **)(v0 + 88);
    if (v8)
    {
      v10 = sub_100058A28(0, &qword_1000AF8B0, REMReminder_ptr);
      v7 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v10);
      v11 = v9;

      goto LABEL_5;
    }
    v25 = v9;
    _convertNSErrorToError(_:)(v9);

    swift_willThrow(v26);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
LABEL_5:
  v12 = *(unsigned __int8 *)(v0 + 192);
  v13 = objc_msgSend(objc_allocWithZone((Class)REMSaveRequest), "initWithStore:", v1);
  *(_QWORD *)(v0 + 128) = v13;
  v14 = type metadata accessor for TTRReminderEditor(0);
  *(_QWORD *)(v0 + 80) = v4;
  v15 = v13;
  v16 = v4;
  TTROneshotEditing.init(item:saveRequest:undoManager:)(v0 + 80, v15, 0, v14, &protocol witness table for TTRReminderEditor);
  *(_QWORD *)(v0 + 136) = *(_QWORD *)(v0 + 72);
  v17 = type metadata accessor for TTRReminderEditor.EditedObjectIDs(0);
  *(_QWORD *)(v0 + 144) = swift_initStackObject(v17, v0 + 16);
  v18 = TTRReminderEditor.EditedObjectIDs.init(objectIDs:)(&_swiftEmptySetSingleton);
  *(_QWORD *)(v0 + 152) = v18;
  if (!v7)
    v7 = _swiftEmptyArrayStorage;
  TTRReminderEditor.edit(completed:subtasks:trackEditedUsing:)(v12, v7, v18);
  swift_bridgeObjectRelease(v7);
  swift_beginAccess(v18 + 16, v0 + 40, 0, 0);
  v19 = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v0 + 160) = v19;
  v20 = dword_1000AF724;
  swift_bridgeObjectRetain(v19);
  v21 = (_QWORD *)swift_task_alloc(v20);
  *(_QWORD *)(v0 + 168) = v21;
  *v21 = v0;
  v21[1] = sub_100056298;
  return sub_100051F84(v19, *(_BYTE *)(v0 + 192), *(_QWORD *)(v0 + 104));
}

uint64_t sub_100056298()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 160);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 168));
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_100056320, 0, 0);
}

uint64_t sub_100056320()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 112) + 32);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to REMSaveRequest.saveAsync(with:)[1]);
  *(_QWORD *)(v0 + 176) = v2;
  *v2 = v0;
  v2[1] = sub_1000563AC;
  return REMSaveRequest.saveAsync(with:)(v1);
}

uint64_t sub_1000563AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1000564D4;
  else
    v3 = sub_100056454;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100056454()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = *(void **)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(void **)(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 152));
  swift_release(v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000564D4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = *(void **)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(void **)(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 152));
  swift_release(v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100056554(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1000565B8;
  return v6(a1);
}

uint64_t sub_1000565B8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100056604(Swift::Int *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  void *v21;
  id v22;
  Swift::Int v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  Swift::Int v32;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v2);
    v8 = a2;
    v9 = __CocoaSet.member(for:)();

    if (v9)
    {
      swift_bridgeObjectRelease(v6);

      v31 = v9;
      v10 = type metadata accessor for REMObjectID_Codable(0);
      swift_unknownObjectRetain(v9);
      swift_dynamicCast(&v32, &v31, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
      *a1 = v32;
      swift_unknownObjectRelease(v9);
      return 0;
    }
    result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v23 = sub_100056880(v7, result + 1);
    v32 = v23;
    v24 = *(_QWORD *)(v23 + 16);
    if (*(_QWORD *)(v23 + 24) <= v24)
    {
      v29 = v24 + 1;
      v30 = v8;
      sub_100056A64(v29);
      v25 = v32;
    }
    else
    {
      v25 = v23;
      v26 = v8;
    }
    sub_100056D00((uint64_t)v8, v25);
    v28 = *v3;
    *v3 = v25;
  }
  else
  {
    v12 = *(_QWORD *)(v6 + 40);
    swift_bridgeObjectRetain(v6);
    v13 = NSObject._rawHashValue(seed:)(v12);
    v14 = -1 << *(_BYTE *)(v6 + 32);
    v15 = v13 & ~v14;
    if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
    {
      type metadata accessor for REMObjectID_Codable(0);
      v16 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v15);
      v17 = static NSObject.== infix(_:_:)();

      if ((v17 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease(v6);
        v21 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v15);
        *a1 = (Swift::Int)v21;
        v22 = v21;
        return 0;
      }
      v18 = ~v14;
      while (1)
      {
        v15 = (v15 + 1) & v18;
        if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
          break;
        v19 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v15);
        v20 = static NSObject.== infix(_:_:)();

        if ((v20 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    v8 = a2;
    sub_100056D80((uint64_t)v8, v15, isUniquelyReferenced_nonNull_native);
    v28 = *v3;
    *v3 = v32;
  }
  swift_bridgeObjectRelease(v28);
  *a1 = (Swift::Int)v8;
  return 1;
}

Swift::Int sub_100056880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a2)
  {
    sub_100006DA4(&qword_1000AF960);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v23 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()();
    if (v6)
    {
      v7 = v6;
      v8 = type metadata accessor for REMObjectID_Codable(0);
      do
      {
        v21 = v7;
        swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v23;
        v16 = *(_QWORD *)(v23 + 16);
        if (*(_QWORD *)(v23 + 24) <= v16)
        {
          sub_100056A64(v16 + 1);
          v4 = v23;
        }
        v9 = v22;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v11 = v4 + 56;
        v12 = -1 << *(_BYTE *)(v4 + 32);
        v13 = result & ~v12;
        v14 = v13 >> 6;
        if (((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6))) != 0)
        {
          v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v17 = 0;
          v18 = (unint64_t)(63 - v12) >> 6;
          do
          {
            if (++v14 == v18 && (v17 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v19 = v14 == v18;
            if (v14 == v18)
              v14 = 0;
            v17 |= v19;
            v20 = *(_QWORD *)(v11 + 8 * v14);
          }
          while (v20 == -1);
          v15 = __clz(__rbit64(~v20)) + (v14 << 6);
        }
        *(_QWORD *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()();
      }
      while (v7);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v4;
}

void sub_100056A64(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100006DA4(&qword_1000AF960);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v8 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v3 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    swift_retain(v3);
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v16 = v15 | (v13 << 6);
      }
      else
      {
        v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v11)
          goto LABEL_36;
        v18 = v8[v17];
        ++v13;
        if (!v18)
        {
          v13 = v17 + 1;
          if (v17 + 1 >= v11)
            goto LABEL_36;
          v18 = v8[v13];
          if (!v18)
          {
            v13 = v17 + 2;
            if (v17 + 2 >= v11)
              goto LABEL_36;
            v18 = v8[v13];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v11)
              {
LABEL_36:
                swift_release(v3);
                v2 = v30;
                v29 = 1 << *(_BYTE *)(v3 + 32);
                if (v29 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v13 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v13 >= v11)
                    goto LABEL_36;
                  v18 = v8[v13];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v13 = v19;
            }
          }
        }
LABEL_26:
        v10 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
      v21 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v6 + 40));
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

unint64_t sub_100056D00(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  unint64_t result;

  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a2 + 40));
  result = _HashTable.nextHole(atOrAfter:)(v4 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

void sub_100056D80(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100056A64(v9);
  }
  else
  {
    if (v8 > v7)
    {
      sub_100056EF4();
      goto LABEL_14;
    }
    sub_10005709C(v9);
  }
  v10 = *v3;
  v11 = NSObject._rawHashValue(seed:)(*(_QWORD *)(*v3 + 40));
  v12 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = type metadata accessor for REMObjectID_Codable(0);
    v14 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
    v15 = static NSObject.== infix(_:_:)();

    if ((v15 & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v13);
      __break(1u);
    }
    else
    {
      v16 = ~v12;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
        v18 = static NSObject.== infix(_:_:)();

        if ((v18 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v19 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * a2) = a1;
  v20 = *(_QWORD *)(v19 + 16);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (v21)
    __break(1u);
  else
    *(_QWORD *)(v19 + 16) = v22;
}

id sub_100056EF4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_100006DA4(&qword_1000AF960);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_10005709C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  Swift::Int v20;
  id v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100006DA4(&qword_1000AF960);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v30 = v2;
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  swift_retain(v3);
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_27;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v11)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v13;
    if (!v18)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v11)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v13);
      if (!v18)
      {
        v13 = v17 + 2;
        if (v17 + 2 >= v11)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v13);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v10 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_27:
    v20 = *(_QWORD *)(v6 + 40);
    v21 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    v22 = NSObject._rawHashValue(seed:)(v20);
    v23 = -1 << *(_BYTE *)(v6 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      v14 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v21;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v11)
  {
LABEL_36:
    swift_release_n(v3, 2);
    v2 = v30;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v13 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v13 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v13 >= v11)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v13);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_100057314(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  int64_t v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100006DA4(&qword_1000AF998);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v36 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v10 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v11 = ~(-1 << v9);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v9 + 63) >> 6;
    v14 = v7 + 64;
    swift_retain(v5);
    v15 = 0;
    while (1)
    {
      if (v12)
      {
        v22 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v23 = v22 | (v15 << 6);
      }
      else
      {
        if (__OFADD__(v15++, 1))
          goto LABEL_41;
        if (v15 >= v13)
        {
LABEL_34:
          swift_release(v5);
          v3 = v36;
          if ((v37 & 1) != 0)
          {
            v35 = 1 << *(_BYTE *)(v5 + 32);
            if (v35 >= 64)
              bzero((void *)(v5 + 64), ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
            else
              *v10 = -1 << v35;
            *(_QWORD *)(v5 + 16) = 0;
          }
          break;
        }
        v25 = v10[v15];
        if (!v25)
        {
          v26 = v15 + 1;
          if (v15 + 1 >= v13)
            goto LABEL_34;
          v25 = v10[v26];
          if (!v25)
          {
            while (1)
            {
              v15 = v26 + 1;
              if (__OFADD__(v26, 1))
                break;
              if (v15 >= v13)
                goto LABEL_34;
              v25 = v10[v15];
              ++v26;
              if (v25)
                goto LABEL_23;
            }
LABEL_40:
            __break(1u);
LABEL_41:
            __break(1u);
            return;
          }
          ++v15;
        }
LABEL_23:
        v12 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v15 << 6);
      }
      v27 = 8 * v23;
      v28 = *(void **)(*(_QWORD *)(v5 + 48) + v27);
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v27);
      if ((v37 & 1) == 0)
        v30 = v28;
      v16 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
      v17 = -1 << *(_BYTE *)(v8 + 32);
      v18 = v16 & ~v17;
      v19 = v18 >> 6;
      if (((-1 << v18) & ~*(_QWORD *)(v14 + 8 * (v18 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v14 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v31 = 0;
        v32 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v33 = v19 == v32;
          if (v19 == v32)
            v19 = 0;
          v31 |= v33;
          v34 = *(_QWORD *)(v14 + 8 * v19);
        }
        while (v34 == -1);
        v20 = __clz(__rbit64(~v34)) + (v19 << 6);
      }
      *(_QWORD *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      v21 = 8 * v20;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v21) = v28;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v21) = v29;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_1000575BC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v20;
  int64_t v21;
  void *v22;
  __int128 *v23;
  id v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  __int128 v35[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100006DA4(&qword_1000AF990);
  v34 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v10 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v11 = ~(-1 << v9);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v9 + 63) >> 6;
    v14 = v7 + 64;
    swift_retain(v5);
    v15 = 0;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v15 << 6);
      }
      else
      {
        if (__OFADD__(v15++, 1))
          goto LABEL_42;
        if (v15 >= v13)
        {
LABEL_35:
          swift_release(v5);
          if ((v34 & 1) != 0)
          {
            v33 = 1 << *(_BYTE *)(v5 + 32);
            if (v33 >= 64)
              bzero((void *)(v5 + 64), ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
            else
              *v10 = -1 << v33;
            *(_QWORD *)(v5 + 16) = 0;
          }
          break;
        }
        v20 = v10[v15];
        if (!v20)
        {
          v21 = v15 + 1;
          if (v15 + 1 >= v13)
            goto LABEL_35;
          v20 = v10[v21];
          if (!v20)
          {
            while (1)
            {
              v15 = v21 + 1;
              if (__OFADD__(v21, 1))
                break;
              if (v15 >= v13)
                goto LABEL_35;
              v20 = v10[v15];
              ++v21;
              if (v20)
                goto LABEL_22;
            }
LABEL_41:
            __break(1u);
LABEL_42:
            __break(1u);
            return;
          }
          ++v15;
        }
LABEL_22:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      v22 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v18);
      v23 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v18);
      if ((v34 & 1) != 0)
      {
        sub_100006E64(v23, (uint64_t)v35);
      }
      else
      {
        sub_10001D418((uint64_t)v23, (uint64_t)v35);
        v24 = v22;
      }
      v25 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = v25 & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v14 + 8 * (v27 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v14 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v14 + 8 * v28);
        }
        while (v32 == -1);
        v16 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v14 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v16) = v22;
      sub_100006E64(v35, *(_QWORD *)(v8 + 56) + 40 * v16);
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_100057878(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  Swift::Int v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;

  v3 = v2;
  v6 = type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry(0);
  v42 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_100006DA4(&qword_1000AF888);
  v43 = a2;
  v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_43;
  v39 = v3;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v41 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v40 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  swift_retain(v9);
  v17 = 0;
  while (1)
  {
    if (v15)
    {
      v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v21 >= v40)
      break;
    v22 = v41;
    v23 = v41[v21];
    ++v17;
    if (!v23)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v40)
        goto LABEL_36;
      v23 = v41[v17];
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v40)
        {
LABEL_36:
          swift_release(v9);
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v23 = v41[v24];
        if (!v23)
        {
          while (1)
          {
            v17 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_45;
            if (v17 >= v40)
              goto LABEL_36;
            v23 = v41[v17];
            ++v24;
            if (v23)
              goto LABEL_23;
          }
        }
        v17 = v24;
      }
    }
LABEL_23:
    v15 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_24:
    v25 = *(void **)(*(_QWORD *)(v9 + 48) + 8 * v20);
    v26 = *(_QWORD *)(v42 + 72);
    v27 = *(_QWORD *)(v9 + 56) + v26 * v20;
    if ((v43 & 1) != 0)
    {
      sub_100007EF0(v27, (uint64_t)v8, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
    }
    else
    {
      sub_1000072AC(v27, (uint64_t)v8, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
      v28 = v25;
    }
    v29 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v11 + 40));
    v30 = -1 << *(_BYTE *)(v11 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v16 + 8 * (v31 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v16 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v16 + 8 * v32);
      }
      while (v36 == -1);
      v18 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v18) = v25;
    sub_100007EF0((uint64_t)v8, *(_QWORD *)(v11 + 56) + v26 * v18, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release(v9);
  v3 = v39;
  v22 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v37 = 1 << *(_BYTE *)(v9 + 32);
  if (v37 >= 64)
    bzero(v22, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v37;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_43:
  swift_release(v9);
  *v3 = v11;
}

uint64_t sub_100057BCC(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v6)(id *, char *);
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;

  v6 = (uint64_t (*)(id *, char *))isStackAllocationSafe;
  v7 = *(_BYTE *)(a3 + 32);
  v8 = v7 & 0x3F;
  v9 = (1 << v7) + 63;
  v10 = v9 >> 6;
  v11 = 8 * (v9 >> 6);
  if (v8 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v9 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v16 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0), v11);
    sub_1000584AC((unint64_t *)((char *)&v16 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0)), v10, a3, v6);
    if (v3)
      swift_willThrow(v12);
    else
      return v12;
  }
  else
  {
    v13 = (void *)swift_slowAlloc(v11, -1);
    bzero(v13, v11);
    sub_1000584AC((unint64_t *)v13, v10, a3, v6);
    a2 = v14;
    swift_slowDealloc(v13, -1, -1);
  }
  return a2;
}

unint64_t sub_100057D3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_100057D6C(a1, v4);
}

unint64_t sub_100057D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_100058A28(0, &qword_1000AF878, REMObjectID_ptr);
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = static NSObject.== infix(_:_:)();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = static NSObject.== infix(_:_:)();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

BOOL sub_100057E84(void **a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100052538(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

unint64_t sub_100057EA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AF880;
  if (!qword_1000AF880)
  {
    v1 = sub_100058A28(255, &qword_1000AF878, REMObjectID_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1000AF880);
  }
  return result;
}

uint64_t sub_100057EF8(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

id sub_100057F00()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  sub_100006DA4(&qword_1000AF998);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_24:
    result = (id)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1))
      goto LABEL_26;
    if (v9 >= v13)
      goto LABEL_24;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    if (!v20)
      break;
LABEL_23:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    result = v17;
  }
  v21 = v9 + 1;
  if (v9 + 1 >= v13)
    goto LABEL_24;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_24;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

id sub_100058088()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  unint64_t v20;
  int64_t v21;
  __int128 v22[2];

  v1 = v0;
  sub_100006DA4(&qword_1000AF990);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_24:
    result = (id)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1))
      goto LABEL_26;
    if (v9 >= v13)
      goto LABEL_24;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    if (!v20)
      break;
LABEL_23:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 40 * v15;
    sub_10001D418(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_100006E64(v22, *(_QWORD *)(v4 + 56) + v18);
    result = v17;
  }
  v21 = v9 + 1;
  if (v9 + 1 >= v13)
    goto LABEL_24;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_24;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

id sub_100058238()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry(0);
  v27 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006DA4(&qword_1000AF888);
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (id)swift_release(v5);
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (id)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = 8 * v17;
    v19 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v20 = *(_QWORD *)(v27 + 72) * v17;
    sub_1000072AC(*(_QWORD *)(v5 + 56) + v20, (uint64_t)v4, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v19;
    sub_100007EF0((uint64_t)v4, *(_QWORD *)(v7 + 56) + v20, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
    result = v19;
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (id)swift_release(v5);
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100058468(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1000584AC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(id *, char *))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  BOOL v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t (*v30)(id *, char *);
  id v31;

  v30 = a4;
  v24 = a2;
  v25 = a1;
  v6 = type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry(0);
  v29 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v10 = *(_QWORD *)(a3 + 64);
  v26 = 0;
  v27 = a3 + 64;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v28 = (unint64_t)(v11 + 63) >> 6;
  while (v13)
  {
    v14 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    v15 = v14 | (v9 << 6);
LABEL_17:
    v19 = *(_QWORD *)(a3 + 56);
    v31 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v15);
    v20 = v31;
    sub_1000072AC(v19 + *(_QWORD *)(v29 + 72) * v15, (uint64_t)v8, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
    v21 = v20;
    v22 = v30(&v31, v8);
    sub_100007EB4((uint64_t)v8, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);

    if (v4)
      return;
    if ((v22 & 1) != 0)
    {
      *(unint64_t *)((char *)v25 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = __OFADD__(v26++, 1);
      if (v16)
        goto LABEL_30;
    }
  }
  v16 = __OFADD__(v9++, 1);
  if (v16)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v9 >= v28)
    goto LABEL_27;
  v17 = *(_QWORD *)(v27 + 8 * v9);
  if (v17)
  {
LABEL_16:
    v13 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
    goto LABEL_17;
  }
  v18 = v9 + 1;
  if (v9 + 1 >= v28)
    goto LABEL_27;
  v17 = *(_QWORD *)(v27 + 8 * v18);
  if (v17)
    goto LABEL_15;
  v18 = v9 + 2;
  if (v9 + 2 >= v28)
    goto LABEL_27;
  v17 = *(_QWORD *)(v27 + 8 * v18);
  if (v17)
    goto LABEL_15;
  v18 = v9 + 3;
  if (v9 + 3 >= v28)
  {
LABEL_27:
    sub_100058704(v25, v24, v26, (_QWORD *)a3);
    return;
  }
  v17 = *(_QWORD *)(v27 + 8 * v18);
  if (v17)
  {
LABEL_15:
    v9 = v18;
    goto LABEL_16;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v28)
      goto LABEL_27;
    v17 = *(_QWORD *)(v27 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

Swift::Int sub_100058704(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  Swift::Int result;
  Swift::Int v14;
  unint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  Swift::Int v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v42;
  unint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v8 = type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry(0);
  v46 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v45 = (uint64_t)&v42 - v12;
  if (!a3)
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  if (a4[2] == a3)
  {
    swift_retain(a4);
    return (Swift::Int)a4;
  }
  sub_100006DA4(&qword_1000AF888);
  result = static _DictionaryStorage.allocate(capacity:)(a3);
  v14 = result;
  v43 = a1;
  v44 = a2;
  if (a2 < 1)
    v15 = 0;
  else
    v15 = *a1;
  v16 = 0;
  v17 = result + 64;
  while (1)
  {
    if (v15)
    {
      v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v47 = v16;
      v19 = v18 | (v16 << 6);
    }
    else
    {
      v20 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_40;
      if (v20 >= v44)
        return v14;
      v21 = v43[v20];
      v22 = v16 + 1;
      if (!v21)
      {
        v22 = v16 + 2;
        if (v16 + 2 >= v44)
          return v14;
        v21 = v43[v22];
        if (!v21)
        {
          v22 = v16 + 3;
          if (v16 + 3 >= v44)
            return v14;
          v21 = v43[v22];
          if (!v21)
          {
            v23 = v16 + 4;
            if (v16 + 4 >= v44)
              return v14;
            v21 = v43[v23];
            if (!v21)
            {
              while (1)
              {
                v22 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v22 >= v44)
                  return v14;
                v21 = v43[v22];
                ++v23;
                if (v21)
                  goto LABEL_24;
              }
            }
            v22 = v16 + 4;
          }
        }
      }
LABEL_24:
      v15 = (v21 - 1) & v21;
      v47 = v22;
      v19 = __clz(__rbit64(v21)) + (v22 << 6);
    }
    v24 = a4[7];
    v25 = a4;
    v26 = *(void **)(a4[6] + 8 * v19);
    v27 = v45;
    v28 = *(_QWORD *)(v46 + 72);
    sub_1000072AC(v24 + v28 * v19, v45, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
    v29 = v27;
    v30 = v11;
    sub_100007EF0(v29, (uint64_t)v11, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
    v31 = *(_QWORD *)(v14 + 40);
    v32 = v26;
    result = NSObject._rawHashValue(seed:)(v31);
    v33 = -1 << *(_BYTE *)(v14 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v36 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      v11 = v30;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v33) >> 6;
      v11 = v30;
      do
      {
        if (++v35 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v39 = v35 == v38;
        if (v35 == v38)
          v35 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v40 == -1);
      v36 = __clz(__rbit64(~v40)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v36 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v36;
    *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * v36) = v32;
    result = sub_100007EF0((uint64_t)v11, *(_QWORD *)(v14 + 56) + v36 * v28, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
    ++*(_QWORD *)(v14 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v25;
    v16 = v47;
    if (!a3)
      return v14;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100058A28(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

Swift::Int sub_100058A60(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  Swift::Int result;
  uint64_t v5[2];

  v2 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = (_QWORD *)sub_100059F04(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_100058AC8(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_100058AC8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  Swift::Int v7;
  Swift::Int result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  Swift::Int v14;
  char *v15;
  unint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  char *v43;
  int v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  Swift::Int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  Swift::Int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  id v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  char *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  char v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  BOOL v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  unint64_t v135;
  _QWORD *v136;
  Swift::Int v137;
  uint64_t v138;
  Swift::Int v139;
  Swift::Int v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD v147[3];
  uint64_t v148;
  uint64_t v149;
  __int128 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t *v153;

  v2 = type metadata accessor for Date(0);
  v145 = *(_QWORD *)(v2 - 8);
  v146 = v2;
  v3 = __chkstk_darwin(v2);
  v144 = (char *)&v136 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (char *)&v136 - v5;
  v153 = a1;
  v7 = a1[1];
  result = _minimumMergeRunLength(_:)(v7);
  if (result >= v7)
  {
    if (v7 < 0)
      goto LABEL_149;
    if (v7)
      return sub_100059554(0, v7, 1, v153);
    return result;
  }
  if (v7 >= 0)
    v9 = v7;
  else
    v9 = v7 + 1;
  if (v7 < -1)
    goto LABEL_157;
  v137 = result;
  if (v7 < 2)
  {
    v13 = _swiftEmptyArrayStorage;
    v141 = (char *)&_swiftEmptyArrayStorage[4];
    if (v7 != 1)
    {
      v16 = _swiftEmptyArrayStorage[2];
      v142 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_114:
      v136 = v13;
      v127 = v143;
      if (v16 >= 2)
      {
        v128 = *v153;
        do
        {
          v129 = v16 - 2;
          if (v16 < 2)
            goto LABEL_144;
          if (!v128)
            goto LABEL_156;
          v130 = *(_QWORD *)(v142 + 32 + 16 * v129);
          v131 = *(_QWORD *)(v142 + 32 + 16 * (v16 - 1) + 8);
          sub_1000597D0((char *)(v128 + 40 * v130), (char *)(v128 + 40 * *(_QWORD *)(v142 + 32 + 16 * (v16 - 1))), v128 + 40 * v131, v141);
          if (v127)
            goto LABEL_111;
          if (v131 < v130)
            goto LABEL_145;
          if ((swift_isUniquelyReferenced_nonNull_native(v142) & 1) == 0)
            v142 = (uint64_t)sub_100059EF0(v142);
          v132 = v142;
          if (v129 >= *(_QWORD *)(v142 + 16))
            goto LABEL_146;
          v133 = v142 + 32;
          v134 = (_QWORD *)(v142 + 32 + 16 * v129);
          *v134 = v130;
          v134[1] = v131;
          v135 = *(_QWORD *)(v132 + 16);
          if (v16 > v135)
            goto LABEL_147;
          memmove((void *)(v133 + 16 * (v16 - 1)), (const void *)(v133 + 16 * v16), 16 * (v135 - v16));
          *(_QWORD *)(v132 + 16) = v135 - 1;
          v16 = v135 - 1;
        }
        while (v135 > 2);
      }
      swift_bridgeObjectRelease(v142);
      v126 = v136;
      v136[2] = 0;
      return swift_bridgeObjectRelease(v126);
    }
    v136 = _swiftEmptyArrayStorage;
  }
  else
  {
    v10 = v9 >> 1;
    v11 = sub_100006DA4(&qword_1000AD8E8);
    v12 = static Array._allocateBufferUninitialized(minimumCapacity:)(v10, v11);
    *(_QWORD *)(v12 + 16) = v10;
    v136 = (_QWORD *)v12;
    v141 = (char *)(v12 + 32);
  }
  v14 = 0;
  v15 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    v17 = v14++;
    v140 = v17;
    if (v14 >= v7)
      goto LABEL_43;
    v18 = *v153;
    sub_10001D418(*v153 + 40 * v14, (uint64_t)&v150);
    v138 = v18;
    sub_10001D418(v18 + 40 * v17, (uint64_t)v147);
    v19 = v151;
    v20 = v152;
    sub_10001E184(&v150, v151);
    v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 104))(v19, v20);
    if (!v21)
      goto LABEL_21;
    v22 = (void *)v21;
    v23 = v148;
    v24 = v149;
    sub_10001E184(v147, v148);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 104))(v23, v24);
    if (!v25)
    {

LABEL_21:
      LODWORD(v142) = 0;
      goto LABEL_22;
    }
    v26 = (void *)v25;
    v27 = objc_msgSend(v22, "date");
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v27);

    v28 = objc_msgSend(v26, "date");
    v29 = v144;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v28);

    LODWORD(v142) = static Date.< infix(_:_:)(v6, v29);
    v30 = v146;
    v31 = *(void (**)(char *, uint64_t))(v145 + 8);
    v31(v29, v146);
    v31(v6, v30);
LABEL_22:
    sub_10001D26C(v147);
    sub_10001D26C(&v150);
    v14 = v17 + 2;
    v139 = v7;
    if (v17 + 2 < v7)
    {
      v32 = v138 + 40 * v17 + 40;
      while (1)
      {
        sub_10001D418(v32 + 40, (uint64_t)&v150);
        sub_10001D418(v32, (uint64_t)v147);
        v33 = v151;
        v34 = v152;
        sub_10001E184(&v150, v151);
        v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 104))(v33, v34);
        if (v35)
        {
          v36 = (void *)v35;
          v37 = v148;
          v38 = v149;
          sub_10001E184(v147, v148);
          v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 104))(v37, v38);
          if (v39)
          {
            v40 = (void *)v39;
            v41 = objc_msgSend(v36, "date");
            static Date._unconditionallyBridgeFromObjectiveC(_:)(v41);

            v42 = objc_msgSend(v40, "date");
            v43 = v144;
            static Date._unconditionallyBridgeFromObjectiveC(_:)(v42);

            v44 = static Date.< infix(_:_:)(v6, v43);
            v45 = v146;
            v46 = *(void (**)(char *, uint64_t))(v145 + 8);
            v46(v43, v146);
            v46(v6, v45);
          }
          else
          {

            v44 = 0;
          }
          v7 = v139;
        }
        else
        {
          v44 = 0;
        }
        sub_10001D26C(v147);
        sub_10001D26C(&v150);
        if (((v142 ^ v44) & 1) != 0)
          break;
        ++v14;
        v32 += 40;
        if (v7 == v14)
        {
          v14 = v7;
          break;
        }
      }
    }
    if ((v142 & 1) != 0)
    {
      if (v14 < v17)
        goto LABEL_150;
      if (v17 < v14)
      {
        v47 = 40 * v14 - 40;
        v48 = 40 * v17;
        v49 = v14;
        do
        {
          if (v17 != --v49)
          {
            if (!v138)
              goto LABEL_155;
            v50 = v138 + v48;
            v51 = v138 + v47;
            sub_100006E64((__int128 *)(v138 + v48), (uint64_t)&v150);
            v52 = *(_QWORD *)(v51 + 32);
            v53 = *(_OWORD *)(v51 + 16);
            *(_OWORD *)v50 = *(_OWORD *)v51;
            *(_OWORD *)(v50 + 16) = v53;
            *(_QWORD *)(v50 + 32) = v52;
            sub_100006E64(&v150, v51);
          }
          ++v17;
          v47 -= 40;
          v48 += 40;
        }
        while (v17 < v49);
        v7 = v139;
        v17 = v140;
      }
    }
LABEL_43:
    if (v14 < v7)
    {
      if (__OFSUB__(v14, v17))
        goto LABEL_148;
      if (v14 - v17 < v137)
        break;
    }
LABEL_64:
    if (v14 < v17)
      goto LABEL_143;
    if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
      v15 = sub_100059D40(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
    v75 = *((_QWORD *)v15 + 2);
    v74 = *((_QWORD *)v15 + 3);
    v16 = v75 + 1;
    if (v75 >= v74 >> 1)
      v15 = sub_100059D40((char *)(v74 > 1), v75 + 1, 1, v15);
    *((_QWORD *)v15 + 2) = v16;
    v76 = v15 + 32;
    v77 = &v15[16 * v75 + 32];
    *(_QWORD *)v77 = v17;
    *((_QWORD *)v77 + 1) = v14;
    v142 = (uint64_t)v15;
    if (v75)
    {
      while (1)
      {
        v78 = v16 - 1;
        if (v16 >= 4)
        {
          v83 = &v76[16 * v16];
          v84 = *((_QWORD *)v83 - 8);
          v85 = *((_QWORD *)v83 - 7);
          v89 = __OFSUB__(v85, v84);
          v86 = v85 - v84;
          if (v89)
            goto LABEL_132;
          v88 = *((_QWORD *)v83 - 6);
          v87 = *((_QWORD *)v83 - 5);
          v89 = __OFSUB__(v87, v88);
          v81 = v87 - v88;
          v82 = v89;
          if (v89)
            goto LABEL_133;
          v90 = v16 - 2;
          v91 = &v76[16 * v16 - 32];
          v93 = *(_QWORD *)v91;
          v92 = *((_QWORD *)v91 + 1);
          v89 = __OFSUB__(v92, v93);
          v94 = v92 - v93;
          if (v89)
            goto LABEL_135;
          v89 = __OFADD__(v81, v94);
          v95 = v81 + v94;
          if (v89)
            goto LABEL_138;
          if (v95 >= v86)
          {
            v113 = &v76[16 * v78];
            v115 = *(_QWORD *)v113;
            v114 = *((_QWORD *)v113 + 1);
            v89 = __OFSUB__(v114, v115);
            v116 = v114 - v115;
            if (v89)
              goto LABEL_142;
            v106 = v81 < v116;
            goto LABEL_101;
          }
        }
        else
        {
          if (v16 != 3)
          {
            v107 = *((_QWORD *)v15 + 4);
            v108 = *((_QWORD *)v15 + 5);
            v89 = __OFSUB__(v108, v107);
            v100 = v108 - v107;
            v101 = v89;
            goto LABEL_95;
          }
          v80 = *((_QWORD *)v15 + 4);
          v79 = *((_QWORD *)v15 + 5);
          v89 = __OFSUB__(v79, v80);
          v81 = v79 - v80;
          v82 = v89;
        }
        if ((v82 & 1) != 0)
          goto LABEL_134;
        v90 = v16 - 2;
        v96 = &v76[16 * v16 - 32];
        v98 = *(_QWORD *)v96;
        v97 = *((_QWORD *)v96 + 1);
        v99 = __OFSUB__(v97, v98);
        v100 = v97 - v98;
        v101 = v99;
        if (v99)
          goto LABEL_137;
        v102 = &v76[16 * v78];
        v104 = *(_QWORD *)v102;
        v103 = *((_QWORD *)v102 + 1);
        v89 = __OFSUB__(v103, v104);
        v105 = v103 - v104;
        if (v89)
          goto LABEL_140;
        if (__OFADD__(v100, v105))
          goto LABEL_141;
        if (v100 + v105 >= v81)
        {
          v106 = v81 < v105;
LABEL_101:
          if (v106)
            v78 = v90;
          goto LABEL_103;
        }
LABEL_95:
        if ((v101 & 1) != 0)
          goto LABEL_136;
        v109 = &v76[16 * v78];
        v111 = *(_QWORD *)v109;
        v110 = *((_QWORD *)v109 + 1);
        v89 = __OFSUB__(v110, v111);
        v112 = v110 - v111;
        if (v89)
          goto LABEL_139;
        if (v112 < v100)
          goto LABEL_15;
LABEL_103:
        v117 = v78 - 1;
        if (v78 - 1 >= v16)
        {
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
          goto LABEL_152;
        }
        if (!*v153)
          goto LABEL_154;
        v118 = &v76[16 * v117];
        v119 = *(_QWORD *)v118;
        v120 = &v76[16 * v78];
        v121 = *((_QWORD *)v120 + 1);
        v122 = v143;
        sub_1000597D0((char *)(*v153 + 40 * *(_QWORD *)v118), (char *)(*v153 + 40 * *(_QWORD *)v120), *v153 + 40 * v121, v141);
        v143 = v122;
        if (v122)
        {
LABEL_111:
          v125 = v136;
          swift_bridgeObjectRelease(v142);
          v125[2] = 0;
          v126 = v125;
          return swift_bridgeObjectRelease(v126);
        }
        if (v121 < v119)
          goto LABEL_129;
        v123 = v142;
        if (v78 > *(_QWORD *)(v142 + 16))
          goto LABEL_130;
        *(_QWORD *)v118 = v119;
        *(_QWORD *)&v76[16 * v117 + 8] = v121;
        v124 = *(_QWORD *)(v123 + 16);
        if (v78 >= v124)
          goto LABEL_131;
        v15 = (char *)v123;
        v16 = v124 - 1;
        memmove(&v76[16 * v78], v120 + 16, 16 * (v124 - 1 - v78));
        *((_QWORD *)v15 + 2) = v124 - 1;
        if (v124 <= 2)
          goto LABEL_15;
      }
    }
    v16 = 1;
LABEL_15:
    v7 = v153[1];
    if (v14 >= v7)
    {
      v13 = v136;
      goto LABEL_114;
    }
  }
  if (__OFADD__(v17, v137))
    goto LABEL_151;
  if (v17 + v137 >= v7)
    v54 = v7;
  else
    v54 = v17 + v137;
  if (v54 >= v17)
  {
    if (v14 != v54)
    {
      v142 = (uint64_t)v15;
      v55 = 40 * v14 - 40;
      v139 = v54;
      do
      {
        v56 = v55;
        while (1)
        {
          v57 = *v153 + v56;
          sub_10001D418(v57 + 40, (uint64_t)&v150);
          sub_10001D418(v57, (uint64_t)v147);
          v58 = v151;
          v59 = v152;
          sub_10001E184(&v150, v151);
          v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 104))(v58, v59);
          if (!v60)
            break;
          v61 = (void *)v60;
          v62 = v148;
          v63 = v149;
          sub_10001E184(v147, v148);
          v64 = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 104))(v62, v63);
          if (!v64)
          {

            break;
          }
          v65 = (void *)v64;
          v66 = objc_msgSend(v61, "date");
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v66);

          v67 = objc_msgSend(v65, "date");
          v68 = v144;
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v67);

          LOBYTE(v67) = static Date.< infix(_:_:)(v6, v68);
          v69 = v146;
          v70 = *(void (**)(char *, uint64_t))(v145 + 8);
          v70(v68, v146);
          v70(v6, v69);
          sub_10001D26C(v147);
          sub_10001D26C(&v150);
          if ((v67 & 1) == 0)
            goto LABEL_55;
          v71 = *v153;
          if (!*v153)
            goto LABEL_153;
          v72 = v71 + v56;
          sub_100006E64((__int128 *)(v71 + v56 + 40), (uint64_t)&v150);
          v73 = *(_OWORD *)(v72 + 16);
          *(_OWORD *)(v72 + 40) = *(_OWORD *)v72;
          *(_OWORD *)(v72 + 56) = v73;
          *(_QWORD *)(v72 + 72) = *(_QWORD *)(v72 + 32);
          sub_100006E64(&v150, v72);
          v56 -= 40;
          if (v14 == ++v17)
            goto LABEL_55;
        }
        sub_10001D26C(v147);
        sub_10001D26C(&v150);
LABEL_55:
        ++v14;
        v55 += 40;
        v17 = v140;
      }
      while (v14 != v139);
      v14 = v139;
      v15 = (char *)v142;
    }
    goto LABEL_64;
  }
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
  return result;
}

uint64_t sub_100059554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;

  v42 = a4;
  v32 = a1;
  v6 = type metadata accessor for Date(0);
  v34 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v7);
  v12 = (char *)&v30 - v11;
  v35 = a3;
  v31 = a2;
  if (a3 != a2)
  {
    v13 = 40 * v35 - 40;
LABEL_7:
    v14 = v32;
    v33 = v13;
    while (1)
    {
      v15 = *v42 + v13;
      sub_10001D418(v15 + 40, (uint64_t)&v39);
      sub_10001D418(v15, (uint64_t)v36);
      v16 = v40;
      v17 = v41;
      sub_10001E184(&v39, v40);
      v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 104))(v16, v17);
      if (!v18)
        goto LABEL_5;
      v19 = (void *)v18;
      v21 = v37;
      v20 = v38;
      sub_10001E184(v36, v37);
      v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 104))(v21, v20);
      if (!v22)
      {

LABEL_5:
        sub_10001D26C(v36);
        result = sub_10001D26C(&v39);
LABEL_6:
        v13 = v33 + 40;
        if (++v35 == v31)
          return result;
        goto LABEL_7;
      }
      v23 = (void *)v22;
      v24 = objc_msgSend(v19, "date");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v24);

      v25 = objc_msgSend(v23, "date");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v25);

      LOBYTE(v25) = static Date.< infix(_:_:)(v12, v9);
      v26 = *(void (**)(char *, uint64_t))(v34 + 8);
      v26(v9, v6);
      v26(v12, v6);
      sub_10001D26C(v36);
      result = sub_10001D26C(&v39);
      if ((v25 & 1) == 0)
        goto LABEL_6;
      v27 = *v42;
      if (!*v42)
        break;
      v28 = v27 + v13;
      sub_100006E64((__int128 *)(v27 + v13 + 40), (uint64_t)&v39);
      v29 = *(_OWORD *)(v28 + 16);
      *(_OWORD *)(v28 + 40) = *(_OWORD *)v28;
      *(_OWORD *)(v28 + 56) = v29;
      *(_QWORD *)(v28 + 72) = *(_QWORD *)(v28 + 32);
      result = sub_100006E64(&v39, v28);
      v13 -= 40;
      if (v35 == ++v14)
        goto LABEL_6;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1000597D0(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v31;
  _OWORD *v32;
  unint64_t v33;
  __int128 v34;
  __int128 v35;
  char *v36;
  __int128 v37;
  __int128 v38;
  char *v39;
  char *v40;
  unint64_t v41;
  __int128 v42;
  __int128 v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  id v54;
  char *v55;
  char v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  char *v59;
  char *v60;
  __int128 v61;
  __int128 v62;
  uint64_t result;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[3];
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[3];
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;

  v8 = type metadata accessor for Date(0);
  v67 = *(_QWORD *)(v8 - 8);
  v68 = v8;
  v9 = __chkstk_darwin(v8);
  v66 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v64 - v11;
  v13 = a2 - a1;
  v14 = (a2 - a1) / 40;
  v15 = a3 - (_QWORD)a2;
  v16 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  v65 = a1;
  v77 = a1;
  v76 = a4;
  if (v14 >= v16)
  {
    if (v15 >= -39)
    {
      if (a4 != a2 || &a2[40 * v16] <= a4)
        memmove(a4, a2, 40 * v16);
      v39 = &a4[40 * v16];
      v75 = v39;
      v77 = a2;
      v40 = v65;
      if (v15 >= 40 && v65 < a2)
      {
        v41 = a3 - 40;
        do
        {
          sub_10001D418((uint64_t)(v39 - 40), (uint64_t)v72);
          v44 = a2 - 40;
          sub_10001D418((uint64_t)(a2 - 40), (uint64_t)v69);
          v45 = v73;
          v46 = v74;
          sub_10001E184(v72, v73);
          v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 104))(v45, v46);
          if (v47)
          {
            v48 = (void *)v47;
            v49 = v70;
            v50 = v71;
            sub_10001E184(v69, v70);
            v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 104))(v49, v50);
            if (v51)
            {
              v52 = (void *)v51;
              v53 = objc_msgSend(v48, "date");
              static Date._unconditionallyBridgeFromObjectiveC(_:)(v53);

              v54 = objc_msgSend(v52, "date");
              v55 = v66;
              static Date._unconditionallyBridgeFromObjectiveC(_:)(v54);

              v56 = static Date.< infix(_:_:)(v12, v55);
              v57 = v68;
              v58 = *(void (**)(char *, uint64_t))(v67 + 8);
              v58(v55, v68);
              v58(v12, v57);
            }
            else
            {

              v56 = 0;
            }
            v40 = v65;
          }
          else
          {
            v56 = 0;
          }
          v59 = (char *)(v41 + 40);
          sub_10001D26C(v69);
          sub_10001D26C(v72);
          if ((v56 & 1) != 0)
          {
            if (v59 != a2 || v41 >= (unint64_t)a2)
            {
              v42 = *(_OWORD *)v44;
              v43 = *(_OWORD *)(a2 - 24);
              *(_QWORD *)(v41 + 32) = *((_QWORD *)a2 - 1);
              *(_OWORD *)v41 = v42;
              *(_OWORD *)(v41 + 16) = v43;
            }
            v77 -= 40;
            v39 = v75;
            if (v75 <= a4)
              break;
          }
          else
          {
            v60 = v75;
            v39 = v75 - 40;
            v75 -= 40;
            if (v59 < v60 || v41 >= (unint64_t)v60 || v59 != v60)
            {
              v61 = *(_OWORD *)v39;
              v62 = *(_OWORD *)(v60 - 24);
              *(_QWORD *)(v41 + 32) = *((_QWORD *)v60 - 1);
              *(_OWORD *)v41 = v61;
              *(_OWORD *)(v41 + 16) = v62;
            }
            v44 = a2;
            if (v39 <= a4)
              break;
          }
          v41 -= 40;
          a2 = v44;
        }
        while (v44 > v40);
      }
LABEL_50:
      sub_100059E38((void **)&v77, (const void **)&v76, &v75);
      return 1;
    }
  }
  else if (v13 >= -39)
  {
    if (a4 != v65 || &v65[40 * v14] <= a4)
      memmove(a4, v65, 40 * v14);
    v17 = (unint64_t)&a4[40 * v14];
    v75 = (char *)v17;
    if (v13 >= 40 && (unint64_t)a2 < a3)
    {
      while (1)
      {
        sub_10001D418((uint64_t)a2, (uint64_t)v72);
        sub_10001D418((uint64_t)a4, (uint64_t)v69);
        v18 = v73;
        v19 = v74;
        sub_10001E184(v72, v73);
        v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 104))(v18, v19);
        if (!v20)
          goto LABEL_16;
        v21 = (void *)v20;
        v22 = v70;
        v23 = v71;
        sub_10001E184(v69, v70);
        v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 104))(v22, v23);
        if (!v24)
          break;
        v25 = (void *)v24;
        v26 = objc_msgSend(v21, "date");
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v26);

        v27 = objc_msgSend(v25, "date");
        v28 = v66;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v27);

        LOBYTE(v27) = static Date.< infix(_:_:)(v12, v28);
        v29 = *(void (**)(char *, uint64_t))(v67 + 8);
        v30 = v28;
        v31 = v68;
        v29(v30, v68);
        v29(v12, v31);
        sub_10001D26C(v69);
        sub_10001D26C(v72);
        if ((v27 & 1) == 0)
          goto LABEL_17;
        v32 = v77;
        v33 = (unint64_t)(a2 + 40);
        if (v77 >= a2 && (unint64_t)v77 < v33 && v77 == a2)
        {
          v32 = a2;
        }
        else
        {
          v34 = *(_OWORD *)a2;
          v35 = *((_OWORD *)a2 + 1);
          *((_QWORD *)v77 + 4) = *((_QWORD *)a2 + 4);
          *v32 = v34;
          v32[1] = v35;
        }
LABEL_21:
        v77 = (char *)v32 + 40;
        a4 = v76;
        if ((unint64_t)v76 < v17)
        {
          a2 = (char *)v33;
          if (v33 < a3)
            continue;
        }
        goto LABEL_50;
      }

LABEL_16:
      sub_10001D26C(v69);
      sub_10001D26C(v72);
LABEL_17:
      v32 = v77;
      v36 = v76 + 40;
      if (v77 != v76 || v77 >= v36)
      {
        v37 = *(_OWORD *)v76;
        v38 = *((_OWORD *)v76 + 1);
        *((_QWORD *)v77 + 4) = *((_QWORD *)v76 + 4);
        *v32 = v37;
        v32[1] = v38;
      }
      v76 = v36;
      v33 = (unint64_t)a2;
      goto LABEL_21;
    }
    goto LABEL_50;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

char *sub_100059D40(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100006DA4(&qword_1000AF9D0);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_100059E38(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;
  char v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -40)
  {
    v7 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v7, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
      return (char *)memmove(result, v3, 40 * v6);
  }
  return result;
}

char *sub_100059EF0(uint64_t a1)
{
  return sub_100059D40(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100059F04(_QWORD *a1)
{
  return sub_100081C0C(0, a1[2], 0, a1);
}

void (*sub_100059F18(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6))(_QWORD *a1)
{
  uint64_t v10;
  uint64_t v11;
  void (*result)(_QWORD *);

  v10 = type metadata accessor for REMRemindersListDataView.ReminderLite(0);
  *a1 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  a1[1] = v11;
  result = (void (*)(_QWORD *))malloc(*(_QWORD *)(v11 + 64));
  a1[2] = (uint64_t)result;
  if (a2 < a5 || (uint64_t)(a6 >> 1) <= a2)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(void))(v11 + 16))();
    return sub_100059FBC;
  }
  return result;
}

void sub_100059FBC(_QWORD *a1)
{
  void *v1;

  v1 = (void *)a1[2];
  (*(void (**)(void *, _QWORD))(a1[1] + 8))(v1, *a1);
  free(v1);
}

void (*sub_100059FEC(void (**a1)(uint64_t *a1), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6))(uint64_t *a1)
{
  uint64_t v11;
  void (*result)(uint64_t *);

  v11 = *(_QWORD *)(type metadata accessor for TTRNewWidgetPresenter.Division(0) - 8);
  result = (void (*)(uint64_t *))malloc(*(_QWORD *)(v11 + 64));
  *a1 = result;
  if (a2 < a5 || (uint64_t)(a6 >> 1) <= a2)
  {
    __break(1u);
  }
  else
  {
    sub_1000072AC(a4 + *(_QWORD *)(v11 + 72) * a2, (uint64_t)result, type metadata accessor for TTRNewWidgetPresenter.Division);
    return sub_10005A088;
  }
  return result;
}

void sub_10005A088(uint64_t *a1)
{
  void *v1;

  v1 = (void *)*a1;
  sub_100007EB4(*a1, type metadata accessor for TTRNewWidgetPresenter.Division);
  free(v1);
}

_QWORD *sub_10005A0B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return _swiftEmptyArrayStorage;
  v5 = *(_QWORD *)(type metadata accessor for REMRemindersListDataView.ReminderLite(0) - 8);
  v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v7 = *(_QWORD *)(v5 + 72);
  v8 = swift_bridgeObjectRetain(a1);
  v9 = _swiftEmptyArrayStorage;
  do
  {
    v10 = REMRemindersListDataView.ReminderLite.objectID.getter(v8);
    v11 = (void *)v10;
    if (*(_QWORD *)(a2 + 16) && (v12 = sub_100057D3C(v10), (v13 & 1) != 0))
    {
      sub_10001D418(*(_QWORD *)(a2 + 56) + 40 * v12, (uint64_t)&v17);
    }
    else
    {
      v19 = 0;
      v17 = 0u;
      v18 = 0u;
    }

    if (*((_QWORD *)&v18 + 1))
    {
      sub_100006E64(&v17, (uint64_t)v20);
      sub_100006E64(v20, (uint64_t)&v17);
      if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
        v9 = sub_10001BF88(0, v9[2] + 1, 1, v9);
      v15 = v9[2];
      v14 = v9[3];
      if (v15 >= v14 >> 1)
        v9 = sub_10001BF88((_QWORD *)(v14 > 1), v15 + 1, 1, v9);
      v9[2] = v15 + 1;
      v8 = sub_100006E64(&v17, (uint64_t)&v9[5 * v15 + 4]);
    }
    else
    {
      v8 = sub_100009578((uint64_t)&v17, &qword_1000AF9D8);
    }
    v6 += v7;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease(a1);
  return v9;
}

uint64_t sub_10005A260(uint64_t a1, uint64_t (*a2)(void *, uint64_t), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  unint64_t v31;

  v30 = a3;
  v5 = sub_100006DA4(&qword_1000AF890);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = (unint64_t)_swiftEmptyArrayStorage;
  v8 = *(_QWORD *)(a1 + 64);
  v28 = a1 + 64;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v29 = (unint64_t)(v9 + 63) >> 6;
  result = swift_bridgeObjectRetain(a1);
  v13 = 0;
  while (v11)
  {
    v14 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v15 = v14 | (v13 << 6);
LABEL_22:
    v19 = *(_QWORD *)(a1 + 56);
    v20 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v15);
    v21 = v19
        + *(_QWORD *)(*(_QWORD *)(type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry(0) - 8) + 72)
        * v15;
    v22 = (uint64_t)v7 + *(int *)(v5 + 48);
    sub_1000072AC(v21, v22, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
    *v7 = v20;
    v23 = a2(v20, v22);
    result = sub_100009578((uint64_t)v7, &qword_1000AF890);
    if (v23)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(result);
      v25 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v24 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v25 >= v24 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
      v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
      result = specialized Array._endMutation()(v26);
    }
  }
  v16 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v16 >= v29)
    goto LABEL_26;
  v17 = *(_QWORD *)(v28 + 8 * v16);
  ++v13;
  if (v17)
    goto LABEL_21;
  v13 = v16 + 1;
  if (v16 + 1 >= v29)
    goto LABEL_26;
  v17 = *(_QWORD *)(v28 + 8 * v13);
  if (v17)
    goto LABEL_21;
  v13 = v16 + 2;
  if (v16 + 2 >= v29)
    goto LABEL_26;
  v17 = *(_QWORD *)(v28 + 8 * v13);
  if (v17)
    goto LABEL_21;
  v13 = v16 + 3;
  if (v16 + 3 >= v29)
    goto LABEL_26;
  v17 = *(_QWORD *)(v28 + 8 * v13);
  if (v17)
  {
LABEL_21:
    v11 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v13 << 6);
    goto LABEL_22;
  }
  v18 = v16 + 4;
  if (v18 >= v29)
  {
LABEL_26:
    swift_release(a1);
    return v31;
  }
  v17 = *(_QWORD *)(v28 + 8 * v18);
  if (v17)
  {
    v13 = v18;
    goto LABEL_21;
  }
  while (1)
  {
    v13 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v13 >= v29)
      goto LABEL_26;
    v17 = *(_QWORD *)(v28 + 8 * v13);
    ++v18;
    if (v17)
      goto LABEL_21;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10005A4EC(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  void **v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;

  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = type metadata accessor for REMObjectID_Codable(0);
  v5 = sub_100007218(&qword_1000AF958, (uint64_t (*)(uint64_t))&type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for NSObject);
  result = Set.init(minimumCapacity:)(v3, v4, v5);
  v15 = result;
  if (v2)
  {
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v7 = _CocoaArrayWrapper.endIndex.getter(v8);
    result = swift_bridgeObjectRelease(a1);
    if (!v7)
      return v15;
  }
  else
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return v15;
  }
  if (v7 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v7; ++i)
      {
        v10 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        sub_100056604((Swift::Int *)&v14, v10);

      }
    }
    else
    {
      v11 = (void **)(a1 + 32);
      do
      {
        v12 = *v11++;
        sub_100056604((Swift::Int *)&v14, v12);

        --v7;
      }
      while (v7);
    }
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_10005A64C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Subtasks;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t i;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  char *v35;
  _QWORD *v36;

  v4 = type metadata accessor for REMRemindersListDataView.ReminderLite(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v35 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - v8;
  Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
  v11 = *(_QWORD *)(Subtasks - 8);
  __chkstk_darwin(Subtasks);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(int *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) + 24);
  v34 = a2;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, (char *)a2 + v14, Subtasks);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, Subtasks);
  if (v15 == enum case for REMRemindersListDataView.FetchSubtasks.off(_:))
  {
LABEL_20:
    swift_bridgeObjectRetain(a1);
    return a1;
  }
  if (v15 != enum case for REMRemindersListDataView.FetchSubtasks.on(_:))
  {
    if (v15 != enum case for REMRemindersListDataView.FetchSubtasks.count(_:))
      goto LABEL_26;
    goto LABEL_20;
  }
  v36 = _swiftEmptyArrayStorage;
  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
    return (uint64_t)v36;
  v17 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v32 = a1;
  v33 = v17;
  v18 = a1 + v17;
  v19 = *(_QWORD *)(v5 + 72);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  swift_bridgeObjectRetain(a1);
  for (i = v16 - 1; ; --i)
  {
    v20(v9, v18, v4);
    v20(v35, (uint64_t)v9, v4);
    v22 = (unint64_t)v36;
    if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
      v22 = sub_10001C3D4(0, *(_QWORD *)(v22 + 16) + 1, 1, v22);
    v24 = *(_QWORD *)(v22 + 16);
    v23 = *(_QWORD *)(v22 + 24);
    if (v24 >= v23 >> 1)
      v22 = sub_10001C3D4(v23 > 1, v24 + 1, 1, v22);
    *(_QWORD *)(v22 + 16) = v24 + 1;
    v25 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(v22 + v33 + v24 * v19, v35, v4);
    v36 = (_QWORD *)v22;
    v26 = *v34;
    if (*(_QWORD *)(v22 + 16) >= *v34)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
LABEL_22:
      swift_bridgeObjectRelease(v32);
      return (uint64_t)v36;
    }
    Subtasks = (uint64_t)v9;
    v27 = REMRemindersListDataView.ReminderLite.subtasks.getter(v25);
    if (!v27)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
      if (!i)
        goto LABEL_22;
      goto LABEL_6;
    }
    v28 = v26 - *(_QWORD *)(v22 + 16);
    if (*(_QWORD *)(v27 + 16) < v28)
      v28 = *(_QWORD *)(v27 + 16);
    if (v28 < 0)
      break;
    sub_100054C0C(v27, v27 + v33, 0, (2 * v28) | 1);
    v29 = v36[2];
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    if (v29 >= *v34 || !i)
      goto LABEL_22;
LABEL_6:
    v18 += v19;
  }
  __break(1u);
LABEL_26:
  result = _diagnoseUnexpectedEnumCase<A>(type:)(Subtasks, Subtasks);
  __break(1u);
  return result;
}

void sub_10005A958(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  id v32;
  char *v33;
  void *v34;
  void *v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(_QWORD, _QWORD, _QWORD);
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  _DWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t Configuration;
  void (*v51)(char *, char *, uint64_t);
  uint64_t (*v52)(_QWORD, _QWORD, _QWORD);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  void *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;

  v65 = a2;
  v63 = a1;
  v10 = sub_100006DA4(&qword_1000AF8B8);
  __chkstk_darwin(v10);
  v57 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Configuration = type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  v55 = *(_QWORD *)(Configuration - 8);
  v12 = __chkstk_darwin(Configuration);
  v61 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = v13;
  __chkstk_darwin(v12);
  v60 = (char *)&v44 - v14;
  v15 = sub_100006DA4(&qword_1000AF8A0);
  __chkstk_darwin(v15);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v20);
  v62 = (char *)&v44 - v24;
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v44 - v26;
  v53 = v28;
  __chkstk_darwin(v25);
  v30 = (char *)&v44 - v29;
  v31 = swift_allocObject(&unk_1000A8660, 33, 7);
  v48 = a4;
  *(_QWORD *)(v31 + 16) = a4;
  *(_QWORD *)(v31 + 24) = a5;
  v59 = v31;
  v49 = a6;
  *(_BYTE *)(v31 + 32) = a6;
  v58 = a3;
  sub_100009434(a3 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_sortingStyle, (uint64_t)v17, &qword_1000AF8A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    swift_retain(a5);
    sub_100009578((uint64_t)v17, &qword_1000AF8A0);
    v32 = v63;
    TTRListType.PredefinedSmartListType.fallbackSortingStyle.getter(v63);
    v33 = v62;
    if (((1 << (char)v32) & 0x66) == 0)
    {
      v34 = (void *)TTRListType.PredefinedSmartListType.smartList(in:)(*(_QWORD *)(v58 + 24), v32);
      if (v34)
      {
        v35 = v34;
        v36 = (char)v32;
        v32 = objc_msgSend(v34, "sortingStyle");
        REMSortingStyle.dataViewSortingStyle.getter();

        LOBYTE(v32) = v36;
        (*(void (**)(char *, uint64_t))(v19 + 8))(v27, v18);
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v27, v22, v18);
      }
    }
    v51 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v51(v30, v27, v18);
  }
  else
  {
    v51 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v51(v30, v17, v18);
    swift_retain(a5);
    v33 = v62;
    LOBYTE(v32) = (_BYTE)v63;
  }
  v54 = v22;
  v37 = (uint64_t)v60;
  if (qword_1000AC920 != -1)
    swift_once(&qword_1000AC920, sub_10004B568);
  v38 = type metadata accessor for Logger(0);
  sub_10000CF70(v38, (uint64_t)qword_1000AF5F8);
  sub_1000072AC(v65, v37, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  v39 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v19 + 16);
  v64 = v30;
  v52 = v39;
  v40 = v39(v33, v30, v18);
  v41 = Logger.logObject.getter(v40);
  v42 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v41, v42))
  {
    v46 = a5;
    v43 = (_DWORD *)swift_slowAlloc(32, -1);
    v45 = swift_slowAlloc(96, -1);
    v66 = v45;
    *v43 = 136315650;
    v47 = v18;
    __asm { BR              X10 }
  }
  sub_100007EB4(v37, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v33, v18);

  __asm { BR              X10 }
}

uint64_t type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(uint64_t a1)
{
  return sub_100007E80(a1, (uint64_t *)&unk_1000AFC70, (uint64_t)&nominal type descriptor for TTRNewWidgetInteractorFetchConfiguration);
}

uint64_t sub_10005B880()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 33, 7);
}

_QWORD *sub_10005B8A4(uint64_t a1)
{
  uint64_t v1;

  return sub_1000672A4(a1, *(void (**)(_QWORD *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_10005B8B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REMRemindersListDataView.SortingStyle(0) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = v1 + v5;
  v11 = v1 + (v8 & ~v7);
  v12 = (_QWORD *)swift_task_alloc(dword_1000AF8C4);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_10000D198;
  return sub_100051814(a1, v9, v10, v11);
}

uint64_t sub_10005B95C(uint64_t a1)
{
  return sub_10005BBE0(a1, &qword_1000AF9E8);
}

uint64_t sub_10005B96C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_1000AF8DC);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10000D198;
  return sub_100053A60(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10005BA04()
{
  uint64_t v0;
  int *Configuration;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t Subtasks;
  uint64_t v19;

  Configuration = (int *)type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  v2 = *((_QWORD *)Configuration - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v19 = v9 + *(_QWORD *)(v7 + 64);
  v10 = v3 | v8 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  v11 = v0 + v4;
  v12 = v0 + v4 + Configuration[5];
  v13 = type metadata accessor for Date(0);
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
  v14(v12, v13);
  v15 = sub_100006DA4(&qword_1000AF8C8);
  v14(v12 + *(int *)(v15 + 36), v13);
  v16 = v11 + Configuration[6];
  Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(Subtasks - 8) + 8))(v16, Subtasks);
  v14(v11 + Configuration[7], v13);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v19, v10);
}

uint64_t sub_10005BB38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REMRemindersListDataView.SortingStyle(0) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = v1 + v5;
  v11 = v1 + (v8 & ~v7);
  v12 = (_QWORD *)swift_task_alloc(dword_1000AF8EC);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_10000D198;
  return sub_1000511E8(a1, v9, v10, v11);
}

uint64_t sub_10005BBE0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t (*v3)(_BYTE *);
  _BYTE v5[48];

  v3 = *(uint64_t (**)(_BYTE *))(v2 + 16);
  sub_100018778(a1, (uint64_t)v5, a2);
  return v3(v5);
}

uint64_t sub_10005BC20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) - 8)
                          + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = v1 + ((v4 + 24) & ~v4);
  v7 = (_QWORD *)swift_task_alloc(dword_1000AF904);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D198;
  return sub_100050AA4(a1, v5, v6);
}

uint64_t sub_10005BCA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REMRemindersListDataView.SortingStyle(0) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = v1 + v5;
  v11 = v1 + (v8 & ~v7);
  v12 = (_QWORD *)swift_task_alloc(dword_1000AF91C);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_10000D198;
  return sub_1000504B8(a1, v9, v10, v11);
}

uint64_t sub_10005BD58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REMRemindersListDataView.SortingStyle(0) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = v1 + v5;
  v11 = v1 + (v8 & ~v7);
  v12 = (_QWORD *)swift_task_alloc(dword_1000AF934);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_10000D198;
  return sub_10004FC90(a1, v9, v10, v11);
}

uint64_t sub_10005BE04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100051F28(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_10005BE0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1000AF984);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D198;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1000AF980 + dword_1000AF980))(a1, v4);
}

uint64_t sub_10005BE7C(uint64_t result, char a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t i;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39[2];
  __int128 v40[2];
  void *v41;
  __int128 v42[2];

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v6 = result;
    sub_100009434(result + 32, (uint64_t)&v41, &qword_1000AF9E0);
    v7 = v41;
    sub_100006E64(v42, (uint64_t)v40);
    v8 = *a3;
    v10 = sub_100057D3C((uint64_t)v7);
    v11 = *(_QWORD *)(v8 + 16);
    v12 = (v9 & 1) == 0;
    v13 = v11 + v12;
    if (__OFADD__(v11, v12))
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v14 = v9;
    if (*(_QWORD *)(v8 + 24) < v13)
    {
      sub_1000575BC(v13, a2 & 1);
      v15 = sub_100057D3C((uint64_t)v7);
      if ((v14 & 1) != (v16 & 1))
      {
LABEL_26:
        v38 = sub_100058A28(0, &qword_1000AF878, REMObjectID_ptr);
        result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v38);
        __break(1u);
        return result;
      }
      v10 = v15;
      if ((v14 & 1) == 0)
        goto LABEL_12;
LABEL_9:
      sub_10001D418(*(_QWORD *)(*a3 + 56) + 40 * v10, (uint64_t)v39);
      sub_10001D26C(v40);

      v17 = (_QWORD *)(*(_QWORD *)(*a3 + 56) + 40 * v10);
      sub_10001D26C(v17);
      result = sub_100006E64(v39, (uint64_t)v17);
      v18 = v3 - 1;
      if (v3 == 1)
        return result;
LABEL_15:
      for (i = v6 + 80; ; i += 48)
      {
        sub_100009434(i, (uint64_t)&v41, &qword_1000AF9E0);
        v26 = v41;
        sub_100006E64(v42, (uint64_t)v40);
        v27 = *a3;
        v28 = sub_100057D3C((uint64_t)v26);
        v30 = *(_QWORD *)(v27 + 16);
        v31 = (v29 & 1) == 0;
        v21 = __OFADD__(v30, v31);
        v32 = v30 + v31;
        if (v21)
          break;
        v33 = v29;
        if (*(_QWORD *)(v27 + 24) < v32)
        {
          sub_1000575BC(v32, 1);
          v28 = sub_100057D3C((uint64_t)v26);
          if ((v33 & 1) != (v34 & 1))
            goto LABEL_26;
        }
        if ((v33 & 1) != 0)
        {
          v24 = 40 * v28;
          sub_10001D418(*(_QWORD *)(*a3 + 56) + 40 * v28, (uint64_t)v39);
          sub_10001D26C(v40);

          v25 = (_QWORD *)(*(_QWORD *)(*a3 + 56) + v24);
          sub_10001D26C(v25);
          result = sub_100006E64(v39, (uint64_t)v25);
        }
        else
        {
          v35 = (_QWORD *)*a3;
          *(_QWORD *)(*a3 + 8 * (v28 >> 6) + 64) |= 1 << v28;
          *(_QWORD *)(v35[6] + 8 * v28) = v26;
          result = sub_100006E64(v40, v35[7] + 40 * v28);
          v36 = v35[2];
          v21 = __OFADD__(v36, 1);
          v37 = v36 + 1;
          if (v21)
            goto LABEL_25;
          v35[2] = v37;
        }
        if (!--v18)
          return result;
      }
      goto LABEL_24;
    }
    if ((a2 & 1) != 0)
    {
      if ((v9 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_100058088();
      if ((v14 & 1) != 0)
        goto LABEL_9;
    }
LABEL_12:
    v19 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v10 >> 6) + 64) |= 1 << v10;
    *(_QWORD *)(v19[6] + 8 * v10) = v7;
    result = sub_100006E64(v40, v19[7] + 40 * v10);
    v20 = v19[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v19[2] = v22;
    v18 = v3 - 1;
    if (v3 == 1)
      return result;
    goto LABEL_15;
  }
  return result;
}

void sub_10005C184(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *i;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  char v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v7 = *(_QWORD *)(a1 + 40);
    v8 = (_QWORD *)*a3;
    v9 = *(id *)(a1 + 32);
    v11 = sub_100057D3C((uint64_t)v9);
    v12 = v8[2];
    v13 = (v10 & 1) == 0;
    v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v15 = v10;
    if (v8[3] < v14)
    {
      sub_100057314(v14, a2 & 1);
      v16 = sub_100057D3C((uint64_t)v9);
      if ((v15 & 1) != (v17 & 1))
      {
LABEL_26:
        v42 = sub_100058A28(0, &qword_1000AF878, REMObjectID_ptr);
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v42);
        __break(1u);
        return;
      }
      v11 = v16;
      v18 = (_QWORD *)*a3;
      if ((v15 & 1) == 0)
        goto LABEL_12;
LABEL_9:
      v19 = *(_QWORD *)(v18[7] + 8 * v11);

      *(_QWORD *)(v18[7] + 8 * v11) = v19;
      v20 = v3 - 1;
      if (v3 == 1)
        return;
LABEL_15:
      for (i = (uint64_t *)(a1 + 56); ; i += 2)
      {
        v28 = *i;
        v29 = (_QWORD *)*a3;
        v30 = (id)*(i - 1);
        v31 = sub_100057D3C((uint64_t)v30);
        v33 = v29[2];
        v34 = (v32 & 1) == 0;
        v23 = __OFADD__(v33, v34);
        v35 = v33 + v34;
        if (v23)
          break;
        v36 = v32;
        if (v29[3] < v35)
        {
          sub_100057314(v35, 1);
          v31 = sub_100057D3C((uint64_t)v30);
          if ((v36 & 1) != (v37 & 1))
            goto LABEL_26;
        }
        v38 = (_QWORD *)*a3;
        if ((v36 & 1) != 0)
        {
          v26 = 8 * v31;
          v27 = *(_QWORD *)(v38[7] + 8 * v31);

          *(_QWORD *)(v38[7] + v26) = v27;
        }
        else
        {
          v38[(v31 >> 6) + 8] |= 1 << v31;
          v39 = 8 * v31;
          *(_QWORD *)(v38[6] + v39) = v30;
          *(_QWORD *)(v38[7] + v39) = v28;
          v40 = v38[2];
          v23 = __OFADD__(v40, 1);
          v41 = v40 + 1;
          if (v23)
            goto LABEL_25;
          v38[2] = v41;
        }
        if (!--v20)
          return;
      }
      goto LABEL_24;
    }
    if ((a2 & 1) != 0)
    {
      v18 = (_QWORD *)*a3;
      if ((v10 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_100057F00();
      v18 = (_QWORD *)*a3;
      if ((v15 & 1) != 0)
        goto LABEL_9;
    }
LABEL_12:
    v18[(v11 >> 6) + 8] |= 1 << v11;
    v21 = 8 * v11;
    *(_QWORD *)(v18[6] + v21) = v9;
    *(_QWORD *)(v18[7] + v21) = v7;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v18[2] = v24;
    v20 = v3 - 1;
    if (v3 == 1)
      return;
    goto LABEL_15;
  }
}

uint64_t sub_10005C3D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc(dword_1000AF9A4);
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_10000D198;
  return sub_1000544C0(a1, a2, v7, v6);
}

uint64_t type metadata accessor for TTRNewWidgetInteractorReminderWrapper(uint64_t a1)
{
  return sub_100007E80(a1, (uint64_t *)&unk_1000AFBD0, (uint64_t)&nominal type descriptor for TTRNewWidgetInteractorReminderWrapper);
}

unint64_t sub_10005C458()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AF9B8;
  if (!qword_1000AF9B8)
  {
    v1 = sub_100007258(&qword_1000AF9B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, &qword_1000AF9B8);
  }
  return result;
}

uint64_t sub_10005C4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc(dword_1000AF9C4);
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_10000D198;
  return sub_100054830(a1, a2, v7, v6);
}

uint64_t sub_10005C51C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10005C544(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_1000AF8DC);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10000B208;
  return sub_100053A60(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10005C5DC()
{
  uint64_t v0;
  int *Configuration;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t Subtasks;

  Configuration = (int *)type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  v2 = *((_QWORD *)Configuration - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  v7 = v0 + v4;
  v8 = v0 + v4 + Configuration[5];
  v9 = type metadata accessor for Date(0);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v11 = sub_100006DA4(&qword_1000AF8C8);
  v10(v8 + *(int *)(v11 + 36), v9);
  v12 = v7 + Configuration[6];
  Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(Subtasks - 8) + 8))(v12, Subtasks);
  v10(v7 + Configuration[7], v9);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10005C6DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) - 8)
                          + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_1000AFA4C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000D198;
  return sub_10004CDF8(a1, v5, v6, v7);
}

uint64_t sub_10005C760(uint64_t a1)
{
  return sub_10005BBE0(a1, &qword_1000AFA78);
}

uint64_t sub_10005C770(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_1000AFA5C);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10000D198;
  return sub_100052970(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10005C808(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) - 8)
                          + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = v1 + ((v4 + 24) & ~v4);
  v7 = (_QWORD *)swift_task_alloc(dword_1000AFA9C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000B208;
  return sub_10004B9A8(a1, v5, v6);
}

uint64_t sub_10005C890()
{
  uint64_t v0;
  int *Configuration;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t Subtasks;

  Configuration = (int *)type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  v2 = *((_QWORD *)Configuration - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));

  v7 = v0 + v4;
  v8 = v0 + v4 + Configuration[5];
  v9 = type metadata accessor for Date(0);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v11 = sub_100006DA4(&qword_1000AF8C8);
  v10(v8 + *(int *)(v11 + 36), v9);
  v12 = v7 + Configuration[6];
  Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(Subtasks - 8) + 8))(v12, Subtasks);
  v10(v7 + Configuration[7], v9);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10005C980(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) - 8)
                          + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_1000AFABC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000D198;
  return sub_10004E194(a1, v5, v6, v7);
}

uint64_t sub_10005CA04(uint64_t a1)
{
  return sub_10005BBE0(a1, &qword_1000AFAE8);
}

uint64_t sub_10005CA14()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10005CA50(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_1000AFACC);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10000D198;
  return sub_100053088(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10005CAE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_10005CAEC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = &unk_10008B708;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 0, 5, v4, a1 + 24);
    return 0;
  }
  return result;
}

uint64_t *sub_10005CB80(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain(v9);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
    v12 = (_QWORD *)(((unint64_t)v4 + v6 + 23) & 0xFFFFFFFFFFFFF8);
    v13 = (uint64_t *)(((unint64_t)a2 + v6 + 23) & 0xFFFFFFFFFFFFF8);
    v14 = *v13;
    *v12 = *v13;
    v15 = (uint64_t *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFF8);
    v16 = *v15;
    *(_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8) = *v15;
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRetain(v16);
  }
  return v4;
}

uint64_t sub_10005CC74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = a1 + *(_QWORD *)(v3 + 64) + 23;
  v5 = (v4 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRelease(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF8));
  return swift_bridgeObjectRelease(*(_QWORD *)(v5 & 0xFFFFFFFFFFFFF8));
}

uint64_t sub_10005CCC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = (_QWORD *)((v7 + 23) & 0xFFFFFFFFFFFFF8);
  v12 = (uint64_t *)((v8 + 23) & 0xFFFFFFFFFFFFF8);
  v13 = *v12;
  *v11 = *v12;
  v14 = (uint64_t *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8);
  v15 = *v14;
  *(_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8) = *v14;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v15);
  return a1;
}

uint64_t sub_10005CD5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v7 += 23;
  v8 += 23;
  v12 = (v8 & 0xFFFFFFFFFFFFF8) + 15;
  v11 = *(_QWORD *)(v8 & 0xFFFFFFFFFFFFF8);
  v13 = *(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF8) = v11;
  v14 = (v7 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v13);
  v15 = *(_QWORD *)(v12 & 0xFFFFFFFFFFFFF8);
  v16 = *(_QWORD *)(v14 & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)(v14 & 0xFFFFFFFFFFFFFFF8) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  return a1;
}

uint64_t sub_10005CE0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = (_QWORD *)((v7 + 23) & 0xFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v8 + 23) & 0xFFFFFFFFFFFFF8);
  *v11 = *v12;
  *(_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_10005CE9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v7 += 23;
  v11 = (_QWORD *)((v8 + 23) & 0xFFFFFFFFFFFFF8);
  v12 = *(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF8) = *v11;
  v13 = (v7 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRelease(v12);
  v14 = *(_QWORD *)(v13 & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)(v13 & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease(v14);
  return a1;
}

uint64_t sub_10005CF3C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 23) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_10005CFC0 + 4 * byte_10008B5D0[v10]))();
  }
}

void sub_10005D044(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + 23) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((*(_DWORD *)(v5 + 64) + 23) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((*(_QWORD *)(v5 + 64) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_10005D140()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x10005D1B4);
}

void sub_10005D148(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x10005D150);
  JUMPOUT(0x10005D1B4);
}

void sub_10005D190()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x10005D1B4);
}

void sub_10005D198()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x10005D1B4);
}

uint64_t sub_10005D1A0(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x10005D1B4);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x10005D1B0);
    JUMPOUT(0x10005D1ACLL);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t type metadata accessor for TTRNewWidgetInteractorFetchResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10005E1C8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRNewWidgetInteractorFetchResult);
}

_QWORD *sub_10005D1D8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v4[5] = a2[5];
    v8 = *(int *)(a3 + 24);
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Date(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = sub_100006DA4(&qword_1000AD8B8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return v4;
}

uint64_t sub_10005D2E8(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  sub_10001D26C(a1);
  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t sub_10005D360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100006DA4(&qword_1000AD8B8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

_QWORD *sub_10005D43C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  sub_10005D550(a1, a2);
  a1[5] = a2[5];
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_100006DA4(&qword_1000AD8B8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_QWORD *sub_10005D550(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

uint64_t sub_10005D6B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100006DA4(&qword_1000AD8B8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_10005D77C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  sub_10001D26C((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = sub_100006DA4(&qword_1000AD8B8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_10005D898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005D8A4);
}

uint64_t sub_10005D8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100006DA4(&qword_1000AD8B8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_10005D924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005D930);
}

uint64_t sub_10005D930(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_100006DA4(&qword_1000AD8B8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_10005D9A8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "(";
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_10002270C(319, (unint64_t *)&unk_1000AFBE0, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

char *sub_10005DA38(uint64_t *a1, uint64_t *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t Subtasks;
  uint64_t v17;

  v4 = (char *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v17);
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for Date(0);
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = sub_100006DA4(&qword_1000AF8C8);
    v11(&v8[*(int *)(v12 + 36)], &v9[*(int *)(v12 + 36)], v10);
    v13 = a3[6];
    v14 = &v4[v13];
    v15 = (char *)a2 + v13;
    Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(Subtasks - 8) + 16))(v14, v15, Subtasks);
    v11(&v4[a3[7]], (char *)a2 + a3[7], v10);
  }
  return v4;
}

uint64_t sub_10005DB3C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t Subtasks;
  void (*v10)(uint64_t, uint64_t);

  v4 = a1 + a2[5];
  v5 = type metadata accessor for Date(0);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v10(v4, v5);
  v6 = sub_100006DA4(&qword_1000AF8C8);
  v10(v4 + *(int *)(v6 + 36), v5);
  v7 = a1 + a2[6];
  Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(Subtasks - 8) + 8))(v7, Subtasks);
  return ((uint64_t (*)(uint64_t, uint64_t))v10)(a1 + a2[7], v5);
}

char *sub_10005DBF0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t Subtasks;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Date(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = sub_100006DA4(&qword_1000AF8C8);
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(Subtasks - 8) + 16))(v13, v14, Subtasks);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  return a1;
}

char *sub_10005DCC8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t Subtasks;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Date(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v11 = sub_100006DA4(&qword_1000AF8C8);
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(Subtasks - 8) + 24))(v13, v14, Subtasks);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  return a1;
}

char *sub_10005DDA0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t Subtasks;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Date(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = sub_100006DA4(&qword_1000AF8C8);
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(Subtasks - 8) + 32))(v13, v14, Subtasks);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  return a1;
}

char *sub_10005DE78(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t Subtasks;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Date(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v11 = sub_100006DA4(&qword_1000AF8C8);
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(Subtasks - 8) + 40))(v13, v14, Subtasks);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  return a1;
}

uint64_t sub_10005DF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005DF5C);
}

uint64_t sub_10005DF5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Subtasks;

  v6 = sub_100006DA4(&qword_1000AF8C8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
  }
  else
  {
    Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
    v7 = *(_QWORD *)(Subtasks - 8);
    if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    {
      v8 = Subtasks;
      v9 = a3[6];
    }
    else
    {
      v8 = type metadata accessor for Date(0);
      v7 = *(_QWORD *)(v8 - 8);
      v9 = a3[7];
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
}

uint64_t sub_10005DFF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005E000);
}

uint64_t sub_10005E000(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Subtasks;

  v8 = sub_100006DA4(&qword_1000AF8C8);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
  }
  else
  {
    Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
    v9 = *(_QWORD *)(Subtasks - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = Subtasks;
      v11 = a4[6];
    }
    else
    {
      v10 = type metadata accessor for Date(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = a4[7];
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_10005E0A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t Subtasks;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  v8[0] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_10005E150(319);
  if (v3 <= 0x3F)
  {
    v8[1] = *(_QWORD *)(v2 - 8) + 64;
    Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(319);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(Subtasks - 8) + 64;
      v6 = type metadata accessor for Date(319);
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 4, v8, a1 + 16);
      }
    }
  }
}

void sub_10005E150(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1000AFC80)
  {
    v2 = type metadata accessor for Date(255);
    v3 = sub_100007218(&qword_1000AF898, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v4 = type metadata accessor for ClosedRange(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1000AFC80);
  }
}

uint64_t sub_10005E1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

uint64_t *initializeBufferWithCopyOfBuffer for TTRNewWidgetProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for TTRNewWidgetProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  return a1;
}

uint64_t *assignWithTake for TTRNewWidgetProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for TTRNewWidgetProvider()
{
  return &type metadata for TTRNewWidgetProvider;
}

unint64_t sub_10005E300()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AFCD0[0];
  if (!qword_1000AFCD0[0])
  {
    v1 = type metadata accessor for TTRNewWidgetTimelineEntry(255);
    result = swift_getWitnessTable(&unk_10008A024, v1);
    atomic_store(result, qword_1000AFCD0);
  }
  return result;
}

uint64_t sub_10005E348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000CF88(v0, qword_1000AFCB8);
  v1 = sub_10000CF70(v0, (uint64_t)qword_1000AFCB8);
  if (qword_1000AC888 != -1)
    swift_once(&qword_1000AC888, sub_10001D5C8);
  v2 = sub_10000CF70(v0, (uint64_t)qword_1000B9E48);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_10005E3D8(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t KeyPath;
  uint64_t v15;
  _UNKNOWN **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  ValueMetadata *v36;
  uint64_t v37;

  v4 = type metadata accessor for TTRNewWidgetTimelineEntry(0);
  v5 = __chkstk_darwin(v4);
  v35 = (uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v34 - v7;
  v9 = type metadata accessor for TimelineProviderContext.EnvironmentVariants(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  TimelineProviderContext.environmentVariants.getter(v11);
  KeyPath = swift_getKeyPath(&unk_10008B830);
  v15 = TimelineProviderContext.EnvironmentVariants.subscript.getter();
  swift_release(KeyPath);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  if (v15)
    v16 = (_UNKNOWN **)v15;
  else
    v16 = &off_1000A6700;
  sub_1000654D0(a1, a2 + *(int *)(v4 + 20));
  Date.init()(v17);
  v18 = a2 + *(int *)(v4 + 24);
  v19 = type metadata accessor for TimelineEntryRelevance(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  swift_bridgeObjectRelease(v16);
  if (qword_1000AC928 != -1)
    swift_once(&qword_1000AC928, sub_10005E348);
  v20 = type metadata accessor for Logger(0);
  sub_10000CF70(v20, (uint64_t)qword_1000AFCB8);
  v21 = sub_10005FE20(a2, (uint64_t)v8);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc(22, -1);
    v25 = swift_slowAlloc(64, -1);
    *(_DWORD *)v24 = 136446467;
    v36 = &type metadata for TTRNewWidgetProvider;
    v37 = v25;
    v26 = sub_100006DA4(&qword_1000AFCE8);
    v27 = String.init<A>(describing:)(&v36, v26);
    v29 = v28;
    v36 = (ValueMetadata *)sub_10007FA38(v27, v28, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v24 + 4, v24 + 12);
    swift_bridgeObjectRelease(v29);
    *(_WORD *)(v24 + 12) = 2081;
    v30 = v35;
    sub_10005FE20((uint64_t)v8, v35);
    v31 = String.init<A>(describing:)(v30, v4);
    v33 = v32;
    v36 = (ValueMetadata *)sub_10007FA38(v31, v32, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v24 + 14, v24 + 22);
    swift_bridgeObjectRelease(v33);
    sub_10005FE64((uint64_t)v8);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "%{public}s: Created placeholder {entry: %{private}s}", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy(v25, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v24, -1, -1);
  }
  else
  {
    sub_10005FE64((uint64_t)v8);
  }

}

uint64_t sub_10005E714(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  id v22;
  unint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  unint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _UNKNOWN **v51;
  _QWORD *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  ValueMetadata *v77;
  uint64_t v78;

  v74 = a4;
  v75 = a6;
  v70 = a5;
  v73 = a3;
  v8 = type metadata accessor for Date(0);
  v71 = *(_QWORD *)(v8 - 8);
  v72 = v8;
  __chkstk_darwin(v8);
  v76 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TimelineProviderContext(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v66 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)&v61 - v14;
  v16 = type metadata accessor for TimelineProviderContext.EnvironmentVariants(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = objc_msgSend(a1, "list");
  if (v20
    && (v21 = v20, v22 = objc_msgSend(v20, "identifier"), v21, v22))
  {
    v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v68 = v23;

  }
  else
  {
    v67 = 0;
    v68 = 0xE000000000000000;
  }
  TimelineProviderContext.environmentVariants.getter(v20);
  KeyPath = swift_getKeyPath(&unk_10008B830);
  v69 = TimelineProviderContext.EnvironmentVariants.subscript.getter();
  swift_release(KeyPath);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  if (qword_1000AC928 != -1)
    swift_once(&qword_1000AC928, sub_10005E348);
  v25 = type metadata accessor for Logger(0);
  sub_10000CF70(v25, (uint64_t)qword_1000AFCB8);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v27 = v15;
  v26(v15, a2, v10);
  v28 = a1;
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc(32, -1);
    v32 = swift_slowAlloc(96, -1);
    v65 = v32;
    *(_DWORD *)v31 = 136446723;
    v63 = (void (*)(char *, char *, uint64_t))v26;
    v77 = &type metadata for TTRNewWidgetProvider;
    v78 = v32;
    v33 = sub_100006DA4(&qword_1000AFCE8);
    v62 = v10;
    v34 = String.init<A>(describing:)(&v77, v33);
    v64 = v11;
    v35 = v27;
    v37 = v36;
    v77 = (ValueMetadata *)sub_10007FA38(v34, v36, &v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78, v31 + 4, v31 + 12);
    swift_bridgeObjectRelease(v37);
    *(_WORD *)(v31 + 12) = 2081;
    v38 = v28;
    v39 = objc_msgSend(v38, "description");
    v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
    v42 = v41;

    v77 = (ValueMetadata *)sub_10007FA38(v40, v42, &v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78, v31 + 14, v31 + 22);

    swift_bridgeObjectRelease(v42);
    *(_WORD *)(v31 + 22) = 2082;
    LOBYTE(v39) = v30;
    v43 = v66;
    v44 = v62;
    v63(v66, v35, v62);
    v45 = v43;
    v46 = v44;
    v47 = String.init<A>(describing:)(v45, v44);
    v49 = v48;
    v77 = (ValueMetadata *)sub_10007FA38(v47, v48, &v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78, v31 + 24, v31 + 32);
    swift_bridgeObjectRelease(v49);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v35, v46);
    _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v39, "%{public}s: Requesting snapshot {configuration: %{private}s context: %{public}s", (uint8_t *)v31, 0x20u);
    v50 = v65;
    swift_arrayDestroy(v65, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v50, -1, -1);
    swift_slowDealloc(v31, -1, -1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v11 + 8))(v27, v10);
  }

  if (v69)
    v51 = (_UNKNOWN **)v69;
  else
    v51 = &off_1000A6728;
  v52 = (_QWORD *)swift_allocObject(&unk_1000A8DE8, 72, 7);
  v54 = v67;
  v53 = v68;
  v52[2] = v67;
  v52[3] = v53;
  v55 = v74;
  v52[4] = v73;
  v52[5] = v55;
  v56 = v70;
  v57 = v75;
  v52[6] = v70;
  v52[7] = v57;
  v52[8] = v51;
  swift_bridgeObjectRetain(v53);
  swift_retain(v55);
  swift_retain(v56);
  v58 = swift_bridgeObjectRetain(v51);
  v59 = (uint64_t)v76;
  Date.init()(v58);
  sub_100064C1C(v54, v53, v57, (uint64_t)v51, v59, (uint64_t)sub_10005FEDC, (uint64_t)v52);
  swift_bridgeObjectRelease(v51);
  swift_bridgeObjectRelease(v53);
  swift_release(v52);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 8))(v59, v72);
}

uint64_t sub_10005EC2C(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(_QWORD);
  uint64_t v56;
  uint64_t v57;
  ValueMetadata *v58;
  uint64_t v59;

  v56 = a6;
  v57 = a8;
  v14 = type metadata accessor for TTRNewWidgetTimelineEntry(0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v52 - v19;
  __chkstk_darwin(v18);
  v23 = (char *)&v52 - v22;
  if (*(_QWORD *)(a1 + 16))
  {
    sub_10005FE20(a1 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80)), (uint64_t)&v52 - v22);
    if (qword_1000AC928 != -1)
      swift_once(&qword_1000AC928, sub_10005E348);
    v24 = type metadata accessor for Logger(0);
    sub_10000CF70(v24, (uint64_t)qword_1000AFCB8);
    v25 = sub_10005FE20((uint64_t)v23, (uint64_t)v20);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc(22, -1);
      v29 = swift_slowAlloc(64, -1);
      v57 = a5;
      v30 = v29;
      *(_DWORD *)v28 = 136446467;
      v54 = v14;
      v58 = &type metadata for TTRNewWidgetProvider;
      v59 = v29;
      v31 = sub_100006DA4(&qword_1000AFCE8);
      v55 = a4;
      v32 = String.init<A>(describing:)(&v58, v31);
      v34 = v33;
      v58 = (ValueMetadata *)sub_10007FA38(v32, v33, &v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59, v28 + 4, v28 + 12);
      swift_bridgeObjectRelease(v34);
      *(_WORD *)(v28 + 12) = 2085;
      sub_10005FE20((uint64_t)v20, (uint64_t)v17);
      v35 = String.init<A>(describing:)(v17, v54);
      v37 = v36;
      v58 = (ValueMetadata *)sub_10007FA38(v35, v36, &v59);
      a4 = v55;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59, v28 + 14, v28 + 22);
      swift_bridgeObjectRelease(v37);
      sub_10005FE64((uint64_t)v20);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "%{public}s: Completed snapshot {entry: %{sensitive}s}", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy(v30, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v28, -1, -1);
    }
    else
    {
      sub_10005FE64((uint64_t)v20);
    }

    v17 = v23;
  }
  else
  {
    v52 = a2;
    v53 = a7;
    if (qword_1000AC928 != -1)
      swift_once(&qword_1000AC928, sub_10005E348);
    v38 = type metadata accessor for Logger(0);
    sub_10000CF70(v38, (uint64_t)qword_1000AFCB8);
    v39 = swift_bridgeObjectRetain_n(a3, 2);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = swift_slowAlloc(22, -1);
      v43 = swift_slowAlloc(64, -1);
      *(_DWORD *)v42 = 136446467;
      v55 = a4;
      v58 = &type metadata for TTRNewWidgetProvider;
      v59 = v43;
      v44 = sub_100006DA4(&qword_1000AFCE8);
      v54 = v14;
      v45 = String.init<A>(describing:)(&v58, v44);
      v47 = v46;
      v58 = (ValueMetadata *)sub_10007FA38(v45, v46, &v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59, v42 + 4, v42 + 12);
      swift_bridgeObjectRelease(v47);
      *(_WORD *)(v42 + 12) = 2081;
      swift_bridgeObjectRetain(a3);
      v58 = (ValueMetadata *)sub_10007FA38(v52, a3, &v59);
      v14 = v54;
      a4 = v55;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59, v42 + 14, v42 + 22);
      swift_bridgeObjectRelease_n(a3, 3);
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "%{public}s: No timeline entries created placeholder snapshot {url: %{private}s}", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy(v43, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1, -1);
      swift_slowDealloc(v42, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a3, 2);
    }
    sub_1000654D0(v53, (uint64_t)&v17[*(int *)(v14 + 20)]);
    Date.init()(v48);
    v49 = &v17[*(int *)(v14 + 24)];
    v50 = type metadata accessor for TimelineEntryRelevance(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v49, 1, 1, v50);
  }
  a4(v17);
  return sub_10005FE64((uint64_t)v17);
}

uint64_t sub_10005F110(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _UNKNOWN **v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  ValueMetadata *v75;
  uint64_t v76;

  v70 = a4;
  v71 = a6;
  v73 = a5;
  v69 = a3;
  v68 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v72 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TimelineProviderContext(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v63 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v67 = (char *)&v59 - v14;
  v15 = type metadata accessor for TimelineProviderContext.EnvironmentVariants(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = objc_msgSend(a1, "list");
  v74 = v8;
  if (v19
    && (v20 = v19, v21 = objc_msgSend(v19, "identifier"), v20, v21))
  {
    v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v65 = v22;

  }
  else
  {
    v64 = 0;
    v65 = 0xE000000000000000;
  }
  v23 = v10;
  TimelineProviderContext.environmentVariants.getter(v19);
  KeyPath = swift_getKeyPath(&unk_10008B830);
  v66 = TimelineProviderContext.EnvironmentVariants.subscript.getter();
  swift_release(KeyPath);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (qword_1000AC928 != -1)
    swift_once(&qword_1000AC928, sub_10005E348);
  v25 = type metadata accessor for Logger(0);
  sub_10000CF70(v25, (uint64_t)qword_1000AFCB8);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v27 = v67;
  v26(v67, a2, v23);
  v28 = a1;
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.default.getter();
  v31 = v30;
  if (os_log_type_enabled(v29, v30))
  {
    v32 = swift_slowAlloc(32, -1);
    v33 = swift_slowAlloc(96, -1);
    v62 = v33;
    *(_DWORD *)v32 = 136446723;
    v59 = v23;
    v75 = &type metadata for TTRNewWidgetProvider;
    v76 = v33;
    v34 = sub_100006DA4(&qword_1000AFCE8);
    v60 = v11;
    v35 = String.init<A>(describing:)(&v75, v34);
    v61 = v31;
    v37 = v36;
    v75 = (ValueMetadata *)sub_10007FA38(v35, v36, &v76);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, &v76, v32 + 4, v32 + 12);
    swift_bridgeObjectRelease(v37);
    *(_WORD *)(v32 + 12) = 2081;
    v38 = v28;
    v39 = objc_msgSend(v38, "description");
    v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
    v42 = v41;

    v75 = (ValueMetadata *)sub_10007FA38(v40, v42, &v76);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, &v76, v32 + 14, v32 + 22);

    swift_bridgeObjectRelease(v42);
    *(_WORD *)(v32 + 22) = 2082;
    v43 = v63;
    v44 = v59;
    v26(v63, (uint64_t)v27, v59);
    v45 = String.init<A>(describing:)(v43, v44);
    v47 = v46;
    v75 = (ValueMetadata *)sub_10007FA38(v45, v46, &v76);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, &v76, v32 + 24, v32 + 32);
    swift_bridgeObjectRelease(v47);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v27, v44);
    _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v61, "%{public}s: Requesting timeline {configuration: %{private}s context: %{public}s", (uint8_t *)v32, 0x20u);
    v48 = v62;
    swift_arrayDestroy(v62, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v48, -1, -1);
    swift_slowDealloc(v32, -1, -1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v11 + 8))(v27, v23);
  }

  if (v66)
    v49 = (_UNKNOWN **)v66;
  else
    v49 = &off_1000A6750;
  v50 = (_QWORD *)swift_allocObject(&unk_1000A8DC0, 56, 7);
  v51 = v73;
  v52 = v70;
  v53 = v71;
  v50[2] = v73;
  v50[3] = v53;
  v54 = v69;
  v50[4] = v49;
  v50[5] = v54;
  v50[6] = v52;
  swift_retain(v51);
  swift_bridgeObjectRetain(v49);
  swift_retain(v52);
  v55 = (uint64_t)v72;
  Date.init()(v56);
  v57 = v65;
  sub_100064C1C(v64, v65, v53, (uint64_t)v49, v55, (uint64_t)sub_10005FE10, (uint64_t)v50);
  swift_bridgeObjectRelease(v49);
  swift_bridgeObjectRelease(v57);
  swift_release(v50);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 8))(v55, v68);
}

uint64_t sub_10005F618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t, char *, uint64_t);
  char *v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *);
  uint64_t v90;
  ValueMetadata *v91;
  uint64_t v92;

  v88 = a6;
  v89 = a5;
  v83 = a2;
  v84 = a4;
  v8 = type metadata accessor for TTRNewWidgetTimelineEntry(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v14 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TimelineReloadPolicy(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_100006DA4(&qword_1000AFCF0);
  v90 = *(_QWORD *)(v87 - 8);
  v18 = __chkstk_darwin(v87);
  v19 = __chkstk_darwin(v18);
  v85 = (char *)&v81 - v20;
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v81 - v22;
  __chkstk_darwin(v21);
  v26 = (char *)&v81 - v25;
  if (*(_QWORD *)(a1 + 16))
  {
    v27 = swift_bridgeObjectRetain(a1);
    static Date.rem_startOfTomorrow.getter(v27);
    static TimelineReloadPolicy.after(_:)(v14);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v86);
    v28 = sub_10005E300();
    Timeline.init(entries:policy:)(a1, v17, v8, v28);
    if (qword_1000AC928 != -1)
      swift_once(&qword_1000AC928, sub_10005E348);
    v29 = type metadata accessor for Logger(0);
    sub_10000CF70(v29, (uint64_t)qword_1000AFCB8);
    v30 = v90;
    v31 = *(uint64_t (**)(char *, char *, uint64_t))(v90 + 16);
    v32 = v23;
    v33 = v87;
    v34 = v31(v23, v26, v87);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc(22, -1);
      v38 = swift_slowAlloc(64, -1);
      v86 = (uint64_t)v26;
      v39 = v38;
      *(_DWORD *)v37 = 136446467;
      v91 = &type metadata for TTRNewWidgetProvider;
      v92 = v38;
      v40 = sub_100006DA4(&qword_1000AFCE8);
      v41 = String.init<A>(describing:)(&v91, v40);
      v43 = v42;
      v91 = (ValueMetadata *)sub_10007FA38(v41, v42, &v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, &v92, v37 + 4, v37 + 12);
      swift_bridgeObjectRelease(v43);
      *(_WORD *)(v37 + 12) = 2085;
      v44 = v85;
      v31(v85, v32, v33);
      v45 = String.init<A>(describing:)(v44, v33);
      v47 = v46;
      v91 = (ValueMetadata *)sub_10007FA38(v45, v46, &v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, &v92, v37 + 14, v37 + 22);
      swift_bridgeObjectRelease(v47);
      v48 = *(void (**)(char *, uint64_t))(v90 + 8);
      v48(v32, v33);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "%{public}s: Completed timeline {timeline: %{sensitive}s}", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy(v39, 2, (char *)&type metadata for Any + 8);
      v26 = (char *)v86;
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v37, -1, -1);
    }
    else
    {
      v48 = *(void (**)(char *, uint64_t))(v30 + 8);
      v48(v32, v33);
    }

  }
  else
  {
    v82 = v24;
    sub_1000654D0(a3, (uint64_t)&v11[*(int *)(v8 + 20)]);
    Date.init()(v49);
    v50 = &v11[*(int *)(v8 + 24)];
    v51 = type metadata accessor for TimelineEntryRelevance(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v50, 1, 1, v51);
    v52 = sub_100006DA4(&qword_1000AFCF8);
    v53 = *(unsigned __int8 *)(v9 + 80);
    v54 = (v53 + 32) & ~v53;
    v55 = swift_allocObject(v52, v54 + *(_QWORD *)(v9 + 72), v53 | 7);
    *(_OWORD *)(v55 + 16) = xmmword_1000882D0;
    v56 = sub_10005FE20((uint64_t)v11, v55 + v54);
    static Date.rem_startOfTomorrow.getter(v56);
    static TimelineReloadPolicy.after(_:)(v14);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v86);
    v57 = sub_10005E300();
    Timeline.init(entries:policy:)(v55, v17, v8, v57);
    v58 = v11;
    if (qword_1000AC928 != -1)
      swift_once(&qword_1000AC928, sub_10005E348);
    v59 = type metadata accessor for Logger(0);
    sub_10000CF70(v59, (uint64_t)qword_1000AFCB8);
    v60 = v90;
    v61 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v90 + 16);
    v62 = v82;
    v33 = v87;
    v63 = v61((uint64_t)v82, v26, v87);
    v64 = Logger.logObject.getter(v63);
    v65 = static os_log_type_t.default.getter();
    v66 = v65;
    if (os_log_type_enabled(v64, v65))
    {
      v67 = swift_slowAlloc(22, -1);
      LODWORD(v83) = v66;
      v68 = v67;
      v69 = swift_slowAlloc(64, -1);
      v86 = (uint64_t)v26;
      v70 = v69;
      *(_DWORD *)v68 = 136446467;
      v91 = &type metadata for TTRNewWidgetProvider;
      v92 = v69;
      v71 = sub_100006DA4(&qword_1000AFCE8);
      v72 = String.init<A>(describing:)(&v91, v71);
      v84 = (uint64_t)v58;
      v74 = v73;
      v91 = (ValueMetadata *)sub_10007FA38(v72, v73, &v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, &v92, v68 + 4, v68 + 12);
      swift_bridgeObjectRelease(v74);
      *(_WORD *)(v68 + 12) = 2081;
      v75 = v85;
      v61((uint64_t)v85, v62, v33);
      v76 = String.init<A>(describing:)(v75, v33);
      v78 = v77;
      v91 = (ValueMetadata *)sub_10007FA38(v76, v77, &v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, &v92, v68 + 14, v68 + 22);
      swift_bridgeObjectRelease(v78);
      v48 = *(void (**)(char *, uint64_t))(v60 + 8);
      v48(v62, v33);
      _os_log_impl((void *)&_mh_execute_header, v64, (os_log_type_t)v83, "%{public}s: No timeline entries created placeholder {timeline %{private}s}", (uint8_t *)v68, 0x16u);
      swift_arrayDestroy(v70, 2, (char *)&type metadata for Any + 8);
      v26 = (char *)v86;
      swift_slowDealloc(v70, -1, -1);
      swift_slowDealloc(v68, -1, -1);

      v79 = v84;
    }
    else
    {

      v48 = *(void (**)(char *, uint64_t))(v60 + 8);
      v48(v62, v33);
      v79 = (uint64_t)v58;
    }
    sub_10005FE64(v79);
  }
  v89(v26);
  return ((uint64_t (*)(char *, uint64_t))v48)(v26, v33);
}

void sub_10005FCE4(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10005E3D8(*(_QWORD *)(v1 + 8), a1);
}

uint64_t sub_10005FCEC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_10005E714(a1, a2, a3, a4, *v4, v4[1]);
}

uint64_t sub_10005FCF4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_10005F110(a1, a2, a3, a4, *v4, v4[1]);
}

uint64_t sub_10005FCFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(async function pointer to IntentTimelineProvider.relevances()[1]);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000B208;
  return IntentTimelineProvider.relevances()(a1, a2, a3);
}

uint64_t sub_10005FD68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(async function pointer to IntentTimelineProvider.relevance()[1]);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000D198;
  return IntentTimelineProvider.relevance()(a1, a2, a3);
}

uint64_t sub_10005FDDC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10005FE10(uint64_t a1)
{
  uint64_t v1;

  return sub_10005F618(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(char *))(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_10005FE20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRNewWidgetTimelineEntry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005FE64(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRNewWidgetTimelineEntry(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10005FEA0()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_bridgeObjectRelease(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10005FEDC(uint64_t a1)
{
  uint64_t v1;

  return sub_10005EC2C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(_QWORD))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_10005FEF4(uint64_t a1)
{
  return sub_10005FF1C(a1, (SEL *)&selRef_tertiaryLabelColor, &qword_1000B9E70);
}

uint64_t sub_10005FF08(uint64_t a1)
{
  return sub_10005FF1C(a1, (SEL *)&selRef_systemFillColor, &qword_1000B9E78);
}

uint64_t sub_10005FF1C(uint64_t a1, SEL *a2, uint64_t *a3)
{
  id v4;
  uint64_t result;

  v4 = objc_msgSend((id)objc_opt_self(UIColor), *a2);
  result = Color.init(uiColor:)(v4);
  *a3 = result;
  return result;
}

unint64_t sub_10005FF64()
{
  unint64_t result;

  result = qword_1000AFD20;
  if (!qword_1000AFD20)
  {
    result = swift_getWitnessTable(&unk_10008B910, &type metadata for TodayNotificationEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_1000AFD20);
  }
  return result;
}

uint64_t sub_10005FFA8()
{
  return sub_1000095B4(&qword_1000AFD28, &qword_1000AFD30, (uint64_t)&protocol conformance descriptor for _IntentUpdatableEntityProperty<A, B, C>);
}

uint64_t sub_10005FFD4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v0 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10000CF88(v16, qword_1000B9E80);
  sub_10000CF70(v16, (uint64_t)qword_1000B9E80);
  v17 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x8000000100090310);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v19[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "Name of Today Notification type for App Intents setting extension", 65, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

uint64_t sub_1000601E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;

  v37 = a1;
  v1 = sub_100006DA4(&qword_1000AD0B0);
  __chkstk_darwin(v1);
  v38 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Locale(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LocalizedStringResource(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v36 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v35 = (char *)&v34 - v20;
  v21 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x8000000100090310);
  static Locale.current.getter(v21);
  v22 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v23(v9, enum case for LocalizedStringResource.BundleDescription.main(_:), v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, 0, 0, v12, v9, "Title for Today Notification settings display representation for App Intents", 76, 2);
  v24 = String.LocalizationValue.init(stringLiteral:)(0x1000000000000012, 0x800000010008E9D0);
  static Locale.current.getter(v24);
  v23(v9, v22, v6);
  v34 = v5;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, 0, 0, v12, v9, "Subtitle for reminders' control settings navigation for App Intents", 67, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v5, 0, 1, v16);
  v25 = v38;
  DisplayRepresentation.Image.init(appBundleIdentifier:)(0xD000000000000013, 0x800000010008EA40);
  v26 = type metadata accessor for DisplayRepresentation.Image(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 0, 1, v26);
  v27 = sub_100006DA4(&qword_1000AD0B8);
  v28 = swift_allocObject(v27, ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ 2 * *(_QWORD *)(v17 + 72), *(unsigned __int8 *)(v17 + 80) | 7);
  *(_OWORD *)(v28 + 16) = xmmword_1000895E0;
  v29 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000029, 0x8000000100090380);
  static Locale.current.getter(v29);
  v23(v9, v22, v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, 0, 0, v12, v9, "Synonyms keyword for Today Notification settings display representation for App Intents", 87, 2);
  v30 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x8000000100090410);
  static Locale.current.getter(v30);
  v23(v9, v22, v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, 0, 0, v12, v9, "Synonyms keyword for Today Notification settings display representation for App Intents", 87, 2);
  v31 = String.LocalizationValue.init(stringLiteral:)(0x10000000000000E6, 0x8000000100090430);
  static Locale.current.getter(v31);
  v23(v9, v22, v6);
  v32 = v36;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, 0, 0, v12, v9, "Description Text for Today Notification settings display representation for App Intents", 87, 2);
  return DisplayRepresentation.init(title:subtitle:image:synonyms:descriptionText:)(v35, v34, v38, v28, v32);
}

uint64_t sub_100060670(uint64_t a1)
{
  return sub_10000B860(a1, qword_1000B9E98, 0xD000000000000019, 0x8000000100090680);
}

uint64_t sub_100060694()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  v0 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v0);
  v2 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v21[0] - 8);
  __chkstk_darwin(v21[0]);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100006DA4(&qword_1000AD118);
  sub_10000CF88(v16, qword_1000B9EB0);
  v17 = sub_10000CF70(v16, (uint64_t)qword_1000B9EB0);
  v18 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000032, 0x8000000100090600);
  static Locale.current.getter(v18);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v21[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "TodayNotificationEntity Reminders App Intent title description", 62, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  IntentDescription.init(_:categoryName:searchKeywords:)(v15, v2, _swiftEmptyArrayStorage);
  v19 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v17, 0, 1, v19);
}

uint64_t sub_1000608D8()
{
  uint64_t result;

  result = swift_getKeyPath(&unk_10008C058);
  qword_1000B9EC8 = result;
  return result;
}

uint64_t sub_1000608FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  v4 = sub_100006DA4(&qword_1000AD0E8);
  v3[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100006DA4(&qword_1000AD0F0);
  v3[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100006DA4(&qword_1000AFEC8);
  v3[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IntentDialog(0);
  v3[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[13] = v8;
  v3[14] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006DA4(&qword_1000AFED0);
  v3[15] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[16] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[17] = swift_task_alloc(v11);
  v3[18] = swift_task_alloc(v11);
  return swift_task_switch(sub_100060A08, 0, 0);
}

uint64_t sub_100060A08()
{
  _QWORD *v0;
  _QWORD *v1;
  unint64_t v2;

  IntentParameter.wrappedValue.getter(v0 + 2);
  v1 = (_QWORD *)swift_task_alloc(async function pointer to IntentDialog._CapturedContent.init<>(entity:_:)[1]);
  v0[19] = v1;
  v2 = sub_100061964();
  *v1 = v0;
  v1[1] = sub_100060A88;
  return IntentDialog._CapturedContent.init<>(entity:_:)(v0[18], v0 + 2, sub_100060E18, 0, &type metadata for TodayNotificationEntity, v2);
}

uint64_t sub_100060A88()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 152));
  return swift_task_switch(sub_100060ADC, 0, 0);
}

uint64_t sub_100060ADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 24));
  v1 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 160) = v1;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 192));
  *(_BYTE *)(v0 + 193) = *(_BYTE *)(v0 + 192);
  if (qword_1000AC958 != -1)
    swift_once(&qword_1000AC958, sub_1000608D8);
  v2 = qword_1000B9EC8;
  *(_QWORD *)(v0 + 168) = qword_1000B9EC8;
  v3 = async function pointer to AppEntity._setValue<A, B, C>(_:for:)[1];
  swift_retain(v2);
  v4 = (_QWORD *)swift_task_alloc(v3);
  *(_QWORD *)(v0 + 176) = v4;
  v5 = sub_1000095B4(&qword_1000AFEA0, &qword_1000AFEA8, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v4 = v0;
  v4[1] = sub_100060BD8;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 193, v2, &type metadata for Bool, v5);
}

uint64_t sub_100060BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v2);
  swift_release(v3);
  swift_release(v4);
  if (v0)
    v5 = sub_10000A56C;
  else
    v5 = sub_100060C58;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_100060C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  v13 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v0 + 104);
  v15 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 80);
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 40));
  v8 = type metadata accessor for _GeneratedContentOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = type metadata accessor for _GeneratedContentFallback(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
  v10 = sub_10005FF64();
  v11 = sub_100061AC8();
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)(sub_100060E18, 0, v7, v6, &type metadata for TodayNotificationEntity.UpdateIntent_value);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v13);
  IntentDialog.init<A, B>(from:capturedContent:)(v5, v1, &type metadata for TodayNotificationEntity.UpdateIntent_value, &type metadata for TodayNotificationEntity, v10, v11);
  static IntentResult.result<A>(value:dialog:)(v0 + 40, v4, &type metadata for TodayNotificationEntity, v11);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v4, v15);
  swift_release(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v13);
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v7);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100060E1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_100006DA4(&qword_1000AFED8);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000AC958 != -1)
    swift_once(&qword_1000AC958, sub_1000608D8);
  v4 = qword_1000B9EC8;
  swift_retain(qword_1000B9EC8);
  static _DialogBuilderEntity.buildExpression<A, B>(_:)(v5);
  swift_release(v4);
  v6 = sub_100061AC8();
  v7 = sub_1000095B4(&qword_1000AFEE0, &qword_1000AFED8, (uint64_t)&protocol conformance descriptor for _NLGRepresentationEntity<A>);
  static _DialogBuilderEntity.buildBlock<A>(_:)(v3, &type metadata for TodayNotificationEntity, v0, v6, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

double sub_100060F24()
{
  double result;

  if (qword_1000AC958 != -1)
    swift_once(&qword_1000AC958, sub_1000608D8);
  *(_QWORD *)&result = swift_retain(qword_1000B9EC8).n128_u64[0];
  return result;
}

unint64_t sub_100060F68()
{
  unint64_t result;

  result = qword_1000AFD38;
  if (!qword_1000AFD38)
  {
    result = swift_getWitnessTable(&unk_10008B9A0, &type metadata for TodayNotificationEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_1000AFD38);
  }
  return result;
}

unint64_t sub_100060FB0()
{
  unint64_t result;

  result = qword_1000AFD40;
  if (!qword_1000AFD40)
  {
    result = swift_getWitnessTable(&unk_10008B9C8, &type metadata for TodayNotificationEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_1000AFD40);
  }
  return result;
}

uint64_t sub_100060FF4(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_100093718, 1) + 8);
}

uint64_t sub_100061018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10000BCB8(a1, a2, a3, (uint64_t (*)(void))sub_10005FF64);
}

uint64_t sub_100061024@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B568(&qword_1000AC948, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000B9E98, (uint64_t)sub_100060670, a1);
}

uint64_t sub_100061048@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1000AC950 != -1)
    swift_once(&qword_1000AC950, sub_100060694);
  v2 = sub_100006DA4(&qword_1000AD118);
  v3 = sub_10000CF70(v2, (uint64_t)qword_1000B9EB0);
  return sub_100009434(v3, a1, &qword_1000AD118);
}

uint64_t sub_1000610B4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_1000AFEC4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000D198;
  return sub_1000608FC(a1, v5, v4);
}

uint64_t sub_100061118@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_100062A64();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10006113C()
{
  return 0xD000000000000028;
}

unint64_t sub_10006115C()
{
  unint64_t result;

  result = qword_1000AFD50;
  if (!qword_1000AFD50)
  {
    result = swift_getWitnessTable(&unk_10008BA24, &type metadata for TodayNotificationEntity.TodayNotificationQuery);
    atomic_store(result, (unint64_t *)&qword_1000AFD50);
  }
  return result;
}

unint64_t sub_1000611A4()
{
  unint64_t result;

  result = qword_1000AFD58;
  if (!qword_1000AFD58)
  {
    result = swift_getWitnessTable(&unk_10008BB58, &type metadata for TodayNotificationEntity);
    atomic_store(result, (unint64_t *)&qword_1000AFD58);
  }
  return result;
}

uint64_t sub_1000611E8(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;

  v1[2] = a1;
  v2 = (*(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000AFEB0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[3] = swift_task_alloc(v2);
  v1[4] = swift_task_alloc(v2);
  return swift_task_switch(sub_100061254, 0, 0);
}

uint64_t sub_100061254()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  v1 = objc_msgSend((id)objc_opt_self(REMUserDefaults), "daemonUserDefaults");
  v2 = objc_msgSend(v1, "todayNotificationFireTime");

  if (v2)
  {
    static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v2);

    v3 = 0;
  }
  else
  {
    v3 = 1;
  }
  v5 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v6 = *(BOOL **)(v0 + 16);
  v7 = type metadata accessor for DateComponents(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v5, v3, 1, v7);
  sub_10006319C(v5, v4);
  v9 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) != 1;
  sub_10006315C(v4);
  *v6 = v9;
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100061364(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = type metadata accessor for DateComponents(0);
  *(_QWORD *)(v2 + 16) = v4;
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 24) = v5;
  *(_QWORD *)(v2 + 32) = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000AFEB0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v2 + 40) = swift_task_alloc(v6);
  *(_QWORD *)(v2 + 48) = swift_task_alloc(v6);
  *(_QWORD *)(v2 + 56) = swift_task_alloc(v6);
  *(_QWORD *)(v2 + 64) = swift_task_alloc(v6);
  *(_BYTE *)(v2 + 72) = *a2;
  return swift_task_switch(sub_100061418, 0, 0);
}

uint64_t sub_100061418()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  char v9;
  char v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  Class isa;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = (void *)objc_opt_self(REMUserDefaults);
  v2 = objc_msgSend(v1, "daemonUserDefaults");
  v3 = objc_msgSend(v2, "todayNotificationFireTime");

  v4 = *(_QWORD *)(v0 + 64);
  if (!v3)
  {
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 24) + 56);
    v8(*(_QWORD *)(v0 + 64), 1, 1, *(_QWORD *)(v0 + 16));
LABEL_6:
    v10 = *(_BYTE *)(v0 + 72);
    sub_10006315C(*(_QWORD *)(v0 + 64));
    if ((v10 & 1) != 0)
    {
      v11 = objc_msgSend((id)objc_opt_self(REMDaemonUserDefaults), "todayNotificationFireTimeFromStorageNumber:", 0);
      if (v11)
      {
        v12 = v11;
        static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v11);

        v13 = 0;
      }
      else
      {
        v13 = 1;
      }
      v24 = *(_QWORD *)(v0 + 48);
      v23 = *(_QWORD *)(v0 + 56);
      v8(v24, v13, 1, *(_QWORD *)(v0 + 16));
      sub_10006319C(v24, v23);
      goto LABEL_12;
    }
LABEL_9:
    v14 = *(_QWORD *)(v0 + 56);
    v15 = *(_QWORD *)(v0 + 64);
    v17 = *(_QWORD *)(v0 + 40);
    v16 = *(_QWORD *)(v0 + 48);
    v18 = *(_QWORD *)(v0 + 32);
    v19 = type metadata accessor for _PrebuiltAppIntentError(0);
    v20 = sub_1000631E4();
    swift_allocError(v19, v20, 0, 0);
    v21 = static _UnrecoverableError.actionNotAllowed.getter();
    swift_willThrow(v21);
    swift_task_dealloc(v15);
    swift_task_dealloc(v14);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
  v6 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 16);
  static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v3);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v4, v5, v7);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v8(v4, 0, 1, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v7) == 1)
    goto LABEL_6;
  v9 = *(_BYTE *)(v0 + 72);
  sub_10006315C(*(_QWORD *)(v0 + 64));
  if ((v9 & 1) != 0)
    goto LABEL_9;
  v8(*(_QWORD *)(v0 + 56), 1, 1, *(_QWORD *)(v0 + 16));
LABEL_12:
  v25 = *(_QWORD *)(v0 + 56);
  v26 = *(_QWORD *)(v0 + 40);
  v27 = *(_QWORD *)(v0 + 16);
  v28 = *(_QWORD *)(v0 + 24);
  v29 = objc_msgSend(v1, "daemonUserDefaults");
  sub_100009434(v25, v26, &qword_1000AFEB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    isa = 0;
  }
  else
  {
    v31 = *(_QWORD *)(v0 + 40);
    v32 = *(_QWORD *)(v0 + 16);
    v33 = *(_QWORD *)(v0 + 24);
    isa = DateComponents._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
  }
  v35 = *(_QWORD *)(v0 + 56);
  v34 = *(_QWORD *)(v0 + 64);
  v37 = *(_QWORD *)(v0 + 40);
  v36 = *(_QWORD *)(v0 + 48);
  v38 = *(_QWORD *)(v0 + 32);
  objc_msgSend(v29, "setTodayNotificationFireTime:", isa);

  sub_10006315C(v35);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_10006170C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = type metadata accessor for LocalizedStringResource(0);
  *(_QWORD *)(v1 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100061764, 0, 0);
}

uint64_t sub_100061764()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_100006DA4(&qword_1000AFD30);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000012, 0x8000000100090310);
  v3 = sub_1000095B4(&qword_1000AFEA0, &qword_1000AFEA8, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v2 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v1, &unk_1000AFE90, 0, &unk_1000AFE98, 0, &type metadata for TodayNotificationEntity.UpdateIntent_value, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_100061824()
{
  unint64_t result;

  result = qword_1000AFD68;
  if (!qword_1000AFD68)
  {
    result = swift_getWitnessTable(&unk_10008BA5C, &type metadata for TodayNotificationEntity.TodayNotificationQuery);
    atomic_store(result, (unint64_t *)&qword_1000AFD68);
  }
  return result;
}

uint64_t sub_100061868(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to _UniqueEntityQuery.allEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_100061BE4();
  *v4 = v2;
  v4[1] = sub_10000AE40;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_1000618D4()
{
  unint64_t result;

  result = qword_1000AFD78;
  if (!qword_1000AFD78)
  {
    result = swift_getWitnessTable(&unk_10008BAB4, &type metadata for TodayNotificationEntity.TodayNotificationQuery);
    atomic_store(result, (unint64_t *)&qword_1000AFD78);
  }
  return result;
}

unint64_t sub_10006191C()
{
  unint64_t result;

  result = qword_1000AFD80;
  if (!qword_1000AFD80)
  {
    result = swift_getWitnessTable(&unk_10008BB14, &type metadata for TodayNotificationEntity.TodayNotificationQuery);
    atomic_store(result, (unint64_t *)&qword_1000AFD80);
  }
  return result;
}

unint64_t sub_100061964()
{
  unint64_t result;

  result = qword_1000AFD88[0];
  if (!qword_1000AFD88[0])
  {
    result = swift_getWitnessTable(&unk_10008BBB8, &type metadata for TodayNotificationEntity);
    atomic_store(result, qword_1000AFD88);
  }
  return result;
}

uint64_t sub_1000619A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to _UniqueEntityQuery.entities(for:)[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_100061BE4();
  *v5 = v2;
  v5[1] = sub_10000AFE8;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100061A14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to _UniqueEntityQuery.suggestedEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_100061BE4();
  *v4 = v2;
  v4[1] = sub_10000D19C;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_100061A80()
{
  unint64_t result;

  result = qword_1000AFDA0;
  if (!qword_1000AFDA0)
  {
    result = swift_getWitnessTable(&unk_10008BB3C, &type metadata for TodayNotificationEntity.TodayNotificationQuery);
    atomic_store(result, (unint64_t *)&qword_1000AFDA0);
  }
  return result;
}

unint64_t sub_100061AC8()
{
  unint64_t result;

  result = qword_1000AFDA8;
  if (!qword_1000AFDA8)
  {
    result = swift_getWitnessTable(&unk_10008BD00, &type metadata for TodayNotificationEntity);
    atomic_store(result, (unint64_t *)&qword_1000AFDA8);
  }
  return result;
}

unint64_t sub_100061B10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AFDB0;
  if (!qword_1000AFDB0)
  {
    v1 = sub_100007258(qword_1000AFDB8);
    sub_100061AC8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1000AFDB0);
  }
  return result;
}

uint64_t sub_100061B74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_100061824();
  *v5 = v2;
  v5[1] = sub_10000B208;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_100061BE4()
{
  unint64_t result;

  result = qword_1000AFDD0;
  if (!qword_1000AFDD0)
  {
    result = swift_getWitnessTable(&unk_10008B9E4, &type metadata for TodayNotificationEntity.TodayNotificationQuery);
    atomic_store(result, (unint64_t *)&qword_1000AFDD0);
  }
  return result;
}

uint64_t sub_100061C28()
{
  uint64_t v0;

  v0 = qword_1000AFD00;
  swift_bridgeObjectRetain(off_1000AFD08);
  return v0;
}

unint64_t sub_100061C60()
{
  unint64_t result;

  result = qword_1000AFDD8;
  if (!qword_1000AFDD8)
  {
    result = swift_getWitnessTable(&unk_10008BC10, &type metadata for TodayNotificationEntity);
    atomic_store(result, (unint64_t *)&qword_1000AFDD8);
  }
  return result;
}

unint64_t sub_100061CA8()
{
  unint64_t result;

  result = qword_1000AFDE0;
  if (!qword_1000AFDE0)
  {
    result = swift_getWitnessTable(&unk_10008BC48, &type metadata for TodayNotificationEntity);
    atomic_store(result, (unint64_t *)&qword_1000AFDE0);
  }
  return result;
}

unint64_t sub_100061CF0()
{
  unint64_t result;

  result = qword_1000AFDE8;
  if (!qword_1000AFDE8)
  {
    result = swift_getWitnessTable(&unk_10008BC78, &type metadata for TodayNotificationEntity);
    atomic_store(result, (unint64_t *)&qword_1000AFDE8);
  }
  return result;
}

unint64_t sub_100061D38()
{
  unint64_t result;

  result = qword_1000AFDF0;
  if (!qword_1000AFDF0)
  {
    result = swift_getWitnessTable(&unk_10008BCB0, &type metadata for TodayNotificationEntity);
    atomic_store(result, (unint64_t *)&qword_1000AFDF0);
  }
  return result;
}

unint64_t sub_100061D80()
{
  unint64_t result;

  result = qword_1000AFDF8;
  if (!qword_1000AFDF8)
  {
    result = swift_getWitnessTable(&unk_10008BCD8, &type metadata for TodayNotificationEntity);
    atomic_store(result, (unint64_t *)&qword_1000AFDF8);
  }
  return result;
}

unint64_t sub_100061DC8()
{
  unint64_t result;

  result = qword_1000AFE00;
  if (!qword_1000AFE00)
  {
    result = swift_getWitnessTable(&unk_10008BD58, &type metadata for TodayNotificationEntity);
    atomic_store(result, (unint64_t *)&qword_1000AFE00);
  }
  return result;
}

uint64_t sub_100061E0C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_1000611A4();
  result = _UniqueEntity.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_100061E48@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B568(&qword_1000AC940, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000B9E80, (uint64_t)sub_10005FFD4, a1);
}

uint64_t sub_100061E6C()
{
  return sub_1000095B4(&qword_1000AFE08, &qword_1000AFE10, (uint64_t)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_100061E98(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100061964();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100061ED4()
{
  unint64_t result;

  result = qword_1000AFE18;
  if (!qword_1000AFE18)
  {
    result = swift_getWitnessTable(&unk_10008BD88, &type metadata for TodayNotificationEntity);
    atomic_store(result, (unint64_t *)&qword_1000AFE18);
  }
  return result;
}

uint64_t sub_100061F1C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100061DC8();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100061F58()
{
  unint64_t result;

  result = qword_1000AFE20;
  if (!qword_1000AFE20)
  {
    result = swift_getWitnessTable(&unk_10008BDE8, &type metadata for TodayNotificationEntity);
    atomic_store(result, (unint64_t *)&qword_1000AFE20);
  }
  return result;
}

uint64_t sub_100061F9C(uint64_t a1)
{
  unint64_t v2;

  if (qword_1000AC860 != -1)
    swift_once(&qword_1000AC860, sub_10001D4EC);
  String.append(_:)((Swift::String)xmmword_1000B9DF8);
  v2 = sub_100061964();
  return _EntityURLRepresentation.init(_:)(0xD000000000000041, 0x800000010008E910, a1, v2);
}

uint64_t sub_100062040(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_100063118();
  v4 = _URLRepresentableEntity.urlRepresentationParameter.getter(a1, v3);
  return sub_10000CFC8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8), v1, v4, v5);
}

unint64_t sub_10006208C()
{
  unint64_t result;

  result = qword_1000AFE30;
  if (!qword_1000AFE30)
  {
    result = swift_getWitnessTable(&unk_10008BEE0, &type metadata for OpenTodayNotificationDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000AFE30);
  }
  return result;
}

uint64_t sub_1000620D0(uint64_t a1)
{
  return sub_10000B860(a1, qword_1000B9ED0, 0xD00000000000001FLL, 0x80000001000902F0);
}

uint64_t sub_1000620F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000044, 0x8000000100090260);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "OpenTodayNotificationDeepLink Reminders App Intent description", 62, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t sub_10006230C()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

unint64_t sub_100062340()
{
  unint64_t result;

  result = qword_1000AFE38;
  if (!qword_1000AFE38)
  {
    result = swift_getWitnessTable(&unk_10008BF08, &type metadata for OpenTodayNotificationDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000AFE38);
  }
  return result;
}

uint64_t sub_100062384(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100063090();
  v5 = sub_100063118();
  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_1000623D8()
{
  uint64_t v0;

  v0 = qword_1000AFD10;
  swift_bridgeObjectRetain(off_1000AFD18);
  return v0;
}

unint64_t sub_100062410()
{
  unint64_t result;

  result = qword_1000AFE40;
  if (!qword_1000AFE40)
  {
    result = swift_getWitnessTable(&unk_10008BF98, &type metadata for OpenTodayNotificationDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000AFE40);
  }
  return result;
}

unint64_t sub_100062458()
{
  unint64_t result;

  result = qword_1000AFE48;
  if (!qword_1000AFE48)
  {
    result = swift_getWitnessTable(&unk_10008BFC0, &type metadata for OpenTodayNotificationDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000AFE48);
  }
  return result;
}

uint64_t sub_10006249C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10000BCB8(a1, a2, a3, (uint64_t (*)(void))sub_100062340);
}

uint64_t sub_1000624A8@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B568(&qword_1000AC960, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000B9ED0, (uint64_t)sub_1000620D0, a1);
}

uint64_t sub_1000624D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to _URLRepresentableIntent<>.perform()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_100063090();
  v7 = sub_1000630D4();
  v8 = sub_100063118();
  *v5 = v2;
  v5[1] = sub_10000BDBC;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_10006255C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100062D88();
  *a1 = result;
  return result;
}

uint64_t sub_100062580(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100062340();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenTodayNotificationDeepLink()
{
  return &type metadata for OpenTodayNotificationDeepLink;
}

ValueMetadata *type metadata accessor for TodayNotificationEntity.TodayNotificationQuery()
{
  return &type metadata for TodayNotificationEntity.TodayNotificationQuery;
}

ValueMetadata *type metadata accessor for TodayNotificationEntity()
{
  return &type metadata for TodayNotificationEntity;
}

ValueMetadata *type metadata accessor for TodayNotificationEntity.UpdateIntent_value()
{
  return &type metadata for TodayNotificationEntity.UpdateIntent_value;
}

uint64_t sub_1000625E8()
{
  return sub_1000095B4(&qword_1000AFE58, &qword_1000AFE60, (uint64_t)&protocol conformance descriptor for <> IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100062614()
{
  return sub_1000095B4(&qword_1000AFE68, &qword_1000AFE60, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100062640@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t OpaqueTypeConformance2;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v47 = a1;
  v1 = sub_100006DA4(&qword_1000AD120);
  v40 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100006DA4(&qword_1000AD128);
  v42 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100006DA4(&qword_1000AD130);
  v8 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  v44 = v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100006DA4(&qword_1000AD138);
  v12 = *(_QWORD *)(v11 - 8);
  v45 = v11;
  v46 = v12;
  __chkstk_darwin(v11);
  v41 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_10008C058);
  v15 = sub_100006DA4(&qword_1000AD140);
  v16 = sub_100006DA4(&qword_1000AD148);
  v17 = sub_1000611A4();
  v18 = sub_1000095B4(&qword_1000AD150, &qword_1000AD140, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v19 = sub_10000D050();
  ControlToggle.init<A, B, C, D, E, F, G>(kind:intentUpdatableProperty:title:subtitle:value:)(0xD000000000000034, 0x80000001000906A0, KeyPath, sub_100062A04, 0, sub_10000C498, 0, sub_10000C630, 0, v15, &type metadata for Text, v16, v17, v18, &protocol witness table for Text, v19);
  v20 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000017, 0x80000001000906E0);
  v22 = v21;
  LOBYTE(v16) = v23;
  v25 = v24;
  v26 = sub_1000095B4(&qword_1000AD160, &qword_1000AD120, (uint64_t)&protocol conformance descriptor for ControlToggle<A>);
  WidgetConfiguration.configurationDisplayName(_:)(v20, v22, v16 & 1, v25, v1, v26);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v22);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v3, v1);
  v27 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000044, 0x8000000100090700);
  v29 = v28;
  LOBYTE(v3) = v30;
  v32 = v31;
  v48 = v1;
  v49 = v26;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v48, &opaque type descriptor for <<opaque return type of WidgetConfiguration.configurationDisplayName(_:)>>, 1);
  WidgetConfiguration.description(_:)(v27, v29, v3 & 1, v32, v4, OpaqueTypeConformance2);
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(v29);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v4);
  v48 = v4;
  v49 = OpaqueTypeConformance2;
  v34 = swift_getOpaqueTypeConformance2(&v48, &opaque type descriptor for <<opaque return type of WidgetConfiguration.description(_:)>>, 1);
  v35 = v41;
  v36 = v43;
  WidgetConfiguration.disablesControlStateCaching()(v43, v34);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v36);
  v48 = v36;
  v49 = v34;
  v37 = swift_getOpaqueTypeConformance2(&v48, &opaque type descriptor for <<opaque return type of WidgetConfiguration.disablesControlStateCaching()>>, 1);
  v38 = v45;
  WidgetConfiguration.hiddenControl()(v45, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v35, v38);
}

uint64_t sub_100062A04()
{
  uint64_t v0;

  v0 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000012, 0x8000000100090310);
  return Label<>.init(_:systemImage:)(v0);
}

uint64_t sub_100062A64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  char *v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v25;
  void (*v26)(char *);
  unsigned int v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  char *v30;
  char v31;
  uint64_t v32;

  v0 = sub_100006DA4(&qword_1000AD088);
  __chkstk_darwin(v0);
  v30 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for InputConnectionBehavior(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v29 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100006DA4(&qword_1000AD070);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v25 - v9;
  v11 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LocalizedStringResource(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100006DA4(&qword_1000AFE70);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001CLL, 0x8000000100090200);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  v32 = 0;
  v18 = type metadata accessor for IntentDialog(0);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v10, 1, 1, v18);
  v19(v8, 1, 1, v18);
  v27 = enum case for InputConnectionBehavior.default(_:);
  v26 = *(void (**)(char *))(v3 + 104);
  v20 = v29;
  v26(v29);
  v21 = sub_100061964();
  v25 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v17, v13, &v32, v10, v8, v20, v21);
  sub_100006DA4(&qword_1000AD090);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000032, 0x8000000100090220);
  v28(v13, 1, 1, v14);
  v31 = 2;
  v22 = type metadata accessor for Bool.IntentDisplayName(0);
  v23 = v30;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v30, 1, 1, v22);
  v19(v10, 1, 1, v18);
  ((void (*)(char *, _QWORD, uint64_t))v26)(v20, v27, v2);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v17, v13, &v31, v23, v10, v20);
  return v25;
}

uint64_t sub_100062D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  char *v27;
  char *v28;
  unint64_t v29;
  _QWORD v31[2];
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v34 = *(_QWORD *)(v0 - 8);
  v35 = v0;
  __chkstk_darwin(v0);
  v33 = (char *)v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100006DA4(&qword_1000AD070);
  v3 = __chkstk_darwin(v2);
  v32 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (char *)v31 - v5;
  v7 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v7);
  v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Locale(0);
  __chkstk_darwin(v14);
  v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v17);
  v19 = (char *)v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for LocalizedStringResource(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[1] = sub_100006DA4(&qword_1000AFE70);
  v24 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x80000001000901B0);
  static Locale.current.getter(v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0, 0, v16, v13, "Open Today Notification deepLink parameter", 42, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v9, 1, 1, v20);
  v36 = 0;
  v25 = type metadata accessor for IntentDialog(0);
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v26(v6, 1, 1, v25);
  v27 = v32;
  v26(v32, 1, 1, v25);
  v28 = v33;
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v33, enum case for InputConnectionBehavior.default(_:), v35);
  v29 = sub_100061964();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v23, v9, &v36, v6, v27, v28, v29);
}

unint64_t sub_100063090()
{
  unint64_t result;

  result = qword_1000AFE78;
  if (!qword_1000AFE78)
  {
    result = swift_getWitnessTable(&unk_10008BE10, &type metadata for OpenTodayNotificationDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000AFE78);
  }
  return result;
}

unint64_t sub_1000630D4()
{
  unint64_t result;

  result = qword_1000AFE80;
  if (!qword_1000AFE80)
  {
    result = swift_getWitnessTable(&unk_10008BE60, &type metadata for OpenTodayNotificationDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000AFE80);
  }
  return result;
}

unint64_t sub_100063118()
{
  unint64_t result;

  result = qword_1000AFE88;
  if (!qword_1000AFE88)
  {
    result = swift_getWitnessTable(&unk_10008BDB0, &type metadata for TodayNotificationEntity);
    atomic_store(result, (unint64_t *)&qword_1000AFE88);
  }
  return result;
}

uint64_t sub_10006315C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006DA4(&qword_1000AFEB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10006319C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006DA4(&qword_1000AFEB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000631E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000AFEB8;
  if (!qword_1000AFEB8)
  {
    v1 = type metadata accessor for _PrebuiltAppIntentError(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for _PrebuiltAppIntentError, v1);
    atomic_store(result, &qword_1000AFEB8);
  }
  return result;
}

uint64_t sub_10006322C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

ValueMetadata *type metadata accessor for TodayNotificationToggleControl()
{
  return &type metadata for TodayNotificationToggleControl;
}

uint64_t sub_100063248(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100093778, 1);
}

uint64_t sub_100063258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v0 = sub_100007258(&qword_1000AD138);
  v1 = sub_100007258(&qword_1000AD130);
  v2 = sub_100007258(&qword_1000AD128);
  v7 = sub_100007258(&qword_1000AD120);
  v8 = sub_1000095B4(&qword_1000AD160, &qword_1000AD120, (uint64_t)&protocol conformance descriptor for ControlToggle<A>);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of WidgetConfiguration.configurationDisplayName(_:)>>, 1);
  v7 = v2;
  v8 = OpaqueTypeConformance2;
  v4 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of WidgetConfiguration.description(_:)>>, 1);
  v7 = v1;
  v8 = v4;
  v5 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of WidgetConfiguration.disablesControlStateCaching()>>, 1);
  v7 = v0;
  v8 = v5;
  return swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of WidgetConfiguration.hiddenControl()>>, 1);
}

uint64_t sub_100063344(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v7 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v24 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v8);
  v12 = (char *)v20 - v11;
  v13 = _swiftEmptyArrayStorage;
  v25 = _swiftEmptyArrayStorage;
  v22 = *(_QWORD *)(a3 + 16);
  if (v22)
  {
    v14 = 0;
    v15 = _swiftEmptyArrayStorage;
    v20[1] = a2;
    v21 = a3;
    v20[0] = a1;
    while (v14 < *(_QWORD *)(a3 + 16))
    {
      v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      v13 = *(_QWORD **)(v24 + 72);
      sub_1000072AC(a3 + v16 + (_QWORD)v13 * v14, (uint64_t)v12, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      v17 = a1(v12);
      if (v3)
      {
        sub_100007EB4((uint64_t)v12, type metadata accessor for TTRNewWidgetViewModel.Reminder);
        swift_release(v15);
        swift_bridgeObjectRelease(a3);
        return (uint64_t)v13;
      }
      if ((v17 & 1) != 0)
      {
        sub_100007EF0((uint64_t)v12, v23, type metadata accessor for TTRNewWidgetViewModel.Reminder);
        if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
          sub_1000818D4(0, v15[2] + 1, 1);
        v15 = v25;
        v19 = v25[2];
        v18 = v25[3];
        if (v19 >= v18 >> 1)
        {
          sub_1000818D4(v18 > 1, v19 + 1, 1);
          v15 = v25;
        }
        v15[2] = v19 + 1;
        result = sub_100007EF0(v23, (uint64_t)v15 + v16 + v19 * (_QWORD)v13, type metadata accessor for TTRNewWidgetViewModel.Reminder);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        result = sub_100007EB4((uint64_t)v12, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      }
      if (v22 == ++v14)
      {
        v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease(a3);
    return (uint64_t)v13;
  }
  return result;
}

_QWORD *sub_10006355C(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  void (*v18)(uint64_t *);
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  v4 = v3;
  v18 = a1;
  v19 = a2;
  v6 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    v21 = _swiftEmptyArrayStorage;
    sub_1000818D4(0, v10, 0);
    v11 = v21;
    v12 = (uint64_t *)(a3 + 32);
    while (1)
    {
      v13 = *v12++;
      v20 = v13;
      v18(&v20);
      if (v4)
        break;
      v4 = 0;
      v21 = v11;
      v15 = v11[2];
      v14 = v11[3];
      if (v15 >= v14 >> 1)
      {
        sub_1000818D4(v14 > 1, v15 + 1, 1);
        v11 = v21;
      }
      v11[2] = v15 + 1;
      sub_100007EF0((uint64_t)v9, (uint64_t)v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v15, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      if (!--v10)
        return v11;
    }
    swift_release(v11);
  }
  return v11;
}

_QWORD *sub_1000636B0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(BOOL, unint64_t, uint64_t), uint64_t (*a7)(_QWORD))
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  void (*v24)(BOOL, unint64_t, uint64_t);
  uint64_t v25;
  uint64_t (*v26)(_QWORD);
  void (*v27)(uint64_t);
  uint64_t v28;
  _QWORD *v29;

  v10 = v7;
  v27 = a1;
  v28 = a2;
  v26 = a5;
  v12 = a5(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v23 - v14;
  v16 = *(_QWORD *)(a3 + 16);
  v17 = _swiftEmptyArrayStorage;
  if (v16)
  {
    v29 = _swiftEmptyArrayStorage;
    v24 = a6;
    a6(0, v16, 0);
    v17 = v29;
    v18 = *(_QWORD *)(a7(0) - 8);
    v19 = a3 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v25 = *(_QWORD *)(v18 + 72);
    while (1)
    {
      v27(v19);
      if (v10)
        break;
      v10 = 0;
      v29 = v17;
      v21 = v17[2];
      v20 = v17[3];
      if (v21 >= v20 >> 1)
      {
        v24(v20 > 1, v21 + 1, 1);
        v17 = v29;
      }
      v17[2] = v21 + 1;
      sub_100007EF0((uint64_t)v15, (uint64_t)v17+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v21, v26);
      v19 += v25;
      if (!--v16)
        return v17;
    }
    swift_release(v17);
  }
  return v17;
}

void sub_100063834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *Configuration;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  char *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t Subtasks;
  char *v54;
  void (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  void (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  void (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  void (*v96)(char *, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  NSObject *v109;
  os_log_type_t v110;
  _BOOL4 v111;
  uint64_t v112;
  uint8_t *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  void (*v117)(char *, uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  NSObject *v129;
  os_log_type_t v130;
  uint8_t *v131;
  const char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  NSObject *v141;
  os_log_type_t v142;
  uint8_t *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;

  v152 = a3;
  v153 = a6;
  v150 = a2;
  v151 = a5;
  v149 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v149 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v149);
  v11 = (char *)&v144 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Configuration = (int *)type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  __chkstk_darwin(Configuration);
  v14 = (char *)&v144 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for REMNavigationSpecifier(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (id *)((char *)&v144 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = a1;
  v21 = v20;
  (*(void (**)(id *, uint64_t, uint64_t))(v16 + 16))(v18, v19, v20);
  v22 = (*(uint64_t (**)(id *, uint64_t))(v16 + 88))(v18, v21);
  if (v22 == enum case for REMNavigationSpecifier.account(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v18, v21);

    if (qword_1000AC968 != -1)
      swift_once(&qword_1000AC968, sub_1000658B8);
    v23 = type metadata accessor for Logger(0);
    v24 = sub_10000CF70(v23, (uint64_t)qword_1000AFEE8);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Widget presenter: unable to display accounts", v27, 2u);
      swift_slowDealloc(v27, -1, -1);
    }

    v28 = (char *)v18 + *(int *)(sub_100006DA4(&qword_1000ADA40) + 48);
    v29 = type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier(0);
    goto LABEL_12;
  }
  if (v22 == enum case for REMNavigationSpecifier.list(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v18, v21);
    v30 = *v18;
    v28 = (char *)v18 + *(int *)(sub_100006DA4(&qword_1000ADA28) + 48);
    sub_100065B60(v30, v150, v152, a4, v151, v153, (uint64_t)&unk_1000A9660, (uint64_t)sub_10006C438, (void (*)(id, char *, uint64_t, char *))sub_10004C9B8);
LABEL_11:

    v29 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
LABEL_12:
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
    return;
  }
  if (v22 == enum case for REMNavigationSpecifier.customSmartList(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v18, v21);
    v30 = *v18;
    v28 = (char *)v18 + *(int *)(sub_100006DA4(&qword_1000ADA28) + 48);
    sub_100065B60(v30, v150, v152, a4, v151, v153, (uint64_t)&unk_1000A9728, (uint64_t)sub_10006FA48, (void (*)(id, char *, uint64_t, char *))sub_10004DD54);
    goto LABEL_11;
  }
  if (v22 == enum case for REMNavigationSpecifier.newList(_:))
  {
    if (qword_1000AC968 != -1)
      swift_once(&qword_1000AC968, sub_1000658B8);
    v31 = type metadata accessor for Logger(0);
    v32 = sub_10000CF70(v31, (uint64_t)qword_1000AFEE8);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v33, v34))
      goto LABEL_19;
    v35 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v35 = 0;
    v36 = "Widget presenter: unable to display newList";
LABEL_18:
    _os_log_impl((void *)&_mh_execute_header, v33, v34, v36, v35, 2u);
    swift_slowDealloc(v35, -1, -1);
LABEL_19:

    (*(void (**)(id *, uint64_t))(v16 + 8))(v18, v21);
    return;
  }
  if (v22 == enum case for REMNavigationSpecifier.reminder(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v18, v21);

    if (qword_1000AC968 != -1)
      swift_once(&qword_1000AC968, sub_1000658B8);
    v37 = type metadata accessor for Logger(0);
    v38 = sub_10000CF70(v37, (uint64_t)qword_1000AFEE8);
    v39 = Logger.logObject.getter(v38);
    v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "Widget presenter: unable to display individual reminders", v41, 2u);
      swift_slowDealloc(v41, -1, -1);
    }

    v28 = (char *)v18 + *(int *)(sub_100006DA4(&qword_1000ADA30) + 48);
    v29 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
    goto LABEL_12;
  }
  if (v22 == enum case for REMNavigationSpecifier.section(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v18, v21);

    if (qword_1000AC968 != -1)
      swift_once(&qword_1000AC968, sub_1000658B8);
    v42 = type metadata accessor for Logger(0);
    v43 = sub_10000CF70(v42, (uint64_t)qword_1000AFEE8);
    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v44, v45))
      goto LABEL_37;
    v46 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v46 = 0;
    v47 = "Widget presenter: unable to display individual sections";
LABEL_36:
    _os_log_impl((void *)&_mh_execute_header, v44, v45, v47, v46, 2u);
    swift_slowDealloc(v46, -1, -1);
LABEL_37:

    v28 = (char *)v18 + *(int *)(sub_100006DA4(&qword_1000ADA38) + 48);
    v29 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
    goto LABEL_12;
  }
  if (v22 == enum case for REMNavigationSpecifier.smartListSection(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v18, v21);

    if (qword_1000AC968 != -1)
      swift_once(&qword_1000AC968, sub_1000658B8);
    v48 = type metadata accessor for Logger(0);
    v49 = sub_10000CF70(v48, (uint64_t)qword_1000AFEE8);
    v44 = Logger.logObject.getter(v49);
    v45 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v44, v45))
      goto LABEL_37;
    v46 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v46 = 0;
    v47 = "Widget presenter: unable to display individual smart list sections";
    goto LABEL_36;
  }
  if (v22 == enum case for REMNavigationSpecifier.root(_:))
  {
    if (qword_1000AC968 != -1)
      swift_once(&qword_1000AC968, sub_1000658B8);
    v50 = type metadata accessor for Logger(0);
    v51 = sub_10000CF70(v50, (uint64_t)qword_1000AFEE8);
    v33 = Logger.logObject.getter(v51);
    v34 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v33, v34))
      goto LABEL_19;
    v35 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v35 = 0;
    v36 = "Widget presenter: unable to display root";
    goto LABEL_18;
  }
  v147 = v14;
  v148 = v21;
  if (v22 == enum case for REMNavigationSpecifier.today(_:))
  {
    v146 = *(_QWORD *)(v6 + 16);
    sub_100065F3C(a4, &v14[Configuration[5]]);
    v145 = v6 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_fetchSubtasks;
    v52 = &v14[Configuration[6]];
    Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(Subtasks - 8) + 16))(v52, v145, Subtasks);
    v54 = &v14[Configuration[7]];
    v55 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v56 = v149;
    v55(v54, a4, v149);
    v57 = v150;
    *(_QWORD *)v14 = v150;
    v58 = v57;
    v55((char *)&v144 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v56);
    v59 = *(unsigned __int8 *)(v9 + 80);
    v60 = (v59 + 48) & ~v59;
    v61 = (v10 + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
    v62 = swift_allocObject(&unk_1000A9610, v61 + 16, v59 | 7);
    *(_QWORD *)(v62 + 16) = v6;
    *(_BYTE *)(v62 + 24) = 0;
    *(_QWORD *)(v62 + 32) = v58;
    v63 = v152;
    *(_QWORD *)(v62 + 40) = v152;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v62 + v60, v11, v56);
    v64 = (_QWORD *)(v62 + v61);
    v65 = v153;
    *v64 = v151;
    v64[1] = v65;
    swift_retain(v6);
    swift_bridgeObjectRetain(v63);
    swift_retain(v65);
    v66 = 0;
LABEL_51:
    v106 = (uint64_t)v147;
    sub_10004EE68(v66, (uint64_t)v147, (uint64_t)sub_10006C300, v62);
    swift_release(v62);
    sub_100007EB4(v106, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
LABEL_52:
    (*(void (**)(id *, uint64_t))(v16 + 8))(v18, v148);
    return;
  }
  if (v22 == enum case for REMNavigationSpecifier.scheduled(_:))
  {
    v146 = *(_QWORD *)(v6 + 16);
    sub_100065F3C(a4, &v14[Configuration[5]]);
    v145 = v6 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_fetchSubtasks;
    v67 = &v14[Configuration[6]];
    v68 = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v67, v145, v68);
    v69 = &v14[Configuration[7]];
    v70 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v71 = v149;
    v70(v69, a4, v149);
    v72 = v150;
    *(_QWORD *)v14 = v150;
    v73 = v72;
    v70((char *)&v144 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v71);
    v74 = *(unsigned __int8 *)(v9 + 80);
    v75 = (v74 + 48) & ~v74;
    v76 = (v10 + v75 + 7) & 0xFFFFFFFFFFFFFFF8;
    v62 = swift_allocObject(&unk_1000A95E8, v76 + 16, v74 | 7);
    *(_QWORD *)(v62 + 16) = v6;
    *(_BYTE *)(v62 + 24) = 1;
    *(_QWORD *)(v62 + 32) = v73;
    v77 = v152;
    *(_QWORD *)(v62 + 40) = v152;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v62 + v75, v11, v71);
    v78 = (_QWORD *)(v62 + v76);
    v79 = v153;
    *v78 = v151;
    v78[1] = v79;
    swift_retain(v6);
    swift_bridgeObjectRetain(v77);
    swift_retain(v79);
    v66 = 1;
    goto LABEL_51;
  }
  if (v22 == enum case for REMNavigationSpecifier.allReminders(_:))
  {
    v146 = *(_QWORD *)(v6 + 16);
    sub_100065F3C(a4, &v14[Configuration[5]]);
    v145 = v6 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_fetchSubtasks;
    v80 = &v14[Configuration[6]];
    v81 = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v80, v145, v81);
    v82 = &v14[Configuration[7]];
    v83 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v84 = v149;
    v83(v82, a4, v149);
    v85 = v150;
    *(_QWORD *)v14 = v150;
    v86 = v85;
    v83((char *)&v144 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v84);
    v87 = *(unsigned __int8 *)(v9 + 80);
    v88 = (v87 + 48) & ~v87;
    v89 = (v10 + v88 + 7) & 0xFFFFFFFFFFFFFFF8;
    v62 = swift_allocObject(&unk_1000A95C0, v89 + 16, v87 | 7);
    *(_QWORD *)(v62 + 16) = v6;
    *(_BYTE *)(v62 + 24) = 2;
    *(_QWORD *)(v62 + 32) = v86;
    v90 = v152;
    *(_QWORD *)(v62 + 40) = v152;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v62 + v88, v11, v84);
    v91 = (_QWORD *)(v62 + v89);
    v92 = v153;
    *v91 = v151;
    v91[1] = v92;
    swift_retain(v6);
    swift_bridgeObjectRetain(v90);
    swift_retain(v92);
    v66 = 2;
    goto LABEL_51;
  }
  if (v22 == enum case for REMNavigationSpecifier.flagged(_:))
  {
    v146 = *(_QWORD *)(v6 + 16);
    sub_100065F3C(a4, &v14[Configuration[5]]);
    v145 = v6 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_fetchSubtasks;
    v93 = &v14[Configuration[6]];
    v94 = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v93, v145, v94);
    v95 = &v14[Configuration[7]];
    v96 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v97 = v149;
    v96(v95, a4, v149);
    v98 = v150;
    *(_QWORD *)v14 = v150;
    v99 = v98;
    v96((char *)&v144 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v97);
    v100 = *(unsigned __int8 *)(v9 + 80);
    v101 = (v100 + 48) & ~v100;
    v102 = (v10 + v101 + 7) & 0xFFFFFFFFFFFFFFF8;
    v62 = swift_allocObject(&unk_1000A9598, v102 + 16, v100 | 7);
    *(_QWORD *)(v62 + 16) = v6;
    *(_BYTE *)(v62 + 24) = 3;
    *(_QWORD *)(v62 + 32) = v99;
    v103 = v152;
    *(_QWORD *)(v62 + 40) = v152;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v62 + v101, v11, v97);
    v104 = (_QWORD *)(v62 + v102);
    v105 = v153;
    *v104 = v151;
    v104[1] = v105;
    swift_retain(v6);
    swift_bridgeObjectRetain(v103);
    swift_retain(v105);
    v66 = 3;
    goto LABEL_51;
  }
  if (v22 == enum case for REMNavigationSpecifier.search(_:))
  {
    if (qword_1000AC968 != -1)
      swift_once(&qword_1000AC968, sub_1000658B8);
    v107 = type metadata accessor for Logger(0);
    v108 = sub_10000CF70(v107, (uint64_t)qword_1000AFEE8);
    v109 = Logger.logObject.getter(v108);
    v110 = static os_log_type_t.error.getter();
    v111 = os_log_type_enabled(v109, v110);
    v112 = v148;
    if (v111)
    {
      v113 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v113 = 0;
      _os_log_impl((void *)&_mh_execute_header, v109, v110, "Widget presenter: unable to display search", v113, 2u);
      swift_slowDealloc(v113, -1, -1);
    }

    (*(void (**)(id *, uint64_t))(v16 + 8))(v18, v112);
    return;
  }
  if (v22 == enum case for REMNavigationSpecifier.assigned(_:))
  {
    v146 = *(_QWORD *)(v6 + 16);
    sub_100065F3C(a4, &v14[Configuration[5]]);
    v145 = v6 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_fetchSubtasks;
    v114 = &v14[Configuration[6]];
    v115 = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 16))(v114, v145, v115);
    v116 = &v14[Configuration[7]];
    v117 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v118 = v149;
    v117(v116, a4, v149);
    v119 = v150;
    *(_QWORD *)v14 = v150;
    v120 = v119;
    v117((char *)&v144 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v118);
    v121 = *(unsigned __int8 *)(v9 + 80);
    v122 = (v121 + 48) & ~v121;
    v123 = (v10 + v122 + 7) & 0xFFFFFFFFFFFFFFF8;
    v62 = swift_allocObject(&unk_1000A9570, v123 + 16, v121 | 7);
    *(_QWORD *)(v62 + 16) = v6;
    *(_BYTE *)(v62 + 24) = 4;
    *(_QWORD *)(v62 + 32) = v120;
    v124 = v152;
    *(_QWORD *)(v62 + 40) = v152;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v62 + v122, v11, v118);
    v125 = (_QWORD *)(v62 + v123);
    v126 = v153;
    *v125 = v151;
    v125[1] = v126;
    swift_retain(v6);
    swift_bridgeObjectRetain(v124);
    swift_retain(v126);
    v66 = 4;
    goto LABEL_51;
  }
  if (v22 == enum case for REMNavigationSpecifier.siriFoundInApps(_:))
  {
    if (qword_1000AC968 != -1)
      swift_once(&qword_1000AC968, sub_1000658B8);
    v127 = type metadata accessor for Logger(0);
    v128 = sub_10000CF70(v127, (uint64_t)qword_1000AFEE8);
    v129 = Logger.logObject.getter(v128);
    v130 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v129, v130))
      goto LABEL_82;
    v131 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v131 = 0;
    v132 = "Widget presenter: unable to display siriFoundInApps";
LABEL_81:
    _os_log_impl((void *)&_mh_execute_header, v129, v130, v132, v131, 2u);
    swift_slowDealloc(v131, -1, -1);
LABEL_82:

    goto LABEL_52;
  }
  if (v22 == enum case for REMNavigationSpecifier.tagged(_:))
  {
    if (qword_1000AC968 != -1)
      swift_once(&qword_1000AC968, sub_1000658B8);
    v133 = type metadata accessor for Logger(0);
    v134 = sub_10000CF70(v133, (uint64_t)qword_1000AFEE8);
    v129 = Logger.logObject.getter(v134);
    v130 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v129, v130))
      goto LABEL_82;
    v131 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v131 = 0;
    v132 = "Widget presenter: unable to display tags";
    goto LABEL_81;
  }
  if (v22 == enum case for REMNavigationSpecifier.completed(_:))
  {
    if (qword_1000AC968 != -1)
      swift_once(&qword_1000AC968, sub_1000658B8);
    v135 = type metadata accessor for Logger(0);
    v136 = sub_10000CF70(v135, (uint64_t)qword_1000AFEE8);
    v129 = Logger.logObject.getter(v136);
    v130 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v129, v130))
      goto LABEL_82;
    v131 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v131 = 0;
    v132 = "Widget presenter: unable to display completed";
    goto LABEL_81;
  }
  if (v22 == enum case for REMNavigationSpecifier.publicTemplate(_:))
  {
    if (qword_1000AC968 != -1)
      swift_once(&qword_1000AC968, sub_1000658B8);
    v137 = type metadata accessor for Logger(0);
    v138 = sub_10000CF70(v137, (uint64_t)qword_1000AFEE8);
    v129 = Logger.logObject.getter(v138);
    v130 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v129, v130))
      goto LABEL_82;
    v131 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v131 = 0;
    v132 = "Widget presenter: unable to display publicTemplate";
    goto LABEL_81;
  }
  if (v22 == enum case for REMNavigationSpecifier.newReminder(_:))
  {
    if (qword_1000AC968 != -1)
      swift_once(&qword_1000AC968, sub_1000658B8);
    v139 = type metadata accessor for Logger(0);
    v140 = sub_10000CF70(v139, (uint64_t)qword_1000AFEE8);
    v141 = Logger.logObject.getter(v140);
    v142 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v141, v142))
    {
      v143 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v143 = 0;
      _os_log_impl((void *)&_mh_execute_header, v141, v142, "Widget presenter: unable to display newReminder", v143, 2u);
      swift_slowDealloc(v143, -1, -1);
    }

  }
  else
  {
    _diagnoseUnexpectedEnumCase<A>(type:)(v148, v148);
    __break(1u);
  }
}

_QWORD *sub_1000649B0(void (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_100006DA4(&qword_1000ACCD8);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v9 = *(_QWORD *)(v27 - 8);
  v10 = __chkstk_darwin(v27);
  v26 = (uint64_t)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v24 = (uint64_t)&v21 - v12;
  v13 = *(_QWORD *)(a3 + 16);
  if (!v13)
    return _swiftEmptyArrayStorage;
  v14 = *(_QWORD *)(type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0) - 8);
  v15 = a3 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v25 = *(_QWORD *)(v14 + 72);
  v22 = a3;
  swift_bridgeObjectRetain(a3);
  v16 = _swiftEmptyArrayStorage;
  v23 = a1;
  do
  {
    a1(v15);
    if (v3)
    {
      swift_bridgeObjectRelease(v16);
      swift_bridgeObjectRelease(v22);
      return v16;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v27) == 1)
    {
      sub_100009578((uint64_t)v8, &qword_1000ACCD8);
    }
    else
    {
      v17 = v24;
      sub_100007EF0((uint64_t)v8, v24, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      sub_100007EF0(v17, v26, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
        v16 = (_QWORD *)sub_10001C410(0, v16[2] + 1, 1, (unint64_t)v16);
      v19 = v16[2];
      v18 = v16[3];
      if (v19 >= v18 >> 1)
        v16 = (_QWORD *)sub_10001C410(v18 > 1, v19 + 1, 1, (unint64_t)v16);
      v16[2] = v19 + 1;
      sub_100007EF0(v26, (uint64_t)v16+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v19, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      a1 = v23;
    }
    v15 += v25;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease(v22);
  return v16;
}

void sub_100064C1C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t Subtasks;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  NSObject *v74;
  char *v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t Configuration;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111[2];

  v8 = v7;
  v103 = a7;
  v104 = a5;
  v105 = a3;
  v106 = a6;
  v108 = a1;
  v11 = type metadata accessor for Date(0);
  v99 = *(_QWORD *)(v11 - 8);
  v100 = v11;
  __chkstk_darwin(v11);
  v97 = v12;
  v98 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  Configuration = type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  __chkstk_darwin(Configuration);
  v101 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100006DA4(&qword_1000AD9C0);
  __chkstk_darwin(v14);
  v16 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for REMNavigationSpecifier(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v91 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100006DA4(&qword_1000ACC78);
  __chkstk_darwin(v20);
  v107 = (char *)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for URL(0);
  v109 = *(_QWORD *)(v22 - 8);
  v23 = __chkstk_darwin(v22);
  v92 = (char *)&v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v23);
  v93 = (char *)&v87 - v26;
  __chkstk_darwin(v25);
  v28 = (char *)&v87 - v27;
  if (qword_1000AC968 != -1)
    swift_once(&qword_1000AC968, sub_1000658B8);
  v94 = v16;
  v95 = v18;
  v29 = type metadata accessor for Logger(0);
  v30 = sub_10000CF70(v29, (uint64_t)qword_1000AFEE8);
  v31 = swift_bridgeObjectRetain_n(a2, 2);
  v102 = v30;
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v33))
  {
    v88 = v22;
    v34 = swift_slowAlloc(12, -1);
    v89 = v8;
    v35 = (uint8_t *)v34;
    v36 = swift_slowAlloc(32, -1);
    v90 = v28;
    v37 = v36;
    v111[0] = v36;
    *(_DWORD *)v35 = 136315138;
    swift_bridgeObjectRetain(a2);
    v38 = v108;
    v110 = sub_10007FA38(v108, a2, v111);
    v22 = v88;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, v111, v35 + 4, v35 + 12);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Widget presenter: requested %s", v35, 0xCu);
    swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
    v39 = v37;
    v28 = v90;
    swift_slowDealloc(v39, -1, -1);
    v40 = v35;
    v8 = v89;
    swift_slowDealloc(v40, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
    v38 = v108;
  }
  v41 = (uint64_t)v107;
  v42 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v42 = v38 & 0xFFFFFFFFFFFFLL;
  v43 = v109;
  if (v42)
  {
    URL.init(string:)(v38, a2);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v22) == 1)
    {
      sub_100009578(v41, &qword_1000ACC78);
      v44 = swift_bridgeObjectRetain_n(a2, 2);
      v45 = Logger.logObject.getter(v44);
      v46 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v45, v46))
      {
        v47 = (uint8_t *)swift_slowAlloc(12, -1);
        v48 = swift_slowAlloc(32, -1);
        v111[0] = v48;
        *(_DWORD *)v47 = 136315138;
        swift_bridgeObjectRetain(a2);
        v110 = sub_10007FA38(v38, a2, v111);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, v111, v47 + 4, v47 + 12);
        swift_bridgeObjectRelease_n(a2, 3);
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "Widget presenter: unable to parse identifier %s", v47, 0xCu);
        swift_arrayDestroy(v48, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v48, -1, -1);
        swift_slowDealloc(v47, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(a2, 2);
      }
    }
    else
    {
      v67 = a4;
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v28, v41, v22);
      v68 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
      v69 = v93;
      v68(v93, v28, v22);
      v70 = (uint64_t)v94;
      REMNavigationSpecifier.init(_:)(v69);
      v71 = v95;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v70, 1, v17) == 1)
      {
        sub_100009578(v70, &qword_1000AD9C0);
        v72 = v92;
        v73 = ((uint64_t (*)(char *, char *, uint64_t))v68)(v92, v28, v22);
        v74 = Logger.logObject.getter(v73);
        v75 = v28;
        v76 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v74, v76))
        {
          v90 = v75;
          v77 = (uint8_t *)swift_slowAlloc(12, -1);
          v78 = v22;
          v79 = swift_slowAlloc(32, -1);
          v111[0] = v79;
          *(_DWORD *)v77 = 136315138;
          v80 = sub_100007218(&qword_1000B01E0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
          v81 = dispatch thunk of CustomStringConvertible.description.getter(v78, v80);
          v83 = v82;
          v110 = sub_10007FA38(v81, v82, v111);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, v111, v77 + 4, v77 + 12);
          swift_bridgeObjectRelease(v83);
          v84 = *(void (**)(char *, uint64_t))(v43 + 8);
          v84(v72, v78);
          _os_log_impl((void *)&_mh_execute_header, v74, v76, "Widget presenter: unable to parse url %s", v77, 0xCu);
          swift_arrayDestroy(v79, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v79, -1, -1);
          swift_slowDealloc(v77, -1, -1);

          v84(v90, v78);
        }
        else
        {

          v86 = *(void (**)(char *, uint64_t))(v43 + 8);
          v86(v72, v22);
          v86(v75, v22);
        }
      }
      else
      {
        v85 = (uint64_t)v91;
        (*(void (**)(char *, uint64_t, uint64_t))(v71 + 32))(v91, v70, v17);
        sub_100063834(v85, v105, v67, v104, v106, v103);
        (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v85, v17);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v28, v22);
      }
    }
  }
  else
  {
    v109 = *(_QWORD *)(v8 + 16);
    v49 = Configuration;
    v50 = v101;
    v51 = v104;
    sub_100065F3C(v104, &v101[*(int *)(Configuration + 20)]);
    v52 = v8 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_fetchSubtasks;
    v53 = (char *)v50 + *(int *)(v49 + 24);
    Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(Subtasks - 8) + 16))(v53, v52, Subtasks);
    v55 = (char *)v50 + *(int *)(v49 + 28);
    v56 = v99;
    v57 = v100;
    v58 = *(void (**)(char *, uint64_t, uint64_t))(v99 + 16);
    v58(v55, v51, v100);
    v59 = v105;
    *v50 = v105;
    v60 = v98;
    v58(v98, v51, v57);
    v61 = *(unsigned __int8 *)(v56 + 80);
    v62 = (v61 + 40) & ~v61;
    v63 = (v97 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
    v64 = (char *)swift_allocObject(&unk_1000A9778, v63 + 16, v61 | 7);
    *((_QWORD *)v64 + 2) = v8;
    *((_QWORD *)v64 + 3) = v59;
    *((_QWORD *)v64 + 4) = a4;
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(&v64[v62], v60, v57);
    v65 = &v64[v63];
    v66 = v103;
    *(_QWORD *)v65 = v106;
    *((_QWORD *)v65 + 1) = v66;
    swift_retain(v8);
    swift_bridgeObjectRetain(a4);
    swift_retain(v66);
    sub_10004B5F8((uint64_t)v50, (uint64_t)sub_10006C480, (uint64_t)v64);
    swift_release(v64);
    sub_100007EB4((uint64_t)v50, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  }
}

void sub_1000654D0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  void *object;
  id v17;
  NSString v18;
  id v19;
  int64_t v20;
  int64_t *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  Swift::String v30;
  Swift::String v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t *v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  void *v47;
  uint64_t countAndFlagsBits;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  char v52[24];
  char v53[24];
  _BYTE v54[56];
  _BYTE v55[64];

  v4 = type metadata accessor for REMNavigationSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
  v13 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v7, v12, v13);
  v14 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for REMNavigationSpecifier.root(_:), v4);
  REMNavigationSpecifier.url.getter(v14);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v15._countAndFlagsBits = 119;
  v15._object = (void *)0xE100000000000000;
  object = String.init(repeating:count:)(v15, 100)._object;
  v17 = objc_allocWithZone((Class)NSAttributedString);
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v19 = objc_msgSend(v17, "initWithString:", v18);

  v20 = a1 + 1;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v20 < 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v51 = v9;
  v21 = sub_10006BCD4(0, v20);
  __chkstk_darwin(v21);
  *(&v47 - 2) = v11;
  *(&v47 - 1) = v19;
  v22 = sub_10006355C((void (*)(uint64_t *))sub_1000713F4, (uint64_t)(&v47 - 4), (uint64_t)v21);
  v23 = swift_release(v21);
  v24 = TTRListColors.defaultColor.unsafeMutableAddressor(v23);
  swift_beginAccess(v24, v53, 0, 0);
  sub_10006FFC8(v24, (uint64_t)v55);
  v25 = sub_100070004((uint64_t)v55, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100070040);
  v26 = TTRListColors.Color.nativeColor.getter(v25);
  sub_100070004((uint64_t)v55, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006C580);
  v27._countAndFlagsBits = 119;
  v27._object = (void *)0xE100000000000000;
  v28 = String.init(repeating:count:)(v27, 20);
  v29 = a1 + 2;
  if (!__OFADD__(a1, 2))
  {
    countAndFlagsBits = v28._countAndFlagsBits;
    v30._countAndFlagsBits = 119;
    v47 = v28._object;
    v30._object = (void *)0xE100000000000000;
    v31 = String.init(repeating:count:)(v30, 10);
    v50 = v31._countAndFlagsBits;
    v49 = v31._object;
    v32 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
    v33 = a2 + v32[9];
    v34 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 1, 1, v34);
    swift_beginAccess(v24, v52, 0, 0);
    sub_10006FFC8(v24, (uint64_t)v54);
    v35 = sub_100070004((uint64_t)v54, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100070040);
    v36 = TTRListColors.Color.localizedDescription.getter(v35);
    v38 = v37;

    sub_100070004((uint64_t)v54, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006C580);
    v39 = v22;
    v40 = v51;
    (*(void (**)(uint64_t, char *, uint64_t))(v51 + 16))(a2 + v32[18], v11, v8);
    v41 = v47;
    *(_QWORD *)a2 = countAndFlagsBits;
    *(_QWORD *)(a2 + 8) = v41;
    *(_QWORD *)(a2 + 16) = v29;
    *(_QWORD *)(a2 + 24) = 11565;
    *(_QWORD *)(a2 + 32) = 0xE200000000000000;
    *(_BYTE *)(a2 + 40) = 64;
    v42 = v49;
    *(_QWORD *)(a2 + 48) = v50;
    *(_QWORD *)(a2 + 56) = v42;
    *(_QWORD *)(a2 + v32[10]) = v26;
    v43 = (uint64_t *)(a2 + v32[11]);
    *v43 = v36;
    v43[1] = v38;
    *(_QWORD *)(a2 + v32[12]) = 0;
    v44 = (_QWORD *)(a2 + v32[13]);
    *v44 = 0;
    v44[1] = 0;
    v45 = (_QWORD *)(a2 + v32[14]);
    *v45 = 0;
    v45[1] = 0;
    *(_BYTE *)(a2 + v32[15]) = 0;
    v46 = (_QWORD *)(a2 + v32[16]);
    *v46 = 0;
    v46[1] = 0;
    *(_QWORD *)(a2 + v32[17]) = 0;
    *(_QWORD *)(a2 + v32[19]) = v39;
    *(_BYTE *)(a2 + v32[20]) = 1;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v8);
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_1000658B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000CF88(v0, qword_1000AFEE8);
  v1 = sub_10000CF70(v0, (uint64_t)qword_1000AFEE8);
  if (qword_1000AC888 != -1)
    swift_once(&qword_1000AC888, sub_10001D5C8);
  v2 = sub_10000CF70(v0, (uint64_t)qword_1000B9E48);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100065948(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5)
{
  int *Configuration;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t Subtasks;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  unsigned int v25;

  v24 = a4;
  v25 = a3;
  Configuration = (int *)type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  __chkstk_darwin(Configuration);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100006DA4(&qword_1000B0030);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  v14 = *(unsigned __int8 *)(v12 + 80);
  v15 = (v14 + 16) & ~v14;
  v16 = swift_allocObject(&unk_1000A9548, v15 + v13, v14 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v16 + v15, (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  v17 = *(_QWORD *)(a2 + 16);
  sub_100065F3C(a5, &v10[Configuration[5]]);
  v18 = a2 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_fetchSubtasks;
  v19 = &v10[Configuration[6]];
  Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(Subtasks - 8) + 16))(v19, v18, Subtasks);
  v21 = &v10[Configuration[7]];
  v22 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v21, a5, v22);
  *(_QWORD *)v10 = v24;
  swift_retain(v16);
  sub_10005A958((void *)v25, (uint64_t)v10, v17, (uint64_t)sub_10006BC94, v16, v25);
  swift_release(v16);
  sub_100007EB4((uint64_t)v10, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  return swift_release(v16);
}

uint64_t sub_100065B1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  swift_bridgeObjectRetain(a1);
  v1 = sub_100006DA4(&qword_1000B0030);
  return CheckedContinuation.resume(returning:)(&v3, v1);
}

uint64_t sub_100065B60(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(id, char *, uint64_t, char *))
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t Configuration;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t Subtasks;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void (*v43)(id, char *, uint64_t, char *);
  uint64_t v44;

  v38 = a7;
  v39 = a5;
  v40 = a3;
  v41 = a6;
  v36 = a2;
  v42 = a1;
  v43 = a9;
  v44 = a8;
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  Configuration = type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  v16 = __chkstk_darwin(Configuration);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = *(_QWORD *)(v9 + 16);
  sub_100065F3C(a4, &v18[*(int *)(v16 + 20)]);
  v19 = v9 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_fetchSubtasks;
  v20 = &v18[*(int *)(Configuration + 24)];
  Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(Subtasks - 8) + 16))(v20, v19, Subtasks);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v22(&v18[*(int *)(Configuration + 28)], a4, v11);
  v23 = v36;
  *(_QWORD *)v18 = v36;
  v24 = swift_allocObject(&unk_1000A9638, 24, 7);
  swift_weakInit(v24 + 16, v9);
  v22(v14, a4, v11);
  v25 = *(unsigned __int8 *)(v12 + 80);
  v26 = (v25 + 56) & ~v25;
  v27 = (v13 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (char *)swift_allocObject(v38, v27 + 8, v25 | 7);
  v29 = v39;
  *((_QWORD *)v28 + 2) = v24;
  *((_QWORD *)v28 + 3) = v29;
  v30 = v41;
  *((_QWORD *)v28 + 4) = v41;
  *((_QWORD *)v28 + 5) = v23;
  v31 = v40;
  *((_QWORD *)v28 + 6) = v40;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v28[v26], v14, v11);
  v32 = v42;
  *(_QWORD *)&v28[v27] = v42;
  swift_retain(v24);
  swift_retain(v30);
  swift_bridgeObjectRetain(v31);
  v33 = v32;
  v43(v33, v18, v44, v28);
  swift_release(v28);
  sub_100007EB4((uint64_t)v18, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  return swift_release(v24);
}

id sub_100065D7C@<X0>(uint64_t *a1@<X0>, void *a2@<X2>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  int *v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;

  v21 = a2;
  v5 = type metadata accessor for URL.DirectoryHint(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a1;
  v22 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v23 = v13;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for URL.DirectoryHint.inferFromPath(_:), v5);
  v14 = sub_10003F228();
  URL.appending<A>(component:directoryHint:)(&v22, v8, &type metadata for String, v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease(v23);
  v15 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v16 = &a3[v15[6]];
  v17 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = v21;
  *(_QWORD *)a3 = v21;
  *((_QWORD *)a3 + 1) = 0;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&a3[v15[7]], v12, v9);
  *(_QWORD *)&a3[v15[8]] = 0;
  *(_QWORD *)&a3[v15[9]] = 0;
  a3[v15[10]] = 0;
  a3[v15[11]] = 0;
  return v18;
}

uint64_t sub_100065F3C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  v33 = a2;
  v32 = sub_100006DA4(&qword_1000B0040);
  v3 = __chkstk_darwin(v32);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v32 - v6;
  v8 = type metadata accessor for Calendar(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD **)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v32 - v18;
  v20 = Date.addingTimeInterval(_:)(v17, -900.0);
  static Calendar.current.getter(v20);
  Calendar.endOfDay(for:)(a1);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v21 = sub_100007218(&qword_1000AF898, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v19, v16, v12, v21);
  if ((result & 1) != 0)
  {
    v23 = v32;
    v24 = &v7[*(int *)(v32 + 48)];
    v25 = (void (*)(char *, char *, uint64_t))v13[4];
    v25(v7, v19, v12);
    v25(v24, v16, v12);
    v26 = &v5[*(int *)(v23 + 48)];
    v27 = (void (*)(char *, char *, uint64_t))v13[2];
    v27(v5, v7, v12);
    v27(v26, v24, v12);
    v28 = v33;
    v25(v33, v5, v12);
    v29 = (void (*)(char *, uint64_t))v13[1];
    v29(v26, v12);
    v30 = &v5[*(int *)(v23 + 48)];
    v25(v5, v7, v12);
    v25(v30, v24, v12);
    v31 = sub_100006DA4(&qword_1000AF8C8);
    v25(&v28[*(int *)(v31 + 36)], v30, v12);
    return ((uint64_t (*)(char *, uint64_t))v29)(v5, v12);
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *sub_1000661B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD *), uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  void (*v17)(_QWORD *);
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD *);
  uint64_t v44;
  _QWORD v45[3];
  char v46[8];
  uint64_t v47[6];
  void *v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v43 = a6;
  v41 = a4;
  v42 = a2;
  sub_100018778(a1, (uint64_t)v47, &qword_1000AFA78);
  v10 = v47[0];
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100018778(a1, (uint64_t)&v48, &qword_1000AFA78);
  v15 = v48;
  v44 = a7;
  if ((v52 & 1) != 0)
  {
    v16 = v48;
    v17 = v43;
    swift_errorRetain(v10);
    if (qword_1000AC968 != -1)
      swift_once(&qword_1000AC968, sub_1000658B8);
    v18 = type metadata accessor for Logger(0);
    sub_10000CF70(v18, (uint64_t)qword_1000AFEE8);
    swift_errorRetain(v10);
    v19 = swift_errorRetain(v10);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(12, -1);
      v23 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v53 = v23;
      *(_DWORD *)v22 = 136446210;
      swift_getErrorValue(v16, v46, v45);
      v24 = Error.localizedDescription.getter(v45[1], v45[2]);
      v26 = v25;
      v55 = sub_10007FA38(v24, v25, (uint64_t *)&v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v22 + 4, v22 + 12);
      swift_bridgeObjectRelease(v26);
      sub_10006C444(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006FAF8);
      sub_10006C444(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006FAF8);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Could not fetch default list because {error: %{public}s}", v22, 0xCu);
      swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1, -1);
      swift_slowDealloc(v22, -1, -1);
    }
    else
    {
      sub_10006C444(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006FAF8);
      sub_10006C444(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006FAF8);
    }

    v17(_swiftEmptyArrayStorage);
    return (_QWORD *)sub_10006C444(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006FAF8);
  }
  else
  {
    v53 = v49;
    v28 = v50;
    v27 = v51;
    v54 = v50;
    v55 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a5, v11);
    v29 = *(unsigned __int8 *)(v12 + 80);
    v30 = (v29 + 64) & ~v29;
    v31 = (v13 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
    v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
    v33 = swift_allocObject(&unk_1000A9700, v32 + 16, v29 | 7);
    *(_QWORD *)(v33 + 16) = v15;
    *(_OWORD *)(v33 + 24) = v53;
    *(_QWORD *)(v33 + 40) = v28;
    *(_QWORD *)(v33 + 48) = v27;
    v34 = v42;
    *(_QWORD *)(v33 + 56) = v42;
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v33 + v30, v14, v11);
    v35 = v41;
    *(_QWORD *)(v33 + v31) = v41;
    v36 = (_QWORD *)(v33 + v32);
    v37 = v44;
    *v36 = v43;
    v36[1] = v37;
    v38 = v15;
    sub_100048044(&v54);
    sub_100048044(&v55);
    v39 = v38;
    sub_100048044(&v54);
    sub_100048044(&v55);
    swift_retain(v34);
    swift_bridgeObjectRetain(v35);
    swift_retain(v37);
    sub_100069110((uint64_t)v39, v35, (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_10006C488, v33);

    swift_release(v33);
    sub_10006C2AC(&v54);
    return sub_10006C2AC(&v55);
  }
}

_QWORD *sub_100066594(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t Strong;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  _BOOL4 v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  os_log_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t Subtasks;
  char *v61;
  void (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  os_log_t v74;
  int v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(_QWORD);
  uint64_t v83;
  char *v84;
  uint64_t Configuration;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char v89[8];
  uint64_t v90;
  uint64_t v91;
  char v92[8];
  char v93[24];
  uint64_t v94[6];
  void *v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  char v103[8];

  v87 = a7;
  v86 = a5;
  sub_100018778(a1, (uint64_t)v94, &qword_1000AFA78);
  v14 = v94[0];
  Configuration = type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  __chkstk_darwin(Configuration);
  v84 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Date(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  __chkstk_darwin(v16);
  v88 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v93, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (!Strong)
    return (_QWORD *)a3(_swiftEmptyArrayStorage);
  v20 = Strong;
  v81 = a6;
  sub_100018778(a1, (uint64_t)&v95, &qword_1000AFA78);
  v21 = v95;
  v83 = a4;
  v82 = (uint64_t (*)(_QWORD))a3;
  v80 = v16;
  if ((v99 & 1) != 0)
  {
    v77 = v95;
    v79 = v17;
    swift_errorRetain(v14);
    if (qword_1000AC968 != -1)
      swift_once(&qword_1000AC968, sub_1000658B8);
    v22 = type metadata accessor for Logger(0);
    sub_10000CF70(v22, (uint64_t)qword_1000AFEE8);
    sub_10006C444(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006FAC0);
    v23 = a8;
    sub_10006C444(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006FAC0);
    v24 = v23;
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.error.getter();
    v27 = v26;
    v28 = os_log_type_enabled(v25, v26);
    v78 = a1;
    if (v28)
    {
      v29 = swift_slowAlloc(22, -1);
      v30 = (_QWORD *)swift_slowAlloc(8, -1);
      v76 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v100 = v76;
      *(_DWORD *)v29 = 138543618;
      v74 = v25;
      v75 = v27;
      v102 = (uint64_t)v24;
      v31 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, v103, v29 + 4, v29 + 12);
      *v30 = v24;

      *(_WORD *)(v29 + 12) = 2082;
      swift_getErrorValue(v77, v92, v89);
      v32 = Error.localizedDescription.getter(v90, v91);
      v34 = v33;
      v102 = sub_10007FA38(v32, v33, (uint64_t *)&v100);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, v103, v29 + 14, v29 + 22);
      swift_bridgeObjectRelease(v34);
      sub_10006C444(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006FAF8);
      sub_10006C444(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006FAF8);
      v35 = v74;
      _os_log_impl((void *)&_mh_execute_header, v74, (os_log_type_t)v75, "Could not fetch list {listID: %{public}@ error: %{public}s}", (uint8_t *)v29, 0x16u);
      v36 = sub_100006DA4(&qword_1000B0048);
      swift_arrayDestroy(v30, 1, v36);
      swift_slowDealloc(v30, -1, -1);
      v37 = v76;
      swift_arrayDestroy(v76, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1, -1);
      swift_slowDealloc(v29, -1, -1);

    }
    else
    {

      sub_10006C444(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006FAF8);
      sub_10006C444(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006FAF8);

    }
    v54 = v79;
    v79 = *(_QWORD *)(v20 + 16);
    v55 = Configuration;
    v56 = v84;
    v57 = v87;
    sub_100065F3C(v87, &v84[*(int *)(Configuration + 20)]);
    v58 = v20 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_fetchSubtasks;
    v59 = (char *)v56 + *(int *)(v55 + 24);
    Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(Subtasks - 8) + 16))(v59, v58, Subtasks);
    v61 = (char *)v56 + *(int *)(v55 + 28);
    v62 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 16);
    v63 = v54;
    v64 = v80;
    v62(v61, v57, v80);
    v65 = v86;
    *v56 = v86;
    v66 = v88;
    v62(v88, v57, v64);
    v67 = *(unsigned __int8 *)(v63 + 80);
    v68 = (v67 + 40) & ~v67;
    v69 = (v18 + v68 + 7) & 0xFFFFFFFFFFFFFFF8;
    v70 = (char *)swift_allocObject(&unk_1000A9688, v69 + 16, v67 | 7);
    *((_QWORD *)v70 + 2) = v20;
    *((_QWORD *)v70 + 3) = v65;
    v71 = v81;
    *((_QWORD *)v70 + 4) = v81;
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(&v70[v68], v66, v64);
    v72 = &v70[v69];
    v73 = v83;
    *(_QWORD *)v72 = v82;
    *((_QWORD *)v72 + 1) = v73;
    swift_retain(v20);
    swift_bridgeObjectRetain(v71);
    swift_retain(v73);
    sub_10004B5F8((uint64_t)v56, (uint64_t)sub_10006C480, (uint64_t)v70);
    swift_release(v70);
    sub_100007EB4((uint64_t)v56, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
    swift_release(v20);
    return (_QWORD *)sub_10006C444(v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006FAF8);
  }
  else
  {
    v100 = v96;
    v39 = v97;
    v40 = v98;
    v101 = v97;
    v102 = v98;
    v41 = v88;
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v88, v87, v16);
    v42 = *(unsigned __int8 *)(v17 + 80);
    v43 = (v42 + 64) & ~v42;
    v44 = (v18 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
    v45 = (v44 + 15) & 0xFFFFFFFFFFFFFFF8;
    v46 = swift_allocObject(&unk_1000A96B0, v45 + 16, v42 | 7);
    v47 = v17;
    v48 = v81;
    v49 = v46;
    *(_QWORD *)(v46 + 16) = v21;
    *(_OWORD *)(v46 + 24) = v100;
    *(_QWORD *)(v46 + 40) = v39;
    *(_QWORD *)(v46 + 48) = v40;
    *(_QWORD *)(v46 + 56) = v20;
    (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v46 + v43, v41, v80);
    *(_QWORD *)(v49 + v44) = v48;
    v50 = (_QWORD *)(v49 + v45);
    v51 = v83;
    *v50 = v82;
    v50[1] = v51;
    v52 = v21;
    sub_100048044(&v101);
    sub_100048044(&v102);
    v53 = v52;
    sub_100048044(&v101);
    sub_100048044(&v102);
    swift_retain(v20);
    swift_bridgeObjectRetain(v48);
    swift_retain(v51);
    sub_100069110((uint64_t)v53, v48, (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_10006C488, v49);

    swift_release(v20);
    swift_release(v49);
    sub_10006C2AC(&v101);
    return sub_10006C2AC(&v102);
  }
}

_QWORD *sub_100066C8C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *), uint64_t a4, uint64_t a5, uint64_t a6, char *a7, void *a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *Configuration;
  uint64_t v17;
  char *v18;
  uint64_t Strong;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  _QWORD *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t Subtasks;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  int *v57;
  os_log_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  void (*v64)(_QWORD *);
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70[8];
  uint64_t v71;
  uint64_t v72;
  char v73[8];
  char v74[24];
  uint64_t v75[6];
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  char v79;
  _OWORD v80[2];
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84[8];

  v68 = a6;
  v67 = a5;
  v69 = a4;
  sub_100018778(a1, (uint64_t)v75, &qword_1000AFAE8);
  v13 = v75[0];
  v66 = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(v66 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v66);
  v65 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  Configuration = (int *)type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  __chkstk_darwin(Configuration);
  v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v74, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (!Strong)
    return (_QWORD *)((uint64_t (*)(_QWORD *))a3)(_swiftEmptyArrayStorage);
  v20 = Strong;
  sub_100018778(a1, (uint64_t)&v76, &qword_1000AFAE8);
  if ((v79 & 1) != 0)
  {
    v63 = a7;
    v62 = v76;
    swift_errorRetain(v13);
    if (qword_1000AC968 != -1)
      swift_once(&qword_1000AC968, sub_1000658B8);
    v64 = a3;
    v21 = type metadata accessor for Logger(0);
    sub_10000CF70(v21, (uint64_t)qword_1000AFEE8);
    sub_10006C444(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006FAC0);
    v22 = a8;
    sub_10006C444(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006FAC0);
    v23 = v22;
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter();
    v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      v27 = swift_slowAlloc(22, -1);
      v59 = v26;
      v28 = v27;
      v55 = (_QWORD *)swift_slowAlloc(8, -1);
      v60 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v80[0] = v60;
      *(_DWORD *)v28 = 138543618;
      v58 = v24;
      v57 = Configuration;
      v83 = (uint64_t)v23;
      v56 = v84;
      v29 = v23;
      v61 = v14;
      v30 = v29;
      Configuration = v57;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, v84, v28 + 4, v28 + 12);
      v31 = v55;
      *v55 = v23;

      v14 = v61;
      *(_WORD *)(v28 + 12) = 2082;
      swift_getErrorValue(v62, v73, v70);
      v32 = Error.localizedDescription.getter(v71, v72);
      v34 = v33;
      v83 = sub_10007FA38(v32, v33, (uint64_t *)v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, v56, v28 + 14, v28 + 22);
      swift_bridgeObjectRelease(v34);
      sub_10006C444(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006FAF8);
      sub_10006C444(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006FAF8);
      v24 = v58;
      _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v59, "Could not fetch custom smart list {customSmartListID: %{public}@ error: %{public}s}", (uint8_t *)v28, 0x16u);
      v35 = sub_100006DA4(&qword_1000B0048);
      swift_arrayDestroy(v31, 1, v35);
      swift_slowDealloc(v31, -1, -1);
      v36 = v60;
      swift_arrayDestroy(v60, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v36, -1, -1);
      swift_slowDealloc(v28, -1, -1);
    }
    else
    {

      sub_10006C444(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006FAF8);
      sub_10006C444(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006FAF8);
    }

    v62 = *(_QWORD *)(v20 + 16);
    v39 = (uint64_t)v63;
    sub_100065F3C((uint64_t)v63, &v18[Configuration[5]]);
    v40 = v20 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_fetchSubtasks;
    v41 = &v18[Configuration[6]];
    Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(Subtasks - 8) + 16))(v41, v40, Subtasks);
    v43 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    v44 = v14;
    v45 = v66;
    v43(&v18[Configuration[7]], v39, v66);
    v46 = v67;
    *(_QWORD *)v18 = v67;
    v47 = v65;
    v43(v65, v39, v45);
    v48 = *(unsigned __int8 *)(v44 + 80);
    v49 = (v48 + 40) & ~v48;
    v50 = (v15 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
    v51 = (char *)swift_allocObject(&unk_1000A9750, v50 + 16, v48 | 7);
    *((_QWORD *)v51 + 2) = v20;
    *((_QWORD *)v51 + 3) = v46;
    v52 = v68;
    *((_QWORD *)v51 + 4) = v68;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(&v51[v49], v47, v45);
    v53 = &v51[v50];
    v54 = v69;
    *(_QWORD *)v53 = v64;
    *((_QWORD *)v53 + 1) = v54;
    swift_retain(v20);
    swift_bridgeObjectRetain(v52);
    swift_retain(v54);
    sub_10004B5F8((uint64_t)v18, (uint64_t)sub_10006C480, (uint64_t)v51);
    swift_release(v51);
    sub_100007EB4((uint64_t)v18, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
    swift_release(v20);
    return (_QWORD *)sub_10006C444(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006FAF8);
  }
  else
  {
    v80[0] = v76;
    v80[1] = v77;
    v81 = v78;
    v82 = *((_QWORD *)&v77 + 1);
    v83 = v78;
    v38 = (id)v76;
    sub_100048044(&v82);
    sub_100048044(&v83);
    sub_10006FB34((uint64_t)v80, v68, a7, a3, v69);

    swift_release(v20);
    sub_10006C2AC(&v82);
    return sub_10006C2AC(&v83);
  }
}

_QWORD *sub_1000672A4(uint64_t a1, void (*a2)(_QWORD *), uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  _DWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD v45[2];
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50[6];
  _OWORD v51[2];
  uint64_t v52;
  char v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  _QWORD v59[2];

  v45[1] = a3;
  sub_100018778(a1, (uint64_t)v50, &qword_1000AF9E8);
  v7 = v50[0];
  v8 = sub_100006DA4(&qword_1000AD8B8);
  __chkstk_darwin(v8);
  v10 = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v49 = (char *)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v46 = (char *)v45 - v16;
  __chkstk_darwin(v15);
  v47 = (char *)v45 - v17;
  v18 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (_QWORD *)((char *)v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100018778(a1, (uint64_t)v51, &qword_1000AF9E8);
  if ((v53 & 1) != 0)
  {
    swift_errorRetain(v7);
    if (qword_1000AC968 != -1)
      swift_once(&qword_1000AC968, sub_1000658B8);
    v22 = type metadata accessor for Logger(0);
    sub_10000CF70(v22, (uint64_t)qword_1000AFEE8);
    swift_errorRetain(v7);
    v23 = swift_errorRetain(v7);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (_DWORD *)swift_slowAlloc(22, -1);
      *(_QWORD *)&v54 = swift_slowAlloc(64, -1);
      *v26 = 136446466;
      __asm { BR              X10 }
    }
    sub_10006C234(a1);
    sub_10006C234(a1);

    a2(_swiftEmptyArrayStorage);
    return (_QWORD *)sub_10006C234(a1);
  }
  else
  {
    v45[0] = a2;
    v54 = v51[0];
    v55 = v51[1];
    v56 = v52;
    sub_100018778((uint64_t)&v54, (uint64_t)&v57, &qword_1000B0038);
    v27 = v56;
    v58 = *((_QWORD *)&v55 + 1);
    v59[0] = v56;
    v28 = *(_QWORD *)(v56 + 16);
    if (v28)
    {
      v29 = v56 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
      sub_100048044(v59);
      swift_bridgeObjectRetain(v27);
      sub_100048044(v59);
      sub_100048094(&v57);
      sub_100048044(&v58);
      v30 = (char *)_swiftEmptyArrayStorage;
      v48 = *(_QWORD *)(v19 + 72);
      do
      {
        sub_1000072AC(v29, (uint64_t)v21, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
        v32 = v21[3];
        v31 = v21[4];
        sub_10001E184(v21, v32);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v31 + 64))(v32, v31) & 1) != 0
          || (v33 = v21[3],
              v34 = v21[4],
              sub_10001E184(v21, v33),
              (v35 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v34 + 104))(v33, v34)) == 0))
        {
          v39 = 1;
        }
        else
        {
          v36 = v35;
          v37 = objc_msgSend(v35, "date");

          v38 = v46;
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v37);

          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v10, v38, v11);
          v39 = 0;
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v39, 1, v11);
        sub_100007EB4((uint64_t)v21, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
        {
          sub_100009578((uint64_t)v10, &qword_1000AD8B8);
        }
        else
        {
          v40 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
          v41 = v47;
          v40(v47, v10, v11);
          v40(v49, v41, v11);
          if ((swift_isUniquelyReferenced_nonNull_native(v30) & 1) == 0)
            v30 = (char *)sub_10001C3FC(0, *((_QWORD *)v30 + 2) + 1, 1, (unint64_t)v30);
          v43 = *((_QWORD *)v30 + 2);
          v42 = *((_QWORD *)v30 + 3);
          if (v43 >= v42 >> 1)
            v30 = (char *)sub_10001C3FC(v42 > 1, v43 + 1, 1, (unint64_t)v30);
          *((_QWORD *)v30 + 2) = v43 + 1;
          v40(&v30[((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v43], v49, v11);
        }
        v29 += v48;
        --v28;
      }
      while (v28);
      sub_10006C2AC(v59);
      sub_10006C2AC(v59);
    }
    else
    {
      sub_100048044(v59);
      sub_100048094(&v57);
      sub_100048044(&v58);
      v30 = (char *)_swiftEmptyArrayStorage;
    }
    ((void (*)(char *))v45[0])(v30);
    swift_bridgeObjectRelease(v30);
    sub_10006C2D4(&v57);
    sub_10006C2AC(&v58);
    return sub_10006C2AC(v59);
  }
}

_QWORD *sub_1000679C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, void (*a7)(_QWORD *), uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _DWORD *v18;
  void *v19;
  _QWORD v21[6];
  _OWORD v22[2];
  uint64_t v23;
  char v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  _QWORD v30[2];

  sub_100018778(a1, (uint64_t)v21, &qword_1000AF9E8);
  v13 = v21[0];
  sub_100018778(a1, (uint64_t)v22, &qword_1000AF9E8);
  if ((v24 & 1) != 0)
  {
    swift_errorRetain(v13);
    if (qword_1000AC968 != -1)
      swift_once(&qword_1000AC968, sub_1000658B8);
    v14 = type metadata accessor for Logger(0);
    sub_10000CF70(v14, (uint64_t)qword_1000AFEE8);
    swift_errorRetain(v13);
    v15 = swift_errorRetain(v13);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (_DWORD *)swift_slowAlloc(22, -1);
      *(_QWORD *)&v25 = swift_slowAlloc(64, -1);
      *v18 = 136446466;
      __asm { BR              X10 }
    }
    sub_10006C234(a1);
    sub_10006C234(a1);

    a7(_swiftEmptyArrayStorage);
    return (_QWORD *)sub_10006C234(a1);
  }
  else
  {
    v25 = v22[0];
    v26 = v22[1];
    v27 = v23;
    sub_100018778((uint64_t)&v25, (uint64_t)&v28, &qword_1000B0038);
    v29 = *((_QWORD *)&v26 + 1);
    v30[0] = v27;
    v19 = (void *)TTRListType.PredefinedSmartListType.remSmartListType.getter(a3);
    sub_100048094(&v28);
    sub_100048044(&v29);
    sub_100048044(v30);
    sub_10006FD50((uint64_t)&v25, (uint64_t)v19, a6, a7, a8);

    sub_10006C2D4(&v28);
    sub_10006C2AC(&v29);
    return sub_10006C2AC(v30);
  }
}

uint64_t sub_100067D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, uint64_t a7, void (*a8)(_QWORD *), uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_QWORD *);
  char v34[16];
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42[16];

  v30 = a3;
  v31 = a7;
  v29 = a2;
  v32 = a9;
  v33 = a8;
  v13 = sub_100006DA4(&qword_1000AD9C0);
  __chkstk_darwin(v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for REMNavigationSpecifier(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (uint64_t *)((char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = (char *)v19 + *(int *)(sub_100006DA4(&qword_1000ADA28) + 48);
  *v19 = objc_msgSend(*(id *)a4, "objectID");
  v21 = enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:);
  v22 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for REMNavigationSpecifier.list(_:), v16);
  v23 = *(_QWORD *)(a4 + 24);
  v24 = *(_QWORD *)(a4 + 32);
  (*(void (**)(char *, _QWORD *, uint64_t))(v17 + 16))(v15, v19, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  v25 = sub_100067F84(v23, v24, (uint64_t)v15, a6);
  sub_100009578((uint64_t)v15, &qword_1000AD9C0);
  v35 = a5;
  v36 = a4;
  v37 = v19;
  v38 = a1;
  v39 = v29;
  v40 = v30;
  v41 = v31;
  v26 = sub_1000636B0((void (*)(uint64_t))sub_10006C538, (uint64_t)v34, (uint64_t)v25, (uint64_t)v42, type metadata accessor for TTRNewWidgetTimelineEntry, (void (*)(BOOL, unint64_t, uint64_t))sub_10008192C, type metadata accessor for TTRNewWidgetPresenter.Snapshot);
  swift_bridgeObjectRelease(v25);
  v33(v26);
  swift_bridgeObjectRelease(v26);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v16);
}

_QWORD *sub_100067F84(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  BOOL v53;
  _QWORD *v54;
  void (*v55)(uint64_t, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  _QWORD *v105;
  char *v106;
  uint64_t v107;
  _QWORD *v108;
  char v109[16];
  uint64_t v110;
  uint64_t v111;
  char v112[16];
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117[8];

  v108 = (_QWORD *)a2;
  v8 = type metadata accessor for Date(0);
  v102 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v95 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for TTRNewWidgetPresenter.Snapshot(0);
  v100 = *(_QWORD *)(v101 - 8);
  v10 = __chkstk_darwin(v101);
  v104 = (uint64_t)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v96 = (uint64_t)&v83 - v12;
  v13 = sub_100006DA4(&qword_1000B0068);
  __chkstk_darwin(v13);
  v89 = (uint64_t)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Locale(0);
  __chkstk_darwin(v15);
  v88 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100006DA4(&qword_1000AD9C0);
  __chkstk_darwin(v17);
  v87 = (uint64_t)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  __chkstk_darwin(v19);
  v86 = (uint64_t)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100006DA4(&qword_1000B0070);
  __chkstk_darwin(v21);
  v23 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  v92 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v105 = (uint64_t *)((char *)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v107 = type metadata accessor for TTRNewWidgetPresenter.Division(0);
  v25 = *(_QWORD *)(v107 - 8);
  v26 = __chkstk_darwin(v107);
  v94 = (uint64_t)&v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v106 = (char *)&v83 - v28;
  v113 = a4;
  v114 = v4;
  v115 = a3;
  v29 = sub_1000636B0((void (*)(uint64_t))sub_10006C5D0, (uint64_t)v112, a1, (uint64_t)v117, type metadata accessor for TTRNewWidgetViewModel.Reminder, (void (*)(BOOL, unint64_t, uint64_t))sub_1000818D4, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
  v91 = v4;
  v110 = v4;
  v111 = a3;
  v90 = a3;
  v103 = sub_1000649B0((void (*)(_QWORD))sub_10006C5F0, (uint64_t)v109, a1);
  v30 = (uint64_t)v108;
  v31 = sub_10006C608((uint64_t)v108);
  v32 = sub_10006D314(v31, a4);
  swift_bridgeObjectRelease(v31);
  v116 = a1;
  swift_bridgeObjectRetain(a1);
  v33 = swift_bridgeObjectRetain(v30);
  sub_1000558A4(v33);
  v34 = v116;
  v35 = sub_10006E3F0(v32, v116, a4);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v32);
  v36 = *(_QWORD *)(v35 + 16);
  if (!v36)
  {
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease(v35);
    v39 = _swiftEmptyArrayStorage;
    goto LABEL_28;
  }
  v84 = OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_displayDateStyleForInterestingReminder;
  v37 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v83 = v35;
  v38 = v35 + v37;
  v39 = _swiftEmptyArrayStorage;
  v97 = *(_QWORD *)(v25 + 72);
  v40 = v92;
  v41 = (uint64_t)v106;
  v98 = v29;
  v93 = v8;
  v85 = v23;
  do
  {
    v108 = v39;
    sub_1000072AC(v38, v41, type metadata accessor for TTRNewWidgetPresenter.Division);
    sub_100009434(v41, (uint64_t)v23, &qword_1000B0070);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v23, 1, v99) == 1)
    {
      sub_100009578((uint64_t)v23, &qword_1000B0070);
LABEL_10:
      v48 = v107;
      v49 = v41 + *(int *)(v107 + 20);
      v50 = v102;
      v51 = v41;
      v52 = v95;
      (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v95, v49, v8);
      v53 = *(_BYTE *)(v51 + *(int *)(v48 + 24)) == 0;
      v29 = v98;
      if (v53)
        v54 = v103;
      else
        v54 = v98;
      swift_bridgeObjectRetain(v54);
      v55 = *(void (**)(uint64_t, char *, uint64_t))(v50 + 32);
      v56 = v104;
      v55(v104, v52, v8);
      v57 = v101;
      *(_QWORD *)(v56 + *(int *)(v101 + 20)) = v54;
      *(_DWORD *)(v56 + *(int *)(v57 + 24)) = 0;
      v58 = (unint64_t)v108;
      if ((swift_isUniquelyReferenced_nonNull_native(v108) & 1) == 0)
        v58 = sub_10001C424(0, *(_QWORD *)(v58 + 16) + 1, 1, v58);
      v41 = (uint64_t)v106;
      v60 = *(_QWORD *)(v58 + 16);
      v59 = *(_QWORD *)(v58 + 24);
      v61 = v58;
      if (v60 >= v59 >> 1)
        v61 = sub_10001C424(v59 > 1, v60 + 1, 1, v58);
      *(_QWORD *)(v61 + 16) = v60 + 1;
      v39 = (_QWORD *)v61;
      sub_100007EF0(v104, v61+ ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80))+ *(_QWORD *)(v100 + 72) * v60, type metadata accessor for TTRNewWidgetPresenter.Snapshot);
      goto LABEL_4;
    }
    v42 = (uint64_t)v105;
    sub_100007EF0((uint64_t)v23, (uint64_t)v105, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
    v43 = *(_QWORD *)(v42 + 24);
    v44 = *(_QWORD *)(v42 + 32);
    sub_10001E184((_QWORD *)v42, v43);
    v45 = v43;
    v41 = (uint64_t)v106;
    LOBYTE(v42) = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 64))(v45, v44);
    v46 = v94;
    sub_1000072AC(v41, v94, type metadata accessor for TTRNewWidgetPresenter.Division);
    if ((v42 & 1) != 0)
    {
      v47 = *(unsigned __int8 *)(v46 + *(int *)(v107 + 24));
      sub_100007EB4(v46, type metadata accessor for TTRNewWidgetPresenter.Division);
      if (v47 != 1)
      {
        sub_100007EB4((uint64_t)v105, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
        v8 = v93;
        goto LABEL_10;
      }
    }
    else
    {
      sub_100007EB4(v46, type metadata accessor for TTRNewWidgetPresenter.Division);
    }
    if (*(_BYTE *)(v41 + *(int *)(v107 + 24)))
      v62 = (uint64_t)v29;
    else
      v62 = (uint64_t)v103;
    swift_bridgeObjectRetain(v62);
    v63 = v105;
    sub_10001D418((uint64_t)v105, (uint64_t)&v116);
    v65 = v63[3];
    v64 = v63[4];
    sub_10001E184(v63, v65);
    v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v64 + 64))(v65, v64);
    v67 = v63[5];
    LODWORD(v65) = *(unsigned __int8 *)(v91 + v84);
    v68 = v87;
    v69 = sub_100009434(v90, v87, &qword_1000AD9C0);
    v70 = (uint64_t)v88;
    static Locale.current.getter(v69);
    v71 = v86;
    v72 = sub_10001DD84(&v116, v66 & 1, v65, v67, v68, v70, v86);
    __chkstk_darwin(v72);
    *(&v83 - 2) = v71;
    swift_bridgeObjectRetain(v62);
    v116 = sub_100063344((uint64_t (*)(char *))sub_10006F7EC, (uint64_t)(&v83 - 4), v62);
    v73 = v89;
    sub_1000072AC(v71, v89, type metadata accessor for TTRNewWidgetViewModel.Reminder);
    sub_10006BF20(0, 0, v73);
    sub_100007EB4(v71, type metadata accessor for TTRNewWidgetViewModel.Reminder);
    v74 = v62;
    v41 = (uint64_t)v106;
    swift_bridgeObjectRelease(v74);
    v75 = v116;
    v76 = v96;
    v8 = v93;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 16))(v96, v41 + *(int *)(v107 + 20), v93);
    v77 = v101;
    *(_QWORD *)(v76 + *(int *)(v101 + 20)) = v75;
    *(_DWORD *)(v76 + *(int *)(v77 + 24)) = 1065353216;
    v78 = (unint64_t)v108;
    if ((swift_isUniquelyReferenced_nonNull_native(v108) & 1) == 0)
      v78 = sub_10001C424(0, *(_QWORD *)(v78 + 16) + 1, 1, v78);
    v80 = *(_QWORD *)(v78 + 16);
    v79 = *(_QWORD *)(v78 + 24);
    v81 = v78;
    v23 = v85;
    v40 = v92;
    v29 = v98;
    if (v80 >= v79 >> 1)
      v81 = sub_10001C424(v79 > 1, v80 + 1, 1, v78);
    *(_QWORD *)(v81 + 16) = v80 + 1;
    v39 = (_QWORD *)v81;
    sub_100007EF0(v96, v81+ ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80))+ *(_QWORD *)(v100 + 72) * v80, type metadata accessor for TTRNewWidgetPresenter.Snapshot);
    sub_100007EB4((uint64_t)v105, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
LABEL_4:
    sub_100007EB4(v41, type metadata accessor for TTRNewWidgetPresenter.Division);
    v38 += v97;
    --v36;
  }
  while (v36);
  swift_bridgeObjectRelease(v29);
  swift_bridgeObjectRelease(v83);
LABEL_28:
  swift_bridgeObjectRelease(v103);
  return v39;
}

uint64_t sub_1000688D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  float v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;

  v47 = a7;
  v48 = a4;
  v50 = a5;
  v51 = a6;
  v49 = a2;
  v53 = a8;
  v10 = sub_100006DA4(&qword_1000AD928);
  __chkstk_darwin(v10);
  v52 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date(0);
  v45 = *(_QWORD *)(v12 - 8);
  v46 = v12;
  __chkstk_darwin(v12);
  v44 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for URL(0);
  v42 = *(_QWORD *)(v14 - 8);
  v43 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TTRNewWidgetViewModel(0);
  v18 = __chkstk_darwin(v17);
  v41 = (uint64_t)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v21 = (char *)&v40 - v20;
  v23 = *(void **)a3;
  v22 = *(_QWORD *)(a3 + 8);
  LODWORD(a3) = *(unsigned __int8 *)(a3 + 16);
  v24 = type metadata accessor for TTRNewWidgetPresenter.Snapshot(0);
  v25 = *(_QWORD *)(a1 + *(int *)(v24 + 20));
  REMNavigationSpecifier.url.getter(v24);
  v26 = *(int *)(v24 + 24);
  sub_100068B90(v23, v22, a3, v25, (uint64_t)v16, v48, v50, v51, (uint64_t)v21, *(float *)(a1 + v26) > 0.0);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v43);
  v28 = v44;
  v27 = v45;
  v29 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v44, a1, v46);
  v30 = v41;
  v31 = sub_1000072AC((uint64_t)v21, v41, type metadata accessor for TTRNewWidgetViewModel);
  v32 = *(float *)(a1 + v26);
  v33 = v52;
  TimelineEntryRelevance.init(score:duration:)(v31, v32, 1200.0);
  sub_100007EB4((uint64_t)v21, type metadata accessor for TTRNewWidgetViewModel);
  v34 = type metadata accessor for TimelineEntryRelevance(0);
  v35 = (uint64_t)v33;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 0, 1, v34);
  v36 = *(void (**)(uint64_t, char *, uint64_t))(v27 + 32);
  v37 = v53;
  v36(v53, v28, v29);
  v38 = type metadata accessor for TTRNewWidgetTimelineEntry(0);
  sub_100007EF0(v30, v37 + *(int *)(v38 + 20), type metadata accessor for TTRNewWidgetViewModel);
  return sub_100018778(v35, v37 + *(int *)(v38 + 24), &qword_1000AD928);
}

uint64_t sub_100068B90@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD v85[3];
  uint64_t v86;
  void *v87;
  _QWORD v88[7];
  _QWORD v89[5];
  char v90;
  uint64_t v91;

  v82 = a8;
  v81 = a6;
  v79 = a5;
  v83 = a4;
  v80 = a3;
  v84 = a2;
  v13 = sub_100006DA4(&qword_1000ACCD8);
  __chkstk_darwin(v13);
  v78 = (uint64_t)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TTRListColors(0);
  v15 = sub_100058A28(0, &qword_1000B0058, REMList_ptr);
  v89[3] = v15;
  v89[4] = &protocol witness table for REMList;
  v89[0] = a1;
  v16 = a1;
  static TTRListColors.color(for:)(v88, v89);
  v17 = sub_100009578((uint64_t)v89, &qword_1000B0060);
  v77 = TTRListColors.Color.nativeColor.getter(v17);
  sub_100070004((uint64_t)v88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006C580);
  v86 = v15;
  v87 = &protocol witness table for REMList;
  v85[0] = v16;
  v18 = v16;
  static TTRListColors.color(for:)(v89, v85);
  v19 = sub_100009578((uint64_t)v85, &qword_1000B0060);
  v76 = TTRListColors.Color.localizedDescription.getter(v19);
  v75 = v20;
  sub_100070004((uint64_t)v89, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006C580);
  v21 = objc_msgSend(v18, "appearanceContext");
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend(v21, "badge");

    if (v23)
    {
      v24 = objc_msgSend(v23, "emoji");
      if (v24)
      {
        v25 = v24;
        v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
        v71 = v26;

        v70 = 0;
        v69 = 0;
        v27 = &v91;
        goto LABEL_7;
      }

    }
  }
  type metadata accessor for TTRListBadgeEmblem(0);
  v86 = v15;
  v87 = &protocol witness table for REMList;
  v85[0] = v18;
  v28 = v18;
  v29 = (void *)static TTRListBadgeEmblem.badgeEmblem(for:)(v85);
  sub_10001D26C(v85);
  v73 = REMListBadgeEmblem.image.getter(v29);

  v86 = v15;
  v87 = &protocol witness table for REMList;
  v85[0] = v28;
  v30 = v28;
  v31 = (void *)static TTRListBadgeEmblem.badgeEmblem(for:)(v85);
  sub_10001D26C(v85);
  v70 = REMListBadgeEmblem.name.getter(v31);
  v69 = v32;

  v72 = 0;
  v27 = (uint64_t *)&v90;
LABEL_7:
  *(v27 - 32) = 0;
  v33 = objc_msgSend(v18, "displayName");
  v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v68 = v35;

  v36 = (void *)objc_opt_self(NSNumberFormatter);
  v37 = objc_allocWithZone((Class)NSNumber);
  v38 = objc_msgSend(v37, "initWithInteger:", v84);
  v39 = objc_msgSend(v36, "localizedStringFromNumber:numberStyle:", v38, 1);

  v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
  v42 = v41;

  v43 = *(_QWORD *)(v74 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_moreFormatString);
  v44 = *(_QWORD *)(v74 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_moreFormatString + 8);
  if ((a10 & 1) != 0)
  {
    v74 = v34;
    v45 = a7;
    v46 = v83;
    v47 = *(_QWORD *)(v83 + 16);
    v48 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    v49 = *(_QWORD *)(v48 - 8);
    if (v47)
    {
      v50 = v46 + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80));
      v51 = v78;
      sub_1000072AC(v50, v78, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v49 + 56))(v51, 0, 1, v48);
    }
    else
    {
      v51 = v78;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(v78, 1, 1, v48);
    }
    a7 = v45;
    v34 = v74;
  }
  else
  {
    v52 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    v51 = v78;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v78, 1, 1, v52);
  }
  v53 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v54 = a9 + v53[18];
  v55 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v54, v79, v55);
  v56 = v68;
  *(_QWORD *)a9 = v34;
  *(_QWORD *)(a9 + 8) = v56;
  *(_QWORD *)(a9 + 16) = v84;
  *(_QWORD *)(a9 + 24) = v40;
  *(_QWORD *)(a9 + 32) = v42;
  *(_BYTE *)(a9 + 40) = v80;
  *(_QWORD *)(a9 + 48) = v43;
  *(_QWORD *)(a9 + 56) = v44;
  sub_100018778(v51, a9 + v53[9], &qword_1000ACCD8);
  *(_QWORD *)(a9 + v53[10]) = v77;
  v57 = (uint64_t *)(a9 + v53[11]);
  v58 = v75;
  *v57 = v76;
  v57[1] = v58;
  *(_QWORD *)(a9 + v53[12]) = v73;
  v59 = (uint64_t *)(a9 + v53[13]);
  v60 = v69;
  *v59 = v70;
  v59[1] = v60;
  v61 = (uint64_t *)(a9 + v53[14]);
  v62 = v71;
  *v61 = v72;
  v61[1] = v62;
  *(_BYTE *)(a9 + v53[15]) = 0;
  v63 = (_QWORD *)(a9 + v53[16]);
  *v63 = v81;
  v63[1] = a7;
  v64 = v82;
  *(_QWORD *)(a9 + v53[17]) = v82;
  v65 = v83;
  *(_QWORD *)(a9 + v53[19]) = v83;
  *(_BYTE *)(a9 + v53[20]) = 2;
  swift_bridgeObjectRetain(v64);
  swift_bridgeObjectRetain(v44);
  swift_bridgeObjectRetain(v65);
  return swift_bridgeObjectRetain(a7);
}

uint64_t sub_100069110(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD), uint64_t a4)
{
  uint64_t v4;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  void (*v38)(_QWORD *, uint64_t, _QWORD, _QWORD, uint64_t (*)(_QWORD *), _QWORD *, uint64_t, uint64_t, double, double);
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  double v44;
  double v45;

  sub_10006C48C((__int128 *)(v4 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_shareeInfoStyle), (uint64_t)&v42);
  if (!v43)
    return a3(0, 0, 0);
  v8 = v44;
  v9 = v45;
  sub_100006E64(&v42, (uint64_t)v39);
  if (qword_1000AC968 != -1)
    swift_once(&qword_1000AC968, sub_1000658B8);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_10000CF70(v10, (uint64_t)qword_1000AFEE8);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "TTRNewWidgetPresenter checking to see if list has sharees", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  v15 = REMList.participantsToShowForSharingStatus(maxCount:)(4, 0);
  v16 = v15;
  v17 = *(_QWORD *)(v15 + 16);
  if (v17)
  {
    v18 = TTRParticipantAvatarRenderConfiguration.init(width:height:scales:rightToLeft:)(a2, 0, v8, v9);
    v20 = v19;
    v22 = v21;
    v23 = v18;
    v25 = v24;
    if (v17 <= 4)
    {
      swift_bridgeObjectRetain(a2);
      v30 = swift_bridgeObjectRetain(v16);
      v29 = (_QWORD *)v16;
    }
    else
    {
      v26 = type metadata accessor for __ContiguousArrayStorageBase(0);
      swift_bridgeObjectRetain_n(v16, 3);
      swift_bridgeObjectRetain(a2);
      v27 = (_QWORD *)swift_dynamicCastClass(v16, v26);
      if (!v27)
      {
        swift_bridgeObjectRelease(v16);
        v27 = _swiftEmptyArrayStorage;
      }
      v28 = v27[2];
      swift_release(v27);
      if (v28 == 4)
      {
        v29 = (_QWORD *)swift_dynamicCastClass(v16, v26);
        v30 = swift_bridgeObjectRelease(v16);
        if (!v29)
        {
          v30 = swift_bridgeObjectRelease(v16);
          v29 = _swiftEmptyArrayStorage;
        }
      }
      else
      {
        swift_bridgeObjectRelease(v16);
        v29 = sub_10006BD98(v16, v16 + 32, 0, 9uLL);
        v30 = swift_bridgeObjectRelease(v16);
      }
    }
    v32 = Logger.logObject.getter(v30);
    v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "TTRNewWidgetPresenter fetching sharee data", v34, 2u);
      swift_slowDealloc(v34, -1, -1);
    }

    v35 = v40;
    v36 = v41;
    sub_10001E184(v39, v40);
    v37 = (_QWORD *)swift_allocObject(&unk_1000A96D8, 40, 7);
    v37[2] = v16;
    v37[3] = a3;
    v37[4] = a4;
    v38 = *(void (**)(_QWORD *, uint64_t, _QWORD, _QWORD, uint64_t (*)(_QWORD *), _QWORD *, uint64_t, uint64_t, double, double))(v36 + 8);
    swift_retain(a4);
    v38(v29, v23, v25 & 1, 0, sub_10006C52C, v37, v35, v36, v20, v22);
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v29);
    swift_release(v37);
  }
  else
  {
    swift_bridgeObjectRelease(v15);
    a3(0, 0, 0);
  }
  return sub_10001D26C(v39);
}

uint64_t sub_100069480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;

  v42 = a2;
  v43 = a4;
  v45 = a5;
  v7 = sub_100006DA4(&qword_1000AD928);
  __chkstk_darwin(v7);
  v44 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date(0);
  v40 = *(_QWORD *)(v9 - 8);
  v41 = v9;
  __chkstk_darwin(v9);
  v39 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  v37 = *(_QWORD *)(v11 - 8);
  v38 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TTRNewWidgetViewModel(0);
  v15 = __chkstk_darwin(v14);
  v36 = (uint64_t)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v18 = (char *)&v36 - v17;
  v20 = *(void **)a3;
  v19 = *(_QWORD *)(a3 + 8);
  LODWORD(a3) = *(unsigned __int8 *)(a3 + 16);
  v21 = type metadata accessor for TTRNewWidgetPresenter.Snapshot(0);
  v22 = *(_QWORD *)(a1 + *(int *)(v21 + 20));
  REMNavigationSpecifier.url.getter(v21);
  v23 = *(int *)(v21 + 24);
  sub_100069720(v20, v19, a3, v22, (uint64_t)v13, *(float *)(a1 + v23) > 0.0, (uint64_t)v18);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v38);
  v25 = v39;
  v24 = v40;
  v26 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v39, a1, v41);
  v27 = v36;
  v28 = sub_1000072AC((uint64_t)v18, v36, type metadata accessor for TTRNewWidgetViewModel);
  v29 = v44;
  TimelineEntryRelevance.init(score:duration:)(v28, *(float *)(a1 + v23), 1200.0);
  sub_100007EB4((uint64_t)v18, type metadata accessor for TTRNewWidgetViewModel);
  v30 = type metadata accessor for TimelineEntryRelevance(0);
  v31 = (uint64_t)v29;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 0, 1, v30);
  v32 = *(void (**)(uint64_t, char *, uint64_t))(v24 + 32);
  v33 = v45;
  v32(v45, v25, v26);
  v34 = type metadata accessor for TTRNewWidgetTimelineEntry(0);
  sub_100007EF0(v27, v33 + *(int *)(v34 + 20), type metadata accessor for TTRNewWidgetViewModel);
  return sub_100018778(v31, v33 + *(int *)(v34 + 24), &qword_1000AD928);
}

uint64_t sub_100069720@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t *v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  _QWORD v76[3];
  uint64_t v77;
  void *v78;
  _QWORD v79[7];
  _QWORD v80[5];
  uint64_t v81;
  uint64_t v82;

  LODWORD(v68) = a6;
  v74 = a5;
  v75 = a3;
  v11 = sub_100006DA4(&qword_1000ACCD8);
  __chkstk_darwin(v11);
  v72 = (uint64_t)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TTRListColors(0);
  v13 = sub_100058A28(0, &qword_1000B0098, REMSmartList_ptr);
  v80[3] = v13;
  v80[4] = &protocol witness table for REMSmartList;
  v80[0] = a1;
  v14 = a1;
  static TTRListColors.color(for:)(v79, v80);
  v15 = sub_100009578((uint64_t)v80, &qword_1000B0060);
  v71 = TTRListColors.Color.nativeColor.getter(v15);
  sub_100070004((uint64_t)v79, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006C580);
  v77 = v13;
  v78 = &protocol witness table for REMSmartList;
  v76[0] = v14;
  v16 = v14;
  static TTRListColors.color(for:)(v80, v76);
  v17 = sub_100009578((uint64_t)v76, &qword_1000B0060);
  v70 = TTRListColors.Color.localizedDescription.getter(v17);
  v69 = v18;
  sub_100070004((uint64_t)v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006C580);
  v19 = objc_msgSend(v16, "customContext");
  if (v19)
  {
    v20 = v19;
    v21 = objc_msgSend(v19, "badge");

    if (v21)
    {
      v22 = objc_msgSend(v21, "emoji");
      if (v22)
      {
        v23 = v22;
        v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
        v64 = v24;

        v63 = 0;
        v62 = 0;
        v25 = &v82;
        goto LABEL_7;
      }

    }
  }
  type metadata accessor for TTRListBadgeEmblem(0);
  v77 = v13;
  v78 = &protocol witness table for REMSmartList;
  v76[0] = v16;
  v26 = v16;
  v27 = (void *)static TTRListBadgeEmblem.badgeEmblem(for:)(v76);
  sub_10001D26C(v76);
  v66 = REMListBadgeEmblem.image.getter(v27);

  v77 = v13;
  v78 = &protocol witness table for REMSmartList;
  v76[0] = v26;
  v28 = v26;
  v29 = (void *)static TTRListBadgeEmblem.badgeEmblem(for:)(v76);
  sub_10001D26C(v76);
  v63 = REMListBadgeEmblem.name.getter(v29);
  v62 = v30;

  v65 = 0;
  v25 = &v81;
LABEL_7:
  *(v25 - 32) = 0;
  v76[0] = v16;
  v31 = protocol witness for TTRListProtocol.displayName.getter in conformance REMSmartList(v13, &protocol witness table for REMSmartList);
  v61 = v32;
  v33 = (void *)objc_opt_self(NSNumberFormatter);
  v34 = objc_allocWithZone((Class)NSNumber);
  v73 = a2;
  v35 = objc_msgSend(v34, "initWithInteger:", a2);
  v36 = objc_msgSend(v33, "localizedStringFromNumber:numberStyle:", v35, 1);

  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
  v39 = v38;

  v40 = *(_QWORD *)(v67 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_moreFormatString);
  v41 = *(_QWORD *)(v67 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_moreFormatString + 8);
  if ((v68 & 1) != 0)
  {
    v68 = v31;
    v42 = a4;
    v43 = *(_QWORD *)(a4 + 16);
    v44 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    v45 = *(_QWORD *)(v44 - 8);
    v46 = v72;
    if (v43)
    {
      sub_1000072AC(v42 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80)), v72, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(v46, 0, 1, v44);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56))(v72, 1, 1, v44);
    }
    a4 = v42;
    v31 = v68;
  }
  else
  {
    v47 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    v46 = v72;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v72, 1, 1, v47);
  }
  v48 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v49 = a7 + v48[18];
  v50 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v49, v74, v50);
  v51 = v61;
  *(_QWORD *)a7 = v31;
  *(_QWORD *)(a7 + 8) = v51;
  *(_QWORD *)(a7 + 16) = v73;
  *(_QWORD *)(a7 + 24) = v37;
  *(_QWORD *)(a7 + 32) = v39;
  *(_BYTE *)(a7 + 40) = v75;
  *(_QWORD *)(a7 + 48) = v40;
  *(_QWORD *)(a7 + 56) = v41;
  sub_100018778(v46, a7 + v48[9], &qword_1000ACCD8);
  *(_QWORD *)(a7 + v48[10]) = v71;
  v52 = (uint64_t *)(a7 + v48[11]);
  v53 = v69;
  *v52 = v70;
  v52[1] = v53;
  *(_QWORD *)(a7 + v48[12]) = v66;
  v54 = (uint64_t *)(a7 + v48[13]);
  v55 = v62;
  *v54 = v63;
  v54[1] = v55;
  v56 = (uint64_t *)(a7 + v48[14]);
  v57 = v64;
  *v56 = v65;
  v56[1] = v57;
  *(_BYTE *)(a7 + v48[15]) = 1;
  v58 = (_QWORD *)(a7 + v48[16]);
  *v58 = 0;
  v58[1] = 0;
  *(_QWORD *)(a7 + v48[17]) = 0;
  *(_QWORD *)(a7 + v48[19]) = a4;
  *(_BYTE *)(a7 + v48[20]) = 2;
  swift_bridgeObjectRetain(v41);
  return swift_bridgeObjectRetain(a4);
}

uint64_t sub_100069C68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;

  v41 = a3;
  v42 = a2;
  v44 = a5;
  v7 = sub_100006DA4(&qword_1000AD928);
  __chkstk_darwin(v7);
  v43 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date(0);
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  __chkstk_darwin(v9);
  v38 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  v36 = *(_QWORD *)(v11 - 8);
  v37 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TTRNewWidgetViewModel(0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v35 - v18;
  v20 = *(_QWORD *)(a4 + 8);
  LODWORD(a4) = *(unsigned __int8 *)(a4 + 16);
  v21 = type metadata accessor for TTRNewWidgetPresenter.Snapshot(0);
  v22 = *(_QWORD *)(a1 + *(int *)(v21 + 20));
  REMNavigationSpecifier.url.getter(v21);
  v23 = *(int *)(v21 + 24);
  sub_100069EFC(v41, v20, a4, v22, (uint64_t)v13, *(float *)(a1 + v23) > 0.0, (uint64_t)v19);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v37);
  v25 = v38;
  v24 = v39;
  v26 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v38, a1, v40);
  v27 = sub_1000072AC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TTRNewWidgetViewModel);
  v28 = v43;
  TimelineEntryRelevance.init(score:duration:)(v27, *(float *)(a1 + v23), 1200.0);
  sub_100007EB4((uint64_t)v19, type metadata accessor for TTRNewWidgetViewModel);
  v29 = type metadata accessor for TimelineEntryRelevance(0);
  v30 = (uint64_t)v28;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 0, 1, v29);
  v31 = *(void (**)(uint64_t, char *, uint64_t))(v24 + 32);
  v32 = v44;
  v31(v44, v25, v26);
  v33 = type metadata accessor for TTRNewWidgetTimelineEntry(0);
  sub_100007EF0((uint64_t)v17, v32 + *(int *)(v33 + 20), type metadata accessor for TTRNewWidgetViewModel);
  return sub_100018778(v30, v32 + *(int *)(v33 + 24), &qword_1000AD928);
}

uint64_t sub_100069EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  char v61[24];
  _BYTE v62[56];

  v8 = v7;
  v16 = sub_100006DA4(&qword_1000ACCD8);
  __chkstk_darwin(v16);
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = REMSmartListType.title.getter(a1);
  v55 = v20;
  v56 = v19;
  v21 = REMSmartListType.color.getter(a1);
  v59 = a3;
  v57 = a5;
  if (v21)
  {
    v22 = v21;
  }
  else
  {
    v23 = TTRListColors.defaultColor.unsafeMutableAddressor(0);
    swift_beginAccess(v23, v61, 0, 0);
    sub_10006FFC8(v23, (uint64_t)v62);
    v24 = sub_100070004((uint64_t)v62, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100070040);
    v22 = TTRListColors.Color.nativeColor.getter(v24);
    sub_100070004((uint64_t)v62, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006C580);
  }
  v54 = REMSmartListType.glyph.getter(a1);
  v25 = (void *)objc_opt_self(NSNumberFormatter);
  v26 = objc_allocWithZone((Class)NSNumber);
  v58 = a2;
  v27 = objc_msgSend(v26, "initWithInteger:", a2);
  v28 = objc_msgSend(v25, "localizedStringFromNumber:numberStyle:", v27, 1);

  v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v30 = v29;

  v31 = *(_QWORD *)(v8 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_moreFormatString);
  v32 = *(_QWORD *)(v8 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_moreFormatString + 8);
  v60 = a4;
  if ((a6 & 1) != 0)
  {
    v33 = a4;
    v34 = *(_QWORD *)(a4 + 16);
    v35 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    v36 = *(_QWORD *)(v35 - 8);
    if (v34)
    {
      sub_1000072AC(v33 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80)), (uint64_t)v18, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
      v38 = v18;
      v39 = 0;
    }
    else
    {
      v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
      v38 = v18;
      v39 = 1;
    }
    v37(v38, v39, 1, v35);
  }
  else
  {
    v40 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v18, 1, 1, v40);
  }
  if (v55)
    v41 = v55;
  else
    v41 = 0xE000000000000000;
  if (v55)
    v42 = v56;
  else
    v42 = 0;
  v43 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v44 = a7 + v43[18];
  v45 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v44, v57, v45);
  *(_QWORD *)a7 = v42;
  *(_QWORD *)(a7 + 8) = v41;
  v46 = v53;
  *(_QWORD *)(a7 + 16) = v58;
  *(_QWORD *)(a7 + 24) = v46;
  *(_QWORD *)(a7 + 32) = v30;
  *(_BYTE *)(a7 + 40) = v59;
  *(_QWORD *)(a7 + 48) = v31;
  *(_QWORD *)(a7 + 56) = v32;
  sub_100018778((uint64_t)v18, a7 + v43[9], &qword_1000ACCD8);
  *(_QWORD *)(a7 + v43[10]) = v22;
  v47 = (_QWORD *)(a7 + v43[11]);
  *v47 = 0;
  v47[1] = 0;
  *(_QWORD *)(a7 + v43[12]) = v54;
  v48 = (_QWORD *)(a7 + v43[13]);
  *v48 = 0;
  v48[1] = 0;
  v49 = (_QWORD *)(a7 + v43[14]);
  *v49 = 0;
  v49[1] = 0;
  *(_BYTE *)(a7 + v43[15]) = 0;
  v50 = (_QWORD *)(a7 + v43[16]);
  *v50 = 0;
  v50[1] = 0;
  *(_QWORD *)(a7 + v43[17]) = 0;
  v51 = v60;
  *(_QWORD *)(a7 + v43[19]) = v60;
  *(_BYTE *)(a7 + v43[20]) = 2;
  swift_bridgeObjectRetain(v32);
  return swift_bridgeObjectRetain(v51);
}

uint64_t sub_10006A228(_QWORD *a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, char *))
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  char *v27;
  char *v28;
  void *v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  Swift::String v39;
  Swift::String v40;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v43;
  uint64_t v44;
  Swift::String v45;
  Swift::String v46;
  Swift::String v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t result;

  if (qword_1000AC968 != -1)
LABEL_51:
    swift_once(&qword_1000AC968, sub_1000658B8);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_10000CF70(v4, (uint64_t)qword_1000AFEE8);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "TTRNewWidgetPresenter fetched sharee data", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = a1[2];
  if (v9)
  {
    swift_bridgeObjectRetain(a1);
    v10 = (char *)_swiftEmptyArrayStorage;
    v11 = 4;
    v12 = v9;
    while (1)
    {
      v13 = a1[v11];
      v14 = *(_QWORD *)(v13 + 16);
      v15 = *((_QWORD *)v10 + 2);
      v16 = v15 + v14;
      if (__OFADD__(v15, v14))
      {
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
      swift_bridgeObjectRetain(a1[v11]);
      isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(v10);
      if ((_DWORD)isUniquelyReferenced_nonNull_native && v16 <= *((_QWORD *)v10 + 3) >> 1)
      {
        if (*(_QWORD *)(v13 + 16))
          goto LABEL_17;
      }
      else
      {
        if (v15 <= v16)
          v18 = v15 + v14;
        else
          v18 = v15;
        v10 = sub_10001C558(isUniquelyReferenced_nonNull_native, v18, 1, v10);
        if (*(_QWORD *)(v13 + 16))
        {
LABEL_17:
          v19 = *((_QWORD *)v10 + 2);
          if ((*((_QWORD *)v10 + 3) >> 1) - v19 < v14)
            goto LABEL_49;
          v20 = (unint64_t)&v10[16 * v19 + 32];
          if (v13 + 32 < v20 + 16 * v14 && v20 < v13 + 32 + 16 * v14)
          {
            result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy(v20);
          if (v14)
          {
            v22 = *((_QWORD *)v10 + 2);
            v23 = __OFADD__(v22, v14);
            v24 = v22 + v14;
            if (v23)
              goto LABEL_50;
            *((_QWORD *)v10 + 2) = v24;
          }
          goto LABEL_7;
        }
      }
      if (v14)
        goto LABEL_48;
LABEL_7:
      swift_bridgeObjectRelease(v13);
      v11 += 3;
      if (!--v12)
      {
        swift_bridgeObjectRelease(a1);
        v25 = *((_QWORD *)v10 + 2);
        if (!v25)
          goto LABEL_37;
LABEL_27:
        swift_bridgeObjectRetain(v10);
        v26 = (uint64_t *)(v10 + 40);
        v27 = (char *)_swiftEmptyArrayStorage;
        do
        {
          v29 = (void *)*(v26 - 1);
          if (v29)
          {
            v30 = *v26;
            v31 = v29;
            if ((swift_isUniquelyReferenced_nonNull_native(v27) & 1) == 0)
              v27 = sub_10001C44C(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
            v33 = *((_QWORD *)v27 + 2);
            v32 = *((_QWORD *)v27 + 3);
            if (v33 >= v32 >> 1)
              v27 = sub_10001C44C((char *)(v32 > 1), v33 + 1, 1, v27);
            *((_QWORD *)v27 + 2) = v33 + 1;
            v28 = &v27[16 * v33];
            *((_QWORD *)v28 + 4) = v31;
            *((_QWORD *)v28 + 5) = v30;
          }
          v26 += 2;
          --v25;
        }
        while (v25);
        swift_bridgeObjectRelease(v10);
        goto LABEL_38;
      }
    }
  }
  v10 = (char *)_swiftEmptyArrayStorage;
  v25 = _swiftEmptyArrayStorage[2];
  if (v25)
    goto LABEL_27;
LABEL_37:
  v27 = (char *)_swiftEmptyArrayStorage;
LABEL_38:
  swift_bridgeObjectRelease(v10);
  if (v9)
  {
    v34 = a1[5];
    v35 = a1[6];
    v36 = *(_QWORD *)(a2 + 16);
    if (v36)
    {
      v37 = v36 - 1;
      if (v36 == 1)
      {
        swift_bridgeObjectRetain(v35);
        v38._object = (void *)0x8000000100090870;
        v39._countAndFlagsBits = 0x7720646572616853;
        v39._object = (void *)0xEE00402520687469;
        v38._countAndFlagsBits = 0xD000000000000027;
        v40 = TTRLocalizedString(_:comment:)(v39, v38);
        countAndFlagsBits = v40._countAndFlagsBits;
        object = v40._object;
        v43 = sub_100006DA4(&qword_1000AD2E8);
        v44 = swift_allocObject(v43, 72, 7);
        *(_OWORD *)(v44 + 16) = xmmword_1000882D0;
        *(_QWORD *)(v44 + 56) = &type metadata for String;
        *(_QWORD *)(v44 + 64) = sub_100024070();
        *(_QWORD *)(v44 + 32) = v34;
        *(_QWORD *)(v44 + 40) = v35;
      }
      else
      {
        swift_bridgeObjectRetain(v35);
        v45._object = (void *)0x8000000100090840;
        v46._countAndFlagsBits = 0x206425202B204025;
        v46._object = (void *)0xEC00000065726F4DLL;
        v45._countAndFlagsBits = 0xD000000000000027;
        v47 = TTRLocalizedString(_:comment:)(v46, v45);
        countAndFlagsBits = v47._countAndFlagsBits;
        object = v47._object;
        v48 = sub_100006DA4(&qword_1000AD2E8);
        v44 = swift_allocObject(v48, 112, 7);
        *(_OWORD *)(v44 + 16) = xmmword_1000895E0;
        *(_QWORD *)(v44 + 56) = &type metadata for String;
        v49 = sub_100024070();
        *(_QWORD *)(v44 + 32) = v34;
        *(_QWORD *)(v44 + 40) = v35;
        *(_QWORD *)(v44 + 96) = &type metadata for Int;
        *(_QWORD *)(v44 + 104) = &protocol witness table for Int;
        *(_QWORD *)(v44 + 64) = v49;
        *(_QWORD *)(v44 + 72) = v37;
      }
      v34 = String.init(format:_:)(countAndFlagsBits, object, v44);
      v35 = v50;
      swift_bridgeObjectRelease(object);
    }
    else
    {
      swift_bridgeObjectRetain(v35);
    }
  }
  else
  {
    v34 = 0;
    v35 = 0;
  }
  a3(v34, v35, v27);
  swift_bridgeObjectRelease(v27);
  return swift_bridgeObjectRelease(v35);
}

uint64_t sub_10006A6FC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];

  v28 = a2;
  v29 = a4;
  v30 = a5;
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100006DA4(&qword_1000AD9C0);
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100006DA4(&qword_1000AD8B8);
  __chkstk_darwin(v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Date(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001D418((uint64_t)a1, (uint64_t)v31);
  v20 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  sub_100009434((uint64_t)a1 + *(int *)(v20 + 24), (uint64_t)v15, &qword_1000AD8B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_100009578((uint64_t)v15, &qword_1000AD8B8);
    v21 = a1[3];
    v22 = a1[4];
    sub_10001E184(a1, v21);
    v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 64))(v21, v22);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    v23 = static Date.< infix(_:_:)(v19, v28);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  v24 = a1[5];
  v25 = *(unsigned __int8 *)(a3
                           + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_displayDateStyleForBaseReminder);
  v26 = sub_100009434(v29, (uint64_t)v12, &qword_1000AD9C0);
  static Locale.current.getter(v26);
  return sub_10001DD84(v31, v23 & 1, v25, v24, (uint64_t)v12, (uint64_t)v9, v30);
}

uint64_t sub_10006A934@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[5];

  v8 = type metadata accessor for Locale(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v23[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100006DA4(&qword_1000AD9C0);
  __chkstk_darwin(v11);
  v13 = (char *)&v23[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v14 = a1[4];
  sub_10001E184(a1, v15);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 64))(v15, v14) & 1) != 0)
  {
    v16 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a4, 1, 1, v16);
  }
  else
  {
    sub_10001D418((uint64_t)a1, (uint64_t)v23);
    v18 = a1[5];
    v19 = *(unsigned __int8 *)(a2
                             + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_displayDateStyleForBaseReminder);
    v20 = sub_100009434(a3, (uint64_t)v13, &qword_1000AD9C0);
    static Locale.current.getter(v20);
    sub_10001DD84(v23, 0, v19, v18, (uint64_t)v13, (uint64_t)v10, a4);
    v21 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a4, 0, 1, v21);
  }
}

uint64_t sub_10006AABC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = sub_100006DA4(&qword_1000B0080);
  v5 = __chkstk_darwin(v4);
  v27 = (uint64_t)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v26 - v8;
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v26 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v26 - v13;
  v15 = type metadata accessor for Date(0);
  v16 = a1 + *(int *)(v4 + 36);
  v17 = sub_100007218(&qword_1000AF898, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  LOBYTE(v16) = dispatch thunk of static Comparable.<= infix(_:_:)(v16, v2, v15, v17);
  sub_100009434(v2, (uint64_t)v14, &qword_1000B0080);
  sub_100009434(a1, (uint64_t)v12, &qword_1000B0080);
  if ((v16 & 1) != 0)
  {
    sub_100009578((uint64_t)v12, &qword_1000B0080);
    sub_100009578((uint64_t)v14, &qword_1000B0080);
    sub_100009434(v2, (uint64_t)v9, &qword_1000B0080);
LABEL_4:
    sub_100009578((uint64_t)v9, &qword_1000B0080);
    v19 = a1;
    v20 = v27;
    sub_100009434(v19, v27, &qword_1000B0080);
    goto LABEL_5;
  }
  v18 = dispatch thunk of static Comparable.<= infix(_:_:)(&v14[*(int *)(v4 + 36)], v12, v15, v17);
  sub_100009578((uint64_t)v12, &qword_1000B0080);
  sub_100009578((uint64_t)v14, &qword_1000B0080);
  sub_100009434(v2, (uint64_t)v9, &qword_1000B0080);
  if ((v18 & 1) != 0)
    goto LABEL_4;
  v23 = &v9[*(int *)(v4 + 36)];
  v24 = sub_100007218(&qword_1000B0088, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  LOBYTE(v23) = dispatch thunk of static Equatable.== infix(_:_:)(v9, v23, v15, v24);
  sub_100009578((uint64_t)v9, &qword_1000B0080);
  v25 = a1;
  v20 = v27;
  sub_100009434(v25, v27, &qword_1000B0080);
  if ((v23 & 1) == 0)
  {
    v21 = dispatch thunk of static Equatable.== infix(_:_:)(v20, v20 + *(int *)(v4 + 36), v15, v24) ^ 1;
    goto LABEL_6;
  }
LABEL_5:
  v21 = 0;
LABEL_6:
  sub_100009578(v20, &qword_1000B0080);
  return v21 & 1;
}

uint64_t sub_10006AD4C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unint64_t v26;
  uint64_t v27;
  char v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);

  v4 = sub_100006DA4(&qword_1000AD8B8);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v30 - v8;
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v30 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
  {
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v18(v9, 1, 1, v10);
    goto LABEL_7;
  }
  v32 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v35 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  v35(v9, a1 + v32, v10);
  v33 = a1;
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v18(v9, 0, 1, v10);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v19(v9, 1, v10) == 1)
  {
LABEL_7:
    sub_100009578((uint64_t)v9, &qword_1000AD8B8);
    v23 = a2;
    v24 = 1;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
  }
  v31 = a2;
  v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v20(v16, v9, v10);
  swift_bridgeObjectRetain(v33);
  v21 = v17 - 1;
  if (v21)
  {
    v34 = *(_QWORD *)(v11 + 72);
    v26 = v33 + v34 + v32;
    while (1)
    {
      v35(v7, v26, v10);
      v18(v7, 0, 1, v10);
      if (v19(v7, 1, v10) == 1)
        break;
      v20(v14, v7, v10);
      v27 = sub_100007218(&qword_1000AF898, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v28 = dispatch thunk of static Comparable.< infix(_:_:)(v14, v16, v10, v27);
      v29 = *(void (**)(char *, uint64_t))(v11 + 8);
      if ((v28 & 1) != 0)
      {
        v29(v16, v10);
        v20(v16, v14, v10);
      }
      else
      {
        v29(v14, v10);
      }
      v26 += v34;
      if (!--v21)
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    v18(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease(v33);
  sub_100009578((uint64_t)v7, &qword_1000AD8B8);
  v22 = v31;
  v20(v31, v16, v10);
  v23 = v22;
  v24 = 0;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
}

uint64_t sub_10006B034@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unint64_t v26;
  uint64_t v27;
  char v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);

  v4 = sub_100006DA4(&qword_1000AD8B8);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v30 - v8;
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v30 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
  {
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v18(v9, 1, 1, v10);
    goto LABEL_7;
  }
  v32 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v35 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  v35(v9, a1 + v32, v10);
  v33 = a1;
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v18(v9, 0, 1, v10);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v19(v9, 1, v10) == 1)
  {
LABEL_7:
    sub_100009578((uint64_t)v9, &qword_1000AD8B8);
    v23 = a2;
    v24 = 1;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
  }
  v31 = a2;
  v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v20(v16, v9, v10);
  swift_bridgeObjectRetain(v33);
  v21 = v17 - 1;
  if (v21)
  {
    v34 = *(_QWORD *)(v11 + 72);
    v26 = v33 + v34 + v32;
    while (1)
    {
      v35(v7, v26, v10);
      v18(v7, 0, 1, v10);
      if (v19(v7, 1, v10) == 1)
        break;
      v20(v14, v7, v10);
      v27 = sub_100007218(&qword_1000AF898, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v28 = dispatch thunk of static Comparable.< infix(_:_:)(v16, v14, v10, v27);
      v29 = *(void (**)(char *, uint64_t))(v11 + 8);
      if ((v28 & 1) != 0)
      {
        v29(v16, v10);
        v20(v16, v14, v10);
      }
      else
      {
        v29(v14, v10);
      }
      v26 += v34;
      if (!--v21)
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    v18(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease(v33);
  sub_100009578((uint64_t)v7, &qword_1000AD8B8);
  v22 = v31;
  v20(v31, v16, v10);
  v23 = v22;
  v24 = 0;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
}

uint64_t sub_10006B31C(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    v7 = *(_QWORD *)(type metadata accessor for TTRNewWidgetPresenter.Division(0) - 8);
    v8 = *(unsigned __int8 *)(v7 + 80);
    v9 = *(_QWORD *)(v7 + 72);
    --v4;
    v10 = a3 + ((v8 + 32) & ~v8) + v9 * v4;
    v11 = -v9;
    while (1)
    {
      v12 = a1(v10);
      if (v3 || (v12 & 1) != 0)
        break;
      --v4;
      v10 += v11;
      if (v4 == -1)
        return 0;
    }
  }
  return v4;
}

BOOL sub_10006B3D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  _QWORD v17[2];

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)v17 - v9;
  v11 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v12 = a1 + *(int *)(v11 + 28);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v13(v10, v12, v4);
  v13(v8, a2 + *(int *)(v11 + 28), v4);
  v14 = sub_100007218(&qword_1000B0078, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  LOBYTE(a2) = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v14);
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  return (a2 & 1) == 0;
}

uint64_t sub_10006B508()
{
  _QWORD *v0;
  char *v1;
  uint64_t Subtasks;

  swift_unknownObjectRelease(v0[2]);
  sub_10001D26C(v0 + 4);
  v1 = (char *)v0 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_fetchSubtasks;
  Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(Subtasks - 8) + 8))(v1, Subtasks);
  sub_10006BAE4((_QWORD *)((char *)v0 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_shareeInfoStyle));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0
                                      + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_moreFormatString
                                      + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_10006B58C()
{
  return type metadata accessor for TTRNewWidgetPresenter(0);
}

uint64_t type metadata accessor for TTRNewWidgetPresenter(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000AFF60, (uint64_t)&nominal type descriptor for TTRNewWidgetPresenter);
}

uint64_t sub_10006B5A8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = &unk_10008C158;
  v4[1] = &unk_10008C170;
  result = type metadata accessor for REMRemindersListDataView.FetchSubtasks(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_10008C188;
    v4[4] = &unk_10008C1A0;
    v4[5] = &unk_10008C1A0;
    v4[6] = &unk_10008C158;
    v4[7] = &unk_10008C1B8;
    v4[8] = (char *)&value witness table for Builtin.Int64 + 64;
    result = swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TTRNewWidgetPresenter.DisplayDateStyle(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = v6 - 2;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_10006B6A8 + 4 * byte_10008C0F7[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for TTRNewWidgetPresenter.DisplayDateStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10006B750 + 4 * byte_10008C101[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10006B784 + 4 * byte_10008C0FC[v5]))();
}

uint64_t sub_10006B784(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006B78C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10006B794);
  return result;
}

uint64_t sub_10006B7A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10006B7A8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10006B7AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006B7B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006B7C0(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 2)
    return v1 - 1;
  else
    return 0;
}

_BYTE *sub_10006B7D4(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for TTRNewWidgetPresenter.DisplayDateStyle()
{
  return &type metadata for TTRNewWidgetPresenter.DisplayDateStyle;
}

_QWORD *destroy for TTRNewWidgetPresenter.ShareeInfoStyle(_QWORD *a1)
{
  if (a1[3] >= 0xFFFFFFFFuLL)
    return (_QWORD *)sub_10001D26C(a1);
  return a1;
}

uint64_t initializeWithCopy for TTRNewWidgetPresenter.ShareeInfoStyle(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4 < 0xFFFFFFFF)
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  }
  else
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  }
  return a1;
}

uint64_t assignWithCopy for TTRNewWidgetPresenter.ShareeInfoStyle(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v4 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      *(_OWORD *)(a1 + 40) = *(__int128 *)((char *)a2 + 40);
      return a1;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    v7 = a2[2];
    *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = v7;
    *(_OWORD *)a1 = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    sub_10001D26C((_QWORD *)a1);
    goto LABEL_7;
  }
  sub_10005D550((_QWORD *)a1, a2);
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  return a1;
}

__n128 initializeWithTake for TTRNewWidgetPresenter.ShareeInfoStyle(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TTRNewWidgetPresenter.ShareeInfoStyle(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;

  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL || (v4 = *(_QWORD *)(a2 + 24), sub_10001D26C((_QWORD *)a1), v4 < 0xFFFFFFFF))
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRNewWidgetPresenter.ShareeInfoStyle(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TTRNewWidgetPresenter.ShareeInfoStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

uint64_t sub_10006BA8C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_10006BAA4(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRNewWidgetPresenter.ShareeInfoStyle()
{
  return &type metadata for TTRNewWidgetPresenter.ShareeInfoStyle;
}

_QWORD *sub_10006BAE4(_QWORD *a1)
{
  if (a1[3] >= 0xFFFFFFFFuLL)
    sub_10001D26C(a1);
  return a1;
}

uint64_t storeEnumTagSinglePayload for TTRNewWidgetPresenter.DisplayDateStyle.TimeOfDayStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10006BB68 + 4 * byte_10008C10B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10006BB9C + 4 * byte_10008C106[v4]))();
}

uint64_t sub_10006BB9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006BBA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10006BBACLL);
  return result;
}

uint64_t sub_10006BBB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10006BBC0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10006BBC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006BBCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRNewWidgetPresenter.DisplayDateStyle.TimeOfDayStyle()
{
  return &type metadata for TTRNewWidgetPresenter.DisplayDateStyle.TimeOfDayStyle;
}

unint64_t sub_10006BBEC()
{
  unint64_t result;

  result = qword_1000B0028;
  if (!qword_1000B0028)
  {
    result = swift_getWitnessTable(&unk_10008C254, &type metadata for TTRNewWidgetPresenter.DisplayDateStyle.TimeOfDayStyle);
    atomic_store(result, (unint64_t *)&qword_1000B0028);
  }
  return result;
}

uint64_t sub_10006BC30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100006DA4(&qword_1000B0030);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10006BC94(uint64_t a1)
{
  sub_100006DA4(&qword_1000B0030);
  return sub_100065B1C(a1);
}

int64_t *sub_10006BCD4(int64_t *result, int64_t a2)
{
  uint64_t v2;
  int64_t v4;
  uint64_t v5;
  int64_t *v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9[3];

  v2 = a2 - (_QWORD)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    if (!v2)
      return _swiftEmptyArrayStorage;
    v4 = (int64_t)result;
    if (v2 <= 0)
    {
      v6 = _swiftEmptyArrayStorage;
    }
    else
    {
      v5 = sub_100006DA4(&qword_1000B01E8);
      v6 = (int64_t *)swift_allocObject(v5, 8 * v2 + 32, 7);
      v7 = j__malloc_size(v6);
      v8 = v7 - 32;
      if (v7 < 32)
        v8 = v7 - 25;
      v6[2] = v2;
      v6[3] = 2 * (v8 >> 3);
    }
    result = sub_10006C0F4(v9, v6 + 4, v2, v4, a2);
    if (result == (int64_t *)v2)
      return v6;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10006BD98(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  size_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_16;
  if (!v5)
    return &_swiftEmptyArrayStorage;
  if (v5 > 0)
  {
    v8 = sub_100006DA4(&qword_1000B0050);
    v9 = (_QWORD *)swift_allocObject(v8, 80 * v5 + 32, 7);
    v10 = j__malloc_size(v9);
    v9[2] = v5;
    v9[3] = 2 * ((uint64_t)(v10 - 32) / 80);
    if (v4 != a3)
      goto LABEL_5;
    goto LABEL_15;
  }
  v9 = &_swiftEmptyArrayStorage;
  if (v4 == a3)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
LABEL_5:
  if (v5 < 0)
  {
LABEL_17:
    result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_18;
  }
  v11 = (unint64_t)(v9 + 4);
  v12 = a2 + 80 * a3;
  if (v12 >= (unint64_t)&v9[10 * v5 + 4] || v11 >= v12 + 80 * v5)
  {
    swift_arrayInitWithCopy(v11);
    return v9;
  }
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_10006BF20(uint64_t a1, int64_t a2, uint64_t a3)
{
  unint64_t *v3;
  unint64_t v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t result;
  char v28;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  *v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(_QWORD *)(v5 + 24) >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_10001C410(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *v3 = v5;
  }
  v14 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = v5 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v17 = *(_QWORD *)(v15 + 72);
  v18 = v16 + v17 * a1;
  swift_arrayDestroy(v18, v8, v14);
  if (!v9)
    goto LABEL_25;
  v19 = *(_QWORD *)(v5 + 16);
  v20 = v19 - a2;
  if (__OFSUB__(v19, a2))
    goto LABEL_33;
  if (v20 < 0)
  {
LABEL_35:
    v28 = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v28, 1046, 0);
    __break(1u);
    return result;
  }
  v21 = v18 + v17;
  v22 = v16 + v17 * a2;
  if (v18 + v17 < v22 || v21 >= v22 + v20 * v17)
  {
    swift_arrayInitWithTakeFrontToBack(v21, v22, v20, v14);
  }
  else if (v21 != v22)
  {
    swift_arrayInitWithTakeBackToFront(v21);
  }
  v24 = *(_QWORD *)(v5 + 16);
  v25 = __OFADD__(v24, v9);
  v26 = v24 + v9;
  if (v25)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(_QWORD *)(v5 + 16) = v26;
LABEL_25:
  if (v17 >= 1)
    sub_1000072AC(a3, v18, type metadata accessor for TTRNewWidgetViewModel.Reminder);
  return sub_100009578(a3, &qword_1000B0068);
}

int64_t *sub_10006C0F4(int64_t *result, int64_t *a2, uint64_t a3, int64_t a4, int64_t a5)
{
  int64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t *v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64x2_t v14;
  int64x2_t *v15;
  int64x2_t v16;
  int64_t *v17;
  int64_t v18;

  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
LABEL_6:
    v5 = a4;
LABEL_7:
    *result = a4;
    result[1] = a5;
    result[2] = v5;
    return (int64_t *)a3;
  }
  if (a3 < 0)
    goto LABEL_31;
  if (a5 == a4)
  {
LABEL_5:
    a3 = 0;
    goto LABEL_6;
  }
  if (a5 < a4)
    goto LABEL_32;
  v6 = a5 - a4;
  if (a5 > a4)
  {
    v5 = a4 + 1;
    *a2 = a4;
    if (a3 == 1)
      goto LABEL_7;
    if (v5 == a5)
    {
      a3 = 1;
      v5 = a5;
      goto LABEL_7;
    }
    v7 = v6 - 2;
    if (v6 - 2 >= (unint64_t)(a3 - 2))
      v7 = a3 - 2;
    if (v7 >= ~a4 + a5)
      v7 = ~a4 + a5;
    v8 = v7 + 1;
    if (v8 >= 5)
    {
      v11 = v8 & 3;
      if ((v8 & 3) == 0)
        v11 = 4;
      v12 = v8 - v11;
      v13 = v5 + v8 - v11;
      v10 = &a2[v8 - v11];
      v9 = v12 + 2;
      v14 = vaddq_s64(vdupq_n_s64(v5), (int64x2_t)xmmword_10008C2B0);
      v15 = (int64x2_t *)(a2 + 3);
      v16 = vdupq_n_s64(2uLL);
      do
      {
        v15[-1] = v14;
        *v15 = vaddq_s64(v14, v16);
        v14 = vaddq_s64(v14, vdupq_n_s64(4uLL));
        v15 += 2;
        v12 -= 4;
      }
      while (v12);
      v5 = v13;
    }
    else
    {
      v9 = 2;
      v10 = a2;
    }
    v17 = v10 + 1;
    while (v5 < a5)
    {
      v18 = v5 + 1;
      *v17 = v5;
      if (a3 == v9)
      {
        ++v5;
        goto LABEL_7;
      }
      ++v9;
      ++v17;
      ++v5;
      if (a5 == v18)
      {
        v5 = a5;
        a3 = a5 - a4;
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10006C234(uint64_t a1)
{
  sub_10006C268(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return a1;
}

void sub_10006C268(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) != 0)
  {
    swift_errorRelease(a1);
  }
  else
  {
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a5);

  }
}

_QWORD *sub_10006C2AC(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return a1;
}

id *sub_10006C2D4(id *a1)
{

  return a1;
}

uint64_t sub_10006C314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

_QWORD *sub_10006C3B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for Date(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1000679C0(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (char *)(v1 + v4), *(void (**)(_QWORD *))v5, *(_QWORD *)(v5 + 8));
}

uint64_t sub_10006C410()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10006C438(uint64_t a1)
{
  return sub_10006FA54(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char *, _QWORD))sub_100066594);
}

uint64_t sub_10006C444(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  return a1;
}

uint64_t sub_10006C48C(__int128 *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = *((_QWORD *)a1 + 3);
  if (v4 < 0xFFFFFFFF)
  {
    v6 = *a1;
    v7 = a1[1];
    v8 = a1[2];
    *(_QWORD *)(a2 + 48) = *((_QWORD *)a1 + 6);
    *(_OWORD *)(a2 + 16) = v7;
    *(_OWORD *)(a2 + 32) = v8;
    *(_OWORD *)a2 = v6;
  }
  else
  {
    v5 = *((_QWORD *)a1 + 4);
    *(_QWORD *)(a2 + 24) = v4;
    *(_QWORD *)(a2 + 32) = v5;
    (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a2, a1);
    *(_OWORD *)(a2 + 40) = *(__int128 *)((char *)a1 + 40);
  }
  return a2;
}

uint64_t sub_10006C500()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10006C52C(_QWORD *a1)
{
  uint64_t v1;

  return sub_10006A228(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t, uint64_t, char *))(v1 + 24));
}

uint64_t sub_10006C538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1000688D0(a1, v2[2], v2[3], v2[5], v2[6], v2[7], v2[8], a2);
}

uint64_t type metadata accessor for TTRNewWidgetPresenter.Snapshot(uint64_t a1)
{
  return sub_100007E80(a1, qword_1000B01A0, (uint64_t)&nominal type descriptor for TTRNewWidgetPresenter.Snapshot);
}

void sub_10006C580(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) != 0)
  {

  }
  else
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a6);
  }
}

uint64_t type metadata accessor for TTRNewWidgetPresenter.Division(uint64_t a1)
{
  return sub_100007E80(a1, (uint64_t *)&unk_1000B00F8, (uint64_t)&nominal type descriptor for TTRNewWidgetPresenter.Division);
}

uint64_t sub_10006C5D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_10006A6FC(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_10006C5F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10006A934(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_10006C608(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(void);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  id v56;
  void (*v57)(uint64_t, char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t result;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  void (*v69)(char *, char *, uint64_t);
  char *v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  void (*v113)(char *, char *, uint64_t);
  uint64_t v114;
  void (*v115)(char *, char *, uint64_t);
  uint64_t v116;
  char *v117;
  char *v118;
  char *v119;
  void (*v120)(char *, uint64_t);
  char *v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  void (*v134)(char *, char *, uint64_t);
  void (*v135)(uint64_t, char *, uint64_t);
  void (*v136)(void);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(char *, uint64_t);
  char *v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;

  v139 = type metadata accessor for TTRNewWidgetPresenter.Division(0);
  v138 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v152 = (uint64_t)&v124 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = sub_100006DA4(&qword_1000B0040);
  v3 = __chkstk_darwin(v147);
  v146 = (char *)&v124 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v145 = (char *)&v124 - v5;
  v6 = sub_100006DA4(&qword_1000B0080);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v132 = (char *)&v124 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v124 - v11;
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v124 - v14;
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v124 - v17;
  v19 = __chkstk_darwin(v16);
  v131 = (uint64_t)&v124 - v20;
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v124 - v22;
  v24 = __chkstk_darwin(v21);
  v153 = (uint64_t)&v124 - v25;
  v26 = __chkstk_darwin(v24);
  v144 = (char *)&v124 - v27;
  __chkstk_darwin(v26);
  v29 = (char *)&v124 - v28;
  v30 = sub_100006DA4(&qword_1000AD8B8);
  __chkstk_darwin(v30);
  v149 = (char *)&v124 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for Date(0);
  v150 = *(_QWORD *)(v32 - 8);
  v33 = __chkstk_darwin(v32);
  v143 = (char *)&v124 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __chkstk_darwin(v33);
  v148 = (char *)&v124 - v36;
  __chkstk_darwin(v35);
  v155 = (char *)&v124 - v37;
  v137 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  v38 = *(_QWORD *)(v137 - 8);
  __chkstk_darwin(v137);
  v162 = (uint64_t *)((char *)&v124 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40 = sub_100006DA4(&qword_1000B0090);
  v41 = __chkstk_darwin(v40);
  v141 = (uint64_t)&v124 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v142 = v7;
  v43 = *(void (**)(void))(v7 + 56);
  v156 = (uint64_t)&v124 - v44;
  v158 = v6;
  v136 = v43;
  v43();
  v45 = *(_QWORD *)(a1 + 16);
  if (!v45)
  {
    v123 = _swiftEmptyArrayStorage;
LABEL_33:
    sub_100009578(v156, &qword_1000B0090);
    return (uint64_t)v123;
  }
  v130 = v23;
  v127 = v18;
  v128 = v15;
  v129 = v12;
  v46 = v38;
  v47 = a1 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
  v133 = v46;
  v159 = *(_QWORD *)(v46 + 72);
  v124 = a1;
  swift_bridgeObjectRetain(a1);
  v157 = _swiftEmptyArrayStorage;
  v49 = (uint64_t)v149;
  v48 = v150;
  v50 = v148;
  v140 = v29;
  v161 = v32;
  while (1)
  {
    v160 = v45;
    v51 = v162;
    sub_1000072AC(v47, (uint64_t)v162, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
    v52 = v51[3];
    v53 = v51[4];
    sub_10001E184(v51, v52);
    v54 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v53 + 104))(v52, v53);
    if (!v54)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56))(v49, 1, 1, v32);
LABEL_4:
      sub_100007EB4((uint64_t)v162, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
      sub_100009578(v49, &qword_1000AD8B8);
      goto LABEL_5;
    }
    v55 = v54;
    v56 = objc_msgSend(v54, "date");

    static Date._unconditionallyBridgeFromObjectiveC(_:)(v56);
    v57 = *(void (**)(uint64_t, char *, uint64_t))(v48 + 32);
    v57(v49, v50, v32);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v48 + 56))(v49, 0, 1, v32);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v49, 1, v32) == 1)
      goto LABEL_4;
    v58 = ((uint64_t (*)(char *, uint64_t, uint64_t))v57)(v155, v49, v32);
    v59 = Date.addingTimeInterval(_:)(v58, -900.0);
    v60 = v143;
    Date.addingTimeInterval(_:)(v59, 300.0);
    v61 = sub_100007218(&qword_1000AF898, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    result = dispatch thunk of static Comparable.<= infix(_:_:)(v50, v60, v32, v61);
    if ((result & 1) == 0)
      break;
    v151 = (char *)v61;
    v63 = v147;
    v64 = v145;
    v65 = &v145[*(int *)(v147 + 48)];
    v57((uint64_t)v145, v50, v161);
    v57((uint64_t)v65, v60, v161);
    v66 = v48;
    v67 = v146;
    v68 = &v146[*(int *)(v63 + 48)];
    v69 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
    v69(v146, v64, v161);
    v134 = v69;
    v69(v68, v65, v161);
    v70 = v144;
    v57((uint64_t)v144, v67, v161);
    v71 = *(void (**)(char *, uint64_t))(v66 + 8);
    v71(v68, v161);
    v72 = v158;
    v73 = &v67[*(int *)(v63 + 48)];
    v74 = v64;
    v32 = v161;
    v57((uint64_t)v67, v74, v161);
    v57((uint64_t)v73, v65, v32);
    v75 = &v70[*(int *)(v72 + 36)];
    v135 = v57;
    v57((uint64_t)v75, v73, v32);
    v154 = v71;
    v71(v67, v32);
    v76 = (uint64_t)v70;
    v77 = (uint64_t)v140;
    sub_100018778(v76, (uint64_t)v140, &qword_1000B0080);
    v78 = v141;
    sub_100009434(v156, v141, &qword_1000B0090);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 48))(v78, 1, v72) == 1)
    {
      sub_100009578(v78, &qword_1000B0090);
      v49 = (uint64_t)v149;
      v48 = v150;
      v50 = v148;
      goto LABEL_21;
    }
    v79 = v78;
    v80 = v153;
    sub_100018778(v79, v153, &qword_1000B0080);
    v81 = sub_100007218(&qword_1000B0088, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v82 = dispatch thunk of static Equatable.== infix(_:_:)(v77, v80, v32, v81);
    v83 = (uint64_t)v130;
    sub_100009434(v77, (uint64_t)v130, &qword_1000B0080);
    v84 = v80;
    v85 = v131;
    sub_100009434(v84, v131, &qword_1000B0080);
    if ((v82 & 1) == 0)
    {
      sub_100009578(v85, &qword_1000B0080);
      sub_100009578(v83, &qword_1000B0080);
      v87 = (uint64_t)v132;
      v50 = v148;
LABEL_15:
      v126 = v81;
      v88 = v153;
      v125 = v153 + *(int *)(v158 + 36);
      v89 = v151;
      v90 = dispatch thunk of static Comparable.<= infix(_:_:)(v125, v77, v32, v151);
      v91 = (uint64_t)v127;
      sub_100009434(v77, (uint64_t)v127, &qword_1000B0080);
      v92 = v88;
      v93 = (uint64_t)v128;
      sub_100009434(v92, (uint64_t)v128, &qword_1000B0080);
      if ((v90 & 1) != 0)
      {
        sub_100009578(v93, &qword_1000B0080);
        sub_100009578(v91, &qword_1000B0080);
        v94 = (uint64_t)v129;
        sub_100009434(v77, (uint64_t)v129, &qword_1000B0080);
        goto LABEL_18;
      }
      v95 = dispatch thunk of static Comparable.<= infix(_:_:)(v91 + *(int *)(v158 + 36), v93, v32, v89);
      sub_100009578(v93, &qword_1000B0080);
      sub_100009578(v91, &qword_1000B0080);
      v94 = (uint64_t)v129;
      sub_100009434(v77, (uint64_t)v129, &qword_1000B0080);
      if ((v95 & 1) != 0)
      {
LABEL_18:
        sub_100009578(v94, &qword_1000B0080);
        sub_100009434(v153, v87, &qword_1000B0080);
        v49 = (uint64_t)v149;
        goto LABEL_19;
      }
      v103 = v126;
      v104 = dispatch thunk of static Equatable.== infix(_:_:)(v94, v94 + *(int *)(v158 + 36), v32, v126);
      sub_100009578(v94, &qword_1000B0080);
      sub_100009434(v153, v87, &qword_1000B0080);
      v49 = (uint64_t)v149;
      if ((v104 & 1) != 0)
      {
LABEL_19:
        sub_100009578(v87, &qword_1000B0080);
        v48 = v150;
      }
      else
      {
        v105 = dispatch thunk of static Equatable.== infix(_:_:)(v87, v87 + *(int *)(v158 + 36), v32, v103);
        v106 = sub_100009578(v87, &qword_1000B0080);
        v48 = v150;
        if ((v105 & 1) == 0)
        {
          Date.addingTimeInterval(_:)(v106, -240.0);
          v107 = v77 + *(int *)(v158 + 36);
          v108 = dispatch thunk of static Comparable.<= infix(_:_:)(v50, v107, v32, v151);
          result = sub_100009578(v153, &qword_1000B0080);
          if ((v108 & 1) == 0)
            goto LABEL_35;
          v109 = v147;
          v110 = v145;
          v151 = &v145[*(int *)(v147 + 48)];
          v111 = v151;
          v112 = v32;
          v113 = (void (*)(char *, char *, uint64_t))v135;
          v135((uint64_t)v145, v50, v112);
          v114 = v107;
          v115 = v134;
          v134(v111, (char *)v114, v161);
          sub_100009578(v77, &qword_1000B0080);
          v116 = *(int *)(v109 + 48);
          v117 = v146;
          v118 = &v146[v116];
          v115(v146, v110, v161);
          v115(v118, v151, v161);
          v119 = v144;
          v113(v144, v117, v161);
          v120 = v154;
          v154(v118, v161);
          v121 = &v117[*(int *)(v147 + 48)];
          v113(v117, v110, v161);
          v113(v121, v151, v161);
          v113(&v119[*(int *)(v158 + 36)], v121, v161);
          v32 = v161;
          v120(v117, v161);
          v122 = (uint64_t)v119;
          v77 = (uint64_t)v140;
          sub_100018778(v122, (uint64_t)v140, &qword_1000B0080);
          v48 = v150;
          goto LABEL_21;
        }
      }
      sub_100009578(v153, &qword_1000B0080);
LABEL_21:
      v96 = v152;
      sub_1000072AC((uint64_t)v162, v152, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v133 + 56))(v96, 0, 1, v137);
      v97 = v139;
      sub_100009434(v77, v96 + *(int *)(v139 + 20), &qword_1000B0080);
      *(_BYTE *)(v96 + *(int *)(v97 + 24)) = 0;
      if ((swift_isUniquelyReferenced_nonNull_native(v157) & 1) != 0)
        v98 = (unint64_t)v157;
      else
        v98 = sub_10001C3E8(0, v157[2] + 1, 1, (unint64_t)v157);
      v100 = *(_QWORD *)(v98 + 16);
      v99 = *(_QWORD *)(v98 + 24);
      if (v100 >= v99 >> 1)
        v98 = sub_10001C3E8(v99 > 1, v100 + 1, 1, v98);
      *(_QWORD *)(v98 + 16) = v100 + 1;
      v101 = (*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80);
      v157 = (_QWORD *)v98;
      sub_100007EF0(v152, v98 + v101 + *(_QWORD *)(v138 + 72) * v100, type metadata accessor for TTRNewWidgetPresenter.Division);
      v154(v155, v32);
      v102 = v156;
      sub_100009578(v156, &qword_1000B0090);
      sub_100007EB4((uint64_t)v162, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
      sub_100018778(v77, v102, &qword_1000B0080);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v136)(v102, 0, 1, v158);
      goto LABEL_5;
    }
    v86 = dispatch thunk of static Equatable.== infix(_:_:)(v83 + *(int *)(v158 + 36), v85 + *(int *)(v158 + 36), v32, v81);
    sub_100009578(v85, &qword_1000B0080);
    sub_100009578(v83, &qword_1000B0080);
    v87 = (uint64_t)v132;
    v50 = v148;
    if ((v86 & 1) == 0)
      goto LABEL_15;
    sub_100009578(v153, &qword_1000B0080);
    sub_100009578(v77, &qword_1000B0080);
    v154(v155, v32);
    sub_100007EB4((uint64_t)v162, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
    v49 = (uint64_t)v149;
    v48 = v150;
LABEL_5:
    v47 += v159;
    v45 = v160 - 1;
    if (v160 == 1)
    {
      swift_bridgeObjectRelease(v124);
      v123 = v157;
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

unint64_t sub_10006D314(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  unsigned int (*v61)(char *, uint64_t, uint64_t);
  void (*v62)(char *, char *, uint64_t);
  char *v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  void (*v82)(char *, char *, uint64_t);
  _QWORD *v83;
  void (*v84)(char *, char *, uint64_t);
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  void (*v106)(char *, char *, uint64_t);
  char *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  void (*v127)(char *, char *, uint64_t);
  char *v128;
  char *v129;
  _QWORD *v130;
  void (*v131)(char *, char *, uint64_t);
  uint64_t v132;
  void (*v133)(char *, uint64_t);
  char *v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  void (*v153)(char *, int64_t, uint64_t);
  _QWORD *v154;
  char *v155;
  uint64_t v156;
  unint64_t v157;
  unint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  char *v162;
  char *v163;
  void (*v164)(char *, char *, uint64_t);
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  char *v169;
  unint64_t v170;
  uint64_t v171;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  char *v178;
  char *v179;
  char *v180;
  char *v181;
  unint64_t v182;
  char *v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  char *v187;
  unint64_t v188;
  char *v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  _QWORD *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  void (*v200)(char *, char *, uint64_t);
  char *v201;
  uint64_t v202;
  char *v203;

  v190 = sub_100006DA4(&qword_1000B0040);
  v4 = __chkstk_darwin(v190);
  v192 = (char *)&v173 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v189 = (char *)&v173 - v6;
  v194 = sub_100006DA4(&qword_1000B0080);
  __chkstk_darwin(v194);
  v191 = (char *)&v173 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100006DA4(&qword_1000B0070);
  __chkstk_darwin(v8);
  v195 = (uint64_t)&v173 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRNewWidgetPresenter.Division(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v178 = (char *)&v173 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v184 = (uint64_t)&v173 - v15;
  v16 = __chkstk_darwin(v14);
  v186 = (uint64_t)&v173 - v17;
  v18 = __chkstk_darwin(v16);
  v193 = (uint64_t)&v173 - v19;
  v20 = __chkstk_darwin(v18);
  v187 = (char *)&v173 - v21;
  v22 = __chkstk_darwin(v20);
  v197 = (uint64_t)&v173 - v23;
  v24 = __chkstk_darwin(v22);
  v198 = (uint64_t)&v173 - v25;
  v26 = __chkstk_darwin(v24);
  v175 = (uint64_t)&v173 - v27;
  __chkstk_darwin(v26);
  v29 = (char *)&v173 - v28;
  v30 = sub_100006DA4(&qword_1000AD8B8);
  v31 = __chkstk_darwin(v30);
  v33 = (char *)&v173 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v181 = (char *)&v173 - v34;
  v35 = type metadata accessor for Date(0);
  v36 = *(_QWORD **)(v35 - 8);
  v37 = __chkstk_darwin(v35);
  v39 = (char *)&v173 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __chkstk_darwin(v37);
  v180 = (char *)&v173 - v41;
  v42 = __chkstk_darwin(v40);
  v179 = (char *)&v173 - v43;
  v44 = __chkstk_darwin(v42);
  v183 = (char *)&v173 - v45;
  v46 = __chkstk_darwin(v44);
  v203 = (char **)((char *)&v173 - v47);
  v48 = __chkstk_darwin(v46);
  v201 = (char *)&v173 - v49;
  v50 = __chkstk_darwin(v48);
  v176 = (char *)&v173 - v51;
  v52 = __chkstk_darwin(v50);
  v54 = (char *)&v173 - v53;
  Date.startOfDay.getter(v52);
  v55 = a1;
  v56 = *(_QWORD *)(a1 + 16);
  v199 = v10;
  v185 = v54;
  if (v56)
  {
    v173 = a2;
    v188 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v57 = (char *)(v55 + v188);
    v202 = *(_QWORD *)(v11 + 72);
    v174 = v55;
    swift_bridgeObjectRetain(v55);
    v58 = _swiftEmptyArrayStorage;
    v177 = v57;
    v59 = (uint64_t)v57;
    v182 = v56;
    v196 = v36;
    do
    {
      sub_1000072AC(v59, (uint64_t)v29, type metadata accessor for TTRNewWidgetPresenter.Division);
      v60 = &v29[*(int *)(v10 + 20)];
      v200 = (void (*)(char *, char *, uint64_t))v36[2];
      v200(v33, v60, v35);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v36[7])(v33, 0, 1, v35);
      sub_100007EB4((uint64_t)v29, type metadata accessor for TTRNewWidgetPresenter.Division);
      v61 = (unsigned int (*)(char *, uint64_t, uint64_t))v36[6];
      if (v61(v33, 1, v35) == 1)
      {
        sub_100009578((uint64_t)v33, &qword_1000AD8B8);
      }
      else
      {
        v62 = (void (*)(char *, char *, uint64_t))v36[4];
        v63 = v201;
        v62(v201, v33, v35);
        v62((char *)v203, v63, v35);
        if ((swift_isUniquelyReferenced_nonNull_native((char *)v58) & 1) == 0)
          v58 = (_QWORD *)sub_10001C3FC(0, v58[2] + 1, 1, (unint64_t)v58);
        v65 = v58[2];
        v64 = v58[3];
        if (v65 >= v64 >> 1)
          v58 = (_QWORD *)sub_10001C3FC(v64 > 1, v65 + 1, 1, (unint64_t)v58);
        v58[2] = v65 + 1;
        v36 = v196;
        v62((char *)v58+ ((*((unsigned __int8 *)v36 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v36 + 80))+ v196[9] * v65, (char *)v203, v35);
        v10 = v199;
      }
      v59 += v202;
      --v56;
    }
    while (v56);
    swift_bridgeObjectRelease(v174);
    v66 = v181;
    sub_10006AD4C((uint64_t)v58, v181);
    swift_bridgeObjectRelease((char *)v58);
    if (v61(v66, 1, v35) == 1)
    {
      sub_100009578((uint64_t)v66, &qword_1000AD8B8);
      v67 = _swiftEmptyArrayStorage;
      v68 = v194;
      v69 = (uint64_t)v187;
      v70 = v188;
      goto LABEL_21;
    }
    v10 = v36[4];
    v94 = v176;
    ((void (*)(char *, char *, uint64_t))v10)(v176, v66, v35);
    v39 = v185;
    v95 = static Date.> infix(_:_:)(v94, v185);
    v96 = v195;
    v69 = (uint64_t)v187;
    if ((v95 & 1) == 0)
    {
      ((void (*)(char *, uint64_t))v36[1])(v94, v35);
      v67 = _swiftEmptyArrayStorage;
      v10 = v199;
      v68 = v194;
      v70 = v188;
LABEL_21:
      v113 = v182;
      if (v182 >= 2)
      {
LABEL_22:
        v201 = v177;
        while (v113)
        {
          sub_1000072AC((uint64_t)v201, v198, type metadata accessor for TTRNewWidgetPresenter.Division);
          if ((swift_isUniquelyReferenced_nonNull_native(v67) & 1) == 0)
            v67 = (_QWORD *)sub_10001C3E8(0, v67[2] + 1, 1, (unint64_t)v67);
          v115 = v67[2];
          v114 = v67[3];
          v203 = v67;
          if (v115 >= v114 >> 1)
            v203 = (_QWORD *)sub_10001C3E8(v114 > 1, v115 + 1, 1, (unint64_t)v203);
          v116 = (unint64_t)v203;
          v203[2] = v115 + 1;
          v117 = v202;
          sub_100007EF0(v198, v116 + v70 + v115 * v202, type metadata accessor for TTRNewWidgetPresenter.Division);
          v118 = v201;
          v119 = v197;
          sub_1000072AC((uint64_t)v201, v197, type metadata accessor for TTRNewWidgetPresenter.Division);
          v201 = &v118[v117];
          sub_1000072AC((uint64_t)&v118[v117], v69, type metadata accessor for TTRNewWidgetPresenter.Division);
          v120 = *(int *)(v10 + 20);
          v10 = v119 + v120 + *(int *)(v68 + 36);
          v67 = (_QWORD *)(v69 + v120);
          if (Date.distance(to:)(v69 + v120) <= 60.0)
          {
            v10 = v199;
            v67 = v203;
          }
          else
          {
            v121 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56))(v195, 1, 1, v121);
            v122 = sub_100007218(&qword_1000AF898, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
            if ((dispatch thunk of static Comparable.<= infix(_:_:)(v10, v67, v35, v122) & 1) == 0)
              goto LABEL_46;
            v124 = v189;
            v123 = v190;
            v125 = &v189[*(int *)(v190 + 48)];
            v126 = v10;
            v127 = (void (*)(char *, _QWORD *, uint64_t))v200;
            v200(v189, (char *)v126, v35);
            v127(v125, v67, v35);
            v128 = v192;
            v129 = &v192[*(int *)(v123 + 48)];
            v127(v192, v124, v35);
            v127(v129, v125, v35);
            v130 = v196;
            v131 = (void (*)(char *, char *, uint64_t))v196[4];
            v132 = (uint64_t)v191;
            v131(v191, v128, v35);
            v133 = (void (*)(char *, uint64_t))v130[1];
            v133(v129, v35);
            v134 = &v128[*(int *)(v123 + 48)];
            v131(v128, v124, v35);
            v131(v134, v125, v35);
            v131((char *)(v132 + *(int *)(v194 + 36)), v134, v35);
            v133(v128, v35);
            v10 = v199;
            v135 = v193;
            sub_100018778(v132, v193 + *(int *)(v199 + 20), &qword_1000B0080);
            sub_100018778(v195, v135, &qword_1000B0070);
            *(_BYTE *)(v135 + *(int *)(v10 + 24)) = 0;
            v137 = v203[2];
            v136 = v203[3];
            if (v137 >= v136 >> 1)
              v203 = (_QWORD *)sub_10001C3E8(v136 > 1, v137 + 1, 1, (unint64_t)v203);
            v69 = (uint64_t)v187;
            v70 = v188;
            v139 = v202;
            v138 = (unint64_t)v203;
            v203[2] = v137 + 1;
            v67 = (_QWORD *)v138;
            sub_100007EF0(v193, v138 + v70 + v137 * v139, type metadata accessor for TTRNewWidgetPresenter.Division);
            v68 = v194;
          }
          sub_100007EB4(v69, type metadata accessor for TTRNewWidgetPresenter.Division);
          sub_100007EB4(v197, type metadata accessor for TTRNewWidgetPresenter.Division);
          if (--v113 == 1)
            goto LABEL_35;
        }
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        v67 = (_QWORD *)sub_10001C3E8(0, v67[2] + 1, 1, (unint64_t)v67);
LABEL_36:
        v88 = v173;
        v142 = v67[2];
        v141 = v67[3];
        v203 = v67;
        if (v142 >= v141 >> 1)
          v203 = (_QWORD *)sub_10001C3E8(v141 > 1, v142 + 1, 1, (unint64_t)v203);
        v144 = v202;
        v143 = (unint64_t)v203;
        v203[2] = v142 + 1;
        v203 = (_QWORD *)v143;
        v145 = sub_100007EF0(v184, v143 + v70 + v142 * v144, type metadata accessor for TTRNewWidgetPresenter.Division);
        v146 = v186 + *(int *)(v10 + 20) + *(int *)(v68 + 36);
        v147 = (uint64_t)v179;
        v148 = Date.endOfDay.getter(v145);
        v149 = v180;
        Date.endOfDay.getter(v148);
        v150 = sub_100007218(&qword_1000AF898, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
        if ((dispatch thunk of static Comparable.>= infix(_:_:)(v149, v147, v35, v150) & 1) != 0)
          v151 = (uint64_t)v149;
        else
          v151 = v147;
        v152 = v183;
        v153 = (void (*)(char *, int64_t, uint64_t))v200;
        v200(v183, (char *)v151, v35);
        v154 = v196;
        v155 = (char *)v196[1];
        ((void (*)(char *, uint64_t))v155)(v149, v35);
        v201 = v155;
        ((void (*)(uint64_t, uint64_t))v155)(v147, v35);
        v156 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v156 - 8) + 56))(v195, 1, 1, v156);
        v157 = v35;
        if ((dispatch thunk of static Comparable.<= infix(_:_:)(v146, v152, v35, v150) & 1) != 0)
        {
          v160 = v189;
          v159 = v190;
          v161 = &v189[*(int *)(v190 + 48)];
          v153(v189, v146, v35);
          v153(v161, (int64_t)v152, v35);
          v162 = v192;
          v163 = &v192[*(int *)(v159 + 48)];
          v153(v192, (int64_t)v160, v35);
          v153(v163, (int64_t)v161, v35);
          v164 = (void (*)(char *, char *, uint64_t))v154[4];
          v165 = (uint64_t)v191;
          v164(v191, v162, v35);
          v166 = v201;
          ((void (*)(char *, uint64_t))v201)(v163, v35);
          v167 = &v162[*(int *)(v159 + 48)];
          v164(v162, v160, v35);
          v164(v167, v161, v35);
          v164((char *)(v165 + *(int *)(v194 + 36)), v167, v35);
          ((void (*)(char *, uint64_t))v166)(v162, v35);
          v168 = v199;
          v147 = (uint64_t)v178;
          sub_100018778(v165, (uint64_t)&v178[*(int *)(v199 + 20)], &qword_1000B0080);
          sub_100018778(v195, v147, &qword_1000B0070);
          *(_BYTE *)(v147 + *(int *)(v168 + 24)) = 0;
          v157 = v203[2];
          v158 = v203[3];
          v146 = v157 + 1;
          v88 = v166;
          if (v157 < v158 >> 1)
          {
LABEL_43:
            v169 = v185;
            v170 = v188;
            v171 = v202;
            v90 = (unint64_t)v203;
            v203[2] = v146;
            sub_100007EF0(v147, v90 + v170 + v157 * v171, type metadata accessor for TTRNewWidgetPresenter.Division);
            ((void (*)(char *, uint64_t))v88)(v183, v35);
            sub_100007EB4(v186, type metadata accessor for TTRNewWidgetPresenter.Division);
            v93 = v169;
            goto LABEL_44;
          }
        }
        else
        {
          __break(1u);
        }
        v203 = (_QWORD *)sub_10001C3E8(v158 > 1, v146, 1, (unint64_t)v203);
        goto LABEL_43;
      }
LABEL_35:
      v140 = v186;
      sub_1000072AC((uint64_t)&v177[v202 * (v182 - 1)], v186, type metadata accessor for TTRNewWidgetPresenter.Division);
      sub_1000072AC(v140, v184, type metadata accessor for TTRNewWidgetPresenter.Division);
      if ((swift_isUniquelyReferenced_nonNull_native(v67) & 1) != 0)
        goto LABEL_36;
      goto LABEL_47;
    }
    v97 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v96, 1, 1, v97);
    v98 = sub_100007218(&qword_1000AF898, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v99 = v94;
    v100 = v94;
    v76 = v35;
    if ((dispatch thunk of static Comparable.<= infix(_:_:)(v39, v99, v35, v98) & 1) != 0)
    {
      v101 = v39;
      v102 = v35;
      v104 = v189;
      v103 = v190;
      v105 = &v189[*(int *)(v190 + 48)];
      v106 = v200;
      v200(v189, v101, v102);
      v106(v105, v100, v102);
      v107 = v192;
      v108 = &v192[*(int *)(v103 + 48)];
      v106(v192, v104, v102);
      v106(v108, v105, v102);
      v109 = (uint64_t)v191;
      ((void (*)(char *, char *, uint64_t))v10)(v191, v107, v102);
      v69 = v196[1];
      ((void (*)(char *, uint64_t))v69)(v108, v102);
      v110 = &v107[*(int *)(v103 + 48)];
      ((void (*)(char *, char *, uint64_t))v10)(v107, v104, v102);
      ((void (*)(char *, char *, uint64_t))v10)(v110, v105, v102);
      ((void (*)(uint64_t, char *, uint64_t))v10)(v109 + *(int *)(v194 + 36), v110, v102);
      ((void (*)(char *, uint64_t))v69)(v107, v102);
      v10 = v199;
      v111 = v175;
      sub_100018778(v109, v175 + *(int *)(v199 + 20), &qword_1000B0080);
      sub_100018778(v96, v111, &qword_1000B0070);
      *(_BYTE *)(v111 + *(int *)(v10 + 24)) = 0;
      v112 = sub_10001C3E8(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
      v76 = *(_QWORD *)(v112 + 16);
      v78 = *(_QWORD *)(v112 + 24);
      v77 = v112;
      v39 = (char *)(v76 + 1);
      v35 = v102;
      if (v76 < v78 >> 1)
        goto LABEL_18;
      goto LABEL_52;
    }
LABEL_51:
    __break(1u);
LABEL_52:
    v77 = sub_10001C3E8(v78 > 1, (int64_t)v39, 1, v77);
LABEL_18:
    v70 = v188;
    v113 = v182;
    *(_QWORD *)(v77 + 16) = v39;
    v67 = (_QWORD *)v77;
    sub_100007EF0(v175, v77 + v70 + v76 * v202, type metadata accessor for TTRNewWidgetPresenter.Division);
    ((void (*)(char *, uint64_t))v69)(v176, v35);
    v68 = v194;
    v69 = (uint64_t)v187;
    if (v113 >= 2)
      goto LABEL_22;
    goto LABEL_35;
  }
  v71 = sub_100006DA4(&qword_1000AD918);
  v72 = *(unsigned __int8 *)(v11 + 80);
  v10 = (v72 + 32) & ~v72;
  v69 = swift_allocObject(v71, v10 + *(_QWORD *)(v11 + 72), v72 | 7);
  *(_OWORD *)(v69 + 16) = xmmword_1000882D0;
  v73 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  v74 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v195, 1, 1, v73);
  Date.endOfDay.getter(v74);
  v75 = sub_100007218(&qword_1000AF898, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v76 = v35;
  if ((dispatch thunk of static Comparable.<= infix(_:_:)(v54, v39, v35, v75) & 1) == 0)
  {
    __break(1u);
    goto LABEL_51;
  }
  v202 = v69 + v10;
  v203 = (_QWORD *)v69;
  v80 = v189;
  v79 = v190;
  v81 = &v189[*(int *)(v190 + 48)];
  v82 = (void (*)(char *, char *, uint64_t))v36[2];
  v82(v189, v54, v35);
  v83 = v36;
  v84 = (void (*)(char *, char *, uint64_t))v36[4];
  v201 = v81;
  v84(v81, v39, v35);
  v85 = v192;
  v86 = &v192[*(int *)(v79 + 48)];
  v82(v192, v80, v35);
  v82(v86, v81, v35);
  v87 = (uint64_t)v191;
  v84(v191, v85, v35);
  v88 = (char *)v83[1];
  ((void (*)(char *, uint64_t))v88)(v86, v35);
  v89 = &v85[*(int *)(v79 + 48)];
  v90 = (unint64_t)v203;
  v84(v85, v80, v35);
  v84(v89, v201, v35);
  v84((char *)(v87 + *(int *)(v194 + 36)), v89, v35);
  ((void (*)(char *, uint64_t))v88)(v85, v35);
  v91 = v199;
  v92 = v202;
  sub_100018778(v87, v202 + *(int *)(v199 + 20), &qword_1000B0080);
  sub_100018778(v195, v92, &qword_1000B0070);
  *(_BYTE *)(v92 + *(int *)(v91 + 24)) = 0;
  v93 = v185;
LABEL_44:
  ((void (*)(char *, uint64_t))v88)(v93, v35);
  return v90;
}

uint64_t sub_10006E3F0(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  char *v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char v84;
  void (*v85)(char *, uint64_t);
  char *v86;
  char v87;
  unint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  _QWORD **v113;
  char *v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  _QWORD **v130;
  uint64_t v131;
  char *v132;
  char *v133;
  void (*v134)(char *, uint64_t, _QWORD **);
  char *v135;
  char *v136;
  uint64_t v137;
  void (*v138)(char *, char *, _QWORD **);
  void (*v139)(char *, _QWORD **);
  char *v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  _QWORD **v144;
  void (*v145)(char *, _QWORD **);
  uint64_t result;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD **v154;
  uint64_t v155;
  char *v156;
  char *v157;
  void (*v158)(char *, uint64_t, _QWORD **);
  char *v159;
  char *v160;
  uint64_t v161;
  void (*v162)(char *, char *, _QWORD **);
  void (*v163)(char *, _QWORD **);
  char *v164;
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  unint64_t v176;
  _QWORD **v177;
  void (*v178)(char *, _QWORD **);
  uint64_t v179;
  _QWORD *v180;
  char *v181;
  char *v182;
  char *v183;
  char *v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  char *v193;
  char *v194;
  char *v195;
  char *v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  char *v202;
  char *v203;
  char *v204;
  unint64_t v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  _QWORD **v211;
  char *v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  char *v216;
  _QWORD *v217;
  _QWORD *v218;

  v196 = a3;
  v199 = a2;
  v4 = sub_100006DA4(&qword_1000B0070);
  __chkstk_darwin(v4);
  v187 = (uint64_t)&v179 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = type metadata accessor for TTRNewWidgetPresenter.Division(0);
  v189 = *(_QWORD *)(v206 - 8);
  v6 = __chkstk_darwin(v206);
  v8 = (char *)&v179 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v179 - v10;
  v12 = __chkstk_darwin(v9);
  v184 = (char *)&v179 - v13;
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v179 - v15;
  v17 = __chkstk_darwin(v14);
  v186 = (char *)&v179 - v18;
  v19 = __chkstk_darwin(v17);
  v185 = (char *)&v179 - v20;
  __chkstk_darwin(v19);
  v22 = (char *)&v179 - v21;
  v192 = sub_100006DA4(&qword_1000B0040);
  v23 = __chkstk_darwin(v192);
  v193 = (char *)&v179 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v191 = (char *)&v179 - v25;
  v200 = sub_100006DA4(&qword_1000B0080);
  v26 = __chkstk_darwin(v200);
  v202 = (char *)&v179 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v26);
  v205 = (unint64_t)&v179 - v29;
  v30 = __chkstk_darwin(v28);
  v204 = (char *)&v179 - v31;
  v32 = __chkstk_darwin(v30);
  v203 = (char *)&v179 - v33;
  v34 = __chkstk_darwin(v32);
  v190 = (char *)&v179 - v35;
  __chkstk_darwin(v34);
  v209 = (uint64_t)&v179 - v36;
  v213 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  v37 = *(_QWORD *)(v213 - 8);
  v38 = __chkstk_darwin(v213);
  v40 = (uint64_t *)((char *)&v179 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v38);
  v42 = (char *)&v179 - v41;
  v43 = sub_100006DA4(&qword_1000AD8B8);
  v44 = __chkstk_darwin(v43);
  v214 = (char *)&v179 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __chkstk_darwin(v44);
  v48 = (char *)&v179 - v47;
  __chkstk_darwin(v46);
  v198 = (char *)&v179 - v49;
  v50 = type metadata accessor for Date(0);
  v215 = *(_QWORD *)(v50 - 8);
  v51 = __chkstk_darwin(v50);
  v194 = (char *)&v179 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __chkstk_darwin(v51);
  v195 = (char *)&v179 - v54;
  v55 = __chkstk_darwin(v53);
  v212 = (char *)&v179 - v56;
  v57 = __chkstk_darwin(v55);
  v208 = (char *)&v179 - v58;
  __chkstk_darwin(v57);
  v197 = (char *)&v179 - v59;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_48;
  v201 = *(_QWORD *)(a1 + 16);
  v181 = v22;
  v183 = v11;
  v180 = v16;
  v182 = v8;
  v60 = *(_QWORD *)(v199 + 16);
  v61 = _swiftEmptyArrayStorage;
  v211 = (_QWORD **)v50;
  if (v60)
  {
    v188 = a1;
    v62 = v199 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
    v210 = *(_QWORD *)(v37 + 72);
    swift_bridgeObjectRetain(v199);
    v216 = (char *)_swiftEmptyArrayStorage;
    v64 = (uint64_t)v214;
    v63 = v215;
    v207 = v42;
    do
    {
      sub_1000072AC(v62, (uint64_t)v42, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
      sub_100009434((uint64_t)&v42[*(int *)(v213 + 24)], v64, &qword_1000AD8B8);
      sub_1000072AC((uint64_t)v42, (uint64_t)v40, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
      v65 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
      if (v65(v64, 1, v50) == 1)
      {
        v67 = v40[3];
        v66 = v40[4];
        sub_10001E184(v40, v67);
        v68 = *(void (**)(uint64_t, uint64_t))(v66 + 72);
        v69 = v67;
        v50 = (uint64_t)v211;
        v70 = v66;
        v64 = (uint64_t)v214;
        v68(v69, v70);
        v63 = v215;
        sub_100009578(v64, &qword_1000AD8B8);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v48, v64, v50);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v48, 0, 1, v50);
      }
      sub_100007EB4((uint64_t)v40, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
      sub_100007EB4((uint64_t)v42, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
      if (v65((uint64_t)v48, 1, v50) == 1)
      {
        sub_100009578((uint64_t)v48, &qword_1000AD8B8);
      }
      else
      {
        v71 = *(void (**)(char *, char *, uint64_t))(v63 + 32);
        v72 = v208;
        v71(v208, v48, v50);
        v71(v212, v72, v50);
        v73 = (unint64_t)v216;
        if ((swift_isUniquelyReferenced_nonNull_native(v216) & 1) == 0)
          v73 = sub_10001C3FC(0, *(_QWORD *)(v73 + 16) + 1, 1, v73);
        v75 = *(_QWORD *)(v73 + 16);
        v74 = *(_QWORD *)(v73 + 24);
        v216 = (char *)v73;
        if (v75 >= v74 >> 1)
          v216 = (char *)sub_10001C3FC(v74 > 1, v75 + 1, 1, (unint64_t)v216);
        v76 = v216;
        *((_QWORD *)v216 + 2) = v75 + 1;
        v63 = v215;
        v71(&v76[((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(_QWORD *)(v215 + 72) * v75], v212, v50);
        v64 = (uint64_t)v214;
        v42 = v207;
      }
      v62 += v210;
      --v60;
    }
    while (v60);
    swift_bridgeObjectRelease(v199);
    a1 = v188;
    v61 = v216;
  }
  else
  {
    v63 = v215;
  }
  v77 = v198;
  sub_10006B034((uint64_t)v61, v198);
  swift_bridgeObjectRelease((char *)v61);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v77, 1, v50) == 1)
  {
    sub_100009578((uint64_t)v77, &qword_1000AD8B8);
LABEL_48:
    swift_bridgeObjectRetain(a1);
    return a1;
  }
  v78 = *(char **)(v63 + 32);
  v79 = v197;
  v80 = ((uint64_t (*)(char *, char *, uint64_t))v78)(v197, v77, v50);
  v81 = v195;
  v82 = v63;
  Date.addingTimeInterval(_:)(v80, 2.0);
  v83 = v196;
  v84 = static Date.> infix(_:_:)(v81, v196);
  v85 = *(void (**)(char *, uint64_t))(v63 + 8);
  v85(v81, v50);
  if ((v84 & 1) == 0)
  {
    v85(v79, v50);
    goto LABEL_48;
  }
  v213 = (uint64_t)v85;
  v86 = (_QWORD *)sub_100007218(&qword_1000AF898, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v87 = dispatch thunk of static Comparable.>= infix(_:_:)(v79, v83, v50, (char *)v86);
  v88 = *(_QWORD *)(v82 + 16);
  v89 = (uint64_t)v194;
  if ((v87 & 1) != 0)
  {
    v90 = v194;
    v91 = v79;
  }
  else
  {
    v90 = v194;
    v91 = v83;
  }
  v92 = ((uint64_t (*)(char *, char *, uint64_t))v88)(v90, v91, v50);
  Date.addingTimeInterval(_:)(v92, 2.0);
  v93 = v50;
  v216 = (char *)v86;
  if ((dispatch thunk of static Comparable.<= infix(_:_:)(v89, v81, v50, (char *)v86) & 1) == 0)
  {
    __break(1u);
    goto LABEL_76;
  }
  v94 = v192;
  v95 = v191;
  v96 = &v191[*(int *)(v192 + 48)];
  ((void (*)(char *, uint64_t, uint64_t))v88)(v191, v89, v50);
  v215 = (uint64_t)v96;
  ((void (*)(char *, char *, uint64_t))v78)(v96, v81, v50);
  v97 = v193;
  v98 = &v193[*(int *)(v94 + 48)];
  ((void (*)(char *, char *, uint64_t))v88)(v193, v95, v50);
  v207 = (char *)v88;
  ((void (*)(char *, char *, uint64_t))v88)(v98, v96, v50);
  v99 = (uint64_t)v190;
  ((void (*)(char *, char *, uint64_t))v78)(v190, v97, v50);
  v100 = (void (*)(char *, uint64_t))v213;
  ((void (*)(char *, uint64_t))v213)(v98, v50);
  v101 = &v97[*(int *)(v94 + 48)];
  ((void (*)(char *, char *, uint64_t))v78)(v97, v95, v50);
  ((void (*)(char *, uint64_t, uint64_t))v78)(v101, v215, v50);
  v102 = v200;
  v103 = v99 + *(int *)(v200 + 36);
  v208 = v78;
  ((void (*)(uint64_t, char *, uint64_t))v78)(v103, v101, v50);
  v100(v97, v50);
  v104 = v209;
  sub_100018778(v99, v209, &qword_1000B0080);
  v105 = 0;
  v106 = (*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80);
  v188 = a1;
  v212 = (char *)v106;
  v107 = a1 + v106;
  v79 = (char *)(v104 + *(int *)(v102 + 36));
  v108 = *(_QWORD *)(v189 + 72);
  v109 = 1;
  v210 = v107;
  v86 = (_QWORD *)v107;
  v214 = v79;
  v215 = v108;
  v110 = (uint64_t)v203;
  while (1)
  {
    v111 = (uint64_t)v86 + *(int *)(v206 + 20);
    v112 = v79;
    v113 = v211;
    v114 = v216;
    v115 = dispatch thunk of static Comparable.<= infix(_:_:)(v112, v111, v211, v216);
    sub_100009434(v111, v110, &qword_1000B0080);
    v116 = (uint64_t)v204;
    sub_100009434(v209, (uint64_t)v204, &qword_1000B0080);
    if ((v115 & 1) != 0)
    {
      sub_100009578(v116, &qword_1000B0080);
      sub_100009578(v110, &qword_1000B0080);
      v117 = v205;
      sub_100009434(v111, v205, &qword_1000B0080);
LABEL_29:
      sub_100009578(v117, &qword_1000B0080);
      v78 = v202;
      sub_100009434(v209, (uint64_t)v202, &qword_1000B0080);
      v79 = v214;
      v50 = v215;
LABEL_30:
      sub_100009578((uint64_t)v78, &qword_1000B0080);
      goto LABEL_31;
    }
    v118 = dispatch thunk of static Comparable.<= infix(_:_:)(v110 + *(int *)(v200 + 36), v116, v113, (char *)v114);
    sub_100009578(v116, &qword_1000B0080);
    sub_100009578(v110, &qword_1000B0080);
    v117 = v205;
    sub_100009434(v111, v205, &qword_1000B0080);
    if ((v118 & 1) != 0)
      goto LABEL_29;
    v120 = v117 + *(int *)(v200 + 36);
    v121 = sub_100007218(&qword_1000B0088, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    LOBYTE(v120) = dispatch thunk of static Equatable.== infix(_:_:)(v117, v120, v211, v121);
    sub_100009578(v117, &qword_1000B0080);
    v78 = v202;
    sub_100009434(v209, (uint64_t)v202, &qword_1000B0080);
    v79 = v214;
    v50 = v215;
    if ((v120 & 1) != 0)
      goto LABEL_30;
    v122 = dispatch thunk of static Equatable.== infix(_:_:)(v78, &v78[*(int *)(v200 + 36)], v211, v121);
    v123 = sub_100009578((uint64_t)v78, &qword_1000B0080);
    if ((v122 & 1) == 0)
      break;
LABEL_31:
    v119 = v105 + 1;
    if (__OFADD__(v105, 1))
    {
      __break(1u);
      goto LABEL_72;
    }
    ++v105;
    v109 += 2;
    v86 = (_QWORD *)((char *)v86 + v50);
    if (v119 == v201)
      goto LABEL_47;
  }
  v93 = (uint64_t)&v179;
  __chkstk_darwin(v123);
  *(&v179 - 2) = v209;
  v89 = 0;
  v124 = sub_10006B31C((uint64_t (*)(uint64_t))sub_10006F808, (uint64_t)(&v179 - 4), v188);
  if ((v125 & 1) != 0)
  {
LABEL_47:
    v144 = v211;
    v145 = (void (*)(char *, _QWORD **))v213;
    ((void (*)(char *, _QWORD **))v213)(v194, v211);
    v145(v197, v144);
    sub_100009578(v209, &qword_1000B0080);
    a1 = v188;
    goto LABEL_48;
  }
  v88 = v124;
  v218 = _swiftEmptyArrayStorage;
  if (v105 >= 1)
  {
    if ((uint64_t)v201 < v105)
      goto LABEL_79;
    v126 = swift_bridgeObjectRetain(v188);
    v93 = (uint64_t)&v218;
    sub_1000551A0(v126, v210, 0, v109);
  }
  if (v105 >= v201)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v127 = (uint64_t)v181;
  sub_1000072AC((uint64_t)v86, (uint64_t)v181, type metadata accessor for TTRNewWidgetPresenter.Division);
  v78 = (char *)(v127 + *(int *)(v206 + 20));
  v128 = v209;
  v129 = static Date.< infix(_:_:)(v78, v209);
  v86 = v180;
  v205 = v88;
  if ((v129 & 1) == 0)
  {
    v93 = (uint64_t)v218;
    v89 = (uint64_t)v186;
    goto LABEL_51;
  }
  sub_100009434(v127, v187, &qword_1000B0070);
  v130 = v211;
  v93 = (uint64_t)v211;
  if ((dispatch thunk of static Comparable.<= infix(_:_:)(v78, v128, v211, v216) & 1) == 0)
    goto LABEL_80;
  v131 = v192;
  v132 = v191;
  v133 = &v191[*(int *)(v192 + 48)];
  v204 = v78;
  v134 = (void (*)(char *, uint64_t, _QWORD **))v207;
  ((void (*)(char *, char *, _QWORD **))v207)(v191, v78, v130);
  v203 = v133;
  v134(v133, v128, v130);
  v135 = v193;
  v136 = &v193[*(int *)(v131 + 48)];
  v134(v193, (uint64_t)v132, v130);
  v134(v136, (uint64_t)v133, v130);
  v137 = (uint64_t)v190;
  v138 = (void (*)(char *, char *, _QWORD **))v208;
  ((void (*)(char *, char *, _QWORD **))v208)(v190, v135, v130);
  v139 = (void (*)(char *, _QWORD **))v213;
  ((void (*)(char *, _QWORD **))v213)(v136, v130);
  v140 = &v135[*(int *)(v131 + 48)];
  v138(v135, v132, v130);
  v138(v140, v203, v130);
  v138((char *)(v137 + *(int *)(v200 + 36)), v140, v130);
  v139(v135, v130);
  v141 = v206;
  v86 = v185;
  sub_100018778(v137, (uint64_t)&v185[*(int *)(v206 + 20)], &qword_1000B0080);
  sub_100018778(v187, (uint64_t)v86, &qword_1000B0070);
  *((_BYTE *)v86 + *(int *)(v141 + 24)) = 0;
  v93 = (uint64_t)v218;
  if ((swift_isUniquelyReferenced_nonNull_native(v218) & 1) == 0)
    goto LABEL_81;
  while (1)
  {
    v143 = *(_QWORD *)(v93 + 16);
    v142 = *(_QWORD *)(v93 + 24);
    v89 = (uint64_t)v186;
    v78 = v204;
    v88 = v205;
    if (v143 >= v142 >> 1)
      v93 = sub_10001C3E8(v142 > 1, v143 + 1, 1, v93);
    *(_QWORD *)(v93 + 16) = v143 + 1;
    sub_100007EF0((uint64_t)v86, (uint64_t)&v212[v93 + v143 * v50], type metadata accessor for TTRNewWidgetPresenter.Division);
    v218 = (_QWORD *)v93;
    v86 = v180;
LABEL_51:
    sub_100009434((uint64_t)v181, v89, &qword_1000B0070);
    v147 = v206;
    sub_100009434(v209, v89 + *(int *)(v206 + 20), &qword_1000B0080);
    *(_BYTE *)(v89 + *(int *)(v147 + 24)) = 1;
    if ((swift_isUniquelyReferenced_nonNull_native(v93) & 1) == 0)
LABEL_77:
      v93 = sub_10001C3E8(0, *(_QWORD *)(v93 + 16) + 1, 1, v93);
    v149 = *(_QWORD *)(v93 + 16);
    v148 = *(_QWORD *)(v93 + 24);
    if (v149 >= v148 >> 1)
      v93 = sub_10001C3E8(v148 > 1, v149 + 1, 1, v93);
    *(_QWORD *)(v93 + 16) = v149 + 1;
    sub_100007EF0(v89, (uint64_t)&v212[v93 + v149 * v50], type metadata accessor for TTRNewWidgetPresenter.Division);
    v218 = (_QWORD *)v93;
    if (v88 < v201)
      break;
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    v93 = sub_10001C3E8(0, *(_QWORD *)(v93 + 16) + 1, 1, v93);
  }
  sub_1000072AC(v210 + v88 * v50, (uint64_t)v86, type metadata accessor for TTRNewWidgetPresenter.Division);
  v150 = v200;
  v151 = static Date.> infix(_:_:)((char *)v86 + *(int *)(v206 + 20) + *(int *)(v200 + 36), v79);
  v152 = v209;
  if ((v151 & 1) != 0)
  {
    sub_100009434((uint64_t)v86, v187, &qword_1000B0070);
    v153 = (uint64_t)&v78[*(int *)(v150 + 36)];
    v154 = v211;
    if ((dispatch thunk of static Comparable.<= infix(_:_:)(v79, v153, v211, v216) & 1) != 0)
    {
      v155 = v192;
      v156 = v191;
      v157 = &v191[*(int *)(v192 + 48)];
      v158 = (void (*)(char *, uint64_t, _QWORD **))v207;
      ((void (*)(char *, char *, _QWORD **))v207)(v191, v79, v154);
      v158(v157, v153, v154);
      v159 = v193;
      v160 = &v193[*(int *)(v155 + 48)];
      v158(v193, (uint64_t)v156, v154);
      v158(v160, (uint64_t)v157, v154);
      v161 = (uint64_t)v190;
      v162 = (void (*)(char *, char *, _QWORD **))v208;
      ((void (*)(char *, char *, _QWORD **))v208)(v190, v159, v154);
      v163 = (void (*)(char *, _QWORD **))v213;
      ((void (*)(char *, _QWORD **))v213)(v160, v154);
      v164 = &v159[*(int *)(v155 + 48)];
      v162(v159, v156, v154);
      v162(v164, v157, v154);
      v162((char *)(v161 + *(int *)(v200 + 36)), v164, v154);
      v163(v159, v154);
      v165 = v206;
      v153 = (uint64_t)v184;
      sub_100018778(v161, (uint64_t)&v184[*(int *)(v206 + 20)], &qword_1000B0080);
      sub_100018778(v187, v153, &qword_1000B0070);
      *(_BYTE *)(v153 + *(int *)(v165 + 24)) = 0;
      v88 = (unint64_t)v218;
      if ((swift_isUniquelyReferenced_nonNull_native(v218) & 1) != 0)
        goto LABEL_58;
    }
    else
    {
      __break(1u);
    }
    v88 = sub_10001C3E8(0, *(_QWORD *)(v88 + 16) + 1, 1, v88);
LABEL_58:
    v152 = v209;
    v167 = *(_QWORD *)(v88 + 16);
    v166 = *(_QWORD *)(v88 + 24);
    if (v167 >= v166 >> 1)
      v88 = sub_10001C3E8(v166 > 1, v167 + 1, 1, v88);
    *(_QWORD *)(v88 + 16) = v167 + 1;
    sub_100007EF0(v153, (uint64_t)&v212[v88 + v167 * v50], type metadata accessor for TTRNewWidgetPresenter.Division);
    v218 = (_QWORD *)v88;
    v88 = v205;
    v86 = v180;
  }
  v168 = v88 + 1;
  if ((uint64_t)(v88 + 1) >= (uint64_t)(v201 - 1))
    goto LABEL_74;
  v109 = (unint64_t)_swiftEmptyArrayStorage;
  v169 = v201 - v168;
  if (v201 == v168)
    goto LABEL_73;
  v217 = _swiftEmptyArrayStorage;
  v170 = v188;
  swift_bridgeObjectRetain(v188);
  result = sub_100081900(0, v169 & ~(v169 >> 63), 0);
  if (v169 < 0)
  {
    __break(1u);
  }
  else
  {
    v171 = (uint64_t)&v212[v50 * v168 + v170];
    v172 = (uint64_t)v183;
    do
    {
      v173 = (uint64_t)v182;
      sub_1000072AC(v171, (uint64_t)v182, type metadata accessor for TTRNewWidgetPresenter.Division);
      sub_100009434(v173, v172, &qword_1000B0070);
      v174 = v206;
      sub_100009434(v173 + *(int *)(v206 + 20), v172 + *(int *)(v206 + 20), &qword_1000B0080);
      *(_BYTE *)(v172 + *(int *)(v174 + 24)) = 0;
      sub_100007EB4(v173, type metadata accessor for TTRNewWidgetPresenter.Division);
      v109 = (unint64_t)v217;
      if ((swift_isUniquelyReferenced_nonNull_native(v217) & 1) == 0)
      {
        sub_100081900(0, *(_QWORD *)(v109 + 16) + 1, 1);
        v109 = (unint64_t)v217;
      }
      v176 = *(_QWORD *)(v109 + 16);
      v175 = *(_QWORD *)(v109 + 24);
      if (v176 >= v175 >> 1)
      {
        sub_100081900(v175 > 1, v176 + 1, 1);
        v109 = (unint64_t)v217;
      }
      *(_QWORD *)(v109 + 16) = v176 + 1;
      v172 = (uint64_t)v183;
      sub_100007EF0((uint64_t)v183, (uint64_t)&v212[v109 + v176 * v50], type metadata accessor for TTRNewWidgetPresenter.Division);
      v171 += v50;
      --v169;
    }
    while (v169);
LABEL_72:
    swift_bridgeObjectRelease(v188);
LABEL_73:
    sub_100055718(v109);
    v86 = v180;
    v152 = v209;
LABEL_74:
    sub_100007EB4((uint64_t)v86, type metadata accessor for TTRNewWidgetPresenter.Division);
    sub_100007EB4((uint64_t)v181, type metadata accessor for TTRNewWidgetPresenter.Division);
    v177 = v211;
    v178 = (void (*)(char *, _QWORD **))v213;
    ((void (*)(char *, _QWORD **))v213)(v194, v211);
    v178(v197, v177);
    sub_100009578(v152, &qword_1000B0080);
    return (uint64_t)v218;
  }
  return result;
}

BOOL sub_10006F7EC(uint64_t a1)
{
  uint64_t v1;

  return sub_10006B3D4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10006F808()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  type metadata accessor for TTRNewWidgetPresenter.Division(0);
  return sub_10006AABC(v1) & 1;
}

uint64_t sub_10006F858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 64) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v7 + 16, v5);
}

uint64_t sub_10006F914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v7 = *(_QWORD *)(type metadata accessor for Date(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100067D64(a1, a2, a3, v3 + 16, *(_QWORD *)(v3 + 56), (char *)(v3 + v8), *(_QWORD *)(v3 + v9), *(void (**)(_QWORD *))(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10006F9A8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*((_QWORD *)v0 + 2));
  swift_release(*((_QWORD *)v0 + 4));
  swift_bridgeObjectRelease(*((_QWORD *)v0 + 6));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10006FA48(uint64_t a1)
{
  return sub_10006FA54(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char *, _QWORD))sub_100066C8C);
}

uint64_t sub_10006FA54(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char *, _QWORD))
{
  char *v2;
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)(type metadata accessor for Date(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return a2(a1, *((_QWORD *)v2 + 2), *((_QWORD *)v2 + 3), *((_QWORD *)v2 + 4), *((_QWORD *)v2 + 5), *((_QWORD *)v2 + 6), &v2[v5], *(_QWORD *)&v2[(*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8]);
}

uint64_t sub_10006FAC0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  id v9;

  if ((a6 & 1) != 0)
    return swift_errorRetain(a1);
  v9 = a1;
  swift_bridgeObjectRetain(a4);
  return swift_bridgeObjectRetain(a5);
}

uint64_t sub_10006FAF8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) != 0)
    return swift_errorRelease(a1);

  swift_bridgeObjectRelease(a4);
  return swift_bridgeObjectRelease(a5);
}

uint64_t sub_10006FB34(uint64_t a1, uint64_t a2, char *a3, void (*a4)(_QWORD *), uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v24;
  void (*v25)(_QWORD *);
  char v26[16];
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char v31[16];

  v24 = a5;
  v25 = a4;
  v9 = sub_100006DA4(&qword_1000AD9C0);
  __chkstk_darwin(v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for REMNavigationSpecifier(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = (char *)v15 + *(int *)(sub_100006DA4(&qword_1000ADA28) + 48);
  *v15 = objc_msgSend(*(id *)a1, "objectID", v24);
  v17 = enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:);
  v18 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v16, v17, v18);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for REMNavigationSpecifier.customSmartList(_:), v12);
  v19 = *(_QWORD *)(a1 + 24);
  v20 = *(_QWORD *)(a1 + 32);
  (*(void (**)(char *, _QWORD *, uint64_t))(v13 + 16))(v11, v15, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  v21 = sub_100067F84(v19, v20, (uint64_t)v11, a3);
  sub_100009578((uint64_t)v11, &qword_1000AD9C0);
  v27 = v5;
  v28 = a1;
  v29 = v15;
  v30 = a2;
  v22 = sub_1000636B0((void (*)(uint64_t))sub_10006FD30, (uint64_t)v26, (uint64_t)v21, (uint64_t)v31, type metadata accessor for TTRNewWidgetTimelineEntry, (void (*)(BOOL, unint64_t, uint64_t))sub_10008192C, type metadata accessor for TTRNewWidgetPresenter.Snapshot);
  swift_bridgeObjectRelease(v21);
  v25(v22);
  swift_bridgeObjectRelease(v22);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_10006FD30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_100069480(a1, v2[2], v2[3], v2[5], a2);
}

uint64_t sub_10006FD50(uint64_t a1, uint64_t a2, char *a3, void (*a4)(_QWORD *), uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  void (*v28)(_QWORD *);
  _BYTE v29[16];

  v27 = a5;
  v28 = a4;
  v9 = sub_100006DA4(&qword_1000AD9C0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v27 - v13;
  v15 = type metadata accessor for REMNavigationSpecifier(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  REMSmartListType.navigationSpecifier.getter(a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    v19 = enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:);
    v20 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v18, v19, v20);
    (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for REMNavigationSpecifier.today(_:), v15);
    sub_100009578((uint64_t)v14, &qword_1000AD9C0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  }
  v21 = *(_QWORD *)(a1 + 24);
  v22 = *(_QWORD *)(a1 + 32);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v12, v18, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
  v23 = sub_100067F84(v21, v22, (uint64_t)v12, a3);
  v24 = sub_100009578((uint64_t)v12, &qword_1000AD9C0);
  __chkstk_darwin(v24);
  *(&v27 - 4) = v5;
  *(&v27 - 3) = a2;
  *(&v27 - 2) = a1;
  *(&v27 - 1) = (uint64_t)v18;
  v25 = sub_1000636B0((void (*)(uint64_t))sub_10006FFA8, (uint64_t)(&v27 - 6), (uint64_t)v23, (uint64_t)v29, type metadata accessor for TTRNewWidgetTimelineEntry, (void (*)(BOOL, unint64_t, uint64_t))sub_10008192C, type metadata accessor for TTRNewWidgetPresenter.Snapshot);
  swift_bridgeObjectRelease(v23);
  v28(v25);
  swift_bridgeObjectRelease(v25);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t sub_10006FFA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_100069C68(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_10006FFC8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for TTRListColors.Color - 1) + 32))(a2, a1);
  return a2;
}

uint64_t sub_100070004(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
  return a1;
}

id sub_100070040(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) != 0)
    return a1;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a4);
  return (id)swift_bridgeObjectRetain(a6);
}

uint64_t *sub_10007007C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100006DA4(&qword_1000B0070);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 3) = v11;
      (**(void (***)(uint64_t *, uint64_t *))(v11 - 8))(a1, a2);
      a1[5] = a2[5];
      v12 = *(int *)(v7 + 24);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Date(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_100006DA4(&qword_1000AD8B8);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = *(int *)(a3 + 20);
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = type metadata accessor for Date(0);
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    v22(v19, v20, v21);
    v23 = sub_100006DA4(&qword_1000B0080);
    v22(&v19[*(int *)(v23 + 36)], &v20[*(int *)(v23 + 36)], v21);
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_10007025C(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v12)(char *, uint64_t);

  v4 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    sub_10001D26C(a1);
    v5 = (char *)a1 + *(int *)(v4 + 24);
    v6 = type metadata accessor for Date(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
      (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  v8 = (char *)a1 + *(int *)(a2 + 20);
  v9 = type metadata accessor for Date(0);
  v12 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v12(v8, v9);
  v10 = &v8[*(int *)(sub_100006DA4(&qword_1000B0080) + 36)];
  return ((uint64_t (*)(char *, uint64_t))v12)(v10, v9);
}

uint64_t sub_100070350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;

  v6 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100006DA4(&qword_1000B0070);
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v9;
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1, a2);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    v10 = *(int *)(v6 + 24);
    v11 = (void *)(a1 + v10);
    v12 = (const void *)(a2 + v10);
    v13 = type metadata accessor for Date(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100006DA4(&qword_1000AD8B8);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = *(int *)(a3 + 20);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = type metadata accessor for Date(0);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v20(v17, v18, v19);
  v21 = sub_100006DA4(&qword_1000B0080);
  v20(v17 + *(int *)(v21 + 36), v18 + *(int *)(v21 + 36), v19);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

char *sub_100070504(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;

  v6 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      sub_10005D550(a1, a2);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      v21 = *(int *)(v6 + 24);
      v22 = &a1[v21];
      v23 = &a2[v21];
      v24 = type metadata accessor for Date(0);
      v25 = *(_QWORD *)(v24 - 8);
      v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
      v27 = v26(v22, 1, v24);
      v28 = v26(v23, 1, v24);
      if (v27)
      {
        if (!v28)
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v28)
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 24))(v22, v23, v24);
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000AD8B8) - 8) + 64);
      v19 = v22;
      v20 = v23;
      goto LABEL_8;
    }
    sub_100007EB4((uint64_t)a1, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000B0070) - 8) + 64);
    v19 = a1;
    v20 = a2;
LABEL_8:
    memcpy(v19, v20, v18);
    goto LABEL_14;
  }
  if (v10)
    goto LABEL_7;
  v11 = *((_QWORD *)a2 + 3);
  *((_QWORD *)a1 + 3) = v11;
  *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
  (**(void (***)(char *, char *))(v11 - 8))(a1, a2);
  *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
  v12 = *(int *)(v6 + 24);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = type metadata accessor for Date(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100006DA4(&qword_1000AD8B8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v29 = *(int *)(a3 + 20);
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = type metadata accessor for Date(0);
  v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 24);
  v33(v30, v31, v32);
  v34 = sub_100006DA4(&qword_1000B0080);
  v33(&v30[*(int *)(v34 + 36)], &v31[*(int *)(v34 + 36)], v32);
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

_OWORD *sub_1000707C0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;

  v6 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100006DA4(&qword_1000B0070);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    v10 = *((_QWORD *)a2 + 5);
    *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a1 + 5) = v10;
    v11 = *(int *)(v6 + 24);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for Date(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = sub_100006DA4(&qword_1000AD8B8);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v17 = *(int *)(a3 + 20);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = type metadata accessor for Date(0);
  v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
  v21(v18, v19, v20);
  v22 = sub_100006DA4(&qword_1000B0080);
  v21(&v18[*(int *)(v22 + 36)], &v19[*(int *)(v22 + 36)], v20);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10007095C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  size_t v19;
  void *v20;
  const void *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;

  v6 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      sub_10001D26C((_QWORD *)a1);
      v22 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v22;
      v23 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v23;
      v24 = *(int *)(v6 + 24);
      v25 = (void *)(a1 + v24);
      v26 = (void *)(a2 + v24);
      v27 = type metadata accessor for Date(0);
      v28 = *(_QWORD *)(v27 - 8);
      v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
      v30 = v29(v25, 1, v27);
      v31 = v29(v26, 1, v27);
      if (v30)
      {
        if (!v31)
        {
          (*(void (**)(void *, void *, uint64_t))(v28 + 32))(v25, v26, v27);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v31)
        {
          (*(void (**)(void *, void *, uint64_t))(v28 + 40))(v25, v26, v27);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v28 + 8))(v25, v27);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000AD8B8) - 8) + 64);
      v20 = v25;
      v21 = v26;
      goto LABEL_8;
    }
    sub_100007EB4(a1, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
LABEL_7:
    v19 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000B0070) - 8) + 64);
    v20 = (void *)a1;
    v21 = (const void *)a2;
LABEL_8:
    memcpy(v20, v21, v19);
    goto LABEL_14;
  }
  if (v10)
    goto LABEL_7;
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v12;
  v13 = *(int *)(v6 + 24);
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = type metadata accessor for Date(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = sub_100006DA4(&qword_1000AD8B8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v32 = *(int *)(a3 + 20);
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = type metadata accessor for Date(0);
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 40);
  v36(v33, v34, v35);
  v37 = sub_100006DA4(&qword_1000B0080);
  v36(v33 + *(int *)(v37 + 36), v34 + *(int *)(v37 + 36), v35);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100070C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100070C0C);
}

uint64_t sub_100070C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  v6 = sub_100006DA4(&qword_1000B0070);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_100006DA4(&qword_1000B0080);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 2)
    return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_100070CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100070CD8);
}

uint64_t sub_100070CD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_100006DA4(&qword_1000B0070);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_100006DA4(&qword_1000B0080);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  return result;
}

void sub_100070D84(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  sub_100070E10(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100070E64(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = &unk_10008C288;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

void sub_100070E10(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1000B0108)
  {
    v2 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1000B0108);
  }
}

void sub_100070E64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1000B0110)
  {
    v2 = type metadata accessor for Date(255);
    v3 = sub_100007218(&qword_1000AF898, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v4 = type metadata accessor for Range(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1000B0110);
  }
}

uint64_t *sub_100070EDC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = v10;
    *(_DWORD *)((char *)a1 + v9) = *(_DWORD *)((char *)a2 + v9);
    swift_bridgeObjectRetain(v10);
  }
  return a1;
}

uint64_t sub_100070F70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20)));
}

uint64_t sub_100070FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  *(_DWORD *)(a1 + v8) = *(_DWORD *)(a2 + v8);
  swift_bridgeObjectRetain(v9);
  return a1;
}

uint64_t sub_10007101C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a2 + v7);
  v9 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_DWORD *)(a1 + *(int *)(a3 + 24)) = *(_DWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100071094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1000710F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease(v8);
  *(_DWORD *)(a1 + *(int *)(a3 + 24)) = *(_DWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100071168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100071174);
}

uint64_t sub_100071174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1000711F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000711FC);
}

uint64_t sub_1000711FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_100071274(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[2] = (char *)&value witness table for Builtin.Int32 + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1000712FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

_QWORD *sub_100071398(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  char *v5;

  v3 = *(_QWORD *)(type metadata accessor for Date(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (char *)v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1000661B4(a1, v1[2], v1[3], v1[4], (uint64_t)v1 + v4, *(void (**)(_QWORD *))v5, *((_QWORD *)v5 + 1));
}

id sub_1000713F4@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_100065D7C(a1, *(void **)(v2 + 24), a2);
}

uint64_t sub_100071410()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000CF88(v0, qword_1000B01F0);
  v1 = sub_10000CF70(v0, (uint64_t)qword_1000B01F0);
  if (qword_1000AC888 != -1)
    swift_once(&qword_1000AC888, sub_10001D5C8);
  v2 = sub_10000CF70(v0, (uint64_t)qword_1000B9E48);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_1000714A0()
{
  return objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
}

uint64_t sub_1000714C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001D418(a1, a2);
}

void sub_1000714CC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;

  v0 = sub_100006DA4(&qword_1000AF8A0);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = objc_msgSend(objc_allocWithZone((Class)REMStore), "init");
  v4 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v2, 1, 1, v4);
  type metadata accessor for RDIDispatchQueue(0);
  v5 = (void *)static RDIDispatchQueue.storeQueue.getter();
  v6 = type metadata accessor for TTRNewWidgetInteractor(0);
  v7 = (_QWORD *)swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v7[2] = 0x4000000000000000;
  v7[3] = v3;
  v7[4] = v5;
  sub_10007161C((uint64_t)v2, (uint64_t)v7 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_sortingStyle);
  v8 = type metadata accessor for TTRNewWidgetInteractor.CompletedCache();
  v9 = swift_allocObject(v8, 128, 15);
  v10 = v3;
  v11 = v5;
  swift_defaultActor_initialize(v9);
  *(_QWORD *)(v9 + 112) = 0x4000000000000000;
  *(_QWORD *)(v9 + 120) = &_swiftEmptyDictionarySingleton;
  sub_100071664((uint64_t)v2);
  *(_QWORD *)((char *)v7 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache) = v9;

  qword_1000B0208 = (uint64_t)v7;
}

uint64_t sub_10007161C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006DA4(&qword_1000AF8A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100071664(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006DA4(&qword_1000AF8A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000716A4()
{
  uint64_t Subtasks;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[5];
  ValueMetadata *v42;
  _QWORD v43[2];
  uint64_t v44;
  void *v45;
  __int128 v46;

  Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
  v1 = *(_QWORD *)(Subtasks - 8);
  __chkstk_darwin(Subtasks);
  v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TTRNewWidgetRouter();
  v5 = swift_allocObject(v4, 16, 7);
  sub_100071B7C();
  v6 = ((uint64_t (*)(void))static OS_dispatch_queue.main.getter)();
  type metadata accessor for RDIDispatchQueue(0);
  v7 = static RDIDispatchQueue.storeQueue.getter();
  v8 = type metadata accessor for REMContactsProvider(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v9 = REMContactsProvider.init(contactStoreCreator:queue:backgroundQueue:)(sub_100071BF0, 0, v6, v7);
  v10 = swift_retain(v9);
  v11 = static OS_dispatch_queue.main.getter(v10);
  v44 = v8;
  v45 = &protocol witness table for REMContactsProvider;
  v42 = (ValueMetadata *)v9;
  v12 = type metadata accessor for TTRParticipantAvatarProvider(0);
  swift_allocObject(v12, 128, 7);
  v13 = TTRParticipantAvatarProvider.init(contactsProvider:contactStoreCreator:queue:)(&v42, sub_1000714A0, 0, v11);
  if (qword_1000AC978 != -1)
    swift_once(&qword_1000AC978, sub_1000714CC);
  v14 = qword_1000B0208;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for REMRemindersListDataView.FetchSubtasks.count(_:), Subtasks);
  v44 = v12;
  v45 = &protocol witness table for TTRParticipantAvatarProvider;
  v42 = (ValueMetadata *)v13;
  v15 = qword_1000AC8A8;
  swift_retain(v14);
  swift_retain(v5);
  swift_retain(v13);
  if (v15 != -1)
    swift_once(&qword_1000AC8A8, sub_100025384);
  v46 = xmmword_1000B9E60;
  v41[3] = v4;
  v41[4] = (uint64_t)&off_1000AA260;
  v41[0] = v5;
  v16 = type metadata accessor for TTRNewWidgetPresenter(0);
  v17 = swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  v18 = sub_100071BB8((uint64_t)v41, v4);
  __chkstk_darwin(v18);
  v20 = (uint64_t *)((char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v21 + 16))(v20);
  v22 = *v20;
  swift_retain(v5);
  v23 = sub_100080078(v14, v22, (uint64_t)v3, (uint64_t)&v42, 2, 0, v17);
  sub_10001D26C(v41);
  swift_release(v5);
  v24 = qword_1000AC970;
  swift_retain(v23);
  if (v24 != -1)
    swift_once(&qword_1000AC970, sub_100071410);
  v25 = type metadata accessor for Logger(0);
  sub_10000CF70(v25, (uint64_t)qword_1000B01F0);
  v26 = swift_retain_n(v23, 2);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = swift_slowAlloc(22, -1);
    v30 = swift_slowAlloc(64, -1);
    v41[0] = v30;
    *(_DWORD *)v29 = 136446466;
    v42 = &type metadata for TTRNewWidgetAssembly;
    v31 = sub_100006DA4(&qword_1000B0218);
    v40 = v9;
    v32 = String.init<A>(describing:)(&v42, v31);
    v34 = v33;
    v42 = (ValueMetadata *)sub_10007FA38(v32, v33, v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, v43, v29 + 4, v29 + 12);
    swift_bridgeObjectRelease(v34);
    *(_WORD *)(v29 + 12) = 2080;
    v42 = (ValueMetadata *)v23;
    v43[0] = 8;
    swift_retain(v23);
    v35 = String.init<A>(describing:)(&v42, &type metadata for TTRNewWidgetProvider);
    v37 = v36;
    v42 = (ValueMetadata *)sub_10007FA38(v35, v36, v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, v43, v29 + 14, v29 + 22);
    swift_release_n(v23, 2);
    swift_bridgeObjectRelease(v37);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "%{public}s: Created provider %s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy(v30, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    swift_slowDealloc(v29, -1, -1);
    swift_release(v40);
    swift_release(v5);
    swift_release(v13);
    swift_release(v23);

  }
  else
  {

    swift_release_n(v23, 3);
    swift_release(v13);
    swift_release(v5);
    swift_release(v9);
  }
  return v23;
}

unint64_t sub_100071B7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B0210;
  if (!qword_1000B0210)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000B0210);
  }
  return result;
}

uint64_t sub_100071BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRNewWidgetAssembly()
{
  return &type metadata for TTRNewWidgetAssembly;
}

uint64_t sub_100071BF4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, id a6, uint64_t a7, uint64_t a8)
{
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  char v61;
  uint64_t v62;
  uint64_t v63;

  if (*(_QWORD *)(a1 + 24))
  {
    v14 = objc_msgSend(a6, "substringWithRange:", a2, a3);
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;

    v18 = Text.font(_:)(a7, v15, v17, 0, &_swiftEmptyArrayStorage);
    v20 = v19;
    v22 = v21;
    v24 = v23;
    swift_bridgeObjectRelease(v17);
    v25 = v22 & 1;
    if (a8)
    {
      swift_retain_n(a8, 2);
      sub_100009520(v18, v20, v22 & 1);
      swift_bridgeObjectRetain(v24);
      v26 = Text.foregroundColor(_:)(a8, v18, v20, v22 & 1, v24);
      v28 = v27;
      v30 = v29;
      v32 = v31 & 1;
      sub_10000729C(v18, v20, v25);
      swift_bridgeObjectRelease(v24);
      sub_10000729C(v18, v20, v25);
      swift_release_n(a8, 2);
      swift_bridgeObjectRelease(v24);
      v18 = v26;
      v20 = v28;
      v25 = v32;
      v24 = v30;
    }
    v33 = *(_QWORD *)a5;
    v34 = *(_QWORD *)(a5 + 8);
    v35 = *(unsigned __int8 *)(a5 + 16);
    v36 = *(_QWORD *)(a5 + 24);
    sub_100009520(*(_QWORD *)a5, v34, *(_BYTE *)(a5 + 16));
    swift_bridgeObjectRetain(v36);
    v37 = static Text.+ infix(_:_:)(v33, v34, v35, v36, v18, v20, v25, v24);
    v62 = v38;
    v63 = v39;
    v61 = v40;
    sub_10000729C(v18, v20, v25);
    swift_bridgeObjectRelease(v24);
    sub_10000729C(v33, v34, v35);
    swift_bridgeObjectRelease(v36);
    v41 = *(_QWORD *)a5;
    v42 = *(_QWORD *)(a5 + 8);
    v43 = *(_BYTE *)(a5 + 16);
    v44 = *(_QWORD *)(a5 + 24);
    *(_QWORD *)a5 = v37;
    *(_QWORD *)(a5 + 8) = v62;
    *(_BYTE *)(a5 + 16) = v61 & 1;
    *(_QWORD *)(a5 + 24) = v63;
  }
  else
  {
    v45 = *(_QWORD *)a5;
    v46 = *(_QWORD *)(a5 + 8);
    v47 = *(unsigned __int8 *)(a5 + 16);
    v48 = *(_QWORD *)(a5 + 24);
    sub_100009520(*(_QWORD *)a5, v46, *(_BYTE *)(a5 + 16));
    swift_bridgeObjectRetain(v48);
    v49 = objc_msgSend(a6, "substringWithRange:", a2, a3);
    v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
    v52 = v51;

    v53 = static Text.+ infix(_:_:)(v45, v46, v47, v48, v50, v52, 0, &_swiftEmptyArrayStorage);
    v55 = v54;
    v57 = v56;
    v59 = v58;
    swift_bridgeObjectRelease(v52);
    sub_10000729C(v45, v46, v47);
    swift_bridgeObjectRelease(v48);
    v41 = *(_QWORD *)a5;
    v42 = *(_QWORD *)(a5 + 8);
    v43 = *(_BYTE *)(a5 + 16);
    v44 = *(_QWORD *)(a5 + 24);
    *(_QWORD *)a5 = v53;
    *(_QWORD *)(a5 + 8) = v55;
    *(_BYTE *)(a5 + 16) = v57 & 1;
    *(_QWORD *)(a5 + 24) = v59;
  }
  sub_10000729C(v41, v42, v43);
  return swift_bridgeObjectRelease(v44);
}

uint64_t sub_100071EE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10001CD04(v2 + *(int *)(a1 + 24), a2);
}

uint64_t *sub_100071EF4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v22);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
    v9[*(int *)(v12 + 20)] = v10[*(int *)(v12 + 20)];
    v13 = *(int *)(v12 + 24);
    v14 = *(_QWORD *)&v10[v13];
    *(_QWORD *)&v9[v13] = v14;
    v15 = *(int *)(a3 + 24);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = type metadata accessor for TimelineEntryRelevance(0);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    swift_bridgeObjectRetain(v14);
    if (v20(v17, 1, v18))
    {
      v21 = sub_100006DA4(&qword_1000AD928);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
  }
  return a1;
}

uint64_t sub_100072058(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + *(int *)(v7 + 24)));
  v8 = a1 + *(int *)(a2 + 24);
  v9 = type metadata accessor for TimelineEntryRelevance(0);
  v10 = *(_QWORD *)(v9 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  return result;
}

uint64_t sub_100072120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(const void *, uint64_t, uint64_t);
  uint64_t v20;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
  *(_BYTE *)(v8 + *(int *)(v11 + 20)) = *(_BYTE *)(v9 + *(int *)(v11 + 20));
  v12 = *(int *)(v11 + 24);
  v13 = *(_QWORD *)(v9 + v12);
  *(_QWORD *)(v8 + v12) = v13;
  v14 = *(int *)(a3 + 24);
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = type metadata accessor for TimelineEntryRelevance(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain(v13);
  if (v19(v16, 1, v17))
  {
    v20 = sub_100006DA4(&qword_1000AD928);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t sub_100072258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void *, uint64_t, uint64_t);
  int v21;
  uint64_t v22;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
  *(_BYTE *)(v8 + *(int *)(v11 + 20)) = *(_BYTE *)(v9 + *(int *)(v11 + 20));
  v12 = *(int *)(v11 + 24);
  v13 = *(_QWORD *)(v9 + v12);
  v14 = *(_QWORD *)(v8 + v12);
  *(_QWORD *)(v8 + v12) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v14);
  v15 = *(int *)(a3 + 24);
  v16 = (void *)(a1 + v15);
  v17 = (void *)(a2 + v15);
  v18 = type metadata accessor for TimelineEntryRelevance(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  LODWORD(v14) = v20(v16, 1, v18);
  v21 = v20(v17, 1, v18);
  if (!(_DWORD)v14)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    v22 = sub_100006DA4(&qword_1000AD928);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v16, v17, v18);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

uint64_t sub_1000723DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
  *(_BYTE *)(v8 + *(int *)(v11 + 20)) = *(_BYTE *)(v9 + *(int *)(v11 + 20));
  *(_QWORD *)(v8 + *(int *)(v11 + 24)) = *(_QWORD *)(v9 + *(int *)(v11 + 24));
  v12 = *(int *)(a3 + 24);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = type metadata accessor for TimelineEntryRelevance(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100006DA4(&qword_1000AD928);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_100072504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  uint64_t v21;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
  *(_BYTE *)(v8 + *(int *)(v11 + 20)) = *(_BYTE *)(v9 + *(int *)(v11 + 20));
  v12 = *(int *)(v11 + 24);
  v13 = *(_QWORD *)(v8 + v12);
  *(_QWORD *)(v8 + v12) = *(_QWORD *)(v9 + v12);
  swift_bridgeObjectRelease(v13);
  v14 = *(int *)(a3 + 24);
  v15 = (void *)(a1 + v14);
  v16 = (void *)(a2 + v14);
  v17 = type metadata accessor for TimelineEntryRelevance(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  LODWORD(v9) = v19(v15, 1, v17);
  v20 = v19(v16, 1, v17);
  if (!(_DWORD)v9)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v15, v16, v17);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v21 = sub_100006DA4(&qword_1000AD928);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v15, v16, v17);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  return a1;
}

uint64_t sub_100072680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007268C);
}

uint64_t sub_10007268C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = sub_100006DA4(&qword_1000AD928);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100072728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100072734);
}

uint64_t sub_100072734(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = type metadata accessor for TTRTodayComplicationWidgetViewModel(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_100006DA4(&qword_1000AD928);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for TTRTodayComplicationWidgetTimelineEntry(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B0278;
  if (!qword_1000B0278)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRTodayComplicationWidgetTimelineEntry);
  return result;
}

void sub_100072814(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[3];

  v2 = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for TTRTodayComplicationWidgetViewModel(319);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_1000728B4(319);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 3, v8, a1 + 16);
      }
    }
  }
}

void sub_1000728B4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1000ADB60)
  {
    v2 = type metadata accessor for TimelineEntryRelevance(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1000ADB60);
  }
}

_QWORD *sub_100072908(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v9 = *(_QWORD *)((char *)a2 + v8);
    *(_QWORD *)((char *)a1 + v8) = v9;
    swift_bridgeObjectRetain(v9);
  }
  return a1;
}

uint64_t sub_10007299C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 24)));
}

uint64_t sub_1000729E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  return a1;
}

uint64_t sub_100072A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = *(_QWORD *)(a2 + v7);
  v9 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t sub_100072AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_100072B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t sub_100072B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100072B9C);
}

uint64_t sub_100072B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100072C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100072C24);
}

uint64_t sub_100072C24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for TTRTodayComplicationWidgetViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B0310;
  if (!qword_1000B0310)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRTodayComplicationWidgetViewModel);
  return result;
}

uint64_t sub_100072CD8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10008C388;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100072D58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void *v45;
  id v46;
  unsigned __int8 v47;
  id v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  char *v80;

  v3 = sub_100006DA4(&qword_1000AD8B8);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v63 - v7;
  v78 = type metadata accessor for Calendar(0);
  v76 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Date(0);
  v77 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v70 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v75 = (char *)&v63 - v15;
  v16 = __chkstk_darwin(v14);
  v69 = (char *)&v63 - v17;
  v18 = __chkstk_darwin(v16);
  v74 = (char *)&v63 - v19;
  __chkstk_darwin(v18);
  v80 = (char *)&v63 - v20;
  v21 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(int *)(type metadata accessor for TTRTodayComplicationWidgetViewModel(0) + 24);
  v26 = *(_QWORD *)(v1 + v25);
  v27 = *(_QWORD *)(v26 + 16);
  if (v27)
  {
    v66 = v21;
    v67 = a1;
    v68 = v6;
    v28 = v22;
    v29 = v26 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    v64 = v26;
    v65 = v28;
    v72 = *(_QWORD *)(v28 + 72);
    swift_bridgeObjectRetain(v26);
    v73 = v8;
    while (1)
    {
      v44 = sub_100073784(v29, (uint64_t)v24);
      static Date.now.getter(v44);
      v45 = (void *)*((_QWORD *)v24 + 1);
      if (!v45)
        break;
      v46 = v45;
      v47 = objc_msgSend(v46, "isAllDay");
      v79 = v46;
      if ((v47 & 1) != 0)
      {
        ((void (*)(void))static Calendar.current.getter)();
        v30 = objc_msgSend(v46, "date");
        v31 = v69;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        v32 = v10;
        v33 = v11;
        v34 = v74;
        Calendar.startOfDay(for:)(v31);
        v35 = *(void (**)(char *, uint64_t))(v77 + 8);
        v35(v31, v33);
        v36 = *(uint64_t (**)(char *, uint64_t))(v76 + 8);
        v37 = v78;
        v38 = v36(v32, v78);
        static Calendar.current.getter(v38);
        v71 = v27;
        v39 = v24;
        v40 = v80;
        Calendar.startOfDay(for:)(v80);
        v36(v32, v37);
        LOBYTE(v36) = static Date.< infix(_:_:)(v34, v31);

        v41 = v31;
        v8 = v73;
        v35(v41, v33);
        v42 = v34;
        v11 = v33;
        v10 = v32;
        v35(v42, v11);
        v43 = v40;
        v24 = v39;
        v27 = v71;
        v35(v43, v11);
        if ((v36 & 1) == 0)
          goto LABEL_18;
      }
      else
      {
        v48 = objc_msgSend(v46, "date");
        v49 = v74;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        static Calendar.current.getter(v50);
        Date.rem_dateFlooredToNearestMinute(inCalendar:)(v10);
        v51 = *(void (**)(char *, uint64_t))(v76 + 8);
        v51(v10, v78);
        v52 = v77;
        v53 = *(void (**)(char *, uint64_t))(v77 + 8);
        v53(v49, v11);
        v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
        if (v54(v8, 1, v11) == 1)
        {
          static Date.distantPast.getter();
          v55 = sub_100073804((uint64_t)v8);
        }
        else
        {
          v55 = (*(uint64_t (**)(char *, char *, uint64_t))(v52 + 32))(v75, v8, v11);
        }
        static Calendar.current.getter(v55);
        v56 = (uint64_t)v68;
        Date.rem_dateFlooredToNearestMinute(inCalendar:)(v10);
        v51(v10, v78);
        if (v54((char *)v56, 1, v11) == 1)
        {
          v57 = v70;
          static Date.distantPast.getter();
          sub_100073804(v56);
        }
        else
        {
          v57 = v70;
          (*(void (**)(char *, uint64_t, uint64_t))(v77 + 32))(v70, v56, v11);
        }
        v58 = v75;
        v59 = static Date.< infix(_:_:)(v75, v57);

        v53(v57, v11);
        v53(v58, v11);
        v53(v80, v11);
        v8 = v73;
        if ((v59 & 1) == 0)
          goto LABEL_18;
      }
      sub_1000737C8((uint64_t)v24);
      v29 += v72;
      if (!--v27)
      {
        v61 = 1;
        a1 = v67;
        goto LABEL_19;
      }
    }
    (*(void (**)(char *, uint64_t))(v77 + 8))(v80, v11);
LABEL_18:
    a1 = v67;
    sub_10001E1A8((uint64_t)v24, v67);
    v61 = 0;
LABEL_19:
    v22 = v65;
    v21 = v66;
    v60 = v64;
  }
  else
  {
    v60 = *(_QWORD *)(v1 + v25);
    swift_bridgeObjectRetain(v26);
    v61 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56))(a1, v61, 1, v21);
  return swift_bridgeObjectRelease(v60);
}

uint64_t sub_100073290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  char *v30;
  id v31;
  char *v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  uint64_t (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char v40;
  char *v41;
  char *v42;
  id v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t result;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  id v73;

  v1 = sub_100006DA4(&qword_1000AD8B8);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v61 = (char *)&v56 - v5;
  v71 = type metadata accessor for Calendar(0);
  v67 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v70 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v59 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v65 = (char *)&v56 - v12;
  v13 = __chkstk_darwin(v11);
  v60 = (char *)&v56 - v14;
  v15 = __chkstk_darwin(v13);
  v66 = (char *)&v56 - v16;
  __chkstk_darwin(v15);
  v18 = (char *)&v56 - v17;
  v19 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TTRTodayComplicationWidgetViewModel(0) + 24));
  v24 = *(_QWORD *)(v23 + 16);
  if (v24)
  {
    v25 = v23 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v72 = *(_QWORD *)(v20 + 72);
    v57 = v23;
    swift_bridgeObjectRetain(v23);
    v68 = 0;
    v69 = v8;
    v63 = v18;
    v64 = v7;
    v62 = v22;
    v58 = v4;
    while (1)
    {
      v26 = sub_100073784(v25, (uint64_t)v22);
      static Date.now.getter(v26);
      v27 = (void *)*((_QWORD *)v22 + 1);
      if (v27)
      {
        v28 = v27;
        v29 = objc_msgSend(v28, "isAllDay");
        v73 = v28;
        if ((_DWORD)v29)
        {
          v30 = v70;
          static Calendar.current.getter(v29);
          v31 = objc_msgSend(v28, "date");
          v32 = v60;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          v33 = v66;
          Calendar.startOfDay(for:)(v32);
          v34 = *(void (**)(char *, uint64_t))(v8 + 8);
          v34(v32, v64);
          v35 = *(uint64_t (**)(char *, uint64_t))(v67 + 8);
          v36 = v71;
          v37 = v35(v30, v71);
          static Calendar.current.getter(v37);
          v38 = v63;
          Calendar.startOfDay(for:)(v63);
          v39 = v30;
          v4 = v58;
          v35(v39, v36);
          v40 = static Date.< infix(_:_:)(v33, v32);

          v41 = v32;
          v7 = v64;
          v34(v41, v64);
          v42 = v33;
          v18 = v38;
        }
        else
        {
          v43 = objc_msgSend(v28, "date");
          v44 = v66;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          v45 = v70;
          static Calendar.current.getter(v46);
          v47 = v61;
          Date.rem_dateFlooredToNearestMinute(inCalendar:)(v45);
          v48 = (uint64_t)v47;
          v49 = *(void (**)(char *, uint64_t))(v67 + 8);
          v49(v45, v71);
          v34 = *(void (**)(char *, uint64_t))(v8 + 8);
          v34(v44, v7);
          v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
          if (v50(v48, 1, v7) == 1)
          {
            static Date.distantPast.getter();
            v51 = sub_100073804(v48);
          }
          else
          {
            v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 32))(v65, v48, v7);
          }
          v18 = v63;
          v52 = v70;
          static Calendar.current.getter(v51);
          Date.rem_dateFlooredToNearestMinute(inCalendar:)(v52);
          v49(v52, v71);
          if (v50((uint64_t)v4, 1, v7) == 1)
          {
            v53 = v59;
            static Date.distantPast.getter();
            sub_100073804((uint64_t)v4);
          }
          else
          {
            v53 = v59;
            (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v59, v4, v7);
          }
          v54 = v65;
          v40 = static Date.< infix(_:_:)(v65, v53);

          v34(v53, v7);
          v42 = v54;
        }
        v34(v42, v7);
        v34(v18, v7);
        v22 = v62;
        result = sub_1000737C8((uint64_t)v62);
        if ((v40 & 1) != 0)
        {
          v8 = v69;
          if (__OFADD__(v68, 1))
          {
            __break(1u);
            return result;
          }
          ++v68;
        }
        else
        {
          v8 = v69;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v18, v7);
        sub_1000737C8((uint64_t)v22);
      }
      v25 += v72;
      if (!--v24)
      {
        swift_bridgeObjectRelease(v57);
        return v68;
      }
    }
  }
  return 0;
}

uint64_t sub_100073784(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000737C8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100073804(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006DA4(&qword_1000AD8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100073848()
{
  unint64_t result;

  result = qword_1000B0370;
  if (!qword_1000B0370)
  {
    result = swift_getWitnessTable(&unk_10008C450, &type metadata for IncludeDueTodayEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_1000B0370);
  }
  return result;
}

uint64_t sub_10007388C()
{
  return sub_1000095B4(&qword_1000B0378, &qword_1000B0380, (uint64_t)&protocol conformance descriptor for _IntentUpdatableEntityProperty<A, B, C>);
}

uint64_t sub_1000738B8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v0 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10000CF88(v16, qword_1000B9EE8);
  sub_10000CF70(v16, (uint64_t)qword_1000B9EE8);
  v17 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x8000000100090A00);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v19[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "Name of Include Due Today settings for App Intents", 50, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

uint64_t sub_100073ACC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v34[2];
  char *v35;

  v34[1] = a1;
  v1 = sub_100006DA4(&qword_1000AD0B0);
  __chkstk_darwin(v1);
  v35 = (char *)v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v3);
  v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Locale(0);
  __chkstk_darwin(v10);
  v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v13);
  v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LocalizedStringResource(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v34[0] = (char *)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v21 = (char *)v34 - v20;
  v22 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x8000000100090A00);
  static Locale.current.getter(v22);
  v23 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v24(v9, enum case for LocalizedStringResource.BundleDescription.main(_:), v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, 0, 0, v12, v9, "Title for Include Due Today settings display representation for App Intents", 75, 2);
  v25 = String.LocalizationValue.init(stringLiteral:)(0x1000000000000012, 0x800000010008E9D0);
  static Locale.current.getter(v25);
  v24(v9, v23, v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, 0, 0, v12, v9, "Subtitle for reminders' control settings navigation for App Intents", 67, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v5, 0, 1, v16);
  v26 = v35;
  DisplayRepresentation.Image.init(appBundleIdentifier:)(0xD000000000000013, 0x800000010008EA40);
  v27 = type metadata accessor for DisplayRepresentation.Image(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 0, 1, v27);
  v28 = sub_100006DA4(&qword_1000AD0B8);
  v29 = swift_allocObject(v28, ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72), *(unsigned __int8 *)(v17 + 80) | 7);
  *(_OWORD *)(v29 + 16) = xmmword_1000882D0;
  v30 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x8000000100090A70);
  static Locale.current.getter(v30);
  v24(v9, v23, v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, 0, 0, v12, v9, "Synonyms keyword for Include Due Today settings display representation for App Intents", 86, 2);
  v31 = String.LocalizationValue.init(stringLiteral:)(0x10000000000000C4, 0x8000000100090AF0);
  static Locale.current.getter(v31);
  v24(v9, v23, v6);
  v32 = v34[0];
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, 0, 0, v12, v9, "Description Text for Include Due Today settings display representation for App Intents", 86, 2);
  return DisplayRepresentation.init(title:subtitle:image:synonyms:descriptionText:)(v21, v5, v35, v29, v32);
}

uint64_t sub_100073EDC(uint64_t a1)
{
  return sub_10000B860(a1, qword_1000B9F00, 0xD000000000000018, 0x8000000100090D10);
}

uint64_t sub_100073F00()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  v0 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v0);
  v2 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v21[0] - 8);
  __chkstk_darwin(v21[0]);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100006DA4(&qword_1000AD118);
  sub_10000CF88(v16, qword_1000B9F18);
  v17 = sub_10000CF70(v16, (uint64_t)qword_1000B9F18);
  v18 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000039, 0x8000000100090C90);
  static Locale.current.getter(v18);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v21[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "IncludeDueTodayEntity Reminders App Intent title description", 60, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  IntentDescription.init(_:categoryName:searchKeywords:)(v15, v2, _swiftEmptyArrayStorage);
  v19 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v17, 0, 1, v19);
}

uint64_t sub_100074144()
{
  uint64_t result;

  result = swift_getKeyPath(&unk_10008CB98);
  qword_1000B9F30 = result;
  return result;
}

uint64_t sub_100074168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  v4 = sub_100006DA4(&qword_1000AD0E8);
  v3[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100006DA4(&qword_1000AD0F0);
  v3[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100006DA4(&qword_1000B0508);
  v3[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IntentDialog(0);
  v3[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[13] = v8;
  v3[14] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006DA4(&qword_1000B0510);
  v3[15] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[16] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[17] = swift_task_alloc(v11);
  v3[18] = swift_task_alloc(v11);
  return swift_task_switch(sub_100074274, 0, 0);
}

uint64_t sub_100074274()
{
  _QWORD *v0;
  _QWORD *v1;
  unint64_t v2;

  IntentParameter.wrappedValue.getter(v0 + 2);
  v1 = (_QWORD *)swift_task_alloc(async function pointer to IntentDialog._CapturedContent.init<>(entity:_:)[1]);
  v0[19] = v1;
  v2 = sub_100074DB0();
  *v1 = v0;
  v1[1] = sub_1000742F4;
  return IntentDialog._CapturedContent.init<>(entity:_:)(v0[18], v0 + 2, sub_100074684, 0, &type metadata for IncludeDueTodayEntity, v2);
}

uint64_t sub_1000742F4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 152));
  return swift_task_switch(sub_100074348, 0, 0);
}

uint64_t sub_100074348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 24));
  v1 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 160) = v1;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 192));
  *(_BYTE *)(v0 + 193) = *(_BYTE *)(v0 + 192);
  if (qword_1000AC998 != -1)
    swift_once(&qword_1000AC998, sub_100074144);
  v2 = qword_1000B9F30;
  *(_QWORD *)(v0 + 168) = qword_1000B9F30;
  v3 = async function pointer to AppEntity._setValue<A, B, C>(_:for:)[1];
  swift_retain(v2);
  v4 = (_QWORD *)swift_task_alloc(v3);
  *(_QWORD *)(v0 + 176) = v4;
  v5 = sub_1000095B4(&qword_1000B04F0, &qword_1000B04F8, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v4 = v0;
  v4[1] = sub_100074444;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 193, v2, &type metadata for Bool, v5);
}

uint64_t sub_100074444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v2);
  swift_release(v3);
  swift_release(v4);
  if (v0)
    v5 = sub_10000A56C;
  else
    v5 = sub_1000744C4;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1000744C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  v13 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v0 + 104);
  v15 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 80);
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 40));
  v8 = type metadata accessor for _GeneratedContentOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = type metadata accessor for _GeneratedContentFallback(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
  v10 = sub_100073848();
  v11 = sub_100074F14();
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)(sub_100074684, 0, v7, v6, &type metadata for IncludeDueTodayEntity.UpdateIntent_value);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v13);
  IntentDialog.init<A, B>(from:capturedContent:)(v5, v1, &type metadata for IncludeDueTodayEntity.UpdateIntent_value, &type metadata for IncludeDueTodayEntity, v10, v11);
  static IntentResult.result<A>(value:dialog:)(v0 + 40, v4, &type metadata for IncludeDueTodayEntity, v11);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v4, v15);
  swift_release(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v13);
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v7);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100074688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_100006DA4(&qword_1000B0518);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000AC998 != -1)
    swift_once(&qword_1000AC998, sub_100074144);
  v4 = qword_1000B9F30;
  swift_retain(qword_1000B9F30);
  static _DialogBuilderEntity.buildExpression<A, B>(_:)(v5);
  swift_release(v4);
  v6 = sub_100074F14();
  v7 = sub_1000095B4(&qword_1000B0520, &qword_1000B0518, (uint64_t)&protocol conformance descriptor for _NLGRepresentationEntity<A>);
  static _DialogBuilderEntity.buildBlock<A>(_:)(v3, &type metadata for IncludeDueTodayEntity, v0, v6, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

double sub_100074790()
{
  double result;

  if (qword_1000AC998 != -1)
    swift_once(&qword_1000AC998, sub_100074144);
  *(_QWORD *)&result = swift_retain(qword_1000B9F30).n128_u64[0];
  return result;
}

unint64_t sub_1000747D4()
{
  unint64_t result;

  result = qword_1000B0388;
  if (!qword_1000B0388)
  {
    result = swift_getWitnessTable(&unk_10008C4E0, &type metadata for IncludeDueTodayEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_1000B0388);
  }
  return result;
}

unint64_t sub_10007481C()
{
  unint64_t result;

  result = qword_1000B0390;
  if (!qword_1000B0390)
  {
    result = swift_getWitnessTable(&unk_10008C508, &type metadata for IncludeDueTodayEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_1000B0390);
  }
  return result;
}

uint64_t sub_100074860(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_1000939D8, 1) + 8);
}

uint64_t sub_100074884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10000BCB8(a1, a2, a3, (uint64_t (*)(void))sub_100073848);
}

uint64_t sub_100074890@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B568(&qword_1000AC988, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000B9F00, (uint64_t)sub_100073EDC, a1);
}

uint64_t sub_1000748B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1000AC990 != -1)
    swift_once(&qword_1000AC990, sub_100073F00);
  v2 = sub_100006DA4(&qword_1000AD118);
  v3 = sub_10000CF70(v2, (uint64_t)qword_1000B9F18);
  return sub_10000CFE8(v3, a1);
}

uint64_t sub_100074914(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_1000B0504);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000D198;
  return sub_100074168(a1, v5, v4);
}

uint64_t sub_100074978@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_100075E80();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10007499C()
{
  return 0xD000000000000026;
}

unint64_t sub_1000749BC()
{
  unint64_t result;

  result = qword_1000B03A0;
  if (!qword_1000B03A0)
  {
    result = swift_getWitnessTable(&unk_10008C564, &type metadata for IncludeDueTodayEntity.IncludeDueTodayQuery);
    atomic_store(result, (unint64_t *)&qword_1000B03A0);
  }
  return result;
}

unint64_t sub_100074A04()
{
  unint64_t result;

  result = qword_1000B03A8;
  if (!qword_1000B03A8)
  {
    result = swift_getWitnessTable(&unk_10008C698, &type metadata for IncludeDueTodayEntity);
    atomic_store(result, (unint64_t *)&qword_1000B03A8);
  }
  return result;
}

uint64_t sub_100074A48(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_100074A60, 0, 0);
}

uint64_t sub_100074A60()
{
  uint64_t v0;
  unsigned __int8 *v1;
  id v2;
  unsigned __int8 v3;

  v1 = *(unsigned __int8 **)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(REMUserDefaults), "daemonUserDefaults");
  v3 = objc_msgSend(v2, "shouldIncludeRemindersDueTodayInBadgeCount");

  *v1 = v3;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100074AD4(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 16) = *a2;
  return swift_task_switch(sub_100074AF0, 0, 0);
}

uint64_t sub_100074AF0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(REMUserDefaults), "daemonUserDefaults");
  objc_msgSend(v2, "setShouldIncludeRemindersDueTodayInBadgeCount:", v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100074B58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = type metadata accessor for LocalizedStringResource(0);
  *(_QWORD *)(v1 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100074BB0, 0, 0);
}

uint64_t sub_100074BB0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_100006DA4(&qword_1000B0380);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000011, 0x8000000100090A00);
  v3 = sub_1000095B4(&qword_1000B04F0, &qword_1000B04F8, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v2 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v1, &unk_1000B04E0, 0, &unk_1000B04E8, 0, &type metadata for IncludeDueTodayEntity.UpdateIntent_value, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_100074C70()
{
  unint64_t result;

  result = qword_1000B03B8;
  if (!qword_1000B03B8)
  {
    result = swift_getWitnessTable(&unk_10008C59C, &type metadata for IncludeDueTodayEntity.IncludeDueTodayQuery);
    atomic_store(result, (unint64_t *)&qword_1000B03B8);
  }
  return result;
}

uint64_t sub_100074CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to _UniqueEntityQuery.allEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_100075030();
  *v4 = v2;
  v4[1] = sub_10000AE40;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_100074D20()
{
  unint64_t result;

  result = qword_1000B03C8;
  if (!qword_1000B03C8)
  {
    result = swift_getWitnessTable(&unk_10008C5F4, &type metadata for IncludeDueTodayEntity.IncludeDueTodayQuery);
    atomic_store(result, (unint64_t *)&qword_1000B03C8);
  }
  return result;
}

unint64_t sub_100074D68()
{
  unint64_t result;

  result = qword_1000B03D0;
  if (!qword_1000B03D0)
  {
    result = swift_getWitnessTable(&unk_10008C654, &type metadata for IncludeDueTodayEntity.IncludeDueTodayQuery);
    atomic_store(result, (unint64_t *)&qword_1000B03D0);
  }
  return result;
}

unint64_t sub_100074DB0()
{
  unint64_t result;

  result = qword_1000B03D8[0];
  if (!qword_1000B03D8[0])
  {
    result = swift_getWitnessTable(&unk_10008C6F8, &type metadata for IncludeDueTodayEntity);
    atomic_store(result, qword_1000B03D8);
  }
  return result;
}

uint64_t sub_100074DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to _UniqueEntityQuery.entities(for:)[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_100075030();
  *v5 = v2;
  v5[1] = sub_10000AFE8;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100074E60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to _UniqueEntityQuery.suggestedEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_100075030();
  *v4 = v2;
  v4[1] = sub_10000D19C;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_100074ECC()
{
  unint64_t result;

  result = qword_1000B03F0;
  if (!qword_1000B03F0)
  {
    result = swift_getWitnessTable(&unk_10008C67C, &type metadata for IncludeDueTodayEntity.IncludeDueTodayQuery);
    atomic_store(result, (unint64_t *)&qword_1000B03F0);
  }
  return result;
}

unint64_t sub_100074F14()
{
  unint64_t result;

  result = qword_1000B03F8;
  if (!qword_1000B03F8)
  {
    result = swift_getWitnessTable(&unk_10008C840, &type metadata for IncludeDueTodayEntity);
    atomic_store(result, (unint64_t *)&qword_1000B03F8);
  }
  return result;
}

unint64_t sub_100074F5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B0400;
  if (!qword_1000B0400)
  {
    v1 = sub_100007258(qword_1000B0408);
    sub_100074F14();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1000B0400);
  }
  return result;
}

uint64_t sub_100074FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_100074C70();
  *v5 = v2;
  v5[1] = sub_10000B208;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_100075030()
{
  unint64_t result;

  result = qword_1000B0420;
  if (!qword_1000B0420)
  {
    result = swift_getWitnessTable(&unk_10008C524, &type metadata for IncludeDueTodayEntity.IncludeDueTodayQuery);
    atomic_store(result, (unint64_t *)&qword_1000B0420);
  }
  return result;
}

uint64_t sub_100075074()
{
  uint64_t v0;

  v0 = qword_1000B0350;
  swift_bridgeObjectRetain(off_1000B0358);
  return v0;
}

unint64_t sub_1000750AC()
{
  unint64_t result;

  result = qword_1000B0428;
  if (!qword_1000B0428)
  {
    result = swift_getWitnessTable(&unk_10008C750, &type metadata for IncludeDueTodayEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0428);
  }
  return result;
}

unint64_t sub_1000750F4()
{
  unint64_t result;

  result = qword_1000B0430;
  if (!qword_1000B0430)
  {
    result = swift_getWitnessTable(&unk_10008C788, &type metadata for IncludeDueTodayEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0430);
  }
  return result;
}

unint64_t sub_10007513C()
{
  unint64_t result;

  result = qword_1000B0438;
  if (!qword_1000B0438)
  {
    result = swift_getWitnessTable(&unk_10008C7B8, &type metadata for IncludeDueTodayEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0438);
  }
  return result;
}

unint64_t sub_100075184()
{
  unint64_t result;

  result = qword_1000B0440;
  if (!qword_1000B0440)
  {
    result = swift_getWitnessTable(&unk_10008C7F0, &type metadata for IncludeDueTodayEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0440);
  }
  return result;
}

unint64_t sub_1000751CC()
{
  unint64_t result;

  result = qword_1000B0448;
  if (!qword_1000B0448)
  {
    result = swift_getWitnessTable(&unk_10008C818, &type metadata for IncludeDueTodayEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0448);
  }
  return result;
}

unint64_t sub_100075214()
{
  unint64_t result;

  result = qword_1000B0450;
  if (!qword_1000B0450)
  {
    result = swift_getWitnessTable(&unk_10008C898, &type metadata for IncludeDueTodayEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0450);
  }
  return result;
}

uint64_t sub_100075258@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_100074A04();
  result = _UniqueEntity.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_100075294@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B568(&qword_1000AC980, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000B9EE8, (uint64_t)sub_1000738B8, a1);
}

uint64_t sub_1000752B8()
{
  return sub_1000095B4(&qword_1000B0458, &qword_1000B0460, (uint64_t)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_1000752E4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100074DB0();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100075320()
{
  unint64_t result;

  result = qword_1000B0468;
  if (!qword_1000B0468)
  {
    result = swift_getWitnessTable(&unk_10008C8C8, &type metadata for IncludeDueTodayEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0468);
  }
  return result;
}

uint64_t sub_100075368(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100075214();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1000753A4()
{
  unint64_t result;

  result = qword_1000B0470;
  if (!qword_1000B0470)
  {
    result = swift_getWitnessTable(&unk_10008C928, &type metadata for IncludeDueTodayEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0470);
  }
  return result;
}

uint64_t sub_1000753E8(uint64_t a1)
{
  unint64_t v2;

  if (qword_1000AC868 != -1)
    swift_once(&qword_1000AC868, sub_10001D504);
  String.append(_:)((Swift::String)xmmword_1000B9E08);
  v2 = sub_100074DB0();
  return _EntityURLRepresentation.init(_:)(0xD000000000000041, 0x800000010008E910, a1, v2);
}

uint64_t sub_10007548C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_100076534();
  v4 = _URLRepresentableEntity.urlRepresentationParameter.getter(a1, v3);
  return sub_10000CFC8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8), v1, v4, v5);
}

unint64_t sub_1000754D8()
{
  unint64_t result;

  result = qword_1000B0480;
  if (!qword_1000B0480)
  {
    result = swift_getWitnessTable(&unk_10008CA20, &type metadata for OpenIncludeDueTodayDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000B0480);
  }
  return result;
}

uint64_t sub_10007551C(uint64_t a1)
{
  return sub_10000B860(a1, qword_1000B9F38, 0xD00000000000001ELL, 0x80000001000909E0);
}

uint64_t sub_100075540@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000043, 0x8000000100090950);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "OpenIncludeDueTodayDeepLink Reminders App Intent description", 60, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

unint64_t sub_10007575C()
{
  unint64_t result;

  result = qword_1000B0488;
  if (!qword_1000B0488)
  {
    result = swift_getWitnessTable(&unk_10008CA48, &type metadata for OpenIncludeDueTodayDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000B0488);
  }
  return result;
}

uint64_t sub_1000757A0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_1000764AC();
  v5 = sub_100076534();
  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_1000757F4()
{
  uint64_t v0;

  v0 = qword_1000B0360;
  swift_bridgeObjectRetain(off_1000B0368);
  return v0;
}

unint64_t sub_10007582C()
{
  unint64_t result;

  result = qword_1000B0490;
  if (!qword_1000B0490)
  {
    result = swift_getWitnessTable(&unk_10008CAD8, &type metadata for OpenIncludeDueTodayDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000B0490);
  }
  return result;
}

unint64_t sub_100075874()
{
  unint64_t result;

  result = qword_1000B0498;
  if (!qword_1000B0498)
  {
    result = swift_getWitnessTable(&unk_10008CB00, &type metadata for OpenIncludeDueTodayDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000B0498);
  }
  return result;
}

uint64_t sub_1000758B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10000BCB8(a1, a2, a3, (uint64_t (*)(void))sub_10007575C);
}

uint64_t sub_1000758C4@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B568(&qword_1000AC9A0, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000B9F38, (uint64_t)sub_10007551C, a1);
}

uint64_t sub_1000758EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to _URLRepresentableIntent<>.perform()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_1000764AC();
  v7 = sub_1000764F0();
  v8 = sub_100076534();
  *v5 = v2;
  v5[1] = sub_10000BDBC;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_100075978@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1000761A4();
  *a1 = result;
  return result;
}

uint64_t sub_10007599C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10007575C();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenIncludeDueTodayDeepLink()
{
  return &type metadata for OpenIncludeDueTodayDeepLink;
}

ValueMetadata *type metadata accessor for IncludeDueTodayEntity.IncludeDueTodayQuery()
{
  return &type metadata for IncludeDueTodayEntity.IncludeDueTodayQuery;
}

ValueMetadata *type metadata accessor for IncludeDueTodayEntity()
{
  return &type metadata for IncludeDueTodayEntity;
}

ValueMetadata *type metadata accessor for IncludeDueTodayEntity.UpdateIntent_value()
{
  return &type metadata for IncludeDueTodayEntity.UpdateIntent_value;
}

uint64_t sub_100075A04()
{
  return sub_1000095B4(&qword_1000B04A8, &qword_1000B04B0, (uint64_t)&protocol conformance descriptor for <> IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100075A30()
{
  return sub_1000095B4(&qword_1000B04B8, &qword_1000B04B0, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100075A5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t OpaqueTypeConformance2;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v47 = a1;
  v1 = sub_100006DA4(&qword_1000AD120);
  v40 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100006DA4(&qword_1000AD128);
  v42 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100006DA4(&qword_1000AD130);
  v8 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  v44 = v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100006DA4(&qword_1000AD138);
  v12 = *(_QWORD *)(v11 - 8);
  v45 = v11;
  v46 = v12;
  __chkstk_darwin(v11);
  v41 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_10008CB98);
  v15 = sub_100006DA4(&qword_1000AD140);
  v16 = sub_100006DA4(&qword_1000AD148);
  v17 = sub_100074A04();
  v18 = sub_1000095B4(&qword_1000AD150, &qword_1000AD140, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v19 = sub_10000D050();
  ControlToggle.init<A, B, C, D, E, F, G>(kind:intentUpdatableProperty:title:subtitle:value:)(0xD000000000000032, 0x8000000100090D30, KeyPath, sub_100075E20, 0, sub_10000C498, 0, sub_10000C630, 0, v15, &type metadata for Text, v16, v17, v18, &protocol witness table for Text, v19);
  v20 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000015, 0x8000000100090D70);
  v22 = v21;
  LOBYTE(v16) = v23;
  v25 = v24;
  v26 = sub_1000095B4(&qword_1000AD160, &qword_1000AD120, (uint64_t)&protocol conformance descriptor for ControlToggle<A>);
  WidgetConfiguration.configurationDisplayName(_:)(v20, v22, v16 & 1, v25, v1, v26);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v22);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v3, v1);
  v27 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000051, 0x8000000100090D90);
  v29 = v28;
  LOBYTE(v3) = v30;
  v32 = v31;
  v48 = v1;
  v49 = v26;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v48, &opaque type descriptor for <<opaque return type of WidgetConfiguration.configurationDisplayName(_:)>>, 1);
  WidgetConfiguration.description(_:)(v27, v29, v3 & 1, v32, v4, OpaqueTypeConformance2);
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(v29);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v4);
  v48 = v4;
  v49 = OpaqueTypeConformance2;
  v34 = swift_getOpaqueTypeConformance2(&v48, &opaque type descriptor for <<opaque return type of WidgetConfiguration.description(_:)>>, 1);
  v35 = v41;
  v36 = v43;
  WidgetConfiguration.disablesControlStateCaching()(v43, v34);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v36);
  v48 = v36;
  v49 = v34;
  v37 = swift_getOpaqueTypeConformance2(&v48, &opaque type descriptor for <<opaque return type of WidgetConfiguration.disablesControlStateCaching()>>, 1);
  v38 = v45;
  WidgetConfiguration.hiddenControl()(v45, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v35, v38);
}

uint64_t sub_100075E20()
{
  uint64_t v0;

  v0 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000011, 0x8000000100090DF0);
  return Label<>.init(_:systemImage:)(v0);
}

uint64_t sub_100075E80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  char *v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v25;
  void (*v26)(char *);
  unsigned int v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  char *v30;
  char v31;
  uint64_t v32;

  v0 = sub_100006DA4(&qword_1000AD088);
  __chkstk_darwin(v0);
  v30 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for InputConnectionBehavior(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v29 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100006DA4(&qword_1000AD070);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v25 - v9;
  v11 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LocalizedStringResource(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100006DA4(&qword_1000B04C0);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001BLL, 0x80000001000908F0);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  v32 = 0;
  v18 = type metadata accessor for IntentDialog(0);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v10, 1, 1, v18);
  v19(v8, 1, 1, v18);
  v27 = enum case for InputConnectionBehavior.default(_:);
  v26 = *(void (**)(char *))(v3 + 104);
  v20 = v29;
  v26(v29);
  v21 = sub_100074DB0();
  v25 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v17, v13, &v32, v10, v8, v20, v21);
  sub_100006DA4(&qword_1000AD090);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000030, 0x8000000100090910);
  v28(v13, 1, 1, v14);
  v31 = 2;
  v22 = type metadata accessor for Bool.IntentDisplayName(0);
  v23 = v30;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v30, 1, 1, v22);
  v19(v10, 1, 1, v18);
  ((void (*)(char *, _QWORD, uint64_t))v26)(v20, v27, v2);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v17, v13, &v31, v23, v10, v20);
  return v25;
}

uint64_t sub_1000761A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  char *v27;
  char *v28;
  unint64_t v29;
  _QWORD v31[2];
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v34 = *(_QWORD *)(v0 - 8);
  v35 = v0;
  __chkstk_darwin(v0);
  v33 = (char *)v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100006DA4(&qword_1000AD070);
  v3 = __chkstk_darwin(v2);
  v32 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (char *)v31 - v5;
  v7 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v7);
  v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Locale(0);
  __chkstk_darwin(v14);
  v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v17);
  v19 = (char *)v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for LocalizedStringResource(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[1] = sub_100006DA4(&qword_1000B04C0);
  v24 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000019, 0x80000001000908A0);
  static Locale.current.getter(v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0, 0, v16, v13, "Open Include Due Today deepLink parameter", 41, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v9, 1, 1, v20);
  v36 = 0;
  v25 = type metadata accessor for IntentDialog(0);
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v26(v6, 1, 1, v25);
  v27 = v32;
  v26(v32, 1, 1, v25);
  v28 = v33;
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v33, enum case for InputConnectionBehavior.default(_:), v35);
  v29 = sub_100074DB0();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v23, v9, &v36, v6, v27, v28, v29);
}

unint64_t sub_1000764AC()
{
  unint64_t result;

  result = qword_1000B04C8;
  if (!qword_1000B04C8)
  {
    result = swift_getWitnessTable(&unk_10008C950, &type metadata for OpenIncludeDueTodayDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000B04C8);
  }
  return result;
}

unint64_t sub_1000764F0()
{
  unint64_t result;

  result = qword_1000B04D0;
  if (!qword_1000B04D0)
  {
    result = swift_getWitnessTable(&unk_10008C9A0, &type metadata for OpenIncludeDueTodayDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000B04D0);
  }
  return result;
}

unint64_t sub_100076534()
{
  unint64_t result;

  result = qword_1000B04D8;
  if (!qword_1000B04D8)
  {
    result = swift_getWitnessTable(&unk_10008C8F0, &type metadata for IncludeDueTodayEntity);
    atomic_store(result, (unint64_t *)&qword_1000B04D8);
  }
  return result;
}

uint64_t sub_100076578@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

ValueMetadata *type metadata accessor for IncludeDueTodayToggleControl()
{
  return &type metadata for IncludeDueTodayToggleControl;
}

uint64_t sub_100076594(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100093A38, 1);
}

unint64_t sub_1000765A8()
{
  unint64_t result;

  result = qword_1000B0548;
  if (!qword_1000B0548)
  {
    result = swift_getWitnessTable(&unk_10008CCD0, &type metadata for ShowAsOverdueEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_1000B0548);
  }
  return result;
}

uint64_t sub_1000765EC()
{
  return sub_1000095B4(&qword_1000B0550, &qword_1000B0558, (uint64_t)&protocol conformance descriptor for _IntentUpdatableEntityProperty<A, B, C>);
}

uint64_t sub_100076618()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v0 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10000CF88(v16, qword_1000B9F50);
  sub_10000CF70(v16, (uint64_t)qword_1000B9F50);
  v17 = String.LocalizationValue.init(stringLiteral:)(0x20734120776F6853, 0xEF6575647265764FLL);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v19[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "Name of Show As Overdue settings type for App Intents", 53, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

uint64_t sub_100076834@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v34[2];
  char *v35;

  v34[1] = a1;
  v1 = sub_100006DA4(&qword_1000AD0B0);
  __chkstk_darwin(v1);
  v35 = (char *)v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v3);
  v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Locale(0);
  __chkstk_darwin(v10);
  v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v13);
  v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LocalizedStringResource(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v34[0] = (char *)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v21 = (char *)v34 - v20;
  v22 = String.LocalizationValue.init(stringLiteral:)(0x20734120776F6853, 0xEF6575647265764FLL);
  static Locale.current.getter(v22);
  v23 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v24(v9, enum case for LocalizedStringResource.BundleDescription.main(_:), v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, 0, 0, v12, v9, "Title for Show As Overdue settings display representation for App Intents", 73, 2);
  v25 = String.LocalizationValue.init(stringLiteral:)(0x1000000000000012, 0x800000010008E9D0);
  static Locale.current.getter(v25);
  v24(v9, v23, v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, 0, 0, v12, v9, "Subtitle for reminders' control settings navigation for App Intents", 67, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v5, 0, 1, v16);
  v26 = v35;
  DisplayRepresentation.Image.init(appBundleIdentifier:)(0xD000000000000013, 0x800000010008EA40);
  v27 = type metadata accessor for DisplayRepresentation.Image(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 0, 1, v27);
  v28 = sub_100006DA4(&qword_1000AD0B8);
  v29 = swift_allocObject(v28, ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72), *(unsigned __int8 *)(v17 + 80) | 7);
  *(_OWORD *)(v29 + 16) = xmmword_1000882D0;
  v30 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x8000000100090FB0);
  static Locale.current.getter(v30);
  v24(v9, v23, v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, 0, 0, v12, v9, "Synonyms keyword for Show As Overdue settings display representation for App Intents", 84, 2);
  v31 = String.LocalizationValue.init(stringLiteral:)(0x10000000000000C4, 0x8000000100091030);
  static Locale.current.getter(v31);
  v24(v9, v23, v6);
  v32 = v34[0];
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, 0, 0, v12, v9, "Description Text for Show As Overdue settings display representation for App Intents", 84, 2);
  return DisplayRepresentation.init(title:subtitle:image:synonyms:descriptionText:)(v21, v5, v35, v29, v32);
}

uint64_t sub_100076C48(uint64_t a1)
{
  return sub_10000B860(a1, qword_1000B9F68, 0xD000000000000016, 0x8000000100091250);
}

uint64_t sub_100076C6C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  v0 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v0);
  v2 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v21[0] - 8);
  __chkstk_darwin(v21[0]);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100006DA4(&qword_1000AD118);
  sub_10000CF88(v16, qword_1000B9F80);
  v17 = sub_10000CF70(v16, (uint64_t)qword_1000B9F80);
  v18 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000003CLL, 0x80000001000911D0);
  static Locale.current.getter(v18);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v21[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "ShowAsOverdueEntity Reminders App Intent title description", 58, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  IntentDescription.init(_:categoryName:searchKeywords:)(v15, v2, _swiftEmptyArrayStorage);
  v19 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v17, 0, 1, v19);
}

uint64_t sub_100076EB0()
{
  uint64_t result;

  result = swift_getKeyPath(&unk_10008D418);
  qword_1000B9F98 = result;
  return result;
}

uint64_t sub_100076ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  v4 = sub_100006DA4(&qword_1000AD0E8);
  v3[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100006DA4(&qword_1000AD0F0);
  v3[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100006DA4(&qword_1000B06E0);
  v3[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IntentDialog(0);
  v3[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[13] = v8;
  v3[14] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006DA4(&qword_1000B06E8);
  v3[15] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[16] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[17] = swift_task_alloc(v11);
  v3[18] = swift_task_alloc(v11);
  return swift_task_switch(sub_100076FE0, 0, 0);
}

uint64_t sub_100076FE0()
{
  _QWORD *v0;
  _QWORD *v1;
  unint64_t v2;

  IntentParameter.wrappedValue.getter(v0 + 2);
  v1 = (_QWORD *)swift_task_alloc(async function pointer to IntentDialog._CapturedContent.init<>(entity:_:)[1]);
  v0[19] = v1;
  v2 = sub_100077B28();
  *v1 = v0;
  v1[1] = sub_100077060;
  return IntentDialog._CapturedContent.init<>(entity:_:)(v0[18], v0 + 2, sub_1000773F0, 0, &type metadata for ShowAsOverdueEntity, v2);
}

uint64_t sub_100077060()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 152));
  return swift_task_switch(sub_1000770B4, 0, 0);
}

uint64_t sub_1000770B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 24));
  v1 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 160) = v1;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 192));
  *(_BYTE *)(v0 + 193) = *(_BYTE *)(v0 + 192);
  if (qword_1000AC9C0 != -1)
    swift_once(&qword_1000AC9C0, sub_100076EB0);
  v2 = qword_1000B9F98;
  *(_QWORD *)(v0 + 168) = qword_1000B9F98;
  v3 = async function pointer to AppEntity._setValue<A, B, C>(_:for:)[1];
  swift_retain(v2);
  v4 = (_QWORD *)swift_task_alloc(v3);
  *(_QWORD *)(v0 + 176) = v4;
  v5 = sub_1000095B4(&qword_1000B06C8, &qword_1000B06D0, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v4 = v0;
  v4[1] = sub_1000771B0;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 193, v2, &type metadata for Bool, v5);
}

uint64_t sub_1000771B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v2);
  swift_release(v3);
  swift_release(v4);
  if (v0)
    v5 = sub_10000A56C;
  else
    v5 = sub_100077230;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_100077230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  v13 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v0 + 104);
  v15 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 80);
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 40));
  v8 = type metadata accessor for _GeneratedContentOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = type metadata accessor for _GeneratedContentFallback(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
  v10 = sub_1000765A8();
  v11 = sub_100077C8C();
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)(sub_1000773F0, 0, v7, v6, &type metadata for ShowAsOverdueEntity.UpdateIntent_value);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v13);
  IntentDialog.init<A, B>(from:capturedContent:)(v5, v1, &type metadata for ShowAsOverdueEntity.UpdateIntent_value, &type metadata for ShowAsOverdueEntity, v10, v11);
  static IntentResult.result<A>(value:dialog:)(v0 + 40, v4, &type metadata for ShowAsOverdueEntity, v11);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v4, v15);
  swift_release(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v13);
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v7);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000773F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_100006DA4(&qword_1000B06F0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000AC9C0 != -1)
    swift_once(&qword_1000AC9C0, sub_100076EB0);
  v4 = qword_1000B9F98;
  swift_retain(qword_1000B9F98);
  static _DialogBuilderEntity.buildExpression<A, B>(_:)(v5);
  swift_release(v4);
  v6 = sub_100077C8C();
  v7 = sub_1000095B4(&qword_1000B06F8, &qword_1000B06F0, (uint64_t)&protocol conformance descriptor for _NLGRepresentationEntity<A>);
  static _DialogBuilderEntity.buildBlock<A>(_:)(v3, &type metadata for ShowAsOverdueEntity, v0, v6, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

double sub_1000774FC()
{
  double result;

  if (qword_1000AC9C0 != -1)
    swift_once(&qword_1000AC9C0, sub_100076EB0);
  *(_QWORD *)&result = swift_retain(qword_1000B9F98).n128_u64[0];
  return result;
}

unint64_t sub_100077540()
{
  unint64_t result;

  result = qword_1000B0560;
  if (!qword_1000B0560)
  {
    result = swift_getWitnessTable(&unk_10008CD60, &type metadata for ShowAsOverdueEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_1000B0560);
  }
  return result;
}

unint64_t sub_100077588()
{
  unint64_t result;

  result = qword_1000B0568;
  if (!qword_1000B0568)
  {
    result = swift_getWitnessTable(&unk_10008CD88, &type metadata for ShowAsOverdueEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_1000B0568);
  }
  return result;
}

uint64_t sub_1000775CC(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_100093AD0, 1) + 8);
}

uint64_t sub_1000775F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10000BCB8(a1, a2, a3, (uint64_t (*)(void))sub_1000765A8);
}

uint64_t sub_1000775FC@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B568(&qword_1000AC9B0, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000B9F68, (uint64_t)sub_100076C48, a1);
}

uint64_t sub_100077620@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1000AC9B8 != -1)
    swift_once(&qword_1000AC9B8, sub_100076C6C);
  v2 = sub_100006DA4(&qword_1000AD118);
  v3 = sub_10000CF70(v2, (uint64_t)qword_1000B9F80);
  return sub_10000CFE8(v3, a1);
}

uint64_t sub_100077680(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_1000B06DC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000D198;
  return sub_100076ED4(a1, v5, v4);
}

uint64_t sub_1000776E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_100078C00();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100077708()
{
  return 0xD000000000000024;
}

unint64_t sub_100077728()
{
  unint64_t result;

  result = qword_1000B0578;
  if (!qword_1000B0578)
  {
    result = swift_getWitnessTable(&unk_10008CDE4, &type metadata for ShowAsOverdueEntity.ShowAsOverdueQuery);
    atomic_store(result, (unint64_t *)&qword_1000B0578);
  }
  return result;
}

unint64_t sub_100077770()
{
  unint64_t result;

  result = qword_1000B0580;
  if (!qword_1000B0580)
  {
    result = swift_getWitnessTable(&unk_10008CF18, &type metadata for ShowAsOverdueEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0580);
  }
  return result;
}

uint64_t sub_1000777B4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_1000777CC, 0, 0);
}

uint64_t sub_1000777CC()
{
  uint64_t v0;
  unsigned __int8 *v1;
  id v2;
  unsigned __int8 v3;

  v1 = *(unsigned __int8 **)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(REMUserDefaults), "daemonUserDefaults");
  v3 = objc_msgSend(v2, "showRemindersAsOverdueWithShouldBypassCache:", 1);

  *v1 = v3;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100077844(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 16) = *a2;
  return swift_task_switch(sub_100077860, 0, 0);
}

uint64_t sub_100077860()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(REMUserDefaults), "daemonUserDefaults");
  objc_msgSend(v2, "setShowRemindersAsOverdue:", v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000778C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = type metadata accessor for LocalizedStringResource(0);
  *(_QWORD *)(v1 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100077920, 0, 0);
}

uint64_t sub_100077920()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_100006DA4(&qword_1000B0558);
  LocalizedStringResource.init(stringLiteral:)(0x20734120776F6853, 0xEF6575647265764FLL);
  v3 = sub_1000095B4(&qword_1000B06C8, &qword_1000B06D0, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v2 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v1, &unk_1000B06B8, 0, &unk_1000B06C0, 0, &type metadata for ShowAsOverdueEntity.UpdateIntent_value, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1000779E8()
{
  unint64_t result;

  result = qword_1000B0590;
  if (!qword_1000B0590)
  {
    result = swift_getWitnessTable(&unk_10008CE1C, &type metadata for ShowAsOverdueEntity.ShowAsOverdueQuery);
    atomic_store(result, (unint64_t *)&qword_1000B0590);
  }
  return result;
}

uint64_t sub_100077A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to _UniqueEntityQuery.allEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_100077DA8();
  *v4 = v2;
  v4[1] = sub_10000AE40;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_100077A98()
{
  unint64_t result;

  result = qword_1000B05A0;
  if (!qword_1000B05A0)
  {
    result = swift_getWitnessTable(&unk_10008CE74, &type metadata for ShowAsOverdueEntity.ShowAsOverdueQuery);
    atomic_store(result, (unint64_t *)&qword_1000B05A0);
  }
  return result;
}

unint64_t sub_100077AE0()
{
  unint64_t result;

  result = qword_1000B05A8;
  if (!qword_1000B05A8)
  {
    result = swift_getWitnessTable(&unk_10008CED4, &type metadata for ShowAsOverdueEntity.ShowAsOverdueQuery);
    atomic_store(result, (unint64_t *)&qword_1000B05A8);
  }
  return result;
}

unint64_t sub_100077B28()
{
  unint64_t result;

  result = qword_1000B05B0[0];
  if (!qword_1000B05B0[0])
  {
    result = swift_getWitnessTable(&unk_10008CF78, &type metadata for ShowAsOverdueEntity);
    atomic_store(result, qword_1000B05B0);
  }
  return result;
}

uint64_t sub_100077B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to _UniqueEntityQuery.entities(for:)[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_100077DA8();
  *v5 = v2;
  v5[1] = sub_10000AFE8;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100077BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to _UniqueEntityQuery.suggestedEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_100077DA8();
  *v4 = v2;
  v4[1] = sub_10000D19C;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_100077C44()
{
  unint64_t result;

  result = qword_1000B05C8;
  if (!qword_1000B05C8)
  {
    result = swift_getWitnessTable(&unk_10008CEFC, &type metadata for ShowAsOverdueEntity.ShowAsOverdueQuery);
    atomic_store(result, (unint64_t *)&qword_1000B05C8);
  }
  return result;
}

unint64_t sub_100077C8C()
{
  unint64_t result;

  result = qword_1000B05D0;
  if (!qword_1000B05D0)
  {
    result = swift_getWitnessTable(&unk_10008D0C0, &type metadata for ShowAsOverdueEntity);
    atomic_store(result, (unint64_t *)&qword_1000B05D0);
  }
  return result;
}

unint64_t sub_100077CD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B05D8;
  if (!qword_1000B05D8)
  {
    v1 = sub_100007258(qword_1000B05E0);
    sub_100077C8C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1000B05D8);
  }
  return result;
}

uint64_t sub_100077D38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_1000779E8();
  *v5 = v2;
  v5[1] = sub_10000B208;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_100077DA8()
{
  unint64_t result;

  result = qword_1000B05F8;
  if (!qword_1000B05F8)
  {
    result = swift_getWitnessTable(&unk_10008CDA4, &type metadata for ShowAsOverdueEntity.ShowAsOverdueQuery);
    atomic_store(result, (unint64_t *)&qword_1000B05F8);
  }
  return result;
}

uint64_t sub_100077DEC()
{
  uint64_t v0;

  v0 = qword_1000B0528;
  swift_bridgeObjectRetain(off_1000B0530);
  return v0;
}

unint64_t sub_100077E24()
{
  unint64_t result;

  result = qword_1000B0600;
  if (!qword_1000B0600)
  {
    result = swift_getWitnessTable(&unk_10008CFD0, &type metadata for ShowAsOverdueEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0600);
  }
  return result;
}

unint64_t sub_100077E6C()
{
  unint64_t result;

  result = qword_1000B0608;
  if (!qword_1000B0608)
  {
    result = swift_getWitnessTable(&unk_10008D008, &type metadata for ShowAsOverdueEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0608);
  }
  return result;
}

unint64_t sub_100077EB4()
{
  unint64_t result;

  result = qword_1000B0610;
  if (!qword_1000B0610)
  {
    result = swift_getWitnessTable(&unk_10008D038, &type metadata for ShowAsOverdueEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0610);
  }
  return result;
}

unint64_t sub_100077EFC()
{
  unint64_t result;

  result = qword_1000B0618;
  if (!qword_1000B0618)
  {
    result = swift_getWitnessTable(&unk_10008D070, &type metadata for ShowAsOverdueEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0618);
  }
  return result;
}

unint64_t sub_100077F44()
{
  unint64_t result;

  result = qword_1000B0620;
  if (!qword_1000B0620)
  {
    result = swift_getWitnessTable(&unk_10008D098, &type metadata for ShowAsOverdueEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0620);
  }
  return result;
}

unint64_t sub_100077F8C()
{
  unint64_t result;

  result = qword_1000B0628;
  if (!qword_1000B0628)
  {
    result = swift_getWitnessTable(&unk_10008D118, &type metadata for ShowAsOverdueEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0628);
  }
  return result;
}

uint64_t sub_100077FD0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_100077770();
  result = _UniqueEntity.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_10007800C@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B568(&qword_1000AC9A8, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000B9F50, (uint64_t)sub_100076618, a1);
}

uint64_t sub_100078030()
{
  return sub_1000095B4(&qword_1000B0630, &qword_1000B0638, (uint64_t)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_10007805C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100077B28();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100078098()
{
  unint64_t result;

  result = qword_1000B0640;
  if (!qword_1000B0640)
  {
    result = swift_getWitnessTable(&unk_10008D148, &type metadata for ShowAsOverdueEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0640);
  }
  return result;
}

uint64_t sub_1000780E0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100077F8C();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10007811C()
{
  unint64_t result;

  result = qword_1000B0648;
  if (!qword_1000B0648)
  {
    result = swift_getWitnessTable(&unk_10008D1A8, &type metadata for ShowAsOverdueEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0648);
  }
  return result;
}

uint64_t sub_100078160(uint64_t a1)
{
  unint64_t v2;

  if (qword_1000AC878 != -1)
    swift_once(&qword_1000AC878, sub_10001D534);
  String.append(_:)((Swift::String)xmmword_1000B9E28);
  v2 = sub_100077B28();
  return _EntityURLRepresentation.init(_:)(0xD000000000000041, 0x800000010008E910, a1, v2);
}

uint64_t sub_100078204(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_1000792B4();
  v4 = _URLRepresentableEntity.urlRepresentationParameter.getter(a1, v3);
  return sub_10000CFC8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8), v1, v4, v5);
}

unint64_t sub_100078250()
{
  unint64_t result;

  result = qword_1000B0658;
  if (!qword_1000B0658)
  {
    result = swift_getWitnessTable(&unk_10008D2A0, &type metadata for OpenShowAsOverdueDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000B0658);
  }
  return result;
}

uint64_t sub_100078294(uint64_t a1)
{
  return sub_10000B860(a1, qword_1000B9FA0, 0xD00000000000001CLL, 0x8000000100090F40);
}

uint64_t sub_1000782B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000041, 0x8000000100090EB0);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "OpenShowAsOverdueDeepLink Reminders App Intent description", 58, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

unint64_t sub_1000784D4()
{
  unint64_t result;

  result = qword_1000B0660;
  if (!qword_1000B0660)
  {
    result = swift_getWitnessTable(&unk_10008D2C8, &type metadata for OpenShowAsOverdueDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000B0660);
  }
  return result;
}

uint64_t sub_100078518(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_10007922C();
  v5 = sub_1000792B4();
  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_10007856C()
{
  uint64_t v0;

  v0 = qword_1000B0538;
  swift_bridgeObjectRetain(off_1000B0540);
  return v0;
}

unint64_t sub_1000785A4()
{
  unint64_t result;

  result = qword_1000B0668;
  if (!qword_1000B0668)
  {
    result = swift_getWitnessTable(&unk_10008D358, &type metadata for OpenShowAsOverdueDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000B0668);
  }
  return result;
}

unint64_t sub_1000785EC()
{
  unint64_t result;

  result = qword_1000B0670;
  if (!qword_1000B0670)
  {
    result = swift_getWitnessTable(&unk_10008D380, &type metadata for OpenShowAsOverdueDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000B0670);
  }
  return result;
}

uint64_t sub_100078630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10000BCB8(a1, a2, a3, (uint64_t (*)(void))sub_1000784D4);
}

uint64_t sub_10007863C@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B568(&qword_1000AC9C8, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000B9FA0, (uint64_t)sub_100078294, a1);
}

uint64_t sub_100078664(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to _URLRepresentableIntent<>.perform()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10007922C();
  v7 = sub_100079270();
  v8 = sub_1000792B4();
  *v5 = v2;
  v5[1] = sub_10000BDBC;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_1000786F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100078F24();
  *a1 = result;
  return result;
}

uint64_t sub_100078714(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000784D4();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenShowAsOverdueDeepLink()
{
  return &type metadata for OpenShowAsOverdueDeepLink;
}

ValueMetadata *type metadata accessor for ShowAsOverdueEntity.ShowAsOverdueQuery()
{
  return &type metadata for ShowAsOverdueEntity.ShowAsOverdueQuery;
}

ValueMetadata *type metadata accessor for ShowAsOverdueEntity()
{
  return &type metadata for ShowAsOverdueEntity;
}

ValueMetadata *type metadata accessor for ShowAsOverdueEntity.UpdateIntent_value()
{
  return &type metadata for ShowAsOverdueEntity.UpdateIntent_value;
}

uint64_t sub_10007877C()
{
  return sub_1000095B4(&qword_1000B0680, &qword_1000B0688, (uint64_t)&protocol conformance descriptor for <> IntentResultContainer<A, B, C, D>);
}

uint64_t sub_1000787A8()
{
  return sub_1000095B4(&qword_1000B0690, &qword_1000B0688, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_1000787D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t OpaqueTypeConformance2;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v47 = a1;
  v1 = sub_100006DA4(&qword_1000AD120);
  v40 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100006DA4(&qword_1000AD128);
  v42 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100006DA4(&qword_1000AD130);
  v8 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  v44 = v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100006DA4(&qword_1000AD138);
  v12 = *(_QWORD *)(v11 - 8);
  v45 = v11;
  v46 = v12;
  __chkstk_darwin(v11);
  v41 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_10008D418);
  v15 = sub_100006DA4(&qword_1000AD140);
  v16 = sub_100006DA4(&qword_1000AD148);
  v17 = sub_100077770();
  v18 = sub_1000095B4(&qword_1000AD150, &qword_1000AD140, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v19 = sub_10000D050();
  ControlToggle.init<A, B, C, D, E, F, G>(kind:intentUpdatableProperty:title:subtitle:value:)(0xD000000000000030, 0x8000000100091270, KeyPath, sub_100078B98, 0, sub_10000C498, 0, sub_10000C630, 0, v15, &type metadata for Text, v16, v17, v18, &protocol witness table for Text, v19);
  v20 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000001CLL, 0x80000001000912B0);
  v22 = v21;
  LOBYTE(v16) = v23;
  v25 = v24;
  v26 = sub_1000095B4(&qword_1000AD160, &qword_1000AD120, (uint64_t)&protocol conformance descriptor for ControlToggle<A>);
  WidgetConfiguration.configurationDisplayName(_:)(v20, v22, v16 & 1, v25, v1, v26);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v22);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v3, v1);
  v27 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000002ELL, 0x80000001000912D0);
  v29 = v28;
  LOBYTE(v3) = v30;
  v32 = v31;
  v48 = v1;
  v49 = v26;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v48, &opaque type descriptor for <<opaque return type of WidgetConfiguration.configurationDisplayName(_:)>>, 1);
  WidgetConfiguration.description(_:)(v27, v29, v3 & 1, v32, v4, OpaqueTypeConformance2);
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(v29);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v4);
  v48 = v4;
  v49 = OpaqueTypeConformance2;
  v34 = swift_getOpaqueTypeConformance2(&v48, &opaque type descriptor for <<opaque return type of WidgetConfiguration.description(_:)>>, 1);
  v35 = v41;
  v36 = v43;
  WidgetConfiguration.disablesControlStateCaching()(v43, v34);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v36);
  v48 = v36;
  v49 = v34;
  v37 = swift_getOpaqueTypeConformance2(&v48, &opaque type descriptor for <<opaque return type of WidgetConfiguration.disablesControlStateCaching()>>, 1);
  v38 = v45;
  WidgetConfiguration.hiddenControl()(v45, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v35, v38);
}

uint64_t sub_100078B98()
{
  uint64_t v0;

  v0 = LocalizedStringKey.init(stringLiteral:)(0x20736120776F6853, 0xEF6575647265764FLL);
  return Label<>.init(_:systemImage:)(v0);
}

uint64_t sub_100078C00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  char *v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v25;
  void (*v26)(char *);
  unsigned int v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  char *v30;
  char v31;
  uint64_t v32;

  v0 = sub_100006DA4(&qword_1000AD088);
  __chkstk_darwin(v0);
  v30 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for InputConnectionBehavior(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v29 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100006DA4(&qword_1000AD070);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v25 - v9;
  v11 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LocalizedStringResource(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100006DA4(&qword_1000B0698);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000019, 0x8000000100090E60);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  v32 = 0;
  v18 = type metadata accessor for IntentDialog(0);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v10, 1, 1, v18);
  v19(v8, 1, 1, v18);
  v27 = enum case for InputConnectionBehavior.default(_:);
  v26 = *(void (**)(char *))(v3 + 104);
  v20 = v29;
  v26(v29);
  v21 = sub_100077B28();
  v25 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v17, v13, &v32, v10, v8, v20, v21);
  sub_100006DA4(&qword_1000AD090);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000002CLL, 0x8000000100090E80);
  v28(v13, 1, 1, v14);
  v31 = 2;
  v22 = type metadata accessor for Bool.IntentDisplayName(0);
  v23 = v30;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v30, 1, 1, v22);
  v19(v10, 1, 1, v18);
  ((void (*)(char *, _QWORD, uint64_t))v26)(v20, v27, v2);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v17, v13, &v31, v23, v10, v20);
  return v25;
}

uint64_t sub_100078F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  char *v27;
  char *v28;
  unint64_t v29;
  _QWORD v31[2];
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v34 = *(_QWORD *)(v0 - 8);
  v35 = v0;
  __chkstk_darwin(v0);
  v33 = (char *)v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100006DA4(&qword_1000AD070);
  v3 = __chkstk_darwin(v2);
  v32 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (char *)v31 - v5;
  v7 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v7);
  v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Locale(0);
  __chkstk_darwin(v14);
  v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v17);
  v19 = (char *)v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for LocalizedStringResource(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[1] = sub_100006DA4(&qword_1000B0698);
  v24 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000017, 0x8000000100090E10);
  static Locale.current.getter(v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0, 0, v16, v13, "Open Show As Overdue deepLink parameter", 39, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v9, 1, 1, v20);
  v36 = 0;
  v25 = type metadata accessor for IntentDialog(0);
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v26(v6, 1, 1, v25);
  v27 = v32;
  v26(v32, 1, 1, v25);
  v28 = v33;
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v33, enum case for InputConnectionBehavior.default(_:), v35);
  v29 = sub_100077B28();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v23, v9, &v36, v6, v27, v28, v29);
}

unint64_t sub_10007922C()
{
  unint64_t result;

  result = qword_1000B06A0;
  if (!qword_1000B06A0)
  {
    result = swift_getWitnessTable(&unk_10008D1D0, &type metadata for OpenShowAsOverdueDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000B06A0);
  }
  return result;
}

unint64_t sub_100079270()
{
  unint64_t result;

  result = qword_1000B06A8;
  if (!qword_1000B06A8)
  {
    result = swift_getWitnessTable(&unk_10008D220, &type metadata for OpenShowAsOverdueDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000B06A8);
  }
  return result;
}

unint64_t sub_1000792B4()
{
  unint64_t result;

  result = qword_1000B06B0;
  if (!qword_1000B06B0)
  {
    result = swift_getWitnessTable(&unk_10008D170, &type metadata for ShowAsOverdueEntity);
    atomic_store(result, (unint64_t *)&qword_1000B06B0);
  }
  return result;
}

uint64_t sub_1000792F8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

ValueMetadata *type metadata accessor for ShowAsOverdueToggleControl()
{
  return &type metadata for ShowAsOverdueToggleControl;
}

uint64_t sub_100079314(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100093B30, 1);
}

uint64_t sub_100079324()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  unint64_t v9;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  void (*v17)(char *, uint64_t);
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v0 = sub_100006DA4(&qword_1000B0808);
  v29 = *(_QWORD *)(v0 - 8);
  v30 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100006DA4(&qword_1000B0810);
  __chkstk_darwin(v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10005FF64();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(37, 1, &type metadata for TodayNotificationEntity.UpdateIntent_value, v6);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_10008D620);
  v9 = sub_10007C5FC();
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3);
  swift_release(v10);
  v11._countAndFlagsBits = 0xD000000000000025;
  v11._object = (void *)0x80000001000917C0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for TodayNotificationEntity.UpdateIntent_value, v6);
  v31 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for TodayNotificationEntity.UpdateIntent_value, v6);
  v12 = v30;
  v28 = *(void (**)(char *, uint64_t))(v29 + 8);
  v28(v2, v30);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(39, 1, &type metadata for TodayNotificationEntity.UpdateIntent_value, v6);
  v13._countAndFlagsBits = 0x206E727554;
  v13._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  v14 = swift_getKeyPath(&unk_10008D620);
  v15 = _AssistantIntent.IntentProjection.subscript.getter(v14, v9);
  swift_release(v14);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v15, v3);
  swift_release(v15);
  v16._countAndFlagsBits = 0xD000000000000022;
  v16._object = (void *)0x80000001000917F0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for TodayNotificationEntity.UpdateIntent_value, v6);
  v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for TodayNotificationEntity.UpdateIntent_value, v6);
  v17 = v28;
  v28(v2, v12);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(35, 1, &type metadata for TodayNotificationEntity.UpdateIntent_value, v6);
  v18._countAndFlagsBits = 0x656B696C20642749;
  v18._object = (void *)0xEF206562206F7420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  v19 = swift_getKeyPath(&unk_10008D620);
  v20 = _AssistantIntent.IntentProjection.subscript.getter(v19, v9);
  swift_release(v19);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v20, v3);
  swift_release(v20);
  v21._object = (void *)0x8000000100091820;
  v21._countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for TodayNotificationEntity.UpdateIntent_value, v6);
  v22 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for TodayNotificationEntity.UpdateIntent_value, v6);
  v17(v2, v12);
  v23 = sub_100006DA4(&qword_1000B0818);
  v24 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v24 + 16) = xmmword_1000895F0;
  v25 = v29;
  *(_QWORD *)(v24 + 32) = v31;
  *(_QWORD *)(v24 + 40) = v25;
  *(_QWORD *)(v24 + 48) = v22;
  v26 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v24);
  return v26;
}

uint64_t sub_1000796DC(uint64_t a1)
{
  return sub_100079C04(a1, (uint64_t)&unk_10008D620, (uint64_t (*)(void))sub_10007C5FC, (uint64_t (*)(uint64_t))sub_10005FF64, (uint64_t)sub_100079700);
}

uint64_t sub_100079700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x656C62616E65, 0xE600000000000000);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(28271, 0xE200000000000000);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6465696669746F6ELL, 0xE800000000000000);
  v3 = sub_100006DA4(&qword_1000B0708);
  v4 = swift_allocObject(v3, 56, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1000895F0;
  *(_QWORD *)(v4 + 32) = v0;
  *(_QWORD *)(v4 + 40) = v1;
  *(_QWORD *)(v4 + 48) = v2;
  v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v4);
  return v5;
}

uint64_t sub_1000797A8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t KeyPath;
  unint64_t v14;
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  void (*v22)(char *, uint64_t);
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v0 = sub_100006DA4(&qword_1000B07F0);
  v34 = *(_QWORD *)(v0 - 8);
  v35 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100006DA4(&qword_1000B07F8);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100073848();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(39, 2, &type metadata for IncludeDueTodayEntity.UpdateIntent_value, v10);
  v11._countAndFlagsBits = 0x20656B614DLL;
  v11._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v3);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v6, v7);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v12._countAndFlagsBits = 0x6320656764616220;
  v12._object = (void *)0xED000020746E756FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  KeyPath = swift_getKeyPath(&unk_10008D5F8);
  v14 = sub_10007C5FC();
  v15 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v14);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v15, v7);
  swift_release(v15);
  v16._object = (void *)0x8000000100091740;
  v16._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for IncludeDueTodayEntity.UpdateIntent_value, v10);
  v36 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for IncludeDueTodayEntity.UpdateIntent_value, v10);
  v17 = v35;
  v33 = *(void (**)(char *, uint64_t))(v34 + 8);
  v33(v2, v35);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(34, 1, &type metadata for IncludeDueTodayEntity.UpdateIntent_value, v10);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  v19 = swift_getKeyPath(&unk_10008D5F8);
  v20 = _AssistantIntent.IntentProjection.subscript.getter(v19, v14);
  swift_release(v19);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v20, v7);
  swift_release(v20);
  v21._countAndFlagsBits = 0xD000000000000022;
  v21._object = (void *)0x8000000100091760;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for IncludeDueTodayEntity.UpdateIntent_value, v10);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for IncludeDueTodayEntity.UpdateIntent_value, v10);
  v22 = v33;
  v33(v2, v17);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(36, 1, &type metadata for IncludeDueTodayEntity.UpdateIntent_value, v10);
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  v24 = swift_getKeyPath(&unk_10008D5F8);
  v25 = _AssistantIntent.IntentProjection.subscript.getter(v24, v14);
  swift_release(v24);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v25, v7);
  swift_release(v25);
  v26._countAndFlagsBits = 0xD000000000000024;
  v26._object = (void *)0x8000000100091790;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for IncludeDueTodayEntity.UpdateIntent_value, v10);
  v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for IncludeDueTodayEntity.UpdateIntent_value, v10);
  v22(v2, v17);
  v28 = sub_100006DA4(&qword_1000B0800);
  v29 = swift_allocObject(v28, 56, 7);
  *(_OWORD *)(v29 + 16) = xmmword_1000895F0;
  v30 = v34;
  *(_QWORD *)(v29 + 32) = v36;
  *(_QWORD *)(v29 + 40) = v30;
  *(_QWORD *)(v29 + 48) = v27;
  v31 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v29);
  return v31;
}

uint64_t sub_100079BE0(uint64_t a1)
{
  return sub_100079C04(a1, (uint64_t)&unk_10008D5F8, (uint64_t (*)(void))sub_10007C5FC, (uint64_t (*)(uint64_t))sub_100073848, (uint64_t)sub_100079D28);
}

uint64_t sub_100079C04(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v9 = type metadata accessor for _AssistantIntent.Value(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(a2);
  v14 = a3();
  v15 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v14);
  v16 = swift_release(KeyPath);
  v17 = a4(v16);
  _AssistantIntent.Value.init<A>(for:builder:)(v15, a5, 0, v17);
  v18 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v19 = sub_100006DA4(&qword_1000B0768);
  v20 = swift_allocObject(v19, 40, 7);
  *(_OWORD *)(v20 + 16) = xmmword_1000882D0;
  *(_QWORD *)(v20 + 32) = v18;
  v21 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v20);
  return v21;
}

uint64_t sub_100079D28()
{
  return sub_10007B494(0x6564756C636E69, 0xE700000000000000, 6579265, 0xE300000000000000);
}

uint64_t sub_100079D4C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  Swift::String v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);

  v37 = sub_100006DA4(&qword_1000B07D8);
  v0 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v2 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100006DA4(&qword_1000B07E0);
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10007C490();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(53, 1, &type metadata for MuteNotificationsEntity.UpdateIntent_value, v6);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_10008D5D0);
  v33 = sub_10007C5FC();
  v9 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v33);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v9, v3);
  swift_release(v9);
  v10._countAndFlagsBits = 0xD000000000000035;
  v10._object = (void *)0x8000000100091650;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for MuteNotificationsEntity.UpdateIntent_value, v6);
  v36 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for MuteNotificationsEntity.UpdateIntent_value, v6);
  v38 = *(void (**)(char *, uint64_t))(v0 + 8);
  v11 = v37;
  v38(v2, v37);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(49, 1, &type metadata for MuteNotificationsEntity.UpdateIntent_value, v6);
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  v13 = swift_getKeyPath(&unk_10008D5D0);
  v14 = v33;
  v15 = _AssistantIntent.IntentProjection.subscript.getter(v13, v33);
  swift_release(v13);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v15, v3);
  swift_release(v15);
  v16._countAndFlagsBits = 0xD000000000000031;
  v16._object = (void *)0x8000000100091690;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for MuteNotificationsEntity.UpdateIntent_value, v6);
  v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for MuteNotificationsEntity.UpdateIntent_value, v6);
  v38(v2, v11);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(46, 1, &type metadata for MuteNotificationsEntity.UpdateIntent_value, v6);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  v18 = swift_getKeyPath(&unk_10008D5D0);
  v19 = _AssistantIntent.IntentProjection.subscript.getter(v18, v14);
  swift_release(v18);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v19, v3);
  swift_release(v19);
  v20._object = (void *)0x80000001000916D0;
  v20._countAndFlagsBits = 0xD00000000000002ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for MuteNotificationsEntity.UpdateIntent_value, v6);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for MuteNotificationsEntity.UpdateIntent_value, v6);
  v22 = v37;
  v21 = v38;
  v38(v2, v37);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(52, 1, &type metadata for MuteNotificationsEntity.UpdateIntent_value, v6);
  v23._countAndFlagsBits = 8265;
  v23._object = (void *)0xE200000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  v24 = swift_getKeyPath(&unk_10008D5D0);
  v25 = _AssistantIntent.IntentProjection.subscript.getter(v24, v14);
  swift_release(v24);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v25, v3);
  swift_release(v25);
  v26._countAndFlagsBits = 0xD000000000000032;
  v26._object = (void *)0x8000000100091700;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for MuteNotificationsEntity.UpdateIntent_value, v6);
  v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for MuteNotificationsEntity.UpdateIntent_value, v6);
  v21(v2, v22);
  v28 = sub_100006DA4(&qword_1000B07E8);
  v29 = swift_allocObject(v28, 64, 7);
  *(_OWORD *)(v29 + 16) = xmmword_10008A160;
  v30 = v35;
  *(_QWORD *)(v29 + 32) = v36;
  *(_QWORD *)(v29 + 40) = v30;
  *(_QWORD *)(v29 + 48) = v34;
  *(_QWORD *)(v29 + 56) = v27;
  v31 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v29);
  return v31;
}

uint64_t sub_10007A1BC(uint64_t a1)
{
  return sub_100079C04(a1, (uint64_t)&unk_10008D5D0, (uint64_t (*)(void))sub_10007C5FC, (uint64_t (*)(uint64_t))sub_10007C490, (uint64_t)sub_10007A1E0);
}

uint64_t sub_10007A1E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x656C6261736944, 0xE700000000000000);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x66666F206E727554, 0xE800000000000000);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x746F6E206F44, 0xE600000000000000);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x61772074276E6F64, 0xEA0000000000746ELL);
  v4 = sub_100006DA4(&qword_1000B0708);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_10008A160;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_10007A2BC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  unint64_t v9;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  void (*v17)(char *, uint64_t);
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v28)(char *, uint64_t);
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;

  v31 = sub_100006DA4(&qword_1000B07C0);
  v0 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100006DA4(&qword_1000B07C8);
  __chkstk_darwin(v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000765A8();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 1, &type metadata for ShowAsOverdueEntity.UpdateIntent_value, v6);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_10008D5A8);
  v9 = sub_10007C5FC();
  v29 = v9;
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3);
  swift_release(v10);
  v11._object = (void *)0x8000000100091610;
  v32 = (void *)0x8000000100091610;
  v11._countAndFlagsBits = 0xD000000000000016;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for ShowAsOverdueEntity.UpdateIntent_value, v6);
  v33 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for ShowAsOverdueEntity.UpdateIntent_value, v6);
  v28 = *(void (**)(char *, uint64_t))(v0 + 8);
  v12 = v31;
  v28(v2, v31);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 1, &type metadata for ShowAsOverdueEntity.UpdateIntent_value, v6);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  v14 = swift_getKeyPath(&unk_10008D5A8);
  v15 = _AssistantIntent.IntentProjection.subscript.getter(v14, v9);
  swift_release(v14);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v15, v3);
  swift_release(v15);
  v16._object = (void *)0x8000000100091630;
  v16._countAndFlagsBits = 0xD000000000000016;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for ShowAsOverdueEntity.UpdateIntent_value, v6);
  v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for ShowAsOverdueEntity.UpdateIntent_value, v6);
  v17 = v28;
  v28(v2, v12);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(34, 1, &type metadata for ShowAsOverdueEntity.UpdateIntent_value, v6);
  v18._countAndFlagsBits = 0x656B696C20642749;
  v18._object = (void *)0xEC000000206F7420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  v19 = swift_getKeyPath(&unk_10008D5A8);
  v20 = _AssistantIntent.IntentProjection.subscript.getter(v19, v29);
  swift_release(v19);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v20, v3);
  swift_release(v20);
  v21._countAndFlagsBits = 0xD000000000000016;
  v21._object = v32;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for ShowAsOverdueEntity.UpdateIntent_value, v6);
  v22 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for ShowAsOverdueEntity.UpdateIntent_value, v6);
  v17(v2, v12);
  v23 = sub_100006DA4(&qword_1000B07D0);
  v24 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v24 + 16) = xmmword_1000895F0;
  v25 = v30;
  *(_QWORD *)(v24 + 32) = v33;
  *(_QWORD *)(v24 + 40) = v25;
  *(_QWORD *)(v24 + 48) = v22;
  v26 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v24);
  return v26;
}

uint64_t sub_10007A65C(uint64_t a1)
{
  return sub_100079C04(a1, (uint64_t)&unk_10008D5A8, (uint64_t (*)(void))sub_10007C5FC, (uint64_t (*)(uint64_t))sub_1000765A8, (uint64_t)sub_10007A680);
}

uint64_t sub_10007A680()
{
  return sub_10007B494(2003789907, 0xE400000000000000, 6645075, 0xE300000000000000);
}

uint64_t sub_10007A69C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  unint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  char *v17;
  char *v18;
  uint64_t v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, _QWORD, uint64_t);
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  Swift::String v29;
  char *v30;
  unint64_t v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  uint64_t v36;
  Swift::String v37;
  char *v38;
  unint64_t v39;
  void (*v40)(char *, uint64_t);
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  Swift::String v44;
  uint64_t v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  void (*v60)(char *, uint64_t);
  void (*v61)(char *, _QWORD, uint64_t);
  uint64_t v62;
  unsigned int v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;

  v62 = a1;
  v67 = sub_100006DA4(&qword_1000B07A8);
  v65 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v66 = (char *)&v53 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v2 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v4 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100006DA4(&qword_1000B07B0);
  __chkstk_darwin(v5);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000096FC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 2, &type metadata for ShowSuggestionsEntity.UpdateIntent_value, v8);
  v9._countAndFlagsBits = 0x206E6F206E727554;
  v9._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_10008D580);
  v11 = sub_10007C5FC();
  v64 = v11;
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v11);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v5);
  swift_release(v12);
  v13._object = (void *)0x80000001000915D0;
  v56 = (void *)0x80000001000915D0;
  v13._countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  v14 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  v61 = *(void (**)(char *, _QWORD, uint64_t))(v2 + 104);
  v63 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  v15 = v68;
  v61(v4, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v68);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v4, v5);
  v60 = *(void (**)(char *, uint64_t))(v2 + 8);
  v60(v4, v15);
  v16._countAndFlagsBits = 46;
  v16._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = v66;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for ShowSuggestionsEntity.UpdateIntent_value, v8);
  v59 = v8;
  v58 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v17, &type metadata for ShowSuggestionsEntity.UpdateIntent_value, v8);
  v65 = *(_QWORD *)(v65 + 8);
  v18 = v17;
  v19 = v67;
  ((void (*)(char *, uint64_t))v65)(v18, v67);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(36, 2, &type metadata for ShowSuggestionsEntity.UpdateIntent_value, v8);
  v20._countAndFlagsBits = 0x7420746E61772049;
  v20._object = (void *)0xEA0000000000206FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath(&unk_10008D580);
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v11);
  swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v5);
  swift_release(v22);
  v23._countAndFlagsBits = 0xD000000000000019;
  v23._object = (void *)0x80000001000915F0;
  v54 = (void *)0x80000001000915F0;
  v55 = 0xD000000000000019;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  v24 = v14;
  v25 = v68;
  v26 = v61;
  v61(v4, v24, v68);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v4, v5);
  v27 = v25;
  v28 = v60;
  v60(v4, v27);
  v29._countAndFlagsBits = 46;
  v29._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  v30 = v66;
  v31 = v59;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for ShowSuggestionsEntity.UpdateIntent_value, v59);
  v57 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v30, &type metadata for ShowSuggestionsEntity.UpdateIntent_value, v31);
  ((void (*)(char *, uint64_t))v65)(v30, v19);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(27, 2, &type metadata for ShowSuggestionsEntity.UpdateIntent_value, v31);
  v32._countAndFlagsBits = 0x66666F206E727554;
  v32._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  v33 = swift_getKeyPath(&unk_10008D580);
  v34 = _AssistantIntent.IntentProjection.subscript.getter(v33, v64);
  swift_release(v33);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v34, v5);
  swift_release(v34);
  v35._countAndFlagsBits = 0xD000000000000011;
  v35._object = v56;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  v36 = v68;
  v26(v4, v63, v68);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v4, v5);
  v28(v4, v36);
  v37._countAndFlagsBits = 46;
  v37._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  v38 = v66;
  v39 = v59;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for ShowSuggestionsEntity.UpdateIntent_value, v59);
  v56 = (void *)static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v38, &type metadata for ShowSuggestionsEntity.UpdateIntent_value, v39);
  v40 = (void (*)(char *, uint64_t))v65;
  ((void (*)(char *, uint64_t))v65)(v38, v67);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 2, &type metadata for ShowSuggestionsEntity.UpdateIntent_value, v39);
  v41._countAndFlagsBits = 0;
  v41._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  v42 = swift_getKeyPath(&unk_10008D580);
  v43 = _AssistantIntent.IntentProjection.subscript.getter(v42, v64);
  swift_release(v42);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v43, v5);
  swift_release(v43);
  v44._object = v54;
  v44._countAndFlagsBits = v55;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v44);
  v45 = v68;
  v61(v4, v63, v68);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v4, v5);
  v60(v4, v45);
  v46._countAndFlagsBits = 46;
  v46._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v46);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for ShowSuggestionsEntity.UpdateIntent_value, v39);
  v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v38, &type metadata for ShowSuggestionsEntity.UpdateIntent_value, v39);
  v40(v38, v67);
  v48 = sub_100006DA4(&qword_1000B07B8);
  v49 = swift_allocObject(v48, 64, 7);
  *(_OWORD *)(v49 + 16) = xmmword_10008A160;
  v50 = v57;
  *(_QWORD *)(v49 + 32) = v58;
  *(_QWORD *)(v49 + 40) = v50;
  *(_QWORD *)(v49 + 48) = v56;
  *(_QWORD *)(v49 + 56) = v47;
  v51 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v49);
  return v51;
}

uint64_t sub_10007AC98(uint64_t a1)
{
  return sub_100079C04(a1, (uint64_t)&unk_10008D580, (uint64_t (*)(void))sub_10007C5FC, (uint64_t (*)(uint64_t))sub_1000096FC, (uint64_t)sub_10007ACBC);
}

uint64_t sub_10007ACBC()
{
  return sub_10007ACDC(2003789907, 6645075, 0xE300000000000000, 1701079368);
}

uint64_t sub_10007ACDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(a1, 0xE400000000000000);
  v8 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(a2, a3);
  v9 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(a4, 0xE400000000000000);
  v10 = sub_100006DA4(&qword_1000B0708);
  v11 = swift_allocObject(v10, 56, 7);
  *(_OWORD *)(v11 + 16) = xmmword_1000895F0;
  *(_QWORD *)(v11 + 32) = v7;
  *(_QWORD *)(v11 + 40) = v8;
  *(_QWORD *)(v11 + 48) = v9;
  v12 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v11);
  return v12;
}

uint64_t sub_10007AD78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  Swift::String v12;
  Swift::String v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  Swift::String v16;
  uint64_t KeyPath;
  unint64_t v18;
  uint64_t v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a1;
  v28 = sub_100006DA4(&qword_1000B0788);
  v1 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100006DA4(&qword_1000B0790);
  __chkstk_darwin(v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000F388();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 1, &type metadata for OpenRemindersSettingsDeepLink, v11);
  v12._object = (void *)0x80000001000915B0;
  v12._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v4);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v7, v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13._countAndFlagsBits = 0x676E697474657320;
  v13._object = (void *)0xEA00000000002E73;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v10, &type metadata for OpenRemindersSettingsDeepLink, v11);
  v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenRemindersSettingsDeepLink, v11);
  v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v15 = v28;
  v14(v3, v28);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(15, 1, &type metadata for OpenRemindersSettingsDeepLink, v11);
  v16._countAndFlagsBits = 0x206E65704FLL;
  v16._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  KeyPath = swift_getKeyPath(&unk_10008D558);
  v18 = sub_10000E8A0();
  v19 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v18);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v19, v8);
  swift_release(v19);
  v20._countAndFlagsBits = 0x676E697474657320;
  v20._object = (void *)0xEA00000000002E73;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v10, &type metadata for OpenRemindersSettingsDeepLink, v11);
  v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenRemindersSettingsDeepLink, v11);
  v14(v3, v15);
  v22 = sub_100006DA4(&qword_1000B0798);
  v23 = swift_allocObject(v22, 48, 7);
  *(_OWORD *)(v23 + 16) = xmmword_1000895E0;
  *(_QWORD *)(v23 + 32) = v27;
  *(_QWORD *)(v23 + 40) = v21;
  v24 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v23);
  return v24;
}

uint64_t sub_10007B064(uint64_t a1)
{
  return sub_100079C04(a1, (uint64_t)&unk_10008D558, (uint64_t (*)(void))sub_10000E8A0, (uint64_t (*)(uint64_t))sub_10000F388, (uint64_t)sub_10007B088);
}

uint64_t sub_10007B088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x7265646E696D6572, 0xE900000000000073);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x20746C7561666564, 0xEC0000007473696CLL);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000013, 0x8000000100091550);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000010, 0x8000000100091590);
  v4 = sub_100006DA4(&qword_1000B0708);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_10008A160;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_10007B17C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  unint64_t v9;
  uint64_t v10;
  Swift::String v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v24 = sub_100006DA4(&qword_1000B0788);
  v0 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100006DA4(&qword_1000B0790);
  __chkstk_darwin(v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000F388();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 1, &type metadata for OpenRemindersSettingsDeepLink, v6);
  v7._object = (void *)0x8000000100091570;
  v7._countAndFlagsBits = 0xD000000000000016;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_10008D558);
  v9 = sub_10000E8A0();
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3);
  swift_release(v10);
  v11._countAndFlagsBits = 46;
  v11._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for OpenRemindersSettingsDeepLink, v6);
  v23 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenRemindersSettingsDeepLink, v6);
  v12 = *(void (**)(char *, uint64_t))(v0 + 8);
  v13 = v24;
  v12(v2, v24);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(11, 1, &type metadata for OpenRemindersSettingsDeepLink, v6);
  v14._countAndFlagsBits = 0x20656D20776F6853;
  v14._object = (void *)0xEB0000000020796DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v15 = swift_getKeyPath(&unk_10008D558);
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v15, v9);
  swift_release(v15);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v3);
  swift_release(v16);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for OpenRemindersSettingsDeepLink, v6);
  v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenRemindersSettingsDeepLink, v6);
  v12(v2, v13);
  v19 = sub_100006DA4(&qword_1000B0798);
  v20 = swift_allocObject(v19, 48, 7);
  *(_OWORD *)(v20 + 16) = xmmword_1000895E0;
  *(_QWORD *)(v20 + 32) = v23;
  *(_QWORD *)(v20 + 40) = v18;
  v21 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v20);
  return v21;
}

uint64_t sub_10007B438(uint64_t a1)
{
  return sub_100079C04(a1, (uint64_t)&unk_10008D558, (uint64_t (*)(void))sub_10000E8A0, (uint64_t (*)(uint64_t))sub_10000F388, (uint64_t)sub_10007B45C);
}

uint64_t sub_10007B45C()
{
  return sub_10007B494(0x20746C7561666564, 0xEC0000007473696CLL, 0xD000000000000013, 0x8000000100091550);
}

uint64_t sub_10007B494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(a1, a2);
  v7 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(a3, a4);
  v8 = sub_100006DA4(&qword_1000B0708);
  v9 = swift_allocObject(v8, 48, 7);
  *(_OWORD *)(v9 + 16) = xmmword_1000895E0;
  *(_QWORD *)(v9 + 32) = v6;
  *(_QWORD *)(v9 + 40) = v7;
  v10 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v9);
  return v10;
}

uint64_t sub_10007B514()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  void (*v8)(char *, uint64_t);
  Swift::String v9;
  uint64_t KeyPath;
  unint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v0 = sub_100006DA4(&qword_1000B0770);
  __chkstk_darwin(v0);
  v2 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100006DA4(&qword_1000B0778);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100062340();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000037, 0x8000000100091420, &type metadata for OpenTodayNotificationDeepLink, v7);
  v37 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for OpenTodayNotificationDeepLink, v7);
  v8 = *(void (**)(char *, uint64_t))(v4 + 8);
  v8(v6, v3);
  v33 = v8;
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000040, 0x8000000100091460, &type metadata for OpenTodayNotificationDeepLink, v7);
  v36 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for OpenTodayNotificationDeepLink, v7);
  v32 = v3;
  v8(v6, v3);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(35, 1, &type metadata for OpenTodayNotificationDeepLink, v7);
  v9._object = (void *)0x80000001000914B0;
  v9._countAndFlagsBits = 0xD000000000000022;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_10008D530);
  v11 = sub_100061AC8();
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v11);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v0);
  swift_release(v12);
  v13._countAndFlagsBits = 46;
  v13._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v2, &type metadata for OpenTodayNotificationDeepLink, v7);
  v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for OpenTodayNotificationDeepLink, v7);
  v14 = v3;
  v15 = v33;
  v33(v6, v14);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(55, 1, &type metadata for OpenTodayNotificationDeepLink, v7);
  v16._countAndFlagsBits = 0xD000000000000036;
  v16._object = (void *)0x80000001000914E0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath(&unk_10008D530);
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v11);
  swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v0);
  swift_release(v18);
  v19._countAndFlagsBits = 46;
  v19._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v2, &type metadata for OpenTodayNotificationDeepLink, v7);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for OpenTodayNotificationDeepLink, v7);
  v20 = v32;
  v15(v6, v32);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(47, 1, &type metadata for OpenTodayNotificationDeepLink, v7);
  v21._countAndFlagsBits = 0xD00000000000002ELL;
  v21._object = (void *)0x8000000100091520;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_10008D530);
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v22, v11);
  swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v0);
  swift_release(v23);
  v24._countAndFlagsBits = 46;
  v24._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v2, &type metadata for OpenTodayNotificationDeepLink, v7);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for OpenTodayNotificationDeepLink, v7);
  v15(v6, v20);
  v26 = sub_100006DA4(&qword_1000B0780);
  v27 = swift_allocObject(v26, 72, 7);
  *(_OWORD *)(v27 + 16) = xmmword_10008D4A0;
  v28 = v36;
  *(_QWORD *)(v27 + 32) = v37;
  *(_QWORD *)(v27 + 40) = v28;
  v29 = v34;
  *(_QWORD *)(v27 + 48) = v35;
  *(_QWORD *)(v27 + 56) = v29;
  *(_QWORD *)(v27 + 64) = v25;
  v30 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v27);
  return v30;
}

uint64_t sub_10007B964(uint64_t a1)
{
  return sub_100079C04(a1, (uint64_t)&unk_10008D530, (uint64_t (*)(void))sub_100061AC8, (uint64_t (*)(uint64_t))sub_100062340, (uint64_t)sub_10007B988);
}

uint64_t sub_10007B988()
{
  return sub_10007ACDC(1297096760, 0x4D50203031, 0xE500000000000000, 1296113721);
}

uint64_t sub_10007B9AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_100006DA4(&qword_1000B0758);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000784D4();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000002FLL, 0x80000001000913F0, &type metadata for OpenShowAsOverdueDeepLink, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenShowAsOverdueDeepLink, v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v6 = sub_100006DA4(&qword_1000B0760);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1000882D0;
  *(_QWORD *)(v7 + 32) = v5;
  v8 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_10007BABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_100006DA4(&qword_1000B0748);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10007575C();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000026, 0x80000001000913C0, &type metadata for OpenIncludeDueTodayDeepLink, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenIncludeDueTodayDeepLink, v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v6 = sub_100006DA4(&qword_1000B0750);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1000882D0;
  *(_QWORD *)(v7 + 32) = v5;
  v8 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_10007BBC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_100006DA4(&qword_1000B0738);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10007C4D4();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000044, 0x8000000100091370, &type metadata for OpenMuteNotificationsDeepLink, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMuteNotificationsDeepLink, v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v6 = sub_100006DA4(&qword_1000B0740);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1000882D0;
  *(_QWORD *)(v7 + 32) = v5;
  v8 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_10007BCD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_100006DA4(&qword_1000B0728);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000BB08();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000002ELL, 0x8000000100091340, &type metadata for OpenShowSuggestionsDeepLink, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenShowSuggestionsDeepLink, v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v6 = sub_100006DA4(&qword_1000B0730);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1000882D0;
  *(_QWORD *)(v7 + 32) = v5;
  v8 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_10007BDE0()
{
  return sub_10007BE18(0xD00000000000001DLL, 0x8000000100091320);
}

uint64_t sub_10007BDFC()
{
  return sub_10007BE18(0xD000000000000016, 0x8000000100091300);
}

uint64_t sub_10007BE18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(a1, a2);
  v3 = sub_100006DA4(&qword_1000B0708);
  v4 = swift_allocObject(v3, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1000882D0;
  *(_QWORD *)(v4 + 32) = v2;
  v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v4);
  return v5;
}

ValueMetadata *type metadata accessor for RemindersSettingsAssistantIntentsProvider()
{
  return &type metadata for RemindersSettingsAssistantIntentsProvider;
}

uint64_t sub_10007BE94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v0 = type metadata accessor for _AssistantIntent(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_100062A64();
  v41 = v4;
  v5 = sub_10005FF64();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v40, sub_100079324, 0, sub_1000796DC, 0, &type metadata for TodayNotificationEntity.UpdateIntent_value, v5);
  v39 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  v40 = sub_100075E80();
  v41 = v7;
  v8 = sub_100073848();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v40, sub_1000797A8, 0, sub_100079BE0, 0, &type metadata for IncludeDueTodayEntity.UpdateIntent_value, v8);
  v38 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  v40 = sub_10007ECBC();
  v41 = v9;
  v10 = sub_10007C490();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v40, sub_100079D4C, 0, sub_10007A1BC, 0, &type metadata for MuteNotificationsEntity.UpdateIntent_value, v10);
  v37 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  v40 = sub_100078C00();
  v41 = v11;
  v12 = sub_1000765A8();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v40, sub_10007A2BC, 0, sub_10007A65C, 0, &type metadata for ShowAsOverdueEntity.UpdateIntent_value, v12);
  v36 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  v40 = sub_10000C878();
  v41 = v13;
  v14 = sub_1000096FC();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v40, sub_10007A69C, 0, sub_10007AC98, 0, &type metadata for ShowSuggestionsEntity.UpdateIntent_value, v14);
  v35 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  v40 = sub_1000101A0();
  v15 = sub_10000F388();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v40, sub_10007AD78, 0, sub_10007B064, 0, &type metadata for OpenRemindersSettingsDeepLink, v15);
  v16 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  v40 = sub_1000101A0();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v40, sub_10007B17C, 0, sub_10007B438, 0, &type metadata for OpenRemindersSettingsDeepLink, v15);
  v17 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  v40 = sub_100062D88();
  v18 = sub_100062340();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v40, sub_10007B514, 0, sub_10007B964, 0, &type metadata for OpenTodayNotificationDeepLink, v18);
  v19 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  v40 = sub_100078F24();
  v20 = sub_1000784D4();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v40, sub_10007B9AC, 0, &j___s10AppIntents16_AssistantIntentV21ParameterValueBuilderO10buildBlockSayAC0F0VGyFZ, 0, &type metadata for OpenShowAsOverdueDeepLink, v20);
  v21 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  v40 = sub_1000761A4();
  v22 = sub_10007575C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v40, sub_10007BABC, 0, &j_j___s10AppIntents16_AssistantIntentV21ParameterValueBuilderO10buildBlockSayAC0F0VGyFZ, 0, &type metadata for OpenIncludeDueTodayDeepLink, v22);
  v23 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  v40 = sub_10007EFE0();
  v24 = sub_10007C4D4();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v40, sub_10007BBC8, 0, &j_j___s10AppIntents16_AssistantIntentV21ParameterValueBuilderO10buildBlockSayAC0F0VGyFZ, 0, &type metadata for OpenMuteNotificationsDeepLink, v24);
  v25 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  v40 = sub_10000CB9C();
  v26 = sub_10000BB08();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v40, sub_10007BCD4, 0, &j_j___s10AppIntents16_AssistantIntentV21ParameterValueBuilderO10buildBlockSayAC0F0VGyFZ, 0, &type metadata for OpenShowSuggestionsDeepLink, v26);
  v27 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  v28 = sub_100006DA4(&qword_1000B0720);
  v29 = swift_allocObject(v28, 128, 7);
  *(_OWORD *)(v29 + 16) = xmmword_10008D4B0;
  v30 = v38;
  *(_QWORD *)(v29 + 32) = v39;
  *(_QWORD *)(v29 + 40) = v30;
  v31 = v36;
  *(_QWORD *)(v29 + 48) = v37;
  *(_QWORD *)(v29 + 56) = v31;
  *(_QWORD *)(v29 + 64) = v35;
  *(_QWORD *)(v29 + 72) = v16;
  *(_QWORD *)(v29 + 80) = v17;
  *(_QWORD *)(v29 + 88) = v19;
  *(_QWORD *)(v29 + 96) = v21;
  *(_QWORD *)(v29 + 104) = v23;
  *(_QWORD *)(v29 + 112) = v25;
  *(_QWORD *)(v29 + 120) = v27;
  v32 = static _AssistantIntent.Builder.buildBlock(_:)();
  swift_bridgeObjectRelease(v29);
  return v32;
}

uint64_t sub_10007C368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = type metadata accessor for _AssistantIntent.NegativeAssistantIntentPhrases(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100062340();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)(&type metadata for OpenTodayNotificationDeepLink, sub_10007BDE0, 0, &type metadata for OpenTodayNotificationDeepLink, v4);
  v5 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)(v3);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  v7 = sub_10005FF64();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)(&type metadata for TodayNotificationEntity.UpdateIntent_value, sub_10007BDFC, 0, &type metadata for TodayNotificationEntity.UpdateIntent_value, v7);
  v8 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)(v3);
  v6(v3, v0);
  v9 = sub_100006DA4(&qword_1000B0700);
  v10 = swift_allocObject(v9, 48, 7);
  *(_OWORD *)(v10 + 16) = xmmword_1000895E0;
  *(_QWORD *)(v10 + 32) = v5;
  *(_QWORD *)(v10 + 40) = v8;
  v11 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v10);
  return v11;
}

unint64_t sub_10007C490()
{
  unint64_t result;

  result = qword_1000B0710;
  if (!qword_1000B0710)
  {
    result = swift_getWitnessTable(&unk_10008D750, &type metadata for MuteNotificationsEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_1000B0710);
  }
  return result;
}

unint64_t sub_10007C4D4()
{
  unint64_t result;

  result = qword_1000B0718;
  if (!qword_1000B0718)
  {
    result = swift_getWitnessTable(&unk_10008DD48, &type metadata for OpenMuteNotificationsDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000B0718);
  }
  return result;
}

_QWORD *sub_10007C518@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_10007C550(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  swift_retain(v2);
  return IntentParameter.wrappedValue.setter(&v2);
}

_QWORD *sub_10007C588@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_10007C5C0(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

unint64_t sub_10007C5FC()
{
  unint64_t result;

  result = qword_1000B07A0;
  if (!qword_1000B07A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Bool, &type metadata for Bool);
    atomic_store(result, (unint64_t *)&qword_1000B07A0);
  }
  return result;
}

_QWORD *sub_10007C65C@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_10007C698(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

uint64_t sub_10007C6D0()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for TTRNewWidgetRouter()
{
  return objc_opt_self(_TtC24RemindersWidgetExtension18TTRNewWidgetRouter);
}

uint64_t sub_10007C704()
{
  return sub_1000095B4(&qword_1000B08D8, &qword_1000B08E0, (uint64_t)&protocol conformance descriptor for _IntentUpdatableEntityProperty<A, B, C>);
}

uint64_t sub_10007C730()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v0 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10000CF88(v16, qword_1000B9FB8);
  sub_10000CF70(v16, (uint64_t)qword_1000B9FB8);
  v17 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x8000000100091980);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v19[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "Name of Mute Notification settings type for App Intents", 55, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

uint64_t sub_10007C944@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;

  v37 = a1;
  v1 = sub_100006DA4(&qword_1000AD0B0);
  __chkstk_darwin(v1);
  v38 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Locale(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LocalizedStringResource(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v36 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v21 = (char *)&v34 - v20;
  v22 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x8000000100091980);
  static Locale.current.getter(v22);
  v23 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v24(v9, enum case for LocalizedStringResource.BundleDescription.main(_:), v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, 0, 0, v12, v9, "Title for Mute Notifications settings display representation for App Intents", 76, 2);
  v25 = String.LocalizationValue.init(stringLiteral:)(0x1000000000000012, 0x800000010008E9D0);
  static Locale.current.getter(v25);
  v24(v9, v23, v6);
  v35 = v5;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, 0, 0, v12, v9, "Subtitle for reminders' control settings navigation for App Intents", 67, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v5, 0, 1, v16);
  v26 = v38;
  DisplayRepresentation.Image.init(appBundleIdentifier:)(0xD000000000000013, 0x800000010008EA40);
  v27 = type metadata accessor for DisplayRepresentation.Image(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 0, 1, v27);
  v28 = sub_100006DA4(&qword_1000AD0B8);
  v29 = swift_allocObject(v28, ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72), *(unsigned __int8 *)(v17 + 80) | 7);
  *(_OWORD *)(v29 + 16) = xmmword_1000882D0;
  v30 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x80000001000919F0);
  static Locale.current.getter(v30);
  v24(v9, v23, v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, 0, 0, v12, v9, "Synonyms keyword for Mute Notifications settings display representation for App Intents", 87, 2);
  v31 = String.LocalizationValue.init(stringLiteral:)(0x10000000000000C2, 0x8000000100091A70);
  static Locale.current.getter(v31);
  v24(v9, v23, v6);
  v32 = v36;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, 0, 0, v12, v9, "Description Text for Mute Notifications settings display representation for App Intents", 87, 2);
  return DisplayRepresentation.init(title:subtitle:image:synonyms:descriptionText:)(v21, v35, v38, v29, v32);
}

uint64_t sub_10007CD54(uint64_t a1)
{
  return sub_10000B860(a1, qword_1000B9FD0, 0xD000000000000019, 0x8000000100091CE0);
}

uint64_t sub_10007CD78()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  v0 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v0);
  v2 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v21[0] - 8);
  __chkstk_darwin(v21[0]);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100006DA4(&qword_1000AD118);
  sub_10000CF88(v16, qword_1000B9FE8);
  v17 = sub_10000CF70(v16, (uint64_t)qword_1000B9FE8);
  v18 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002FLL, 0x8000000100091C70);
  static Locale.current.getter(v18);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v21[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "MuteNotificationsEntity Reminders App Intent title description", 62, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  IntentDescription.init(_:categoryName:searchKeywords:)(v15, v2, _swiftEmptyArrayStorage);
  v19 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v17, 0, 1, v19);
}

uint64_t sub_10007CFBC()
{
  uint64_t result;

  result = swift_getKeyPath(&unk_10008DE98);
  qword_1000BA000 = result;
  return result;
}

uint64_t sub_10007CFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  v4 = sub_100006DA4(&qword_1000AD0E8);
  v3[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100006DA4(&qword_1000AD0F0);
  v3[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100006DA4(&qword_1000B0A60);
  v3[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IntentDialog(0);
  v3[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[13] = v8;
  v3[14] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006DA4(&qword_1000B0A68);
  v3[15] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[16] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[17] = swift_task_alloc(v11);
  v3[18] = swift_task_alloc(v11);
  return swift_task_switch(sub_10007D0EC, 0, 0);
}

uint64_t sub_10007D0EC()
{
  _QWORD *v0;
  _QWORD *v1;
  unint64_t v2;

  IntentParameter.wrappedValue.getter(v0 + 2);
  v1 = (_QWORD *)swift_task_alloc(async function pointer to IntentDialog._CapturedContent.init<>(entity:_:)[1]);
  v0[19] = v1;
  v2 = sub_10007DC30();
  *v1 = v0;
  v1[1] = sub_10007D16C;
  return IntentDialog._CapturedContent.init<>(entity:_:)(v0[18], v0 + 2, sub_10007D4FC, 0, &type metadata for MuteNotificationsEntity, v2);
}

uint64_t sub_10007D16C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 152));
  return swift_task_switch(sub_10007D1C0, 0, 0);
}

uint64_t sub_10007D1C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 24));
  v1 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 160) = v1;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 192));
  *(_BYTE *)(v0 + 193) = *(_BYTE *)(v0 + 192);
  if (qword_1000AC9E8 != -1)
    swift_once(&qword_1000AC9E8, sub_10007CFBC);
  v2 = qword_1000BA000;
  *(_QWORD *)(v0 + 168) = qword_1000BA000;
  v3 = async function pointer to AppEntity._setValue<A, B, C>(_:for:)[1];
  swift_retain(v2);
  v4 = (_QWORD *)swift_task_alloc(v3);
  *(_QWORD *)(v0 + 176) = v4;
  v5 = sub_1000095B4(&qword_1000B0A48, &qword_1000B0A50, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v4 = v0;
  v4[1] = sub_10007D2BC;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 193, v2, &type metadata for Bool, v5);
}

uint64_t sub_10007D2BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v2);
  swift_release(v3);
  swift_release(v4);
  if (v0)
    v5 = sub_10000A56C;
  else
    v5 = sub_10007D33C;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_10007D33C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  v13 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v0 + 104);
  v15 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 80);
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 40));
  v8 = type metadata accessor for _GeneratedContentOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = type metadata accessor for _GeneratedContentFallback(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
  v10 = sub_10007C490();
  v11 = sub_10007DD94();
  IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)(sub_10007D4FC, 0, v7, v6, &type metadata for MuteNotificationsEntity.UpdateIntent_value);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v13);
  IntentDialog.init<A, B>(from:capturedContent:)(v5, v1, &type metadata for MuteNotificationsEntity.UpdateIntent_value, &type metadata for MuteNotificationsEntity, v10, v11);
  static IntentResult.result<A>(value:dialog:)(v0 + 40, v4, &type metadata for MuteNotificationsEntity, v11);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v4, v15);
  swift_release(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v13);
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v7);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007D500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_100006DA4(&qword_1000B0A70);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000AC9E8 != -1)
    swift_once(&qword_1000AC9E8, sub_10007CFBC);
  v4 = qword_1000BA000;
  swift_retain(qword_1000BA000);
  static _DialogBuilderEntity.buildExpression<A, B>(_:)(v5);
  swift_release(v4);
  v6 = sub_10007DD94();
  v7 = sub_1000095B4(&qword_1000B0A78, &qword_1000B0A70, (uint64_t)&protocol conformance descriptor for _NLGRepresentationEntity<A>);
  static _DialogBuilderEntity.buildBlock<A>(_:)(v3, &type metadata for MuteNotificationsEntity, v0, v6, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

double sub_10007D608()
{
  double result;

  if (qword_1000AC9E8 != -1)
    swift_once(&qword_1000AC9E8, sub_10007CFBC);
  *(_QWORD *)&result = swift_retain(qword_1000BA000).n128_u64[0];
  return result;
}

unint64_t sub_10007D64C()
{
  unint64_t result;

  result = qword_1000B08E8;
  if (!qword_1000B08E8)
  {
    result = swift_getWitnessTable(&unk_10008D7E0, &type metadata for MuteNotificationsEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_1000B08E8);
  }
  return result;
}

unint64_t sub_10007D694()
{
  unint64_t result;

  result = qword_1000B08F0;
  if (!qword_1000B08F0)
  {
    result = swift_getWitnessTable(&unk_10008D808, &type metadata for MuteNotificationsEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_1000B08F0);
  }
  return result;
}

uint64_t sub_10007D6D8(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_100093C38, 1) + 8);
}

uint64_t sub_10007D6FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10000BCB8(a1, a2, a3, (uint64_t (*)(void))sub_10007C490);
}

uint64_t sub_10007D708@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B568(&qword_1000AC9D8, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000B9FD0, (uint64_t)sub_10007CD54, a1);
}

uint64_t sub_10007D72C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1000AC9E0 != -1)
    swift_once(&qword_1000AC9E0, sub_10007CD78);
  v2 = sub_100006DA4(&qword_1000AD118);
  v3 = sub_10000CF70(v2, (uint64_t)qword_1000B9FE8);
  return sub_10000CFE8(v3, a1);
}

uint64_t sub_10007D78C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_1000B0A5C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000D198;
  return sub_10007CFE0(a1, v5, v4);
}

uint64_t sub_10007D7F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_10007ECBC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10007D814()
{
  return 0xD000000000000028;
}

unint64_t sub_10007D834()
{
  unint64_t result;

  result = qword_1000B0900;
  if (!qword_1000B0900)
  {
    result = swift_getWitnessTable(&unk_10008D864, &type metadata for MuteNotificationsEntity.MuteNotificationsQuery);
    atomic_store(result, (unint64_t *)&qword_1000B0900);
  }
  return result;
}

unint64_t sub_10007D87C()
{
  unint64_t result;

  result = qword_1000B0908;
  if (!qword_1000B0908)
  {
    result = swift_getWitnessTable(&unk_10008D998, &type metadata for MuteNotificationsEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0908);
  }
  return result;
}

uint64_t sub_10007D8C0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_10007D8D8, 0, 0);
}

uint64_t sub_10007D8D8()
{
  uint64_t v0;
  _BYTE *v1;
  id v2;
  unsigned __int8 v3;

  v1 = *(_BYTE **)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(REMUserDefaults), "daemonUserDefaults");
  v3 = objc_msgSend(v2, "enableAssignmentNotifications");

  *v1 = v3 ^ 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007D950(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 16) = *a2;
  return swift_task_switch(sub_10007D96C, 0, 0);
}

uint64_t sub_10007D96C()
{
  uint64_t v0;
  char v1;
  id v2;

  v1 = *(_BYTE *)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(REMUserDefaults), "daemonUserDefaults");
  objc_msgSend(v2, "setEnableAssignmentNotifications:", (v1 & 1) == 0);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007D9D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = type metadata accessor for LocalizedStringResource(0);
  *(_QWORD *)(v1 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10007DA30, 0, 0);
}

uint64_t sub_10007DA30()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_100006DA4(&qword_1000B08E0);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000012, 0x8000000100091980);
  v3 = sub_1000095B4(&qword_1000B0A48, &qword_1000B0A50, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v2 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v1, &unk_1000B0A38, 0, &unk_1000B0A40, 0, &type metadata for MuteNotificationsEntity.UpdateIntent_value, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_10007DAF0()
{
  unint64_t result;

  result = qword_1000B0918;
  if (!qword_1000B0918)
  {
    result = swift_getWitnessTable(&unk_10008D89C, &type metadata for MuteNotificationsEntity.MuteNotificationsQuery);
    atomic_store(result, (unint64_t *)&qword_1000B0918);
  }
  return result;
}

uint64_t sub_10007DB34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to _UniqueEntityQuery.allEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_10007DEB0();
  *v4 = v2;
  v4[1] = sub_10000AE40;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10007DBA0()
{
  unint64_t result;

  result = qword_1000B0928;
  if (!qword_1000B0928)
  {
    result = swift_getWitnessTable(&unk_10008D8F4, &type metadata for MuteNotificationsEntity.MuteNotificationsQuery);
    atomic_store(result, (unint64_t *)&qword_1000B0928);
  }
  return result;
}

unint64_t sub_10007DBE8()
{
  unint64_t result;

  result = qword_1000B0930;
  if (!qword_1000B0930)
  {
    result = swift_getWitnessTable(&unk_10008D954, &type metadata for MuteNotificationsEntity.MuteNotificationsQuery);
    atomic_store(result, (unint64_t *)&qword_1000B0930);
  }
  return result;
}

unint64_t sub_10007DC30()
{
  unint64_t result;

  result = qword_1000B0938[0];
  if (!qword_1000B0938[0])
  {
    result = swift_getWitnessTable(&unk_10008D9F8, &type metadata for MuteNotificationsEntity);
    atomic_store(result, qword_1000B0938);
  }
  return result;
}

uint64_t sub_10007DC74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to _UniqueEntityQuery.entities(for:)[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10007DEB0();
  *v5 = v2;
  v5[1] = sub_10000AFE8;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10007DCE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to _UniqueEntityQuery.suggestedEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_10007DEB0();
  *v4 = v2;
  v4[1] = sub_10000D19C;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10007DD4C()
{
  unint64_t result;

  result = qword_1000B0950;
  if (!qword_1000B0950)
  {
    result = swift_getWitnessTable(&unk_10008D97C, &type metadata for MuteNotificationsEntity.MuteNotificationsQuery);
    atomic_store(result, (unint64_t *)&qword_1000B0950);
  }
  return result;
}

unint64_t sub_10007DD94()
{
  unint64_t result;

  result = qword_1000B0958;
  if (!qword_1000B0958)
  {
    result = swift_getWitnessTable(&unk_10008DB40, &type metadata for MuteNotificationsEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0958);
  }
  return result;
}

unint64_t sub_10007DDDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B0960;
  if (!qword_1000B0960)
  {
    v1 = sub_100007258(qword_1000B0968);
    sub_10007DD94();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1000B0960);
  }
  return result;
}

uint64_t sub_10007DE40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10007DAF0();
  *v5 = v2;
  v5[1] = sub_10000B208;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_10007DEB0()
{
  unint64_t result;

  result = qword_1000B0980;
  if (!qword_1000B0980)
  {
    result = swift_getWitnessTable(&unk_10008D824, &type metadata for MuteNotificationsEntity.MuteNotificationsQuery);
    atomic_store(result, (unint64_t *)&qword_1000B0980);
  }
  return result;
}

uint64_t sub_10007DEF4()
{
  uint64_t v0;

  v0 = qword_1000B08B8;
  swift_bridgeObjectRetain(off_1000B08C0);
  return v0;
}

unint64_t sub_10007DF2C()
{
  unint64_t result;

  result = qword_1000B0988;
  if (!qword_1000B0988)
  {
    result = swift_getWitnessTable(&unk_10008DA50, &type metadata for MuteNotificationsEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0988);
  }
  return result;
}

unint64_t sub_10007DF74()
{
  unint64_t result;

  result = qword_1000B0990;
  if (!qword_1000B0990)
  {
    result = swift_getWitnessTable(&unk_10008DA88, &type metadata for MuteNotificationsEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0990);
  }
  return result;
}

unint64_t sub_10007DFBC()
{
  unint64_t result;

  result = qword_1000B0998;
  if (!qword_1000B0998)
  {
    result = swift_getWitnessTable(&unk_10008DAB8, &type metadata for MuteNotificationsEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0998);
  }
  return result;
}

unint64_t sub_10007E004()
{
  unint64_t result;

  result = qword_1000B09A0;
  if (!qword_1000B09A0)
  {
    result = swift_getWitnessTable(&unk_10008DAF0, &type metadata for MuteNotificationsEntity);
    atomic_store(result, (unint64_t *)&qword_1000B09A0);
  }
  return result;
}

unint64_t sub_10007E04C()
{
  unint64_t result;

  result = qword_1000B09A8;
  if (!qword_1000B09A8)
  {
    result = swift_getWitnessTable(&unk_10008DB18, &type metadata for MuteNotificationsEntity);
    atomic_store(result, (unint64_t *)&qword_1000B09A8);
  }
  return result;
}

unint64_t sub_10007E094()
{
  unint64_t result;

  result = qword_1000B09B0;
  if (!qword_1000B09B0)
  {
    result = swift_getWitnessTable(&unk_10008DB98, &type metadata for MuteNotificationsEntity);
    atomic_store(result, (unint64_t *)&qword_1000B09B0);
  }
  return result;
}

uint64_t sub_10007E0D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_10007D87C();
  result = _UniqueEntity.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_10007E114@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B568(&qword_1000AC9D0, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000B9FB8, (uint64_t)sub_10007C730, a1);
}

uint64_t sub_10007E138()
{
  return sub_1000095B4(&qword_1000B09B8, &qword_1000B09C0, (uint64_t)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_10007E164(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10007DC30();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10007E1A0()
{
  unint64_t result;

  result = qword_1000B09C8;
  if (!qword_1000B09C8)
  {
    result = swift_getWitnessTable(&unk_10008DBC8, &type metadata for MuteNotificationsEntity);
    atomic_store(result, (unint64_t *)&qword_1000B09C8);
  }
  return result;
}

uint64_t sub_10007E1E8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10007E094();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10007E224()
{
  unint64_t result;

  result = qword_1000B09D0;
  if (!qword_1000B09D0)
  {
    result = swift_getWitnessTable(&unk_10008DC28, &type metadata for MuteNotificationsEntity);
    atomic_store(result, (unint64_t *)&qword_1000B09D0);
  }
  return result;
}

uint64_t sub_10007E268(uint64_t a1)
{
  unint64_t v2;

  if (qword_1000AC870 != -1)
    swift_once(&qword_1000AC870, sub_10001D51C);
  String.append(_:)((Swift::String)xmmword_1000B9E18);
  v2 = sub_10007DC30();
  return _EntityURLRepresentation.init(_:)(0xD000000000000041, 0x800000010008E910, a1, v2);
}

uint64_t sub_10007E30C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_10007F370();
  v4 = _URLRepresentableEntity.urlRepresentationParameter.getter(a1, v3);
  return sub_10000CFC8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8), v1, v4, v5);
}

unint64_t sub_10007E358()
{
  unint64_t result;

  result = qword_1000B09E0;
  if (!qword_1000B09E0)
  {
    result = swift_getWitnessTable(&unk_10008DD20, &type metadata for OpenMuteNotificationsDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000B09E0);
  }
  return result;
}

uint64_t sub_10007E39C(uint64_t a1)
{
  return sub_10000B860(a1, qword_1000BA008, 0xD00000000000001FLL, 0x8000000100091960);
}

uint64_t sub_10007E3C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000044, 0x80000001000918D0);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "OpenMuteNotificationsDeepLink Reminders App Intent description", 62, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t sub_10007E5DC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_10007F2E8();
  v5 = sub_10007F370();
  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_10007E630()
{
  uint64_t v0;

  v0 = qword_1000B08C8;
  swift_bridgeObjectRetain(off_1000B08D0);
  return v0;
}

unint64_t sub_10007E668()
{
  unint64_t result;

  result = qword_1000B09E8;
  if (!qword_1000B09E8)
  {
    result = swift_getWitnessTable(&unk_10008DDD8, &type metadata for OpenMuteNotificationsDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000B09E8);
  }
  return result;
}

unint64_t sub_10007E6B0()
{
  unint64_t result;

  result = qword_1000B09F0;
  if (!qword_1000B09F0)
  {
    result = swift_getWitnessTable(&unk_10008DE00, &type metadata for OpenMuteNotificationsDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000B09F0);
  }
  return result;
}

uint64_t sub_10007E6F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10000BCB8(a1, a2, a3, (uint64_t (*)(void))sub_10007C4D4);
}

uint64_t sub_10007E700@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B568(&qword_1000AC9F0, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000BA008, (uint64_t)sub_10007E39C, a1);
}

uint64_t sub_10007E728(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to _URLRepresentableIntent<>.perform()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10007F2E8();
  v7 = sub_10007F32C();
  v8 = sub_10007F370();
  *v5 = v2;
  v5[1] = sub_10000BDBC;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_10007E7B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_10007EFE0();
  *a1 = result;
  return result;
}

uint64_t sub_10007E7D8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10007C4D4();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenMuteNotificationsDeepLink()
{
  return &type metadata for OpenMuteNotificationsDeepLink;
}

ValueMetadata *type metadata accessor for MuteNotificationsEntity.MuteNotificationsQuery()
{
  return &type metadata for MuteNotificationsEntity.MuteNotificationsQuery;
}

ValueMetadata *type metadata accessor for MuteNotificationsEntity()
{
  return &type metadata for MuteNotificationsEntity;
}

ValueMetadata *type metadata accessor for MuteNotificationsEntity.UpdateIntent_value()
{
  return &type metadata for MuteNotificationsEntity.UpdateIntent_value;
}

uint64_t sub_10007E840()
{
  return sub_1000095B4(&qword_1000B0A00, &qword_1000B0A08, (uint64_t)&protocol conformance descriptor for <> IntentResultContainer<A, B, C, D>);
}

uint64_t sub_10007E86C()
{
  return sub_1000095B4(&qword_1000B0A10, &qword_1000B0A08, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_10007E898@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t OpaqueTypeConformance2;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v47 = a1;
  v1 = sub_100006DA4(&qword_1000AD120);
  v40 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100006DA4(&qword_1000AD128);
  v42 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100006DA4(&qword_1000AD130);
  v8 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  v44 = v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100006DA4(&qword_1000AD138);
  v12 = *(_QWORD *)(v11 - 8);
  v45 = v11;
  v46 = v12;
  __chkstk_darwin(v11);
  v41 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_10008DE98);
  v15 = sub_100006DA4(&qword_1000AD140);
  v16 = sub_100006DA4(&qword_1000AD148);
  v17 = sub_10007D87C();
  v18 = sub_1000095B4(&qword_1000AD150, &qword_1000AD140, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v19 = sub_10000D050();
  ControlToggle.init<A, B, C, D, E, F, G>(kind:intentUpdatableProperty:title:subtitle:value:)(0xD000000000000034, 0x8000000100091D00, KeyPath, sub_10007EC5C, 0, sub_10000C498, 0, sub_10000C630, 0, v15, &type metadata for Text, v16, v17, v18, &protocol witness table for Text, v19);
  v20 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000016, 0x8000000100091D40);
  v22 = v21;
  LOBYTE(v16) = v23;
  v25 = v24;
  v26 = sub_1000095B4(&qword_1000AD160, &qword_1000AD120, (uint64_t)&protocol conformance descriptor for ControlToggle<A>);
  WidgetConfiguration.configurationDisplayName(_:)(v20, v22, v16 & 1, v25, v1, v26);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v22);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v3, v1);
  v27 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000040, 0x8000000100091D60);
  v29 = v28;
  LOBYTE(v3) = v30;
  v32 = v31;
  v48 = v1;
  v49 = v26;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v48, &opaque type descriptor for <<opaque return type of WidgetConfiguration.configurationDisplayName(_:)>>, 1);
  WidgetConfiguration.description(_:)(v27, v29, v3 & 1, v32, v4, OpaqueTypeConformance2);
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(v29);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v4);
  v48 = v4;
  v49 = OpaqueTypeConformance2;
  v34 = swift_getOpaqueTypeConformance2(&v48, &opaque type descriptor for <<opaque return type of WidgetConfiguration.description(_:)>>, 1);
  v35 = v41;
  v36 = v43;
  WidgetConfiguration.disablesControlStateCaching()(v43, v34);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v36);
  v48 = v36;
  v49 = v34;
  v37 = swift_getOpaqueTypeConformance2(&v48, &opaque type descriptor for <<opaque return type of WidgetConfiguration.disablesControlStateCaching()>>, 1);
  v38 = v45;
  WidgetConfiguration.hiddenControl()(v45, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v35, v38);
}

uint64_t sub_10007EC5C()
{
  uint64_t v0;

  v0 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000012, 0x8000000100091980);
  return Label<>.init(_:systemImage:)(v0);
}

uint64_t sub_10007ECBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  char *v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v25;
  void (*v26)(char *);
  unsigned int v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  char *v30;
  char v31;
  uint64_t v32;

  v0 = sub_100006DA4(&qword_1000AD088);
  __chkstk_darwin(v0);
  v30 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for InputConnectionBehavior(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v29 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100006DA4(&qword_1000AD070);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v25 - v9;
  v11 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LocalizedStringResource(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100006DA4(&qword_1000B0A18);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001CLL, 0x8000000100091C10);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  v32 = 0;
  v18 = type metadata accessor for IntentDialog(0);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v10, 1, 1, v18);
  v19(v8, 1, 1, v18);
  v27 = enum case for InputConnectionBehavior.default(_:);
  v26 = *(void (**)(char *))(v3 + 104);
  v20 = v29;
  v26(v29);
  v21 = sub_10007DC30();
  v25 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v17, v13, &v32, v10, v8, v20, v21);
  sub_100006DA4(&qword_1000AD090);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000032, 0x8000000100091C30);
  v28(v13, 1, 1, v14);
  v31 = 2;
  v22 = type metadata accessor for Bool.IntentDisplayName(0);
  v23 = v30;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v30, 1, 1, v22);
  v19(v10, 1, 1, v18);
  ((void (*)(char *, _QWORD, uint64_t))v26)(v20, v27, v2);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v17, v13, &v31, v23, v10, v20);
  return v25;
}

uint64_t sub_10007EFE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  char *v27;
  char *v28;
  unint64_t v29;
  _QWORD v31[2];
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v34 = *(_QWORD *)(v0 - 8);
  v35 = v0;
  __chkstk_darwin(v0);
  v33 = (char *)v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100006DA4(&qword_1000AD070);
  v3 = __chkstk_darwin(v2);
  v32 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (char *)v31 - v5;
  v7 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v7);
  v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Locale(0);
  __chkstk_darwin(v14);
  v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v17);
  v19 = (char *)v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for LocalizedStringResource(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[1] = sub_100006DA4(&qword_1000B0A18);
  v24 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000100091880);
  static Locale.current.getter(v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0, 0, v16, v13, "Open Mute Notifications deepLink parameter", 42, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v9, 1, 1, v20);
  v36 = 0;
  v25 = type metadata accessor for IntentDialog(0);
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v26(v6, 1, 1, v25);
  v27 = v32;
  v26(v32, 1, 1, v25);
  v28 = v33;
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v33, enum case for InputConnectionBehavior.default(_:), v35);
  v29 = sub_10007DC30();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v23, v9, &v36, v6, v27, v28, v29);
}

unint64_t sub_10007F2E8()
{
  unint64_t result;

  result = qword_1000B0A20;
  if (!qword_1000B0A20)
  {
    result = swift_getWitnessTable(&unk_10008DC50, &type metadata for OpenMuteNotificationsDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000B0A20);
  }
  return result;
}

unint64_t sub_10007F32C()
{
  unint64_t result;

  result = qword_1000B0A28;
  if (!qword_1000B0A28)
  {
    result = swift_getWitnessTable(&unk_10008DCA0, &type metadata for OpenMuteNotificationsDeepLink);
    atomic_store(result, (unint64_t *)&qword_1000B0A28);
  }
  return result;
}

unint64_t sub_10007F370()
{
  unint64_t result;

  result = qword_1000B0A30;
  if (!qword_1000B0A30)
  {
    result = swift_getWitnessTable(&unk_10008DBF0, &type metadata for MuteNotificationsEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0A30);
  }
  return result;
}

uint64_t sub_10007F3B4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

ValueMetadata *type metadata accessor for MuteNotificationsToggleControl()
{
  return &type metadata for MuteNotificationsToggleControl;
}

uint64_t sub_10007F3D0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100093C98, 1);
}

void sub_10007F3E0(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t Subtasks;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  ValueMetadata *v63;
  _QWORD v64[4];
  _OWORD v65[3];
  uint64_t v66;

  v60 = a1;
  v1 = type metadata accessor for TTRTodayComplicationWidgetProvider(0);
  v2 = __chkstk_darwin(v1);
  v58 = (uint64_t)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v62 = (uint64_t)&v58 - v4;
  Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
  v6 = *(_QWORD *)(Subtasks - 8);
  __chkstk_darwin(Subtasks);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006DA4(&qword_1000AF8A0);
  __chkstk_darwin(v9);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(objc_allocWithZone((Class)REMStore), "init");
  v13 = enum case for REMRemindersListDataView.SortingDirection.ascending(_:);
  v14 = type metadata accessor for REMRemindersListDataView.SortingDirection(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v11, v13, v14);
  v15 = enum case for REMRemindersListDataView.SortingStyle.displayDate(_:);
  v16 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v11, v15, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v11, 0, 1, v16);
  type metadata accessor for RDIDispatchQueue(0);
  v18 = v12;
  v19 = (void *)static RDIDispatchQueue.storeQueue.getter();
  v20 = type metadata accessor for TTRNewWidgetInteractor(0);
  v21 = (_QWORD *)swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v21[2] = 0x4000000000000000;
  v21[3] = v18;
  v21[4] = v19;
  sub_10007161C((uint64_t)v11, (uint64_t)v21 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_sortingStyle);
  v22 = type metadata accessor for TTRNewWidgetInteractor.CompletedCache();
  v23 = swift_allocObject(v22, 128, 15);
  v24 = v18;
  v25 = v19;
  swift_defaultActor_initialize(v23);
  *(_QWORD *)(v23 + 112) = 0x4000000000000000;
  *(_QWORD *)(v23 + 120) = &_swiftEmptyDictionarySingleton;
  v26 = v60;
  sub_100071664((uint64_t)v11);
  *(_QWORD *)((char *)v21 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache) = v23;

  v27 = type metadata accessor for TTRNewWidgetRouter();
  v28 = swift_allocObject(v27, 16, 7);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for REMRemindersListDataView.FetchSubtasks.on(_:), Subtasks);
  v66 = 0;
  memset(v65, 0, sizeof(v65));
  v64[2] = v27;
  v64[3] = &off_1000AA260;
  v63 = (ValueMetadata *)v28;
  v29 = type metadata accessor for TTRNewWidgetPresenter(0);
  v30 = swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  v31 = sub_100071BB8((uint64_t)&v63, v27);
  __chkstk_darwin(v31);
  v33 = (uint64_t *)((char *)&v58 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v34 + 16))(v33);
  v35 = *v33;
  swift_retain(v21);
  v61 = v28;
  swift_retain(v28);
  v36 = sub_100080078((uint64_t)v21, v35, (uint64_t)v8, (uint64_t)v65, 1, 1, v30);
  sub_10001D26C(&v63);
  *v26 = v36;
  v59 = v1;
  v37 = (char *)v26 + *(int *)(v1 + 20);
  v38 = enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:);
  v39 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v37, v38, v39);
  v40 = enum case for REMNavigationSpecifier.today(_:);
  v41 = type metadata accessor for REMNavigationSpecifier(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v37, v40, v41);
  v42 = qword_1000AC9F8;
  swift_retain(v36);
  if (v42 != -1)
    swift_once(&qword_1000AC9F8, sub_10007F9A8);
  v43 = type metadata accessor for Logger(0);
  sub_10000CF70(v43, (uint64_t)qword_1000B0A80);
  v44 = v62;
  v45 = sub_1000801BC((uint64_t)v26, v62);
  v46 = Logger.logObject.getter(v45);
  v47 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = swift_slowAlloc(22, -1);
    v49 = swift_slowAlloc(64, -1);
    *(_QWORD *)&v65[0] = v49;
    *(_DWORD *)v48 = 136446466;
    v63 = &type metadata for TTRTodayComplicationWidgetAssembly;
    v50 = sub_100006DA4(&qword_1000B0A98);
    v51 = String.init<A>(describing:)(&v63, v50);
    v60 = (uint64_t *)v24;
    v53 = v52;
    v63 = (ValueMetadata *)sub_10007FA38(v51, v52, (uint64_t *)v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, v64, v48 + 4, v48 + 12);
    swift_bridgeObjectRelease(v53);
    *(_WORD *)(v48 + 12) = 2080;
    v54 = v58;
    sub_1000801BC(v44, v58);
    v55 = String.init<A>(describing:)(v54, v59);
    v57 = v56;
    v63 = (ValueMetadata *)sub_10007FA38(v55, v56, (uint64_t *)v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, v64, v48 + 14, v48 + 22);
    swift_bridgeObjectRelease(v57);
    sub_100080200(v44);
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "%{public}s: Created provider %s", (uint8_t *)v48, 0x16u);
    swift_arrayDestroy(v49, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v49, -1, -1);
    swift_slowDealloc(v48, -1, -1);

    swift_release(v21);
    swift_release(v61);
    swift_release(v36);
  }
  else
  {
    swift_release(v36);
    swift_release(v61);
    swift_release(v21);

    sub_100080200(v44);
  }

}

uint64_t sub_10007F9A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000CF88(v0, qword_1000B0A80);
  v1 = sub_10000CF70(v0, (uint64_t)qword_1000B0A80);
  if (qword_1000AC888 != -1)
    swift_once(&qword_1000AC888, sub_10001D5C8);
  v2 = sub_10000CF70(v0, (uint64_t)qword_1000B9E48);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10007FA38(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  void *ObjectType;

  v6 = sub_10007FB08(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType(v6);
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_10008023C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_10008023C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain(a2);
  }
  sub_10001D26C(v12);
  return v7;
}

uint64_t sub_10007FB08(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_10007FCC0(a5, a6);
    *a1 = v13;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v14, 1173, 0);
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

uint64_t sub_10007FCC0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)sub_10007FD54(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_10007FF2C(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_10007FF2C(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

_QWORD *sub_10007FD54(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_10007FEC8(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return &_swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_10007FEC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return &_swiftEmptyArrayStorage;
  v4 = sub_100006DA4(&qword_1000B0AA0);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_10007FF2C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100006DA4(&qword_1000B0AA0);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)&_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100080078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7)
{
  Swift::String *v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t Subtasks;
  __int128 v20;
  uint64_t v21;
  _UNKNOWN **v22;

  v21 = type metadata accessor for TTRNewWidgetRouter();
  v22 = &off_1000AA260;
  *(_QWORD *)&v20 = a2;
  v14 = (Swift::String *)(a7 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_moreFormatString);
  v15._object = (void *)0x8000000100091F90;
  v16._countAndFlagsBits = 0x65726F4D2040252BLL;
  v16._object = (void *)0xE800000000000000;
  v15._countAndFlagsBits = 0xD00000000000001BLL;
  *v14 = TTRLocalizedString(_:comment:)(v16, v15);
  *(_OWORD *)(a7 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_timeDelta) = xmmword_10008DF20;
  *(_QWORD *)(a7 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_overlapDelta) = 0x406E000000000000;
  *(_QWORD *)(a7 + 16) = a1;
  *(_QWORD *)(a7 + 24) = &off_1000A8620;
  sub_100006E64(&v20, a7 + 32);
  v17 = a7 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_fetchSubtasks;
  Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(Subtasks - 8) + 32))(v17, a3, Subtasks);
  sub_100080278(a4, a7 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_shareeInfoStyle);
  *(_BYTE *)(a7 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_displayDateStyleForBaseReminder) = a5;
  *(_BYTE *)(a7
           + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_displayDateStyleForInterestingReminder) = a6;
  return a7;
}

uint64_t sub_1000801BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRTodayComplicationWidgetProvider(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100080200(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRTodayComplicationWidgetProvider(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10008023C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100080278(uint64_t a1, uint64_t a2)
{
  initializeWithTake for TTRNewWidgetPresenter.ShareeInfoStyle(a2, a1);
  return a2;
}

ValueMetadata *type metadata accessor for TTRTodayComplicationWidgetAssembly()
{
  return &type metadata for TTRTodayComplicationWidgetAssembly;
}

uint64_t sub_1000802C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000CF88(v0, qword_1000B0AA8);
  v1 = sub_10000CF70(v0, (uint64_t)qword_1000B0AA8);
  if (qword_1000AC888 != -1)
    swift_once(&qword_1000AC888, sub_10001D5C8);
  v2 = sub_10000CF70(v0, (uint64_t)qword_1000B9E48);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100080354()
{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10000CF88(v0, qword_1000BA020);
  sub_10000CF70(v0, (uint64_t)qword_1000BA020);
  return LocalizedStringResource.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000100091FB0);
}

uint64_t sub_1000803B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[16] = a3;
  v4[17] = a4;
  v4[14] = a1;
  v4[15] = a2;
  v5 = type metadata accessor for Date(0);
  v4[18] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[19] = v6;
  v4[20] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100080418, 0, 0);
}

uint64_t sub_100080418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  _QWORD *v20;

  if (qword_1000ACA00 != -1)
    swift_once(&qword_1000ACA00, sub_1000802C4);
  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = type metadata accessor for Logger(0);
  sub_10000CF70(v4, (uint64_t)qword_1000B0AA8);
  swift_retain_n(v3, 4);
  swift_retain_n(v1, 4);
  v5 = swift_retain_n(v2, 4);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v10 = *(_QWORD *)(v0 + 128);
  v9 = *(_QWORD *)(v0 + 136);
  v11 = *(_QWORD *)(v0 + 120);
  if (v8)
  {
    v12 = swift_slowAlloc(18, -1);
    v13 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v12 = 138412546;
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 80));
    v14 = *(_QWORD *)(v0 + 80);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
    *(_QWORD *)(v0 + 104) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v0 + 112, v12 + 4, v12 + 12);
    *v13 = v14;
    swift_release_n(v11, 2);
    swift_release_n(v10, 2);
    swift_release_n(v9, 2);
    *(_WORD *)(v12 + 12) = 1024;
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 197));
    swift_release(v11);
    swift_release(v10);
    swift_release(v9);
    *(_DWORD *)(v0 + 192) = *(unsigned __int8 *)(v0 + 197);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 192, v0 + 196, v12 + 14, v12 + 18);
    swift_release(v11);
    swift_release(v10);
    swift_release(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "ReminderSetCompletedIntent reminder %@ setting completed %{BOOL}d", (uint8_t *)v12, 0x12u);
    v15 = sub_100006DA4(&qword_1000B0048);
    swift_arrayDestroy(v13, 1, v15);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    swift_release_n(*(_QWORD *)(v0 + 120), 4);
    swift_release_n(v10, 4);
    swift_release_n(v9, 4);
  }

  v16 = sub_1000833A0();
  AppDependency.wrappedValue.getter(v16);
  sub_10001E184((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 56));
  v17 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 168) = v17;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  v18 = IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 196));
  v19 = *(_BYTE *)(v0 + 196);
  Date.init()(v18);
  v20 = (_QWORD *)swift_task_alloc(dword_1000AF8AC);
  *(_QWORD *)(v0 + 176) = v20;
  *v20 = v0;
  v20[1] = sub_100080718;
  return sub_100055F2C(v17, v19, *(_QWORD *)(v0 + 160));
}

uint64_t sub_100080718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *(void **)(*(_QWORD *)v1 + 168);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);

  if (v0)
    v7 = sub_1000807F4;
  else
    v7 = sub_1000807A8;
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_1000807A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = sub_10001D26C((_QWORD *)(v0 + 16));
  static IntentResult.result<>()(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000807F4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  sub_10001D26C((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100080834@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B568(&qword_1000ACA08, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000BA020, (uint64_t)sub_100080354, a1);
}

uint64_t sub_10008085C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *v1;
  v5 = v1[1];
  v6 = v1[2];
  v7 = (_QWORD *)swift_task_alloc(dword_1000B0BCC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D198;
  return sub_1000803B4(a1, v4, v5, v6);
}

uint64_t sub_1000808C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_10008303C();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_1000808F0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000177B8();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_100080918()
{
  uint64_t v0;

  v0 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10000CF88(v0, qword_1000BA038);
  sub_10000CF70(v0, (uint64_t)qword_1000BA038);
  return TypeDisplayRepresentation.init(stringLiteral:)(0x7265646E696D6552, 0xE800000000000000);
}

id sub_100080974@<X0>(void **a1@<X8>)
{
  void **v1;
  void *v2;

  v2 = *v1;
  *a1 = *v1;
  return v2;
}

uint64_t sub_100080980@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B568(&qword_1000ACA10, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000BA038, (uint64_t)sub_100080918, a1);
}

uint64_t sub_1000809A4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000812B4();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_1000809DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 8);
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain(v1);
  return DisplayRepresentation.init(stringLiteral:)(v2, v1);
}

uint64_t sub_100080A18(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000810F4();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

id sub_100080A50()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)REMStore), "initUserInteractive:", 1);
  qword_1000B0AC0 = (uint64_t)result;
  return result;
}

uint64_t sub_100080A84(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1000B0BA0 + dword_1000B0BA0);
  v3 = (_QWORD *)swift_task_alloc(unk_1000B0BA4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000AFE8;
  return v5(a1);
}

uint64_t sub_100080AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.suggestedEntities()[1]);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000B208;
  return EntityQuery.suggestedEntities()(a1, a2, a3);
}

uint64_t sub_100080B50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_100080FB0();
  *v5 = v2;
  v5[1] = sub_10000D198;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t REMObjectID.entityIdentifierString.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v8;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin();
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(v0, "urlRepresentation");
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  v6 = URL.absoluteString.getter();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

id static REMObjectID.entityIdentifier(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  NSURL *v14;
  void *v15;
  void *v16;
  uint64_t v18;

  v3 = v2;
  v6 = sub_100006DA4(&qword_1000ACC78);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(a1, a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100080DB4((uint64_t)v8);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    URL._bridgeToObjectiveC()(v14);
    v16 = v15;
    v13 = objc_msgSend((id)swift_getObjCClassFromMetadata(v3), "objectIDWithURL:", v15);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v13;
}

uint64_t sub_100080DB4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006DA4(&qword_1000ACC78);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100080DF8()
{
  unint64_t result;

  result = qword_1000B0AC8;
  if (!qword_1000B0AC8)
  {
    result = swift_getWitnessTable(&unk_10008DFF0, &type metadata for TTRReminderSetCompletedIntent);
    atomic_store(result, (unint64_t *)&qword_1000B0AC8);
  }
  return result;
}

unint64_t sub_100080E40()
{
  unint64_t result;

  result = qword_1000B0AD0;
  if (!qword_1000B0AD0)
  {
    result = swift_getWitnessTable(&unk_10008E018, &type metadata for TTRReminderSetCompletedIntent);
    atomic_store(result, (unint64_t *)&qword_1000B0AD0);
  }
  return result;
}

uint64_t sub_100080E84(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100093D50, 1);
}

uint64_t sub_100080E94(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_1000177B8();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

unint64_t sub_100080ED8()
{
  unint64_t result;

  result = qword_1000B0AE0;
  if (!qword_1000B0AE0)
  {
    result = swift_getWitnessTable(&unk_10008E08C, &type metadata for TTRReminderAppEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0AE0);
  }
  return result;
}

unint64_t sub_100080F20()
{
  unint64_t result;

  result = qword_1000B0AE8;
  if (!qword_1000B0AE8)
  {
    result = swift_getWitnessTable(&unk_10008E0C4, &type metadata for TTRReminderAppEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0AE8);
  }
  return result;
}

unint64_t sub_100080F68()
{
  unint64_t result;

  result = qword_1000B0AF0;
  if (!qword_1000B0AF0)
  {
    result = swift_getWitnessTable(&unk_10008E0F4, &type metadata for TTRReminderAppEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0AF0);
  }
  return result;
}

unint64_t sub_100080FB0()
{
  unint64_t result;

  result = qword_1000B0AF8;
  if (!qword_1000B0AF8)
  {
    result = swift_getWitnessTable(&unk_10008E22C, &type metadata for TTRReminderAppEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1000B0AF8);
  }
  return result;
}

uint64_t sub_100080FF4()
{
  return sub_10008115C(&qword_1000B0B00, (uint64_t)&protocol conformance descriptor for REMObjectID);
}

unint64_t sub_10008101C()
{
  unint64_t result;

  result = qword_1000B0B08;
  if (!qword_1000B0B08)
  {
    result = swift_getWitnessTable(&unk_10008E12C, &type metadata for TTRReminderAppEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0B08);
  }
  return result;
}

unint64_t sub_100081064()
{
  unint64_t result;

  result = qword_1000B0B10;
  if (!qword_1000B0B10)
  {
    result = swift_getWitnessTable(&unk_10008E154, &type metadata for TTRReminderAppEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0B10);
  }
  return result;
}

unint64_t sub_1000810AC()
{
  unint64_t result;

  result = qword_1000B0B18;
  if (!qword_1000B0B18)
  {
    result = swift_getWitnessTable(&unk_10008E17C, &type metadata for TTRReminderAppEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0B18);
  }
  return result;
}

unint64_t sub_1000810F4()
{
  unint64_t result;

  result = qword_1000B0B20;
  if (!qword_1000B0B20)
  {
    result = swift_getWitnessTable(&unk_10008E1D4, &type metadata for TTRReminderAppEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0B20);
  }
  return result;
}

uint64_t sub_100081138()
{
  return sub_10008115C((unint64_t *)&qword_1000AF880, (uint64_t)&protocol conformance descriptor for NSObject);
}

uint64_t sub_10008115C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_100058A28(255, &qword_1000AF878, REMObjectID_ptr);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000811AC()
{
  return sub_1000095B4(&qword_1000B0B28, &qword_1000B0B30, (uint64_t)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

unint64_t sub_1000811DC()
{
  unint64_t result;

  result = qword_1000B0B38;
  if (!qword_1000B0B38)
  {
    result = swift_getWitnessTable(&unk_10008E204, &type metadata for TTRReminderAppEntity);
    atomic_store(result, (unint64_t *)&qword_1000B0B38);
  }
  return result;
}

unint64_t sub_100081224()
{
  unint64_t result;

  result = qword_1000B0B40;
  if (!qword_1000B0B40)
  {
    result = swift_getWitnessTable(&unk_10008E284, &type metadata for TTRReminderAppEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1000B0B40);
  }
  return result;
}

unint64_t sub_10008126C()
{
  unint64_t result;

  result = qword_1000B0B48;
  if (!qword_1000B0B48)
  {
    result = swift_getWitnessTable(&unk_10008E2E4, &type metadata for TTRReminderAppEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1000B0B48);
  }
  return result;
}

unint64_t sub_1000812B4()
{
  unint64_t result;

  result = qword_1000B0B50[0];
  if (!qword_1000B0B50[0])
  {
    result = swift_getWitnessTable(&unk_10008E034, &type metadata for TTRReminderAppEntity);
    atomic_store(result, qword_1000B0B50);
  }
  return result;
}

unint64_t sub_1000812FC()
{
  unint64_t result;

  result = qword_1000B0B68;
  if (!qword_1000B0B68)
  {
    result = swift_getWitnessTable(&unk_10008E30C, &type metadata for TTRReminderAppEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1000B0B68);
  }
  return result;
}

unint64_t sub_100081344()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B0B70;
  if (!qword_1000B0B70)
  {
    v1 = sub_100007258(qword_1000B0B78);
    sub_1000810AC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1000B0B70);
  }
  return result;
}

uint64_t sub_1000813A8()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v8;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin();
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(*v0, "urlRepresentation");
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  v6 = URL.absoluteString.getter();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

id sub_10008145C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id result;

  result = static REMObjectID.entityIdentifier(for:)(a1, a2);
  *a3 = result;
  return result;
}

ValueMetadata *type metadata accessor for TTRReminderAppEntityQuery()
{
  return &type metadata for TTRReminderAppEntityQuery;
}

uint64_t destroy for TTRReminderAppEntity(uint64_t a1)
{

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

_QWORD *_s24RemindersWidgetExtension20TTRReminderAppEntityVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t assignWithCopy for TTRReminderAppEntity(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t assignWithTake for TTRReminderAppEntity(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease(v6);
  return a1;
}

ValueMetadata *type metadata accessor for TTRReminderAppEntity()
{
  return &type metadata for TTRReminderAppEntity;
}

uint64_t destroy for TTRReminderSetCompletedIntent(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  return swift_release(a1[2]);
}

uint64_t *_s24RemindersWidgetExtension29TTRReminderSetCompletedIntentVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  a1[2] = v5;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t *assignWithCopy for TTRReminderSetCompletedIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  return a1;
}

_QWORD *assignWithTake for TTRReminderSetCompletedIntent(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = a1[2];
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_release(v5);
  return a1;
}

uint64_t _s24RemindersWidgetExtension20TTRReminderAppEntityVwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_10008173C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRReminderSetCompletedIntent()
{
  return &type metadata for TTRReminderSetCompletedIntent;
}

uint64_t sub_10008178C()
{
  return sub_1000095B4(&qword_1000B0B90, &qword_1000B0B98, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_1000817B8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100081974(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1000817D4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100081AC0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1000817F0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10008241C(a1, a2, a3, (_QWORD *)*v3, &qword_1000ACB08, (uint64_t (*)(_QWORD))&type metadata accessor for WidgetFamily);
  *v3 = result;
  return result;
}

uint64_t sub_10008181C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100081DAC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100081838(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100081F34(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100081854(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10008241C(a1, a2, a3, (_QWORD *)*v3, &qword_1000AD938, type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
  *v3 = result;
  return result;
}

uint64_t sub_100081880(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000820D8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_10008189C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1000822C0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1000818B8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100081C0C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1000818D4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10008241C(a1, a2, a3, (_QWORD *)*v3, &qword_1000AD908, type metadata accessor for TTRNewWidgetViewModel.Reminder);
  *v3 = result;
  return result;
}

uint64_t sub_100081900(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10008241C(a1, a2, a3, (_QWORD *)*v3, &qword_1000AD918, type metadata accessor for TTRNewWidgetPresenter.Division);
  *v3 = result;
  return result;
}

uint64_t sub_10008192C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10008241C(a1, a2, a3, (_QWORD *)*v3, &qword_1000AFCF8, type metadata accessor for TTRNewWidgetTimelineEntry);
  *v3 = result;
  return result;
}

uint64_t sub_100081958(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1000825FC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100081974(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100006DA4(&qword_1000B0BD0);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)&_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100081AC0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100006DA4(&qword_1000B0BD8);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)&_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100081C0C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100006DA4(&qword_1000AD8E0);
    v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (unint64_t)(v11 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= v14 + 40 * v8)
      memmove(v11 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v14 >= v13 + 40 * v8 || v13 >= v14 + 40 * v8)
  {
    sub_100006DA4(&qword_1000AD8E8);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100081DAC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100006DA4(&qword_1000B0BE8);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 16 * v8)
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 16 * v8 || v14 >= v15 + 16 * v8)
  {
    sub_100006DA4(&qword_1000B0BF0);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100081F34(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100006DA4(&qword_1000B0BF8);
    v11 = (_QWORD *)swift_allocObject(v10, 48 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (unint64_t)(v11 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= v14 + 48 * v8)
      memmove(v11 + 4, a4 + 4, 48 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v14 >= v13 + 48 * v8 || v13 >= v14 + 48 * v8)
  {
    sub_100006DA4(&qword_1000AF9E0);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000820D8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_100006DA4(&qword_1000B0BE0);
  v11 = *(_QWORD *)(sub_100006DA4(&qword_1000AD8A8) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  v16 = j__malloc_size(v15);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v16 - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  v18 = sub_100006DA4(&qword_1000AD8A8);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v15 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v15 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v21, v22, v8, v18);
    }
    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v21);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v8;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy(v21);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v15;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000822C0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100006DA4(&qword_1000AEA00);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    memcpy(v14, v15, 8 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10008241C(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_100006DA4(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_34;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = a6(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (char *)v18 + v23;
  v25 = (char *)a4 + v23;
  if ((a1 & 1) != 0)
  {
    if (v18 < a4 || v24 >= &v25[*(_QWORD *)(v22 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v24, v25, v11, v21);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v24);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v26 = *(_QWORD *)(v22 + 72) * v11;
  v27 = &v24[v26];
  v28 = (unint64_t)&v25[v26];
  if (v25 >= v27 || (unint64_t)v24 >= v28)
  {
    swift_arrayInitWithCopy(v24);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v18;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000825FC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100006DA4(&qword_1000B0BB0);
    v11 = (char *)swift_allocObject(v10, 24 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[24 * v8])
      memmove(v13, v14, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[24 * v8] || v13 >= &v14[24 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100082780(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 >= 0)
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    return __CocoaDictionary.startIndex.getter(a1);
  }
  v2 = *(_QWORD *)(a1 + 64);
  if (v2)
  {
    v3 = 0;
    return __clz(__rbit64(v2)) + v3;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v1 = 1 << v5;
  if (v6 < 7)
    return v1;
  v2 = *(_QWORD *)(a1 + 72);
  if (v2)
  {
    v3 = 64;
    return __clz(__rbit64(v2)) + v3;
  }
  v7 = (unint64_t)(v1 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v3 = 64;
  while (v8)
  {
    v10 = *v9++;
    v2 = v10;
    --v8;
    v3 += 64;
    if (v10)
      return __clz(__rbit64(v2)) + v3;
  }
  return v1;
}

void sub_100082840(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  if ((a3 & 1) == 0)
  {
    if (a1 < 0 || -(-1 << *(_BYTE *)(a4 + 32)) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + 64 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8)) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
      {
        _HashTable.occupiedBucket(after:)(a1);
        return;
      }
      goto LABEL_12;
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (__CocoaDictionary.Index.age.getter(a1, a2) != *(_DWORD *)(a4 + 36))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v6 = __CocoaDictionary.Index.key.getter(a1, a2);
  v12 = v6;
  sub_1000839EC(a1, a2, 1);
  v7 = sub_100058A28(0, &qword_1000AF878, REMObjectID_ptr);
  swift_unknownObjectRetain(v6);
  swift_dynamicCast(&v13, &v12, (char *)&type metadata for Swift.AnyObject + 8, v7, 7);
  v8 = v13;
  swift_unknownObjectRelease(v6);
  sub_100057D3C((uint64_t)v8);
  v10 = v9;

  if ((v10 & 1) != 0)
  {
    v11 = __CocoaDictionary.Index.dictionary.getter(a1, a2);
    __CocoaDictionary.index(after:)(a1, a2, v11);
    sub_1000839E0(a1, a2, 1);
    swift_unknownObjectRelease(v11);
    return;
  }
LABEL_14:
  __break(1u);
}

void sub_1000829DC(_QWORD *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  unint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char v18;
  char v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;

  v7 = a2;
  if ((a5 & 0xC000000000000001) == 0)
  {
    if ((a4 & 1) != 0)
      goto LABEL_13;
    if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) != 0)
    {
      if (*(_DWORD *)(a5 + 36) == (_DWORD)a3)
      {
LABEL_15:
        v20 = *(void **)(*(_QWORD *)(a5 + 48) + 8 * v7);
        v21 = *(void **)(*(_QWORD *)(a5 + 56) + 8 * v7);
        *a1 = v21;
        v20;
        v22 = v21;
        return;
      }
      __break(1u);
LABEL_13:
      if (__CocoaDictionary.Index.age.getter(a2, a3) == *(_DWORD *)(a5 + 36))
      {
        v15 = __CocoaDictionary.Index.key.getter(v7, a3);
        v23 = v15;
        v16 = sub_100058A28(0, &qword_1000AF878, REMObjectID_ptr);
        swift_unknownObjectRetain(v15);
        swift_dynamicCast(&v24, &v23, (char *)&type metadata for Swift.AnyObject + 8, v16, 7);
        v17 = v24;
        swift_unknownObjectRelease(v15);
        v7 = sub_100057D3C((uint64_t)v17);
        v19 = v18;

        if ((v19 & 1) != 0)
          goto LABEL_15;
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    __break(1u);
    goto LABEL_19;
  }
  if ((a4 & 1) == 0)
  {
LABEL_21:
    __break(1u);
    return;
  }
  if (a5 < 0)
    v9 = a5;
  else
    v9 = a5 & 0xFFFFFFFFFFFFFF8;
  v10 = __CocoaDictionary.lookup(_:)(a2, a3, v9);
  v12 = v11;
  v23 = v10;
  v13 = sub_100058A28(0, &qword_1000AF878, REMObjectID_ptr);
  swift_unknownObjectRetain(v10);
  swift_dynamicCast(&v24, &v23, (char *)&type metadata for Swift.AnyObject + 8, v13, 7);
  swift_unknownObjectRelease(v10);
  v23 = v12;
  v14 = sub_100058A28(0, &qword_1000AF8B0, REMReminder_ptr);
  swift_unknownObjectRetain(v12);
  swift_dynamicCast(&v24, &v23, (char *)&type metadata for Swift.AnyObject + 8, v14, 7);
  *a1 = v24;
  swift_unknownObjectRelease(v12);
}

uint64_t sub_100082C08(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  char *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v37;
  void (*v38)(char *);
  unsigned int v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  char *v41;
  char *v42;
  __int128 v43;
  uint64_t v44;
  int v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;

  v45 = a4;
  *((_QWORD *)&v43 + 1) = a2;
  v44 = a3;
  *(_QWORD *)&v43 = a1;
  v4 = sub_100006DA4(&qword_1000AD088);
  __chkstk_darwin(v4);
  v42 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for InputConnectionBehavior(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v41 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006DA4(&qword_1000AD070);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v37 - v13;
  v15 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v15);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for LocalizedStringResource(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006DA4(&qword_1000B0BB8);
  LocalizedStringResource.init(stringLiteral:)(0x7265646E696D6552, 0xE800000000000000);
  v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  v40(v17, 1, 1, v18);
  v22 = type metadata accessor for IntentDialog(0);
  *(_QWORD *)&v47 = 0;
  v46 = 0uLL;
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v23(v14, 1, 1, v22);
  v23(v12, 1, 1, v22);
  v39 = enum case for InputConnectionBehavior.default(_:);
  v38 = *(void (**)(char *))(v7 + 104);
  v24 = v41;
  v38(v41);
  v25 = sub_1000812B4();
  v26 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v21, v17, &v46, v14, v12, v24, v25);
  sub_100006DA4(&qword_1000AD090);
  swift_retain(v26);
  LocalizedStringResource.init(stringLiteral:)(0x6574656C706D6F43, 0xE900000000000064);
  v40(v17, 1, 1, v18);
  LOBYTE(v46) = 2;
  v27 = type metadata accessor for Bool.IntentDisplayName(0);
  v28 = v42;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v42, 1, 1, v27);
  v23(v14, 1, 1, v22);
  ((void (*)(char *, _QWORD, uint64_t))v38)(v24, v39, v6);
  v29 = IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v21, v17, &v46, v28, v14, v24);
  sub_100006DA4(&qword_1000B0BC0);
  type metadata accessor for AppDependencyManager(0);
  v46 = 0u;
  v47 = 0u;
  v48 = 0;
  v30 = swift_retain(v29);
  v31 = static AppDependencyManager.shared.getter(v30);
  v32 = AppDependency.__allocating_init(key:manager:)(&v46, v31);
  v33 = (void *)v43;
  v46 = v43;
  v34 = v44;
  *(_QWORD *)&v47 = v44;
  swift_retain(v26);
  swift_retain(v29);
  swift_retain(v32);
  v35 = v33;
  swift_bridgeObjectRetain(v34);
  IntentParameter.wrappedValue.setter(&v46);
  swift_release(v29);
  swift_release(v26);
  LOBYTE(v46) = v45;
  swift_retain(v26);
  swift_retain(v29);
  swift_retain(v32);
  IntentParameter.wrappedValue.setter(&v46);
  swift_release_n(v32, 2);
  swift_release_n(v29, 2);
  swift_release_n(v26, 2);
  swift_bridgeObjectRelease(v34);

  return v26;
}

uint64_t sub_10008303C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v28)(char *, uint64_t, uint64_t);
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  v0 = sub_100006DA4(&qword_1000AD088);
  __chkstk_darwin(v0);
  v33 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for InputConnectionBehavior(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v32 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100006DA4(&qword_1000AD070);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v28 - v9;
  v11 = sub_100006DA4(&qword_1000AD078);
  __chkstk_darwin(v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LocalizedStringResource(0);
  v15 = *(_QWORD *)(v14 - 8);
  v30 = v14;
  __chkstk_darwin(v14);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100006DA4(&qword_1000B0BB8);
  LocalizedStringResource.init(stringLiteral:)(0x7265646E696D6552, 0xE800000000000000);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v29(v13, 1, 1, v14);
  v18 = type metadata accessor for IntentDialog(0);
  *(_QWORD *)&v35 = 0;
  v34 = 0uLL;
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v10, 1, 1, v18);
  v19(v8, 1, 1, v18);
  v20 = enum case for InputConnectionBehavior.default(_:);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v21 = v32;
  v28(v32, enum case for InputConnectionBehavior.default(_:), v2);
  v22 = sub_1000812B4();
  v31 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v17, v13, &v34, v10, v8, v21, v22);
  sub_100006DA4(&qword_1000AD090);
  LocalizedStringResource.init(stringLiteral:)(0x6574656C706D6F43, 0xE900000000000064);
  v29(v13, 1, 1, v30);
  LOBYTE(v34) = 2;
  v23 = type metadata accessor for Bool.IntentDisplayName(0);
  v24 = v33;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v33, 1, 1, v23);
  v19(v10, 1, 1, v18);
  v28(v21, v20, v2);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v17, v13, &v34, v24, v10, v21);
  sub_100006DA4(&qword_1000B0BC0);
  v25 = type metadata accessor for AppDependencyManager(0);
  v34 = 0u;
  v35 = 0u;
  v36 = 0;
  v26 = static AppDependencyManager.shared.getter(v25);
  AppDependency.__allocating_init(key:manager:)(&v34, v26);
  return v31;
}

uint64_t sub_1000833A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, _QWORD, uint64_t);
  uint64_t (*v8)(char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v0 = type metadata accessor for REMAnalyticsEvent(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for REMAnalyticsManager(0);
  v4 = ((uint64_t (*)(void))static REMAnalyticsManager.shared.getter)();
  v5 = enum case for REMRemindersWidgetUserOperation.completeReminder(_:);
  v6 = type metadata accessor for REMRemindersWidgetUserOperation(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v3, v5, v6);
  v7 = *(void (**)(char *, _QWORD, uint64_t))(v1 + 104);
  v7(v3, enum case for REMAnalyticsEvent.remindersWidgetUserOperation(_:), v0);
  REMAnalyticsManager.post(event:)(v3);
  swift_release(v4);
  v8 = *(uint64_t (**)(char *, uint64_t))(v1 + 8);
  v9 = v8(v3, v0);
  v10 = static REMAnalyticsManager.shared.getter(v9);
  *(_QWORD *)v3 = 0xD00000000000001DLL;
  *((_QWORD *)v3 + 1) = 0x800000010008E3E0;
  *((_QWORD *)v3 + 2) = 0x746567646977;
  *((_QWORD *)v3 + 3) = 0xE600000000000000;
  *((_QWORD *)v3 + 4) = 0x704163696C627570;
  *((_QWORD *)v3 + 5) = 0xEF746E65746E4970;
  *((_OWORD *)v3 + 3) = 0u;
  *((_OWORD *)v3 + 4) = 0u;
  v7(v3, enum case for REMAnalyticsEvent.appIntents(_:), v0);
  REMAnalyticsManager.post(event:)(v3);
  swift_release(v10);
  return v8(v3, v0);
}

uint64_t sub_100083520(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = a1;
  return swift_task_switch(sub_100083584, 0, 0);
}

uint64_t sub_100083584()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  Class isa;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v38;
  void (*v39)(uint64_t, _QWORD);
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;

  if (qword_1000ACA18 != -1)
    swift_once(&qword_1000ACA18, sub_100080A50);
  v1 = (void *)qword_1000B0AC0;
  v2 = sub_100058A28(0, &qword_1000AF878, REMObjectID_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)(v0 + 16) = 0;
  v46 = v0 + 16;
  v4 = objc_msgSend(v1, "fetchRemindersWithObjectIDs:error:", isa, v0 + 16);

  v5 = v0;
  v6 = *(void **)(v0 + 16);
  if (v4)
  {
    v44 = v0;
    v7 = sub_100058A28(0, &qword_1000AF8B0, REMReminder_ptr);
    v8 = sub_10008115C((unint64_t *)&qword_1000AF880, (uint64_t)&protocol conformance descriptor for NSObject);
    v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v4, v2, v7, v8);
    v10 = v6;

    v48 = v9 & 0xC000000000000001;
    if ((v9 & 0xC000000000000001) != 0)
    {
      if (v9 < 0)
        v11 = v9;
      else
        v11 = v9 & 0xFFFFFFFFFFFFFF8;
      v12 = __CocoaDictionary.count.getter(v11);
      if (v12)
        goto LABEL_9;
    }
    else
    {
      v12 = *(_QWORD *)(v9 + 16);
      if (v12)
      {
LABEL_9:
        sub_100081958(0, v12 & ~(v12 >> 63), 0);
        v50 = sub_100082780(v9);
        v51 = v13;
        v52 = v14 & 1;
        if (v12 < 0)
        {
          __break(1u);
LABEL_33:
          __break(1u);
        }
        v15 = v9 & 0xFFFFFFFFFFFFFF8;
        if (v9 < 0)
          v15 = v9;
        v45 = v15;
        v47 = v9;
        while (1)
        {
          v23 = v50;
          v22 = v51;
          v24 = v52;
          sub_1000829DC(&v49, v50, v51, v52, v9);
          v25 = v49;
          v27 = v26;
          v28 = objc_msgSend(v25, "title");
          v29 = v28;
          if (!v28)
            break;
          v30 = objc_msgSend(v28, "string");

          v29 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
          v32 = v31;

          if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
            goto LABEL_16;
LABEL_17:
          v34 = _swiftEmptyArrayStorage[2];
          v33 = _swiftEmptyArrayStorage[3];
          if (v34 >= v33 >> 1)
            sub_100081958(v33 > 1, v34 + 1, 1);
          _swiftEmptyArrayStorage[2] = v34 + 1;
          v35 = &_swiftEmptyArrayStorage[3 * v34];
          v35[4] = v27;
          v35[5] = v29;
          v35[6] = v32;
          if (v48)
          {
            v9 = v47;
            if ((v24 & 1) == 0)
              goto LABEL_33;
            v36 = __CocoaDictionary.Index.handleBitPattern.getter(v23, v22);
            if (v36)
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v36);
            else
              isUniquelyReferenced_nonNull_native = 1;
            v38 = sub_100006DA4(&qword_1000B0BA8);
            v39 = (void (*)(uint64_t, _QWORD))Dictionary.Index._asCocoa.modify(v46, v38);
            __CocoaDictionary.formIndex(after:isUnique:)(v40, isUniquelyReferenced_nonNull_native, v45);
            v39(v46, 0);
            if (!--v12)
            {
LABEL_27:
              sub_1000839E0(v50, v51, v52);
              swift_bridgeObjectRelease(v9);
              return (*(uint64_t (**)(_QWORD *))(v44 + 8))(_swiftEmptyArrayStorage);
            }
          }
          else
          {
            v9 = v47;
            sub_100082840(v23, v22, v24, v47);
            v17 = v16;
            v19 = v18;
            v21 = v20;
            sub_1000839E0(v23, v22, v24);
            v50 = v17;
            v51 = v19;
            v52 = v21 & 1;
            if (!--v12)
              goto LABEL_27;
          }
        }

        v32 = 0xE000000000000000;
        if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) != 0)
          goto LABEL_17;
LABEL_16:
        sub_100081958(0, _swiftEmptyArrayStorage[2] + 1, 1);
        goto LABEL_17;
      }
    }
    swift_bridgeObjectRelease(v9);
    return (*(uint64_t (**)(_QWORD *))(v44 + 8))(_swiftEmptyArrayStorage);
  }
  else
  {
    v41 = v6;
    _convertNSErrorToError(_:)(v6);

    swift_willThrow(v42);
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
}

uint64_t sub_1000839E0(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t sub_1000839EC(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain(result);
  return result;
}

_QWORD *sub_1000839F8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  void **v16;
  int *v17;
  uint64_t v18;
  unsigned int (*v19)(void **, uint64_t, int *);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void (*v37)(void **, _QWORD, uint64_t, int *);
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  char *v68;
  void (*v69)(char *, char *, uint64_t);
  char *v70;
  char *v71;
  char *v72;
  void **__dst;
  void *__dsta;
  _QWORD *v75;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    v22 = v21 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v21);
  }
  else
  {
    v7 = type metadata accessor for WidgetFamily(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v75 = a1;
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)((char *)a2 + v8 + 8);
    *(_QWORD *)v9 = *(_QWORD *)((char *)a2 + v8);
    *((_QWORD *)v9 + 1) = v11;
    *((_OWORD *)v9 + 1) = *(_OWORD *)((char *)a2 + v8 + 16);
    v12 = *(_QWORD *)((char *)a2 + v8 + 32);
    *((_QWORD *)v9 + 4) = v12;
    v9[40] = *((_BYTE *)a2 + v8 + 40);
    v13 = *(_QWORD *)((char *)a2 + v8 + 56);
    *((_QWORD *)v9 + 6) = *(_QWORD *)((char *)a2 + v8 + 48);
    *((_QWORD *)v9 + 7) = v13;
    v14 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
    v15 = v14[9];
    __dst = (void **)&v9[v15];
    v16 = (void **)&v10[v15];
    v17 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    v18 = *((_QWORD *)v17 - 1);
    v19 = *(unsigned int (**)(void **, uint64_t, int *))(v18 + 48);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v13);
    if (v19(v16, 1, v17))
    {
      v20 = sub_100006DA4(&qword_1000ACCD8);
      memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v24 = *v16;
      v23 = v16[1];
      *__dst = *v16;
      __dst[1] = v23;
      v25 = v17[6];
      v68 = (char *)__dst + v25;
      v71 = (char *)v16 + v25;
      v26 = type metadata accessor for AttributedString(0);
      v67 = *(_QWORD *)(v26 - 8);
      v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
      v28 = v24;
      v29 = v23;
      if (v27(v71, 1, v26))
      {
        v30 = sub_100006DA4(&qword_1000ACE10);
        memcpy(v68, v71, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v68, v71, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v68, 0, 1, v26);
      }
      v31 = v17[7];
      v32 = (char *)__dst + v31;
      v33 = (char *)v16 + v31;
      v34 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
      v35 = v17[8];
      v36 = *(void **)((char *)v16 + v35);
      *(void **)((char *)__dst + v35) = v36;
      *(void **)((char *)__dst + v17[9]) = *(void **)((char *)v16 + v17[9]);
      *((_BYTE *)__dst + v17[10]) = *((_BYTE *)v16 + v17[10]);
      *((_BYTE *)__dst + v17[11]) = *((_BYTE *)v16 + v17[11]);
      v37 = *(void (**)(void **, _QWORD, uint64_t, int *))(v18 + 56);
      v38 = v36;
      v37(__dst, 0, 1, v17);
    }
    v39 = v14[10];
    __dsta = *(void **)&v10[v39];
    *(_QWORD *)&v9[v39] = __dsta;
    v40 = v14[11];
    v41 = &v9[v40];
    v42 = &v10[v40];
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    v44 = v14[12];
    v45 = *(void **)&v10[v44];
    *(_QWORD *)&v9[v44] = v45;
    v46 = v14[13];
    v47 = &v9[v46];
    v48 = &v10[v46];
    v49 = *((_QWORD *)v48 + 1);
    *(_QWORD *)v47 = *(_QWORD *)v48;
    *((_QWORD *)v47 + 1) = v49;
    v50 = v14[14];
    v51 = &v9[v50];
    v52 = &v10[v50];
    v53 = *((_QWORD *)v52 + 1);
    *(_QWORD *)v51 = *(_QWORD *)v52;
    *((_QWORD *)v51 + 1) = v53;
    v9[v14[15]] = v10[v14[15]];
    v54 = v14[16];
    v55 = &v9[v54];
    v56 = &v10[v54];
    v57 = *((_QWORD *)v56 + 1);
    *(_QWORD *)v55 = *(_QWORD *)v56;
    *((_QWORD *)v55 + 1) = v57;
    v58 = v14[17];
    v59 = *(_QWORD *)&v10[v58];
    *(_QWORD *)&v9[v58] = v59;
    v60 = v14[18];
    v70 = &v10[v60];
    v72 = &v9[v60];
    v61 = type metadata accessor for URL(0);
    v69 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16);
    v62 = __dsta;
    swift_bridgeObjectRetain(v43);
    v63 = v45;
    swift_bridgeObjectRetain(v49);
    swift_bridgeObjectRetain(v53);
    swift_bridgeObjectRetain(v57);
    swift_bridgeObjectRetain(v59);
    v69(v72, v70, v61);
    v64 = v14[19];
    v65 = *(_QWORD *)&v10[v64];
    *(_QWORD *)&v9[v64] = v65;
    v9[v14[20]] = v10[v14[20]];
    swift_bridgeObjectRetain(v65);
    return v75;
  }
  return (_QWORD *)v22;
}

uint64_t sub_100083D88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  int *v6;
  id *v7;
  int *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  v4 = type metadata accessor for WidgetFamily(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  swift_bridgeObjectRelease(v5[1]);
  swift_bridgeObjectRelease(v5[4]);
  swift_bridgeObjectRelease(v5[7]);
  v6 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v7 = (id *)((char *)v5 + v6[9]);
  v8 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((_QWORD *)v8 - 1) + 48))(v7, 1, v8))
  {

    v9 = (char *)v7 + v8[6];
    v10 = type metadata accessor for AttributedString(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    v12 = (char *)v7 + v8[7];
    v13 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);

  }
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v5 + v6[11] + 8));

  swift_bridgeObjectRelease(*(_QWORD *)((char *)v5 + v6[13] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v5 + v6[14] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v5 + v6[16] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v5 + v6[17]));
  v14 = (char *)v5 + v6[18];
  v15 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  return swift_bridgeObjectRelease(*(_QWORD *)((char *)v5 + v6[19]));
}

uint64_t sub_100083F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  void **v15;
  int *v16;
  uint64_t v17;
  unsigned int (*v18)(void **, uint64_t, int *);
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void (*v34)(void **, _QWORD, uint64_t, int *);
  id v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  char *v65;
  void (*v66)(uint64_t, void *, uint64_t);
  char *v67;
  void *v68;
  uint64_t v69;
  void **__dst;
  void *__dsta;
  uint64_t v72;

  v6 = type metadata accessor for WidgetFamily(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v72 = a1;
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(a2 + v7 + 16);
  v11 = *(_QWORD *)(a2 + v7 + 32);
  *(_QWORD *)(v8 + 32) = v11;
  *(_BYTE *)(v8 + 40) = *(_BYTE *)(a2 + v7 + 40);
  v12 = *(_QWORD *)(a2 + v7 + 56);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(a2 + v7 + 48);
  *(_QWORD *)(v8 + 56) = v12;
  v13 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v14 = v13[9];
  __dst = (void **)(v8 + v14);
  v15 = (void **)(v9 + v14);
  v16 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v17 = *((_QWORD *)v16 - 1);
  v18 = *(unsigned int (**)(void **, uint64_t, int *))(v17 + 48);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  if (v18(v15, 1, v16))
  {
    v19 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v21 = *v15;
    v20 = v15[1];
    *__dst = *v15;
    __dst[1] = v20;
    v22 = v16[6];
    v65 = (char *)v15 + v22;
    v67 = (char *)__dst + v22;
    v23 = type metadata accessor for AttributedString(0);
    v64 = *(_QWORD *)(v23 - 8);
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
    v25 = v21;
    v26 = v20;
    if (v24(v65, 1, v23))
    {
      v27 = sub_100006DA4(&qword_1000ACE10);
      memcpy(v67, v65, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v67, v65, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v67, 0, 1, v23);
    }
    v28 = v16[7];
    v29 = (char *)__dst + v28;
    v30 = (char *)v15 + v28;
    v31 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = v16[8];
    v33 = *(void **)((char *)v15 + v32);
    *(void **)((char *)__dst + v32) = v33;
    *(void **)((char *)__dst + v16[9]) = *(void **)((char *)v15 + v16[9]);
    *((_BYTE *)__dst + v16[10]) = *((_BYTE *)v15 + v16[10]);
    *((_BYTE *)__dst + v16[11]) = *((_BYTE *)v15 + v16[11]);
    v34 = *(void (**)(void **, _QWORD, uint64_t, int *))(v17 + 56);
    v35 = v33;
    v34(__dst, 0, 1, v16);
  }
  v36 = v13[10];
  __dsta = *(void **)(v9 + v36);
  *(_QWORD *)(v8 + v36) = __dsta;
  v37 = v13[11];
  v38 = (_QWORD *)(v8 + v37);
  v39 = (_QWORD *)(v9 + v37);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  v41 = v13[12];
  v42 = *(void **)(v9 + v41);
  *(_QWORD *)(v8 + v41) = v42;
  v43 = v13[13];
  v44 = (_QWORD *)(v8 + v43);
  v45 = (_QWORD *)(v9 + v43);
  v46 = v45[1];
  *v44 = *v45;
  v44[1] = v46;
  v47 = v13[14];
  v48 = (_QWORD *)(v8 + v47);
  v49 = (_QWORD *)(v9 + v47);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  *(_BYTE *)(v8 + v13[15]) = *(_BYTE *)(v9 + v13[15]);
  v51 = v13[16];
  v52 = (_QWORD *)(v8 + v51);
  v53 = (_QWORD *)(v9 + v51);
  v54 = v53[1];
  *v52 = *v53;
  v52[1] = v54;
  v55 = v13[17];
  v56 = *(_QWORD *)(v9 + v55);
  *(_QWORD *)(v8 + v55) = v56;
  v57 = v13[18];
  v68 = (void *)(v9 + v57);
  v69 = v8 + v57;
  v58 = type metadata accessor for URL(0);
  v66 = *(void (**)(uint64_t, void *, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
  v59 = __dsta;
  swift_bridgeObjectRetain(v40);
  v60 = v42;
  swift_bridgeObjectRetain(v46);
  swift_bridgeObjectRetain(v50);
  swift_bridgeObjectRetain(v54);
  swift_bridgeObjectRetain(v56);
  v66(v69, v68, v58);
  v61 = v13[19];
  v62 = *(_QWORD *)(v9 + v61);
  *(_QWORD *)(v8 + v61) = v62;
  *(_BYTE *)(v8 + v13[20]) = *(_BYTE *)(v9 + v13[20]);
  swift_bridgeObjectRetain(v62);
  return v72;
}

uint64_t sub_1000842A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  int *v20;
  uint64_t v21;
  uint64_t (*v22)(_QWORD *, uint64_t, int *);
  int v23;
  int v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  int v44;
  size_t v45;
  void *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void (*v53)(_QWORD *, _QWORD, uint64_t, int *);
  id v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  id v62;
  uint64_t v63;
  void *v64;
  void *v65;
  id v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  void *v74;
  id v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  unsigned int (*__src)(char *, uint64_t, uint64_t);
  char *__dst;
  void *__dsta;
  uint64_t v108;
  uint64_t v109;

  v6 = type metadata accessor for WidgetFamily(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  v11 = *(_QWORD *)(a1 + v7 + 8);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  v12 = *(_QWORD *)(v9 + 32);
  v13 = *(_QWORD *)(v8 + 32);
  *(_QWORD *)(v8 + 32) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  *(_BYTE *)(v8 + 40) = *(_BYTE *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
  v14 = *(_QWORD *)(v9 + 56);
  v15 = *(_QWORD *)(v8 + 56);
  *(_QWORD *)(v8 + 56) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  v16 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v17 = v16[9];
  v18 = (_QWORD *)(v8 + v17);
  v19 = (_QWORD *)(v9 + v17);
  v20 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v21 = *((_QWORD *)v20 - 1);
  v22 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (v24)
    {
      sub_100007EB4((uint64_t)v18, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    v109 = a1;
    v33 = (void *)*v19;
    v34 = (void *)*v18;
    *v18 = *v19;
    v35 = v33;

    v36 = (void *)v18[1];
    v37 = (void *)v19[1];
    v18[1] = v37;
    v38 = v37;

    v39 = v20[6];
    v40 = (char *)v18 + v39;
    v41 = (char *)v19 + v39;
    v42 = type metadata accessor for AttributedString(0);
    v104 = *(_QWORD *)(v42 - 8);
    v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 48);
    __dsta = v40;
    LODWORD(v40) = v43(v40, 1, v42);
    v44 = v43(v41, 1, v42);
    if ((_DWORD)v40)
    {
      if (!v44)
      {
        (*(void (**)(void *, char *, uint64_t))(v104 + 16))(__dsta, v41, v42);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v104 + 56))(__dsta, 0, 1, v42);
        goto LABEL_18;
      }
      v45 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v46 = __dsta;
    }
    else
    {
      if (!v44)
      {
        (*(void (**)(void *, char *, uint64_t))(v104 + 24))(__dsta, v41, v42);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v104 + 8))(__dsta, v42);
      v45 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v46 = __dsta;
    }
    memcpy(v46, v41, v45);
LABEL_18:
    v55 = v20[7];
    v56 = (char *)v18 + v55;
    v57 = (char *)v19 + v55;
    v58 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v56, v57, v58);
    v59 = v20[8];
    v60 = *(void **)((char *)v18 + v59);
    v61 = *(void **)((char *)v19 + v59);
    *(_QWORD *)((char *)v18 + v59) = v61;
    v62 = v61;

    *(_QWORD *)((char *)v18 + v20[9]) = *(_QWORD *)((char *)v19 + v20[9]);
    *((_BYTE *)v18 + v20[10]) = *((_BYTE *)v19 + v20[10]);
    *((_BYTE *)v18 + v20[11]) = *((_BYTE *)v19 + v20[11]);
    a1 = v109;
    goto LABEL_19;
  }
  if (v24)
  {
LABEL_7:
    v32 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  v25 = (void *)*v19;
  *v18 = *v19;
  v26 = (void *)v19[1];
  v18[1] = v26;
  v27 = v20[6];
  __dst = (char *)v18 + v27;
  v108 = a1;
  v103 = (char *)v19 + v27;
  v28 = type metadata accessor for AttributedString(0);
  v102 = *(_QWORD *)(v28 - 8);
  __src = *(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48);
  v29 = v25;
  v30 = v26;
  if (__src(v103, 1, v28))
  {
    v31 = sub_100006DA4(&qword_1000ACE10);
    memcpy(__dst, v103, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v102 + 16))(__dst, v103, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v102 + 56))(__dst, 0, 1, v28);
  }
  a1 = v108;
  v47 = v20[7];
  v48 = (char *)v18 + v47;
  v49 = (char *)v19 + v47;
  v50 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = v20[8];
  v52 = *(void **)((char *)v19 + v51);
  *(_QWORD *)((char *)v18 + v51) = v52;
  *(_QWORD *)((char *)v18 + v20[9]) = *(_QWORD *)((char *)v19 + v20[9]);
  *((_BYTE *)v18 + v20[10]) = *((_BYTE *)v19 + v20[10]);
  *((_BYTE *)v18 + v20[11]) = *((_BYTE *)v19 + v20[11]);
  v53 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v21 + 56);
  v54 = v52;
  v53(v18, 0, 1, v20);
LABEL_19:
  v63 = v16[10];
  v64 = *(void **)(v9 + v63);
  v65 = *(void **)(v8 + v63);
  *(_QWORD *)(v8 + v63) = v64;
  v66 = v64;

  v67 = v16[11];
  v68 = (_QWORD *)(v8 + v67);
  v69 = (_QWORD *)(v9 + v67);
  *v68 = *v69;
  v70 = v69[1];
  v71 = v68[1];
  v68[1] = v70;
  swift_bridgeObjectRetain(v70);
  swift_bridgeObjectRelease(v71);
  v72 = v16[12];
  v73 = *(void **)(v8 + v72);
  v74 = *(void **)(v9 + v72);
  *(_QWORD *)(v8 + v72) = v74;
  v75 = v74;

  v76 = v16[13];
  v77 = (_QWORD *)(v8 + v76);
  v78 = (_QWORD *)(v9 + v76);
  *v77 = *v78;
  v79 = v78[1];
  v80 = v77[1];
  v77[1] = v79;
  swift_bridgeObjectRetain(v79);
  swift_bridgeObjectRelease(v80);
  v81 = v16[14];
  v82 = (_QWORD *)(v8 + v81);
  v83 = (_QWORD *)(v9 + v81);
  *v82 = *v83;
  v84 = v83[1];
  v85 = v82[1];
  v82[1] = v84;
  swift_bridgeObjectRetain(v84);
  swift_bridgeObjectRelease(v85);
  *(_BYTE *)(v8 + v16[15]) = *(_BYTE *)(v9 + v16[15]);
  v86 = v16[16];
  v87 = (_QWORD *)(v8 + v86);
  v88 = (_QWORD *)(v9 + v86);
  *v87 = *v88;
  v89 = v88[1];
  v90 = v87[1];
  v87[1] = v89;
  swift_bridgeObjectRetain(v89);
  swift_bridgeObjectRelease(v90);
  v91 = v16[17];
  v92 = *(_QWORD *)(v8 + v91);
  v93 = *(_QWORD *)(v9 + v91);
  *(_QWORD *)(v8 + v91) = v93;
  swift_bridgeObjectRetain(v93);
  swift_bridgeObjectRelease(v92);
  v94 = v16[18];
  v95 = v8 + v94;
  v96 = v9 + v94;
  v97 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 24))(v95, v96, v97);
  v98 = v16[19];
  v99 = *(_QWORD *)(v9 + v98);
  v100 = *(_QWORD *)(v8 + v98);
  *(_QWORD *)(v8 + v98) = v99;
  swift_bridgeObjectRetain(v99);
  swift_bridgeObjectRelease(v100);
  *(_BYTE *)(v8 + v16[20]) = *(_BYTE *)(v9 + v16[20]);
  return a1;
}

uint64_t sub_10008484C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char *__dst;

  v6 = type metadata accessor for WidgetFamily(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a2 + v7 + 24);
  *(_BYTE *)(v8 + 40) = *(_BYTE *)(a2 + v7 + 40);
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a2 + v7 + 48);
  v10 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v11 = v10[9];
  v12 = (_OWORD *)(v8 + v11);
  v13 = (_OWORD *)(v9 + v11);
  v14 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v15 = *((_QWORD *)v14 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v17 = v14[6];
    v31 = a1;
    __dst = (char *)v12 + v17;
    v18 = (char *)v13 + v17;
    v19 = type metadata accessor for AttributedString(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = sub_100006DA4(&qword_1000ACE10);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    v22 = v14[7];
    v23 = (char *)v12 + v22;
    v24 = (char *)v13 + v22;
    v25 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
    *(_QWORD *)((char *)v12 + v14[8]) = *(_QWORD *)((char *)v13 + v14[8]);
    *(_QWORD *)((char *)v12 + v14[9]) = *(_QWORD *)((char *)v13 + v14[9]);
    *((_BYTE *)v12 + v14[10]) = *((_BYTE *)v13 + v14[10]);
    *((_BYTE *)v12 + v14[11]) = *((_BYTE *)v13 + v14[11]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
    a1 = v31;
  }
  *(_QWORD *)(v8 + v10[10]) = *(_QWORD *)(v9 + v10[10]);
  *(_OWORD *)(v8 + v10[11]) = *(_OWORD *)(v9 + v10[11]);
  *(_QWORD *)(v8 + v10[12]) = *(_QWORD *)(v9 + v10[12]);
  *(_OWORD *)(v8 + v10[13]) = *(_OWORD *)(v9 + v10[13]);
  *(_OWORD *)(v8 + v10[14]) = *(_OWORD *)(v9 + v10[14]);
  *(_BYTE *)(v8 + v10[15]) = *(_BYTE *)(v9 + v10[15]);
  *(_OWORD *)(v8 + v10[16]) = *(_OWORD *)(v9 + v10[16]);
  *(_QWORD *)(v8 + v10[17]) = *(_QWORD *)(v9 + v10[17]);
  v26 = v10[18];
  v27 = v8 + v26;
  v28 = v9 + v26;
  v29 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  *(_QWORD *)(v8 + v10[19]) = *(_QWORD *)(v9 + v10[19]);
  *(_BYTE *)(v8 + v10[20]) = *(_BYTE *)(v9 + v10[20]);
  return a1;
}

uint64_t sub_100084B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  int *v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD *, uint64_t, int *);
  int v22;
  int v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  size_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v87;
  char *__dst;
  void *__dsta;
  uint64_t v90;
  uint64_t v91;

  v6 = type metadata accessor for WidgetFamily(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  v11 = *(_QWORD *)(a1 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease(v11);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(v9 + 16);
  v12 = *(_QWORD *)(v8 + 32);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  swift_bridgeObjectRelease(v12);
  *(_BYTE *)(v8 + 40) = *(_BYTE *)(v9 + 40);
  v13 = *(_QWORD *)(v9 + 56);
  v14 = *(_QWORD *)(v8 + 56);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v8 + 56) = v13;
  swift_bridgeObjectRelease(v14);
  v15 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  v16 = v15[9];
  v17 = (_QWORD *)(v8 + v16);
  v18 = (_QWORD *)(v9 + v16);
  v19 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  v20 = *((_QWORD *)v19 - 1);
  v21 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (v23)
    {
      sub_100007EB4((uint64_t)v17, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    v91 = a1;
    v30 = (void *)*v17;
    *v17 = *v18;

    v31 = (void *)v17[1];
    v17[1] = v18[1];

    v32 = v19[6];
    v33 = (char *)v17 + v32;
    v34 = (char *)v18 + v32;
    v35 = type metadata accessor for AttributedString(0);
    v87 = *(_QWORD *)(v35 - 8);
    v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v87 + 48);
    __dsta = v33;
    LODWORD(v33) = v36(v33, 1, v35);
    v37 = v36(v34, 1, v35);
    if ((_DWORD)v33)
    {
      if (!v37)
      {
        (*(void (**)(void *, char *, uint64_t))(v87 + 32))(__dsta, v34, v35);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v87 + 56))(__dsta, 0, 1, v35);
        goto LABEL_18;
      }
      v38 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v39 = __dsta;
    }
    else
    {
      if (!v37)
      {
        (*(void (**)(void *, char *, uint64_t))(v87 + 40))(__dsta, v34, v35);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v87 + 8))(__dsta, v35);
      v38 = *(_QWORD *)(*(_QWORD *)(sub_100006DA4(&qword_1000ACE10) - 8) + 64);
      v39 = __dsta;
    }
    memcpy(v39, v34, v38);
LABEL_18:
    v44 = v19[7];
    v45 = (char *)v17 + v44;
    v46 = (char *)v18 + v44;
    v47 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 40))(v45, v46, v47);
    v48 = v19[8];
    v49 = *(void **)((char *)v17 + v48);
    *(_QWORD *)((char *)v17 + v48) = *(_QWORD *)((char *)v18 + v48);

    *(_QWORD *)((char *)v17 + v19[9]) = *(_QWORD *)((char *)v18 + v19[9]);
    *((_BYTE *)v17 + v19[10]) = *((_BYTE *)v18 + v19[10]);
    *((_BYTE *)v17 + v19[11]) = *((_BYTE *)v18 + v19[11]);
    a1 = v91;
    goto LABEL_19;
  }
  if (v23)
  {
LABEL_7:
    v29 = sub_100006DA4(&qword_1000ACCD8);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  *(_OWORD *)v17 = *(_OWORD *)v18;
  v24 = v19[6];
  __dst = (char *)v17 + v24;
  v90 = a1;
  v25 = (char *)v18 + v24;
  v26 = type metadata accessor for AttributedString(0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = sub_100006DA4(&qword_1000ACE10);
    memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(__dst, v25, v26);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
  }
  a1 = v90;
  v40 = v19[7];
  v41 = (char *)v17 + v40;
  v42 = (char *)v18 + v40;
  v43 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
  *(_QWORD *)((char *)v17 + v19[8]) = *(_QWORD *)((char *)v18 + v19[8]);
  *(_QWORD *)((char *)v17 + v19[9]) = *(_QWORD *)((char *)v18 + v19[9]);
  *((_BYTE *)v17 + v19[10]) = *((_BYTE *)v18 + v19[10]);
  *((_BYTE *)v17 + v19[11]) = *((_BYTE *)v18 + v19[11]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
LABEL_19:
  v50 = v15[10];
  v51 = *(void **)(v8 + v50);
  *(_QWORD *)(v8 + v50) = *(_QWORD *)(v9 + v50);

  v52 = v15[11];
  v53 = (_QWORD *)(v8 + v52);
  v54 = (uint64_t *)(v9 + v52);
  v56 = *v54;
  v55 = v54[1];
  v57 = v53[1];
  *v53 = v56;
  v53[1] = v55;
  swift_bridgeObjectRelease(v57);
  v58 = v15[12];
  v59 = *(void **)(v8 + v58);
  *(_QWORD *)(v8 + v58) = *(_QWORD *)(v9 + v58);

  v60 = v15[13];
  v61 = (_QWORD *)(v8 + v60);
  v62 = (uint64_t *)(v9 + v60);
  v64 = *v62;
  v63 = v62[1];
  v65 = v61[1];
  *v61 = v64;
  v61[1] = v63;
  swift_bridgeObjectRelease(v65);
  v66 = v15[14];
  v67 = (_QWORD *)(v8 + v66);
  v68 = (uint64_t *)(v9 + v66);
  v70 = *v68;
  v69 = v68[1];
  v71 = v67[1];
  *v67 = v70;
  v67[1] = v69;
  swift_bridgeObjectRelease(v71);
  *(_BYTE *)(v8 + v15[15]) = *(_BYTE *)(v9 + v15[15]);
  v72 = v15[16];
  v73 = (_QWORD *)(v8 + v72);
  v74 = (uint64_t *)(v9 + v72);
  v76 = *v74;
  v75 = v74[1];
  v77 = v73[1];
  *v73 = v76;
  v73[1] = v75;
  swift_bridgeObjectRelease(v77);
  v78 = v15[17];
  v79 = *(_QWORD *)(v8 + v78);
  *(_QWORD *)(v8 + v78) = *(_QWORD *)(v9 + v78);
  swift_bridgeObjectRelease(v79);
  v80 = v15[18];
  v81 = v8 + v80;
  v82 = v9 + v80;
  v83 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 40))(v81, v82, v83);
  v84 = v15[19];
  v85 = *(_QWORD *)(v8 + v84);
  *(_QWORD *)(v8 + v84) = *(_QWORD *)(v9 + v84);
  swift_bridgeObjectRelease(v85);
  *(_BYTE *)(v8 + v15[20]) = *(_BYTE *)(v9 + v15[20]);
  return a1;
}

uint64_t sub_100084FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100084FF0);
}

uint64_t sub_100084FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for WidgetFamily(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for TTRNewWidgetViewModel(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100085064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100085070);
}

uint64_t sub_100085070(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for WidgetFamily(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for TTRNewWidgetViewModel(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t _s10WidgetViewVMa_0(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B0C58;
  if (!qword_1000B0C58)
    return swift_getSingletonMetadata(a1, &_s10WidgetViewVMn_0);
  return result;
}

uint64_t sub_100085128(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for WidgetFamily(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for TTRNewWidgetViewModel(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000851AC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100093DA0, 1);
}

uint64_t sub_1000851BC()
{
  return EnvironmentValues.redactionReasons.getter();
}

uint64_t sub_1000851DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000362E0(a1, a2, a3, a4, (void (*)(_QWORD))&type metadata accessor for RedactionReasons, (uint64_t (*)(char *))&EnvironmentValues.redactionReasons.setter);
}

uint64_t sub_1000851F0()
{
  return EnvironmentValues.widgetRenderingMode.getter();
}

uint64_t sub_100085210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000362E0(a1, a2, a3, a4, (void (*)(_QWORD))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(char *))&EnvironmentValues.widgetRenderingMode.setter);
}

uint64_t sub_100085224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v0 = type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey(0);
  v1 = sub_100007218(&qword_1000B0CC8, (uint64_t (*)(uint64_t))&type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey, (uint64_t)&protocol conformance descriptor for EnvironmentValues.ShowsWidgetBackgroundKey);
  EnvironmentValues.subscript.getter(&v3, v0, v0, v1);
  return v3;
}

_QWORD *sub_100085284@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;
  uint64_t v5;

  v2 = type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey(0);
  v3 = sub_100007218(&qword_1000B0CC8, (uint64_t (*)(uint64_t))&type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey, (uint64_t)&protocol conformance descriptor for EnvironmentValues.ShowsWidgetBackgroundKey);
  result = EnvironmentValues.subscript.getter(&v5, v2, v2, v3);
  *a1 = v5;
  return result;
}

_QWORD *sub_1000852F8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t IsVibrantText;
  uint64_t v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  int v23;
  char v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  Swift::String *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  Swift::String *v52;
  unint64_t v53;
  Swift::String v54;
  Swift::String v55;
  Swift::String v56;
  Swift::String *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  Swift::String *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;

  v68 = a2;
  v64 = type metadata accessor for TTRIAnyListComplicationWidgetView(0);
  __chkstk_darwin(v64);
  v60 = (uint64_t)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100006DA4(&qword_1000B0C90);
  __chkstk_darwin(v65);
  v67 = (Swift::String *)((char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v63 = sub_100006DA4(&qword_1000B0C98);
  __chkstk_darwin(v63);
  v61 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_100006DA4(&qword_1000B0CA0);
  __chkstk_darwin(v66);
  v62 = (uint64_t *)((char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  IsVibrantText = type metadata accessor for IsVibrantText(0);
  __chkstk_darwin(IsVibrantText);
  v9 = (uint64_t *)((char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = (int *)type metadata accessor for TTRAnyListWidget.SystemWidgetView(0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v59 - v14;
  v16 = type metadata accessor for WidgetFamily(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v22 = (char *)&v59 - v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)&v59 - v21, a1, v16);
  v23 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v22, v16);
  if (v23 == enum case for WidgetFamily.systemSmall(_:))
  {
    v24 = 0;
LABEL_7:
    v25 = _s10WidgetViewVMa_0(0);
    sub_1000072AC(a1 + *(int *)(v25 + 20), (uint64_t)&v13[v10[5]], type metadata accessor for TTRNewWidgetViewModel);
    *v13 = v24;
    v26 = &v13[v10[6]];
    *(_QWORD *)v26 = swift_getKeyPath(&unk_10008E480);
    v27 = sub_100006DA4(&qword_1000ADED8);
    swift_storeEnumTagMultiPayload(v26, v27, 0);
    v28 = &v13[v10[7]];
    *(_QWORD *)v28 = swift_getKeyPath(&unk_10008E4B0);
    v28[8] = 0;
    v29 = &v13[v10[8]];
    *(_QWORD *)v29 = swift_getKeyPath(&unk_10008E4D8);
    v30 = sub_100006DA4(&qword_1000ADE30);
    swift_storeEnumTagMultiPayload(v29, v30, 0);
    v31 = (uint64_t)&v13[v10[9]];
    *v9 = swift_getKeyPath(&unk_10008E4D8);
    swift_storeEnumTagMultiPayload(v9, v30, 0);
    sub_100007EF0((uint64_t)v9, v31, type metadata accessor for IsVibrantText);
    v32 = type metadata accessor for TTRAnyListWidget.SystemWidgetView;
    sub_100007EF0((uint64_t)v13, (uint64_t)v15, type metadata accessor for TTRAnyListWidget.SystemWidgetView);
    v33 = v61;
    sub_1000072AC((uint64_t)v15, v61, type metadata accessor for TTRAnyListWidget.SystemWidgetView);
    swift_storeEnumTagMultiPayload(v33, v63, 0);
    v34 = sub_100007218(&qword_1000B0CB8, type metadata accessor for TTRAnyListWidget.SystemWidgetView, (uint64_t)&unk_10008A300);
    v35 = sub_100007218(&qword_1000B0CC0, type metadata accessor for TTRIAnyListComplicationWidgetView, (uint64_t)&unk_100089704);
    v36 = v62;
    _ConditionalContent<>.init(storage:)(v62, v33, v10, v64, v34, v35);
    v37 = v67;
    sub_100085A94((uint64_t)v36, (uint64_t)v67);
    swift_storeEnumTagMultiPayload(v37, v65, 0);
    v38 = sub_1000859F8();
    _ConditionalContent<>.init(storage:)(v68, v37, v66, &type metadata for Text, v38, &protocol witness table for Text);
    sub_100085ADC((uint64_t)v36);
    v39 = (uint64_t)v15;
    return (_QWORD *)sub_100007EB4(v39, v32);
  }
  if (v23 == enum case for WidgetFamily.systemMedium(_:))
  {
    v24 = 1;
    goto LABEL_7;
  }
  if (v23 == enum case for WidgetFamily.systemLarge(_:))
  {
    v24 = 2;
    goto LABEL_7;
  }
  v41 = enum case for WidgetFamily.accessoryRectangular(_:);
  if (v23 != enum case for WidgetFamily.systemExtraLarge(_:)
    && v23 != enum case for WidgetFamily.accessoryCircular(_:)
    && v23 != enum case for WidgetFamily.accessoryRectangular(_:)
    && v23 != enum case for WidgetFamily.accessoryInline(_:))
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v20, v41, v16);
  v42 = sub_100007218(&qword_1000B0CA8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t)&protocol conformance descriptor for WidgetFamily);
  dispatch thunk of RawRepresentable.rawValue.getter(&v70, v16, v42);
  dispatch thunk of RawRepresentable.rawValue.getter(&v69, v16, v42);
  v44 = v69;
  v43 = v70;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  if (v43 != v44)
  {
    v54._object = (void *)0x8000000100091FD0;
    v55._countAndFlagsBits = 0x7070755320746F4ELL;
    v55._object = (void *)0xED0000646574726FLL;
    v54._countAndFlagsBits = 0xD000000000000033;
    v56 = TTRLocalizedString(_:comment:)(v55, v54);
    v57 = v67;
    *v67 = v56;
    LOBYTE(v57[1]._countAndFlagsBits) = 0;
    v57[1]._object = _swiftEmptyArrayStorage;
    swift_storeEnumTagMultiPayload(v57, v65, 1);
    v58 = sub_1000859F8();
    return _ConditionalContent<>.init(storage:)(v68, v57, v66, &type metadata for Text, v58, &protocol witness table for Text);
  }
  v45 = _s10WidgetViewVMa_0(0);
  v46 = v60;
  sub_1000072AC(a1 + *(int *)(v45 + 20), v60, type metadata accessor for TTRNewWidgetViewModel);
  v47 = v64;
  *(_QWORD *)(v46 + *(int *)(v64 + 20)) = 3;
  *(_QWORD *)(v46 + *(int *)(v47 + 24)) = 1;
  v32 = type metadata accessor for TTRIAnyListComplicationWidgetView;
  v48 = v61;
  sub_1000072AC(v46, v61, type metadata accessor for TTRIAnyListComplicationWidgetView);
  swift_storeEnumTagMultiPayload(v48, v63, 1);
  v49 = sub_100007218(&qword_1000B0CB8, type metadata accessor for TTRAnyListWidget.SystemWidgetView, (uint64_t)&unk_10008A300);
  v50 = sub_100007218(&qword_1000B0CC0, type metadata accessor for TTRIAnyListComplicationWidgetView, (uint64_t)&unk_100089704);
  v51 = v62;
  _ConditionalContent<>.init(storage:)(v62, v48, v10, v47, v49, v50);
  v52 = v67;
  sub_100085A94((uint64_t)v51, (uint64_t)v67);
  swift_storeEnumTagMultiPayload(v52, v65, 0);
  v53 = sub_1000859F8();
  _ConditionalContent<>.init(storage:)(v68, v52, v66, &type metadata for Text, v53, &protocol witness table for Text);
  sub_100085ADC((uint64_t)v51);
  v39 = v46;
  return (_QWORD *)sub_100007EB4(v39, v32);
}

_QWORD *sub_1000859F0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1000852F8(v1, a1);
}

unint64_t sub_1000859F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B0CB0;
  if (!qword_1000B0CB0)
  {
    v1 = sub_100007258(&qword_1000B0CA0);
    sub_100007218(&qword_1000B0CB8, type metadata accessor for TTRAnyListWidget.SystemWidgetView, (uint64_t)&unk_10008A300);
    sub_100007218(&qword_1000B0CC0, type metadata accessor for TTRIAnyListComplicationWidgetView, (uint64_t)&unk_100089704);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000B0CB0);
  }
  return result;
}

uint64_t sub_100085A94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006DA4(&qword_1000B0CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100085ADC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006DA4(&qword_1000B0CA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100085B1C()
{
  return EnvironmentValues.redactionReasons.getter();
}

uint64_t sub_100085B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000362E0(a1, a2, a3, a4, (void (*)(_QWORD))&type metadata accessor for RedactionReasons, (uint64_t (*)(char *))&EnvironmentValues.redactionReasons.setter);
}

uint64_t sub_100085B64()
{
  return EnvironmentValues.widgetRenderingMode.getter();
}

uint64_t sub_100085B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000362E0(a1, a2, a3, a4, (void (*)(_QWORD))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(char *))&EnvironmentValues.widgetRenderingMode.setter);
}

unint64_t sub_100085BAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B0CD0;
  if (!qword_1000B0CD0)
  {
    v1 = sub_100007258(&qword_1000B0CD8);
    sub_100085C10();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1000B0CD0);
  }
  return result;
}

unint64_t sub_100085C10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B0CE0;
  if (!qword_1000B0CE0)
  {
    v1 = sub_100007258(&qword_1000B0CE8);
    sub_1000859F8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000B0CE0);
  }
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(_TtC24RemindersWidgetExtensionP33_90D91CEB50E50A37AC7E2BD4B9911B9B19ResourceBundleClass);
}

uint64_t sub_100085C9C()
{
  return sub_100085E34(1);
}

uint64_t sub_100085CA4(int a1, int a2, int a3, int a4)
{
  BOOL v9;
  _DWORD v10[2];

  if (qword_1000B9D50 == -1)
  {
    if (qword_1000B9D58)
    {
LABEL_3:
      v10[0] = a1;
      v10[1] = (a2 << 16) | (a3 << 8) | a4;
      return _availability_version_check(1, v10);
    }
  }
  else
  {
    dispatch_once_f(&qword_1000B9D50, 0, (dispatch_function_t)sub_100085E2C);
    if (qword_1000B9D58)
      goto LABEL_3;
  }
  if (qword_1000B9D48 == -1)
  {
    v9 = dword_1000B9D38 < a2;
    if (dword_1000B9D38 > a2)
      return 1;
  }
  else
  {
    dispatch_once_f(&qword_1000B9D48, 0, (dispatch_function_t)sub_100085C9C);
    v9 = dword_1000B9D38 < a2;
    if (dword_1000B9D38 > a2)
      return 1;
  }
  if (v9)
    return 0;
  if (dword_1000B9D3C > a3)
    return 1;
  return dword_1000B9D3C >= a3 && dword_1000B9D40 >= a4;
}

uint64_t sub_100085E2C()
{
  return sub_100085E34(0);
}

uint64_t sub_100085E34(uint64_t result)
{
  void *v1;
  BOOL v2;
  unsigned __int8 *v4;
  uint64_t (*v5)(_QWORD);
  unint64_t v6;
  uint64_t (*v7)(_QWORD, uint64_t, _QWORD, _QWORD);
  uint64_t (*v8)(_QWORD, const char *, uint64_t, unsigned __int8 *);
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t (*v10)(uint64_t);
  uint64_t (*v11)(void);
  FILE *v12;
  FILE *v13;
  uint64_t v14;
  size_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  FILE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  FILE *v27;
  unsigned int (*v28)(uint64_t, char *, uint64_t, uint64_t);
  char v29[32];

  v1 = (void *)qword_1000B9D58;
  if (qword_1000B9D58)
    v2 = (_DWORD)result == 0;
  else
    v2 = 0;
  if (!v2)
  {
    if (&__availability_version_check)
    {
      qword_1000B9D58 = (uint64_t)&__availability_version_check;
      v1 = &__availability_version_check;
    }
    if (!v1 || (_DWORD)result != 0)
    {
      result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "kCFAllocatorNull");
      if (result)
      {
        v4 = *(unsigned __int8 **)result;
        result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDataCreateWithBytesNoCopy");
        if (result)
        {
          v5 = (uint64_t (*)(_QWORD))result;
          v6 = (unint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateWithData");
          result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateFromXMLData");
          if (v6 | result)
          {
            v7 = (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))result;
            result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringCreateWithCStringNoCopy");
            if (result)
            {
              v8 = (uint64_t (*)(_QWORD, const char *, uint64_t, unsigned __int8 *))result;
              result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDictionaryGetValue");
              if (result)
              {
                v9 = (uint64_t (*)(uint64_t, uint64_t))result;
                result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFGetTypeID");
                if (result)
                {
                  v10 = (uint64_t (*)(uint64_t))result;
                  result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetTypeID");
                  if (result)
                  {
                    v11 = (uint64_t (*)(void))result;
                    result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetCString");
                    v28 = (unsigned int (*)(uint64_t, char *, uint64_t, uint64_t))result;
                    if (result)
                    {
                      result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFRelease");
                      if (result)
                      {
                        v12 = (FILE *)result;
                        result = (uint64_t)fopen("/System/Library/CoreServices/SystemVersion.plist", "r");
                        if (result)
                        {
                          v13 = (FILE *)result;
                          v27 = v12;
                          fseek((FILE *)result, 0, 2);
                          v14 = ftell(v13);
                          if (v14 < 0)
                          {
                            v16 = 0;
                          }
                          else
                          {
                            v15 = v14;
                            rewind(v13);
                            v16 = malloc(v15);
                            if (v16)
                            {
                              v26 = v16;
                              if (fread(v16, 1uLL, v15, v13) == v15)
                              {
                                v17 = v5(0);
                                if (v17)
                                {
                                  v18 = v17;
                                  v19 = v13;
                                  if (v6)
                                    v20 = ((uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD))v6)(0, v17, 0, 0, 0);
                                  else
                                    v20 = v7(0, v17, 0, 0);
                                  v21 = v20;
                                  if (v20)
                                  {
                                    v22 = v8(0, "ProductVersion", 1536, v4);
                                    if (v22)
                                    {
                                      v23 = v22;
                                      v24 = v9(v21, v22);
                                      ((void (*)(uint64_t))v27)(v23);
                                      if (v24)
                                      {
                                        v25 = v10(v24);
                                        if (v25 == v11())
                                        {
                                          if (v28(v24, v29, 32, 134217984))
                                            sscanf(v29, "%d.%d.%d", &dword_1000B9D38, &dword_1000B9D3C, &dword_1000B9D40);
                                        }
                                      }
                                    }
                                    ((void (*)(uint64_t))v27)(v21);
                                    v19 = v13;
                                  }
                                  ((void (*)(uint64_t))v27)(v18);
                                }
                                else
                                {
                                  v19 = v13;
                                }
                                v16 = v26;
                              }
                              else
                              {
                                v16 = v26;
                                v19 = v13;
                              }
                              goto LABEL_41;
                            }
                          }
                          v19 = v13;
LABEL_41:
                          free(v16);
                          return fclose(v19);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}
