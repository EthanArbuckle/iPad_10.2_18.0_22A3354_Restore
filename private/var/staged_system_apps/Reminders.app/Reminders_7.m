uint64_t sub_1003A1BDC(uint64_t result, uint64_t a2, uint64_t a3)
{
  char *v5;

  if (result != a2)
  {
    sub_10001F544(result, type metadata accessor for TTRRemindersListReminderCreationLocation);
    v5 = (char *)&loc_1003A1C4C + 4 * byte_1005309E4[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  return result;
}

void sub_1003A454C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  v3 = (char *)sub_1003A45A0 + 4 * byte_100530B44[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }
}

_QWORD *sub_1003A45A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  _OWORD *v75;
  _OWORD *v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  _OWORD *v87;
  _OWORD *v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
  {
    v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
    memcpy(v0, v3, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(v3, v4))
    {
      case 0u:
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v3, v7))
        {
          case 2u:
            v8 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v0, v3, v8);
            v9 = v0;
            v10 = v7;
            v11 = 2;
            goto LABEL_35;
          case 3u:
            v69 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v0, v3, v69);
            v9 = v0;
            v10 = v7;
            v11 = 3;
            goto LABEL_35;
          case 4u:
            v70 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v0, v3, v70);
            v9 = v0;
            v10 = v7;
            v11 = 4;
            goto LABEL_35;
          case 5u:
            v71 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v0, v3, v71);
            v9 = v0;
            v10 = v7;
            v11 = 5;
            goto LABEL_35;
          case 6u:
            v72 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v0, v3, v72);
            v9 = v0;
            v10 = v7;
            v11 = 6;
LABEL_35:
            swift_storeEnumTagMultiPayload(v9, v10, v11);
            break;
          default:
            memcpy(v0, v3, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
            break;
        }
        v73 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v74 = v73[5];
        v75 = (_OWORD *)((char *)v0 + v74);
        v76 = (_OWORD *)((char *)v3 + v74);
        v77 = v76[3];
        v75[2] = v76[2];
        v75[3] = v77;
        v78 = v76[1];
        *v75 = *v76;
        v75[1] = v78;
        *(_OWORD *)((char *)v75 + 106) = *(_OWORD *)((char *)v76 + 106);
        v79 = v76[6];
        v80 = v76[4];
        v75[5] = v76[5];
        v75[6] = v79;
        v75[4] = v80;
        *((_BYTE *)v0 + v73[6]) = *((_BYTE *)v3 + v73[6]);
        *((_BYTE *)v0 + v73[7]) = *((_BYTE *)v3 + v73[7]);
        *((_BYTE *)v0 + v73[8]) = *((_BYTE *)v3 + v73[8]);
        *((_BYTE *)v0 + v73[9]) = *((_BYTE *)v3 + v73[9]);
        *((_BYTE *)v0 + v73[10]) = *((_BYTE *)v3 + v73[10]);
        *(_QWORD *)((char *)v0 + v73[11]) = *(_QWORD *)((char *)v3 + v73[11]);
        v45 = v0;
        v46 = v4;
        v47 = 0;
        goto LABEL_68;
      case 1u:
        v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v3, v12))
        {
          case 2u:
            v13 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v0, v3, v13);
            v14 = v0;
            v15 = v12;
            v16 = 2;
            goto LABEL_42;
          case 3u:
            v81 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v0, v3, v81);
            v14 = v0;
            v15 = v12;
            v16 = 3;
            goto LABEL_42;
          case 4u:
            v82 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(v0, v3, v82);
            v14 = v0;
            v15 = v12;
            v16 = 4;
            goto LABEL_42;
          case 5u:
            v83 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v0, v3, v83);
            v14 = v0;
            v15 = v12;
            v16 = 5;
            goto LABEL_42;
          case 6u:
            v84 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v0, v3, v84);
            v14 = v0;
            v15 = v12;
            v16 = 6;
LABEL_42:
            swift_storeEnumTagMultiPayload(v14, v15, v16);
            break;
          default:
            memcpy(v0, v3, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
            break;
        }
        v85 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v86 = v85[5];
        v87 = (_OWORD *)((char *)v0 + v86);
        v88 = (_OWORD *)((char *)v3 + v86);
        v89 = v88[3];
        v87[2] = v88[2];
        v87[3] = v89;
        v90 = v88[1];
        *v87 = *v88;
        v87[1] = v90;
        *(_OWORD *)((char *)v87 + 106) = *(_OWORD *)((char *)v88 + 106);
        v91 = v88[6];
        v92 = v88[4];
        v87[5] = v88[5];
        v87[6] = v91;
        v87[4] = v92;
        *((_BYTE *)v0 + v85[6]) = *((_BYTE *)v3 + v85[6]);
        *((_BYTE *)v0 + v85[7]) = *((_BYTE *)v3 + v85[7]);
        *((_BYTE *)v0 + v85[8]) = *((_BYTE *)v3 + v85[8]);
        *((_BYTE *)v0 + v85[9]) = *((_BYTE *)v3 + v85[9]);
        *((_BYTE *)v0 + v85[10]) = *((_BYTE *)v3 + v85[10]);
        *(_QWORD *)((char *)v0 + v85[11]) = *(_QWORD *)((char *)v3 + v85[11]);
        v45 = v0;
        v46 = v4;
        v47 = 1;
        goto LABEL_68;
      case 2u:
        *v0 = *v3;
        v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v18 = (char *)v0 + v17;
        v19 = (char *)v3 + v17;
        v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v21 = *(_QWORD *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        {
          v22 = sub_10002A750(&qword_100644980);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v19, v20))
          {
            case 2u:
              v48 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v18, v19, v48);
              v49 = v18;
              v50 = v20;
              v51 = 2;
              goto LABEL_49;
            case 3u:
              v93 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v18, v19, v93);
              v49 = v18;
              v50 = v20;
              v51 = 3;
              goto LABEL_49;
            case 4u:
              v94 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v18, v19, v94);
              v49 = v18;
              v50 = v20;
              v51 = 4;
              goto LABEL_49;
            case 5u:
              v95 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v18, v19, v95);
              v49 = v18;
              v50 = v20;
              v51 = 5;
              goto LABEL_49;
            case 6u:
              v96 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v18, v19, v96);
              v49 = v18;
              v50 = v20;
              v51 = 6;
LABEL_49:
              swift_storeEnumTagMultiPayload(v49, v50, v51);
              break;
            default:
              memcpy(v18, v19, *(_QWORD *)(v21 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        }
        v45 = v0;
        v46 = v4;
        v47 = 2;
        goto LABEL_68;
      case 3u:
        *v0 = *v3;
        v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v24 = (char *)v0 + v23;
        v25 = (char *)v3 + v23;
        v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          v28 = sub_10002A750(&qword_100644980);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v25, v26))
          {
            case 2u:
              v52 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v24, v25, v52);
              v53 = v24;
              v54 = v26;
              v55 = 2;
              goto LABEL_57;
            case 3u:
              v97 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v24, v25, v97);
              v53 = v24;
              v54 = v26;
              v55 = 3;
              goto LABEL_57;
            case 4u:
              v98 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v24, v25, v98);
              v53 = v24;
              v54 = v26;
              v55 = 4;
              goto LABEL_57;
            case 5u:
              v99 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v24, v25, v99);
              v53 = v24;
              v54 = v26;
              v55 = 5;
              goto LABEL_57;
            case 6u:
              v100 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v24, v25, v100);
              v53 = v24;
              v54 = v26;
              v55 = 6;
LABEL_57:
              swift_storeEnumTagMultiPayload(v53, v54, v55);
              break;
            default:
              memcpy(v24, v25, *(_QWORD *)(v27 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        v45 = v0;
        v46 = v4;
        v47 = 3;
        goto LABEL_68;
      case 4u:
        *v0 = *v3;
        v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v30 = (char *)v0 + v29;
        v31 = (char *)v3 + v29;
        v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v33 = *(_QWORD *)(v32 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
        {
          v34 = sub_10002A750(&qword_100644980);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v31, v32))
          {
            case 2u:
              v56 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v30, v31, v56);
              v57 = v30;
              v58 = v32;
              v59 = 2;
              goto LABEL_65;
            case 3u:
              v101 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v30, v31, v101);
              v57 = v30;
              v58 = v32;
              v59 = 3;
              goto LABEL_65;
            case 4u:
              v102 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v30, v31, v102);
              v57 = v30;
              v58 = v32;
              v59 = 4;
              goto LABEL_65;
            case 5u:
              v103 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v30, v31, v103);
              v57 = v30;
              v58 = v32;
              v59 = 5;
              goto LABEL_65;
            case 6u:
              v104 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v30, v31, v104);
              v57 = v30;
              v58 = v32;
              v59 = 6;
LABEL_65:
              swift_storeEnumTagMultiPayload(v57, v58, v59);
              break;
            default:
              memcpy(v30, v31, *(_QWORD *)(v33 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        v45 = v0;
        v46 = v4;
        v47 = 4;
        goto LABEL_68;
      case 7u:
        v35 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v36 = *(_QWORD *)(v35 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(v3, 1, v35))
        {
          v37 = sub_10002A750(&qword_100644600);
          memcpy(v0, v3, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          *v0 = *v3;
          v60 = *(int *)(v35 + 20);
          v61 = (char *)v0 + v60;
          v62 = (char *)v3 + v60;
          v63 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v0, 0, 1, v35);
        }
        v64 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v65 = (char *)v0 + v64;
        v66 = (char *)v3 + v64;
        *(_OWORD *)v65 = *(_OWORD *)v66;
        *((_QWORD *)v65 + 2) = *((_QWORD *)v66 + 2);
        v45 = v0;
        v46 = v4;
        v47 = 7;
        goto LABEL_68;
      case 8u:
        v38 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v39 = *(_QWORD *)(v38 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(v3, 1, v38))
        {
          v40 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v0, v3, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          v67 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v0, v3, v67);
          *((_BYTE *)v0 + *(int *)(v38 + 20)) = *((_BYTE *)v3 + *(int *)(v38 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v0, 0, 1, v38);
        }
        v68 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)v0 + *(int *)(v68 + 20)) = *(_QWORD *)((char *)v3 + *(int *)(v68 + 20));
        v45 = v0;
        v46 = v4;
        v47 = 8;
        goto LABEL_68;
      case 9u:
        *(_BYTE *)v0 = *(_BYTE *)v3;
        v41 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v42 = (char *)v0 + v41;
        v43 = (char *)v3 + v41;
        v44 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
        v45 = v0;
        v46 = v4;
        v47 = 9;
LABEL_68:
        swift_storeEnumTagMultiPayload(v45, v46, v47);
        break;
      default:
        memcpy(v0, v3, *(_QWORD *)(v5 + 64));
        break;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v0, 0, 1, v4);
  }
  v105 = sub_10002A750(&qword_1006588F8);
  *(_QWORD *)((char *)v0 + *(int *)(v105 + 48)) = *(_QWORD *)((char *)v3 + *(int *)(v105 + 48));
  swift_storeEnumTagMultiPayload(v0, v1, v2);
  return v0;
}

uint64_t sub_1003A5FAC(uint64_t result, uint64_t a2, uint64_t a3)
{
  char *v5;

  if (result != a2)
  {
    sub_10001F544(result, type metadata accessor for TTRRemindersListReminderCreationLocation);
    v5 = (char *)&loc_1003A6018 + 4 * byte_100530C20[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  return result;
}

void sub_1003A7A34(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _BYTE v8[32];
  _QWORD v9[2];
  uint64_t v10;
  uint64_t v11;

  sub_1000B5C9C(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v8, *(_QWORD *)(v2 - 8) + 64, (char *)&value witness table for Builtin.Int64 + 64);
    v9[0] = v8;
    v4 = type metadata accessor for TTRRemindersListViewModel.SectionID(319);
    if (v5 <= 0x3F)
    {
      v9[1] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for TTRRemindersListViewModel.Item(319);
      if (v7 <= 0x3F)
      {
        v10 = *(_QWORD *)(v6 - 8) + 64;
        v11 = v10;
        swift_initEnumMetadataMultiPayload(a1, 256, 4, v9);
      }
    }
  }
}

void **sub_1003A7AE8(void **a1, void **a2, uint64_t a3)
{
  void **v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void **v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  void **v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void **v35;
  void **v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(void **, uint64_t, uint64_t);
  id v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void **v44;
  void **v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(void **, uint64_t, uint64_t);
  id v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void **v53;
  void **v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v57)(void **, uint64_t, uint64_t);
  id v58;
  uint64_t v59;
  void *v60;
  id v61;
  void **v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  void **v80;
  void **v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int (*v84)(void **, uint64_t, uint64_t);
  id v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  void **v89;
  void **v90;
  uint64_t v91;
  uint64_t v92;
  unsigned int (*v93)(void **, uint64_t, uint64_t);
  id v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  void **v98;
  void **v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int (*v102)(void **, uint64_t, uint64_t);
  id v103;
  uint64_t v104;
  void *v105;
  id v106;
  void **v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  void *v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  id v128;
  void **v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  id v133;
  void **v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  id v138;
  void **v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  void **v146;
  uint64_t v147;
  void (*v148)(char *, char *, uint64_t, __n128);
  __n128 v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  _QWORD *v154;
  uint64_t v155;
  void *v156;
  id v157;
  void *v158;
  id v159;
  void **v160;
  uint64_t v161;
  uint64_t v162;
  void *v163;
  id v164;
  void **v165;
  uint64_t v166;
  uint64_t v167;
  void *v168;
  id v169;
  void **v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  void **v177;
  uint64_t v178;
  void (*v179)(char *, char *, uint64_t, __n128);
  __n128 v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  _QWORD *v185;
  uint64_t v186;
  void *v187;
  id v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  void *v198;
  id v199;
  void *v200;
  id v201;
  int *v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  void *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  int v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  char v217;
  void *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  void *v223;
  id v224;
  void **v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  void *v233;
  id v234;
  void *v235;
  id v236;
  int *v237;
  uint64_t v238;
  char *v239;
  char *v240;
  uint64_t v241;
  void *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  unsigned __int8 v248;
  int v249;
  __int128 v250;
  __int128 v251;
  __int128 v252;
  __int128 v253;
  char v254;
  void *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  void *v262;
  id v263;
  void **v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  void *v272;
  id v273;
  void *v274;
  id v275;
  int *v276;
  uint64_t v277;
  char *v278;
  char *v279;
  uint64_t v280;
  void *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  int v287;
  __int128 v288;
  __int128 v289;
  __int128 v290;
  __int128 v291;
  char v292;
  void *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  void *v299;
  id v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  void *v306;
  id v307;
  void *v308;
  id v309;
  int *v310;
  uint64_t v311;
  char *v312;
  char *v313;
  uint64_t v314;
  void *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  unsigned __int8 v321;
  int v322;
  __int128 v323;
  __int128 v324;
  __int128 v325;
  __int128 v326;
  char v327;
  void *v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  void *v335;
  id v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  void *v342;
  id v343;
  void *v344;
  id v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  void *v350;
  id v351;
  void *v352;
  id v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  void *v359;
  id v360;
  void *v361;
  id v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  void *v368;
  id v369;
  void *v370;
  id v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  void *v376;
  id v377;
  void *v378;
  id v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  void *v385;
  id v386;
  void *v387;
  id v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  void **v394;
  void **v395;
  uint64_t v396;
  void *v397;
  id v398;
  void **v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  void *v403;
  id v404;
  void **v405;
  uint64_t v406;
  uint64_t v407;
  void *v408;
  uint64_t v409;
  void **v410;
  void **v411;
  void **v412;
  uint64_t v413;
  uint64_t v414;
  unsigned int (*v415)(void **, uint64_t, uint64_t);
  id v416;
  uint64_t v417;
  uint64_t v418;
  void *v419;
  uint64_t v420;
  void **v421;
  void **v422;
  void **v423;
  uint64_t v424;
  uint64_t v425;
  unsigned int (*v426)(void **, uint64_t, uint64_t);
  id v427;
  uint64_t v428;
  uint64_t v429;
  void *v430;
  uint64_t v431;
  void **v432;
  void **v433;
  void **v434;
  uint64_t v435;
  uint64_t v436;
  unsigned int (*v437)(void **, uint64_t, uint64_t);
  id v438;
  uint64_t v439;
  uint64_t v440;
  void *v441;
  id v442;
  void **v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  char *v450;
  char *v451;
  uint64_t v452;
  void *v453;
  id v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  void *v458;
  id v459;
  void **v460;
  uint64_t v461;
  uint64_t v462;
  void *v463;
  id v464;
  void **v465;
  uint64_t v466;
  uint64_t v467;
  void *v468;
  id v469;
  void **v470;
  uint64_t v471;
  uint64_t v472;
  void *v473;
  uint64_t v474;
  uint64_t v475;
  void **v476;
  uint64_t v477;
  void (*v478)(char *, char *, uint64_t, __n128);
  __n128 v479;
  uint64_t v480;
  uint64_t v481;
  _QWORD *v482;
  _QWORD *v483;
  uint64_t v484;
  void *v485;
  id v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  void *v494;
  id v495;
  void *v496;
  id v497;
  int *v498;
  uint64_t v499;
  char *v500;
  char *v501;
  uint64_t v502;
  void *v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  int v509;
  __int128 v510;
  __int128 v511;
  __int128 v512;
  __int128 v513;
  uint64_t v514;
  void *v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  void *v521;
  id v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  void *v528;
  id v529;
  void *v530;
  id v531;
  int *v532;
  uint64_t v533;
  char *v534;
  char *v535;
  uint64_t v536;
  uint64_t v537;
  void *v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  int v543;
  __int128 v544;
  __int128 v545;
  __int128 v546;
  __int128 v547;
  uint64_t v548;
  void *v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  void *v555;
  id v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  void *v562;
  id v563;
  void *v564;
  id v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  void *v571;
  id v572;
  void *v573;
  id v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  void *v580;
  id v581;
  void *v582;
  id v583;
  unsigned __int8 v585;
  uint64_t v586;
  char *v587;
  char *v588;
  uint64_t v589;
  uint64_t v590;
  unsigned __int8 v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  char *v595;
  unsigned __int8 v596;
  char v597;
  unsigned __int8 v598;
  char v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  char *v603;
  void **v604;
  void **v605;
  void **v606;
  void **v607;
  void **v608;
  void **v609;
  void **v610;
  void **v611;
  void **v612;
  void **v613;
  void **v614;
  void **v615;
  void **v616;
  void **v617;
  void **v618;
  void **v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;

  v3 = a2;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = (char *)*a2;
    *a1 = *a2;
    a1 = (void **)&v13[(v5 + 16) & ~(unint64_t)v5];
  }
  else
  {
    v6 = a3;
    v7 = sub_10002A750(&qword_10064B6B0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v3, v7);
    v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v10 = *(_QWORD *)(v9 - 8);
    v11 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(v10 + 48))(v3, 1, v9);
    if (EnumCaseMultiPayload == 1)
    {
      if (v11)
      {
        v12 = sub_10002A750((uint64_t *)&unk_100640EB0);
        memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v3, v9))
        {
          case 0u:
            v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v620 = v6;
            switch(swift_getEnumCaseMultiPayload(v3, v15))
            {
              case 1u:
                v16 = *v3;
                *a1 = *v3;
                v17 = v16;
                v18 = a1;
                v19 = v15;
                v20 = 1;
                goto LABEL_80;
              case 2u:
                v193 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v193 - 8) + 16))(a1, v3, v193);
                v18 = a1;
                v19 = v15;
                v20 = 2;
                goto LABEL_80;
              case 3u:
                v194 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v194 - 8) + 16))(a1, v3, v194);
                v18 = a1;
                v19 = v15;
                v20 = 3;
                goto LABEL_80;
              case 4u:
                v195 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v195 - 8) + 16))(a1, v3, v195);
                v18 = a1;
                v19 = v15;
                v20 = 4;
                goto LABEL_80;
              case 5u:
                v196 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v196 - 8) + 16))(a1, v3, v196);
                v18 = a1;
                v19 = v15;
                v20 = 5;
                goto LABEL_80;
              case 6u:
                v197 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v197 - 8) + 16))(a1, v3, v197);
                v18 = a1;
                v19 = v15;
                v20 = 6;
                goto LABEL_80;
              case 8u:
                v198 = *v3;
                *a1 = *v3;
                v199 = v198;
                v18 = a1;
                v19 = v15;
                v20 = 8;
                goto LABEL_80;
              case 9u:
                v200 = *v3;
                *a1 = *v3;
                v201 = v200;
                v18 = a1;
                v19 = v15;
                v20 = 9;
LABEL_80:
                swift_storeEnumTagMultiPayload(v18, v19, v20);
                break;
              default:
                memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
                break;
            }
            v202 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v203 = v202[5];
            v204 = (char *)a1 + v203;
            v205 = (char *)v3 + v203;
            v206 = *(uint64_t *)((char *)v3 + v203 + 8);
            if (v206)
            {
              v641 = v9;
              v606 = v3;
              v614 = a1;
              *(_QWORD *)v204 = *(_QWORD *)v205;
              *((_QWORD *)v204 + 1) = v206;
              v207 = (void *)*((_QWORD *)v205 + 2);
              v208 = *((_QWORD *)v205 + 3);
              v210 = *((_QWORD *)v205 + 4);
              v209 = *((_QWORD *)v205 + 5);
              v211 = *((_QWORD *)v205 + 6);
              v589 = *((_QWORD *)v205 + 7);
              v585 = v205[64];
              swift_bridgeObjectRetain(v206);
              sub_10003E1F0(v207, v208, v210, v209, v211, v589, v585);
              *((_QWORD *)v204 + 2) = v207;
              *((_QWORD *)v204 + 3) = v208;
              *((_QWORD *)v204 + 4) = v210;
              *((_QWORD *)v204 + 5) = v209;
              *((_QWORD *)v204 + 6) = v211;
              *((_QWORD *)v204 + 7) = v589;
              v204[64] = v585;
              *(_DWORD *)(v204 + 65) = *(_DWORD *)(v205 + 65);
              v212 = v205[120];
              if (v212 == 255)
              {
                v213 = *(_OWORD *)(v205 + 88);
                *(_OWORD *)(v204 + 72) = *(_OWORD *)(v205 + 72);
                *(_OWORD *)(v204 + 88) = v213;
                *(_OWORD *)(v204 + 104) = *(_OWORD *)(v205 + 104);
                v204[120] = v205[120];
              }
              else
              {
                v217 = v212 & 1;
                v218 = (void *)*((_QWORD *)v205 + 9);
                v219 = *((_QWORD *)v205 + 10);
                v221 = *((_QWORD *)v205 + 11);
                v220 = *((_QWORD *)v205 + 12);
                v586 = *((_QWORD *)v205 + 14);
                v590 = *((_QWORD *)v205 + 13);
                sub_10002B764(v218, v219, v221, v220, v590, v586, v212 & 1);
                *((_QWORD *)v204 + 9) = v218;
                *((_QWORD *)v204 + 10) = v219;
                *((_QWORD *)v204 + 11) = v221;
                *((_QWORD *)v204 + 12) = v220;
                *((_QWORD *)v204 + 13) = v590;
                *((_QWORD *)v204 + 14) = v586;
                v204[120] = v217;
              }
              v9 = v641;
              v204[121] = v205[121];
              v3 = v606;
              a1 = v614;
            }
            else
            {
              v214 = *((_OWORD *)v205 + 5);
              *((_OWORD *)v204 + 4) = *((_OWORD *)v205 + 4);
              *((_OWORD *)v204 + 5) = v214;
              *((_OWORD *)v204 + 6) = *((_OWORD *)v205 + 6);
              *(_OWORD *)(v204 + 106) = *(_OWORD *)(v205 + 106);
              v215 = *((_OWORD *)v205 + 1);
              *(_OWORD *)v204 = *(_OWORD *)v205;
              *((_OWORD *)v204 + 1) = v215;
              v216 = *((_OWORD *)v205 + 3);
              *((_OWORD *)v204 + 2) = *((_OWORD *)v205 + 2);
              *((_OWORD *)v204 + 3) = v216;
            }
            *((_BYTE *)a1 + v202[6]) = *((_BYTE *)v3 + v202[6]);
            *((_BYTE *)a1 + v202[7]) = *((_BYTE *)v3 + v202[7]);
            *((_BYTE *)a1 + v202[8]) = *((_BYTE *)v3 + v202[8]);
            *((_BYTE *)a1 + v202[9]) = *((_BYTE *)v3 + v202[9]);
            *((_BYTE *)a1 + v202[10]) = *((_BYTE *)v3 + v202[10]);
            v222 = v202[11];
            v223 = *(void **)((char *)v3 + v222);
            *(void **)((char *)a1 + v222) = v223;
            v224 = v223;
            v225 = a1;
            v226 = v9;
            v227 = 0;
            goto LABEL_120;
          case 1u:
            v27 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v620 = v6;
            v601 = v10;
            switch(swift_getEnumCaseMultiPayload(v3, v27))
            {
              case 1u:
                v28 = *v3;
                *a1 = *v3;
                v29 = v28;
                v30 = a1;
                v31 = v27;
                v32 = 1;
                goto LABEL_112;
              case 2u:
                v267 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v267 - 8) + 16))(a1, v3, v267);
                v30 = a1;
                v31 = v27;
                v32 = 2;
                goto LABEL_112;
              case 3u:
                v268 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v268 - 8) + 16))(a1, v3, v268);
                v30 = a1;
                v31 = v27;
                v32 = 3;
                goto LABEL_112;
              case 4u:
                v269 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v269 - 8) + 16))(a1, v3, v269);
                v30 = a1;
                v31 = v27;
                v32 = 4;
                goto LABEL_112;
              case 5u:
                v270 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v270 - 8) + 16))(a1, v3, v270);
                v30 = a1;
                v31 = v27;
                v32 = 5;
                goto LABEL_112;
              case 6u:
                v271 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v271 - 8) + 16))(a1, v3, v271);
                v30 = a1;
                v31 = v27;
                v32 = 6;
                goto LABEL_112;
              case 8u:
                v272 = *v3;
                *a1 = *v3;
                v273 = v272;
                v30 = a1;
                v31 = v27;
                v32 = 8;
                goto LABEL_112;
              case 9u:
                v274 = *v3;
                *a1 = *v3;
                v275 = v274;
                v30 = a1;
                v31 = v27;
                v32 = 9;
LABEL_112:
                swift_storeEnumTagMultiPayload(v30, v31, v32);
                break;
              default:
                memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
                break;
            }
            v276 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v277 = v276[5];
            v278 = (char *)a1 + v277;
            v279 = (char *)v3 + v277;
            v280 = *(uint64_t *)((char *)v3 + v277 + 8);
            if (v280)
            {
              v642 = v9;
              v608 = v3;
              v616 = a1;
              *(_QWORD *)v278 = *(_QWORD *)v279;
              *((_QWORD *)v278 + 1) = v280;
              v281 = (void *)*((_QWORD *)v279 + 2);
              v282 = *((_QWORD *)v279 + 3);
              v284 = *((_QWORD *)v279 + 4);
              v283 = *((_QWORD *)v279 + 5);
              v286 = *((_QWORD *)v279 + 6);
              v285 = *((_QWORD *)v279 + 7);
              v591 = v279[64];
              swift_bridgeObjectRetain(v280);
              sub_10003E1F0(v281, v282, v284, v283, v286, v285, v591);
              *((_QWORD *)v278 + 2) = v281;
              *((_QWORD *)v278 + 3) = v282;
              *((_QWORD *)v278 + 4) = v284;
              *((_QWORD *)v278 + 5) = v283;
              *((_QWORD *)v278 + 6) = v286;
              *((_QWORD *)v278 + 7) = v285;
              v278[64] = v591;
              *(_DWORD *)(v278 + 65) = *(_DWORD *)(v279 + 65);
              v287 = v279[120];
              if (v287 == 255)
              {
                v288 = *(_OWORD *)(v279 + 88);
                *(_OWORD *)(v278 + 72) = *(_OWORD *)(v279 + 72);
                *(_OWORD *)(v278 + 88) = v288;
                *(_OWORD *)(v278 + 104) = *(_OWORD *)(v279 + 104);
                v278[120] = v279[120];
              }
              else
              {
                v292 = v287 & 1;
                v293 = (void *)*((_QWORD *)v279 + 9);
                v294 = *((_QWORD *)v279 + 10);
                v296 = *((_QWORD *)v279 + 11);
                v295 = *((_QWORD *)v279 + 12);
                v297 = *((_QWORD *)v279 + 13);
                v592 = *((_QWORD *)v279 + 14);
                sub_10002B764(v293, v294, v296, v295, v297, v592, v287 & 1);
                *((_QWORD *)v278 + 9) = v293;
                *((_QWORD *)v278 + 10) = v294;
                *((_QWORD *)v278 + 11) = v296;
                *((_QWORD *)v278 + 12) = v295;
                *((_QWORD *)v278 + 13) = v297;
                *((_QWORD *)v278 + 14) = v592;
                v278[120] = v292;
              }
              v9 = v642;
              v10 = v601;
              v3 = v608;
              v278[121] = v279[121];
              a1 = v616;
            }
            else
            {
              v289 = *((_OWORD *)v279 + 5);
              *((_OWORD *)v278 + 4) = *((_OWORD *)v279 + 4);
              *((_OWORD *)v278 + 5) = v289;
              *((_OWORD *)v278 + 6) = *((_OWORD *)v279 + 6);
              *(_OWORD *)(v278 + 106) = *(_OWORD *)(v279 + 106);
              v290 = *((_OWORD *)v279 + 1);
              *(_OWORD *)v278 = *(_OWORD *)v279;
              *((_OWORD *)v278 + 1) = v290;
              v291 = *((_OWORD *)v279 + 3);
              *((_OWORD *)v278 + 2) = *((_OWORD *)v279 + 2);
              *((_OWORD *)v278 + 3) = v291;
            }
            *((_BYTE *)a1 + v276[6]) = *((_BYTE *)v3 + v276[6]);
            *((_BYTE *)a1 + v276[7]) = *((_BYTE *)v3 + v276[7]);
            *((_BYTE *)a1 + v276[8]) = *((_BYTE *)v3 + v276[8]);
            *((_BYTE *)a1 + v276[9]) = *((_BYTE *)v3 + v276[9]);
            *((_BYTE *)a1 + v276[10]) = *((_BYTE *)v3 + v276[10]);
            v298 = v276[11];
            v299 = *(void **)((char *)v3 + v298);
            *(void **)((char *)a1 + v298) = v299;
            v300 = v299;
            v225 = a1;
            v226 = v9;
            v227 = 1;
LABEL_120:
            swift_storeEnumTagMultiPayload(v225, v226, v227);
            v6 = v620;
            break;
          case 2u:
            v622 = v6;
            v632 = v9;
            v33 = *v3;
            *a1 = *v3;
            v34 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v35 = (void **)((char *)a1 + v34);
            v36 = (void **)((char *)v3 + v34);
            v37 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v38 = *(_QWORD *)(v37 - 8);
            v39 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v38 + 48);
            v40 = v33;
            if (v39(v36, 1, v37))
            {
              v41 = sub_10002A750(&qword_100644980);
              memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
              v6 = v622;
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v36, v37))
              {
                case 1u:
                  v127 = *v36;
                  *v35 = *v36;
                  v128 = v127;
                  v129 = v35;
                  v130 = v37;
                  v131 = 1;
                  goto LABEL_146;
                case 2u:
                  v337 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v337 - 8) + 16))(v35, v36, v337);
                  v129 = v35;
                  v130 = v37;
                  v131 = 2;
                  goto LABEL_146;
                case 3u:
                  v338 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v338 - 8) + 16))(v35, v36, v338);
                  v129 = v35;
                  v130 = v37;
                  v131 = 3;
                  goto LABEL_146;
                case 4u:
                  v339 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v339 - 8) + 16))(v35, v36, v339);
                  v129 = v35;
                  v130 = v37;
                  v131 = 4;
                  goto LABEL_146;
                case 5u:
                  v340 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v340 - 8) + 16))(v35, v36, v340);
                  v129 = v35;
                  v130 = v37;
                  v131 = 5;
                  goto LABEL_146;
                case 6u:
                  v341 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v341 - 8) + 16))(v35, v36, v341);
                  v129 = v35;
                  v130 = v37;
                  v131 = 6;
                  goto LABEL_146;
                case 8u:
                  v342 = *v36;
                  *v35 = *v36;
                  v343 = v342;
                  v129 = v35;
                  v130 = v37;
                  v131 = 8;
                  goto LABEL_146;
                case 9u:
                  v344 = *v36;
                  *v35 = *v36;
                  v345 = v344;
                  v129 = v35;
                  v130 = v37;
                  v131 = 9;
LABEL_146:
                  swift_storeEnumTagMultiPayload(v129, v130, v131);
                  break;
                default:
                  memcpy(v35, v36, *(_QWORD *)(v38 + 64));
                  break;
              }
              v6 = v622;
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
            }
            v9 = v632;
            v62 = a1;
            v63 = v632;
            v64 = 2;
            goto LABEL_200;
          case 3u:
            v623 = v6;
            v633 = v9;
            v42 = *v3;
            *a1 = *v3;
            v43 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v44 = (void **)((char *)a1 + v43);
            v45 = (void **)((char *)v3 + v43);
            v46 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v47 = *(_QWORD *)(v46 - 8);
            v48 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v47 + 48);
            v49 = v42;
            if (v48(v45, 1, v46))
            {
              v50 = sub_10002A750(&qword_100644980);
              memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
              v6 = v623;
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v45, v46))
              {
                case 1u:
                  v132 = *v45;
                  *v44 = *v45;
                  v133 = v132;
                  v134 = v44;
                  v135 = v46;
                  v136 = 1;
                  goto LABEL_197;
                case 2u:
                  v346 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v346 - 8) + 16))(v44, v45, v346);
                  v134 = v44;
                  v135 = v46;
                  v136 = 2;
                  goto LABEL_197;
                case 3u:
                  v347 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v347 - 8) + 16))(v44, v45, v347);
                  v134 = v44;
                  v135 = v46;
                  v136 = 3;
                  goto LABEL_197;
                case 4u:
                  v348 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v348 - 8) + 16))(v44, v45, v348);
                  v134 = v44;
                  v135 = v46;
                  v136 = 4;
                  goto LABEL_197;
                case 5u:
                  v389 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v389 - 8) + 16))(v44, v45, v389);
                  v134 = v44;
                  v135 = v46;
                  v136 = 5;
                  goto LABEL_197;
                case 6u:
                  v349 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v349 - 8) + 16))(v44, v45, v349);
                  v134 = v44;
                  v135 = v46;
                  v136 = 6;
                  goto LABEL_197;
                case 8u:
                  v350 = *v45;
                  *v44 = *v45;
                  v351 = v350;
                  v134 = v44;
                  v135 = v46;
                  v136 = 8;
                  goto LABEL_197;
                case 9u:
                  v352 = *v45;
                  *v44 = *v45;
                  v353 = v352;
                  v134 = v44;
                  v135 = v46;
                  v136 = 9;
LABEL_197:
                  swift_storeEnumTagMultiPayload(v134, v135, v136);
                  break;
                default:
                  memcpy(v44, v45, *(_QWORD *)(v47 + 64));
                  break;
              }
              v6 = v623;
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
            }
            v9 = v633;
            v62 = a1;
            v63 = v633;
            v64 = 3;
            goto LABEL_200;
          case 4u:
            v624 = v6;
            v634 = v9;
            v51 = *v3;
            *a1 = *v3;
            v52 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v53 = (void **)((char *)a1 + v52);
            v54 = (void **)((char *)v3 + v52);
            v55 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v56 = *(_QWORD *)(v55 - 8);
            v57 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v56 + 48);
            v58 = v51;
            if (v57(v54, 1, v55))
            {
              v59 = sub_10002A750(&qword_100644980);
              memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
              v6 = v624;
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v54, v55))
              {
                case 1u:
                  v137 = *v54;
                  *v53 = *v54;
                  v138 = v137;
                  v139 = v53;
                  v140 = v55;
                  v141 = 1;
                  goto LABEL_164;
                case 2u:
                  v354 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v354 - 8) + 16))(v53, v54, v354);
                  v139 = v53;
                  v140 = v55;
                  v141 = 2;
                  goto LABEL_164;
                case 3u:
                  v355 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v355 - 8) + 16))(v53, v54, v355);
                  v139 = v53;
                  v140 = v55;
                  v141 = 3;
                  goto LABEL_164;
                case 4u:
                  v356 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v356 - 8) + 16))(v53, v54, v356);
                  v139 = v53;
                  v140 = v55;
                  v141 = 4;
                  goto LABEL_164;
                case 5u:
                  v357 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v357 - 8) + 16))(v53, v54, v357);
                  v139 = v53;
                  v140 = v55;
                  v141 = 5;
                  goto LABEL_164;
                case 6u:
                  v358 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v358 - 8) + 16))(v53, v54, v358);
                  v139 = v53;
                  v140 = v55;
                  v141 = 6;
                  goto LABEL_164;
                case 8u:
                  v359 = *v54;
                  *v53 = *v54;
                  v360 = v359;
                  v139 = v53;
                  v140 = v55;
                  v141 = 8;
                  goto LABEL_164;
                case 9u:
                  v361 = *v54;
                  *v53 = *v54;
                  v362 = v361;
                  v139 = v53;
                  v140 = v55;
                  v141 = 9;
LABEL_164:
                  swift_storeEnumTagMultiPayload(v139, v140, v141);
                  break;
                default:
                  memcpy(v53, v54, *(_QWORD *)(v56 + 64));
                  break;
              }
              v6 = v624;
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
            }
            v9 = v634;
            v62 = a1;
            v63 = v634;
            v64 = 4;
            goto LABEL_200;
          case 5u:
            *a1 = *v3;
            *((_BYTE *)a1 + 8) = *((_BYTE *)v3 + 8);
            *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)v3 + 9);
            v60 = v3[2];
            a1[2] = v60;
            v61 = v60;
            v62 = a1;
            v63 = v9;
            v64 = 5;
            goto LABEL_200;
          case 6u:
            v117 = *v3;
            *a1 = *v3;
            v118 = v117;
            v62 = a1;
            v63 = v9;
            v64 = 6;
            goto LABEL_200;
          case 7u:
            v65 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
            v66 = *(_QWORD *)(v65 - 8);
            if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v66 + 48))(v3, 1, v65))
            {
              v67 = sub_10002A750(&qword_100644600);
              memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
            }
            else
            {
              v142 = *v3;
              *a1 = *v3;
              v143 = *(int *)(v65 + 20);
              v587 = (char *)a1 + v143;
              v612 = a1;
              v144 = (char *)v3 + v143;
              v639 = v9;
              v145 = v6;
              v146 = v3;
              v147 = type metadata accessor for REMHashtagLabelSpecifier(0);
              v148 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v147 - 8) + 16);
              v149 = swift_bridgeObjectRetain(v142);
              v150 = v144;
              a1 = v612;
              v151 = v147;
              v3 = v146;
              v6 = v145;
              v9 = v639;
              v148(v587, v150, v151, v149);
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v66 + 56))(v612, 0, 1, v65);
            }
            v152 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
            v153 = (void **)((char *)a1 + v152);
            v154 = (void **)((char *)v3 + v152);
            v155 = v154[1];
            if (v155)
            {
              *v153 = *v154;
              v153[1] = v155;
              v156 = (void *)v154[2];
              v153[2] = v156;
              swift_bridgeObjectRetain(v155);
              v157 = v156;
            }
            else
            {
              *(_OWORD *)v153 = *(_OWORD *)v154;
              v153[2] = v154[2];
            }
            v62 = a1;
            v63 = v9;
            v64 = 7;
            goto LABEL_200;
          case 8u:
            v119 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
            v120 = *(_QWORD *)(v119 - 8);
            if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v120 + 48))(v3, 1, v119))
            {
              v121 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
              memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
            }
            else
            {
              v189 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v189 - 8) + 16))(a1, v3, v189);
              *((_BYTE *)a1 + *(int *)(v119 + 20)) = *((_BYTE *)v3 + *(int *)(v119 + 20));
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v120 + 56))(a1, 0, 1, v119);
            }
            v190 = type metadata accessor for TTRTemplatePublicLinkData(0);
            *(void **)((char *)a1 + *(int *)(v190 + 20)) = *(void **)((char *)v3 + *(int *)(v190 + 20));
            v62 = a1;
            v63 = v9;
            v64 = 8;
            goto LABEL_200;
          case 9u:
            *(_BYTE *)a1 = *(_BYTE *)v3;
            v68 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
            v69 = (char *)a1 + v68;
            v70 = (char *)v3 + v68;
            v71 = type metadata accessor for AnyTip(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v69, v70, v71);
            v62 = a1;
            v63 = v9;
            v64 = 9;
LABEL_200:
            swift_storeEnumTagMultiPayload(v62, v63, v64);
            break;
          default:
            memcpy(a1, v3, *(_QWORD *)(v10 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      v390 = sub_10002A750(&qword_1006588F8);
      *(void **)((char *)a1 + *(int *)(v390 + 48)) = *(void **)((char *)v3 + *(int *)(v390 + 48));
      v391 = 1;
    }
    else
    {
      if (v11)
      {
        v14 = sub_10002A750((uint64_t *)&unk_100640EB0);
        memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v3, v9))
        {
          case 0u:
            v21 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v621 = v6;
            v631 = v9;
            v600 = v10;
            switch(swift_getEnumCaseMultiPayload(v3, v21))
            {
              case 1u:
                v22 = *v3;
                *a1 = *v3;
                v23 = v22;
                v24 = a1;
                v25 = v21;
                v26 = 1;
                goto LABEL_96;
              case 2u:
                v228 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v228 - 8) + 16))(a1, v3, v228);
                v24 = a1;
                v25 = v21;
                v26 = 2;
                goto LABEL_96;
              case 3u:
                v229 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v229 - 8) + 16))(a1, v3, v229);
                v24 = a1;
                v25 = v21;
                v26 = 3;
                goto LABEL_96;
              case 4u:
                v230 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v230 - 8) + 16))(a1, v3, v230);
                v24 = a1;
                v25 = v21;
                v26 = 4;
                goto LABEL_96;
              case 5u:
                v231 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v231 - 8) + 16))(a1, v3, v231);
                v24 = a1;
                v25 = v21;
                v26 = 5;
                goto LABEL_96;
              case 6u:
                v232 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v232 - 8) + 16))(a1, v3, v232);
                v24 = a1;
                v25 = v21;
                v26 = 6;
                goto LABEL_96;
              case 8u:
                v233 = *v3;
                *a1 = *v3;
                v234 = v233;
                v24 = a1;
                v25 = v21;
                v26 = 8;
                goto LABEL_96;
              case 9u:
                v235 = *v3;
                *a1 = *v3;
                v236 = v235;
                v24 = a1;
                v25 = v21;
                v26 = 9;
LABEL_96:
                swift_storeEnumTagMultiPayload(v24, v25, v26);
                break;
              default:
                memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
                break;
            }
            v237 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v238 = v237[5];
            v239 = (char *)a1 + v238;
            v240 = (char *)v3 + v238;
            v241 = *(uint64_t *)((char *)v3 + v238 + 8);
            if (v241)
            {
              v594 = v7;
              v607 = v3;
              v615 = a1;
              *(_QWORD *)v239 = *(_QWORD *)v240;
              *((_QWORD *)v239 + 1) = v241;
              v242 = (void *)*((_QWORD *)v240 + 2);
              v243 = *((_QWORD *)v240 + 3);
              v245 = *((_QWORD *)v240 + 4);
              v244 = *((_QWORD *)v240 + 5);
              v247 = *((_QWORD *)v240 + 6);
              v246 = *((_QWORD *)v240 + 7);
              v248 = v240[64];
              swift_bridgeObjectRetain(v241);
              sub_10003E1F0(v242, v243, v245, v244, v247, v246, v248);
              *((_QWORD *)v239 + 2) = v242;
              *((_QWORD *)v239 + 3) = v243;
              *((_QWORD *)v239 + 4) = v245;
              *((_QWORD *)v239 + 5) = v244;
              *((_QWORD *)v239 + 6) = v247;
              *((_QWORD *)v239 + 7) = v246;
              v239[64] = v248;
              *(_DWORD *)(v239 + 65) = *(_DWORD *)(v240 + 65);
              v249 = v240[120];
              if (v249 == 255)
              {
                v250 = *(_OWORD *)(v240 + 88);
                *(_OWORD *)(v239 + 72) = *(_OWORD *)(v240 + 72);
                *(_OWORD *)(v239 + 88) = v250;
                *(_OWORD *)(v239 + 104) = *(_OWORD *)(v240 + 104);
                v239[120] = v240[120];
              }
              else
              {
                v254 = v249 & 1;
                v255 = (void *)*((_QWORD *)v240 + 9);
                v256 = *((_QWORD *)v240 + 10);
                v258 = *((_QWORD *)v240 + 11);
                v257 = *((_QWORD *)v240 + 12);
                v259 = *((_QWORD *)v240 + 13);
                v260 = *((_QWORD *)v240 + 14);
                sub_10002B764(v255, v256, v258, v257, v259, v260, v249 & 1);
                *((_QWORD *)v239 + 9) = v255;
                *((_QWORD *)v239 + 10) = v256;
                *((_QWORD *)v239 + 11) = v258;
                *((_QWORD *)v239 + 12) = v257;
                *((_QWORD *)v239 + 13) = v259;
                *((_QWORD *)v239 + 14) = v260;
                v239[120] = v254;
              }
              v9 = v631;
              v7 = v594;
              v10 = v600;
              v239[121] = v240[121];
              v3 = v607;
              a1 = v615;
            }
            else
            {
              v251 = *((_OWORD *)v240 + 5);
              *((_OWORD *)v239 + 4) = *((_OWORD *)v240 + 4);
              *((_OWORD *)v239 + 5) = v251;
              *((_OWORD *)v239 + 6) = *((_OWORD *)v240 + 6);
              *(_OWORD *)(v239 + 106) = *(_OWORD *)(v240 + 106);
              v252 = *((_OWORD *)v240 + 1);
              *(_OWORD *)v239 = *(_OWORD *)v240;
              *((_OWORD *)v239 + 1) = v252;
              v253 = *((_OWORD *)v240 + 3);
              *((_OWORD *)v239 + 2) = *((_OWORD *)v240 + 2);
              *((_OWORD *)v239 + 3) = v253;
            }
            *((_BYTE *)a1 + v237[6]) = *((_BYTE *)v3 + v237[6]);
            *((_BYTE *)a1 + v237[7]) = *((_BYTE *)v3 + v237[7]);
            *((_BYTE *)a1 + v237[8]) = *((_BYTE *)v3 + v237[8]);
            *((_BYTE *)a1 + v237[9]) = *((_BYTE *)v3 + v237[9]);
            *((_BYTE *)a1 + v237[10]) = *((_BYTE *)v3 + v237[10]);
            v261 = v237[11];
            v262 = *(void **)((char *)v3 + v261);
            *(void **)((char *)a1 + v261) = v262;
            v263 = v262;
            v264 = a1;
            v265 = v9;
            v266 = 0;
            goto LABEL_137;
          case 1u:
            v72 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v621 = v6;
            v635 = v9;
            v593 = v7;
            v602 = v10;
            switch(swift_getEnumCaseMultiPayload(v3, v72))
            {
              case 1u:
                v73 = *v3;
                *a1 = *v3;
                v74 = v73;
                v75 = a1;
                v76 = v72;
                v77 = 1;
                goto LABEL_129;
              case 2u:
                v301 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v301 - 8) + 16))(a1, v3, v301);
                v75 = a1;
                v76 = v72;
                v77 = 2;
                goto LABEL_129;
              case 3u:
                v302 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v302 - 8) + 16))(a1, v3, v302);
                v75 = a1;
                v76 = v72;
                v77 = 3;
                goto LABEL_129;
              case 4u:
                v303 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v303 - 8) + 16))(a1, v3, v303);
                v75 = a1;
                v76 = v72;
                v77 = 4;
                goto LABEL_129;
              case 5u:
                v304 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v304 - 8) + 16))(a1, v3, v304);
                v75 = a1;
                v76 = v72;
                v77 = 5;
                goto LABEL_129;
              case 6u:
                v305 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v305 - 8) + 16))(a1, v3, v305);
                v75 = a1;
                v76 = v72;
                v77 = 6;
                goto LABEL_129;
              case 8u:
                v306 = *v3;
                *a1 = *v3;
                v307 = v306;
                v75 = a1;
                v76 = v72;
                v77 = 8;
                goto LABEL_129;
              case 9u:
                v308 = *v3;
                *a1 = *v3;
                v309 = v308;
                v75 = a1;
                v76 = v72;
                v77 = 9;
LABEL_129:
                swift_storeEnumTagMultiPayload(v75, v76, v77);
                break;
              default:
                memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
                break;
            }
            v310 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v311 = v310[5];
            v312 = (char *)a1 + v311;
            v313 = (char *)v3 + v311;
            v314 = *(uint64_t *)((char *)v3 + v311 + 8);
            if (v314)
            {
              v609 = v3;
              v617 = a1;
              *(_QWORD *)v312 = *(_QWORD *)v313;
              *((_QWORD *)v312 + 1) = v314;
              v315 = (void *)*((_QWORD *)v313 + 2);
              v316 = *((_QWORD *)v313 + 3);
              v318 = *((_QWORD *)v313 + 4);
              v317 = *((_QWORD *)v313 + 5);
              v320 = *((_QWORD *)v313 + 6);
              v319 = *((_QWORD *)v313 + 7);
              v321 = v313[64];
              swift_bridgeObjectRetain(v314);
              sub_10003E1F0(v315, v316, v318, v317, v320, v319, v321);
              *((_QWORD *)v312 + 2) = v315;
              *((_QWORD *)v312 + 3) = v316;
              *((_QWORD *)v312 + 4) = v318;
              *((_QWORD *)v312 + 5) = v317;
              *((_QWORD *)v312 + 6) = v320;
              *((_QWORD *)v312 + 7) = v319;
              v312[64] = v321;
              *(_DWORD *)(v312 + 65) = *(_DWORD *)(v313 + 65);
              v322 = v313[120];
              if (v322 == 255)
              {
                v323 = *(_OWORD *)(v313 + 88);
                *(_OWORD *)(v312 + 72) = *(_OWORD *)(v313 + 72);
                *(_OWORD *)(v312 + 88) = v323;
                *(_OWORD *)(v312 + 104) = *(_OWORD *)(v313 + 104);
                v312[120] = v313[120];
              }
              else
              {
                v327 = v322 & 1;
                v328 = (void *)*((_QWORD *)v313 + 9);
                v329 = *((_QWORD *)v313 + 10);
                v331 = *((_QWORD *)v313 + 11);
                v330 = *((_QWORD *)v313 + 12);
                v332 = *((_QWORD *)v313 + 13);
                v333 = *((_QWORD *)v313 + 14);
                sub_10002B764(v328, v329, v331, v330, v332, v333, v322 & 1);
                *((_QWORD *)v312 + 9) = v328;
                *((_QWORD *)v312 + 10) = v329;
                *((_QWORD *)v312 + 11) = v331;
                *((_QWORD *)v312 + 12) = v330;
                *((_QWORD *)v312 + 13) = v332;
                *((_QWORD *)v312 + 14) = v333;
                v312[120] = v327;
              }
              v9 = v635;
              v7 = v593;
              v10 = v602;
              v312[121] = v313[121];
              v3 = v609;
              a1 = v617;
            }
            else
            {
              v324 = *((_OWORD *)v313 + 5);
              *((_OWORD *)v312 + 4) = *((_OWORD *)v313 + 4);
              *((_OWORD *)v312 + 5) = v324;
              *((_OWORD *)v312 + 6) = *((_OWORD *)v313 + 6);
              *(_OWORD *)(v312 + 106) = *(_OWORD *)(v313 + 106);
              v325 = *((_OWORD *)v313 + 1);
              *(_OWORD *)v312 = *(_OWORD *)v313;
              *((_OWORD *)v312 + 1) = v325;
              v326 = *((_OWORD *)v313 + 3);
              *((_OWORD *)v312 + 2) = *((_OWORD *)v313 + 2);
              *((_OWORD *)v312 + 3) = v326;
            }
            *((_BYTE *)a1 + v310[6]) = *((_BYTE *)v3 + v310[6]);
            *((_BYTE *)a1 + v310[7]) = *((_BYTE *)v3 + v310[7]);
            *((_BYTE *)a1 + v310[8]) = *((_BYTE *)v3 + v310[8]);
            *((_BYTE *)a1 + v310[9]) = *((_BYTE *)v3 + v310[9]);
            *((_BYTE *)a1 + v310[10]) = *((_BYTE *)v3 + v310[10]);
            v334 = v310[11];
            v335 = *(void **)((char *)v3 + v334);
            *(void **)((char *)a1 + v334) = v335;
            v336 = v335;
            v264 = a1;
            v265 = v9;
            v266 = 1;
LABEL_137:
            swift_storeEnumTagMultiPayload(v264, v265, v266);
            v6 = v621;
            break;
          case 2u:
            v625 = v6;
            v636 = v9;
            v78 = *v3;
            *a1 = *v3;
            v79 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v80 = (void **)((char *)a1 + v79);
            v81 = (void **)((char *)v3 + v79);
            v82 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v83 = *(_QWORD *)(v82 - 8);
            v84 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v83 + 48);
            v85 = v78;
            if (v84(v81, 1, v82))
            {
              v86 = sub_10002A750(&qword_100644980);
              memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
              v6 = v625;
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v81, v82))
              {
                case 1u:
                  v158 = *v81;
                  *v80 = *v81;
                  v159 = v158;
                  v160 = v80;
                  v161 = v82;
                  v162 = 1;
                  goto LABEL_175;
                case 2u:
                  v363 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v363 - 8) + 16))(v80, v81, v363);
                  v160 = v80;
                  v161 = v82;
                  v162 = 2;
                  goto LABEL_175;
                case 3u:
                  v364 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v364 - 8) + 16))(v80, v81, v364);
                  v160 = v80;
                  v161 = v82;
                  v162 = 3;
                  goto LABEL_175;
                case 4u:
                  v365 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v365 - 8) + 16))(v80, v81, v365);
                  v160 = v80;
                  v161 = v82;
                  v162 = 4;
                  goto LABEL_175;
                case 5u:
                  v366 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v366 - 8) + 16))(v80, v81, v366);
                  v160 = v80;
                  v161 = v82;
                  v162 = 5;
                  goto LABEL_175;
                case 6u:
                  v367 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v367 - 8) + 16))(v80, v81, v367);
                  v160 = v80;
                  v161 = v82;
                  v162 = 6;
                  goto LABEL_175;
                case 8u:
                  v368 = *v81;
                  *v80 = *v81;
                  v369 = v368;
                  v160 = v80;
                  v161 = v82;
                  v162 = 8;
                  goto LABEL_175;
                case 9u:
                  v370 = *v81;
                  *v80 = *v81;
                  v371 = v370;
                  v160 = v80;
                  v161 = v82;
                  v162 = 9;
LABEL_175:
                  swift_storeEnumTagMultiPayload(v160, v161, v162);
                  break;
                default:
                  memcpy(v80, v81, *(_QWORD *)(v83 + 64));
                  break;
              }
              v6 = v625;
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
            }
            v9 = v636;
            v107 = a1;
            v108 = v636;
            v109 = 2;
            goto LABEL_207;
          case 3u:
            v626 = v6;
            v637 = v9;
            v87 = *v3;
            *a1 = *v3;
            v88 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v89 = (void **)((char *)a1 + v88);
            v90 = (void **)((char *)v3 + v88);
            v91 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v92 = *(_QWORD *)(v91 - 8);
            v93 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v92 + 48);
            v94 = v87;
            if (v93(v90, 1, v91))
            {
              v95 = sub_10002A750(&qword_100644980);
              memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
              v6 = v626;
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v90, v91))
              {
                case 1u:
                  v163 = *v90;
                  *v89 = *v90;
                  v164 = v163;
                  v165 = v89;
                  v166 = v91;
                  v167 = 1;
                  goto LABEL_204;
                case 2u:
                  v372 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v372 - 8) + 16))(v89, v90, v372);
                  v165 = v89;
                  v166 = v91;
                  v167 = 2;
                  goto LABEL_204;
                case 3u:
                  v373 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v373 - 8) + 16))(v89, v90, v373);
                  v165 = v89;
                  v166 = v91;
                  v167 = 3;
                  goto LABEL_204;
                case 4u:
                  v374 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v374 - 8) + 16))(v89, v90, v374);
                  v165 = v89;
                  v166 = v91;
                  v167 = 4;
                  goto LABEL_204;
                case 5u:
                  v392 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v392 - 8) + 16))(v89, v90, v392);
                  v165 = v89;
                  v166 = v91;
                  v167 = 5;
                  goto LABEL_204;
                case 6u:
                  v375 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v375 - 8) + 16))(v89, v90, v375);
                  v165 = v89;
                  v166 = v91;
                  v167 = 6;
                  goto LABEL_204;
                case 8u:
                  v376 = *v90;
                  *v89 = *v90;
                  v377 = v376;
                  v165 = v89;
                  v166 = v91;
                  v167 = 8;
                  goto LABEL_204;
                case 9u:
                  v378 = *v90;
                  *v89 = *v90;
                  v379 = v378;
                  v165 = v89;
                  v166 = v91;
                  v167 = 9;
LABEL_204:
                  swift_storeEnumTagMultiPayload(v165, v166, v167);
                  break;
                default:
                  memcpy(v89, v90, *(_QWORD *)(v92 + 64));
                  break;
              }
              v6 = v626;
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v92 + 56))(v89, 0, 1, v91);
            }
            v9 = v637;
            v107 = a1;
            v108 = v637;
            v109 = 3;
            goto LABEL_207;
          case 4u:
            v627 = v6;
            v638 = v9;
            v96 = *v3;
            *a1 = *v3;
            v97 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v98 = (void **)((char *)a1 + v97);
            v99 = (void **)((char *)v3 + v97);
            v100 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v101 = *(_QWORD *)(v100 - 8);
            v102 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v101 + 48);
            v103 = v96;
            if (v102(v99, 1, v100))
            {
              v104 = sub_10002A750(&qword_100644980);
              memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
              v6 = v627;
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v99, v100))
              {
                case 1u:
                  v168 = *v99;
                  *v98 = *v99;
                  v169 = v168;
                  v170 = v98;
                  v171 = v100;
                  v172 = 1;
                  goto LABEL_193;
                case 2u:
                  v380 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v380 - 8) + 16))(v98, v99, v380);
                  v170 = v98;
                  v171 = v100;
                  v172 = 2;
                  goto LABEL_193;
                case 3u:
                  v381 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v381 - 8) + 16))(v98, v99, v381);
                  v170 = v98;
                  v171 = v100;
                  v172 = 3;
                  goto LABEL_193;
                case 4u:
                  v382 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v382 - 8) + 16))(v98, v99, v382);
                  v170 = v98;
                  v171 = v100;
                  v172 = 4;
                  goto LABEL_193;
                case 5u:
                  v383 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v383 - 8) + 16))(v98, v99, v383);
                  v170 = v98;
                  v171 = v100;
                  v172 = 5;
                  goto LABEL_193;
                case 6u:
                  v384 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v384 - 8) + 16))(v98, v99, v384);
                  v170 = v98;
                  v171 = v100;
                  v172 = 6;
                  goto LABEL_193;
                case 8u:
                  v385 = *v99;
                  *v98 = *v99;
                  v386 = v385;
                  v170 = v98;
                  v171 = v100;
                  v172 = 8;
                  goto LABEL_193;
                case 9u:
                  v387 = *v99;
                  *v98 = *v99;
                  v388 = v387;
                  v170 = v98;
                  v171 = v100;
                  v172 = 9;
LABEL_193:
                  swift_storeEnumTagMultiPayload(v170, v171, v172);
                  break;
                default:
                  memcpy(v98, v99, *(_QWORD *)(v101 + 64));
                  break;
              }
              v6 = v627;
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
            }
            v9 = v638;
            v107 = a1;
            v108 = v638;
            v109 = 4;
            goto LABEL_207;
          case 5u:
            *a1 = *v3;
            *((_BYTE *)a1 + 8) = *((_BYTE *)v3 + 8);
            *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)v3 + 9);
            v105 = v3[2];
            a1[2] = v105;
            v106 = v105;
            v107 = a1;
            v108 = v9;
            v109 = 5;
            goto LABEL_207;
          case 6u:
            v122 = *v3;
            *a1 = *v3;
            v123 = v122;
            v107 = a1;
            v108 = v9;
            v109 = 6;
            goto LABEL_207;
          case 7u:
            v110 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
            v111 = *(_QWORD *)(v110 - 8);
            if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v111 + 48))(v3, 1, v110))
            {
              v112 = sub_10002A750(&qword_100644600);
              memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
            }
            else
            {
              v173 = *v3;
              *a1 = *v3;
              v174 = *(int *)(v110 + 20);
              v588 = (char *)a1 + v174;
              v613 = a1;
              v175 = (char *)v3 + v174;
              v640 = v9;
              v176 = v6;
              v177 = v3;
              v178 = type metadata accessor for REMHashtagLabelSpecifier(0);
              v179 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v178 - 8) + 16);
              v180 = swift_bridgeObjectRetain(v173);
              v181 = v175;
              a1 = v613;
              v182 = v178;
              v3 = v177;
              v6 = v176;
              v9 = v640;
              v179(v588, v181, v182, v180);
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v111 + 56))(v613, 0, 1, v110);
            }
            v183 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
            v184 = (void **)((char *)a1 + v183);
            v185 = (void **)((char *)v3 + v183);
            v186 = v185[1];
            if (v186)
            {
              *v184 = *v185;
              v184[1] = v186;
              v187 = (void *)v185[2];
              v184[2] = v187;
              swift_bridgeObjectRetain(v186);
              v188 = v187;
            }
            else
            {
              *(_OWORD *)v184 = *(_OWORD *)v185;
              v184[2] = v185[2];
            }
            v107 = a1;
            v108 = v9;
            v109 = 7;
            goto LABEL_207;
          case 8u:
            v124 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
            v125 = *(_QWORD *)(v124 - 8);
            if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v125 + 48))(v3, 1, v124))
            {
              v126 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
              memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
            }
            else
            {
              v191 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(a1, v3, v191);
              *((_BYTE *)a1 + *(int *)(v124 + 20)) = *((_BYTE *)v3 + *(int *)(v124 + 20));
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v125 + 56))(a1, 0, 1, v124);
            }
            v192 = type metadata accessor for TTRTemplatePublicLinkData(0);
            *(void **)((char *)a1 + *(int *)(v192 + 20)) = *(void **)((char *)v3 + *(int *)(v192 + 20));
            v107 = a1;
            v108 = v9;
            v109 = 8;
            goto LABEL_207;
          case 9u:
            *(_BYTE *)a1 = *(_BYTE *)v3;
            v113 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
            v114 = (char *)a1 + v113;
            v115 = (char *)v3 + v113;
            v116 = type metadata accessor for AnyTip(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 16))(v114, v115, v116);
            v107 = a1;
            v108 = v9;
            v109 = 9;
LABEL_207:
            swift_storeEnumTagMultiPayload(v107, v108, v109);
            break;
          default:
            memcpy(a1, v3, *(_QWORD *)(v10 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      v391 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v7, v391);
    v393 = *(int *)(v6 + 20);
    v394 = (void **)((char *)a1 + v393);
    v395 = (void **)((char *)v3 + v393);
    switch(swift_getEnumCaseMultiPayload((char *)v3 + v393, v9))
    {
      case 0u:
        v396 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v610 = v3;
        v618 = a1;
        v628 = v6;
        switch(swift_getEnumCaseMultiPayload(v395, v396))
        {
          case 1u:
            v397 = *v395;
            *v394 = *v395;
            v398 = v397;
            v399 = v394;
            v400 = v396;
            v401 = 1;
            goto LABEL_250;
          case 2u:
            v489 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v489 - 8) + 16))(v394, v395, v489);
            v399 = v394;
            v400 = v396;
            v401 = 2;
            goto LABEL_250;
          case 3u:
            v490 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v490 - 8) + 16))(v394, v395, v490);
            v399 = v394;
            v400 = v396;
            v401 = 3;
            goto LABEL_250;
          case 4u:
            v491 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v491 - 8) + 16))(v394, v395, v491);
            v399 = v394;
            v400 = v396;
            v401 = 4;
            goto LABEL_250;
          case 5u:
            v492 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v492 - 8) + 16))(v394, v395, v492);
            v399 = v394;
            v400 = v396;
            v401 = 5;
            goto LABEL_250;
          case 6u:
            v493 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v493 - 8) + 16))(v394, v395, v493);
            v399 = v394;
            v400 = v396;
            v401 = 6;
            goto LABEL_250;
          case 8u:
            v494 = *v395;
            *v394 = *v395;
            v495 = v494;
            v399 = v394;
            v400 = v396;
            v401 = 8;
            goto LABEL_250;
          case 9u:
            v496 = *v395;
            *v394 = *v395;
            v497 = v496;
            v399 = v394;
            v400 = v396;
            v401 = 9;
LABEL_250:
            swift_storeEnumTagMultiPayload(v399, v400, v401);
            break;
          default:
            memcpy(v394, v395, *(_QWORD *)(*(_QWORD *)(v396 - 8) + 64));
            break;
        }
        v498 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v499 = v498[5];
        v500 = (char *)v394 + v499;
        v501 = (char *)v395 + v499;
        v502 = *(uint64_t *)((char *)v395 + v499 + 8);
        if (v502)
        {
          v604 = v394;
          v646 = v9;
          *(_QWORD *)v500 = *(_QWORD *)v501;
          *((_QWORD *)v500 + 1) = v502;
          v503 = (void *)*((_QWORD *)v501 + 2);
          v504 = *((_QWORD *)v501 + 3);
          v506 = *((_QWORD *)v501 + 4);
          v505 = *((_QWORD *)v501 + 5);
          v508 = *((_QWORD *)v501 + 6);
          v507 = *((_QWORD *)v501 + 7);
          v596 = v501[64];
          swift_bridgeObjectRetain(v502);
          sub_10003E1F0(v503, v504, v506, v505, v508, v507, v596);
          *((_QWORD *)v500 + 2) = v503;
          *((_QWORD *)v500 + 3) = v504;
          *((_QWORD *)v500 + 4) = v506;
          *((_QWORD *)v500 + 5) = v505;
          *((_QWORD *)v500 + 6) = v508;
          *((_QWORD *)v500 + 7) = v507;
          v500[64] = v596;
          *(_DWORD *)(v500 + 65) = *(_DWORD *)(v501 + 65);
          v509 = v501[120];
          if (v509 == 255)
          {
            v510 = *(_OWORD *)(v501 + 88);
            *(_OWORD *)(v500 + 72) = *(_OWORD *)(v501 + 72);
            *(_OWORD *)(v500 + 88) = v510;
            *(_OWORD *)(v500 + 104) = *(_OWORD *)(v501 + 104);
            v500[120] = v501[120];
          }
          else
          {
            v597 = v509 & 1;
            v515 = (void *)*((_QWORD *)v501 + 9);
            v514 = *((_QWORD *)v501 + 10);
            v516 = *((_QWORD *)v501 + 11);
            v517 = *((_QWORD *)v501 + 12);
            v518 = *((_QWORD *)v501 + 13);
            v519 = *((_QWORD *)v501 + 14);
            sub_10002B764(v515, v514, v516, v517, v518, v519, v509 & 1);
            *((_QWORD *)v500 + 9) = v515;
            *((_QWORD *)v500 + 10) = v514;
            *((_QWORD *)v500 + 11) = v516;
            *((_QWORD *)v500 + 12) = v517;
            *((_QWORD *)v500 + 13) = v518;
            *((_QWORD *)v500 + 14) = v519;
            v500[120] = v597;
          }
          v3 = v610;
          a1 = v618;
          v6 = v628;
          v9 = v646;
          v500[121] = v501[121];
          v394 = v604;
        }
        else
        {
          v511 = *((_OWORD *)v501 + 5);
          *((_OWORD *)v500 + 4) = *((_OWORD *)v501 + 4);
          *((_OWORD *)v500 + 5) = v511;
          *((_OWORD *)v500 + 6) = *((_OWORD *)v501 + 6);
          *(_OWORD *)(v500 + 106) = *(_OWORD *)(v501 + 106);
          v512 = *((_OWORD *)v501 + 1);
          *(_OWORD *)v500 = *(_OWORD *)v501;
          *((_OWORD *)v500 + 1) = v512;
          v513 = *((_OWORD *)v501 + 3);
          *((_OWORD *)v500 + 2) = *((_OWORD *)v501 + 2);
          *((_OWORD *)v500 + 3) = v513;
        }
        *((_BYTE *)v394 + v498[6]) = *((_BYTE *)v395 + v498[6]);
        *((_BYTE *)v394 + v498[7]) = *((_BYTE *)v395 + v498[7]);
        *((_BYTE *)v394 + v498[8]) = *((_BYTE *)v395 + v498[8]);
        *((_BYTE *)v394 + v498[9]) = *((_BYTE *)v395 + v498[9]);
        *((_BYTE *)v394 + v498[10]) = *((_BYTE *)v395 + v498[10]);
        v520 = v498[11];
        v521 = *(void **)((char *)v395 + v520);
        *(void **)((char *)v394 + v520) = v521;
        v522 = v521;
        v443 = v394;
        v444 = v9;
        v445 = 0;
        goto LABEL_307;
      case 1u:
        v402 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v611 = v3;
        v619 = a1;
        v629 = v6;
        switch(swift_getEnumCaseMultiPayload(v395, v402))
        {
          case 1u:
            v403 = *v395;
            *v394 = *v395;
            v404 = v403;
            v405 = v394;
            v406 = v402;
            v407 = 1;
            goto LABEL_266;
          case 2u:
            v523 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v523 - 8) + 16))(v394, v395, v523);
            v405 = v394;
            v406 = v402;
            v407 = 2;
            goto LABEL_266;
          case 3u:
            v524 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v524 - 8) + 16))(v394, v395, v524);
            v405 = v394;
            v406 = v402;
            v407 = 3;
            goto LABEL_266;
          case 4u:
            v525 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v525 - 8) + 16))(v394, v395, v525);
            v405 = v394;
            v406 = v402;
            v407 = 4;
            goto LABEL_266;
          case 5u:
            v526 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v526 - 8) + 16))(v394, v395, v526);
            v405 = v394;
            v406 = v402;
            v407 = 5;
            goto LABEL_266;
          case 6u:
            v527 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v527 - 8) + 16))(v394, v395, v527);
            v405 = v394;
            v406 = v402;
            v407 = 6;
            goto LABEL_266;
          case 8u:
            v528 = *v395;
            *v394 = *v395;
            v529 = v528;
            v405 = v394;
            v406 = v402;
            v407 = 8;
            goto LABEL_266;
          case 9u:
            v530 = *v395;
            *v394 = *v395;
            v531 = v530;
            v405 = v394;
            v406 = v402;
            v407 = 9;
LABEL_266:
            swift_storeEnumTagMultiPayload(v405, v406, v407);
            break;
          default:
            memcpy(v394, v395, *(_QWORD *)(*(_QWORD *)(v402 - 8) + 64));
            break;
        }
        v532 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v533 = v532[5];
        v534 = (char *)v394 + v533;
        v535 = (char *)v395 + v533;
        v536 = *(uint64_t *)((char *)v395 + v533 + 8);
        if (v536)
        {
          v605 = v394;
          v647 = v9;
          *(_QWORD *)v534 = *(_QWORD *)v535;
          *((_QWORD *)v534 + 1) = v536;
          v538 = (void *)*((_QWORD *)v535 + 2);
          v537 = *((_QWORD *)v535 + 3);
          v539 = *((_QWORD *)v535 + 4);
          v540 = *((_QWORD *)v535 + 5);
          v541 = *((_QWORD *)v535 + 6);
          v542 = *((_QWORD *)v535 + 7);
          v598 = v535[64];
          swift_bridgeObjectRetain(v536);
          sub_10003E1F0(v538, v537, v539, v540, v541, v542, v598);
          *((_QWORD *)v534 + 2) = v538;
          *((_QWORD *)v534 + 3) = v537;
          *((_QWORD *)v534 + 4) = v539;
          *((_QWORD *)v534 + 5) = v540;
          *((_QWORD *)v534 + 6) = v541;
          *((_QWORD *)v534 + 7) = v542;
          v534[64] = v598;
          *(_DWORD *)(v534 + 65) = *(_DWORD *)(v535 + 65);
          v543 = v535[120];
          if (v543 == 255)
          {
            v544 = *(_OWORD *)(v535 + 88);
            *(_OWORD *)(v534 + 72) = *(_OWORD *)(v535 + 72);
            *(_OWORD *)(v534 + 88) = v544;
            *(_OWORD *)(v534 + 104) = *(_OWORD *)(v535 + 104);
            v534[120] = v535[120];
          }
          else
          {
            v599 = v543 & 1;
            v549 = (void *)*((_QWORD *)v535 + 9);
            v548 = *((_QWORD *)v535 + 10);
            v550 = *((_QWORD *)v535 + 11);
            v551 = *((_QWORD *)v535 + 12);
            v552 = *((_QWORD *)v535 + 13);
            v553 = *((_QWORD *)v535 + 14);
            sub_10002B764(v549, v548, v550, v551, v552, v553, v543 & 1);
            *((_QWORD *)v534 + 9) = v549;
            *((_QWORD *)v534 + 10) = v548;
            *((_QWORD *)v534 + 11) = v550;
            *((_QWORD *)v534 + 12) = v551;
            *((_QWORD *)v534 + 13) = v552;
            *((_QWORD *)v534 + 14) = v553;
            v534[120] = v599;
          }
          v3 = v611;
          a1 = v619;
          v6 = v629;
          v9 = v647;
          v534[121] = v535[121];
          v394 = v605;
        }
        else
        {
          v545 = *((_OWORD *)v535 + 5);
          *((_OWORD *)v534 + 4) = *((_OWORD *)v535 + 4);
          *((_OWORD *)v534 + 5) = v545;
          *((_OWORD *)v534 + 6) = *((_OWORD *)v535 + 6);
          *(_OWORD *)(v534 + 106) = *(_OWORD *)(v535 + 106);
          v546 = *((_OWORD *)v535 + 1);
          *(_OWORD *)v534 = *(_OWORD *)v535;
          *((_OWORD *)v534 + 1) = v546;
          v547 = *((_OWORD *)v535 + 3);
          *((_OWORD *)v534 + 2) = *((_OWORD *)v535 + 2);
          *((_OWORD *)v534 + 3) = v547;
        }
        *((_BYTE *)v394 + v532[6]) = *((_BYTE *)v395 + v532[6]);
        *((_BYTE *)v394 + v532[7]) = *((_BYTE *)v395 + v532[7]);
        *((_BYTE *)v394 + v532[8]) = *((_BYTE *)v395 + v532[8]);
        *((_BYTE *)v394 + v532[9]) = *((_BYTE *)v395 + v532[9]);
        *((_BYTE *)v394 + v532[10]) = *((_BYTE *)v395 + v532[10]);
        v554 = v532[11];
        v555 = *(void **)((char *)v395 + v554);
        *(void **)((char *)v394 + v554) = v555;
        v556 = v555;
        v443 = v394;
        v444 = v9;
        v445 = 1;
        goto LABEL_307;
      case 2u:
        v643 = v9;
        v408 = *v395;
        *v394 = *v395;
        v409 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v410 = v394;
        v411 = (void **)((char *)v394 + v409);
        v412 = (void **)((char *)v395 + v409);
        v413 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v414 = *(_QWORD *)(v413 - 8);
        v415 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v414 + 48);
        v416 = v408;
        if (v415(v412, 1, v413))
        {
          v417 = sub_10002A750(&qword_100644980);
          memcpy(v411, v412, *(_QWORD *)(*(_QWORD *)(v417 - 8) + 64));
          v418 = v643;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v412, v413))
          {
            case 1u:
              v458 = *v412;
              *v411 = *v412;
              v459 = v458;
              v460 = v411;
              v461 = v413;
              v462 = 1;
              goto LABEL_282;
            case 2u:
              v557 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v557 - 8) + 16))(v411, v412, v557);
              v460 = v411;
              v461 = v413;
              v462 = 2;
              goto LABEL_282;
            case 3u:
              v558 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v558 - 8) + 16))(v411, v412, v558);
              v460 = v411;
              v461 = v413;
              v462 = 3;
              goto LABEL_282;
            case 4u:
              v559 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v559 - 8) + 16))(v411, v412, v559);
              v460 = v411;
              v461 = v413;
              v462 = 4;
              goto LABEL_282;
            case 5u:
              v560 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v560 - 8) + 16))(v411, v412, v560);
              v460 = v411;
              v461 = v413;
              v462 = 5;
              goto LABEL_282;
            case 6u:
              v561 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v561 - 8) + 16))(v411, v412, v561);
              v460 = v411;
              v461 = v413;
              v462 = 6;
              goto LABEL_282;
            case 8u:
              v562 = *v412;
              *v411 = *v412;
              v563 = v562;
              v460 = v411;
              v461 = v413;
              v462 = 8;
              goto LABEL_282;
            case 9u:
              v564 = *v412;
              *v411 = *v412;
              v565 = v564;
              v460 = v411;
              v461 = v413;
              v462 = 9;
LABEL_282:
              swift_storeEnumTagMultiPayload(v460, v461, v462);
              break;
            default:
              memcpy(v411, v412, *(_QWORD *)(v414 + 64));
              break;
          }
          v418 = v643;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v414 + 56))(v411, 0, 1, v413);
        }
        v443 = v410;
        v444 = v418;
        v445 = 2;
        goto LABEL_307;
      case 3u:
        v644 = v9;
        v419 = *v395;
        *v394 = *v395;
        v420 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v421 = v394;
        v422 = (void **)((char *)v394 + v420);
        v423 = (void **)((char *)v395 + v420);
        v424 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v425 = *(_QWORD *)(v424 - 8);
        v426 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v425 + 48);
        v427 = v419;
        if (v426(v423, 1, v424))
        {
          v428 = sub_10002A750(&qword_100644980);
          memcpy(v422, v423, *(_QWORD *)(*(_QWORD *)(v428 - 8) + 64));
          v429 = v644;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v423, v424))
          {
            case 1u:
              v463 = *v423;
              *v422 = *v423;
              v464 = v463;
              v465 = v422;
              v466 = v424;
              v467 = 1;
              goto LABEL_293;
            case 2u:
              v566 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v566 - 8) + 16))(v422, v423, v566);
              v465 = v422;
              v466 = v424;
              v467 = 2;
              goto LABEL_293;
            case 3u:
              v567 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v567 - 8) + 16))(v422, v423, v567);
              v465 = v422;
              v466 = v424;
              v467 = 3;
              goto LABEL_293;
            case 4u:
              v568 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v568 - 8) + 16))(v422, v423, v568);
              v465 = v422;
              v466 = v424;
              v467 = 4;
              goto LABEL_293;
            case 5u:
              v569 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v569 - 8) + 16))(v422, v423, v569);
              v465 = v422;
              v466 = v424;
              v467 = 5;
              goto LABEL_293;
            case 6u:
              v570 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v570 - 8) + 16))(v422, v423, v570);
              v465 = v422;
              v466 = v424;
              v467 = 6;
              goto LABEL_293;
            case 8u:
              v571 = *v423;
              *v422 = *v423;
              v572 = v571;
              v465 = v422;
              v466 = v424;
              v467 = 8;
              goto LABEL_293;
            case 9u:
              v573 = *v423;
              *v422 = *v423;
              v574 = v573;
              v465 = v422;
              v466 = v424;
              v467 = 9;
LABEL_293:
              swift_storeEnumTagMultiPayload(v465, v466, v467);
              break;
            default:
              memcpy(v422, v423, *(_QWORD *)(v425 + 64));
              break;
          }
          v429 = v644;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v425 + 56))(v422, 0, 1, v424);
        }
        v443 = v421;
        v444 = v429;
        v445 = 3;
        goto LABEL_307;
      case 4u:
        v645 = v9;
        v430 = *v395;
        *v394 = *v395;
        v431 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v432 = v394;
        v433 = (void **)((char *)v394 + v431);
        v434 = (void **)((char *)v395 + v431);
        v435 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v436 = *(_QWORD *)(v435 - 8);
        v437 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v436 + 48);
        v438 = v430;
        if (v437(v434, 1, v435))
        {
          v439 = sub_10002A750(&qword_100644980);
          memcpy(v433, v434, *(_QWORD *)(*(_QWORD *)(v439 - 8) + 64));
          v440 = v645;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v434, v435))
          {
            case 1u:
              v468 = *v434;
              *v433 = *v434;
              v469 = v468;
              v470 = v433;
              v471 = v435;
              v472 = 1;
              goto LABEL_304;
            case 2u:
              v575 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v575 - 8) + 16))(v433, v434, v575);
              v470 = v433;
              v471 = v435;
              v472 = 2;
              goto LABEL_304;
            case 3u:
              v576 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v576 - 8) + 16))(v433, v434, v576);
              v470 = v433;
              v471 = v435;
              v472 = 3;
              goto LABEL_304;
            case 4u:
              v577 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v577 - 8) + 16))(v433, v434, v577);
              v470 = v433;
              v471 = v435;
              v472 = 4;
              goto LABEL_304;
            case 5u:
              v578 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v578 - 8) + 16))(v433, v434, v578);
              v470 = v433;
              v471 = v435;
              v472 = 5;
              goto LABEL_304;
            case 6u:
              v579 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v579 - 8) + 16))(v433, v434, v579);
              v470 = v433;
              v471 = v435;
              v472 = 6;
              goto LABEL_304;
            case 8u:
              v580 = *v434;
              *v433 = *v434;
              v581 = v580;
              v470 = v433;
              v471 = v435;
              v472 = 8;
              goto LABEL_304;
            case 9u:
              v582 = *v434;
              *v433 = *v434;
              v583 = v582;
              v470 = v433;
              v471 = v435;
              v472 = 9;
LABEL_304:
              swift_storeEnumTagMultiPayload(v470, v471, v472);
              break;
            default:
              memcpy(v433, v434, *(_QWORD *)(v436 + 64));
              break;
          }
          v440 = v645;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v436 + 56))(v433, 0, 1, v435);
        }
        v443 = v432;
        v444 = v440;
        v445 = 4;
        goto LABEL_307;
      case 5u:
        *v394 = *v395;
        *((_BYTE *)v394 + 8) = *((_BYTE *)v395 + 8);
        *(_WORD *)((char *)v394 + 9) = *(_WORD *)((char *)v395 + 9);
        v441 = v395[2];
        v394[2] = v441;
        v442 = v441;
        v443 = v394;
        v444 = v9;
        v445 = 5;
        goto LABEL_307;
      case 6u:
        v453 = *v395;
        *v394 = *v395;
        v454 = v453;
        v443 = v394;
        v444 = v9;
        v445 = 6;
        goto LABEL_307;
      case 7u:
        v446 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v447 = *(_QWORD *)(v446 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v447 + 48))(v395, 1, v446))
        {
          v448 = sub_10002A750(&qword_100644600);
          memcpy(v394, v395, *(_QWORD *)(*(_QWORD *)(v448 - 8) + 64));
        }
        else
        {
          v473 = *v395;
          *v394 = *v395;
          v474 = *(int *)(v446 + 20);
          v595 = (char *)v395 + v474;
          v603 = (char *)v394 + v474;
          v630 = v6;
          v475 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v476 = v394;
          v477 = v9;
          v478 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v475 - 8) + 16);
          v479 = swift_bridgeObjectRetain(v473);
          v480 = v475;
          v6 = v630;
          v478(v603, v595, v480, v479);
          v9 = v477;
          v394 = v476;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v447 + 56))(v476, 0, 1, v446);
        }
        v481 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v482 = (void **)((char *)v394 + v481);
        v483 = (void **)((char *)v395 + v481);
        v484 = v483[1];
        if (v484)
        {
          *v482 = *v483;
          v482[1] = v484;
          v485 = (void *)v483[2];
          v482[2] = v485;
          swift_bridgeObjectRetain(v484);
          v486 = v485;
        }
        else
        {
          *(_OWORD *)v482 = *(_OWORD *)v483;
          v482[2] = v483[2];
        }
        v443 = v394;
        v444 = v9;
        v445 = 7;
        goto LABEL_307;
      case 8u:
        v455 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v456 = *(_QWORD *)(v455 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v456 + 48))(v395, 1, v455))
        {
          v457 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v394, v395, *(_QWORD *)(*(_QWORD *)(v457 - 8) + 64));
        }
        else
        {
          v487 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v487 - 8) + 16))(v394, v395, v487);
          *((_BYTE *)v394 + *(int *)(v455 + 20)) = *((_BYTE *)v395 + *(int *)(v455 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v456 + 56))(v394, 0, 1, v455);
        }
        v488 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)v394 + *(int *)(v488 + 20)) = *(void **)((char *)v395 + *(int *)(v488 + 20));
        v443 = v394;
        v444 = v9;
        v445 = 8;
        goto LABEL_307;
      case 9u:
        *(_BYTE *)v394 = *(_BYTE *)v395;
        v449 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v450 = (char *)v394 + v449;
        v451 = (char *)v395 + v449;
        v452 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v452 - 8) + 16))(v450, v451, v452);
        v443 = v394;
        v444 = v9;
        v445 = 9;
LABEL_307:
        swift_storeEnumTagMultiPayload(v443, v444, v445);
        break;
      default:
        memcpy(v394, v395, *(_QWORD *)(v10 + 64));
        break;
    }
    *(void **)((char *)a1 + *(int *)(v6 + 24)) = *(void **)((char *)v3 + *(int *)(v6 + 24));
  }
  swift_retain();
  return a1;
}

double sub_1003AAB70(id *a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  int v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  int v30;
  double result;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v4 = sub_10002A750(&qword_10064B6B0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, v4);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = (*(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, 1, v6);
  if (EnumCaseMultiPayload == 1)
  {
    if (!v7)
    {
      switch(swift_getEnumCaseMultiPayload(a1, v6))
      {
        case 0u:
          v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a1, v8))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_56;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_55;
            default:
              goto LABEL_57;
          }
          goto LABEL_57;
        case 1u:
          v41 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a1, v41))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_56;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_55;
            default:
              goto LABEL_57;
          }
          goto LABEL_57;
        case 2u:

          v39 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v42 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v39, 1, v42))
          {
            switch(swift_getEnumCaseMultiPayload(v39, v42))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_70;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_67;
              default:
                goto LABEL_6;
            }
          }
          break;
        case 3u:

          v39 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v43 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v39, 1, v43))
          {
            switch(swift_getEnumCaseMultiPayload(v39, v43))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_70;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_67;
              default:
                goto LABEL_6;
            }
          }
          break;
        case 4u:

          v39 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v44 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v39, 1, v44))
          {
            switch(swift_getEnumCaseMultiPayload(v39, v44))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_70;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_67;
              default:
                goto LABEL_6;
            }
          }
          break;
        case 5u:
          goto LABEL_37;
        case 6u:
          goto LABEL_38;
        case 7u:
          goto LABEL_39;
        case 8u:
          goto LABEL_43;
        case 9u:
          goto LABEL_45;
        default:
          break;
      }
    }
  }
  else if (!v7)
  {
    switch(swift_getEnumCaseMultiPayload(a1, v6))
    {
      case 0u:
        v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a1, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_56;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_55;
          default:
            goto LABEL_57;
        }
        goto LABEL_57;
      case 1u:
        v45 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a1, v45))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_56:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_55:
            v46 = type metadata accessor for Date(0);
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(a1, v46);
            break;
          default:
            break;
        }
LABEL_57:
        v47 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v48 = (char *)a1 + *(int *)(v47 + 20);
        v49 = *((_QWORD *)v48 + 1);
        if (v49)
        {
          swift_bridgeObjectRelease(v49);
          sub_10003E2EC(*((void **)v48 + 2), *((_QWORD *)v48 + 3), *((_QWORD *)v48 + 4), *((_QWORD *)v48 + 5), *((_QWORD *)v48 + 6), *((_QWORD *)v48 + 7), v48[64]);
          v50 = v48[120];
          if (v50 != 255)
            sub_10002B328(*((void **)v48 + 9), *((_QWORD *)v48 + 10), *((_QWORD *)v48 + 11), *((_QWORD *)v48 + 12), *((_QWORD *)v48 + 13), *((_QWORD *)v48 + 14), v50 & 1);
        }

        break;
      case 2u:

        v39 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v51 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v39, 1, v51))
        {
          switch(swift_getEnumCaseMultiPayload(v39, v51))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_70;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_67;
            default:
              goto LABEL_6;
          }
        }
        break;
      case 3u:

        v39 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v52 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v39, 1, v52))
        {
          switch(swift_getEnumCaseMultiPayload(v39, v52))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_70;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_67;
            default:
              goto LABEL_6;
          }
        }
        break;
      case 4u:

        v39 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v53 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v39, 1, v53))
        {
          switch(swift_getEnumCaseMultiPayload(v39, v53))
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_70:

              break;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_67:
              v40 = type metadata accessor for Date(0);
              goto LABEL_68;
            default:
              goto LABEL_6;
          }
        }
        break;
      case 5u:
LABEL_37:

        break;
      case 6u:
LABEL_38:

        break;
      case 7u:
LABEL_39:
        v32 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(a1, 1, v32))
        {
          swift_bridgeObjectRelease(*a1);
          v33 = (char *)a1 + *(int *)(v32 + 20);
          v34 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
        }
        v35 = (char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v36 = *((_QWORD *)v35 + 1);
        if (v36)
        {
          swift_bridgeObjectRelease(v36);

        }
        break;
      case 8u:
LABEL_43:
        v37 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(a1, 1, v37))
        {
          v38 = type metadata accessor for Date(0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(a1, v38);
        }
        break;
      case 9u:
LABEL_45:
        v39 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
        v40 = type metadata accessor for AnyTip(0);
LABEL_68:
        (*(void (**)(id *, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
        break;
      default:
        break;
    }
  }
LABEL_6:
  v9 = (id *)((char *)a1 + *(int *)(a2 + 20));
  switch(swift_getEnumCaseMultiPayload(v9, v6))
  {
    case 0u:
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v9, v10))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_30;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_11;
        default:
          goto LABEL_31;
      }
      goto LABEL_31;
    case 1u:
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v9, v12))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_30:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_11:
          v13 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v9, v13);
          break;
        default:
          break;
      }
LABEL_31:
      v27 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v28 = (char *)v9 + *(int *)(v27 + 20);
      v29 = *((_QWORD *)v28 + 1);
      if (v29)
      {
        swift_bridgeObjectRelease(v29);
        sub_10003E2EC(*((void **)v28 + 2), *((_QWORD *)v28 + 3), *((_QWORD *)v28 + 4), *((_QWORD *)v28 + 5), *((_QWORD *)v28 + 6), *((_QWORD *)v28 + 7), v28[64]);
        v30 = v28[120];
        if (v30 != 255)
          sub_10002B328(*((void **)v28 + 9), *((_QWORD *)v28 + 10), *((_QWORD *)v28 + 11), *((_QWORD *)v28 + 12), *((_QWORD *)v28 + 13), *((_QWORD *)v28 + 14), v30 & 1);
      }
      v19 = *(id *)((char *)v9 + *(int *)(v27 + 44));
      goto LABEL_35;
    case 2u:

      v14 = (id *)((char *)v9 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
      {
        switch(swift_getEnumCaseMultiPayload(v14, v15))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_46;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_36;
        }
      }
      goto LABEL_36;
    case 3u:

      v14 = (id *)((char *)v9 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v14, 1, v16))
      {
        switch(swift_getEnumCaseMultiPayload(v14, v16))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_46;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_36;
        }
      }
      goto LABEL_36;
    case 4u:

      v14 = (id *)((char *)v9 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v17 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v14, 1, v17))
      {
        switch(swift_getEnumCaseMultiPayload(v14, v17))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_46:
            v19 = *v14;
            goto LABEL_35;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_18:
            v18 = type metadata accessor for Date(0);
            goto LABEL_28;
          default:
            goto LABEL_36;
        }
      }
      goto LABEL_36;
    case 5u:
      v19 = (id)v9[2];
      goto LABEL_35;
    case 6u:
      v19 = (id)*v9;
      goto LABEL_35;
    case 7u:
      v20 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v9, 1, v20))
      {
        swift_bridgeObjectRelease(*v9);
        v21 = (char *)v9 + *(int *)(v20 + 20);
        v22 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
      }
      v23 = (char *)v9 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v24 = *((_QWORD *)v23 + 1);
      if (!v24)
        goto LABEL_36;
      swift_bridgeObjectRelease(v24);
      v19 = (id)*((_QWORD *)v23 + 2);
LABEL_35:

LABEL_36:
      *(_QWORD *)&result = swift_release().n128_u64[0];
      return result;
    case 8u:
      v25 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v9, 1, v25))
      {
        v26 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v9, v26);
      }
      goto LABEL_36;
    case 9u:
      v14 = (id *)((char *)v9 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v18 = type metadata accessor for AnyTip(0);
LABEL_28:
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v14, v18);
      goto LABEL_36;
    default:
      goto LABEL_36;
  }
}

void **sub_1003AB50C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  void **v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void **v33;
  void **v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(void **, uint64_t, uint64_t);
  id v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void **v42;
  void **v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(void **, uint64_t, uint64_t);
  id v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void **v51;
  void **v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v55)(void **, uint64_t, uint64_t);
  id v56;
  uint64_t v57;
  void *v58;
  id v59;
  void **v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  void **v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  void **v78;
  void **v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(void **, uint64_t, uint64_t);
  id v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  void **v87;
  void **v88;
  uint64_t v89;
  uint64_t v90;
  unsigned int (*v91)(void **, uint64_t, uint64_t);
  id v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  void **v96;
  void **v97;
  uint64_t v98;
  uint64_t v99;
  unsigned int (*v100)(void **, uint64_t, uint64_t);
  id v101;
  uint64_t v102;
  void *v103;
  id v104;
  void **v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  void *v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  id v126;
  void **v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  id v131;
  void **v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  id v136;
  void **v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void (*v145)(char *, char *, uint64_t, __n128);
  __n128 v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  _QWORD *v150;
  uint64_t v151;
  void *v152;
  id v153;
  void *v154;
  id v155;
  void **v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  id v160;
  void **v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  id v165;
  void **v166;
  uint64_t v167;
  uint64_t v168;
  void *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void (*v174)(char *, char *, uint64_t, __n128);
  __n128 v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  _QWORD *v179;
  uint64_t v180;
  void *v181;
  id v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void *v192;
  id v193;
  void *v194;
  id v195;
  int *v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  void *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  int v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  void *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  void *v217;
  id v218;
  void **v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  void *v227;
  id v228;
  void *v229;
  id v230;
  int *v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  void *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  unsigned __int8 v242;
  int v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  void *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  char v254;
  uint64_t v255;
  void *v256;
  id v257;
  void **v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  void *v266;
  id v267;
  void *v268;
  id v269;
  int *v270;
  uint64_t v271;
  char *v272;
  char *v273;
  uint64_t v274;
  void *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  int v281;
  __int128 v282;
  __int128 v283;
  __int128 v284;
  __int128 v285;
  void *v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  void *v293;
  id v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  void *v300;
  id v301;
  void *v302;
  id v303;
  int *v304;
  uint64_t v305;
  char *v306;
  char *v307;
  uint64_t v308;
  void *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  unsigned __int8 v315;
  int v316;
  __int128 v317;
  __int128 v318;
  __int128 v319;
  __int128 v320;
  void *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  char v327;
  uint64_t v328;
  void *v329;
  id v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  void *v336;
  id v337;
  void *v338;
  id v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  void *v344;
  id v345;
  void *v346;
  id v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  void *v353;
  id v354;
  void *v355;
  id v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  void *v362;
  id v363;
  void *v364;
  id v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  void *v370;
  id v371;
  void *v372;
  id v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  void *v379;
  id v380;
  void *v381;
  id v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  void **v388;
  void **v389;
  uint64_t v390;
  void *v391;
  id v392;
  void **v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  void *v397;
  id v398;
  void **v399;
  uint64_t v400;
  uint64_t v401;
  void *v402;
  uint64_t v403;
  void **v404;
  void **v405;
  void **v406;
  uint64_t v407;
  uint64_t v408;
  unsigned int (*v409)(void **, uint64_t, uint64_t);
  id v410;
  uint64_t v411;
  uint64_t v412;
  void *v413;
  uint64_t v414;
  void **v415;
  void **v416;
  void **v417;
  uint64_t v418;
  uint64_t v419;
  unsigned int (*v420)(void **, uint64_t, uint64_t);
  id v421;
  uint64_t v422;
  uint64_t v423;
  void *v424;
  uint64_t v425;
  void **v426;
  void **v427;
  void **v428;
  uint64_t v429;
  uint64_t v430;
  unsigned int (*v431)(void **, uint64_t, uint64_t);
  id v432;
  uint64_t v433;
  uint64_t v434;
  void *v435;
  id v436;
  void **v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  char *v444;
  char *v445;
  uint64_t v446;
  void *v447;
  id v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  void *v452;
  id v453;
  void **v454;
  uint64_t v455;
  uint64_t v456;
  void *v457;
  id v458;
  void **v459;
  uint64_t v460;
  uint64_t v461;
  void *v462;
  id v463;
  void **v464;
  uint64_t v465;
  uint64_t v466;
  void *v467;
  uint64_t v468;
  uint64_t v469;
  void **v470;
  void **v471;
  uint64_t v472;
  void (*v473)(char *, char *, uint64_t, __n128);
  __n128 v474;
  uint64_t v475;
  uint64_t v476;
  _QWORD *v477;
  _QWORD *v478;
  uint64_t v479;
  void *v480;
  id v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  void *v489;
  id v490;
  void *v491;
  id v492;
  int *v493;
  uint64_t v494;
  char *v495;
  char *v496;
  uint64_t v497;
  void *v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  int v504;
  __int128 v505;
  __int128 v506;
  __int128 v507;
  __int128 v508;
  uint64_t v509;
  void *v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  void *v516;
  id v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  void *v523;
  id v524;
  void *v525;
  id v526;
  int *v527;
  uint64_t v528;
  char *v529;
  char *v530;
  uint64_t v531;
  uint64_t v532;
  void *v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  int v538;
  __int128 v539;
  __int128 v540;
  __int128 v541;
  __int128 v542;
  uint64_t v543;
  void *v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  void *v550;
  id v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  void *v557;
  id v558;
  void *v559;
  id v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  void *v566;
  id v567;
  void *v568;
  id v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  void *v575;
  id v576;
  void *v577;
  id v578;
  char *v580;
  char *v581;
  unsigned __int8 v582;
  uint64_t v583;
  char *v584;
  char *v585;
  uint64_t v586;
  char v587;
  unsigned __int8 v588;
  char v589;
  uint64_t v590;
  uint64_t v591;
  char *v592;
  unsigned __int8 v593;
  char v594;
  unsigned __int8 v595;
  char v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  char *v600;
  void **v601;
  void **v602;
  void **v603;
  void **v604;
  void **v605;
  void **v606;
  void **v607;
  void **v608;
  void **v609;
  void **v610;
  void **v611;
  void **v612;
  void **v613;
  void **v614;
  void **v615;
  void **v616;
  uint64_t v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  uint64_t v642;

  v6 = sub_10002A750(&qword_10064B6B0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8);
  if (EnumCaseMultiPayload == 1)
  {
    if (v10)
    {
      v11 = sub_10002A750((uint64_t *)&unk_100640EB0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(a2, v8))
      {
        case 0u:
          v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v617 = a3;
          switch(swift_getEnumCaseMultiPayload(a2, v13))
          {
            case 1u:
              v14 = *a2;
              *a1 = *a2;
              v15 = v14;
              v16 = a1;
              v17 = v13;
              v18 = 1;
              goto LABEL_78;
            case 2u:
              v187 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(a1, a2, v187);
              v16 = a1;
              v17 = v13;
              v18 = 2;
              goto LABEL_78;
            case 3u:
              v188 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(a1, a2, v188);
              v16 = a1;
              v17 = v13;
              v18 = 3;
              goto LABEL_78;
            case 4u:
              v189 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v189 - 8) + 16))(a1, a2, v189);
              v16 = a1;
              v17 = v13;
              v18 = 4;
              goto LABEL_78;
            case 5u:
              v190 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(a1, a2, v190);
              v16 = a1;
              v17 = v13;
              v18 = 5;
              goto LABEL_78;
            case 6u:
              v191 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(a1, a2, v191);
              v16 = a1;
              v17 = v13;
              v18 = 6;
              goto LABEL_78;
            case 8u:
              v192 = *a2;
              *a1 = *a2;
              v193 = v192;
              v16 = a1;
              v17 = v13;
              v18 = 8;
              goto LABEL_78;
            case 9u:
              v194 = *a2;
              *a1 = *a2;
              v195 = v194;
              v16 = a1;
              v17 = v13;
              v18 = 9;
LABEL_78:
              swift_storeEnumTagMultiPayload(v16, v17, v18);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
              break;
          }
          v196 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v197 = v196[5];
          v198 = (char *)a1 + v197;
          v199 = (char *)a2 + v197;
          v200 = *(uint64_t *)((char *)a2 + v197 + 8);
          if (v200)
          {
            v636 = v8;
            v603 = a1;
            v611 = a2;
            *(_QWORD *)v198 = *(_QWORD *)v199;
            *((_QWORD *)v198 + 1) = v200;
            v201 = (void *)*((_QWORD *)v199 + 2);
            v202 = *((_QWORD *)v199 + 3);
            v203 = *((_QWORD *)v199 + 4);
            v204 = *((_QWORD *)v199 + 5);
            v205 = *((_QWORD *)v199 + 6);
            v586 = *((_QWORD *)v199 + 7);
            v582 = v199[64];
            swift_bridgeObjectRetain(v200);
            sub_10003E1F0(v201, v202, v203, v204, v205, v586, v582);
            *((_QWORD *)v198 + 2) = v201;
            *((_QWORD *)v198 + 3) = v202;
            *((_QWORD *)v198 + 4) = v203;
            *((_QWORD *)v198 + 5) = v204;
            *((_QWORD *)v198 + 6) = v205;
            *((_QWORD *)v198 + 7) = v586;
            v198[64] = v582;
            *(_DWORD *)(v198 + 65) = *(_DWORD *)(v199 + 65);
            v206 = v199[120];
            if (v206 == 255)
            {
              v207 = *(_OWORD *)(v199 + 88);
              *(_OWORD *)(v198 + 72) = *(_OWORD *)(v199 + 72);
              *(_OWORD *)(v198 + 88) = v207;
              *(_OWORD *)(v198 + 104) = *(_OWORD *)(v199 + 104);
              v198[120] = v199[120];
            }
            else
            {
              v587 = v206 & 1;
              v211 = (void *)*((_QWORD *)v199 + 9);
              v212 = *((_QWORD *)v199 + 10);
              v213 = *((_QWORD *)v199 + 11);
              v214 = *((_QWORD *)v199 + 12);
              v215 = *((_QWORD *)v199 + 13);
              v583 = *((_QWORD *)v199 + 14);
              sub_10002B764(v211, v212, v213, v214, v215, v583, v206 & 1);
              *((_QWORD *)v198 + 9) = v211;
              *((_QWORD *)v198 + 10) = v212;
              *((_QWORD *)v198 + 11) = v213;
              *((_QWORD *)v198 + 12) = v214;
              *((_QWORD *)v198 + 13) = v215;
              *((_QWORD *)v198 + 14) = v583;
              v198[120] = v587;
            }
            v8 = v636;
            v198[121] = v199[121];
            a1 = v603;
            a2 = v611;
          }
          else
          {
            v208 = *((_OWORD *)v199 + 5);
            *((_OWORD *)v198 + 4) = *((_OWORD *)v199 + 4);
            *((_OWORD *)v198 + 5) = v208;
            *((_OWORD *)v198 + 6) = *((_OWORD *)v199 + 6);
            *(_OWORD *)(v198 + 106) = *(_OWORD *)(v199 + 106);
            v209 = *((_OWORD *)v199 + 1);
            *(_OWORD *)v198 = *(_OWORD *)v199;
            *((_OWORD *)v198 + 1) = v209;
            v210 = *((_OWORD *)v199 + 3);
            *((_OWORD *)v198 + 2) = *((_OWORD *)v199 + 2);
            *((_OWORD *)v198 + 3) = v210;
          }
          *((_BYTE *)a1 + v196[6]) = *((_BYTE *)a2 + v196[6]);
          *((_BYTE *)a1 + v196[7]) = *((_BYTE *)a2 + v196[7]);
          *((_BYTE *)a1 + v196[8]) = *((_BYTE *)a2 + v196[8]);
          *((_BYTE *)a1 + v196[9]) = *((_BYTE *)a2 + v196[9]);
          *((_BYTE *)a1 + v196[10]) = *((_BYTE *)a2 + v196[10]);
          v216 = v196[11];
          v217 = *(void **)((char *)a2 + v216);
          *(void **)((char *)a1 + v216) = v217;
          v218 = v217;
          v219 = a1;
          v220 = v8;
          v221 = 0;
          goto LABEL_118;
        case 1u:
          v25 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v617 = a3;
          v598 = v9;
          switch(swift_getEnumCaseMultiPayload(a2, v25))
          {
            case 1u:
              v26 = *a2;
              *a1 = *a2;
              v27 = v26;
              v28 = a1;
              v29 = v25;
              v30 = 1;
              goto LABEL_110;
            case 2u:
              v261 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v261 - 8) + 16))(a1, a2, v261);
              v28 = a1;
              v29 = v25;
              v30 = 2;
              goto LABEL_110;
            case 3u:
              v262 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v262 - 8) + 16))(a1, a2, v262);
              v28 = a1;
              v29 = v25;
              v30 = 3;
              goto LABEL_110;
            case 4u:
              v263 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v263 - 8) + 16))(a1, a2, v263);
              v28 = a1;
              v29 = v25;
              v30 = 4;
              goto LABEL_110;
            case 5u:
              v264 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v264 - 8) + 16))(a1, a2, v264);
              v28 = a1;
              v29 = v25;
              v30 = 5;
              goto LABEL_110;
            case 6u:
              v265 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v265 - 8) + 16))(a1, a2, v265);
              v28 = a1;
              v29 = v25;
              v30 = 6;
              goto LABEL_110;
            case 8u:
              v266 = *a2;
              *a1 = *a2;
              v267 = v266;
              v28 = a1;
              v29 = v25;
              v30 = 8;
              goto LABEL_110;
            case 9u:
              v268 = *a2;
              *a1 = *a2;
              v269 = v268;
              v28 = a1;
              v29 = v25;
              v30 = 9;
LABEL_110:
              swift_storeEnumTagMultiPayload(v28, v29, v30);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
              break;
          }
          v270 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v271 = v270[5];
          v272 = (char *)a1 + v271;
          v273 = (char *)a2 + v271;
          v274 = *(uint64_t *)((char *)a2 + v271 + 8);
          if (v274)
          {
            v637 = v8;
            v605 = a1;
            v613 = a2;
            *(_QWORD *)v272 = *(_QWORD *)v273;
            *((_QWORD *)v272 + 1) = v274;
            v275 = (void *)*((_QWORD *)v273 + 2);
            v276 = *((_QWORD *)v273 + 3);
            v277 = *((_QWORD *)v273 + 4);
            v278 = *((_QWORD *)v273 + 5);
            v279 = *((_QWORD *)v273 + 6);
            v280 = *((_QWORD *)v273 + 7);
            v588 = v273[64];
            swift_bridgeObjectRetain(v274);
            sub_10003E1F0(v275, v276, v277, v278, v279, v280, v588);
            *((_QWORD *)v272 + 2) = v275;
            *((_QWORD *)v272 + 3) = v276;
            *((_QWORD *)v272 + 4) = v277;
            *((_QWORD *)v272 + 5) = v278;
            *((_QWORD *)v272 + 6) = v279;
            *((_QWORD *)v272 + 7) = v280;
            v272[64] = v588;
            *(_DWORD *)(v272 + 65) = *(_DWORD *)(v273 + 65);
            v281 = v273[120];
            if (v281 == 255)
            {
              v282 = *(_OWORD *)(v273 + 88);
              *(_OWORD *)(v272 + 72) = *(_OWORD *)(v273 + 72);
              *(_OWORD *)(v272 + 88) = v282;
              *(_OWORD *)(v272 + 104) = *(_OWORD *)(v273 + 104);
              v272[120] = v273[120];
            }
            else
            {
              v589 = v281 & 1;
              v286 = (void *)*((_QWORD *)v273 + 9);
              v287 = *((_QWORD *)v273 + 10);
              v288 = *((_QWORD *)v273 + 11);
              v289 = *((_QWORD *)v273 + 12);
              v290 = *((_QWORD *)v273 + 13);
              v291 = *((_QWORD *)v273 + 14);
              sub_10002B764(v286, v287, v288, v289, v290, v291, v281 & 1);
              *((_QWORD *)v272 + 9) = v286;
              *((_QWORD *)v272 + 10) = v287;
              *((_QWORD *)v272 + 11) = v288;
              *((_QWORD *)v272 + 12) = v289;
              *((_QWORD *)v272 + 13) = v290;
              *((_QWORD *)v272 + 14) = v291;
              v272[120] = v589;
            }
            v8 = v637;
            v9 = v598;
            a1 = v605;
            v272[121] = v273[121];
            a2 = v613;
          }
          else
          {
            v283 = *((_OWORD *)v273 + 5);
            *((_OWORD *)v272 + 4) = *((_OWORD *)v273 + 4);
            *((_OWORD *)v272 + 5) = v283;
            *((_OWORD *)v272 + 6) = *((_OWORD *)v273 + 6);
            *(_OWORD *)(v272 + 106) = *(_OWORD *)(v273 + 106);
            v284 = *((_OWORD *)v273 + 1);
            *(_OWORD *)v272 = *(_OWORD *)v273;
            *((_OWORD *)v272 + 1) = v284;
            v285 = *((_OWORD *)v273 + 3);
            *((_OWORD *)v272 + 2) = *((_OWORD *)v273 + 2);
            *((_OWORD *)v272 + 3) = v285;
          }
          *((_BYTE *)a1 + v270[6]) = *((_BYTE *)a2 + v270[6]);
          *((_BYTE *)a1 + v270[7]) = *((_BYTE *)a2 + v270[7]);
          *((_BYTE *)a1 + v270[8]) = *((_BYTE *)a2 + v270[8]);
          *((_BYTE *)a1 + v270[9]) = *((_BYTE *)a2 + v270[9]);
          *((_BYTE *)a1 + v270[10]) = *((_BYTE *)a2 + v270[10]);
          v292 = v270[11];
          v293 = *(void **)((char *)a2 + v292);
          *(void **)((char *)a1 + v292) = v293;
          v294 = v293;
          v219 = a1;
          v220 = v8;
          v221 = 1;
LABEL_118:
          swift_storeEnumTagMultiPayload(v219, v220, v221);
          a3 = v617;
          break;
        case 2u:
          v619 = a3;
          v629 = v8;
          v31 = *a2;
          *a1 = *a2;
          v32 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v33 = (void **)((char *)a1 + v32);
          v34 = (void **)((char *)a2 + v32);
          v35 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v36 = *(_QWORD *)(v35 - 8);
          v37 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v36 + 48);
          v38 = v31;
          if (v37(v34, 1, v35))
          {
            v39 = sub_10002A750(&qword_100644980);
            memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
            a3 = v619;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v34, v35))
            {
              case 1u:
                v125 = *v34;
                *v33 = *v34;
                v126 = v125;
                v127 = v33;
                v128 = v35;
                v129 = 1;
                goto LABEL_144;
              case 2u:
                v331 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v331 - 8) + 16))(v33, v34, v331);
                v127 = v33;
                v128 = v35;
                v129 = 2;
                goto LABEL_144;
              case 3u:
                v332 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v332 - 8) + 16))(v33, v34, v332);
                v127 = v33;
                v128 = v35;
                v129 = 3;
                goto LABEL_144;
              case 4u:
                v333 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v333 - 8) + 16))(v33, v34, v333);
                v127 = v33;
                v128 = v35;
                v129 = 4;
                goto LABEL_144;
              case 5u:
                v334 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v334 - 8) + 16))(v33, v34, v334);
                v127 = v33;
                v128 = v35;
                v129 = 5;
                goto LABEL_144;
              case 6u:
                v335 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v335 - 8) + 16))(v33, v34, v335);
                v127 = v33;
                v128 = v35;
                v129 = 6;
                goto LABEL_144;
              case 8u:
                v336 = *v34;
                *v33 = *v34;
                v337 = v336;
                v127 = v33;
                v128 = v35;
                v129 = 8;
                goto LABEL_144;
              case 9u:
                v338 = *v34;
                *v33 = *v34;
                v339 = v338;
                v127 = v33;
                v128 = v35;
                v129 = 9;
LABEL_144:
                swift_storeEnumTagMultiPayload(v127, v128, v129);
                break;
              default:
                memcpy(v33, v34, *(_QWORD *)(v36 + 64));
                break;
            }
            a3 = v619;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
          }
          v8 = v629;
          v60 = a1;
          v61 = v629;
          v62 = 2;
          goto LABEL_198;
        case 3u:
          v620 = a3;
          v630 = v8;
          v40 = *a2;
          *a1 = *a2;
          v41 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v42 = (void **)((char *)a1 + v41);
          v43 = (void **)((char *)a2 + v41);
          v44 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v45 = *(_QWORD *)(v44 - 8);
          v46 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v45 + 48);
          v47 = v40;
          if (v46(v43, 1, v44))
          {
            v48 = sub_10002A750(&qword_100644980);
            memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
            a3 = v620;
            v8 = v630;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v43, v44))
            {
              case 1u:
                v130 = *v43;
                *v42 = *v43;
                v131 = v130;
                v132 = v42;
                v133 = v44;
                v134 = 1;
                goto LABEL_195;
              case 2u:
                v340 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v340 - 8) + 16))(v42, v43, v340);
                v132 = v42;
                v133 = v44;
                v134 = 2;
                goto LABEL_195;
              case 3u:
                v341 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v341 - 8) + 16))(v42, v43, v341);
                v132 = v42;
                v133 = v44;
                v134 = 3;
                goto LABEL_195;
              case 4u:
                v342 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v342 - 8) + 16))(v42, v43, v342);
                v132 = v42;
                v133 = v44;
                v134 = 4;
                goto LABEL_195;
              case 5u:
                v383 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v383 - 8) + 16))(v42, v43, v383);
                v132 = v42;
                v133 = v44;
                v134 = 5;
                goto LABEL_195;
              case 6u:
                v343 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v343 - 8) + 16))(v42, v43, v343);
                v132 = v42;
                v133 = v44;
                v134 = 6;
                goto LABEL_195;
              case 8u:
                v344 = *v43;
                *v42 = *v43;
                v345 = v344;
                v132 = v42;
                v133 = v44;
                v134 = 8;
                goto LABEL_195;
              case 9u:
                v346 = *v43;
                *v42 = *v43;
                v347 = v346;
                v132 = v42;
                v133 = v44;
                v134 = 9;
LABEL_195:
                swift_storeEnumTagMultiPayload(v132, v133, v134);
                break;
              default:
                memcpy(v42, v43, *(_QWORD *)(v45 + 64));
                break;
            }
            a3 = v620;
            v8 = v630;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
          }
          v60 = a1;
          v61 = v8;
          v62 = 3;
          goto LABEL_198;
        case 4u:
          v621 = a3;
          v631 = v8;
          v49 = *a2;
          *a1 = *a2;
          v50 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v51 = (void **)((char *)a1 + v50);
          v52 = (void **)((char *)a2 + v50);
          v53 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v54 = *(_QWORD *)(v53 - 8);
          v55 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v54 + 48);
          v56 = v49;
          if (v55(v52, 1, v53))
          {
            v57 = sub_10002A750(&qword_100644980);
            memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
            a3 = v621;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v52, v53))
            {
              case 1u:
                v135 = *v52;
                *v51 = *v52;
                v136 = v135;
                v137 = v51;
                v138 = v53;
                v139 = 1;
                goto LABEL_162;
              case 2u:
                v348 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v348 - 8) + 16))(v51, v52, v348);
                v137 = v51;
                v138 = v53;
                v139 = 2;
                goto LABEL_162;
              case 3u:
                v349 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v349 - 8) + 16))(v51, v52, v349);
                v137 = v51;
                v138 = v53;
                v139 = 3;
                goto LABEL_162;
              case 4u:
                v350 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v350 - 8) + 16))(v51, v52, v350);
                v137 = v51;
                v138 = v53;
                v139 = 4;
                goto LABEL_162;
              case 5u:
                v351 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v351 - 8) + 16))(v51, v52, v351);
                v137 = v51;
                v138 = v53;
                v139 = 5;
                goto LABEL_162;
              case 6u:
                v352 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v352 - 8) + 16))(v51, v52, v352);
                v137 = v51;
                v138 = v53;
                v139 = 6;
                goto LABEL_162;
              case 8u:
                v353 = *v52;
                *v51 = *v52;
                v354 = v353;
                v137 = v51;
                v138 = v53;
                v139 = 8;
                goto LABEL_162;
              case 9u:
                v355 = *v52;
                *v51 = *v52;
                v356 = v355;
                v137 = v51;
                v138 = v53;
                v139 = 9;
LABEL_162:
                swift_storeEnumTagMultiPayload(v137, v138, v139);
                break;
              default:
                memcpy(v51, v52, *(_QWORD *)(v54 + 64));
                break;
            }
            a3 = v621;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
          }
          v8 = v631;
          v60 = a1;
          v61 = v631;
          v62 = 4;
          goto LABEL_198;
        case 5u:
          *a1 = *a2;
          *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
          *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
          v58 = a2[2];
          a1[2] = v58;
          v59 = v58;
          v60 = a1;
          v61 = v8;
          v62 = 5;
          goto LABEL_198;
        case 6u:
          v115 = *a2;
          *a1 = *a2;
          v116 = v115;
          v60 = a1;
          v61 = v8;
          v62 = 6;
          goto LABEL_198;
        case 7u:
          v63 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v64 = *(_QWORD *)(v63 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v64 + 48))(a2, 1, v63))
          {
            v65 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
          }
          else
          {
            v140 = *a2;
            *a1 = *a2;
            v141 = *(int *)(v63 + 20);
            v580 = (char *)a2 + v141;
            v584 = (char *)a1 + v141;
            v609 = a2;
            v142 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v143 = v8;
            v144 = a3;
            v145 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v142 - 8) + 16);
            v146 = swift_bridgeObjectRetain(v140);
            v147 = v142;
            a2 = v609;
            v145(v584, v580, v147, v146);
            a3 = v144;
            v8 = v143;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v64 + 56))(a1, 0, 1, v63);
          }
          v148 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v149 = (void **)((char *)a1 + v148);
          v150 = (void **)((char *)a2 + v148);
          v151 = v150[1];
          if (v151)
          {
            *v149 = *v150;
            v149[1] = v151;
            v152 = (void *)v150[2];
            v149[2] = v152;
            swift_bridgeObjectRetain(v151);
            v153 = v152;
          }
          else
          {
            *(_OWORD *)v149 = *(_OWORD *)v150;
            v149[2] = v150[2];
          }
          v60 = a1;
          v61 = v8;
          v62 = 7;
          goto LABEL_198;
        case 8u:
          v117 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v118 = *(_QWORD *)(v117 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v118 + 48))(a2, 1, v117))
          {
            v119 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
          }
          else
          {
            v183 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(a1, a2, v183);
            *((_BYTE *)a1 + *(int *)(v117 + 20)) = *((_BYTE *)a2 + *(int *)(v117 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v118 + 56))(a1, 0, 1, v117);
          }
          v184 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)a1 + *(int *)(v184 + 20)) = *(void **)((char *)a2 + *(int *)(v184 + 20));
          v60 = a1;
          v61 = v8;
          v62 = 8;
          goto LABEL_198;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v66 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v67 = (char *)a1 + v66;
          v68 = (char *)a2 + v66;
          v69 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v67, v68, v69);
          v60 = a1;
          v61 = v8;
          v62 = 9;
LABEL_198:
          swift_storeEnumTagMultiPayload(v60, v61, v62);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v9 + 64));
          break;
      }
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v384 = sub_10002A750(&qword_1006588F8);
    *(void **)((char *)a1 + *(int *)(v384 + 48)) = *(void **)((char *)a2 + *(int *)(v384 + 48));
    v385 = 1;
  }
  else
  {
    if (v10)
    {
      v12 = sub_10002A750((uint64_t *)&unk_100640EB0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(a2, v8))
      {
        case 0u:
          v19 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v618 = a3;
          v628 = v8;
          v597 = v9;
          switch(swift_getEnumCaseMultiPayload(a2, v19))
          {
            case 1u:
              v20 = *a2;
              *a1 = *a2;
              v21 = v20;
              v22 = a1;
              v23 = v19;
              v24 = 1;
              goto LABEL_94;
            case 2u:
              v222 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v222 - 8) + 16))(a1, a2, v222);
              v22 = a1;
              v23 = v19;
              v24 = 2;
              goto LABEL_94;
            case 3u:
              v223 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v223 - 8) + 16))(a1, a2, v223);
              v22 = a1;
              v23 = v19;
              v24 = 3;
              goto LABEL_94;
            case 4u:
              v224 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v224 - 8) + 16))(a1, a2, v224);
              v22 = a1;
              v23 = v19;
              v24 = 4;
              goto LABEL_94;
            case 5u:
              v225 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v225 - 8) + 16))(a1, a2, v225);
              v22 = a1;
              v23 = v19;
              v24 = 5;
              goto LABEL_94;
            case 6u:
              v226 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v226 - 8) + 16))(a1, a2, v226);
              v22 = a1;
              v23 = v19;
              v24 = 6;
              goto LABEL_94;
            case 8u:
              v227 = *a2;
              *a1 = *a2;
              v228 = v227;
              v22 = a1;
              v23 = v19;
              v24 = 8;
              goto LABEL_94;
            case 9u:
              v229 = *a2;
              *a1 = *a2;
              v230 = v229;
              v22 = a1;
              v23 = v19;
              v24 = 9;
LABEL_94:
              swift_storeEnumTagMultiPayload(v22, v23, v24);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
              break;
          }
          v231 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v232 = v231[5];
          v233 = (char *)a1 + v232;
          v234 = (char *)a2 + v232;
          v235 = *(uint64_t *)((char *)a2 + v232 + 8);
          if (v235)
          {
            v591 = v6;
            v604 = a1;
            v612 = a2;
            *(_QWORD *)v233 = *(_QWORD *)v234;
            *((_QWORD *)v233 + 1) = v235;
            v236 = (void *)*((_QWORD *)v234 + 2);
            v237 = *((_QWORD *)v234 + 3);
            v239 = *((_QWORD *)v234 + 4);
            v238 = *((_QWORD *)v234 + 5);
            v241 = *((_QWORD *)v234 + 6);
            v240 = *((_QWORD *)v234 + 7);
            v242 = v234[64];
            swift_bridgeObjectRetain(v235);
            sub_10003E1F0(v236, v237, v239, v238, v241, v240, v242);
            *((_QWORD *)v233 + 2) = v236;
            *((_QWORD *)v233 + 3) = v237;
            *((_QWORD *)v233 + 4) = v239;
            *((_QWORD *)v233 + 5) = v238;
            *((_QWORD *)v233 + 6) = v241;
            *((_QWORD *)v233 + 7) = v240;
            v233[64] = v242;
            *(_DWORD *)(v233 + 65) = *(_DWORD *)(v234 + 65);
            v243 = v234[120];
            if (v243 == 255)
            {
              v244 = *(_OWORD *)(v234 + 88);
              *(_OWORD *)(v233 + 72) = *(_OWORD *)(v234 + 72);
              *(_OWORD *)(v233 + 88) = v244;
              *(_OWORD *)(v233 + 104) = *(_OWORD *)(v234 + 104);
              v233[120] = v234[120];
            }
            else
            {
              v248 = (void *)*((_QWORD *)v234 + 9);
              v249 = *((_QWORD *)v234 + 10);
              v250 = *((_QWORD *)v234 + 11);
              v251 = *((_QWORD *)v234 + 12);
              v253 = *((_QWORD *)v234 + 13);
              v252 = *((_QWORD *)v234 + 14);
              v254 = v243 & 1;
              sub_10002B764(v248, v249, v250, v251, v253, v252, v243 & 1);
              *((_QWORD *)v233 + 9) = v248;
              *((_QWORD *)v233 + 10) = v249;
              *((_QWORD *)v233 + 11) = v250;
              *((_QWORD *)v233 + 12) = v251;
              *((_QWORD *)v233 + 13) = v253;
              *((_QWORD *)v233 + 14) = v252;
              v233[120] = v254;
            }
            v8 = v628;
            v6 = v591;
            v9 = v597;
            v233[121] = v234[121];
            a1 = v604;
            a2 = v612;
          }
          else
          {
            v245 = *((_OWORD *)v234 + 5);
            *((_OWORD *)v233 + 4) = *((_OWORD *)v234 + 4);
            *((_OWORD *)v233 + 5) = v245;
            *((_OWORD *)v233 + 6) = *((_OWORD *)v234 + 6);
            *(_OWORD *)(v233 + 106) = *(_OWORD *)(v234 + 106);
            v246 = *((_OWORD *)v234 + 1);
            *(_OWORD *)v233 = *(_OWORD *)v234;
            *((_OWORD *)v233 + 1) = v246;
            v247 = *((_OWORD *)v234 + 3);
            *((_OWORD *)v233 + 2) = *((_OWORD *)v234 + 2);
            *((_OWORD *)v233 + 3) = v247;
          }
          *((_BYTE *)a1 + v231[6]) = *((_BYTE *)a2 + v231[6]);
          *((_BYTE *)a1 + v231[7]) = *((_BYTE *)a2 + v231[7]);
          *((_BYTE *)a1 + v231[8]) = *((_BYTE *)a2 + v231[8]);
          *((_BYTE *)a1 + v231[9]) = *((_BYTE *)a2 + v231[9]);
          *((_BYTE *)a1 + v231[10]) = *((_BYTE *)a2 + v231[10]);
          v255 = v231[11];
          v256 = *(void **)((char *)a2 + v255);
          *(void **)((char *)a1 + v255) = v256;
          v257 = v256;
          v258 = a1;
          v259 = v8;
          v260 = 0;
          goto LABEL_135;
        case 1u:
          v70 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v618 = a3;
          v632 = v8;
          v590 = v6;
          v599 = v9;
          switch(swift_getEnumCaseMultiPayload(a2, v70))
          {
            case 1u:
              v71 = *a2;
              *a1 = *a2;
              v72 = v71;
              v73 = a1;
              v74 = v70;
              v75 = 1;
              goto LABEL_127;
            case 2u:
              v295 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v295 - 8) + 16))(a1, a2, v295);
              v73 = a1;
              v74 = v70;
              v75 = 2;
              goto LABEL_127;
            case 3u:
              v296 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v296 - 8) + 16))(a1, a2, v296);
              v73 = a1;
              v74 = v70;
              v75 = 3;
              goto LABEL_127;
            case 4u:
              v297 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v297 - 8) + 16))(a1, a2, v297);
              v73 = a1;
              v74 = v70;
              v75 = 4;
              goto LABEL_127;
            case 5u:
              v298 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v298 - 8) + 16))(a1, a2, v298);
              v73 = a1;
              v74 = v70;
              v75 = 5;
              goto LABEL_127;
            case 6u:
              v299 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v299 - 8) + 16))(a1, a2, v299);
              v73 = a1;
              v74 = v70;
              v75 = 6;
              goto LABEL_127;
            case 8u:
              v300 = *a2;
              *a1 = *a2;
              v301 = v300;
              v73 = a1;
              v74 = v70;
              v75 = 8;
              goto LABEL_127;
            case 9u:
              v302 = *a2;
              *a1 = *a2;
              v303 = v302;
              v73 = a1;
              v74 = v70;
              v75 = 9;
LABEL_127:
              swift_storeEnumTagMultiPayload(v73, v74, v75);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
              break;
          }
          v304 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v305 = v304[5];
          v306 = (char *)a1 + v305;
          v307 = (char *)a2 + v305;
          v308 = *(uint64_t *)((char *)a2 + v305 + 8);
          if (v308)
          {
            v606 = a1;
            v614 = a2;
            *(_QWORD *)v306 = *(_QWORD *)v307;
            *((_QWORD *)v306 + 1) = v308;
            v309 = (void *)*((_QWORD *)v307 + 2);
            v310 = *((_QWORD *)v307 + 3);
            v311 = *((_QWORD *)v307 + 4);
            v312 = *((_QWORD *)v307 + 5);
            v314 = *((_QWORD *)v307 + 6);
            v313 = *((_QWORD *)v307 + 7);
            v315 = v307[64];
            swift_bridgeObjectRetain(v308);
            sub_10003E1F0(v309, v310, v311, v312, v314, v313, v315);
            *((_QWORD *)v306 + 2) = v309;
            *((_QWORD *)v306 + 3) = v310;
            *((_QWORD *)v306 + 4) = v311;
            *((_QWORD *)v306 + 5) = v312;
            *((_QWORD *)v306 + 6) = v314;
            *((_QWORD *)v306 + 7) = v313;
            v306[64] = v315;
            *(_DWORD *)(v306 + 65) = *(_DWORD *)(v307 + 65);
            v316 = v307[120];
            if (v316 == 255)
            {
              v317 = *(_OWORD *)(v307 + 88);
              *(_OWORD *)(v306 + 72) = *(_OWORD *)(v307 + 72);
              *(_OWORD *)(v306 + 88) = v317;
              *(_OWORD *)(v306 + 104) = *(_OWORD *)(v307 + 104);
              v306[120] = v307[120];
            }
            else
            {
              v321 = (void *)*((_QWORD *)v307 + 9);
              v322 = *((_QWORD *)v307 + 10);
              v323 = *((_QWORD *)v307 + 11);
              v324 = *((_QWORD *)v307 + 12);
              v326 = *((_QWORD *)v307 + 13);
              v325 = *((_QWORD *)v307 + 14);
              v327 = v316 & 1;
              sub_10002B764(v321, v322, v323, v324, v326, v325, v316 & 1);
              *((_QWORD *)v306 + 9) = v321;
              *((_QWORD *)v306 + 10) = v322;
              *((_QWORD *)v306 + 11) = v323;
              *((_QWORD *)v306 + 12) = v324;
              *((_QWORD *)v306 + 13) = v326;
              *((_QWORD *)v306 + 14) = v325;
              v306[120] = v327;
            }
            v8 = v632;
            v6 = v590;
            v9 = v599;
            v306[121] = v307[121];
            a1 = v606;
            a2 = v614;
          }
          else
          {
            v318 = *((_OWORD *)v307 + 5);
            *((_OWORD *)v306 + 4) = *((_OWORD *)v307 + 4);
            *((_OWORD *)v306 + 5) = v318;
            *((_OWORD *)v306 + 6) = *((_OWORD *)v307 + 6);
            *(_OWORD *)(v306 + 106) = *(_OWORD *)(v307 + 106);
            v319 = *((_OWORD *)v307 + 1);
            *(_OWORD *)v306 = *(_OWORD *)v307;
            *((_OWORD *)v306 + 1) = v319;
            v320 = *((_OWORD *)v307 + 3);
            *((_OWORD *)v306 + 2) = *((_OWORD *)v307 + 2);
            *((_OWORD *)v306 + 3) = v320;
          }
          *((_BYTE *)a1 + v304[6]) = *((_BYTE *)a2 + v304[6]);
          *((_BYTE *)a1 + v304[7]) = *((_BYTE *)a2 + v304[7]);
          *((_BYTE *)a1 + v304[8]) = *((_BYTE *)a2 + v304[8]);
          *((_BYTE *)a1 + v304[9]) = *((_BYTE *)a2 + v304[9]);
          *((_BYTE *)a1 + v304[10]) = *((_BYTE *)a2 + v304[10]);
          v328 = v304[11];
          v329 = *(void **)((char *)a2 + v328);
          *(void **)((char *)a1 + v328) = v329;
          v330 = v329;
          v258 = a1;
          v259 = v8;
          v260 = 1;
LABEL_135:
          swift_storeEnumTagMultiPayload(v258, v259, v260);
          a3 = v618;
          break;
        case 2u:
          v622 = a3;
          v633 = v8;
          v76 = *a2;
          *a1 = *a2;
          v77 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v78 = (void **)((char *)a1 + v77);
          v79 = (void **)((char *)a2 + v77);
          v80 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v81 = *(_QWORD *)(v80 - 8);
          v82 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v81 + 48);
          v83 = v76;
          if (v82(v79, 1, v80))
          {
            v84 = sub_10002A750(&qword_100644980);
            memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
            a3 = v622;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v79, v80))
            {
              case 1u:
                v154 = *v79;
                *v78 = *v79;
                v155 = v154;
                v156 = v78;
                v157 = v80;
                v158 = 1;
                goto LABEL_173;
              case 2u:
                v357 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v357 - 8) + 16))(v78, v79, v357);
                v156 = v78;
                v157 = v80;
                v158 = 2;
                goto LABEL_173;
              case 3u:
                v358 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v358 - 8) + 16))(v78, v79, v358);
                v156 = v78;
                v157 = v80;
                v158 = 3;
                goto LABEL_173;
              case 4u:
                v359 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v359 - 8) + 16))(v78, v79, v359);
                v156 = v78;
                v157 = v80;
                v158 = 4;
                goto LABEL_173;
              case 5u:
                v360 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v360 - 8) + 16))(v78, v79, v360);
                v156 = v78;
                v157 = v80;
                v158 = 5;
                goto LABEL_173;
              case 6u:
                v361 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v361 - 8) + 16))(v78, v79, v361);
                v156 = v78;
                v157 = v80;
                v158 = 6;
                goto LABEL_173;
              case 8u:
                v362 = *v79;
                *v78 = *v79;
                v363 = v362;
                v156 = v78;
                v157 = v80;
                v158 = 8;
                goto LABEL_173;
              case 9u:
                v364 = *v79;
                *v78 = *v79;
                v365 = v364;
                v156 = v78;
                v157 = v80;
                v158 = 9;
LABEL_173:
                swift_storeEnumTagMultiPayload(v156, v157, v158);
                break;
              default:
                memcpy(v78, v79, *(_QWORD *)(v81 + 64));
                break;
            }
            a3 = v622;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
          }
          v8 = v633;
          v105 = a1;
          v106 = v633;
          v107 = 2;
          goto LABEL_205;
        case 3u:
          v623 = a3;
          v634 = v8;
          v85 = *a2;
          *a1 = *a2;
          v86 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v87 = (void **)((char *)a1 + v86);
          v88 = (void **)((char *)a2 + v86);
          v89 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v90 = *(_QWORD *)(v89 - 8);
          v91 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v90 + 48);
          v92 = v85;
          if (v91(v88, 1, v89))
          {
            v93 = sub_10002A750(&qword_100644980);
            memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
            a3 = v623;
            v8 = v634;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v88, v89))
            {
              case 1u:
                v159 = *v88;
                *v87 = *v88;
                v160 = v159;
                v161 = v87;
                v162 = v89;
                v163 = 1;
                goto LABEL_202;
              case 2u:
                v366 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v366 - 8) + 16))(v87, v88, v366);
                v161 = v87;
                v162 = v89;
                v163 = 2;
                goto LABEL_202;
              case 3u:
                v367 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v367 - 8) + 16))(v87, v88, v367);
                v161 = v87;
                v162 = v89;
                v163 = 3;
                goto LABEL_202;
              case 4u:
                v368 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v368 - 8) + 16))(v87, v88, v368);
                v161 = v87;
                v162 = v89;
                v163 = 4;
                goto LABEL_202;
              case 5u:
                v386 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v386 - 8) + 16))(v87, v88, v386);
                v161 = v87;
                v162 = v89;
                v163 = 5;
                goto LABEL_202;
              case 6u:
                v369 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v369 - 8) + 16))(v87, v88, v369);
                v161 = v87;
                v162 = v89;
                v163 = 6;
                goto LABEL_202;
              case 8u:
                v370 = *v88;
                *v87 = *v88;
                v371 = v370;
                v161 = v87;
                v162 = v89;
                v163 = 8;
                goto LABEL_202;
              case 9u:
                v372 = *v88;
                *v87 = *v88;
                v373 = v372;
                v161 = v87;
                v162 = v89;
                v163 = 9;
LABEL_202:
                swift_storeEnumTagMultiPayload(v161, v162, v163);
                break;
              default:
                memcpy(v87, v88, *(_QWORD *)(v90 + 64));
                break;
            }
            a3 = v623;
            v8 = v634;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
          }
          v105 = a1;
          v106 = v8;
          v107 = 3;
          goto LABEL_205;
        case 4u:
          v624 = a3;
          v635 = v8;
          v94 = *a2;
          *a1 = *a2;
          v95 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v96 = (void **)((char *)a1 + v95);
          v97 = (void **)((char *)a2 + v95);
          v98 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v99 = *(_QWORD *)(v98 - 8);
          v100 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v99 + 48);
          v101 = v94;
          if (v100(v97, 1, v98))
          {
            v102 = sub_10002A750(&qword_100644980);
            memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
            a3 = v624;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v97, v98))
            {
              case 1u:
                v164 = *v97;
                *v96 = *v97;
                v165 = v164;
                v166 = v96;
                v167 = v98;
                v168 = 1;
                goto LABEL_191;
              case 2u:
                v374 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v374 - 8) + 16))(v96, v97, v374);
                v166 = v96;
                v167 = v98;
                v168 = 2;
                goto LABEL_191;
              case 3u:
                v375 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v375 - 8) + 16))(v96, v97, v375);
                v166 = v96;
                v167 = v98;
                v168 = 3;
                goto LABEL_191;
              case 4u:
                v376 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v376 - 8) + 16))(v96, v97, v376);
                v166 = v96;
                v167 = v98;
                v168 = 4;
                goto LABEL_191;
              case 5u:
                v377 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v377 - 8) + 16))(v96, v97, v377);
                v166 = v96;
                v167 = v98;
                v168 = 5;
                goto LABEL_191;
              case 6u:
                v378 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v378 - 8) + 16))(v96, v97, v378);
                v166 = v96;
                v167 = v98;
                v168 = 6;
                goto LABEL_191;
              case 8u:
                v379 = *v97;
                *v96 = *v97;
                v380 = v379;
                v166 = v96;
                v167 = v98;
                v168 = 8;
                goto LABEL_191;
              case 9u:
                v381 = *v97;
                *v96 = *v97;
                v382 = v381;
                v166 = v96;
                v167 = v98;
                v168 = 9;
LABEL_191:
                swift_storeEnumTagMultiPayload(v166, v167, v168);
                break;
              default:
                memcpy(v96, v97, *(_QWORD *)(v99 + 64));
                break;
            }
            a3 = v624;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
          }
          v8 = v635;
          v105 = a1;
          v106 = v635;
          v107 = 4;
          goto LABEL_205;
        case 5u:
          *a1 = *a2;
          *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
          *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
          v103 = a2[2];
          a1[2] = v103;
          v104 = v103;
          v105 = a1;
          v106 = v8;
          v107 = 5;
          goto LABEL_205;
        case 6u:
          v120 = *a2;
          *a1 = *a2;
          v121 = v120;
          v105 = a1;
          v106 = v8;
          v107 = 6;
          goto LABEL_205;
        case 7u:
          v108 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v109 = *(_QWORD *)(v108 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v109 + 48))(a2, 1, v108))
          {
            v110 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
          }
          else
          {
            v169 = *a2;
            *a1 = *a2;
            v170 = *(int *)(v108 + 20);
            v581 = (char *)a2 + v170;
            v585 = (char *)a1 + v170;
            v610 = a2;
            v171 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v172 = v8;
            v173 = a3;
            v174 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v171 - 8) + 16);
            v175 = swift_bridgeObjectRetain(v169);
            v176 = v171;
            a2 = v610;
            v174(v585, v581, v176, v175);
            a3 = v173;
            v8 = v172;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v109 + 56))(a1, 0, 1, v108);
          }
          v177 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v178 = (void **)((char *)a1 + v177);
          v179 = (void **)((char *)a2 + v177);
          v180 = v179[1];
          if (v180)
          {
            *v178 = *v179;
            v178[1] = v180;
            v181 = (void *)v179[2];
            v178[2] = v181;
            swift_bridgeObjectRetain(v180);
            v182 = v181;
          }
          else
          {
            *(_OWORD *)v178 = *(_OWORD *)v179;
            v178[2] = v179[2];
          }
          v105 = a1;
          v106 = v8;
          v107 = 7;
          goto LABEL_205;
        case 8u:
          v122 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v123 = *(_QWORD *)(v122 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v123 + 48))(a2, 1, v122))
          {
            v124 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
          }
          else
          {
            v185 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(a1, a2, v185);
            *((_BYTE *)a1 + *(int *)(v122 + 20)) = *((_BYTE *)a2 + *(int *)(v122 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v123 + 56))(a1, 0, 1, v122);
          }
          v186 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)a1 + *(int *)(v186 + 20)) = *(void **)((char *)a2 + *(int *)(v186 + 20));
          v105 = a1;
          v106 = v8;
          v107 = 8;
          goto LABEL_205;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v111 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v112 = (char *)a1 + v111;
          v113 = (char *)a2 + v111;
          v114 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 16))(v112, v113, v114);
          v105 = a1;
          v106 = v8;
          v107 = 9;
LABEL_205:
          swift_storeEnumTagMultiPayload(v105, v106, v107);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v9 + 64));
          break;
      }
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v385 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, v6, v385);
  v387 = *(int *)(a3 + 20);
  v388 = (void **)((char *)a1 + v387);
  v389 = (void **)((char *)a2 + v387);
  switch(swift_getEnumCaseMultiPayload((char *)a2 + v387, v8))
  {
    case 0u:
      v390 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v607 = a1;
      v615 = a2;
      v625 = a3;
      switch(swift_getEnumCaseMultiPayload(v389, v390))
      {
        case 1u:
          v391 = *v389;
          *v388 = *v389;
          v392 = v391;
          v393 = v388;
          v394 = v390;
          v395 = 1;
          goto LABEL_248;
        case 2u:
          v484 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v484 - 8) + 16))(v388, v389, v484);
          v393 = v388;
          v394 = v390;
          v395 = 2;
          goto LABEL_248;
        case 3u:
          v485 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v485 - 8) + 16))(v388, v389, v485);
          v393 = v388;
          v394 = v390;
          v395 = 3;
          goto LABEL_248;
        case 4u:
          v486 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v486 - 8) + 16))(v388, v389, v486);
          v393 = v388;
          v394 = v390;
          v395 = 4;
          goto LABEL_248;
        case 5u:
          v487 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v487 - 8) + 16))(v388, v389, v487);
          v393 = v388;
          v394 = v390;
          v395 = 5;
          goto LABEL_248;
        case 6u:
          v488 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v488 - 8) + 16))(v388, v389, v488);
          v393 = v388;
          v394 = v390;
          v395 = 6;
          goto LABEL_248;
        case 8u:
          v489 = *v389;
          *v388 = *v389;
          v490 = v489;
          v393 = v388;
          v394 = v390;
          v395 = 8;
          goto LABEL_248;
        case 9u:
          v491 = *v389;
          *v388 = *v389;
          v492 = v491;
          v393 = v388;
          v394 = v390;
          v395 = 9;
LABEL_248:
          swift_storeEnumTagMultiPayload(v393, v394, v395);
          break;
        default:
          memcpy(v388, v389, *(_QWORD *)(*(_QWORD *)(v390 - 8) + 64));
          break;
      }
      v493 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v494 = v493[5];
      v495 = (char *)v388 + v494;
      v496 = (char *)v389 + v494;
      v497 = *(uint64_t *)((char *)v389 + v494 + 8);
      if (v497)
      {
        v601 = v388;
        v641 = v8;
        *(_QWORD *)v495 = *(_QWORD *)v496;
        *((_QWORD *)v495 + 1) = v497;
        v498 = (void *)*((_QWORD *)v496 + 2);
        v499 = *((_QWORD *)v496 + 3);
        v501 = *((_QWORD *)v496 + 4);
        v500 = *((_QWORD *)v496 + 5);
        v503 = *((_QWORD *)v496 + 6);
        v502 = *((_QWORD *)v496 + 7);
        v593 = v496[64];
        swift_bridgeObjectRetain(v497);
        sub_10003E1F0(v498, v499, v501, v500, v503, v502, v593);
        *((_QWORD *)v495 + 2) = v498;
        *((_QWORD *)v495 + 3) = v499;
        *((_QWORD *)v495 + 4) = v501;
        *((_QWORD *)v495 + 5) = v500;
        *((_QWORD *)v495 + 6) = v503;
        *((_QWORD *)v495 + 7) = v502;
        v495[64] = v593;
        *(_DWORD *)(v495 + 65) = *(_DWORD *)(v496 + 65);
        v504 = v496[120];
        if (v504 == 255)
        {
          v505 = *(_OWORD *)(v496 + 88);
          *(_OWORD *)(v495 + 72) = *(_OWORD *)(v496 + 72);
          *(_OWORD *)(v495 + 88) = v505;
          *(_OWORD *)(v495 + 104) = *(_OWORD *)(v496 + 104);
          v495[120] = v496[120];
        }
        else
        {
          v594 = v504 & 1;
          v510 = (void *)*((_QWORD *)v496 + 9);
          v509 = *((_QWORD *)v496 + 10);
          v511 = *((_QWORD *)v496 + 11);
          v512 = *((_QWORD *)v496 + 12);
          v513 = *((_QWORD *)v496 + 13);
          v514 = *((_QWORD *)v496 + 14);
          sub_10002B764(v510, v509, v511, v512, v513, v514, v504 & 1);
          *((_QWORD *)v495 + 9) = v510;
          *((_QWORD *)v495 + 10) = v509;
          *((_QWORD *)v495 + 11) = v511;
          *((_QWORD *)v495 + 12) = v512;
          *((_QWORD *)v495 + 13) = v513;
          *((_QWORD *)v495 + 14) = v514;
          v495[120] = v594;
        }
        a1 = v607;
        a2 = v615;
        a3 = v625;
        v8 = v641;
        v495[121] = v496[121];
        v388 = v601;
      }
      else
      {
        v506 = *((_OWORD *)v496 + 5);
        *((_OWORD *)v495 + 4) = *((_OWORD *)v496 + 4);
        *((_OWORD *)v495 + 5) = v506;
        *((_OWORD *)v495 + 6) = *((_OWORD *)v496 + 6);
        *(_OWORD *)(v495 + 106) = *(_OWORD *)(v496 + 106);
        v507 = *((_OWORD *)v496 + 1);
        *(_OWORD *)v495 = *(_OWORD *)v496;
        *((_OWORD *)v495 + 1) = v507;
        v508 = *((_OWORD *)v496 + 3);
        *((_OWORD *)v495 + 2) = *((_OWORD *)v496 + 2);
        *((_OWORD *)v495 + 3) = v508;
      }
      *((_BYTE *)v388 + v493[6]) = *((_BYTE *)v389 + v493[6]);
      *((_BYTE *)v388 + v493[7]) = *((_BYTE *)v389 + v493[7]);
      *((_BYTE *)v388 + v493[8]) = *((_BYTE *)v389 + v493[8]);
      *((_BYTE *)v388 + v493[9]) = *((_BYTE *)v389 + v493[9]);
      *((_BYTE *)v388 + v493[10]) = *((_BYTE *)v389 + v493[10]);
      v515 = v493[11];
      v516 = *(void **)((char *)v389 + v515);
      *(void **)((char *)v388 + v515) = v516;
      v517 = v516;
      v437 = v388;
      v438 = v8;
      v439 = 0;
      goto LABEL_305;
    case 1u:
      v396 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v608 = a1;
      v616 = a2;
      v626 = a3;
      switch(swift_getEnumCaseMultiPayload(v389, v396))
      {
        case 1u:
          v397 = *v389;
          *v388 = *v389;
          v398 = v397;
          v399 = v388;
          v400 = v396;
          v401 = 1;
          goto LABEL_264;
        case 2u:
          v518 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v518 - 8) + 16))(v388, v389, v518);
          v399 = v388;
          v400 = v396;
          v401 = 2;
          goto LABEL_264;
        case 3u:
          v519 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v519 - 8) + 16))(v388, v389, v519);
          v399 = v388;
          v400 = v396;
          v401 = 3;
          goto LABEL_264;
        case 4u:
          v520 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v520 - 8) + 16))(v388, v389, v520);
          v399 = v388;
          v400 = v396;
          v401 = 4;
          goto LABEL_264;
        case 5u:
          v521 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v521 - 8) + 16))(v388, v389, v521);
          v399 = v388;
          v400 = v396;
          v401 = 5;
          goto LABEL_264;
        case 6u:
          v522 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v522 - 8) + 16))(v388, v389, v522);
          v399 = v388;
          v400 = v396;
          v401 = 6;
          goto LABEL_264;
        case 8u:
          v523 = *v389;
          *v388 = *v389;
          v524 = v523;
          v399 = v388;
          v400 = v396;
          v401 = 8;
          goto LABEL_264;
        case 9u:
          v525 = *v389;
          *v388 = *v389;
          v526 = v525;
          v399 = v388;
          v400 = v396;
          v401 = 9;
LABEL_264:
          swift_storeEnumTagMultiPayload(v399, v400, v401);
          break;
        default:
          memcpy(v388, v389, *(_QWORD *)(*(_QWORD *)(v396 - 8) + 64));
          break;
      }
      v527 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v528 = v527[5];
      v529 = (char *)v388 + v528;
      v530 = (char *)v389 + v528;
      v531 = *(uint64_t *)((char *)v389 + v528 + 8);
      if (v531)
      {
        v602 = v388;
        v642 = v8;
        *(_QWORD *)v529 = *(_QWORD *)v530;
        *((_QWORD *)v529 + 1) = v531;
        v533 = (void *)*((_QWORD *)v530 + 2);
        v532 = *((_QWORD *)v530 + 3);
        v534 = *((_QWORD *)v530 + 4);
        v535 = *((_QWORD *)v530 + 5);
        v536 = *((_QWORD *)v530 + 6);
        v537 = *((_QWORD *)v530 + 7);
        v595 = v530[64];
        swift_bridgeObjectRetain(v531);
        sub_10003E1F0(v533, v532, v534, v535, v536, v537, v595);
        *((_QWORD *)v529 + 2) = v533;
        *((_QWORD *)v529 + 3) = v532;
        *((_QWORD *)v529 + 4) = v534;
        *((_QWORD *)v529 + 5) = v535;
        *((_QWORD *)v529 + 6) = v536;
        *((_QWORD *)v529 + 7) = v537;
        v529[64] = v595;
        *(_DWORD *)(v529 + 65) = *(_DWORD *)(v530 + 65);
        v538 = v530[120];
        if (v538 == 255)
        {
          v539 = *(_OWORD *)(v530 + 88);
          *(_OWORD *)(v529 + 72) = *(_OWORD *)(v530 + 72);
          *(_OWORD *)(v529 + 88) = v539;
          *(_OWORD *)(v529 + 104) = *(_OWORD *)(v530 + 104);
          v529[120] = v530[120];
        }
        else
        {
          v596 = v538 & 1;
          v544 = (void *)*((_QWORD *)v530 + 9);
          v543 = *((_QWORD *)v530 + 10);
          v545 = *((_QWORD *)v530 + 11);
          v546 = *((_QWORD *)v530 + 12);
          v547 = *((_QWORD *)v530 + 13);
          v548 = *((_QWORD *)v530 + 14);
          sub_10002B764(v544, v543, v545, v546, v547, v548, v538 & 1);
          *((_QWORD *)v529 + 9) = v544;
          *((_QWORD *)v529 + 10) = v543;
          *((_QWORD *)v529 + 11) = v545;
          *((_QWORD *)v529 + 12) = v546;
          *((_QWORD *)v529 + 13) = v547;
          *((_QWORD *)v529 + 14) = v548;
          v529[120] = v596;
        }
        a1 = v608;
        a2 = v616;
        a3 = v626;
        v8 = v642;
        v529[121] = v530[121];
        v388 = v602;
      }
      else
      {
        v540 = *((_OWORD *)v530 + 5);
        *((_OWORD *)v529 + 4) = *((_OWORD *)v530 + 4);
        *((_OWORD *)v529 + 5) = v540;
        *((_OWORD *)v529 + 6) = *((_OWORD *)v530 + 6);
        *(_OWORD *)(v529 + 106) = *(_OWORD *)(v530 + 106);
        v541 = *((_OWORD *)v530 + 1);
        *(_OWORD *)v529 = *(_OWORD *)v530;
        *((_OWORD *)v529 + 1) = v541;
        v542 = *((_OWORD *)v530 + 3);
        *((_OWORD *)v529 + 2) = *((_OWORD *)v530 + 2);
        *((_OWORD *)v529 + 3) = v542;
      }
      *((_BYTE *)v388 + v527[6]) = *((_BYTE *)v389 + v527[6]);
      *((_BYTE *)v388 + v527[7]) = *((_BYTE *)v389 + v527[7]);
      *((_BYTE *)v388 + v527[8]) = *((_BYTE *)v389 + v527[8]);
      *((_BYTE *)v388 + v527[9]) = *((_BYTE *)v389 + v527[9]);
      *((_BYTE *)v388 + v527[10]) = *((_BYTE *)v389 + v527[10]);
      v549 = v527[11];
      v550 = *(void **)((char *)v389 + v549);
      *(void **)((char *)v388 + v549) = v550;
      v551 = v550;
      v437 = v388;
      v438 = v8;
      v439 = 1;
      goto LABEL_305;
    case 2u:
      v638 = v8;
      v402 = *v389;
      *v388 = *v389;
      v403 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v404 = v388;
      v405 = (void **)((char *)v388 + v403);
      v406 = (void **)((char *)v389 + v403);
      v407 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v408 = *(_QWORD *)(v407 - 8);
      v409 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v408 + 48);
      v410 = v402;
      if (v409(v406, 1, v407))
      {
        v411 = sub_10002A750(&qword_100644980);
        memcpy(v405, v406, *(_QWORD *)(*(_QWORD *)(v411 - 8) + 64));
        v412 = v638;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v406, v407))
        {
          case 1u:
            v452 = *v406;
            *v405 = *v406;
            v453 = v452;
            v454 = v405;
            v455 = v407;
            v456 = 1;
            goto LABEL_280;
          case 2u:
            v552 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v552 - 8) + 16))(v405, v406, v552);
            v454 = v405;
            v455 = v407;
            v456 = 2;
            goto LABEL_280;
          case 3u:
            v553 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v553 - 8) + 16))(v405, v406, v553);
            v454 = v405;
            v455 = v407;
            v456 = 3;
            goto LABEL_280;
          case 4u:
            v554 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v554 - 8) + 16))(v405, v406, v554);
            v454 = v405;
            v455 = v407;
            v456 = 4;
            goto LABEL_280;
          case 5u:
            v555 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v555 - 8) + 16))(v405, v406, v555);
            v454 = v405;
            v455 = v407;
            v456 = 5;
            goto LABEL_280;
          case 6u:
            v556 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v556 - 8) + 16))(v405, v406, v556);
            v454 = v405;
            v455 = v407;
            v456 = 6;
            goto LABEL_280;
          case 8u:
            v557 = *v406;
            *v405 = *v406;
            v558 = v557;
            v454 = v405;
            v455 = v407;
            v456 = 8;
            goto LABEL_280;
          case 9u:
            v559 = *v406;
            *v405 = *v406;
            v560 = v559;
            v454 = v405;
            v455 = v407;
            v456 = 9;
LABEL_280:
            swift_storeEnumTagMultiPayload(v454, v455, v456);
            break;
          default:
            memcpy(v405, v406, *(_QWORD *)(v408 + 64));
            break;
        }
        v412 = v638;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v408 + 56))(v405, 0, 1, v407);
      }
      v437 = v404;
      v438 = v412;
      v439 = 2;
      goto LABEL_305;
    case 3u:
      v639 = v8;
      v413 = *v389;
      *v388 = *v389;
      v414 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v415 = v388;
      v416 = (void **)((char *)v388 + v414);
      v417 = (void **)((char *)v389 + v414);
      v418 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v419 = *(_QWORD *)(v418 - 8);
      v420 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v419 + 48);
      v421 = v413;
      if (v420(v417, 1, v418))
      {
        v422 = sub_10002A750(&qword_100644980);
        memcpy(v416, v417, *(_QWORD *)(*(_QWORD *)(v422 - 8) + 64));
        v423 = v639;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v417, v418))
        {
          case 1u:
            v457 = *v417;
            *v416 = *v417;
            v458 = v457;
            v459 = v416;
            v460 = v418;
            v461 = 1;
            goto LABEL_291;
          case 2u:
            v561 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v561 - 8) + 16))(v416, v417, v561);
            v459 = v416;
            v460 = v418;
            v461 = 2;
            goto LABEL_291;
          case 3u:
            v562 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v562 - 8) + 16))(v416, v417, v562);
            v459 = v416;
            v460 = v418;
            v461 = 3;
            goto LABEL_291;
          case 4u:
            v563 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v563 - 8) + 16))(v416, v417, v563);
            v459 = v416;
            v460 = v418;
            v461 = 4;
            goto LABEL_291;
          case 5u:
            v564 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v564 - 8) + 16))(v416, v417, v564);
            v459 = v416;
            v460 = v418;
            v461 = 5;
            goto LABEL_291;
          case 6u:
            v565 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v565 - 8) + 16))(v416, v417, v565);
            v459 = v416;
            v460 = v418;
            v461 = 6;
            goto LABEL_291;
          case 8u:
            v566 = *v417;
            *v416 = *v417;
            v567 = v566;
            v459 = v416;
            v460 = v418;
            v461 = 8;
            goto LABEL_291;
          case 9u:
            v568 = *v417;
            *v416 = *v417;
            v569 = v568;
            v459 = v416;
            v460 = v418;
            v461 = 9;
LABEL_291:
            swift_storeEnumTagMultiPayload(v459, v460, v461);
            break;
          default:
            memcpy(v416, v417, *(_QWORD *)(v419 + 64));
            break;
        }
        v423 = v639;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v419 + 56))(v416, 0, 1, v418);
      }
      v437 = v415;
      v438 = v423;
      v439 = 3;
      goto LABEL_305;
    case 4u:
      v640 = v8;
      v424 = *v389;
      *v388 = *v389;
      v425 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v426 = v388;
      v427 = (void **)((char *)v388 + v425);
      v428 = (void **)((char *)v389 + v425);
      v429 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v430 = *(_QWORD *)(v429 - 8);
      v431 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v430 + 48);
      v432 = v424;
      if (v431(v428, 1, v429))
      {
        v433 = sub_10002A750(&qword_100644980);
        memcpy(v427, v428, *(_QWORD *)(*(_QWORD *)(v433 - 8) + 64));
        v434 = v640;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v428, v429))
        {
          case 1u:
            v462 = *v428;
            *v427 = *v428;
            v463 = v462;
            v464 = v427;
            v465 = v429;
            v466 = 1;
            goto LABEL_302;
          case 2u:
            v570 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v570 - 8) + 16))(v427, v428, v570);
            v464 = v427;
            v465 = v429;
            v466 = 2;
            goto LABEL_302;
          case 3u:
            v571 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v571 - 8) + 16))(v427, v428, v571);
            v464 = v427;
            v465 = v429;
            v466 = 3;
            goto LABEL_302;
          case 4u:
            v572 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v572 - 8) + 16))(v427, v428, v572);
            v464 = v427;
            v465 = v429;
            v466 = 4;
            goto LABEL_302;
          case 5u:
            v573 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v573 - 8) + 16))(v427, v428, v573);
            v464 = v427;
            v465 = v429;
            v466 = 5;
            goto LABEL_302;
          case 6u:
            v574 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v574 - 8) + 16))(v427, v428, v574);
            v464 = v427;
            v465 = v429;
            v466 = 6;
            goto LABEL_302;
          case 8u:
            v575 = *v428;
            *v427 = *v428;
            v576 = v575;
            v464 = v427;
            v465 = v429;
            v466 = 8;
            goto LABEL_302;
          case 9u:
            v577 = *v428;
            *v427 = *v428;
            v578 = v577;
            v464 = v427;
            v465 = v429;
            v466 = 9;
LABEL_302:
            swift_storeEnumTagMultiPayload(v464, v465, v466);
            break;
          default:
            memcpy(v427, v428, *(_QWORD *)(v430 + 64));
            break;
        }
        v434 = v640;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v430 + 56))(v427, 0, 1, v429);
      }
      v437 = v426;
      v438 = v434;
      v439 = 4;
      goto LABEL_305;
    case 5u:
      *v388 = *v389;
      *((_BYTE *)v388 + 8) = *((_BYTE *)v389 + 8);
      *(_WORD *)((char *)v388 + 9) = *(_WORD *)((char *)v389 + 9);
      v435 = v389[2];
      v388[2] = v435;
      v436 = v435;
      v437 = v388;
      v438 = v8;
      v439 = 5;
      goto LABEL_305;
    case 6u:
      v447 = *v389;
      *v388 = *v389;
      v448 = v447;
      v437 = v388;
      v438 = v8;
      v439 = 6;
      goto LABEL_305;
    case 7u:
      v440 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v441 = *(_QWORD *)(v440 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v441 + 48))(v389, 1, v440))
      {
        v442 = sub_10002A750(&qword_100644600);
        memcpy(v388, v389, *(_QWORD *)(*(_QWORD *)(v442 - 8) + 64));
      }
      else
      {
        v467 = *v389;
        *v388 = *v389;
        v468 = *(int *)(v440 + 20);
        v592 = (char *)v389 + v468;
        v600 = (char *)v388 + v468;
        v627 = a3;
        v469 = type metadata accessor for REMHashtagLabelSpecifier(0);
        v470 = a2;
        v471 = v388;
        v472 = v8;
        v473 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v469 - 8) + 16);
        v474 = swift_bridgeObjectRetain(v467);
        v475 = v469;
        a3 = v627;
        v473(v600, v592, v475, v474);
        v8 = v472;
        v388 = v471;
        a2 = v470;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v441 + 56))(v388, 0, 1, v440);
      }
      v476 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v477 = (void **)((char *)v388 + v476);
      v478 = (void **)((char *)v389 + v476);
      v479 = v478[1];
      if (v479)
      {
        *v477 = *v478;
        v477[1] = v479;
        v480 = (void *)v478[2];
        v477[2] = v480;
        swift_bridgeObjectRetain(v479);
        v481 = v480;
      }
      else
      {
        *(_OWORD *)v477 = *(_OWORD *)v478;
        v477[2] = v478[2];
      }
      v437 = v388;
      v438 = v8;
      v439 = 7;
      goto LABEL_305;
    case 8u:
      v449 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v450 = *(_QWORD *)(v449 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v450 + 48))(v389, 1, v449))
      {
        v451 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(v388, v389, *(_QWORD *)(*(_QWORD *)(v451 - 8) + 64));
      }
      else
      {
        v482 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v482 - 8) + 16))(v388, v389, v482);
        *((_BYTE *)v388 + *(int *)(v449 + 20)) = *((_BYTE *)v389 + *(int *)(v449 + 20));
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v450 + 56))(v388, 0, 1, v449);
      }
      v483 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(void **)((char *)v388 + *(int *)(v483 + 20)) = *(void **)((char *)v389 + *(int *)(v483 + 20));
      v437 = v388;
      v438 = v8;
      v439 = 8;
      goto LABEL_305;
    case 9u:
      *(_BYTE *)v388 = *(_BYTE *)v389;
      v443 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v444 = (char *)v388 + v443;
      v445 = (char *)v389 + v443;
      v446 = type metadata accessor for AnyTip(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v446 - 8) + 16))(v444, v445, v446);
      v437 = v388;
      v438 = v8;
      v439 = 9;
LABEL_305:
      swift_storeEnumTagMultiPayload(v437, v438, v439);
      break;
    default:
      memcpy(v388, v389, *(_QWORD *)(v9 + 64));
      break;
  }
  *(void **)((char *)a1 + *(int *)(a3 + 24)) = *(void **)((char *)a2 + *(int *)(a3 + 24));
  swift_retain();
  return a1;
}

_QWORD *sub_1003AE558(uint64_t a1, void **a2, uint64_t a3)
{
  void **v4;
  _QWORD *v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void **v33;
  void **v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(void **, uint64_t, uint64_t);
  id v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void **v42;
  void **v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(void **, uint64_t, uint64_t);
  id v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void **v51;
  void **v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v55)(void **, uint64_t, uint64_t);
  id v56;
  uint64_t v57;
  void *v58;
  id v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  void **v78;
  void **v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(void **, uint64_t, uint64_t);
  id v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  void **v87;
  void **v88;
  uint64_t v89;
  uint64_t v90;
  unsigned int (*v91)(void **, uint64_t, uint64_t);
  id v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  void **v96;
  void **v97;
  uint64_t v98;
  uint64_t v99;
  unsigned int (*v100)(void **, uint64_t, uint64_t);
  id v101;
  uint64_t v102;
  void *v103;
  id v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  void *v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  id v126;
  void **v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  id v131;
  void **v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  id v136;
  void **v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  char *v142;
  _QWORD *v143;
  uint64_t v144;
  void (*v145)(char *, char *, uint64_t, __n128);
  __n128 v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  _QWORD *v151;
  uint64_t v152;
  void *v153;
  id v154;
  void *v155;
  id v156;
  void **v157;
  uint64_t v158;
  uint64_t v159;
  void *v160;
  id v161;
  void **v162;
  uint64_t v163;
  uint64_t v164;
  void *v165;
  id v166;
  void **v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  uint64_t v171;
  char *v172;
  _QWORD *v173;
  uint64_t v174;
  void (*v175)(char *, char *, uint64_t, __n128);
  __n128 v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  _QWORD *v181;
  uint64_t v182;
  void *v183;
  id v184;
  __int128 v185;
  __int128 v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  void *v196;
  id v197;
  void *v198;
  id v199;
  int *v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  void *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unsigned __int8 v210;
  int v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  char v221;
  void *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  void *v228;
  id v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  void *v235;
  id v236;
  void *v237;
  id v238;
  int *v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  void *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  int v250;
  __int128 v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  char v260;
  void *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  void *v267;
  id v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  void *v274;
  id v275;
  void *v276;
  id v277;
  int *v278;
  uint64_t v279;
  char *v280;
  char *v281;
  uint64_t v282;
  void *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  int v289;
  __int128 v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  __int128 v294;
  __int128 v295;
  __int128 v296;
  __int128 v297;
  __int128 v298;
  char v299;
  void *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  void *v306;
  id v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  void *v313;
  id v314;
  void *v315;
  id v316;
  int *v317;
  uint64_t v318;
  char *v319;
  char *v320;
  uint64_t v321;
  void *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  unsigned __int8 v328;
  int v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  __int128 v334;
  __int128 v335;
  __int128 v336;
  __int128 v337;
  __int128 v338;
  char v339;
  void *v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  void *v347;
  id v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  void *v354;
  id v355;
  void *v356;
  id v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  void *v363;
  id v364;
  void *v365;
  id v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  void *v372;
  id v373;
  void *v374;
  id v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  void *v383;
  id v384;
  void *v385;
  id v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  void *v392;
  id v393;
  void *v394;
  id v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  void *v401;
  id v402;
  void *v403;
  id v404;
  uint64_t v405;
  void **v406;
  void **v407;
  uint64_t v408;
  void *v409;
  id v410;
  void **v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  void *v415;
  id v416;
  void **v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  void *v421;
  uint64_t v422;
  void **v423;
  void **v424;
  uint64_t v425;
  uint64_t v426;
  unsigned int (*v427)(void **, uint64_t, uint64_t);
  id v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  void *v432;
  uint64_t v433;
  void **v434;
  void **v435;
  uint64_t v436;
  uint64_t v437;
  unsigned int (*v438)(void **, uint64_t, uint64_t);
  id v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  void *v443;
  uint64_t v444;
  void **v445;
  void **v446;
  uint64_t v447;
  uint64_t v448;
  unsigned int (*v449)(void **, uint64_t, uint64_t);
  id v450;
  uint64_t v451;
  uint64_t v452;
  void *v453;
  id v454;
  void **v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  char *v462;
  char *v463;
  uint64_t v464;
  void *v465;
  id v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  void *v470;
  id v471;
  void **v472;
  uint64_t v473;
  uint64_t v474;
  void *v475;
  id v476;
  void **v477;
  uint64_t v478;
  uint64_t v479;
  void *v480;
  id v481;
  void **v482;
  uint64_t v483;
  uint64_t v484;
  void *v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  void **v489;
  void (*v490)(char *, char *, uint64_t, __n128);
  __n128 v491;
  uint64_t v492;
  uint64_t v493;
  _QWORD *v494;
  _QWORD *v495;
  uint64_t v496;
  void *v497;
  id v498;
  __int128 v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  void *v507;
  id v508;
  void *v509;
  id v510;
  int *v511;
  uint64_t v512;
  char *v513;
  char *v514;
  uint64_t v515;
  void *v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  int v522;
  __int128 v523;
  __int128 v524;
  __int128 v525;
  __int128 v526;
  __int128 v527;
  __int128 v528;
  __int128 v529;
  __int128 v530;
  __int128 v531;
  uint64_t v532;
  void *v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  void *v539;
  id v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  void *v546;
  id v547;
  void *v548;
  id v549;
  int *v550;
  uint64_t v551;
  char *v552;
  char *v553;
  uint64_t v554;
  uint64_t v555;
  void *v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  int v561;
  __int128 v562;
  __int128 v563;
  __int128 v564;
  __int128 v565;
  __int128 v566;
  __int128 v567;
  __int128 v568;
  __int128 v569;
  __int128 v570;
  uint64_t v571;
  void *v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  void *v578;
  id v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  void *v585;
  id v586;
  void *v587;
  id v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  void *v594;
  id v595;
  void *v596;
  id v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  void *v603;
  id v604;
  void *v605;
  id v606;
  int *v608;
  char *v609;
  char *v610;
  uint64_t v611;
  uint64_t v612;
  unsigned __int8 v613;
  uint64_t v614;
  unsigned __int8 v615;
  uint64_t v616;
  uint64_t v617;
  char *v618;
  unsigned __int8 v619;
  char v620;
  unsigned __int8 v621;
  char v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  char *v626;
  void **v627;
  void **v628;
  void **v629;
  void **v630;
  void **v631;
  void **v632;
  void **v633;
  void **v634;
  _QWORD *v635;
  _QWORD *v636;
  _QWORD *v637;
  _QWORD *v638;
  _QWORD *v639;
  _QWORD *v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;

  v4 = a2;
  v5 = (_QWORD *)a1;
  if ((void **)a1 != a2)
  {
    sub_1000073A0(a1, &qword_10064B6B0);
    v6 = sub_10002A750(&qword_10064B6B0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v6);
    v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v9 = *(_QWORD *)(v8 - 8);
    v10 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8);
    if (EnumCaseMultiPayload == 1)
    {
      if (v10)
      {
        v11 = sub_10002A750((uint64_t *)&unk_100640EB0);
        memcpy(v5, v4, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v4, v8))
        {
          case 0u:
            v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v656 = v8;
            switch(swift_getEnumCaseMultiPayload(v4, v13))
            {
              case 1u:
                v14 = *v4;
                *v5 = *v4;
                v15 = v14;
                v16 = v5;
                v17 = v13;
                v18 = 1;
                goto LABEL_79;
              case 2u:
                v191 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v5, v4, v191);
                v16 = v5;
                v17 = v13;
                v18 = 2;
                goto LABEL_79;
              case 3u:
                v192 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v192 - 8) + 16))(v5, v4, v192);
                v16 = v5;
                v17 = v13;
                v18 = 3;
                goto LABEL_79;
              case 4u:
                v193 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v193 - 8) + 16))(v5, v4, v193);
                v16 = v5;
                v17 = v13;
                v18 = 4;
                goto LABEL_79;
              case 5u:
                v194 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v194 - 8) + 16))(v5, v4, v194);
                v16 = v5;
                v17 = v13;
                v18 = 5;
                goto LABEL_79;
              case 6u:
                v195 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v195 - 8) + 16))(v5, v4, v195);
                v16 = v5;
                v17 = v13;
                v18 = 6;
                goto LABEL_79;
              case 8u:
                v196 = *v4;
                *v5 = *v4;
                v197 = v196;
                v16 = v5;
                v17 = v13;
                v18 = 8;
                goto LABEL_79;
              case 9u:
                v198 = *v4;
                *v5 = *v4;
                v199 = v198;
                v16 = v5;
                v17 = v13;
                v18 = 9;
LABEL_79:
                swift_storeEnumTagMultiPayload(v16, v17, v18);
                break;
              default:
                memcpy(v5, v4, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
                break;
            }
            v200 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v201 = v200[5];
            v202 = (char *)v5 + v201;
            v203 = (char *)v4 + v201;
            if (*(void **)((char *)v4 + v201 + 8))
            {
              v608 = v200;
              v635 = v5;
              v649 = a3;
              v629 = v4;
              *(_QWORD *)v202 = *(_QWORD *)v203;
              v204 = *((_QWORD *)v203 + 1);
              *((_QWORD *)v202 + 1) = v204;
              v205 = (void *)*((_QWORD *)v203 + 2);
              v206 = *((_QWORD *)v203 + 3);
              v208 = *((_QWORD *)v203 + 4);
              v207 = *((_QWORD *)v203 + 5);
              v209 = *((_QWORD *)v203 + 7);
              v611 = *((_QWORD *)v203 + 6);
              v210 = v203[64];
              swift_bridgeObjectRetain(v204);
              sub_10003E1F0(v205, v206, v208, v207, v611, v209, v210);
              *((_QWORD *)v202 + 2) = v205;
              *((_QWORD *)v202 + 3) = v206;
              *((_QWORD *)v202 + 4) = v208;
              *((_QWORD *)v202 + 5) = v207;
              *((_QWORD *)v202 + 6) = v611;
              *((_QWORD *)v202 + 7) = v209;
              v202[64] = v210;
              v202[65] = v203[65];
              v202[66] = v203[66];
              v202[67] = v203[67];
              v202[68] = v203[68];
              v211 = v203[120];
              if (v211 == 255)
              {
                v212 = *(_OWORD *)(v203 + 72);
                v213 = *(_OWORD *)(v203 + 88);
                v214 = *(_OWORD *)(v203 + 104);
                v202[120] = v203[120];
                *(_OWORD *)(v202 + 88) = v213;
                *(_OWORD *)(v202 + 104) = v214;
                *(_OWORD *)(v202 + 72) = v212;
              }
              else
              {
                v221 = v211 & 1;
                v222 = (void *)*((_QWORD *)v203 + 9);
                v223 = *((_QWORD *)v203 + 10);
                v225 = *((_QWORD *)v203 + 11);
                v224 = *((_QWORD *)v203 + 12);
                v226 = *((_QWORD *)v203 + 13);
                v612 = *((_QWORD *)v203 + 14);
                sub_10002B764(v222, v223, v225, v224, v226, v612, v211 & 1);
                *((_QWORD *)v202 + 9) = v222;
                *((_QWORD *)v202 + 10) = v223;
                *((_QWORD *)v202 + 11) = v225;
                *((_QWORD *)v202 + 12) = v224;
                *((_QWORD *)v202 + 13) = v226;
                *((_QWORD *)v202 + 14) = v612;
                v202[120] = v221;
              }
              v5 = v635;
              a3 = v649;
              v202[121] = v203[121];
              v4 = v629;
              v8 = v656;
              v200 = v608;
            }
            else
            {
              v215 = *(_OWORD *)v203;
              v216 = *((_OWORD *)v203 + 1);
              v217 = *((_OWORD *)v203 + 3);
              *((_OWORD *)v202 + 2) = *((_OWORD *)v203 + 2);
              *((_OWORD *)v202 + 3) = v217;
              *(_OWORD *)v202 = v215;
              *((_OWORD *)v202 + 1) = v216;
              v218 = *((_OWORD *)v203 + 4);
              v219 = *((_OWORD *)v203 + 5);
              v220 = *((_OWORD *)v203 + 6);
              *(_OWORD *)(v202 + 106) = *(_OWORD *)(v203 + 106);
              *((_OWORD *)v202 + 5) = v219;
              *((_OWORD *)v202 + 6) = v220;
              *((_OWORD *)v202 + 4) = v218;
            }
            *((_BYTE *)v5 + v200[6]) = *((_BYTE *)v4 + v200[6]);
            *((_BYTE *)v5 + v200[7]) = *((_BYTE *)v4 + v200[7]);
            *((_BYTE *)v5 + v200[8]) = *((_BYTE *)v4 + v200[8]);
            *((_BYTE *)v5 + v200[9]) = *((_BYTE *)v4 + v200[9]);
            *((_BYTE *)v5 + v200[10]) = *((_BYTE *)v4 + v200[10]);
            v227 = v200[11];
            v228 = *(void **)((char *)v4 + v227);
            *(_QWORD *)((char *)v5 + v227) = v228;
            v229 = v228;
            v60 = v5;
            v61 = v8;
            v62 = 0;
            goto LABEL_168;
          case 1u:
            v25 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v658 = v8;
            v624 = v9;
            switch(swift_getEnumCaseMultiPayload(v4, v25))
            {
              case 1u:
                v26 = *v4;
                *v5 = *v4;
                v27 = v26;
                v28 = v5;
                v29 = v25;
                v30 = 1;
                goto LABEL_111;
              case 2u:
                v269 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v269 - 8) + 16))(v5, v4, v269);
                v28 = v5;
                v29 = v25;
                v30 = 2;
                goto LABEL_111;
              case 3u:
                v270 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v270 - 8) + 16))(v5, v4, v270);
                v28 = v5;
                v29 = v25;
                v30 = 3;
                goto LABEL_111;
              case 4u:
                v271 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v271 - 8) + 16))(v5, v4, v271);
                v28 = v5;
                v29 = v25;
                v30 = 4;
                goto LABEL_111;
              case 5u:
                v272 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v272 - 8) + 16))(v5, v4, v272);
                v28 = v5;
                v29 = v25;
                v30 = 5;
                goto LABEL_111;
              case 6u:
                v273 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v273 - 8) + 16))(v5, v4, v273);
                v28 = v5;
                v29 = v25;
                v30 = 6;
                goto LABEL_111;
              case 8u:
                v274 = *v4;
                *v5 = *v4;
                v275 = v274;
                v28 = v5;
                v29 = v25;
                v30 = 8;
                goto LABEL_111;
              case 9u:
                v276 = *v4;
                *v5 = *v4;
                v277 = v276;
                v28 = v5;
                v29 = v25;
                v30 = 9;
LABEL_111:
                swift_storeEnumTagMultiPayload(v28, v29, v30);
                break;
              default:
                memcpy(v5, v4, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
                break;
            }
            v278 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v279 = v278[5];
            v280 = (char *)v5 + v279;
            v281 = (char *)v4 + v279;
            if (*(void **)((char *)v4 + v279 + 8))
            {
              v637 = v5;
              v651 = a3;
              v631 = v4;
              *(_QWORD *)v280 = *(_QWORD *)v281;
              v282 = *((_QWORD *)v281 + 1);
              *((_QWORD *)v280 + 1) = v282;
              v283 = (void *)*((_QWORD *)v281 + 2);
              v284 = *((_QWORD *)v281 + 3);
              v286 = *((_QWORD *)v281 + 4);
              v285 = *((_QWORD *)v281 + 5);
              v288 = *((_QWORD *)v281 + 6);
              v287 = *((_QWORD *)v281 + 7);
              v615 = v281[64];
              swift_bridgeObjectRetain(v282);
              sub_10003E1F0(v283, v284, v286, v285, v288, v287, v615);
              *((_QWORD *)v280 + 2) = v283;
              *((_QWORD *)v280 + 3) = v284;
              *((_QWORD *)v280 + 4) = v286;
              *((_QWORD *)v280 + 5) = v285;
              *((_QWORD *)v280 + 6) = v288;
              *((_QWORD *)v280 + 7) = v287;
              v280[64] = v615;
              v280[65] = v281[65];
              v280[66] = v281[66];
              v280[67] = v281[67];
              v280[68] = v281[68];
              v289 = v281[120];
              if (v289 == 255)
              {
                v290 = *(_OWORD *)(v281 + 72);
                v291 = *(_OWORD *)(v281 + 88);
                v292 = *(_OWORD *)(v281 + 104);
                v280[120] = v281[120];
                *(_OWORD *)(v280 + 88) = v291;
                *(_OWORD *)(v280 + 104) = v292;
                *(_OWORD *)(v280 + 72) = v290;
              }
              else
              {
                v299 = v289 & 1;
                v300 = (void *)*((_QWORD *)v281 + 9);
                v301 = *((_QWORD *)v281 + 10);
                v303 = *((_QWORD *)v281 + 11);
                v302 = *((_QWORD *)v281 + 12);
                v304 = *((_QWORD *)v281 + 13);
                v616 = *((_QWORD *)v281 + 14);
                sub_10002B764(v300, v301, v303, v302, v304, v616, v289 & 1);
                *((_QWORD *)v280 + 9) = v300;
                *((_QWORD *)v280 + 10) = v301;
                *((_QWORD *)v280 + 11) = v303;
                *((_QWORD *)v280 + 12) = v302;
                *((_QWORD *)v280 + 13) = v304;
                *((_QWORD *)v280 + 14) = v616;
                v280[120] = v299;
              }
              v5 = v637;
              a3 = v651;
              v9 = v624;
              v4 = v631;
              v280[121] = v281[121];
              v8 = v658;
            }
            else
            {
              v293 = *(_OWORD *)v281;
              v294 = *((_OWORD *)v281 + 1);
              v295 = *((_OWORD *)v281 + 3);
              *((_OWORD *)v280 + 2) = *((_OWORD *)v281 + 2);
              *((_OWORD *)v280 + 3) = v295;
              *(_OWORD *)v280 = v293;
              *((_OWORD *)v280 + 1) = v294;
              v296 = *((_OWORD *)v281 + 4);
              v297 = *((_OWORD *)v281 + 5);
              v298 = *((_OWORD *)v281 + 6);
              *(_OWORD *)(v280 + 106) = *(_OWORD *)(v281 + 106);
              *((_OWORD *)v280 + 5) = v297;
              *((_OWORD *)v280 + 6) = v298;
              *((_OWORD *)v280 + 4) = v296;
            }
            *((_BYTE *)v5 + v278[6]) = *((_BYTE *)v4 + v278[6]);
            *((_BYTE *)v5 + v278[7]) = *((_BYTE *)v4 + v278[7]);
            *((_BYTE *)v5 + v278[8]) = *((_BYTE *)v4 + v278[8]);
            *((_BYTE *)v5 + v278[9]) = *((_BYTE *)v4 + v278[9]);
            *((_BYTE *)v5 + v278[10]) = *((_BYTE *)v4 + v278[10]);
            v305 = v278[11];
            v306 = *(void **)((char *)v4 + v305);
            *(_QWORD *)((char *)v5 + v305) = v306;
            v307 = v306;
            v60 = v5;
            v61 = v8;
            v62 = 1;
            goto LABEL_168;
          case 2u:
            v641 = a3;
            v659 = v8;
            v31 = *v4;
            *v5 = *v4;
            v32 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v33 = (void **)((char *)v5 + v32);
            v34 = (void **)((char *)v4 + v32);
            v35 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v36 = *(_QWORD *)(v35 - 8);
            v37 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v36 + 48);
            v38 = v31;
            if (v37(v34, 1, v35))
            {
              v39 = sub_10002A750(&qword_100644980);
              memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
              a3 = v641;
              v8 = v659;
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v34, v35))
              {
                case 1u:
                  v125 = *v34;
                  *v33 = *v34;
                  v126 = v125;
                  v127 = v33;
                  v128 = v35;
                  v129 = 1;
                  goto LABEL_143;
                case 2u:
                  v349 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v349 - 8) + 16))(v33, v34, v349);
                  v127 = v33;
                  v128 = v35;
                  v129 = 2;
                  goto LABEL_143;
                case 3u:
                  v350 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v350 - 8) + 16))(v33, v34, v350);
                  v127 = v33;
                  v128 = v35;
                  v129 = 3;
                  goto LABEL_143;
                case 4u:
                  v351 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v351 - 8) + 16))(v33, v34, v351);
                  v127 = v33;
                  v128 = v35;
                  v129 = 4;
                  goto LABEL_143;
                case 5u:
                  v352 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v352 - 8) + 16))(v33, v34, v352);
                  v127 = v33;
                  v128 = v35;
                  v129 = 5;
                  goto LABEL_143;
                case 6u:
                  v353 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v353 - 8) + 16))(v33, v34, v353);
                  v127 = v33;
                  v128 = v35;
                  v129 = 6;
                  goto LABEL_143;
                case 8u:
                  v354 = *v34;
                  *v33 = *v34;
                  v355 = v354;
                  v127 = v33;
                  v128 = v35;
                  v129 = 8;
                  goto LABEL_143;
                case 9u:
                  v356 = *v34;
                  *v33 = *v34;
                  v357 = v356;
                  v127 = v33;
                  v128 = v35;
                  v129 = 9;
LABEL_143:
                  swift_storeEnumTagMultiPayload(v127, v128, v129);
                  break;
                default:
                  memcpy(v33, v34, *(_QWORD *)(v36 + 64));
                  break;
              }
              v8 = v659;
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
              a3 = v641;
            }
            v60 = v5;
            v61 = v8;
            v62 = 2;
            goto LABEL_168;
          case 3u:
            v642 = a3;
            v660 = v8;
            v40 = *v4;
            *v5 = *v4;
            v41 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v42 = (void **)((char *)v5 + v41);
            v43 = (void **)((char *)v4 + v41);
            v44 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v45 = *(_QWORD *)(v44 - 8);
            v46 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v45 + 48);
            v47 = v40;
            if (v46(v43, 1, v44))
            {
              v48 = sub_10002A750(&qword_100644980);
              memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
              a3 = v642;
              v8 = v660;
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v43, v44))
              {
                case 1u:
                  v130 = *v43;
                  *v42 = *v43;
                  v131 = v130;
                  v132 = v42;
                  v133 = v44;
                  v134 = 1;
                  goto LABEL_154;
                case 2u:
                  v358 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v358 - 8) + 16))(v42, v43, v358);
                  v132 = v42;
                  v133 = v44;
                  v134 = 2;
                  goto LABEL_154;
                case 3u:
                  v359 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v359 - 8) + 16))(v42, v43, v359);
                  v132 = v42;
                  v133 = v44;
                  v134 = 3;
                  goto LABEL_154;
                case 4u:
                  v360 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v360 - 8) + 16))(v42, v43, v360);
                  v132 = v42;
                  v133 = v44;
                  v134 = 4;
                  goto LABEL_154;
                case 5u:
                  v361 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v361 - 8) + 16))(v42, v43, v361);
                  v132 = v42;
                  v133 = v44;
                  v134 = 5;
                  goto LABEL_154;
                case 6u:
                  v362 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v362 - 8) + 16))(v42, v43, v362);
                  v132 = v42;
                  v133 = v44;
                  v134 = 6;
                  goto LABEL_154;
                case 8u:
                  v363 = *v43;
                  *v42 = *v43;
                  v364 = v363;
                  v132 = v42;
                  v133 = v44;
                  v134 = 8;
                  goto LABEL_154;
                case 9u:
                  v365 = *v43;
                  *v42 = *v43;
                  v366 = v365;
                  v132 = v42;
                  v133 = v44;
                  v134 = 9;
LABEL_154:
                  swift_storeEnumTagMultiPayload(v132, v133, v134);
                  break;
                default:
                  memcpy(v42, v43, *(_QWORD *)(v45 + 64));
                  break;
              }
              v8 = v660;
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
              a3 = v642;
            }
            v60 = v5;
            v61 = v8;
            v62 = 3;
            goto LABEL_168;
          case 4u:
            v643 = a3;
            v661 = v8;
            v49 = *v4;
            *v5 = *v4;
            v50 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v51 = (void **)((char *)v5 + v50);
            v52 = (void **)((char *)v4 + v50);
            v53 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v54 = *(_QWORD *)(v53 - 8);
            v55 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v54 + 48);
            v56 = v49;
            if (v55(v52, 1, v53))
            {
              v57 = sub_10002A750(&qword_100644980);
              memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
              a3 = v643;
              v8 = v661;
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v52, v53))
              {
                case 1u:
                  v135 = *v52;
                  *v51 = *v52;
                  v136 = v135;
                  v137 = v51;
                  v138 = v53;
                  v139 = 1;
                  goto LABEL_165;
                case 2u:
                  v367 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v367 - 8) + 16))(v51, v52, v367);
                  v137 = v51;
                  v138 = v53;
                  v139 = 2;
                  goto LABEL_165;
                case 3u:
                  v368 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v368 - 8) + 16))(v51, v52, v368);
                  v137 = v51;
                  v138 = v53;
                  v139 = 3;
                  goto LABEL_165;
                case 4u:
                  v369 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v369 - 8) + 16))(v51, v52, v369);
                  v137 = v51;
                  v138 = v53;
                  v139 = 4;
                  goto LABEL_165;
                case 5u:
                  v370 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v370 - 8) + 16))(v51, v52, v370);
                  v137 = v51;
                  v138 = v53;
                  v139 = 5;
                  goto LABEL_165;
                case 6u:
                  v371 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v371 - 8) + 16))(v51, v52, v371);
                  v137 = v51;
                  v138 = v53;
                  v139 = 6;
                  goto LABEL_165;
                case 8u:
                  v372 = *v52;
                  *v51 = *v52;
                  v373 = v372;
                  v137 = v51;
                  v138 = v53;
                  v139 = 8;
                  goto LABEL_165;
                case 9u:
                  v374 = *v52;
                  *v51 = *v52;
                  v375 = v374;
                  v137 = v51;
                  v138 = v53;
                  v139 = 9;
LABEL_165:
                  swift_storeEnumTagMultiPayload(v137, v138, v139);
                  break;
                default:
                  memcpy(v51, v52, *(_QWORD *)(v54 + 64));
                  break;
              }
              v8 = v661;
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
              a3 = v643;
            }
            v60 = v5;
            v61 = v8;
            v62 = 4;
            goto LABEL_168;
          case 5u:
            *v5 = *v4;
            *((_BYTE *)v5 + 8) = *((_BYTE *)v4 + 8);
            *((_BYTE *)v5 + 9) = *((_BYTE *)v4 + 9);
            *((_BYTE *)v5 + 10) = *((_BYTE *)v4 + 10);
            v58 = v4[2];
            v5[2] = v58;
            v59 = v58;
            v60 = v5;
            v61 = v8;
            v62 = 5;
            goto LABEL_168;
          case 6u:
            v115 = *v4;
            *v5 = *v4;
            v116 = v115;
            v60 = v5;
            v61 = v8;
            v62 = 6;
            goto LABEL_168;
          case 7u:
            v63 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
            v64 = *(_QWORD *)(v63 - 8);
            if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v64 + 48))(v4, 1, v63))
            {
              v65 = sub_10002A750(&qword_100644600);
              memcpy(v5, v4, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
            }
            else
            {
              v140 = *v4;
              *v5 = *v4;
              v141 = *(int *)(v63 + 20);
              v647 = a3;
              v142 = (char *)v5 + v141;
              v609 = (char *)v4 + v141;
              v665 = v8;
              v143 = v5;
              v144 = type metadata accessor for REMHashtagLabelSpecifier(0);
              v145 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v144 - 8) + 16);
              v146 = swift_bridgeObjectRetain(v140);
              v147 = v142;
              v148 = v144;
              v5 = v143;
              a3 = v647;
              v8 = v665;
              v145(v147, v609, v148, v146);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v5, 0, 1, v63);
            }
            v149 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
            v150 = (_QWORD *)((char *)v5 + v149);
            v151 = (void **)((char *)v4 + v149);
            if (v151[1])
            {
              *v150 = *v151;
              v152 = v151[1];
              v150[1] = v152;
              v153 = (void *)v151[2];
              v150[2] = v153;
              swift_bridgeObjectRetain(v152);
              v154 = v153;
            }
            else
            {
              v185 = *(_OWORD *)v151;
              v150[2] = v151[2];
              *(_OWORD *)v150 = v185;
            }
            v60 = v5;
            v61 = v8;
            v62 = 7;
            goto LABEL_168;
          case 8u:
            v117 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
            v118 = *(_QWORD *)(v117 - 8);
            if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v118 + 48))(v4, 1, v117))
            {
              v119 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
              memcpy(v5, v4, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
            }
            else
            {
              v187 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v5, v4, v187);
              *((_BYTE *)v5 + *(int *)(v117 + 20)) = *((_BYTE *)v4 + *(int *)(v117 + 20));
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v5, 0, 1, v117);
            }
            v188 = type metadata accessor for TTRTemplatePublicLinkData(0);
            *(_QWORD *)((char *)v5 + *(int *)(v188 + 20)) = *(void **)((char *)v4 + *(int *)(v188 + 20));
            v60 = v5;
            v61 = v8;
            v62 = 8;
            goto LABEL_168;
          case 9u:
            *(_BYTE *)v5 = *(_BYTE *)v4;
            v66 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
            v67 = (char *)v5 + v66;
            v68 = (char *)v4 + v66;
            v69 = type metadata accessor for AnyTip(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v67, v68, v69);
            v60 = v5;
            v61 = v8;
            v62 = 9;
LABEL_168:
            swift_storeEnumTagMultiPayload(v60, v61, v62);
            break;
          default:
            memcpy(v5, v4, *(_QWORD *)(v9 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
      }
      v376 = sub_10002A750(&qword_1006588F8);
      *(_QWORD *)((char *)v5 + *(int *)(v376 + 48)) = *(void **)((char *)v4 + *(int *)(v376 + 48));
      v377 = 1;
    }
    else
    {
      if (v10)
      {
        v12 = sub_10002A750((uint64_t *)&unk_100640EB0);
        memcpy(v5, v4, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v4, v8))
        {
          case 0u:
            v19 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v657 = v8;
            v623 = v9;
            switch(swift_getEnumCaseMultiPayload(v4, v19))
            {
              case 1u:
                v20 = *v4;
                *v5 = *v4;
                v21 = v20;
                v22 = v5;
                v23 = v19;
                v24 = 1;
                goto LABEL_95;
              case 2u:
                v230 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v230 - 8) + 16))(v5, v4, v230);
                v22 = v5;
                v23 = v19;
                v24 = 2;
                goto LABEL_95;
              case 3u:
                v231 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v231 - 8) + 16))(v5, v4, v231);
                v22 = v5;
                v23 = v19;
                v24 = 3;
                goto LABEL_95;
              case 4u:
                v232 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v232 - 8) + 16))(v5, v4, v232);
                v22 = v5;
                v23 = v19;
                v24 = 4;
                goto LABEL_95;
              case 5u:
                v233 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v233 - 8) + 16))(v5, v4, v233);
                v22 = v5;
                v23 = v19;
                v24 = 5;
                goto LABEL_95;
              case 6u:
                v234 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v234 - 8) + 16))(v5, v4, v234);
                v22 = v5;
                v23 = v19;
                v24 = 6;
                goto LABEL_95;
              case 8u:
                v235 = *v4;
                *v5 = *v4;
                v236 = v235;
                v22 = v5;
                v23 = v19;
                v24 = 8;
                goto LABEL_95;
              case 9u:
                v237 = *v4;
                *v5 = *v4;
                v238 = v237;
                v22 = v5;
                v23 = v19;
                v24 = 9;
LABEL_95:
                swift_storeEnumTagMultiPayload(v22, v23, v24);
                break;
              default:
                memcpy(v5, v4, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
                break;
            }
            v239 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v240 = v239[5];
            v241 = (char *)v5 + v240;
            v242 = (char *)v4 + v240;
            if (*(void **)((char *)v4 + v240 + 8))
            {
              v636 = v5;
              v650 = a3;
              v630 = v4;
              *(_QWORD *)v241 = *(_QWORD *)v242;
              v243 = *((_QWORD *)v242 + 1);
              *((_QWORD *)v241 + 1) = v243;
              v244 = (void *)*((_QWORD *)v242 + 2);
              v245 = *((_QWORD *)v242 + 3);
              v247 = *((_QWORD *)v242 + 4);
              v246 = *((_QWORD *)v242 + 5);
              v249 = *((_QWORD *)v242 + 6);
              v248 = *((_QWORD *)v242 + 7);
              v613 = v242[64];
              swift_bridgeObjectRetain(v243);
              sub_10003E1F0(v244, v245, v247, v246, v249, v248, v613);
              *((_QWORD *)v241 + 2) = v244;
              *((_QWORD *)v241 + 3) = v245;
              *((_QWORD *)v241 + 4) = v247;
              *((_QWORD *)v241 + 5) = v246;
              *((_QWORD *)v241 + 6) = v249;
              *((_QWORD *)v241 + 7) = v248;
              v241[64] = v613;
              v241[65] = v242[65];
              v241[66] = v242[66];
              v241[67] = v242[67];
              v241[68] = v242[68];
              v250 = v242[120];
              if (v250 == 255)
              {
                v251 = *(_OWORD *)(v242 + 72);
                v252 = *(_OWORD *)(v242 + 88);
                v253 = *(_OWORD *)(v242 + 104);
                v241[120] = v242[120];
                *(_OWORD *)(v241 + 88) = v252;
                *(_OWORD *)(v241 + 104) = v253;
                *(_OWORD *)(v241 + 72) = v251;
              }
              else
              {
                v260 = v250 & 1;
                v261 = (void *)*((_QWORD *)v242 + 9);
                v262 = *((_QWORD *)v242 + 10);
                v264 = *((_QWORD *)v242 + 11);
                v263 = *((_QWORD *)v242 + 12);
                v265 = *((_QWORD *)v242 + 13);
                v614 = *((_QWORD *)v242 + 14);
                sub_10002B764(v261, v262, v264, v263, v265, v614, v250 & 1);
                *((_QWORD *)v241 + 9) = v261;
                *((_QWORD *)v241 + 10) = v262;
                *((_QWORD *)v241 + 11) = v264;
                *((_QWORD *)v241 + 12) = v263;
                *((_QWORD *)v241 + 13) = v265;
                *((_QWORD *)v241 + 14) = v614;
                v241[120] = v260;
              }
              v5 = v636;
              a3 = v650;
              v9 = v623;
              v4 = v630;
              v241[121] = v242[121];
              v8 = v657;
            }
            else
            {
              v254 = *(_OWORD *)v242;
              v255 = *((_OWORD *)v242 + 1);
              v256 = *((_OWORD *)v242 + 3);
              *((_OWORD *)v241 + 2) = *((_OWORD *)v242 + 2);
              *((_OWORD *)v241 + 3) = v256;
              *(_OWORD *)v241 = v254;
              *((_OWORD *)v241 + 1) = v255;
              v257 = *((_OWORD *)v242 + 4);
              v258 = *((_OWORD *)v242 + 5);
              v259 = *((_OWORD *)v242 + 6);
              *(_OWORD *)(v241 + 106) = *(_OWORD *)(v242 + 106);
              *((_OWORD *)v241 + 5) = v258;
              *((_OWORD *)v241 + 6) = v259;
              *((_OWORD *)v241 + 4) = v257;
            }
            *((_BYTE *)v5 + v239[6]) = *((_BYTE *)v4 + v239[6]);
            *((_BYTE *)v5 + v239[7]) = *((_BYTE *)v4 + v239[7]);
            *((_BYTE *)v5 + v239[8]) = *((_BYTE *)v4 + v239[8]);
            *((_BYTE *)v5 + v239[9]) = *((_BYTE *)v4 + v239[9]);
            *((_BYTE *)v5 + v239[10]) = *((_BYTE *)v4 + v239[10]);
            v266 = v239[11];
            v267 = *(void **)((char *)v4 + v266);
            *(_QWORD *)((char *)v5 + v266) = v267;
            v268 = v267;
            v105 = v5;
            v106 = v8;
            v107 = 0;
            goto LABEL_204;
          case 1u:
            v70 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v617 = v6;
            v625 = v9;
            switch(swift_getEnumCaseMultiPayload(v4, v70))
            {
              case 1u:
                v71 = *v4;
                *v5 = *v4;
                v72 = v71;
                v73 = v5;
                v74 = v70;
                v75 = 1;
                goto LABEL_127;
              case 2u:
                v308 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v308 - 8) + 16))(v5, v4, v308);
                v73 = v5;
                v74 = v70;
                v75 = 2;
                goto LABEL_127;
              case 3u:
                v309 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v309 - 8) + 16))(v5, v4, v309);
                v73 = v5;
                v74 = v70;
                v75 = 3;
                goto LABEL_127;
              case 4u:
                v310 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v310 - 8) + 16))(v5, v4, v310);
                v73 = v5;
                v74 = v70;
                v75 = 4;
                goto LABEL_127;
              case 5u:
                v311 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v311 - 8) + 16))(v5, v4, v311);
                v73 = v5;
                v74 = v70;
                v75 = 5;
                goto LABEL_127;
              case 6u:
                v312 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v312 - 8) + 16))(v5, v4, v312);
                v73 = v5;
                v74 = v70;
                v75 = 6;
                goto LABEL_127;
              case 8u:
                v313 = *v4;
                *v5 = *v4;
                v314 = v313;
                v73 = v5;
                v74 = v70;
                v75 = 8;
                goto LABEL_127;
              case 9u:
                v315 = *v4;
                *v5 = *v4;
                v316 = v315;
                v73 = v5;
                v74 = v70;
                v75 = 9;
LABEL_127:
                swift_storeEnumTagMultiPayload(v73, v74, v75);
                break;
              default:
                memcpy(v5, v4, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
                break;
            }
            v317 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v318 = v317[5];
            v319 = (char *)v5 + v318;
            v320 = (char *)v4 + v318;
            if (*(void **)((char *)v4 + v318 + 8))
            {
              v652 = a3;
              v667 = v8;
              v632 = v4;
              v638 = v5;
              *(_QWORD *)v319 = *(_QWORD *)v320;
              v321 = *((_QWORD *)v320 + 1);
              *((_QWORD *)v319 + 1) = v321;
              v322 = (void *)*((_QWORD *)v320 + 2);
              v323 = *((_QWORD *)v320 + 3);
              v325 = *((_QWORD *)v320 + 4);
              v324 = *((_QWORD *)v320 + 5);
              v327 = *((_QWORD *)v320 + 6);
              v326 = *((_QWORD *)v320 + 7);
              v328 = v320[64];
              swift_bridgeObjectRetain(v321);
              sub_10003E1F0(v322, v323, v325, v324, v327, v326, v328);
              *((_QWORD *)v319 + 2) = v322;
              *((_QWORD *)v319 + 3) = v323;
              *((_QWORD *)v319 + 4) = v325;
              *((_QWORD *)v319 + 5) = v324;
              *((_QWORD *)v319 + 6) = v327;
              *((_QWORD *)v319 + 7) = v326;
              v319[64] = v328;
              v319[65] = v320[65];
              v319[66] = v320[66];
              v319[67] = v320[67];
              v319[68] = v320[68];
              v329 = v320[120];
              if (v329 == 255)
              {
                v330 = *(_OWORD *)(v320 + 72);
                v331 = *(_OWORD *)(v320 + 88);
                v332 = *(_OWORD *)(v320 + 104);
                v319[120] = v320[120];
                *(_OWORD *)(v319 + 88) = v331;
                *(_OWORD *)(v319 + 104) = v332;
                *(_OWORD *)(v319 + 72) = v330;
              }
              else
              {
                v339 = v329 & 1;
                v340 = (void *)*((_QWORD *)v320 + 9);
                v341 = *((_QWORD *)v320 + 10);
                v343 = *((_QWORD *)v320 + 11);
                v342 = *((_QWORD *)v320 + 12);
                v344 = *((_QWORD *)v320 + 13);
                v345 = *((_QWORD *)v320 + 14);
                sub_10002B764(v340, v341, v343, v342, v344, v345, v329 & 1);
                *((_QWORD *)v319 + 9) = v340;
                *((_QWORD *)v319 + 10) = v341;
                *((_QWORD *)v319 + 11) = v343;
                *((_QWORD *)v319 + 12) = v342;
                *((_QWORD *)v319 + 13) = v344;
                *((_QWORD *)v319 + 14) = v345;
                v319[120] = v339;
              }
              v5 = v638;
              a3 = v652;
              v6 = v617;
              v9 = v625;
              v319[121] = v320[121];
              v4 = v632;
              v8 = v667;
            }
            else
            {
              v333 = *(_OWORD *)v320;
              v334 = *((_OWORD *)v320 + 1);
              v335 = *((_OWORD *)v320 + 3);
              *((_OWORD *)v319 + 2) = *((_OWORD *)v320 + 2);
              *((_OWORD *)v319 + 3) = v335;
              *(_OWORD *)v319 = v333;
              *((_OWORD *)v319 + 1) = v334;
              v336 = *((_OWORD *)v320 + 4);
              v337 = *((_OWORD *)v320 + 5);
              v338 = *((_OWORD *)v320 + 6);
              *(_OWORD *)(v319 + 106) = *(_OWORD *)(v320 + 106);
              *((_OWORD *)v319 + 5) = v337;
              *((_OWORD *)v319 + 6) = v338;
              *((_OWORD *)v319 + 4) = v336;
            }
            *((_BYTE *)v5 + v317[6]) = *((_BYTE *)v4 + v317[6]);
            *((_BYTE *)v5 + v317[7]) = *((_BYTE *)v4 + v317[7]);
            *((_BYTE *)v5 + v317[8]) = *((_BYTE *)v4 + v317[8]);
            *((_BYTE *)v5 + v317[9]) = *((_BYTE *)v4 + v317[9]);
            *((_BYTE *)v5 + v317[10]) = *((_BYTE *)v4 + v317[10]);
            v346 = v317[11];
            v347 = *(void **)((char *)v4 + v346);
            *(_QWORD *)((char *)v5 + v346) = v347;
            v348 = v347;
            v105 = v5;
            v106 = v8;
            v107 = 1;
            goto LABEL_204;
          case 2u:
            v644 = a3;
            v662 = v8;
            v76 = *v4;
            *v5 = *v4;
            v77 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v78 = (void **)((char *)v5 + v77);
            v79 = (void **)((char *)v4 + v77);
            v80 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v81 = *(_QWORD *)(v80 - 8);
            v82 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v81 + 48);
            v83 = v76;
            if (v82(v79, 1, v80))
            {
              v84 = sub_10002A750(&qword_100644980);
              memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
              a3 = v644;
              v8 = v662;
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v79, v80))
              {
                case 1u:
                  v155 = *v79;
                  *v78 = *v79;
                  v156 = v155;
                  v157 = v78;
                  v158 = v80;
                  v159 = 1;
                  goto LABEL_179;
                case 2u:
                  v378 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v378 - 8) + 16))(v78, v79, v378);
                  v157 = v78;
                  v158 = v80;
                  v159 = 2;
                  goto LABEL_179;
                case 3u:
                  v379 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v379 - 8) + 16))(v78, v79, v379);
                  v157 = v78;
                  v158 = v80;
                  v159 = 3;
                  goto LABEL_179;
                case 4u:
                  v380 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v380 - 8) + 16))(v78, v79, v380);
                  v157 = v78;
                  v158 = v80;
                  v159 = 4;
                  goto LABEL_179;
                case 5u:
                  v381 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v381 - 8) + 16))(v78, v79, v381);
                  v157 = v78;
                  v158 = v80;
                  v159 = 5;
                  goto LABEL_179;
                case 6u:
                  v382 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v382 - 8) + 16))(v78, v79, v382);
                  v157 = v78;
                  v158 = v80;
                  v159 = 6;
                  goto LABEL_179;
                case 8u:
                  v383 = *v79;
                  *v78 = *v79;
                  v384 = v383;
                  v157 = v78;
                  v158 = v80;
                  v159 = 8;
                  goto LABEL_179;
                case 9u:
                  v385 = *v79;
                  *v78 = *v79;
                  v386 = v385;
                  v157 = v78;
                  v158 = v80;
                  v159 = 9;
LABEL_179:
                  swift_storeEnumTagMultiPayload(v157, v158, v159);
                  break;
                default:
                  memcpy(v78, v79, *(_QWORD *)(v81 + 64));
                  break;
              }
              v8 = v662;
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
              a3 = v644;
            }
            v105 = v5;
            v106 = v8;
            v107 = 2;
            goto LABEL_204;
          case 3u:
            v645 = a3;
            v663 = v8;
            v85 = *v4;
            *v5 = *v4;
            v86 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v87 = (void **)((char *)v5 + v86);
            v88 = (void **)((char *)v4 + v86);
            v89 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v90 = *(_QWORD *)(v89 - 8);
            v91 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v90 + 48);
            v92 = v85;
            if (v91(v88, 1, v89))
            {
              v93 = sub_10002A750(&qword_100644980);
              memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
              a3 = v645;
              v8 = v663;
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v88, v89))
              {
                case 1u:
                  v160 = *v88;
                  *v87 = *v88;
                  v161 = v160;
                  v162 = v87;
                  v163 = v89;
                  v164 = 1;
                  goto LABEL_190;
                case 2u:
                  v387 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v387 - 8) + 16))(v87, v88, v387);
                  v162 = v87;
                  v163 = v89;
                  v164 = 2;
                  goto LABEL_190;
                case 3u:
                  v388 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v388 - 8) + 16))(v87, v88, v388);
                  v162 = v87;
                  v163 = v89;
                  v164 = 3;
                  goto LABEL_190;
                case 4u:
                  v389 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v389 - 8) + 16))(v87, v88, v389);
                  v162 = v87;
                  v163 = v89;
                  v164 = 4;
                  goto LABEL_190;
                case 5u:
                  v390 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v390 - 8) + 16))(v87, v88, v390);
                  v162 = v87;
                  v163 = v89;
                  v164 = 5;
                  goto LABEL_190;
                case 6u:
                  v391 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v391 - 8) + 16))(v87, v88, v391);
                  v162 = v87;
                  v163 = v89;
                  v164 = 6;
                  goto LABEL_190;
                case 8u:
                  v392 = *v88;
                  *v87 = *v88;
                  v393 = v392;
                  v162 = v87;
                  v163 = v89;
                  v164 = 8;
                  goto LABEL_190;
                case 9u:
                  v394 = *v88;
                  *v87 = *v88;
                  v395 = v394;
                  v162 = v87;
                  v163 = v89;
                  v164 = 9;
LABEL_190:
                  swift_storeEnumTagMultiPayload(v162, v163, v164);
                  break;
                default:
                  memcpy(v87, v88, *(_QWORD *)(v90 + 64));
                  break;
              }
              v8 = v663;
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
              a3 = v645;
            }
            v105 = v5;
            v106 = v8;
            v107 = 3;
            goto LABEL_204;
          case 4u:
            v646 = a3;
            v664 = v8;
            v94 = *v4;
            *v5 = *v4;
            v95 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v96 = (void **)((char *)v5 + v95);
            v97 = (void **)((char *)v4 + v95);
            v98 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v99 = *(_QWORD *)(v98 - 8);
            v100 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v99 + 48);
            v101 = v94;
            if (v100(v97, 1, v98))
            {
              v102 = sub_10002A750(&qword_100644980);
              memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
              a3 = v646;
              v8 = v664;
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v97, v98))
              {
                case 1u:
                  v165 = *v97;
                  *v96 = *v97;
                  v166 = v165;
                  v167 = v96;
                  v168 = v98;
                  v169 = 1;
                  goto LABEL_201;
                case 2u:
                  v396 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v396 - 8) + 16))(v96, v97, v396);
                  v167 = v96;
                  v168 = v98;
                  v169 = 2;
                  goto LABEL_201;
                case 3u:
                  v397 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v397 - 8) + 16))(v96, v97, v397);
                  v167 = v96;
                  v168 = v98;
                  v169 = 3;
                  goto LABEL_201;
                case 4u:
                  v398 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v398 - 8) + 16))(v96, v97, v398);
                  v167 = v96;
                  v168 = v98;
                  v169 = 4;
                  goto LABEL_201;
                case 5u:
                  v399 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v399 - 8) + 16))(v96, v97, v399);
                  v167 = v96;
                  v168 = v98;
                  v169 = 5;
                  goto LABEL_201;
                case 6u:
                  v400 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v400 - 8) + 16))(v96, v97, v400);
                  v167 = v96;
                  v168 = v98;
                  v169 = 6;
                  goto LABEL_201;
                case 8u:
                  v401 = *v97;
                  *v96 = *v97;
                  v402 = v401;
                  v167 = v96;
                  v168 = v98;
                  v169 = 8;
                  goto LABEL_201;
                case 9u:
                  v403 = *v97;
                  *v96 = *v97;
                  v404 = v403;
                  v167 = v96;
                  v168 = v98;
                  v169 = 9;
LABEL_201:
                  swift_storeEnumTagMultiPayload(v167, v168, v169);
                  break;
                default:
                  memcpy(v96, v97, *(_QWORD *)(v99 + 64));
                  break;
              }
              v8 = v664;
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
              a3 = v646;
            }
            v105 = v5;
            v106 = v8;
            v107 = 4;
            goto LABEL_204;
          case 5u:
            *v5 = *v4;
            *((_BYTE *)v5 + 8) = *((_BYTE *)v4 + 8);
            *((_BYTE *)v5 + 9) = *((_BYTE *)v4 + 9);
            *((_BYTE *)v5 + 10) = *((_BYTE *)v4 + 10);
            v103 = v4[2];
            v5[2] = v103;
            v104 = v103;
            v105 = v5;
            v106 = v8;
            v107 = 5;
            goto LABEL_204;
          case 6u:
            v120 = *v4;
            *v5 = *v4;
            v121 = v120;
            v105 = v5;
            v106 = v8;
            v107 = 6;
            goto LABEL_204;
          case 7u:
            v108 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
            v109 = *(_QWORD *)(v108 - 8);
            if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v109 + 48))(v4, 1, v108))
            {
              v110 = sub_10002A750(&qword_100644600);
              memcpy(v5, v4, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
            }
            else
            {
              v170 = *v4;
              *v5 = *v4;
              v171 = *(int *)(v108 + 20);
              v648 = a3;
              v172 = (char *)v5 + v171;
              v610 = (char *)v4 + v171;
              v666 = v8;
              v173 = v5;
              v174 = type metadata accessor for REMHashtagLabelSpecifier(0);
              v175 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v174 - 8) + 16);
              v176 = swift_bridgeObjectRetain(v170);
              v177 = v172;
              v178 = v174;
              v5 = v173;
              a3 = v648;
              v8 = v666;
              v175(v177, v610, v178, v176);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v5, 0, 1, v108);
            }
            v179 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
            v180 = (_QWORD *)((char *)v5 + v179);
            v181 = (void **)((char *)v4 + v179);
            if (v181[1])
            {
              *v180 = *v181;
              v182 = v181[1];
              v180[1] = v182;
              v183 = (void *)v181[2];
              v180[2] = v183;
              swift_bridgeObjectRetain(v182);
              v184 = v183;
            }
            else
            {
              v186 = *(_OWORD *)v181;
              v180[2] = v181[2];
              *(_OWORD *)v180 = v186;
            }
            v105 = v5;
            v106 = v8;
            v107 = 7;
            goto LABEL_204;
          case 8u:
            v122 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
            v123 = *(_QWORD *)(v122 - 8);
            if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v123 + 48))(v4, 1, v122))
            {
              v124 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
              memcpy(v5, v4, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
            }
            else
            {
              v189 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v189 - 8) + 16))(v5, v4, v189);
              *((_BYTE *)v5 + *(int *)(v122 + 20)) = *((_BYTE *)v4 + *(int *)(v122 + 20));
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v5, 0, 1, v122);
            }
            v190 = type metadata accessor for TTRTemplatePublicLinkData(0);
            *(_QWORD *)((char *)v5 + *(int *)(v190 + 20)) = *(void **)((char *)v4 + *(int *)(v190 + 20));
            v105 = v5;
            v106 = v8;
            v107 = 8;
            goto LABEL_204;
          case 9u:
            *(_BYTE *)v5 = *(_BYTE *)v4;
            v111 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
            v112 = (char *)v5 + v111;
            v113 = (char *)v4 + v111;
            v114 = type metadata accessor for AnyTip(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 16))(v112, v113, v114);
            v105 = v5;
            v106 = v8;
            v107 = 9;
LABEL_204:
            swift_storeEnumTagMultiPayload(v105, v106, v107);
            break;
          default:
            memcpy(v5, v4, *(_QWORD *)(v9 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
      }
      v377 = 0;
    }
    swift_storeEnumTagMultiPayload(v5, v6, v377);
    v405 = *(int *)(a3 + 20);
    v406 = (void **)((char *)v5 + v405);
    v407 = (void **)((char *)v4 + v405);
    sub_10001F544((uint64_t)v5 + v405, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    switch(swift_getEnumCaseMultiPayload(v407, v8))
    {
      case 0u:
        v408 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v633 = v4;
        v639 = v5;
        switch(swift_getEnumCaseMultiPayload(v407, v408))
        {
          case 1u:
            v409 = *v407;
            *v406 = *v407;
            v410 = v409;
            v411 = v406;
            v412 = v408;
            v413 = 1;
            goto LABEL_247;
          case 2u:
            v502 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v502 - 8) + 16))(v406, v407, v502);
            v411 = v406;
            v412 = v408;
            v413 = 2;
            goto LABEL_247;
          case 3u:
            v503 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v503 - 8) + 16))(v406, v407, v503);
            v411 = v406;
            v412 = v408;
            v413 = 3;
            goto LABEL_247;
          case 4u:
            v504 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v504 - 8) + 16))(v406, v407, v504);
            v411 = v406;
            v412 = v408;
            v413 = 4;
            goto LABEL_247;
          case 5u:
            v505 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v505 - 8) + 16))(v406, v407, v505);
            v411 = v406;
            v412 = v408;
            v413 = 5;
            goto LABEL_247;
          case 6u:
            v506 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v506 - 8) + 16))(v406, v407, v506);
            v411 = v406;
            v412 = v408;
            v413 = 6;
            goto LABEL_247;
          case 8u:
            v507 = *v407;
            *v406 = *v407;
            v508 = v507;
            v411 = v406;
            v412 = v408;
            v413 = 8;
            goto LABEL_247;
          case 9u:
            v509 = *v407;
            *v406 = *v407;
            v510 = v509;
            v411 = v406;
            v412 = v408;
            v413 = 9;
LABEL_247:
            swift_storeEnumTagMultiPayload(v411, v412, v413);
            break;
          default:
            memcpy(v406, v407, *(_QWORD *)(*(_QWORD *)(v408 - 8) + 64));
            break;
        }
        v511 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v512 = v511[5];
        v513 = (char *)v406 + v512;
        v514 = (char *)v407 + v512;
        if (*(void **)((char *)v407 + v512 + 8))
        {
          v627 = v406;
          v654 = a3;
          v671 = v8;
          *(_QWORD *)v513 = *(_QWORD *)v514;
          v515 = *((_QWORD *)v514 + 1);
          *((_QWORD *)v513 + 1) = v515;
          v516 = (void *)*((_QWORD *)v514 + 2);
          v517 = *((_QWORD *)v514 + 3);
          v519 = *((_QWORD *)v514 + 4);
          v518 = *((_QWORD *)v514 + 5);
          v521 = *((_QWORD *)v514 + 6);
          v520 = *((_QWORD *)v514 + 7);
          v619 = v514[64];
          swift_bridgeObjectRetain(v515);
          sub_10003E1F0(v516, v517, v519, v518, v521, v520, v619);
          *((_QWORD *)v513 + 2) = v516;
          *((_QWORD *)v513 + 3) = v517;
          *((_QWORD *)v513 + 4) = v519;
          *((_QWORD *)v513 + 5) = v518;
          *((_QWORD *)v513 + 6) = v521;
          *((_QWORD *)v513 + 7) = v520;
          v513[64] = v619;
          v513[65] = v514[65];
          v513[66] = v514[66];
          v513[67] = v514[67];
          v513[68] = v514[68];
          v522 = v514[120];
          if (v522 == 255)
          {
            v523 = *(_OWORD *)(v514 + 72);
            v524 = *(_OWORD *)(v514 + 88);
            v525 = *(_OWORD *)(v514 + 104);
            v513[120] = v514[120];
            *(_OWORD *)(v513 + 88) = v524;
            *(_OWORD *)(v513 + 104) = v525;
            *(_OWORD *)(v513 + 72) = v523;
          }
          else
          {
            v620 = v522 & 1;
            v533 = (void *)*((_QWORD *)v514 + 9);
            v532 = *((_QWORD *)v514 + 10);
            v534 = *((_QWORD *)v514 + 11);
            v535 = *((_QWORD *)v514 + 12);
            v536 = *((_QWORD *)v514 + 13);
            v537 = *((_QWORD *)v514 + 14);
            sub_10002B764(v533, v532, v534, v535, v536, v537, v522 & 1);
            *((_QWORD *)v513 + 9) = v533;
            *((_QWORD *)v513 + 10) = v532;
            *((_QWORD *)v513 + 11) = v534;
            *((_QWORD *)v513 + 12) = v535;
            *((_QWORD *)v513 + 13) = v536;
            *((_QWORD *)v513 + 14) = v537;
            v513[120] = v620;
          }
          v4 = v633;
          v5 = v639;
          a3 = v654;
          v8 = v671;
          v513[121] = v514[121];
          v406 = v627;
        }
        else
        {
          v526 = *(_OWORD *)v514;
          v527 = *((_OWORD *)v514 + 1);
          v528 = *((_OWORD *)v514 + 3);
          *((_OWORD *)v513 + 2) = *((_OWORD *)v514 + 2);
          *((_OWORD *)v513 + 3) = v528;
          *(_OWORD *)v513 = v526;
          *((_OWORD *)v513 + 1) = v527;
          v529 = *((_OWORD *)v514 + 4);
          v530 = *((_OWORD *)v514 + 5);
          v531 = *((_OWORD *)v514 + 6);
          *(_OWORD *)(v513 + 106) = *(_OWORD *)(v514 + 106);
          *((_OWORD *)v513 + 5) = v530;
          *((_OWORD *)v513 + 6) = v531;
          *((_OWORD *)v513 + 4) = v529;
        }
        *((_BYTE *)v406 + v511[6]) = *((_BYTE *)v407 + v511[6]);
        *((_BYTE *)v406 + v511[7]) = *((_BYTE *)v407 + v511[7]);
        *((_BYTE *)v406 + v511[8]) = *((_BYTE *)v407 + v511[8]);
        *((_BYTE *)v406 + v511[9]) = *((_BYTE *)v407 + v511[9]);
        *((_BYTE *)v406 + v511[10]) = *((_BYTE *)v407 + v511[10]);
        v538 = v511[11];
        v539 = *(void **)((char *)v407 + v538);
        *(void **)((char *)v406 + v538) = v539;
        v540 = v539;
        v455 = v406;
        v456 = v8;
        v457 = 0;
        goto LABEL_304;
      case 1u:
        v414 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v634 = v4;
        v640 = v5;
        switch(swift_getEnumCaseMultiPayload(v407, v414))
        {
          case 1u:
            v415 = *v407;
            *v406 = *v407;
            v416 = v415;
            v417 = v406;
            v418 = v414;
            v419 = 1;
            goto LABEL_263;
          case 2u:
            v541 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v541 - 8) + 16))(v406, v407, v541);
            v417 = v406;
            v418 = v414;
            v419 = 2;
            goto LABEL_263;
          case 3u:
            v542 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v542 - 8) + 16))(v406, v407, v542);
            v417 = v406;
            v418 = v414;
            v419 = 3;
            goto LABEL_263;
          case 4u:
            v543 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v543 - 8) + 16))(v406, v407, v543);
            v417 = v406;
            v418 = v414;
            v419 = 4;
            goto LABEL_263;
          case 5u:
            v544 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v544 - 8) + 16))(v406, v407, v544);
            v417 = v406;
            v418 = v414;
            v419 = 5;
            goto LABEL_263;
          case 6u:
            v545 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v545 - 8) + 16))(v406, v407, v545);
            v417 = v406;
            v418 = v414;
            v419 = 6;
            goto LABEL_263;
          case 8u:
            v546 = *v407;
            *v406 = *v407;
            v547 = v546;
            v417 = v406;
            v418 = v414;
            v419 = 8;
            goto LABEL_263;
          case 9u:
            v548 = *v407;
            *v406 = *v407;
            v549 = v548;
            v417 = v406;
            v418 = v414;
            v419 = 9;
LABEL_263:
            swift_storeEnumTagMultiPayload(v417, v418, v419);
            break;
          default:
            memcpy(v406, v407, *(_QWORD *)(*(_QWORD *)(v414 - 8) + 64));
            break;
        }
        v550 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v551 = v550[5];
        v552 = (char *)v406 + v551;
        v553 = (char *)v407 + v551;
        if (*(void **)((char *)v407 + v551 + 8))
        {
          v628 = v406;
          v655 = a3;
          v672 = v8;
          *(_QWORD *)v552 = *(_QWORD *)v553;
          v554 = *((_QWORD *)v553 + 1);
          *((_QWORD *)v552 + 1) = v554;
          v556 = (void *)*((_QWORD *)v553 + 2);
          v555 = *((_QWORD *)v553 + 3);
          v557 = *((_QWORD *)v553 + 4);
          v558 = *((_QWORD *)v553 + 5);
          v560 = *((_QWORD *)v553 + 6);
          v559 = *((_QWORD *)v553 + 7);
          v621 = v553[64];
          swift_bridgeObjectRetain(v554);
          sub_10003E1F0(v556, v555, v557, v558, v560, v559, v621);
          *((_QWORD *)v552 + 2) = v556;
          *((_QWORD *)v552 + 3) = v555;
          *((_QWORD *)v552 + 4) = v557;
          *((_QWORD *)v552 + 5) = v558;
          *((_QWORD *)v552 + 6) = v560;
          *((_QWORD *)v552 + 7) = v559;
          v552[64] = v621;
          v552[65] = v553[65];
          v552[66] = v553[66];
          v552[67] = v553[67];
          v552[68] = v553[68];
          v561 = v553[120];
          if (v561 == 255)
          {
            v562 = *(_OWORD *)(v553 + 72);
            v563 = *(_OWORD *)(v553 + 88);
            v564 = *(_OWORD *)(v553 + 104);
            v552[120] = v553[120];
            *(_OWORD *)(v552 + 88) = v563;
            *(_OWORD *)(v552 + 104) = v564;
            *(_OWORD *)(v552 + 72) = v562;
          }
          else
          {
            v622 = v561 & 1;
            v572 = (void *)*((_QWORD *)v553 + 9);
            v571 = *((_QWORD *)v553 + 10);
            v573 = *((_QWORD *)v553 + 11);
            v574 = *((_QWORD *)v553 + 12);
            v575 = *((_QWORD *)v553 + 13);
            v576 = *((_QWORD *)v553 + 14);
            sub_10002B764(v572, v571, v573, v574, v575, v576, v561 & 1);
            *((_QWORD *)v552 + 9) = v572;
            *((_QWORD *)v552 + 10) = v571;
            *((_QWORD *)v552 + 11) = v573;
            *((_QWORD *)v552 + 12) = v574;
            *((_QWORD *)v552 + 13) = v575;
            *((_QWORD *)v552 + 14) = v576;
            v552[120] = v622;
          }
          v4 = v634;
          v5 = v640;
          a3 = v655;
          v8 = v672;
          v552[121] = v553[121];
          v406 = v628;
        }
        else
        {
          v565 = *(_OWORD *)v553;
          v566 = *((_OWORD *)v553 + 1);
          v567 = *((_OWORD *)v553 + 3);
          *((_OWORD *)v552 + 2) = *((_OWORD *)v553 + 2);
          *((_OWORD *)v552 + 3) = v567;
          *(_OWORD *)v552 = v565;
          *((_OWORD *)v552 + 1) = v566;
          v568 = *((_OWORD *)v553 + 4);
          v569 = *((_OWORD *)v553 + 5);
          v570 = *((_OWORD *)v553 + 6);
          *(_OWORD *)(v552 + 106) = *(_OWORD *)(v553 + 106);
          *((_OWORD *)v552 + 5) = v569;
          *((_OWORD *)v552 + 6) = v570;
          *((_OWORD *)v552 + 4) = v568;
        }
        *((_BYTE *)v406 + v550[6]) = *((_BYTE *)v407 + v550[6]);
        *((_BYTE *)v406 + v550[7]) = *((_BYTE *)v407 + v550[7]);
        *((_BYTE *)v406 + v550[8]) = *((_BYTE *)v407 + v550[8]);
        *((_BYTE *)v406 + v550[9]) = *((_BYTE *)v407 + v550[9]);
        *((_BYTE *)v406 + v550[10]) = *((_BYTE *)v407 + v550[10]);
        v577 = v550[11];
        v578 = *(void **)((char *)v407 + v577);
        *(void **)((char *)v406 + v577) = v578;
        v579 = v578;
        v455 = v406;
        v456 = v8;
        v457 = 1;
        goto LABEL_304;
      case 2u:
        v668 = v8;
        v420 = a3;
        v421 = *v407;
        *v406 = *v407;
        v422 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v423 = (void **)((char *)v406 + v422);
        v424 = (void **)((char *)v407 + v422);
        v425 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v426 = *(_QWORD *)(v425 - 8);
        v427 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v426 + 48);
        v428 = v421;
        if (v427(v424, 1, v425))
        {
          v429 = sub_10002A750(&qword_100644980);
          memcpy(v423, v424, *(_QWORD *)(*(_QWORD *)(v429 - 8) + 64));
          a3 = v420;
          v430 = v668;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v424, v425))
          {
            case 1u:
              v470 = *v424;
              *v423 = *v424;
              v471 = v470;
              v472 = v423;
              v473 = v425;
              v474 = 1;
              goto LABEL_279;
            case 2u:
              v580 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v580 - 8) + 16))(v423, v424, v580);
              v472 = v423;
              v473 = v425;
              v474 = 2;
              goto LABEL_279;
            case 3u:
              v581 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v581 - 8) + 16))(v423, v424, v581);
              v472 = v423;
              v473 = v425;
              v474 = 3;
              goto LABEL_279;
            case 4u:
              v582 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v582 - 8) + 16))(v423, v424, v582);
              v472 = v423;
              v473 = v425;
              v474 = 4;
              goto LABEL_279;
            case 5u:
              v583 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v583 - 8) + 16))(v423, v424, v583);
              v472 = v423;
              v473 = v425;
              v474 = 5;
              goto LABEL_279;
            case 6u:
              v584 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v584 - 8) + 16))(v423, v424, v584);
              v472 = v423;
              v473 = v425;
              v474 = 6;
              goto LABEL_279;
            case 8u:
              v585 = *v424;
              *v423 = *v424;
              v586 = v585;
              v472 = v423;
              v473 = v425;
              v474 = 8;
              goto LABEL_279;
            case 9u:
              v587 = *v424;
              *v423 = *v424;
              v588 = v587;
              v472 = v423;
              v473 = v425;
              v474 = 9;
LABEL_279:
              swift_storeEnumTagMultiPayload(v472, v473, v474);
              break;
            default:
              memcpy(v423, v424, *(_QWORD *)(v426 + 64));
              break;
          }
          a3 = v420;
          v430 = v668;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v426 + 56))(v423, 0, 1, v425);
        }
        v455 = v406;
        v456 = v430;
        v457 = 2;
        goto LABEL_304;
      case 3u:
        v669 = v8;
        v431 = a3;
        v432 = *v407;
        *v406 = *v407;
        v433 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v434 = (void **)((char *)v406 + v433);
        v435 = (void **)((char *)v407 + v433);
        v436 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v437 = *(_QWORD *)(v436 - 8);
        v438 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v437 + 48);
        v439 = v432;
        if (v438(v435, 1, v436))
        {
          v440 = sub_10002A750(&qword_100644980);
          memcpy(v434, v435, *(_QWORD *)(*(_QWORD *)(v440 - 8) + 64));
          a3 = v431;
          v441 = v669;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v435, v436))
          {
            case 1u:
              v475 = *v435;
              *v434 = *v435;
              v476 = v475;
              v477 = v434;
              v478 = v436;
              v479 = 1;
              goto LABEL_290;
            case 2u:
              v589 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v589 - 8) + 16))(v434, v435, v589);
              v477 = v434;
              v478 = v436;
              v479 = 2;
              goto LABEL_290;
            case 3u:
              v590 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v590 - 8) + 16))(v434, v435, v590);
              v477 = v434;
              v478 = v436;
              v479 = 3;
              goto LABEL_290;
            case 4u:
              v591 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v591 - 8) + 16))(v434, v435, v591);
              v477 = v434;
              v478 = v436;
              v479 = 4;
              goto LABEL_290;
            case 5u:
              v592 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v592 - 8) + 16))(v434, v435, v592);
              v477 = v434;
              v478 = v436;
              v479 = 5;
              goto LABEL_290;
            case 6u:
              v593 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v593 - 8) + 16))(v434, v435, v593);
              v477 = v434;
              v478 = v436;
              v479 = 6;
              goto LABEL_290;
            case 8u:
              v594 = *v435;
              *v434 = *v435;
              v595 = v594;
              v477 = v434;
              v478 = v436;
              v479 = 8;
              goto LABEL_290;
            case 9u:
              v596 = *v435;
              *v434 = *v435;
              v597 = v596;
              v477 = v434;
              v478 = v436;
              v479 = 9;
LABEL_290:
              swift_storeEnumTagMultiPayload(v477, v478, v479);
              break;
            default:
              memcpy(v434, v435, *(_QWORD *)(v437 + 64));
              break;
          }
          a3 = v431;
          v441 = v669;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v437 + 56))(v434, 0, 1, v436);
        }
        v455 = v406;
        v456 = v441;
        v457 = 3;
        goto LABEL_304;
      case 4u:
        v670 = v8;
        v442 = a3;
        v443 = *v407;
        *v406 = *v407;
        v444 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v445 = (void **)((char *)v406 + v444);
        v446 = (void **)((char *)v407 + v444);
        v447 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v448 = *(_QWORD *)(v447 - 8);
        v449 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v448 + 48);
        v450 = v443;
        if (v449(v446, 1, v447))
        {
          v451 = sub_10002A750(&qword_100644980);
          memcpy(v445, v446, *(_QWORD *)(*(_QWORD *)(v451 - 8) + 64));
          a3 = v442;
          v452 = v670;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v446, v447))
          {
            case 1u:
              v480 = *v446;
              *v445 = *v446;
              v481 = v480;
              v482 = v445;
              v483 = v447;
              v484 = 1;
              goto LABEL_301;
            case 2u:
              v598 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v598 - 8) + 16))(v445, v446, v598);
              v482 = v445;
              v483 = v447;
              v484 = 2;
              goto LABEL_301;
            case 3u:
              v599 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v599 - 8) + 16))(v445, v446, v599);
              v482 = v445;
              v483 = v447;
              v484 = 3;
              goto LABEL_301;
            case 4u:
              v600 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v600 - 8) + 16))(v445, v446, v600);
              v482 = v445;
              v483 = v447;
              v484 = 4;
              goto LABEL_301;
            case 5u:
              v601 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v601 - 8) + 16))(v445, v446, v601);
              v482 = v445;
              v483 = v447;
              v484 = 5;
              goto LABEL_301;
            case 6u:
              v602 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v602 - 8) + 16))(v445, v446, v602);
              v482 = v445;
              v483 = v447;
              v484 = 6;
              goto LABEL_301;
            case 8u:
              v603 = *v446;
              *v445 = *v446;
              v604 = v603;
              v482 = v445;
              v483 = v447;
              v484 = 8;
              goto LABEL_301;
            case 9u:
              v605 = *v446;
              *v445 = *v446;
              v606 = v605;
              v482 = v445;
              v483 = v447;
              v484 = 9;
LABEL_301:
              swift_storeEnumTagMultiPayload(v482, v483, v484);
              break;
            default:
              memcpy(v445, v446, *(_QWORD *)(v448 + 64));
              break;
          }
          a3 = v442;
          v452 = v670;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v448 + 56))(v445, 0, 1, v447);
        }
        v455 = v406;
        v456 = v452;
        v457 = 4;
        goto LABEL_304;
      case 5u:
        *v406 = *v407;
        *((_BYTE *)v406 + 8) = *((_BYTE *)v407 + 8);
        *((_BYTE *)v406 + 9) = *((_BYTE *)v407 + 9);
        *((_BYTE *)v406 + 10) = *((_BYTE *)v407 + 10);
        v453 = v407[2];
        v406[2] = v453;
        v454 = v453;
        v455 = v406;
        v456 = v8;
        v457 = 5;
        goto LABEL_304;
      case 6u:
        v465 = *v407;
        *v406 = *v407;
        v466 = v465;
        v455 = v406;
        v456 = v8;
        v457 = 6;
        goto LABEL_304;
      case 7u:
        v653 = a3;
        v458 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v459 = *(_QWORD *)(v458 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v459 + 48))(v407, 1, v458))
        {
          v460 = sub_10002A750(&qword_100644600);
          memcpy(v406, v407, *(_QWORD *)(*(_QWORD *)(v460 - 8) + 64));
        }
        else
        {
          v485 = *v407;
          *v406 = *v407;
          v486 = *(int *)(v458 + 20);
          v618 = (char *)v407 + v486;
          v626 = (char *)v406 + v486;
          v487 = v8;
          v488 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v489 = v4;
          v490 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v488 - 8) + 16);
          v491 = swift_bridgeObjectRetain(v485);
          v492 = v488;
          v8 = v487;
          v490(v626, v618, v492, v491);
          v4 = v489;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v459 + 56))(v406, 0, 1, v458);
        }
        v493 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v494 = (void **)((char *)v406 + v493);
        v495 = (void **)((char *)v407 + v493);
        a3 = v653;
        if (v495[1])
        {
          *v494 = *v495;
          v496 = v495[1];
          v494[1] = v496;
          v497 = (void *)v495[2];
          v494[2] = v497;
          swift_bridgeObjectRetain(v496);
          v498 = v497;
        }
        else
        {
          v499 = *(_OWORD *)v495;
          v494[2] = v495[2];
          *(_OWORD *)v494 = v499;
        }
        v455 = v406;
        v456 = v8;
        v457 = 7;
        goto LABEL_304;
      case 8u:
        v467 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v468 = *(_QWORD *)(v467 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v468 + 48))(v407, 1, v467))
        {
          v469 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v406, v407, *(_QWORD *)(*(_QWORD *)(v469 - 8) + 64));
        }
        else
        {
          v500 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v500 - 8) + 16))(v406, v407, v500);
          *((_BYTE *)v406 + *(int *)(v467 + 20)) = *((_BYTE *)v407 + *(int *)(v467 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v468 + 56))(v406, 0, 1, v467);
        }
        v501 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)v406 + *(int *)(v501 + 20)) = *(void **)((char *)v407 + *(int *)(v501 + 20));
        v455 = v406;
        v456 = v8;
        v457 = 8;
        goto LABEL_304;
      case 9u:
        *(_BYTE *)v406 = *(_BYTE *)v407;
        v461 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v462 = (char *)v406 + v461;
        v463 = (char *)v407 + v461;
        v464 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v464 - 8) + 16))(v462, v463, v464);
        v455 = v406;
        v456 = v8;
        v457 = 9;
LABEL_304:
        swift_storeEnumTagMultiPayload(v455, v456, v457);
        break;
      default:
        memcpy(v406, v407, *(_QWORD *)(v9 + 64));
        break;
    }
  }
  *(_QWORD *)((char *)v5 + *(int *)(a3 + 24)) = *(void **)((char *)v4 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return v5;
}

_QWORD *sub_1003B16D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int *v135;
  uint64_t v136;
  _OWORD *v137;
  _OWORD *v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int *v147;
  uint64_t v148;
  _OWORD *v149;
  _OWORD *v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  int *v159;
  uint64_t v160;
  _OWORD *v161;
  _OWORD *v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  int *v171;
  uint64_t v172;
  _OWORD *v173;
  _OWORD *v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  _QWORD *v207;
  uint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  _QWORD *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  _QWORD *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  int *v274;
  uint64_t v275;
  _OWORD *v276;
  _OWORD *v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  int *v286;
  uint64_t v287;
  _OWORD *v288;
  _OWORD *v289;
  __int128 v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;

  v6 = sub_10002A750(&qword_10064B6B0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8);
  if (EnumCaseMultiPayload == 1)
  {
    if (v10)
    {
      v11 = sub_10002A750((uint64_t *)&unk_100640EB0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(a2, v8))
      {
        case 0u:
          v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v13))
          {
            case 2u:
              v14 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
              v15 = a1;
              v16 = v13;
              v17 = 2;
              goto LABEL_65;
            case 3u:
              v131 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v131 - 8) + 32))(a1, a2, v131);
              v15 = a1;
              v16 = v13;
              v17 = 3;
              goto LABEL_65;
            case 4u:
              v132 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v132 - 8) + 32))(a1, a2, v132);
              v15 = a1;
              v16 = v13;
              v17 = 4;
              goto LABEL_65;
            case 5u:
              v133 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v133 - 8) + 32))(a1, a2, v133);
              v15 = a1;
              v16 = v13;
              v17 = 5;
              goto LABEL_65;
            case 6u:
              v134 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(a1, a2, v134);
              v15 = a1;
              v16 = v13;
              v17 = 6;
LABEL_65:
              swift_storeEnumTagMultiPayload(v15, v16, v17);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
              break;
          }
          v135 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v136 = v135[5];
          v137 = (_OWORD *)((char *)a1 + v136);
          v138 = (_OWORD *)((char *)a2 + v136);
          v139 = v138[3];
          v137[2] = v138[2];
          v137[3] = v139;
          v140 = v138[1];
          *v137 = *v138;
          v137[1] = v140;
          *(_OWORD *)((char *)v137 + 106) = *(_OWORD *)((char *)v138 + 106);
          v141 = v138[6];
          v142 = v138[4];
          v137[5] = v138[5];
          v137[6] = v141;
          v137[4] = v142;
          *((_BYTE *)a1 + v135[6]) = *((_BYTE *)a2 + v135[6]);
          *((_BYTE *)a1 + v135[7]) = *((_BYTE *)a2 + v135[7]);
          *((_BYTE *)a1 + v135[8]) = *((_BYTE *)a2 + v135[8]);
          *((_BYTE *)a1 + v135[9]) = *((_BYTE *)a2 + v135[9]);
          *((_BYTE *)a1 + v135[10]) = *((_BYTE *)a2 + v135[10]);
          *(_QWORD *)((char *)a1 + v135[11]) = *(_QWORD *)((char *)a2 + v135[11]);
          v56 = a1;
          v57 = v8;
          v58 = 0;
          goto LABEL_131;
        case 1u:
          v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v23))
          {
            case 2u:
              v24 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a1, a2, v24);
              v25 = a1;
              v26 = v23;
              v27 = 2;
              goto LABEL_79;
            case 3u:
              v155 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v155 - 8) + 32))(a1, a2, v155);
              v25 = a1;
              v26 = v23;
              v27 = 3;
              goto LABEL_79;
            case 4u:
              v156 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v156 - 8) + 32))(a1, a2, v156);
              v25 = a1;
              v26 = v23;
              v27 = 4;
              goto LABEL_79;
            case 5u:
              v157 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(a1, a2, v157);
              v25 = a1;
              v26 = v23;
              v27 = 5;
              goto LABEL_79;
            case 6u:
              v158 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(a1, a2, v158);
              v25 = a1;
              v26 = v23;
              v27 = 6;
LABEL_79:
              swift_storeEnumTagMultiPayload(v25, v26, v27);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
              break;
          }
          v159 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v160 = v159[5];
          v161 = (_OWORD *)((char *)a1 + v160);
          v162 = (_OWORD *)((char *)a2 + v160);
          v163 = v162[3];
          v161[2] = v162[2];
          v161[3] = v163;
          v164 = v162[1];
          *v161 = *v162;
          v161[1] = v164;
          *(_OWORD *)((char *)v161 + 106) = *(_OWORD *)((char *)v162 + 106);
          v165 = v162[6];
          v166 = v162[4];
          v161[5] = v162[5];
          v161[6] = v165;
          v161[4] = v166;
          *((_BYTE *)a1 + v159[6]) = *((_BYTE *)a2 + v159[6]);
          *((_BYTE *)a1 + v159[7]) = *((_BYTE *)a2 + v159[7]);
          *((_BYTE *)a1 + v159[8]) = *((_BYTE *)a2 + v159[8]);
          *((_BYTE *)a1 + v159[9]) = *((_BYTE *)a2 + v159[9]);
          *((_BYTE *)a1 + v159[10]) = *((_BYTE *)a2 + v159[10]);
          *(_QWORD *)((char *)a1 + v159[11]) = *(_QWORD *)((char *)a2 + v159[11]);
          v56 = a1;
          v57 = v8;
          v58 = 1;
          goto LABEL_131;
        case 2u:
          *a1 = *a2;
          v28 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v29 = (char *)a1 + v28;
          v30 = (char *)a2 + v28;
          v31 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v32 = *(_QWORD *)(v31 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
          {
            v33 = sub_10002A750(&qword_100644980);
            memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v30, v31))
            {
              case 2u:
                v95 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v29, v30, v95);
                v96 = v29;
                v97 = v31;
                v98 = 2;
                goto LABEL_93;
              case 3u:
                v179 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v179 - 8) + 32))(v29, v30, v179);
                v96 = v29;
                v97 = v31;
                v98 = 3;
                goto LABEL_93;
              case 4u:
                v180 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 32))(v29, v30, v180);
                v96 = v29;
                v97 = v31;
                v98 = 4;
                goto LABEL_93;
              case 5u:
                v181 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(v29, v30, v181);
                v96 = v29;
                v97 = v31;
                v98 = 5;
                goto LABEL_93;
              case 6u:
                v182 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 32))(v29, v30, v182);
                v96 = v29;
                v97 = v31;
                v98 = 6;
LABEL_93:
                swift_storeEnumTagMultiPayload(v96, v97, v98);
                break;
              default:
                memcpy(v29, v30, *(_QWORD *)(v32 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
          }
          v56 = a1;
          v57 = v8;
          v58 = 2;
          goto LABEL_131;
        case 3u:
          *a1 = *a2;
          v34 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v35 = (char *)a1 + v34;
          v36 = (char *)a2 + v34;
          v37 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v38 = *(_QWORD *)(v37 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
          {
            v39 = sub_10002A750(&qword_100644980);
            memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v36, v37))
            {
              case 2u:
                v99 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v35, v36, v99);
                v100 = v35;
                v101 = v37;
                v102 = 2;
                goto LABEL_101;
              case 3u:
                v183 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v35, v36, v183);
                v100 = v35;
                v101 = v37;
                v102 = 3;
                goto LABEL_101;
              case 4u:
                v184 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v35, v36, v184);
                v100 = v35;
                v101 = v37;
                v102 = 4;
                goto LABEL_101;
              case 5u:
                v185 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v35, v36, v185);
                v100 = v35;
                v101 = v37;
                v102 = 5;
                goto LABEL_101;
              case 6u:
                v186 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v35, v36, v186);
                v100 = v35;
                v101 = v37;
                v102 = 6;
LABEL_101:
                swift_storeEnumTagMultiPayload(v100, v101, v102);
                break;
              default:
                memcpy(v35, v36, *(_QWORD *)(v38 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
          }
          v56 = a1;
          v57 = v8;
          v58 = 3;
          goto LABEL_131;
        case 4u:
          *a1 = *a2;
          v40 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v41 = (char *)a1 + v40;
          v42 = (char *)a2 + v40;
          v43 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v44 = *(_QWORD *)(v43 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
          {
            v45 = sub_10002A750(&qword_100644980);
            memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v42, v43))
            {
              case 2u:
                v103 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v41, v42, v103);
                swift_storeEnumTagMultiPayload(v41, v43, 2);
                break;
              case 3u:
                v187 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v41, v42, v187);
                swift_storeEnumTagMultiPayload(v41, v43, 3);
                break;
              case 4u:
                v188 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v41, v42, v188);
                swift_storeEnumTagMultiPayload(v41, v43, 4);
                break;
              case 5u:
                v189 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(v41, v42, v189);
                swift_storeEnumTagMultiPayload(v41, v43, 5);
                break;
              case 6u:
                v190 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 32))(v41, v42, v190);
                swift_storeEnumTagMultiPayload(v41, v43, 6);
                break;
              default:
                memcpy(v41, v42, *(_QWORD *)(v44 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
          }
          v56 = a1;
          v57 = v8;
          v58 = 4;
          goto LABEL_131;
        case 7u:
          v46 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v47 = *(_QWORD *)(v46 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v47 + 48))(a2, 1, v46))
          {
            v48 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            v104 = *(int *)(v46 + 20);
            v105 = (char *)a1 + v104;
            v106 = (char *)a2 + v104;
            v107 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v105, v106, v107);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(a1, 0, 1, v46);
          }
          v108 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v109 = (char *)a1 + v108;
          v110 = (char *)a2 + v108;
          *(_OWORD *)v109 = *(_OWORD *)v110;
          *((_QWORD *)v109 + 2) = *((_QWORD *)v110 + 2);
          v56 = a1;
          v57 = v8;
          v58 = 7;
          goto LABEL_131;
        case 8u:
          v49 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v50 = *(_QWORD *)(v49 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v50 + 48))(a2, 1, v49))
          {
            v51 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
          }
          else
          {
            v111 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(a1, a2, v111);
            *((_BYTE *)a1 + *(int *)(v49 + 20)) = *((_BYTE *)a2 + *(int *)(v49 + 20));
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v50 + 56))(a1, 0, 1, v49);
          }
          v112 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)((char *)a1 + *(int *)(v112 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v112 + 20));
          v56 = a1;
          v57 = v8;
          v58 = 8;
          goto LABEL_131;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v52 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v53 = (char *)a1 + v52;
          v54 = (char *)a2 + v52;
          v55 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
          v56 = a1;
          v57 = v8;
          v58 = 9;
LABEL_131:
          swift_storeEnumTagMultiPayload(v56, v57, v58);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v9 + 64));
          break;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v203 = sub_10002A750(&qword_1006588F8);
    *(_QWORD *)((char *)a1 + *(int *)(v203 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v203 + 48));
    v204 = 1;
  }
  else
  {
    if (v10)
    {
      v12 = sub_10002A750((uint64_t *)&unk_100640EB0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(a2, v8))
      {
        case 0u:
          v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v18))
          {
            case 2u:
              v19 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
              v20 = a1;
              v21 = v18;
              v22 = 2;
              goto LABEL_72;
            case 3u:
              v143 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v143 - 8) + 32))(a1, a2, v143);
              v20 = a1;
              v21 = v18;
              v22 = 3;
              goto LABEL_72;
            case 4u:
              v144 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v144 - 8) + 32))(a1, a2, v144);
              v20 = a1;
              v21 = v18;
              v22 = 4;
              goto LABEL_72;
            case 5u:
              v145 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(a1, a2, v145);
              v20 = a1;
              v21 = v18;
              v22 = 5;
              goto LABEL_72;
            case 6u:
              v146 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(a1, a2, v146);
              v20 = a1;
              v21 = v18;
              v22 = 6;
LABEL_72:
              swift_storeEnumTagMultiPayload(v20, v21, v22);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
              break;
          }
          v147 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v148 = v147[5];
          v149 = (_OWORD *)((char *)a1 + v148);
          v150 = (_OWORD *)((char *)a2 + v148);
          v151 = v150[3];
          v149[2] = v150[2];
          v149[3] = v151;
          v152 = v150[1];
          *v149 = *v150;
          v149[1] = v152;
          *(_OWORD *)((char *)v149 + 106) = *(_OWORD *)((char *)v150 + 106);
          v153 = v150[6];
          v154 = v150[4];
          v149[5] = v150[5];
          v149[6] = v153;
          v149[4] = v154;
          *((_BYTE *)a1 + v147[6]) = *((_BYTE *)a2 + v147[6]);
          *((_BYTE *)a1 + v147[7]) = *((_BYTE *)a2 + v147[7]);
          *((_BYTE *)a1 + v147[8]) = *((_BYTE *)a2 + v147[8]);
          *((_BYTE *)a1 + v147[9]) = *((_BYTE *)a2 + v147[9]);
          *((_BYTE *)a1 + v147[10]) = *((_BYTE *)a2 + v147[10]);
          *(_QWORD *)((char *)a1 + v147[11]) = *(_QWORD *)((char *)a2 + v147[11]);
          v92 = a1;
          v93 = v8;
          v94 = 0;
          goto LABEL_137;
        case 1u:
          v59 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v59))
          {
            case 2u:
              v60 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(a1, a2, v60);
              v61 = a1;
              v62 = v59;
              v63 = 2;
              goto LABEL_86;
            case 3u:
              v167 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v167 - 8) + 32))(a1, a2, v167);
              v61 = a1;
              v62 = v59;
              v63 = 3;
              goto LABEL_86;
            case 4u:
              v168 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v168 - 8) + 32))(a1, a2, v168);
              v61 = a1;
              v62 = v59;
              v63 = 4;
              goto LABEL_86;
            case 5u:
              v169 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v169 - 8) + 32))(a1, a2, v169);
              v61 = a1;
              v62 = v59;
              v63 = 5;
              goto LABEL_86;
            case 6u:
              v170 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(a1, a2, v170);
              v61 = a1;
              v62 = v59;
              v63 = 6;
LABEL_86:
              swift_storeEnumTagMultiPayload(v61, v62, v63);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
              break;
          }
          v171 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v172 = v171[5];
          v173 = (_OWORD *)((char *)a1 + v172);
          v174 = (_OWORD *)((char *)a2 + v172);
          v175 = v174[3];
          v173[2] = v174[2];
          v173[3] = v175;
          v176 = v174[1];
          *v173 = *v174;
          v173[1] = v176;
          *(_OWORD *)((char *)v173 + 106) = *(_OWORD *)((char *)v174 + 106);
          v177 = v174[6];
          v178 = v174[4];
          v173[5] = v174[5];
          v173[6] = v177;
          v173[4] = v178;
          *((_BYTE *)a1 + v171[6]) = *((_BYTE *)a2 + v171[6]);
          *((_BYTE *)a1 + v171[7]) = *((_BYTE *)a2 + v171[7]);
          *((_BYTE *)a1 + v171[8]) = *((_BYTE *)a2 + v171[8]);
          *((_BYTE *)a1 + v171[9]) = *((_BYTE *)a2 + v171[9]);
          *((_BYTE *)a1 + v171[10]) = *((_BYTE *)a2 + v171[10]);
          *(_QWORD *)((char *)a1 + v171[11]) = *(_QWORD *)((char *)a2 + v171[11]);
          v92 = a1;
          v93 = v8;
          v94 = 1;
          goto LABEL_137;
        case 2u:
          *a1 = *a2;
          v64 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v65 = (char *)a1 + v64;
          v66 = (char *)a2 + v64;
          v67 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v68 = *(_QWORD *)(v67 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
          {
            v69 = sub_10002A750(&qword_100644980);
            memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v66, v67))
            {
              case 2u:
                v113 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(v65, v66, v113);
                v114 = v65;
                v115 = v67;
                v116 = 2;
                goto LABEL_113;
              case 3u:
                v191 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v65, v66, v191);
                v114 = v65;
                v115 = v67;
                v116 = 3;
                goto LABEL_113;
              case 4u:
                v192 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32))(v65, v66, v192);
                v114 = v65;
                v115 = v67;
                v116 = 4;
                goto LABEL_113;
              case 5u:
                v193 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v193 - 8) + 32))(v65, v66, v193);
                v114 = v65;
                v115 = v67;
                v116 = 5;
                goto LABEL_113;
              case 6u:
                v194 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 32))(v65, v66, v194);
                v114 = v65;
                v115 = v67;
                v116 = 6;
LABEL_113:
                swift_storeEnumTagMultiPayload(v114, v115, v116);
                break;
              default:
                memcpy(v65, v66, *(_QWORD *)(v68 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
          }
          v92 = a1;
          v93 = v8;
          v94 = 2;
          goto LABEL_137;
        case 3u:
          *a1 = *a2;
          v70 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v71 = (char *)a1 + v70;
          v72 = (char *)a2 + v70;
          v73 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v74 = *(_QWORD *)(v73 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
          {
            v75 = sub_10002A750(&qword_100644980);
            memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v72, v73))
            {
              case 2u:
                v117 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v71, v72, v117);
                v118 = v71;
                v119 = v73;
                v120 = 2;
                goto LABEL_121;
              case 3u:
                v195 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v71, v72, v195);
                v118 = v71;
                v119 = v73;
                v120 = 3;
                goto LABEL_121;
              case 4u:
                v196 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v71, v72, v196);
                v118 = v71;
                v119 = v73;
                v120 = 4;
                goto LABEL_121;
              case 5u:
                v197 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32))(v71, v72, v197);
                v118 = v71;
                v119 = v73;
                v120 = 5;
                goto LABEL_121;
              case 6u:
                v198 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v71, v72, v198);
                v118 = v71;
                v119 = v73;
                v120 = 6;
LABEL_121:
                swift_storeEnumTagMultiPayload(v118, v119, v120);
                break;
              default:
                memcpy(v71, v72, *(_QWORD *)(v74 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
          }
          v92 = a1;
          v93 = v8;
          v94 = 3;
          goto LABEL_137;
        case 4u:
          *a1 = *a2;
          v76 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v77 = (char *)a1 + v76;
          v78 = (char *)a2 + v76;
          v79 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v80 = *(_QWORD *)(v79 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
          {
            v81 = sub_10002A750(&qword_100644980);
            memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v78, v79))
            {
              case 2u:
                v121 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v77, v78, v121);
                swift_storeEnumTagMultiPayload(v77, v79, 2);
                break;
              case 3u:
                v199 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v77, v78, v199);
                swift_storeEnumTagMultiPayload(v77, v79, 3);
                break;
              case 4u:
                v200 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v77, v78, v200);
                swift_storeEnumTagMultiPayload(v77, v79, 4);
                break;
              case 5u:
                v201 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v77, v78, v201);
                swift_storeEnumTagMultiPayload(v77, v79, 5);
                break;
              case 6u:
                v202 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v77, v78, v202);
                swift_storeEnumTagMultiPayload(v77, v79, 6);
                break;
              default:
                memcpy(v77, v78, *(_QWORD *)(v80 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
          }
          v92 = a1;
          v93 = v8;
          v94 = 4;
          goto LABEL_137;
        case 7u:
          v82 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v83 = *(_QWORD *)(v82 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v83 + 48))(a2, 1, v82))
          {
            v84 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            v122 = *(int *)(v82 + 20);
            v123 = (char *)a1 + v122;
            v124 = (char *)a2 + v122;
            v125 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 32))(v123, v124, v125);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v83 + 56))(a1, 0, 1, v82);
          }
          v126 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v127 = (char *)a1 + v126;
          v128 = (char *)a2 + v126;
          *(_OWORD *)v127 = *(_OWORD *)v128;
          *((_QWORD *)v127 + 2) = *((_QWORD *)v128 + 2);
          v92 = a1;
          v93 = v8;
          v94 = 7;
          goto LABEL_137;
        case 8u:
          v85 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v86 = *(_QWORD *)(v85 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v86 + 48))(a2, 1, v85))
          {
            v87 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
          }
          else
          {
            v129 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v129 - 8) + 32))(a1, a2, v129);
            *((_BYTE *)a1 + *(int *)(v85 + 20)) = *((_BYTE *)a2 + *(int *)(v85 + 20));
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v86 + 56))(a1, 0, 1, v85);
          }
          v130 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)((char *)a1 + *(int *)(v130 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v130 + 20));
          v92 = a1;
          v93 = v8;
          v94 = 8;
          goto LABEL_137;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v88 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v89 = (char *)a1 + v88;
          v90 = (char *)a2 + v88;
          v91 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v89, v90, v91);
          v92 = a1;
          v93 = v8;
          v94 = 9;
LABEL_137:
          swift_storeEnumTagMultiPayload(v92, v93, v94);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v9 + 64));
          break;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v204 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, v6, v204);
  v205 = *(int *)(a3 + 20);
  v206 = (_QWORD *)((char *)a1 + v205);
  v207 = (_QWORD *)((char *)a2 + v205);
  switch(swift_getEnumCaseMultiPayload((char *)a2 + v205, v8))
  {
    case 0u:
      v208 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v207, v208))
      {
        case 2u:
          v209 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v209 - 8) + 32))(v206, v207, v209);
          v210 = v206;
          v211 = v208;
          v212 = 2;
          goto LABEL_172;
        case 3u:
          v270 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v270 - 8) + 32))(v206, v207, v270);
          v210 = v206;
          v211 = v208;
          v212 = 3;
          goto LABEL_172;
        case 4u:
          v271 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v271 - 8) + 32))(v206, v207, v271);
          v210 = v206;
          v211 = v208;
          v212 = 4;
          goto LABEL_172;
        case 5u:
          v272 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v272 - 8) + 32))(v206, v207, v272);
          v210 = v206;
          v211 = v208;
          v212 = 5;
          goto LABEL_172;
        case 6u:
          v273 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v273 - 8) + 32))(v206, v207, v273);
          v210 = v206;
          v211 = v208;
          v212 = 6;
LABEL_172:
          swift_storeEnumTagMultiPayload(v210, v211, v212);
          break;
        default:
          memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v208 - 8) + 64));
          break;
      }
      v274 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v275 = v274[5];
      v276 = (_OWORD *)((char *)v206 + v275);
      v277 = (_OWORD *)((char *)v207 + v275);
      v278 = v277[3];
      v276[2] = v277[2];
      v276[3] = v278;
      v279 = v277[1];
      *v276 = *v277;
      v276[1] = v279;
      *(_OWORD *)((char *)v276 + 106) = *(_OWORD *)((char *)v277 + 106);
      v280 = v277[6];
      v281 = v277[4];
      v276[5] = v277[5];
      v276[6] = v280;
      v276[4] = v281;
      *((_BYTE *)v206 + v274[6]) = *((_BYTE *)v207 + v274[6]);
      *((_BYTE *)v206 + v274[7]) = *((_BYTE *)v207 + v274[7]);
      *((_BYTE *)v206 + v274[8]) = *((_BYTE *)v207 + v274[8]);
      *((_BYTE *)v206 + v274[9]) = *((_BYTE *)v207 + v274[9]);
      *((_BYTE *)v206 + v274[10]) = *((_BYTE *)v207 + v274[10]);
      *(_QWORD *)((char *)v206 + v274[11]) = *(_QWORD *)((char *)v207 + v274[11]);
      v246 = v206;
      v247 = v8;
      v248 = 0;
      goto LABEL_205;
    case 1u:
      v213 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v207, v213))
      {
        case 2u:
          v214 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v214 - 8) + 32))(v206, v207, v214);
          v215 = v206;
          v216 = v213;
          v217 = 2;
          goto LABEL_179;
        case 3u:
          v282 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v282 - 8) + 32))(v206, v207, v282);
          v215 = v206;
          v216 = v213;
          v217 = 3;
          goto LABEL_179;
        case 4u:
          v283 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v283 - 8) + 32))(v206, v207, v283);
          v215 = v206;
          v216 = v213;
          v217 = 4;
          goto LABEL_179;
        case 5u:
          v284 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v284 - 8) + 32))(v206, v207, v284);
          v215 = v206;
          v216 = v213;
          v217 = 5;
          goto LABEL_179;
        case 6u:
          v285 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v285 - 8) + 32))(v206, v207, v285);
          v215 = v206;
          v216 = v213;
          v217 = 6;
LABEL_179:
          swift_storeEnumTagMultiPayload(v215, v216, v217);
          break;
        default:
          memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v213 - 8) + 64));
          break;
      }
      v286 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v287 = v286[5];
      v288 = (_OWORD *)((char *)v206 + v287);
      v289 = (_OWORD *)((char *)v207 + v287);
      v290 = v289[3];
      v288[2] = v289[2];
      v288[3] = v290;
      v291 = v289[1];
      *v288 = *v289;
      v288[1] = v291;
      *(_OWORD *)((char *)v288 + 106) = *(_OWORD *)((char *)v289 + 106);
      v292 = v289[6];
      v293 = v289[4];
      v288[5] = v289[5];
      v288[6] = v292;
      v288[4] = v293;
      *((_BYTE *)v206 + v286[6]) = *((_BYTE *)v207 + v286[6]);
      *((_BYTE *)v206 + v286[7]) = *((_BYTE *)v207 + v286[7]);
      *((_BYTE *)v206 + v286[8]) = *((_BYTE *)v207 + v286[8]);
      *((_BYTE *)v206 + v286[9]) = *((_BYTE *)v207 + v286[9]);
      *((_BYTE *)v206 + v286[10]) = *((_BYTE *)v207 + v286[10]);
      *(_QWORD *)((char *)v206 + v286[11]) = *(_QWORD *)((char *)v207 + v286[11]);
      v246 = v206;
      v247 = v8;
      v248 = 1;
      goto LABEL_205;
    case 2u:
      *v206 = *v207;
      v218 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v219 = (char *)v206 + v218;
      v220 = (char *)v207 + v218;
      v221 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v222 = *(_QWORD *)(v221 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v222 + 48))(v220, 1, v221))
      {
        v223 = sub_10002A750(&qword_100644980);
        memcpy(v219, v220, *(_QWORD *)(*(_QWORD *)(v223 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v220, v221))
        {
          case 2u:
            v249 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v249 - 8) + 32))(v219, v220, v249);
            v250 = v219;
            v251 = v221;
            v252 = 2;
            goto LABEL_186;
          case 3u:
            v294 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v294 - 8) + 32))(v219, v220, v294);
            v250 = v219;
            v251 = v221;
            v252 = 3;
            goto LABEL_186;
          case 4u:
            v295 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v295 - 8) + 32))(v219, v220, v295);
            v250 = v219;
            v251 = v221;
            v252 = 4;
            goto LABEL_186;
          case 5u:
            v296 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v296 - 8) + 32))(v219, v220, v296);
            v250 = v219;
            v251 = v221;
            v252 = 5;
            goto LABEL_186;
          case 6u:
            v297 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v297 - 8) + 32))(v219, v220, v297);
            v250 = v219;
            v251 = v221;
            v252 = 6;
LABEL_186:
            swift_storeEnumTagMultiPayload(v250, v251, v252);
            break;
          default:
            memcpy(v219, v220, *(_QWORD *)(v222 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v222 + 56))(v219, 0, 1, v221);
      }
      v246 = v206;
      v247 = v8;
      v248 = 2;
      goto LABEL_205;
    case 3u:
      *v206 = *v207;
      v224 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v225 = (char *)v206 + v224;
      v226 = (char *)v207 + v224;
      v227 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v228 = *(_QWORD *)(v227 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v228 + 48))(v226, 1, v227))
      {
        v229 = sub_10002A750(&qword_100644980);
        memcpy(v225, v226, *(_QWORD *)(*(_QWORD *)(v229 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v226, v227))
        {
          case 2u:
            v253 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v253 - 8) + 32))(v225, v226, v253);
            v254 = v225;
            v255 = v227;
            v256 = 2;
            goto LABEL_194;
          case 3u:
            v298 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v298 - 8) + 32))(v225, v226, v298);
            v254 = v225;
            v255 = v227;
            v256 = 3;
            goto LABEL_194;
          case 4u:
            v299 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v299 - 8) + 32))(v225, v226, v299);
            v254 = v225;
            v255 = v227;
            v256 = 4;
            goto LABEL_194;
          case 5u:
            v300 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v300 - 8) + 32))(v225, v226, v300);
            v254 = v225;
            v255 = v227;
            v256 = 5;
            goto LABEL_194;
          case 6u:
            v301 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v301 - 8) + 32))(v225, v226, v301);
            v254 = v225;
            v255 = v227;
            v256 = 6;
LABEL_194:
            swift_storeEnumTagMultiPayload(v254, v255, v256);
            break;
          default:
            memcpy(v225, v226, *(_QWORD *)(v228 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v228 + 56))(v225, 0, 1, v227);
      }
      v246 = v206;
      v247 = v8;
      v248 = 3;
      goto LABEL_205;
    case 4u:
      *v206 = *v207;
      v230 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v231 = (char *)v206 + v230;
      v232 = (char *)v207 + v230;
      v233 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v234 = *(_QWORD *)(v233 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v234 + 48))(v232, 1, v233))
      {
        v235 = sub_10002A750(&qword_100644980);
        memcpy(v231, v232, *(_QWORD *)(*(_QWORD *)(v235 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v232, v233))
        {
          case 2u:
            v257 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v257 - 8) + 32))(v231, v232, v257);
            v258 = v231;
            v259 = v233;
            v260 = 2;
            goto LABEL_202;
          case 3u:
            v302 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v302 - 8) + 32))(v231, v232, v302);
            v258 = v231;
            v259 = v233;
            v260 = 3;
            goto LABEL_202;
          case 4u:
            v303 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v303 - 8) + 32))(v231, v232, v303);
            v258 = v231;
            v259 = v233;
            v260 = 4;
            goto LABEL_202;
          case 5u:
            v304 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v304 - 8) + 32))(v231, v232, v304);
            v258 = v231;
            v259 = v233;
            v260 = 5;
            goto LABEL_202;
          case 6u:
            v305 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v305 - 8) + 32))(v231, v232, v305);
            v258 = v231;
            v259 = v233;
            v260 = 6;
LABEL_202:
            swift_storeEnumTagMultiPayload(v258, v259, v260);
            break;
          default:
            memcpy(v231, v232, *(_QWORD *)(v234 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v234 + 56))(v231, 0, 1, v233);
      }
      v246 = v206;
      v247 = v8;
      v248 = 4;
      goto LABEL_205;
    case 7u:
      v236 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v237 = *(_QWORD *)(v236 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v237 + 48))(v207, 1, v236))
      {
        v238 = sub_10002A750(&qword_100644600);
        memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v238 - 8) + 64));
      }
      else
      {
        *v206 = *v207;
        v261 = *(int *)(v236 + 20);
        v262 = (char *)v206 + v261;
        v263 = (char *)v207 + v261;
        v264 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v264 - 8) + 32))(v262, v263, v264);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v237 + 56))(v206, 0, 1, v236);
      }
      v265 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v266 = (char *)v206 + v265;
      v267 = (char *)v207 + v265;
      *(_OWORD *)v266 = *(_OWORD *)v267;
      *((_QWORD *)v266 + 2) = *((_QWORD *)v267 + 2);
      v246 = v206;
      v247 = v8;
      v248 = 7;
      goto LABEL_205;
    case 8u:
      v239 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v240 = *(_QWORD *)(v239 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v240 + 48))(v207, 1, v239))
      {
        v241 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v241 - 8) + 64));
      }
      else
      {
        v268 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v268 - 8) + 32))(v206, v207, v268);
        *((_BYTE *)v206 + *(int *)(v239 + 20)) = *((_BYTE *)v207 + *(int *)(v239 + 20));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v240 + 56))(v206, 0, 1, v239);
      }
      v269 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(_QWORD *)((char *)v206 + *(int *)(v269 + 20)) = *(_QWORD *)((char *)v207 + *(int *)(v269 + 20));
      v246 = v206;
      v247 = v8;
      v248 = 8;
      goto LABEL_205;
    case 9u:
      *(_BYTE *)v206 = *(_BYTE *)v207;
      v242 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v243 = (char *)v206 + v242;
      v244 = (char *)v207 + v242;
      v245 = type metadata accessor for AnyTip(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v245 - 8) + 32))(v243, v244, v245);
      v246 = v206;
      v247 = v8;
      v248 = 9;
LABEL_205:
      swift_storeEnumTagMultiPayload(v246, v247, v248);
      break;
    default:
      memcpy(v206, v207, *(_QWORD *)(v9 + 64));
      break;
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_1003B396C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int *v135;
  uint64_t v136;
  _OWORD *v137;
  _OWORD *v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int *v147;
  uint64_t v148;
  _OWORD *v149;
  _OWORD *v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  int *v159;
  uint64_t v160;
  _OWORD *v161;
  _OWORD *v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  int *v171;
  uint64_t v172;
  _OWORD *v173;
  _OWORD *v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  _QWORD *v207;
  uint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  _QWORD *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  _QWORD *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  int *v274;
  uint64_t v275;
  _OWORD *v276;
  _OWORD *v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  int *v286;
  uint64_t v287;
  _OWORD *v288;
  _OWORD *v289;
  __int128 v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;

  if (a1 != a2)
  {
    sub_1000073A0((uint64_t)a1, &qword_10064B6B0);
    v6 = sub_10002A750(&qword_10064B6B0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
    v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v9 = *(_QWORD *)(v8 - 8);
    v10 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8);
    if (EnumCaseMultiPayload == 1)
    {
      if (v10)
      {
        v11 = sub_10002A750((uint64_t *)&unk_100640EB0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(a2, v8))
        {
          case 0u:
            v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            switch(swift_getEnumCaseMultiPayload(a2, v13))
            {
              case 2u:
                v14 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
                v15 = a1;
                v16 = v13;
                v17 = 2;
                goto LABEL_66;
              case 3u:
                v131 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v131 - 8) + 32))(a1, a2, v131);
                v15 = a1;
                v16 = v13;
                v17 = 3;
                goto LABEL_66;
              case 4u:
                v132 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v132 - 8) + 32))(a1, a2, v132);
                v15 = a1;
                v16 = v13;
                v17 = 4;
                goto LABEL_66;
              case 5u:
                v133 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v133 - 8) + 32))(a1, a2, v133);
                v15 = a1;
                v16 = v13;
                v17 = 5;
                goto LABEL_66;
              case 6u:
                v134 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(a1, a2, v134);
                v15 = a1;
                v16 = v13;
                v17 = 6;
LABEL_66:
                swift_storeEnumTagMultiPayload(v15, v16, v17);
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
                break;
            }
            v135 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v136 = v135[5];
            v137 = (_OWORD *)((char *)a1 + v136);
            v138 = (_OWORD *)((char *)a2 + v136);
            v139 = v138[3];
            v137[2] = v138[2];
            v137[3] = v139;
            v140 = v138[1];
            *v137 = *v138;
            v137[1] = v140;
            *(_OWORD *)((char *)v137 + 106) = *(_OWORD *)((char *)v138 + 106);
            v141 = v138[6];
            v142 = v138[4];
            v137[5] = v138[5];
            v137[6] = v141;
            v137[4] = v142;
            *((_BYTE *)a1 + v135[6]) = *((_BYTE *)a2 + v135[6]);
            *((_BYTE *)a1 + v135[7]) = *((_BYTE *)a2 + v135[7]);
            *((_BYTE *)a1 + v135[8]) = *((_BYTE *)a2 + v135[8]);
            *((_BYTE *)a1 + v135[9]) = *((_BYTE *)a2 + v135[9]);
            *((_BYTE *)a1 + v135[10]) = *((_BYTE *)a2 + v135[10]);
            *(_QWORD *)((char *)a1 + v135[11]) = *(_QWORD *)((char *)a2 + v135[11]);
            v56 = a1;
            v57 = v8;
            v58 = 0;
            goto LABEL_132;
          case 1u:
            v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            switch(swift_getEnumCaseMultiPayload(a2, v23))
            {
              case 2u:
                v24 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a1, a2, v24);
                v25 = a1;
                v26 = v23;
                v27 = 2;
                goto LABEL_80;
              case 3u:
                v155 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v155 - 8) + 32))(a1, a2, v155);
                v25 = a1;
                v26 = v23;
                v27 = 3;
                goto LABEL_80;
              case 4u:
                v156 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v156 - 8) + 32))(a1, a2, v156);
                v25 = a1;
                v26 = v23;
                v27 = 4;
                goto LABEL_80;
              case 5u:
                v157 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(a1, a2, v157);
                v25 = a1;
                v26 = v23;
                v27 = 5;
                goto LABEL_80;
              case 6u:
                v158 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(a1, a2, v158);
                v25 = a1;
                v26 = v23;
                v27 = 6;
LABEL_80:
                swift_storeEnumTagMultiPayload(v25, v26, v27);
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
                break;
            }
            v159 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v160 = v159[5];
            v161 = (_OWORD *)((char *)a1 + v160);
            v162 = (_OWORD *)((char *)a2 + v160);
            v163 = v162[3];
            v161[2] = v162[2];
            v161[3] = v163;
            v164 = v162[1];
            *v161 = *v162;
            v161[1] = v164;
            *(_OWORD *)((char *)v161 + 106) = *(_OWORD *)((char *)v162 + 106);
            v165 = v162[6];
            v166 = v162[4];
            v161[5] = v162[5];
            v161[6] = v165;
            v161[4] = v166;
            *((_BYTE *)a1 + v159[6]) = *((_BYTE *)a2 + v159[6]);
            *((_BYTE *)a1 + v159[7]) = *((_BYTE *)a2 + v159[7]);
            *((_BYTE *)a1 + v159[8]) = *((_BYTE *)a2 + v159[8]);
            *((_BYTE *)a1 + v159[9]) = *((_BYTE *)a2 + v159[9]);
            *((_BYTE *)a1 + v159[10]) = *((_BYTE *)a2 + v159[10]);
            *(_QWORD *)((char *)a1 + v159[11]) = *(_QWORD *)((char *)a2 + v159[11]);
            v56 = a1;
            v57 = v8;
            v58 = 1;
            goto LABEL_132;
          case 2u:
            *a1 = *a2;
            v28 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v29 = (char *)a1 + v28;
            v30 = (char *)a2 + v28;
            v31 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v32 = *(_QWORD *)(v31 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
            {
              v33 = sub_10002A750(&qword_100644980);
              memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v30, v31))
              {
                case 2u:
                  v95 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v29, v30, v95);
                  v96 = v29;
                  v97 = v31;
                  v98 = 2;
                  goto LABEL_94;
                case 3u:
                  v179 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v179 - 8) + 32))(v29, v30, v179);
                  v96 = v29;
                  v97 = v31;
                  v98 = 3;
                  goto LABEL_94;
                case 4u:
                  v180 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 32))(v29, v30, v180);
                  v96 = v29;
                  v97 = v31;
                  v98 = 4;
                  goto LABEL_94;
                case 5u:
                  v181 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(v29, v30, v181);
                  v96 = v29;
                  v97 = v31;
                  v98 = 5;
                  goto LABEL_94;
                case 6u:
                  v182 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 32))(v29, v30, v182);
                  v96 = v29;
                  v97 = v31;
                  v98 = 6;
LABEL_94:
                  swift_storeEnumTagMultiPayload(v96, v97, v98);
                  break;
                default:
                  memcpy(v29, v30, *(_QWORD *)(v32 + 64));
                  break;
              }
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
            }
            v56 = a1;
            v57 = v8;
            v58 = 2;
            goto LABEL_132;
          case 3u:
            *a1 = *a2;
            v34 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v35 = (char *)a1 + v34;
            v36 = (char *)a2 + v34;
            v37 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v38 = *(_QWORD *)(v37 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
            {
              v39 = sub_10002A750(&qword_100644980);
              memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v36, v37))
              {
                case 2u:
                  v99 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v35, v36, v99);
                  v100 = v35;
                  v101 = v37;
                  v102 = 2;
                  goto LABEL_102;
                case 3u:
                  v183 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v35, v36, v183);
                  v100 = v35;
                  v101 = v37;
                  v102 = 3;
                  goto LABEL_102;
                case 4u:
                  v184 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v35, v36, v184);
                  v100 = v35;
                  v101 = v37;
                  v102 = 4;
                  goto LABEL_102;
                case 5u:
                  v185 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v35, v36, v185);
                  v100 = v35;
                  v101 = v37;
                  v102 = 5;
                  goto LABEL_102;
                case 6u:
                  v186 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v35, v36, v186);
                  v100 = v35;
                  v101 = v37;
                  v102 = 6;
LABEL_102:
                  swift_storeEnumTagMultiPayload(v100, v101, v102);
                  break;
                default:
                  memcpy(v35, v36, *(_QWORD *)(v38 + 64));
                  break;
              }
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
            }
            v56 = a1;
            v57 = v8;
            v58 = 3;
            goto LABEL_132;
          case 4u:
            *a1 = *a2;
            v40 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v41 = (char *)a1 + v40;
            v42 = (char *)a2 + v40;
            v43 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v44 = *(_QWORD *)(v43 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
            {
              v45 = sub_10002A750(&qword_100644980);
              memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v42, v43))
              {
                case 2u:
                  v103 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v41, v42, v103);
                  swift_storeEnumTagMultiPayload(v41, v43, 2);
                  break;
                case 3u:
                  v187 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v41, v42, v187);
                  swift_storeEnumTagMultiPayload(v41, v43, 3);
                  break;
                case 4u:
                  v188 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v41, v42, v188);
                  swift_storeEnumTagMultiPayload(v41, v43, 4);
                  break;
                case 5u:
                  v189 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(v41, v42, v189);
                  swift_storeEnumTagMultiPayload(v41, v43, 5);
                  break;
                case 6u:
                  v190 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 32))(v41, v42, v190);
                  swift_storeEnumTagMultiPayload(v41, v43, 6);
                  break;
                default:
                  memcpy(v41, v42, *(_QWORD *)(v44 + 64));
                  break;
              }
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
            }
            v56 = a1;
            v57 = v8;
            v58 = 4;
            goto LABEL_132;
          case 7u:
            v46 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
            v47 = *(_QWORD *)(v46 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v47 + 48))(a2, 1, v46))
            {
              v48 = sub_10002A750(&qword_100644600);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
            }
            else
            {
              *a1 = *a2;
              v104 = *(int *)(v46 + 20);
              v105 = (char *)a1 + v104;
              v106 = (char *)a2 + v104;
              v107 = type metadata accessor for REMHashtagLabelSpecifier(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v105, v106, v107);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(a1, 0, 1, v46);
            }
            v108 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
            v109 = (char *)a1 + v108;
            v110 = (char *)a2 + v108;
            *(_OWORD *)v109 = *(_OWORD *)v110;
            *((_QWORD *)v109 + 2) = *((_QWORD *)v110 + 2);
            v56 = a1;
            v57 = v8;
            v58 = 7;
            goto LABEL_132;
          case 8u:
            v49 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
            v50 = *(_QWORD *)(v49 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v50 + 48))(a2, 1, v49))
            {
              v51 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
            }
            else
            {
              v111 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(a1, a2, v111);
              *((_BYTE *)a1 + *(int *)(v49 + 20)) = *((_BYTE *)a2 + *(int *)(v49 + 20));
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v50 + 56))(a1, 0, 1, v49);
            }
            v112 = type metadata accessor for TTRTemplatePublicLinkData(0);
            *(_QWORD *)((char *)a1 + *(int *)(v112 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v112 + 20));
            v56 = a1;
            v57 = v8;
            v58 = 8;
            goto LABEL_132;
          case 9u:
            *(_BYTE *)a1 = *(_BYTE *)a2;
            v52 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
            v53 = (char *)a1 + v52;
            v54 = (char *)a2 + v52;
            v55 = type metadata accessor for AnyTip(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
            v56 = a1;
            v57 = v8;
            v58 = 9;
LABEL_132:
            swift_storeEnumTagMultiPayload(v56, v57, v58);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(v9 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      v203 = sub_10002A750(&qword_1006588F8);
      *(_QWORD *)((char *)a1 + *(int *)(v203 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v203 + 48));
      v204 = 1;
    }
    else
    {
      if (v10)
      {
        v12 = sub_10002A750((uint64_t *)&unk_100640EB0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(a2, v8))
        {
          case 0u:
            v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            switch(swift_getEnumCaseMultiPayload(a2, v18))
            {
              case 2u:
                v19 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
                v20 = a1;
                v21 = v18;
                v22 = 2;
                goto LABEL_73;
              case 3u:
                v143 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v143 - 8) + 32))(a1, a2, v143);
                v20 = a1;
                v21 = v18;
                v22 = 3;
                goto LABEL_73;
              case 4u:
                v144 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v144 - 8) + 32))(a1, a2, v144);
                v20 = a1;
                v21 = v18;
                v22 = 4;
                goto LABEL_73;
              case 5u:
                v145 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(a1, a2, v145);
                v20 = a1;
                v21 = v18;
                v22 = 5;
                goto LABEL_73;
              case 6u:
                v146 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(a1, a2, v146);
                v20 = a1;
                v21 = v18;
                v22 = 6;
LABEL_73:
                swift_storeEnumTagMultiPayload(v20, v21, v22);
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
                break;
            }
            v147 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v148 = v147[5];
            v149 = (_OWORD *)((char *)a1 + v148);
            v150 = (_OWORD *)((char *)a2 + v148);
            v151 = v150[3];
            v149[2] = v150[2];
            v149[3] = v151;
            v152 = v150[1];
            *v149 = *v150;
            v149[1] = v152;
            *(_OWORD *)((char *)v149 + 106) = *(_OWORD *)((char *)v150 + 106);
            v153 = v150[6];
            v154 = v150[4];
            v149[5] = v150[5];
            v149[6] = v153;
            v149[4] = v154;
            *((_BYTE *)a1 + v147[6]) = *((_BYTE *)a2 + v147[6]);
            *((_BYTE *)a1 + v147[7]) = *((_BYTE *)a2 + v147[7]);
            *((_BYTE *)a1 + v147[8]) = *((_BYTE *)a2 + v147[8]);
            *((_BYTE *)a1 + v147[9]) = *((_BYTE *)a2 + v147[9]);
            *((_BYTE *)a1 + v147[10]) = *((_BYTE *)a2 + v147[10]);
            *(_QWORD *)((char *)a1 + v147[11]) = *(_QWORD *)((char *)a2 + v147[11]);
            v92 = a1;
            v93 = v8;
            v94 = 0;
            goto LABEL_138;
          case 1u:
            v59 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            switch(swift_getEnumCaseMultiPayload(a2, v59))
            {
              case 2u:
                v60 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(a1, a2, v60);
                v61 = a1;
                v62 = v59;
                v63 = 2;
                goto LABEL_87;
              case 3u:
                v167 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v167 - 8) + 32))(a1, a2, v167);
                v61 = a1;
                v62 = v59;
                v63 = 3;
                goto LABEL_87;
              case 4u:
                v168 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v168 - 8) + 32))(a1, a2, v168);
                v61 = a1;
                v62 = v59;
                v63 = 4;
                goto LABEL_87;
              case 5u:
                v169 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v169 - 8) + 32))(a1, a2, v169);
                v61 = a1;
                v62 = v59;
                v63 = 5;
                goto LABEL_87;
              case 6u:
                v170 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(a1, a2, v170);
                v61 = a1;
                v62 = v59;
                v63 = 6;
LABEL_87:
                swift_storeEnumTagMultiPayload(v61, v62, v63);
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
                break;
            }
            v171 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v172 = v171[5];
            v173 = (_OWORD *)((char *)a1 + v172);
            v174 = (_OWORD *)((char *)a2 + v172);
            v175 = v174[3];
            v173[2] = v174[2];
            v173[3] = v175;
            v176 = v174[1];
            *v173 = *v174;
            v173[1] = v176;
            *(_OWORD *)((char *)v173 + 106) = *(_OWORD *)((char *)v174 + 106);
            v177 = v174[6];
            v178 = v174[4];
            v173[5] = v174[5];
            v173[6] = v177;
            v173[4] = v178;
            *((_BYTE *)a1 + v171[6]) = *((_BYTE *)a2 + v171[6]);
            *((_BYTE *)a1 + v171[7]) = *((_BYTE *)a2 + v171[7]);
            *((_BYTE *)a1 + v171[8]) = *((_BYTE *)a2 + v171[8]);
            *((_BYTE *)a1 + v171[9]) = *((_BYTE *)a2 + v171[9]);
            *((_BYTE *)a1 + v171[10]) = *((_BYTE *)a2 + v171[10]);
            *(_QWORD *)((char *)a1 + v171[11]) = *(_QWORD *)((char *)a2 + v171[11]);
            v92 = a1;
            v93 = v8;
            v94 = 1;
            goto LABEL_138;
          case 2u:
            *a1 = *a2;
            v64 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v65 = (char *)a1 + v64;
            v66 = (char *)a2 + v64;
            v67 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v68 = *(_QWORD *)(v67 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
            {
              v69 = sub_10002A750(&qword_100644980);
              memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v66, v67))
              {
                case 2u:
                  v113 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(v65, v66, v113);
                  v114 = v65;
                  v115 = v67;
                  v116 = 2;
                  goto LABEL_114;
                case 3u:
                  v191 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v65, v66, v191);
                  v114 = v65;
                  v115 = v67;
                  v116 = 3;
                  goto LABEL_114;
                case 4u:
                  v192 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32))(v65, v66, v192);
                  v114 = v65;
                  v115 = v67;
                  v116 = 4;
                  goto LABEL_114;
                case 5u:
                  v193 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v193 - 8) + 32))(v65, v66, v193);
                  v114 = v65;
                  v115 = v67;
                  v116 = 5;
                  goto LABEL_114;
                case 6u:
                  v194 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 32))(v65, v66, v194);
                  v114 = v65;
                  v115 = v67;
                  v116 = 6;
LABEL_114:
                  swift_storeEnumTagMultiPayload(v114, v115, v116);
                  break;
                default:
                  memcpy(v65, v66, *(_QWORD *)(v68 + 64));
                  break;
              }
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
            }
            v92 = a1;
            v93 = v8;
            v94 = 2;
            goto LABEL_138;
          case 3u:
            *a1 = *a2;
            v70 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v71 = (char *)a1 + v70;
            v72 = (char *)a2 + v70;
            v73 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v74 = *(_QWORD *)(v73 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
            {
              v75 = sub_10002A750(&qword_100644980);
              memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v72, v73))
              {
                case 2u:
                  v117 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v71, v72, v117);
                  v118 = v71;
                  v119 = v73;
                  v120 = 2;
                  goto LABEL_122;
                case 3u:
                  v195 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v71, v72, v195);
                  v118 = v71;
                  v119 = v73;
                  v120 = 3;
                  goto LABEL_122;
                case 4u:
                  v196 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v71, v72, v196);
                  v118 = v71;
                  v119 = v73;
                  v120 = 4;
                  goto LABEL_122;
                case 5u:
                  v197 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32))(v71, v72, v197);
                  v118 = v71;
                  v119 = v73;
                  v120 = 5;
                  goto LABEL_122;
                case 6u:
                  v198 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v71, v72, v198);
                  v118 = v71;
                  v119 = v73;
                  v120 = 6;
LABEL_122:
                  swift_storeEnumTagMultiPayload(v118, v119, v120);
                  break;
                default:
                  memcpy(v71, v72, *(_QWORD *)(v74 + 64));
                  break;
              }
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
            }
            v92 = a1;
            v93 = v8;
            v94 = 3;
            goto LABEL_138;
          case 4u:
            *a1 = *a2;
            v76 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v77 = (char *)a1 + v76;
            v78 = (char *)a2 + v76;
            v79 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v80 = *(_QWORD *)(v79 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
            {
              v81 = sub_10002A750(&qword_100644980);
              memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v78, v79))
              {
                case 2u:
                  v121 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v77, v78, v121);
                  swift_storeEnumTagMultiPayload(v77, v79, 2);
                  break;
                case 3u:
                  v199 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v77, v78, v199);
                  swift_storeEnumTagMultiPayload(v77, v79, 3);
                  break;
                case 4u:
                  v200 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v77, v78, v200);
                  swift_storeEnumTagMultiPayload(v77, v79, 4);
                  break;
                case 5u:
                  v201 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v77, v78, v201);
                  swift_storeEnumTagMultiPayload(v77, v79, 5);
                  break;
                case 6u:
                  v202 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v77, v78, v202);
                  swift_storeEnumTagMultiPayload(v77, v79, 6);
                  break;
                default:
                  memcpy(v77, v78, *(_QWORD *)(v80 + 64));
                  break;
              }
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
            }
            v92 = a1;
            v93 = v8;
            v94 = 4;
            goto LABEL_138;
          case 7u:
            v82 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
            v83 = *(_QWORD *)(v82 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v83 + 48))(a2, 1, v82))
            {
              v84 = sub_10002A750(&qword_100644600);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
            }
            else
            {
              *a1 = *a2;
              v122 = *(int *)(v82 + 20);
              v123 = (char *)a1 + v122;
              v124 = (char *)a2 + v122;
              v125 = type metadata accessor for REMHashtagLabelSpecifier(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 32))(v123, v124, v125);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v83 + 56))(a1, 0, 1, v82);
            }
            v126 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
            v127 = (char *)a1 + v126;
            v128 = (char *)a2 + v126;
            *(_OWORD *)v127 = *(_OWORD *)v128;
            *((_QWORD *)v127 + 2) = *((_QWORD *)v128 + 2);
            v92 = a1;
            v93 = v8;
            v94 = 7;
            goto LABEL_138;
          case 8u:
            v85 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
            v86 = *(_QWORD *)(v85 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v86 + 48))(a2, 1, v85))
            {
              v87 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
            }
            else
            {
              v129 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v129 - 8) + 32))(a1, a2, v129);
              *((_BYTE *)a1 + *(int *)(v85 + 20)) = *((_BYTE *)a2 + *(int *)(v85 + 20));
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v86 + 56))(a1, 0, 1, v85);
            }
            v130 = type metadata accessor for TTRTemplatePublicLinkData(0);
            *(_QWORD *)((char *)a1 + *(int *)(v130 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v130 + 20));
            v92 = a1;
            v93 = v8;
            v94 = 8;
            goto LABEL_138;
          case 9u:
            *(_BYTE *)a1 = *(_BYTE *)a2;
            v88 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
            v89 = (char *)a1 + v88;
            v90 = (char *)a2 + v88;
            v91 = type metadata accessor for AnyTip(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v89, v90, v91);
            v92 = a1;
            v93 = v8;
            v94 = 9;
LABEL_138:
            swift_storeEnumTagMultiPayload(v92, v93, v94);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(v9 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      v204 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v6, v204);
    v205 = *(int *)(a3 + 20);
    v206 = (_QWORD *)((char *)a1 + v205);
    v207 = (_QWORD *)((char *)a2 + v205);
    sub_10001F544((uint64_t)a1 + v205, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    switch(swift_getEnumCaseMultiPayload(v207, v8))
    {
      case 0u:
        v208 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v207, v208))
        {
          case 2u:
            v209 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v209 - 8) + 32))(v206, v207, v209);
            v210 = v206;
            v211 = v208;
            v212 = 2;
            goto LABEL_173;
          case 3u:
            v270 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v270 - 8) + 32))(v206, v207, v270);
            v210 = v206;
            v211 = v208;
            v212 = 3;
            goto LABEL_173;
          case 4u:
            v271 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v271 - 8) + 32))(v206, v207, v271);
            v210 = v206;
            v211 = v208;
            v212 = 4;
            goto LABEL_173;
          case 5u:
            v272 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v272 - 8) + 32))(v206, v207, v272);
            v210 = v206;
            v211 = v208;
            v212 = 5;
            goto LABEL_173;
          case 6u:
            v273 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v273 - 8) + 32))(v206, v207, v273);
            v210 = v206;
            v211 = v208;
            v212 = 6;
LABEL_173:
            swift_storeEnumTagMultiPayload(v210, v211, v212);
            break;
          default:
            memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v208 - 8) + 64));
            break;
        }
        v274 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v275 = v274[5];
        v276 = (_OWORD *)((char *)v206 + v275);
        v277 = (_OWORD *)((char *)v207 + v275);
        v278 = v277[3];
        v276[2] = v277[2];
        v276[3] = v278;
        v279 = v277[1];
        *v276 = *v277;
        v276[1] = v279;
        *(_OWORD *)((char *)v276 + 106) = *(_OWORD *)((char *)v277 + 106);
        v280 = v277[6];
        v281 = v277[4];
        v276[5] = v277[5];
        v276[6] = v280;
        v276[4] = v281;
        *((_BYTE *)v206 + v274[6]) = *((_BYTE *)v207 + v274[6]);
        *((_BYTE *)v206 + v274[7]) = *((_BYTE *)v207 + v274[7]);
        *((_BYTE *)v206 + v274[8]) = *((_BYTE *)v207 + v274[8]);
        *((_BYTE *)v206 + v274[9]) = *((_BYTE *)v207 + v274[9]);
        *((_BYTE *)v206 + v274[10]) = *((_BYTE *)v207 + v274[10]);
        *(_QWORD *)((char *)v206 + v274[11]) = *(_QWORD *)((char *)v207 + v274[11]);
        v246 = v206;
        v247 = v8;
        v248 = 0;
        goto LABEL_206;
      case 1u:
        v213 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v207, v213))
        {
          case 2u:
            v214 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v214 - 8) + 32))(v206, v207, v214);
            v215 = v206;
            v216 = v213;
            v217 = 2;
            goto LABEL_180;
          case 3u:
            v282 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v282 - 8) + 32))(v206, v207, v282);
            v215 = v206;
            v216 = v213;
            v217 = 3;
            goto LABEL_180;
          case 4u:
            v283 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v283 - 8) + 32))(v206, v207, v283);
            v215 = v206;
            v216 = v213;
            v217 = 4;
            goto LABEL_180;
          case 5u:
            v284 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v284 - 8) + 32))(v206, v207, v284);
            v215 = v206;
            v216 = v213;
            v217 = 5;
            goto LABEL_180;
          case 6u:
            v285 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v285 - 8) + 32))(v206, v207, v285);
            v215 = v206;
            v216 = v213;
            v217 = 6;
LABEL_180:
            swift_storeEnumTagMultiPayload(v215, v216, v217);
            break;
          default:
            memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v213 - 8) + 64));
            break;
        }
        v286 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v287 = v286[5];
        v288 = (_OWORD *)((char *)v206 + v287);
        v289 = (_OWORD *)((char *)v207 + v287);
        v290 = v289[3];
        v288[2] = v289[2];
        v288[3] = v290;
        v291 = v289[1];
        *v288 = *v289;
        v288[1] = v291;
        *(_OWORD *)((char *)v288 + 106) = *(_OWORD *)((char *)v289 + 106);
        v292 = v289[6];
        v293 = v289[4];
        v288[5] = v289[5];
        v288[6] = v292;
        v288[4] = v293;
        *((_BYTE *)v206 + v286[6]) = *((_BYTE *)v207 + v286[6]);
        *((_BYTE *)v206 + v286[7]) = *((_BYTE *)v207 + v286[7]);
        *((_BYTE *)v206 + v286[8]) = *((_BYTE *)v207 + v286[8]);
        *((_BYTE *)v206 + v286[9]) = *((_BYTE *)v207 + v286[9]);
        *((_BYTE *)v206 + v286[10]) = *((_BYTE *)v207 + v286[10]);
        *(_QWORD *)((char *)v206 + v286[11]) = *(_QWORD *)((char *)v207 + v286[11]);
        v246 = v206;
        v247 = v8;
        v248 = 1;
        goto LABEL_206;
      case 2u:
        *v206 = *v207;
        v218 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v219 = (char *)v206 + v218;
        v220 = (char *)v207 + v218;
        v221 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v222 = *(_QWORD *)(v221 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v222 + 48))(v220, 1, v221))
        {
          v223 = sub_10002A750(&qword_100644980);
          memcpy(v219, v220, *(_QWORD *)(*(_QWORD *)(v223 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v220, v221))
          {
            case 2u:
              v249 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v249 - 8) + 32))(v219, v220, v249);
              v250 = v219;
              v251 = v221;
              v252 = 2;
              goto LABEL_187;
            case 3u:
              v294 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v294 - 8) + 32))(v219, v220, v294);
              v250 = v219;
              v251 = v221;
              v252 = 3;
              goto LABEL_187;
            case 4u:
              v295 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v295 - 8) + 32))(v219, v220, v295);
              v250 = v219;
              v251 = v221;
              v252 = 4;
              goto LABEL_187;
            case 5u:
              v296 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v296 - 8) + 32))(v219, v220, v296);
              v250 = v219;
              v251 = v221;
              v252 = 5;
              goto LABEL_187;
            case 6u:
              v297 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v297 - 8) + 32))(v219, v220, v297);
              v250 = v219;
              v251 = v221;
              v252 = 6;
LABEL_187:
              swift_storeEnumTagMultiPayload(v250, v251, v252);
              break;
            default:
              memcpy(v219, v220, *(_QWORD *)(v222 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v222 + 56))(v219, 0, 1, v221);
        }
        v246 = v206;
        v247 = v8;
        v248 = 2;
        goto LABEL_206;
      case 3u:
        *v206 = *v207;
        v224 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v225 = (char *)v206 + v224;
        v226 = (char *)v207 + v224;
        v227 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v228 = *(_QWORD *)(v227 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v228 + 48))(v226, 1, v227))
        {
          v229 = sub_10002A750(&qword_100644980);
          memcpy(v225, v226, *(_QWORD *)(*(_QWORD *)(v229 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v226, v227))
          {
            case 2u:
              v253 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v253 - 8) + 32))(v225, v226, v253);
              v254 = v225;
              v255 = v227;
              v256 = 2;
              goto LABEL_195;
            case 3u:
              v298 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v298 - 8) + 32))(v225, v226, v298);
              v254 = v225;
              v255 = v227;
              v256 = 3;
              goto LABEL_195;
            case 4u:
              v299 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v299 - 8) + 32))(v225, v226, v299);
              v254 = v225;
              v255 = v227;
              v256 = 4;
              goto LABEL_195;
            case 5u:
              v300 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v300 - 8) + 32))(v225, v226, v300);
              v254 = v225;
              v255 = v227;
              v256 = 5;
              goto LABEL_195;
            case 6u:
              v301 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v301 - 8) + 32))(v225, v226, v301);
              v254 = v225;
              v255 = v227;
              v256 = 6;
LABEL_195:
              swift_storeEnumTagMultiPayload(v254, v255, v256);
              break;
            default:
              memcpy(v225, v226, *(_QWORD *)(v228 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v228 + 56))(v225, 0, 1, v227);
        }
        v246 = v206;
        v247 = v8;
        v248 = 3;
        goto LABEL_206;
      case 4u:
        *v206 = *v207;
        v230 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v231 = (char *)v206 + v230;
        v232 = (char *)v207 + v230;
        v233 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v234 = *(_QWORD *)(v233 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v234 + 48))(v232, 1, v233))
        {
          v235 = sub_10002A750(&qword_100644980);
          memcpy(v231, v232, *(_QWORD *)(*(_QWORD *)(v235 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v232, v233))
          {
            case 2u:
              v257 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v257 - 8) + 32))(v231, v232, v257);
              v258 = v231;
              v259 = v233;
              v260 = 2;
              goto LABEL_203;
            case 3u:
              v302 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v302 - 8) + 32))(v231, v232, v302);
              v258 = v231;
              v259 = v233;
              v260 = 3;
              goto LABEL_203;
            case 4u:
              v303 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v303 - 8) + 32))(v231, v232, v303);
              v258 = v231;
              v259 = v233;
              v260 = 4;
              goto LABEL_203;
            case 5u:
              v304 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v304 - 8) + 32))(v231, v232, v304);
              v258 = v231;
              v259 = v233;
              v260 = 5;
              goto LABEL_203;
            case 6u:
              v305 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v305 - 8) + 32))(v231, v232, v305);
              v258 = v231;
              v259 = v233;
              v260 = 6;
LABEL_203:
              swift_storeEnumTagMultiPayload(v258, v259, v260);
              break;
            default:
              memcpy(v231, v232, *(_QWORD *)(v234 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v234 + 56))(v231, 0, 1, v233);
        }
        v246 = v206;
        v247 = v8;
        v248 = 4;
        goto LABEL_206;
      case 7u:
        v236 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v237 = *(_QWORD *)(v236 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v237 + 48))(v207, 1, v236))
        {
          v238 = sub_10002A750(&qword_100644600);
          memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v238 - 8) + 64));
        }
        else
        {
          *v206 = *v207;
          v261 = *(int *)(v236 + 20);
          v262 = (char *)v206 + v261;
          v263 = (char *)v207 + v261;
          v264 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v264 - 8) + 32))(v262, v263, v264);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v237 + 56))(v206, 0, 1, v236);
        }
        v265 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v266 = (char *)v206 + v265;
        v267 = (char *)v207 + v265;
        *(_OWORD *)v266 = *(_OWORD *)v267;
        *((_QWORD *)v266 + 2) = *((_QWORD *)v267 + 2);
        v246 = v206;
        v247 = v8;
        v248 = 7;
        goto LABEL_206;
      case 8u:
        v239 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v240 = *(_QWORD *)(v239 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v240 + 48))(v207, 1, v239))
        {
          v241 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v241 - 8) + 64));
        }
        else
        {
          v268 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v268 - 8) + 32))(v206, v207, v268);
          *((_BYTE *)v206 + *(int *)(v239 + 20)) = *((_BYTE *)v207 + *(int *)(v239 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v240 + 56))(v206, 0, 1, v239);
        }
        v269 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)v206 + *(int *)(v269 + 20)) = *(_QWORD *)((char *)v207 + *(int *)(v269 + 20));
        v246 = v206;
        v247 = v8;
        v248 = 8;
        goto LABEL_206;
      case 9u:
        *(_BYTE *)v206 = *(_BYTE *)v207;
        v242 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v243 = (char *)v206 + v242;
        v244 = (char *)v207 + v242;
        v245 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v245 - 8) + 32))(v243, v244, v245);
        v246 = v206;
        v247 = v8;
        v248 = 9;
LABEL_206:
        swift_storeEnumTagMultiPayload(v246, v247, v248);
        break;
      default:
        memcpy(v206, v207, *(_QWORD *)(v9 + 64));
        break;
    }
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_1003B5C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003B5C3C);
}

uint64_t sub_1003B5C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = sub_10002A750(&qword_10064B6B0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t sub_1003B5CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003B5D00);
}

uint64_t sub_1003B5D00(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_10002A750(&qword_10064B6B0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

void sub_1003B5DA8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  sub_1003B5E34(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for TTRRemindersListViewModel.Item(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = "\b";
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

void sub_1003B5E34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_100658AC0)
  {
    v2 = type metadata accessor for TTRRemindersListViewModel.Item(255);
    v3 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
    v4 = type metadata accessor for TTRTreeStorageTemporaryNodeLocation(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_100658AC0);
  }
}

char *sub_1003B5EAC(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void **v36;
  void **v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(void **, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void **v45;
  void **v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(void **, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void **v54;
  void **v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(void **, uint64_t, uint64_t);
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  void **v81;
  void **v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int (*v85)(void **, uint64_t, uint64_t);
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  void **v90;
  void **v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int (*v94)(void **, uint64_t, uint64_t);
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  void **v99;
  void **v100;
  uint64_t v101;
  uint64_t v102;
  unsigned int (*v103)(void **, uint64_t, uint64_t);
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  id v126;
  void **v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  id v131;
  void **v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  id v136;
  void **v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  void (*v144)(char *, char *, uint64_t, __n128);
  __n128 v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  _QWORD *v150;
  uint64_t v151;
  void *v152;
  id v153;
  void *v154;
  id v155;
  void **v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  id v160;
  void **v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  id v165;
  void **v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  void (*v173)(char *, char *, uint64_t, __n128);
  __n128 v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  _QWORD *v179;
  uint64_t v180;
  void *v181;
  id v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  char *v194;
  char *v195;
  int *v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  void *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  int v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  void *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  void *v215;
  id v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  char *v227;
  char *v228;
  int *v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  void *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  int v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  void *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  void *v250;
  id v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  char *v261;
  char *v262;
  char *v263;
  int *v264;
  uint64_t v265;
  char *v266;
  char *v267;
  uint64_t v268;
  void *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  int v273;
  __int128 v274;
  __int128 v275;
  __int128 v276;
  __int128 v277;
  void *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  void *v283;
  id v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  char *v290;
  char *v291;
  char *v292;
  char *v293;
  int *v294;
  uint64_t v295;
  char *v296;
  char *v297;
  uint64_t v298;
  void *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  int v304;
  __int128 v305;
  __int128 v306;
  __int128 v307;
  __int128 v308;
  void *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  void *v315;
  id v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  void *v322;
  id v323;
  void *v324;
  id v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  void *v330;
  id v331;
  void *v332;
  id v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  void *v339;
  id v340;
  void *v341;
  id v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  void *v348;
  id v349;
  void *v350;
  id v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  void *v356;
  id v357;
  void *v358;
  id v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  void *v365;
  id v366;
  void *v367;
  id v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  void **v374;
  void **v375;
  uint64_t v376;
  void *v377;
  id v378;
  void **v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  void *v383;
  id v384;
  void **v385;
  uint64_t v386;
  uint64_t v387;
  void *v388;
  uint64_t v389;
  void **v390;
  void **v391;
  uint64_t v392;
  uint64_t v393;
  unsigned int (*v394)(void **, uint64_t, uint64_t);
  id v395;
  uint64_t v396;
  void *v397;
  uint64_t v398;
  void **v399;
  void **v400;
  uint64_t v401;
  uint64_t v402;
  unsigned int (*v403)(void **, uint64_t, uint64_t);
  id v404;
  uint64_t v405;
  void *v406;
  uint64_t v407;
  void **v408;
  void **v409;
  uint64_t v410;
  uint64_t v411;
  unsigned int (*v412)(void **, uint64_t, uint64_t);
  id v413;
  uint64_t v414;
  void *v415;
  id v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  char *v421;
  char *v422;
  uint64_t v423;
  void *v424;
  id v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  void *v429;
  id v430;
  void **v431;
  uint64_t v432;
  uint64_t v433;
  void *v434;
  id v435;
  void **v436;
  uint64_t v437;
  uint64_t v438;
  void *v439;
  id v440;
  void **v441;
  uint64_t v442;
  uint64_t v443;
  void *v444;
  uint64_t v445;
  char *v446;
  void **v447;
  uint64_t v448;
  void (*v449)(char *, char *, uint64_t, __n128);
  __n128 v450;
  uint64_t v451;
  uint64_t v452;
  _QWORD *v453;
  _QWORD *v454;
  uint64_t v455;
  void *v456;
  id v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  void *v465;
  id v466;
  void *v467;
  id v468;
  int *v469;
  uint64_t v470;
  char *v471;
  char *v472;
  uint64_t v473;
  void *v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  int v480;
  __int128 v481;
  __int128 v482;
  __int128 v483;
  __int128 v484;
  uint64_t v485;
  void *v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  void *v493;
  id v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  void *v500;
  id v501;
  void *v502;
  id v503;
  int *v504;
  uint64_t v505;
  char *v506;
  char *v507;
  uint64_t v508;
  void *v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  int v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  uint64_t v520;
  void *v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  void *v528;
  id v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  void *v535;
  id v536;
  void *v537;
  id v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  void *v544;
  id v545;
  void *v546;
  id v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  void *v553;
  id v554;
  void *v555;
  id v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  unsigned __int8 v561;
  uint64_t v562;
  unsigned __int8 v563;
  uint64_t v564;
  unsigned __int8 v565;
  uint64_t v566;
  unsigned __int8 v567;
  uint64_t v568;
  char *v569;
  char *v570;
  uint64_t v571;
  char v572;
  uint64_t v573;
  char v574;
  uint64_t v575;
  char v576;
  uint64_t v577;
  char v578;
  uint64_t v579;
  uint64_t v580;
  unsigned __int8 v581;
  char v582;
  unsigned __int8 v583;
  char v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  char *v591;
  void **v592;
  void **v593;
  char *v594;
  char *v595;
  char *v596;
  char *v597;
  char *v598;
  char *v599;
  char *v600;
  char *v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v13[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v7 = sub_10002A750(&qword_10064B6B0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v7);
    v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v10 = *(_QWORD *)(v9 - 8);
    v11 = (*(uint64_t (**)(char **, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9);
    if (EnumCaseMultiPayload == 1)
    {
      if (v11)
      {
        v12 = sub_10002A750((uint64_t *)&unk_100640EB0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(a2, v9))
        {
          case 0u:
            v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v602 = v9;
            v585 = v10;
            switch(swift_getEnumCaseMultiPayload(a2, v16))
            {
              case 1u:
                v17 = *a2;
                *(_QWORD *)a1 = *a2;
                v18 = v17;
                v19 = a1;
                v20 = v16;
                v21 = 1;
                goto LABEL_81;
              case 2u:
                v187 = type metadata accessor for Date(0);
                (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(a1, a2, v187);
                v19 = a1;
                v20 = v16;
                v21 = 2;
                goto LABEL_81;
              case 3u:
                v188 = type metadata accessor for Date(0);
                (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(a1, a2, v188);
                v19 = a1;
                v20 = v16;
                v21 = 3;
                goto LABEL_81;
              case 4u:
                v189 = type metadata accessor for Date(0);
                (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v189 - 8) + 16))(a1, a2, v189);
                v19 = a1;
                v20 = v16;
                v21 = 4;
                goto LABEL_81;
              case 5u:
                v190 = type metadata accessor for Date(0);
                (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(a1, a2, v190);
                v19 = a1;
                v20 = v16;
                v21 = 5;
                goto LABEL_81;
              case 6u:
                v191 = type metadata accessor for Date(0);
                (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(a1, a2, v191);
                v19 = a1;
                v20 = v16;
                v21 = 6;
                goto LABEL_81;
              case 8u:
                v192 = *a2;
                *(_QWORD *)a1 = *a2;
                v193 = v192;
                v19 = a1;
                v20 = v16;
                v21 = 8;
                goto LABEL_81;
              case 9u:
                v194 = *a2;
                *(_QWORD *)a1 = *a2;
                v195 = v194;
                v19 = a1;
                v20 = v16;
                v21 = 9;
LABEL_81:
                swift_storeEnumTagMultiPayload(v19, v20, v21);
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
                break;
            }
            v196 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v197 = v196[5];
            v198 = &a1[v197];
            v199 = (char *)a2 + v197;
            v200 = *(uint64_t *)((char *)a2 + v197 + 8);
            if (v200)
            {
              v596 = a1;
              *(_QWORD *)v198 = *(_QWORD *)v199;
              *((_QWORD *)v198 + 1) = v200;
              v201 = (void *)*((_QWORD *)v199 + 2);
              v202 = *((_QWORD *)v199 + 3);
              v204 = *((_QWORD *)v199 + 4);
              v203 = *((_QWORD *)v199 + 5);
              v571 = *((_QWORD *)v199 + 6);
              v557 = *((_QWORD *)v199 + 7);
              v561 = v199[64];
              swift_bridgeObjectRetain(v200);
              sub_10003E1F0(v201, v202, v204, v203, v571, v557, v561);
              *((_QWORD *)v198 + 2) = v201;
              *((_QWORD *)v198 + 3) = v202;
              *((_QWORD *)v198 + 4) = v204;
              *((_QWORD *)v198 + 5) = v203;
              *((_QWORD *)v198 + 6) = v571;
              *((_QWORD *)v198 + 7) = v557;
              v198[64] = v561;
              *(_DWORD *)(v198 + 65) = *(_DWORD *)(v199 + 65);
              v205 = v199[120];
              if (v205 == 255)
              {
                v206 = *(_OWORD *)(v199 + 88);
                *(_OWORD *)(v198 + 72) = *(_OWORD *)(v199 + 72);
                *(_OWORD *)(v198 + 88) = v206;
                *(_OWORD *)(v198 + 104) = *(_OWORD *)(v199 + 104);
                v198[120] = v199[120];
              }
              else
              {
                v572 = v205 & 1;
                v210 = (void *)*((_QWORD *)v199 + 9);
                v211 = *((_QWORD *)v199 + 10);
                v213 = *((_QWORD *)v199 + 11);
                v212 = *((_QWORD *)v199 + 12);
                v558 = *((_QWORD *)v199 + 14);
                v562 = *((_QWORD *)v199 + 13);
                sub_10002B764(v210, v211, v213, v212, v562, v558, v205 & 1);
                *((_QWORD *)v198 + 9) = v210;
                *((_QWORD *)v198 + 10) = v211;
                *((_QWORD *)v198 + 11) = v213;
                *((_QWORD *)v198 + 12) = v212;
                *((_QWORD *)v198 + 13) = v562;
                *((_QWORD *)v198 + 14) = v558;
                v198[120] = v572;
              }
              a1 = v596;
              v9 = v602;
              v198[121] = v199[121];
            }
            else
            {
              v207 = *((_OWORD *)v199 + 5);
              *((_OWORD *)v198 + 4) = *((_OWORD *)v199 + 4);
              *((_OWORD *)v198 + 5) = v207;
              *((_OWORD *)v198 + 6) = *((_OWORD *)v199 + 6);
              *(_OWORD *)(v198 + 106) = *(_OWORD *)(v199 + 106);
              v208 = *((_OWORD *)v199 + 1);
              *(_OWORD *)v198 = *(_OWORD *)v199;
              *((_OWORD *)v198 + 1) = v208;
              v209 = *((_OWORD *)v199 + 3);
              *((_OWORD *)v198 + 2) = *((_OWORD *)v199 + 2);
              *((_OWORD *)v198 + 3) = v209;
            }
            a1[v196[6]] = *((_BYTE *)a2 + v196[6]);
            a1[v196[7]] = *((_BYTE *)a2 + v196[7]);
            a1[v196[8]] = *((_BYTE *)a2 + v196[8]);
            a1[v196[9]] = *((_BYTE *)a2 + v196[9]);
            a1[v196[10]] = *((_BYTE *)a2 + v196[10]);
            v214 = v196[11];
            v215 = *(char **)((char *)a2 + v214);
            *(_QWORD *)&a1[v214] = v215;
            v216 = v215;
            v217 = a1;
            v218 = v9;
            v219 = 0;
            goto LABEL_121;
          case 1u:
            v28 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v604 = v9;
            v585 = v10;
            switch(swift_getEnumCaseMultiPayload(a2, v28))
            {
              case 1u:
                v29 = *a2;
                *(_QWORD *)a1 = *a2;
                v30 = v29;
                v31 = a1;
                v32 = v28;
                v33 = 1;
                goto LABEL_113;
              case 2u:
                v255 = type metadata accessor for Date(0);
                (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v255 - 8) + 16))(a1, a2, v255);
                v31 = a1;
                v32 = v28;
                v33 = 2;
                goto LABEL_113;
              case 3u:
                v256 = type metadata accessor for Date(0);
                (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v256 - 8) + 16))(a1, a2, v256);
                v31 = a1;
                v32 = v28;
                v33 = 3;
                goto LABEL_113;
              case 4u:
                v257 = type metadata accessor for Date(0);
                (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v257 - 8) + 16))(a1, a2, v257);
                v31 = a1;
                v32 = v28;
                v33 = 4;
                goto LABEL_113;
              case 5u:
                v258 = type metadata accessor for Date(0);
                (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v258 - 8) + 16))(a1, a2, v258);
                v31 = a1;
                v32 = v28;
                v33 = 5;
                goto LABEL_113;
              case 6u:
                v259 = type metadata accessor for Date(0);
                (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v259 - 8) + 16))(a1, a2, v259);
                v31 = a1;
                v32 = v28;
                v33 = 6;
                goto LABEL_113;
              case 8u:
                v260 = *a2;
                *(_QWORD *)a1 = *a2;
                v261 = v260;
                v31 = a1;
                v32 = v28;
                v33 = 8;
                goto LABEL_113;
              case 9u:
                v262 = *a2;
                *(_QWORD *)a1 = *a2;
                v263 = v262;
                v31 = a1;
                v32 = v28;
                v33 = 9;
LABEL_113:
                swift_storeEnumTagMultiPayload(v31, v32, v33);
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
                break;
            }
            v264 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v265 = v264[5];
            v266 = &a1[v265];
            v267 = (char *)a2 + v265;
            v268 = *(uint64_t *)((char *)a2 + v265 + 8);
            if (v268)
            {
              v598 = a1;
              *(_QWORD *)v266 = *(_QWORD *)v267;
              *((_QWORD *)v266 + 1) = v268;
              v269 = (void *)*((_QWORD *)v267 + 2);
              v270 = *((_QWORD *)v267 + 3);
              v272 = *((_QWORD *)v267 + 4);
              v271 = *((_QWORD *)v267 + 5);
              v575 = *((_QWORD *)v267 + 6);
              v559 = *((_QWORD *)v267 + 7);
              v565 = v267[64];
              swift_bridgeObjectRetain(v268);
              sub_10003E1F0(v269, v270, v272, v271, v575, v559, v565);
              *((_QWORD *)v266 + 2) = v269;
              *((_QWORD *)v266 + 3) = v270;
              *((_QWORD *)v266 + 4) = v272;
              *((_QWORD *)v266 + 5) = v271;
              *((_QWORD *)v266 + 6) = v575;
              *((_QWORD *)v266 + 7) = v559;
              v266[64] = v565;
              *(_DWORD *)(v266 + 65) = *(_DWORD *)(v267 + 65);
              v273 = v267[120];
              if (v273 == 255)
              {
                v274 = *(_OWORD *)(v267 + 88);
                *(_OWORD *)(v266 + 72) = *(_OWORD *)(v267 + 72);
                *(_OWORD *)(v266 + 88) = v274;
                *(_OWORD *)(v266 + 104) = *(_OWORD *)(v267 + 104);
                v266[120] = v267[120];
              }
              else
              {
                v576 = v273 & 1;
                v278 = (void *)*((_QWORD *)v267 + 9);
                v279 = *((_QWORD *)v267 + 10);
                v281 = *((_QWORD *)v267 + 11);
                v280 = *((_QWORD *)v267 + 12);
                v560 = *((_QWORD *)v267 + 14);
                v566 = *((_QWORD *)v267 + 13);
                sub_10002B764(v278, v279, v281, v280, v566, v560, v273 & 1);
                *((_QWORD *)v266 + 9) = v278;
                *((_QWORD *)v266 + 10) = v279;
                *((_QWORD *)v266 + 11) = v281;
                *((_QWORD *)v266 + 12) = v280;
                *((_QWORD *)v266 + 13) = v566;
                *((_QWORD *)v266 + 14) = v560;
                v266[120] = v576;
              }
              a1 = v598;
              v9 = v604;
              v266[121] = v267[121];
            }
            else
            {
              v275 = *((_OWORD *)v267 + 5);
              *((_OWORD *)v266 + 4) = *((_OWORD *)v267 + 4);
              *((_OWORD *)v266 + 5) = v275;
              *((_OWORD *)v266 + 6) = *((_OWORD *)v267 + 6);
              *(_OWORD *)(v266 + 106) = *(_OWORD *)(v267 + 106);
              v276 = *((_OWORD *)v267 + 1);
              *(_OWORD *)v266 = *(_OWORD *)v267;
              *((_OWORD *)v266 + 1) = v276;
              v277 = *((_OWORD *)v267 + 3);
              *((_OWORD *)v266 + 2) = *((_OWORD *)v267 + 2);
              *((_OWORD *)v266 + 3) = v277;
            }
            a1[v264[6]] = *((_BYTE *)a2 + v264[6]);
            a1[v264[7]] = *((_BYTE *)a2 + v264[7]);
            a1[v264[8]] = *((_BYTE *)a2 + v264[8]);
            a1[v264[9]] = *((_BYTE *)a2 + v264[9]);
            a1[v264[10]] = *((_BYTE *)a2 + v264[10]);
            v282 = v264[11];
            v283 = *(char **)((char *)a2 + v282);
            *(_QWORD *)&a1[v282] = v283;
            v284 = v283;
            v217 = a1;
            v218 = v9;
            v219 = 1;
LABEL_121:
            swift_storeEnumTagMultiPayload(v217, v218, v219);
            v10 = v585;
            break;
          case 2u:
            v587 = v10;
            v605 = v9;
            v34 = *a2;
            *(_QWORD *)a1 = *a2;
            v35 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v36 = (void **)&a1[v35];
            v37 = (void **)((char *)a2 + v35);
            v38 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v39 = *(_QWORD *)(v38 - 8);
            v40 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v39 + 48);
            v41 = v34;
            if (v40(v37, 1, v38))
            {
              v42 = sub_10002A750(&qword_100644980);
              memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
              v9 = v605;
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v37, v38))
              {
                case 1u:
                  v125 = *v37;
                  *v36 = *v37;
                  v126 = v125;
                  v127 = v36;
                  v128 = v38;
                  v129 = 1;
                  goto LABEL_146;
                case 2u:
                  v317 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v317 - 8) + 16))(v36, v37, v317);
                  v127 = v36;
                  v128 = v38;
                  v129 = 2;
                  goto LABEL_146;
                case 3u:
                  v318 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v318 - 8) + 16))(v36, v37, v318);
                  v127 = v36;
                  v128 = v38;
                  v129 = 3;
                  goto LABEL_146;
                case 4u:
                  v319 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v319 - 8) + 16))(v36, v37, v319);
                  v127 = v36;
                  v128 = v38;
                  v129 = 4;
                  goto LABEL_146;
                case 5u:
                  v320 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v320 - 8) + 16))(v36, v37, v320);
                  v127 = v36;
                  v128 = v38;
                  v129 = 5;
                  goto LABEL_146;
                case 6u:
                  v321 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v321 - 8) + 16))(v36, v37, v321);
                  v127 = v36;
                  v128 = v38;
                  v129 = 6;
                  goto LABEL_146;
                case 8u:
                  v322 = *v37;
                  *v36 = *v37;
                  v323 = v322;
                  v127 = v36;
                  v128 = v38;
                  v129 = 8;
                  goto LABEL_146;
                case 9u:
                  v324 = *v37;
                  *v36 = *v37;
                  v325 = v324;
                  v127 = v36;
                  v128 = v38;
                  v129 = 9;
LABEL_146:
                  swift_storeEnumTagMultiPayload(v127, v128, v129);
                  break;
                default:
                  memcpy(v36, v37, *(_QWORD *)(v39 + 64));
                  break;
              }
              v9 = v605;
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
            }
            v10 = v587;
            v63 = a1;
            v64 = v9;
            v65 = 2;
            goto LABEL_200;
          case 3u:
            v588 = v10;
            v606 = v9;
            v43 = *a2;
            *(_QWORD *)a1 = *a2;
            v44 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v45 = (void **)&a1[v44];
            v46 = (void **)((char *)a2 + v44);
            v47 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v48 = *(_QWORD *)(v47 - 8);
            v49 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v48 + 48);
            v50 = v43;
            if (v49(v46, 1, v47))
            {
              v51 = sub_10002A750(&qword_100644980);
              memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
              v9 = v606;
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v46, v47))
              {
                case 1u:
                  v130 = *v46;
                  *v45 = *v46;
                  v131 = v130;
                  v132 = v45;
                  v133 = v47;
                  v134 = 1;
                  goto LABEL_197;
                case 2u:
                  v326 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v326 - 8) + 16))(v45, v46, v326);
                  v132 = v45;
                  v133 = v47;
                  v134 = 2;
                  goto LABEL_197;
                case 3u:
                  v327 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v327 - 8) + 16))(v45, v46, v327);
                  v132 = v45;
                  v133 = v47;
                  v134 = 3;
                  goto LABEL_197;
                case 4u:
                  v328 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v328 - 8) + 16))(v45, v46, v328);
                  v132 = v45;
                  v133 = v47;
                  v134 = 4;
                  goto LABEL_197;
                case 5u:
                  v369 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v369 - 8) + 16))(v45, v46, v369);
                  v132 = v45;
                  v133 = v47;
                  v134 = 5;
                  goto LABEL_197;
                case 6u:
                  v329 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v329 - 8) + 16))(v45, v46, v329);
                  v132 = v45;
                  v133 = v47;
                  v134 = 6;
                  goto LABEL_197;
                case 8u:
                  v330 = *v46;
                  *v45 = *v46;
                  v331 = v330;
                  v132 = v45;
                  v133 = v47;
                  v134 = 8;
                  goto LABEL_197;
                case 9u:
                  v332 = *v46;
                  *v45 = *v46;
                  v333 = v332;
                  v132 = v45;
                  v133 = v47;
                  v134 = 9;
LABEL_197:
                  swift_storeEnumTagMultiPayload(v132, v133, v134);
                  break;
                default:
                  memcpy(v45, v46, *(_QWORD *)(v48 + 64));
                  break;
              }
              v9 = v606;
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
            }
            v10 = v588;
            v63 = a1;
            v64 = v9;
            v65 = 3;
            goto LABEL_200;
          case 4u:
            v589 = v10;
            v607 = v9;
            v52 = *a2;
            *(_QWORD *)a1 = *a2;
            v53 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v54 = (void **)&a1[v53];
            v55 = (void **)((char *)a2 + v53);
            v56 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v57 = *(_QWORD *)(v56 - 8);
            v58 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v57 + 48);
            v59 = v52;
            if (v58(v55, 1, v56))
            {
              v60 = sub_10002A750(&qword_100644980);
              memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
              v9 = v607;
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v55, v56))
              {
                case 1u:
                  v135 = *v55;
                  *v54 = *v55;
                  v136 = v135;
                  v137 = v54;
                  v138 = v56;
                  v139 = 1;
                  goto LABEL_164;
                case 2u:
                  v334 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v334 - 8) + 16))(v54, v55, v334);
                  v137 = v54;
                  v138 = v56;
                  v139 = 2;
                  goto LABEL_164;
                case 3u:
                  v335 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v335 - 8) + 16))(v54, v55, v335);
                  v137 = v54;
                  v138 = v56;
                  v139 = 3;
                  goto LABEL_164;
                case 4u:
                  v336 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v336 - 8) + 16))(v54, v55, v336);
                  v137 = v54;
                  v138 = v56;
                  v139 = 4;
                  goto LABEL_164;
                case 5u:
                  v337 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v337 - 8) + 16))(v54, v55, v337);
                  v137 = v54;
                  v138 = v56;
                  v139 = 5;
                  goto LABEL_164;
                case 6u:
                  v338 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v338 - 8) + 16))(v54, v55, v338);
                  v137 = v54;
                  v138 = v56;
                  v139 = 6;
                  goto LABEL_164;
                case 8u:
                  v339 = *v55;
                  *v54 = *v55;
                  v340 = v339;
                  v137 = v54;
                  v138 = v56;
                  v139 = 8;
                  goto LABEL_164;
                case 9u:
                  v341 = *v55;
                  *v54 = *v55;
                  v342 = v341;
                  v137 = v54;
                  v138 = v56;
                  v139 = 9;
LABEL_164:
                  swift_storeEnumTagMultiPayload(v137, v138, v139);
                  break;
                default:
                  memcpy(v54, v55, *(_QWORD *)(v57 + 64));
                  break;
              }
              v9 = v607;
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
            }
            v10 = v589;
            v63 = a1;
            v64 = v9;
            v65 = 4;
            goto LABEL_200;
          case 5u:
            *(_QWORD *)a1 = *a2;
            a1[8] = *((_BYTE *)a2 + 8);
            *(_WORD *)(a1 + 9) = *(_WORD *)((char *)a2 + 9);
            v61 = a2[2];
            *((_QWORD *)a1 + 2) = v61;
            v62 = v61;
            v63 = a1;
            v64 = v9;
            v65 = 5;
            goto LABEL_200;
          case 6u:
            v115 = *a2;
            *(_QWORD *)a1 = *a2;
            v116 = v115;
            v63 = a1;
            v64 = v9;
            v65 = 6;
            goto LABEL_200;
          case 7u:
            v66 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
            v67 = *(_QWORD *)(v66 - 8);
            if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v67 + 48))(a2, 1, v66))
            {
              v68 = sub_10002A750(&qword_100644600);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
            }
            else
            {
              v140 = *a2;
              *(_QWORD *)a1 = *a2;
              v141 = *(int *)(v66 + 20);
              v569 = &a1[v141];
              v612 = v9;
              v142 = (char *)a2 + v141;
              v594 = a1;
              v143 = type metadata accessor for REMHashtagLabelSpecifier(0);
              v144 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v143 - 8) + 16);
              v145 = swift_bridgeObjectRetain(v140);
              v146 = v142;
              v147 = v143;
              a1 = v594;
              v9 = v612;
              v144(v569, v146, v147, v145);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v594, 0, 1, v66);
            }
            v148 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
            v149 = &a1[v148];
            v150 = (char **)((char *)a2 + v148);
            v151 = v150[1];
            if (v151)
            {
              *(_QWORD *)v149 = *v150;
              *((_QWORD *)v149 + 1) = v151;
              v152 = (void *)v150[2];
              *((_QWORD *)v149 + 2) = v152;
              swift_bridgeObjectRetain(v151);
              v153 = v152;
            }
            else
            {
              *(_OWORD *)v149 = *(_OWORD *)v150;
              *((_QWORD *)v149 + 2) = v150[2];
            }
            v63 = a1;
            v64 = v9;
            v65 = 7;
            goto LABEL_200;
          case 8u:
            v117 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
            v118 = *(_QWORD *)(v117 - 8);
            if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v118 + 48))(a2, 1, v117))
            {
              v119 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
            }
            else
            {
              v183 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(a1, a2, v183);
              a1[*(int *)(v117 + 20)] = *((_BYTE *)a2 + *(int *)(v117 + 20));
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v118 + 56))(a1, 0, 1, v117);
            }
            v184 = type metadata accessor for TTRTemplatePublicLinkData(0);
            *(_QWORD *)&a1[*(int *)(v184 + 20)] = *(char **)((char *)a2 + *(int *)(v184 + 20));
            v63 = a1;
            v64 = v9;
            v65 = 8;
            goto LABEL_200;
          case 9u:
            *a1 = *(_BYTE *)a2;
            v69 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
            v70 = &a1[v69];
            v71 = (char *)a2 + v69;
            v72 = type metadata accessor for AnyTip(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v70, v71, v72);
            v63 = a1;
            v64 = v9;
            v65 = 9;
LABEL_200:
            swift_storeEnumTagMultiPayload(v63, v64, v65);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(v10 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      v370 = sub_10002A750(&qword_1006588F8);
      *(_QWORD *)&a1[*(int *)(v370 + 48)] = *(char **)((char *)a2 + *(int *)(v370 + 48));
      v371 = 1;
    }
    else
    {
      if (v11)
      {
        v15 = sub_10002A750((uint64_t *)&unk_100640EB0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(a2, v9))
        {
          case 0u:
            v22 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v603 = v9;
            v586 = v10;
            switch(swift_getEnumCaseMultiPayload(a2, v22))
            {
              case 1u:
                v23 = *a2;
                *(_QWORD *)a1 = *a2;
                v24 = v23;
                v25 = a1;
                v26 = v22;
                v27 = 1;
                goto LABEL_97;
              case 2u:
                v220 = type metadata accessor for Date(0);
                (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v220 - 8) + 16))(a1, a2, v220);
                v25 = a1;
                v26 = v22;
                v27 = 2;
                goto LABEL_97;
              case 3u:
                v221 = type metadata accessor for Date(0);
                (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v221 - 8) + 16))(a1, a2, v221);
                v25 = a1;
                v26 = v22;
                v27 = 3;
                goto LABEL_97;
              case 4u:
                v222 = type metadata accessor for Date(0);
                (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v222 - 8) + 16))(a1, a2, v222);
                v25 = a1;
                v26 = v22;
                v27 = 4;
                goto LABEL_97;
              case 5u:
                v223 = type metadata accessor for Date(0);
                (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v223 - 8) + 16))(a1, a2, v223);
                v25 = a1;
                v26 = v22;
                v27 = 5;
                goto LABEL_97;
              case 6u:
                v224 = type metadata accessor for Date(0);
                (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v224 - 8) + 16))(a1, a2, v224);
                v25 = a1;
                v26 = v22;
                v27 = 6;
                goto LABEL_97;
              case 8u:
                v225 = *a2;
                *(_QWORD *)a1 = *a2;
                v226 = v225;
                v25 = a1;
                v26 = v22;
                v27 = 8;
                goto LABEL_97;
              case 9u:
                v227 = *a2;
                *(_QWORD *)a1 = *a2;
                v228 = v227;
                v25 = a1;
                v26 = v22;
                v27 = 9;
LABEL_97:
                swift_storeEnumTagMultiPayload(v25, v26, v27);
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
                break;
            }
            v229 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v230 = v229[5];
            v231 = &a1[v230];
            v232 = (char *)a2 + v230;
            v233 = *(uint64_t *)((char *)a2 + v230 + 8);
            if (v233)
            {
              v580 = v7;
              v597 = a1;
              *(_QWORD *)v231 = *(_QWORD *)v232;
              *((_QWORD *)v231 + 1) = v233;
              v234 = (void *)*((_QWORD *)v232 + 2);
              v235 = *((_QWORD *)v232 + 3);
              v237 = *((_QWORD *)v232 + 4);
              v236 = *((_QWORD *)v232 + 5);
              v238 = *((_QWORD *)v232 + 6);
              v573 = *((_QWORD *)v232 + 7);
              v563 = v232[64];
              swift_bridgeObjectRetain(v233);
              sub_10003E1F0(v234, v235, v237, v236, v238, v573, v563);
              *((_QWORD *)v231 + 2) = v234;
              *((_QWORD *)v231 + 3) = v235;
              *((_QWORD *)v231 + 4) = v237;
              *((_QWORD *)v231 + 5) = v236;
              *((_QWORD *)v231 + 6) = v238;
              *((_QWORD *)v231 + 7) = v573;
              v231[64] = v563;
              *(_DWORD *)(v231 + 65) = *(_DWORD *)(v232 + 65);
              v239 = v232[120];
              if (v239 == 255)
              {
                v240 = *(_OWORD *)(v232 + 88);
                *(_OWORD *)(v231 + 72) = *(_OWORD *)(v232 + 72);
                *(_OWORD *)(v231 + 88) = v240;
                *(_OWORD *)(v231 + 104) = *(_OWORD *)(v232 + 104);
                v231[120] = v232[120];
              }
              else
              {
                v574 = v239 & 1;
                v244 = (void *)*((_QWORD *)v232 + 9);
                v245 = *((_QWORD *)v232 + 10);
                v247 = *((_QWORD *)v232 + 11);
                v246 = *((_QWORD *)v232 + 12);
                v248 = *((_QWORD *)v232 + 13);
                v564 = *((_QWORD *)v232 + 14);
                sub_10002B764(v244, v245, v247, v246, v248, v564, v239 & 1);
                *((_QWORD *)v231 + 9) = v244;
                *((_QWORD *)v231 + 10) = v245;
                *((_QWORD *)v231 + 11) = v247;
                *((_QWORD *)v231 + 12) = v246;
                *((_QWORD *)v231 + 13) = v248;
                *((_QWORD *)v231 + 14) = v564;
                v231[120] = v574;
              }
              a1 = v597;
              v9 = v603;
              v7 = v580;
              v231[121] = v232[121];
            }
            else
            {
              v241 = *((_OWORD *)v232 + 5);
              *((_OWORD *)v231 + 4) = *((_OWORD *)v232 + 4);
              *((_OWORD *)v231 + 5) = v241;
              *((_OWORD *)v231 + 6) = *((_OWORD *)v232 + 6);
              *(_OWORD *)(v231 + 106) = *(_OWORD *)(v232 + 106);
              v242 = *((_OWORD *)v232 + 1);
              *(_OWORD *)v231 = *(_OWORD *)v232;
              *((_OWORD *)v231 + 1) = v242;
              v243 = *((_OWORD *)v232 + 3);
              *((_OWORD *)v231 + 2) = *((_OWORD *)v232 + 2);
              *((_OWORD *)v231 + 3) = v243;
            }
            a1[v229[6]] = *((_BYTE *)a2 + v229[6]);
            a1[v229[7]] = *((_BYTE *)a2 + v229[7]);
            a1[v229[8]] = *((_BYTE *)a2 + v229[8]);
            a1[v229[9]] = *((_BYTE *)a2 + v229[9]);
            a1[v229[10]] = *((_BYTE *)a2 + v229[10]);
            v249 = v229[11];
            v250 = *(char **)((char *)a2 + v249);
            *(_QWORD *)&a1[v249] = v250;
            v251 = v250;
            v252 = a1;
            v253 = v9;
            v254 = 0;
            goto LABEL_207;
          case 1u:
            v73 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v608 = v9;
            v579 = v7;
            v586 = v10;
            switch(swift_getEnumCaseMultiPayload(a2, v73))
            {
              case 1u:
                v74 = *a2;
                *(_QWORD *)a1 = *a2;
                v75 = v74;
                v76 = a1;
                v77 = v73;
                v78 = 1;
                goto LABEL_130;
              case 2u:
                v285 = type metadata accessor for Date(0);
                (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v285 - 8) + 16))(a1, a2, v285);
                v76 = a1;
                v77 = v73;
                v78 = 2;
                goto LABEL_130;
              case 3u:
                v286 = type metadata accessor for Date(0);
                (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v286 - 8) + 16))(a1, a2, v286);
                v76 = a1;
                v77 = v73;
                v78 = 3;
                goto LABEL_130;
              case 4u:
                v287 = type metadata accessor for Date(0);
                (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v287 - 8) + 16))(a1, a2, v287);
                v76 = a1;
                v77 = v73;
                v78 = 4;
                goto LABEL_130;
              case 5u:
                v288 = type metadata accessor for Date(0);
                (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v288 - 8) + 16))(a1, a2, v288);
                v76 = a1;
                v77 = v73;
                v78 = 5;
                goto LABEL_130;
              case 6u:
                v289 = type metadata accessor for Date(0);
                (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v289 - 8) + 16))(a1, a2, v289);
                v76 = a1;
                v77 = v73;
                v78 = 6;
                goto LABEL_130;
              case 8u:
                v290 = *a2;
                *(_QWORD *)a1 = *a2;
                v291 = v290;
                v76 = a1;
                v77 = v73;
                v78 = 8;
                goto LABEL_130;
              case 9u:
                v292 = *a2;
                *(_QWORD *)a1 = *a2;
                v293 = v292;
                v76 = a1;
                v77 = v73;
                v78 = 9;
LABEL_130:
                swift_storeEnumTagMultiPayload(v76, v77, v78);
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
                break;
            }
            v294 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v295 = v294[5];
            v296 = &a1[v295];
            v297 = (char *)a2 + v295;
            v298 = *(uint64_t *)((char *)a2 + v295 + 8);
            if (v298)
            {
              v599 = a1;
              *(_QWORD *)v296 = *(_QWORD *)v297;
              *((_QWORD *)v296 + 1) = v298;
              v299 = (void *)*((_QWORD *)v297 + 2);
              v300 = *((_QWORD *)v297 + 3);
              v302 = *((_QWORD *)v297 + 4);
              v301 = *((_QWORD *)v297 + 5);
              v303 = *((_QWORD *)v297 + 6);
              v577 = *((_QWORD *)v297 + 7);
              v567 = v297[64];
              swift_bridgeObjectRetain(v298);
              sub_10003E1F0(v299, v300, v302, v301, v303, v577, v567);
              *((_QWORD *)v296 + 2) = v299;
              *((_QWORD *)v296 + 3) = v300;
              *((_QWORD *)v296 + 4) = v302;
              *((_QWORD *)v296 + 5) = v301;
              *((_QWORD *)v296 + 6) = v303;
              *((_QWORD *)v296 + 7) = v577;
              v296[64] = v567;
              *(_DWORD *)(v296 + 65) = *(_DWORD *)(v297 + 65);
              v304 = v297[120];
              if (v304 == 255)
              {
                v305 = *(_OWORD *)(v297 + 88);
                *(_OWORD *)(v296 + 72) = *(_OWORD *)(v297 + 72);
                *(_OWORD *)(v296 + 88) = v305;
                *(_OWORD *)(v296 + 104) = *(_OWORD *)(v297 + 104);
                v296[120] = v297[120];
              }
              else
              {
                v578 = v304 & 1;
                v309 = (void *)*((_QWORD *)v297 + 9);
                v310 = *((_QWORD *)v297 + 10);
                v312 = *((_QWORD *)v297 + 11);
                v311 = *((_QWORD *)v297 + 12);
                v313 = *((_QWORD *)v297 + 13);
                v568 = *((_QWORD *)v297 + 14);
                sub_10002B764(v309, v310, v312, v311, v313, v568, v304 & 1);
                *((_QWORD *)v296 + 9) = v309;
                *((_QWORD *)v296 + 10) = v310;
                *((_QWORD *)v296 + 11) = v312;
                *((_QWORD *)v296 + 12) = v311;
                *((_QWORD *)v296 + 13) = v313;
                *((_QWORD *)v296 + 14) = v568;
                v296[120] = v578;
              }
              a1 = v599;
              v9 = v608;
              v7 = v579;
              v296[121] = v297[121];
            }
            else
            {
              v306 = *((_OWORD *)v297 + 5);
              *((_OWORD *)v296 + 4) = *((_OWORD *)v297 + 4);
              *((_OWORD *)v296 + 5) = v306;
              *((_OWORD *)v296 + 6) = *((_OWORD *)v297 + 6);
              *(_OWORD *)(v296 + 106) = *(_OWORD *)(v297 + 106);
              v307 = *((_OWORD *)v297 + 1);
              *(_OWORD *)v296 = *(_OWORD *)v297;
              *((_OWORD *)v296 + 1) = v307;
              v308 = *((_OWORD *)v297 + 3);
              *((_OWORD *)v296 + 2) = *((_OWORD *)v297 + 2);
              *((_OWORD *)v296 + 3) = v308;
            }
            a1[v294[6]] = *((_BYTE *)a2 + v294[6]);
            a1[v294[7]] = *((_BYTE *)a2 + v294[7]);
            a1[v294[8]] = *((_BYTE *)a2 + v294[8]);
            a1[v294[9]] = *((_BYTE *)a2 + v294[9]);
            a1[v294[10]] = *((_BYTE *)a2 + v294[10]);
            v314 = v294[11];
            v315 = *(char **)((char *)a2 + v314);
            *(_QWORD *)&a1[v314] = v315;
            v316 = v315;
            v252 = a1;
            v253 = v9;
            v254 = 1;
            goto LABEL_207;
          case 2u:
            v586 = v10;
            v609 = v9;
            v79 = *a2;
            *(_QWORD *)a1 = *a2;
            v80 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v81 = (void **)&a1[v80];
            v82 = (void **)((char *)a2 + v80);
            v83 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v84 = *(_QWORD *)(v83 - 8);
            v85 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v84 + 48);
            v86 = v79;
            if (v85(v82, 1, v83))
            {
              v87 = sub_10002A750(&qword_100644980);
              memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
              v9 = v609;
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v82, v83))
              {
                case 1u:
                  v154 = *v82;
                  *v81 = *v82;
                  v155 = v154;
                  v156 = v81;
                  v157 = v83;
                  v158 = 1;
                  goto LABEL_175;
                case 2u:
                  v343 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v343 - 8) + 16))(v81, v82, v343);
                  v156 = v81;
                  v157 = v83;
                  v158 = 2;
                  goto LABEL_175;
                case 3u:
                  v344 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v344 - 8) + 16))(v81, v82, v344);
                  v156 = v81;
                  v157 = v83;
                  v158 = 3;
                  goto LABEL_175;
                case 4u:
                  v345 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v345 - 8) + 16))(v81, v82, v345);
                  v156 = v81;
                  v157 = v83;
                  v158 = 4;
                  goto LABEL_175;
                case 5u:
                  v346 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v346 - 8) + 16))(v81, v82, v346);
                  v156 = v81;
                  v157 = v83;
                  v158 = 5;
                  goto LABEL_175;
                case 6u:
                  v347 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v347 - 8) + 16))(v81, v82, v347);
                  v156 = v81;
                  v157 = v83;
                  v158 = 6;
                  goto LABEL_175;
                case 8u:
                  v348 = *v82;
                  *v81 = *v82;
                  v349 = v348;
                  v156 = v81;
                  v157 = v83;
                  v158 = 8;
                  goto LABEL_175;
                case 9u:
                  v350 = *v82;
                  *v81 = *v82;
                  v351 = v350;
                  v156 = v81;
                  v157 = v83;
                  v158 = 9;
LABEL_175:
                  swift_storeEnumTagMultiPayload(v156, v157, v158);
                  break;
                default:
                  memcpy(v81, v82, *(_QWORD *)(v84 + 64));
                  break;
              }
              v9 = v609;
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
            }
            v252 = a1;
            v253 = v9;
            v254 = 2;
            goto LABEL_207;
          case 3u:
            v586 = v10;
            v610 = v9;
            v88 = *a2;
            *(_QWORD *)a1 = *a2;
            v89 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v90 = (void **)&a1[v89];
            v91 = (void **)((char *)a2 + v89);
            v92 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v93 = *(_QWORD *)(v92 - 8);
            v94 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v93 + 48);
            v95 = v88;
            if (v94(v91, 1, v92))
            {
              v96 = sub_10002A750(&qword_100644980);
              memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
              v9 = v610;
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v91, v92))
              {
                case 1u:
                  v159 = *v91;
                  *v90 = *v91;
                  v160 = v159;
                  v161 = v90;
                  v162 = v92;
                  v163 = 1;
                  goto LABEL_204;
                case 2u:
                  v352 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v352 - 8) + 16))(v90, v91, v352);
                  v161 = v90;
                  v162 = v92;
                  v163 = 2;
                  goto LABEL_204;
                case 3u:
                  v353 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v353 - 8) + 16))(v90, v91, v353);
                  v161 = v90;
                  v162 = v92;
                  v163 = 3;
                  goto LABEL_204;
                case 4u:
                  v354 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v354 - 8) + 16))(v90, v91, v354);
                  v161 = v90;
                  v162 = v92;
                  v163 = 4;
                  goto LABEL_204;
                case 5u:
                  v372 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v372 - 8) + 16))(v90, v91, v372);
                  v161 = v90;
                  v162 = v92;
                  v163 = 5;
                  goto LABEL_204;
                case 6u:
                  v355 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v355 - 8) + 16))(v90, v91, v355);
                  v161 = v90;
                  v162 = v92;
                  v163 = 6;
                  goto LABEL_204;
                case 8u:
                  v356 = *v91;
                  *v90 = *v91;
                  v357 = v356;
                  v161 = v90;
                  v162 = v92;
                  v163 = 8;
                  goto LABEL_204;
                case 9u:
                  v358 = *v91;
                  *v90 = *v91;
                  v359 = v358;
                  v161 = v90;
                  v162 = v92;
                  v163 = 9;
LABEL_204:
                  swift_storeEnumTagMultiPayload(v161, v162, v163);
                  break;
                default:
                  memcpy(v90, v91, *(_QWORD *)(v93 + 64));
                  break;
              }
              v9 = v610;
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v93 + 56))(v90, 0, 1, v92);
            }
            v252 = a1;
            v253 = v9;
            v254 = 3;
LABEL_207:
            swift_storeEnumTagMultiPayload(v252, v253, v254);
            v10 = v586;
            break;
          case 4u:
            v590 = v10;
            v611 = v9;
            v97 = *a2;
            *(_QWORD *)a1 = *a2;
            v98 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v99 = (void **)&a1[v98];
            v100 = (void **)((char *)a2 + v98);
            v101 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v102 = *(_QWORD *)(v101 - 8);
            v103 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v102 + 48);
            v104 = v97;
            if (v103(v100, 1, v101))
            {
              v105 = sub_10002A750(&qword_100644980);
              memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
              v9 = v611;
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v100, v101))
              {
                case 1u:
                  v164 = *v100;
                  *v99 = *v100;
                  v165 = v164;
                  v166 = v99;
                  v167 = v101;
                  v168 = 1;
                  goto LABEL_193;
                case 2u:
                  v360 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v360 - 8) + 16))(v99, v100, v360);
                  v166 = v99;
                  v167 = v101;
                  v168 = 2;
                  goto LABEL_193;
                case 3u:
                  v361 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v361 - 8) + 16))(v99, v100, v361);
                  v166 = v99;
                  v167 = v101;
                  v168 = 3;
                  goto LABEL_193;
                case 4u:
                  v362 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v362 - 8) + 16))(v99, v100, v362);
                  v166 = v99;
                  v167 = v101;
                  v168 = 4;
                  goto LABEL_193;
                case 5u:
                  v363 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v363 - 8) + 16))(v99, v100, v363);
                  v166 = v99;
                  v167 = v101;
                  v168 = 5;
                  goto LABEL_193;
                case 6u:
                  v364 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v364 - 8) + 16))(v99, v100, v364);
                  v166 = v99;
                  v167 = v101;
                  v168 = 6;
                  goto LABEL_193;
                case 8u:
                  v365 = *v100;
                  *v99 = *v100;
                  v366 = v365;
                  v166 = v99;
                  v167 = v101;
                  v168 = 8;
                  goto LABEL_193;
                case 9u:
                  v367 = *v100;
                  *v99 = *v100;
                  v368 = v367;
                  v166 = v99;
                  v167 = v101;
                  v168 = 9;
LABEL_193:
                  swift_storeEnumTagMultiPayload(v166, v167, v168);
                  break;
                default:
                  memcpy(v99, v100, *(_QWORD *)(v102 + 64));
                  break;
              }
              v9 = v611;
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v102 + 56))(v99, 0, 1, v101);
            }
            v10 = v590;
            swift_storeEnumTagMultiPayload(a1, v9, 4);
            break;
          case 5u:
            *(_QWORD *)a1 = *a2;
            a1[8] = *((_BYTE *)a2 + 8);
            *(_WORD *)(a1 + 9) = *(_WORD *)((char *)a2 + 9);
            v106 = a2[2];
            *((_QWORD *)a1 + 2) = v106;
            v107 = v106;
            swift_storeEnumTagMultiPayload(a1, v9, 5);
            break;
          case 6u:
            v120 = *a2;
            *(_QWORD *)a1 = *a2;
            v121 = v120;
            swift_storeEnumTagMultiPayload(a1, v9, 6);
            break;
          case 7u:
            v108 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
            v109 = *(_QWORD *)(v108 - 8);
            if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v109 + 48))(a2, 1, v108))
            {
              v110 = sub_10002A750(&qword_100644600);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
            }
            else
            {
              v169 = *a2;
              *(_QWORD *)a1 = *a2;
              v170 = *(int *)(v108 + 20);
              v570 = &a1[v170];
              v613 = v9;
              v171 = (char *)a2 + v170;
              v595 = a1;
              v172 = type metadata accessor for REMHashtagLabelSpecifier(0);
              v173 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v172 - 8) + 16);
              v174 = swift_bridgeObjectRetain(v169);
              v175 = v171;
              v176 = v172;
              a1 = v595;
              v9 = v613;
              v173(v570, v175, v176, v174);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v595, 0, 1, v108);
            }
            v177 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
            v178 = &a1[v177];
            v179 = (char **)((char *)a2 + v177);
            v180 = v179[1];
            if (v180)
            {
              *(_QWORD *)v178 = *v179;
              *((_QWORD *)v178 + 1) = v180;
              v181 = (void *)v179[2];
              *((_QWORD *)v178 + 2) = v181;
              swift_bridgeObjectRetain(v180);
              v182 = v181;
            }
            else
            {
              *(_OWORD *)v178 = *(_OWORD *)v179;
              *((_QWORD *)v178 + 2) = v179[2];
            }
            swift_storeEnumTagMultiPayload(a1, v9, 7);
            break;
          case 8u:
            v122 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
            v123 = *(_QWORD *)(v122 - 8);
            if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v123 + 48))(a2, 1, v122))
            {
              v124 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
            }
            else
            {
              v185 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(a1, a2, v185);
              a1[*(int *)(v122 + 20)] = *((_BYTE *)a2 + *(int *)(v122 + 20));
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v123 + 56))(a1, 0, 1, v122);
            }
            v186 = type metadata accessor for TTRTemplatePublicLinkData(0);
            *(_QWORD *)&a1[*(int *)(v186 + 20)] = *(char **)((char *)a2 + *(int *)(v186 + 20));
            swift_storeEnumTagMultiPayload(a1, v9, 8);
            break;
          case 9u:
            *a1 = *(_BYTE *)a2;
            v111 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
            v112 = &a1[v111];
            v113 = (char *)a2 + v111;
            v114 = type metadata accessor for AnyTip(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 16))(v112, v113, v114);
            swift_storeEnumTagMultiPayload(a1, v9, 9);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(v10 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      v371 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v7, v371);
    v373 = *(int *)(a3 + 20);
    v374 = (void **)&a1[v373];
    v375 = (void **)((char *)a2 + v373);
    switch(swift_getEnumCaseMultiPayload(v375, v9))
    {
      case 0u:
        v376 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v600 = a1;
        v614 = v9;
        switch(swift_getEnumCaseMultiPayload(v375, v376))
        {
          case 1u:
            v377 = *v375;
            *v374 = *v375;
            v378 = v377;
            v379 = v374;
            v380 = v376;
            v381 = 1;
            goto LABEL_250;
          case 2u:
            v460 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v460 - 8) + 16))(v374, v375, v460);
            v379 = v374;
            v380 = v376;
            v381 = 2;
            goto LABEL_250;
          case 3u:
            v461 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v461 - 8) + 16))(v374, v375, v461);
            v379 = v374;
            v380 = v376;
            v381 = 3;
            goto LABEL_250;
          case 4u:
            v462 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v462 - 8) + 16))(v374, v375, v462);
            v379 = v374;
            v380 = v376;
            v381 = 4;
            goto LABEL_250;
          case 5u:
            v463 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v463 - 8) + 16))(v374, v375, v463);
            v379 = v374;
            v380 = v376;
            v381 = 5;
            goto LABEL_250;
          case 6u:
            v464 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v464 - 8) + 16))(v374, v375, v464);
            v379 = v374;
            v380 = v376;
            v381 = 6;
            goto LABEL_250;
          case 8u:
            v465 = *v375;
            *v374 = *v375;
            v466 = v465;
            v379 = v374;
            v380 = v376;
            v381 = 8;
            goto LABEL_250;
          case 9u:
            v467 = *v375;
            *v374 = *v375;
            v468 = v467;
            v379 = v374;
            v380 = v376;
            v381 = 9;
LABEL_250:
            swift_storeEnumTagMultiPayload(v379, v380, v381);
            break;
          default:
            memcpy(v374, v375, *(_QWORD *)(*(_QWORD *)(v376 - 8) + 64));
            break;
        }
        v469 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v470 = v469[5];
        v471 = (char *)v374 + v470;
        v472 = (char *)v375 + v470;
        v473 = *(uint64_t *)((char *)v375 + v470 + 8);
        if (v473)
        {
          v592 = v374;
          *(_QWORD *)v471 = *(_QWORD *)v472;
          *((_QWORD *)v471 + 1) = v473;
          v474 = (void *)*((_QWORD *)v472 + 2);
          v475 = *((_QWORD *)v472 + 3);
          v476 = *((_QWORD *)v472 + 4);
          v477 = *((_QWORD *)v472 + 5);
          v478 = *((_QWORD *)v472 + 6);
          v479 = *((_QWORD *)v472 + 7);
          v581 = v472[64];
          swift_bridgeObjectRetain(v473);
          sub_10003E1F0(v474, v475, v476, v477, v478, v479, v581);
          *((_QWORD *)v471 + 2) = v474;
          *((_QWORD *)v471 + 3) = v475;
          *((_QWORD *)v471 + 4) = v476;
          *((_QWORD *)v471 + 5) = v477;
          *((_QWORD *)v471 + 6) = v478;
          *((_QWORD *)v471 + 7) = v479;
          v471[64] = v581;
          *(_DWORD *)(v471 + 65) = *(_DWORD *)(v472 + 65);
          v480 = v472[120];
          if (v480 == 255)
          {
            v481 = *(_OWORD *)(v472 + 88);
            *(_OWORD *)(v471 + 72) = *(_OWORD *)(v472 + 72);
            *(_OWORD *)(v471 + 88) = v481;
            *(_OWORD *)(v471 + 104) = *(_OWORD *)(v472 + 104);
            v471[120] = v472[120];
          }
          else
          {
            v582 = v480 & 1;
            v486 = (void *)*((_QWORD *)v472 + 9);
            v487 = *((_QWORD *)v472 + 10);
            v488 = *((_QWORD *)v472 + 11);
            v489 = *((_QWORD *)v472 + 12);
            v490 = *((_QWORD *)v472 + 13);
            v491 = *((_QWORD *)v472 + 14);
            sub_10002B764(v486, v487, v488, v489, v490, v491, v480 & 1);
            *((_QWORD *)v471 + 9) = v486;
            *((_QWORD *)v471 + 10) = v487;
            *((_QWORD *)v471 + 11) = v488;
            *((_QWORD *)v471 + 12) = v489;
            *((_QWORD *)v471 + 13) = v490;
            *((_QWORD *)v471 + 14) = v491;
            v471[120] = v582;
          }
          a1 = v600;
          v485 = v614;
          v471[121] = v472[121];
          v374 = v592;
        }
        else
        {
          v482 = *((_OWORD *)v472 + 5);
          *((_OWORD *)v471 + 4) = *((_OWORD *)v472 + 4);
          *((_OWORD *)v471 + 5) = v482;
          *((_OWORD *)v471 + 6) = *((_OWORD *)v472 + 6);
          *(_OWORD *)(v471 + 106) = *(_OWORD *)(v472 + 106);
          v483 = *((_OWORD *)v472 + 1);
          *(_OWORD *)v471 = *(_OWORD *)v472;
          *((_OWORD *)v471 + 1) = v483;
          v484 = *((_OWORD *)v472 + 3);
          *((_OWORD *)v471 + 2) = *((_OWORD *)v472 + 2);
          *((_OWORD *)v471 + 3) = v484;
          v485 = v9;
        }
        *((_BYTE *)v374 + v469[6]) = *((_BYTE *)v375 + v469[6]);
        *((_BYTE *)v374 + v469[7]) = *((_BYTE *)v375 + v469[7]);
        *((_BYTE *)v374 + v469[8]) = *((_BYTE *)v375 + v469[8]);
        *((_BYTE *)v374 + v469[9]) = *((_BYTE *)v375 + v469[9]);
        *((_BYTE *)v374 + v469[10]) = *((_BYTE *)v375 + v469[10]);
        v492 = v469[11];
        v493 = *(void **)((char *)v375 + v492);
        *(void **)((char *)v374 + v492) = v493;
        v494 = v493;
        swift_storeEnumTagMultiPayload(v374, v485, 0);
        break;
      case 1u:
        v382 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v601 = a1;
        v615 = v9;
        switch(swift_getEnumCaseMultiPayload(v375, v382))
        {
          case 1u:
            v383 = *v375;
            *v374 = *v375;
            v384 = v383;
            v385 = v374;
            v386 = v382;
            v387 = 1;
            goto LABEL_266;
          case 2u:
            v495 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v495 - 8) + 16))(v374, v375, v495);
            v385 = v374;
            v386 = v382;
            v387 = 2;
            goto LABEL_266;
          case 3u:
            v496 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v496 - 8) + 16))(v374, v375, v496);
            v385 = v374;
            v386 = v382;
            v387 = 3;
            goto LABEL_266;
          case 4u:
            v497 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v497 - 8) + 16))(v374, v375, v497);
            v385 = v374;
            v386 = v382;
            v387 = 4;
            goto LABEL_266;
          case 5u:
            v498 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v498 - 8) + 16))(v374, v375, v498);
            v385 = v374;
            v386 = v382;
            v387 = 5;
            goto LABEL_266;
          case 6u:
            v499 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v499 - 8) + 16))(v374, v375, v499);
            v385 = v374;
            v386 = v382;
            v387 = 6;
            goto LABEL_266;
          case 8u:
            v500 = *v375;
            *v374 = *v375;
            v501 = v500;
            v385 = v374;
            v386 = v382;
            v387 = 8;
            goto LABEL_266;
          case 9u:
            v502 = *v375;
            *v374 = *v375;
            v503 = v502;
            v385 = v374;
            v386 = v382;
            v387 = 9;
LABEL_266:
            swift_storeEnumTagMultiPayload(v385, v386, v387);
            break;
          default:
            memcpy(v374, v375, *(_QWORD *)(*(_QWORD *)(v382 - 8) + 64));
            break;
        }
        v504 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v505 = v504[5];
        v506 = (char *)v374 + v505;
        v507 = (char *)v375 + v505;
        v508 = *(uint64_t *)((char *)v375 + v505 + 8);
        if (v508)
        {
          v593 = v374;
          *(_QWORD *)v506 = *(_QWORD *)v507;
          *((_QWORD *)v506 + 1) = v508;
          v509 = (void *)*((_QWORD *)v507 + 2);
          v510 = *((_QWORD *)v507 + 3);
          v511 = *((_QWORD *)v507 + 4);
          v512 = *((_QWORD *)v507 + 5);
          v513 = *((_QWORD *)v507 + 6);
          v514 = *((_QWORD *)v507 + 7);
          v583 = v507[64];
          swift_bridgeObjectRetain(v508);
          sub_10003E1F0(v509, v510, v511, v512, v513, v514, v583);
          *((_QWORD *)v506 + 2) = v509;
          *((_QWORD *)v506 + 3) = v510;
          *((_QWORD *)v506 + 4) = v511;
          *((_QWORD *)v506 + 5) = v512;
          *((_QWORD *)v506 + 6) = v513;
          *((_QWORD *)v506 + 7) = v514;
          v506[64] = v583;
          *(_DWORD *)(v506 + 65) = *(_DWORD *)(v507 + 65);
          v515 = v507[120];
          if (v515 == 255)
          {
            v516 = *(_OWORD *)(v507 + 88);
            *(_OWORD *)(v506 + 72) = *(_OWORD *)(v507 + 72);
            *(_OWORD *)(v506 + 88) = v516;
            *(_OWORD *)(v506 + 104) = *(_OWORD *)(v507 + 104);
            v506[120] = v507[120];
          }
          else
          {
            v584 = v515 & 1;
            v521 = (void *)*((_QWORD *)v507 + 9);
            v522 = *((_QWORD *)v507 + 10);
            v523 = *((_QWORD *)v507 + 11);
            v524 = *((_QWORD *)v507 + 12);
            v525 = *((_QWORD *)v507 + 13);
            v526 = *((_QWORD *)v507 + 14);
            sub_10002B764(v521, v522, v523, v524, v525, v526, v515 & 1);
            *((_QWORD *)v506 + 9) = v521;
            *((_QWORD *)v506 + 10) = v522;
            *((_QWORD *)v506 + 11) = v523;
            *((_QWORD *)v506 + 12) = v524;
            *((_QWORD *)v506 + 13) = v525;
            *((_QWORD *)v506 + 14) = v526;
            v506[120] = v584;
          }
          a1 = v601;
          v520 = v615;
          v506[121] = v507[121];
          v374 = v593;
        }
        else
        {
          v517 = *((_OWORD *)v507 + 5);
          *((_OWORD *)v506 + 4) = *((_OWORD *)v507 + 4);
          *((_OWORD *)v506 + 5) = v517;
          *((_OWORD *)v506 + 6) = *((_OWORD *)v507 + 6);
          *(_OWORD *)(v506 + 106) = *(_OWORD *)(v507 + 106);
          v518 = *((_OWORD *)v507 + 1);
          *(_OWORD *)v506 = *(_OWORD *)v507;
          *((_OWORD *)v506 + 1) = v518;
          v519 = *((_OWORD *)v507 + 3);
          *((_OWORD *)v506 + 2) = *((_OWORD *)v507 + 2);
          *((_OWORD *)v506 + 3) = v519;
          v520 = v9;
        }
        *((_BYTE *)v374 + v504[6]) = *((_BYTE *)v375 + v504[6]);
        *((_BYTE *)v374 + v504[7]) = *((_BYTE *)v375 + v504[7]);
        *((_BYTE *)v374 + v504[8]) = *((_BYTE *)v375 + v504[8]);
        *((_BYTE *)v374 + v504[9]) = *((_BYTE *)v375 + v504[9]);
        *((_BYTE *)v374 + v504[10]) = *((_BYTE *)v375 + v504[10]);
        v527 = v504[11];
        v528 = *(void **)((char *)v375 + v527);
        *(void **)((char *)v374 + v527) = v528;
        v529 = v528;
        swift_storeEnumTagMultiPayload(v374, v520, 1);
        break;
      case 2u:
        v388 = *v375;
        *v374 = *v375;
        v389 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v390 = (void **)((char *)v374 + v389);
        v391 = (void **)((char *)v375 + v389);
        v392 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v393 = *(_QWORD *)(v392 - 8);
        v394 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v393 + 48);
        v395 = v388;
        if (v394(v391, 1, v392))
        {
          v396 = sub_10002A750(&qword_100644980);
          memcpy(v390, v391, *(_QWORD *)(*(_QWORD *)(v396 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v391, v392))
          {
            case 1u:
              v429 = *v391;
              *v390 = *v391;
              v430 = v429;
              v431 = v390;
              v432 = v392;
              v433 = 1;
              goto LABEL_282;
            case 2u:
              v530 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v530 - 8) + 16))(v390, v391, v530);
              v431 = v390;
              v432 = v392;
              v433 = 2;
              goto LABEL_282;
            case 3u:
              v531 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v531 - 8) + 16))(v390, v391, v531);
              v431 = v390;
              v432 = v392;
              v433 = 3;
              goto LABEL_282;
            case 4u:
              v532 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v532 - 8) + 16))(v390, v391, v532);
              v431 = v390;
              v432 = v392;
              v433 = 4;
              goto LABEL_282;
            case 5u:
              v533 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v533 - 8) + 16))(v390, v391, v533);
              v431 = v390;
              v432 = v392;
              v433 = 5;
              goto LABEL_282;
            case 6u:
              v534 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v534 - 8) + 16))(v390, v391, v534);
              v431 = v390;
              v432 = v392;
              v433 = 6;
              goto LABEL_282;
            case 8u:
              v535 = *v391;
              *v390 = *v391;
              v536 = v535;
              v431 = v390;
              v432 = v392;
              v433 = 8;
              goto LABEL_282;
            case 9u:
              v537 = *v391;
              *v390 = *v391;
              v538 = v537;
              v431 = v390;
              v432 = v392;
              v433 = 9;
LABEL_282:
              swift_storeEnumTagMultiPayload(v431, v432, v433);
              break;
            default:
              memcpy(v390, v391, *(_QWORD *)(v393 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v393 + 56))(v390, 0, 1, v392);
        }
        swift_storeEnumTagMultiPayload(v374, v9, 2);
        break;
      case 3u:
        v397 = *v375;
        *v374 = *v375;
        v398 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v399 = (void **)((char *)v374 + v398);
        v400 = (void **)((char *)v375 + v398);
        v401 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v402 = *(_QWORD *)(v401 - 8);
        v403 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v402 + 48);
        v404 = v397;
        if (v403(v400, 1, v401))
        {
          v405 = sub_10002A750(&qword_100644980);
          memcpy(v399, v400, *(_QWORD *)(*(_QWORD *)(v405 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v400, v401))
          {
            case 1u:
              v434 = *v400;
              *v399 = *v400;
              v435 = v434;
              v436 = v399;
              v437 = v401;
              v438 = 1;
              goto LABEL_293;
            case 2u:
              v539 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v539 - 8) + 16))(v399, v400, v539);
              v436 = v399;
              v437 = v401;
              v438 = 2;
              goto LABEL_293;
            case 3u:
              v540 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v540 - 8) + 16))(v399, v400, v540);
              v436 = v399;
              v437 = v401;
              v438 = 3;
              goto LABEL_293;
            case 4u:
              v541 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v541 - 8) + 16))(v399, v400, v541);
              v436 = v399;
              v437 = v401;
              v438 = 4;
              goto LABEL_293;
            case 5u:
              v542 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v542 - 8) + 16))(v399, v400, v542);
              v436 = v399;
              v437 = v401;
              v438 = 5;
              goto LABEL_293;
            case 6u:
              v543 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v543 - 8) + 16))(v399, v400, v543);
              v436 = v399;
              v437 = v401;
              v438 = 6;
              goto LABEL_293;
            case 8u:
              v544 = *v400;
              *v399 = *v400;
              v545 = v544;
              v436 = v399;
              v437 = v401;
              v438 = 8;
              goto LABEL_293;
            case 9u:
              v546 = *v400;
              *v399 = *v400;
              v547 = v546;
              v436 = v399;
              v437 = v401;
              v438 = 9;
LABEL_293:
              swift_storeEnumTagMultiPayload(v436, v437, v438);
              break;
            default:
              memcpy(v399, v400, *(_QWORD *)(v402 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v402 + 56))(v399, 0, 1, v401);
        }
        swift_storeEnumTagMultiPayload(v374, v9, 3);
        break;
      case 4u:
        v406 = *v375;
        *v374 = *v375;
        v407 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v408 = (void **)((char *)v374 + v407);
        v409 = (void **)((char *)v375 + v407);
        v410 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v411 = *(_QWORD *)(v410 - 8);
        v412 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v411 + 48);
        v413 = v406;
        if (v412(v409, 1, v410))
        {
          v414 = sub_10002A750(&qword_100644980);
          memcpy(v408, v409, *(_QWORD *)(*(_QWORD *)(v414 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v409, v410))
          {
            case 1u:
              v439 = *v409;
              *v408 = *v409;
              v440 = v439;
              v441 = v408;
              v442 = v410;
              v443 = 1;
              goto LABEL_304;
            case 2u:
              v548 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v548 - 8) + 16))(v408, v409, v548);
              v441 = v408;
              v442 = v410;
              v443 = 2;
              goto LABEL_304;
            case 3u:
              v549 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v549 - 8) + 16))(v408, v409, v549);
              v441 = v408;
              v442 = v410;
              v443 = 3;
              goto LABEL_304;
            case 4u:
              v550 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v550 - 8) + 16))(v408, v409, v550);
              v441 = v408;
              v442 = v410;
              v443 = 4;
              goto LABEL_304;
            case 5u:
              v551 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v551 - 8) + 16))(v408, v409, v551);
              v441 = v408;
              v442 = v410;
              v443 = 5;
              goto LABEL_304;
            case 6u:
              v552 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v552 - 8) + 16))(v408, v409, v552);
              v441 = v408;
              v442 = v410;
              v443 = 6;
              goto LABEL_304;
            case 8u:
              v553 = *v409;
              *v408 = *v409;
              v554 = v553;
              v441 = v408;
              v442 = v410;
              v443 = 8;
              goto LABEL_304;
            case 9u:
              v555 = *v409;
              *v408 = *v409;
              v556 = v555;
              v441 = v408;
              v442 = v410;
              v443 = 9;
LABEL_304:
              swift_storeEnumTagMultiPayload(v441, v442, v443);
              break;
            default:
              memcpy(v408, v409, *(_QWORD *)(v411 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v411 + 56))(v408, 0, 1, v410);
        }
        swift_storeEnumTagMultiPayload(v374, v9, 4);
        break;
      case 5u:
        *v374 = *v375;
        *((_BYTE *)v374 + 8) = *((_BYTE *)v375 + 8);
        *(_WORD *)((char *)v374 + 9) = *(_WORD *)((char *)v375 + 9);
        v415 = v375[2];
        v374[2] = v415;
        v416 = v415;
        swift_storeEnumTagMultiPayload(v374, v9, 5);
        break;
      case 6u:
        v424 = *v375;
        *v374 = *v375;
        v425 = v424;
        swift_storeEnumTagMultiPayload(v374, v9, 6);
        break;
      case 7u:
        v417 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v418 = *(_QWORD *)(v417 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v418 + 48))(v375, 1, v417))
        {
          v419 = sub_10002A750(&qword_100644600);
          memcpy(v374, v375, *(_QWORD *)(*(_QWORD *)(v419 - 8) + 64));
        }
        else
        {
          v444 = *v375;
          *v374 = *v375;
          v445 = *(int *)(v417 + 20);
          v591 = (char *)v374 + v445;
          v446 = (char *)v375 + v445;
          v447 = v374;
          v448 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v449 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v448 - 8) + 16);
          v450 = swift_bridgeObjectRetain(v444);
          v451 = v448;
          v374 = v447;
          v449(v591, v446, v451, v450);
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v418 + 56))(v447, 0, 1, v417);
        }
        v452 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v453 = (void **)((char *)v374 + v452);
        v454 = (void **)((char *)v375 + v452);
        v455 = v454[1];
        if (v455)
        {
          *v453 = *v454;
          v453[1] = v455;
          v456 = (void *)v454[2];
          v453[2] = v456;
          swift_bridgeObjectRetain(v455);
          v457 = v456;
        }
        else
        {
          *(_OWORD *)v453 = *(_OWORD *)v454;
          v453[2] = v454[2];
        }
        swift_storeEnumTagMultiPayload(v374, v9, 7);
        break;
      case 8u:
        v426 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v427 = *(_QWORD *)(v426 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v427 + 48))(v375, 1, v426))
        {
          v428 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v374, v375, *(_QWORD *)(*(_QWORD *)(v428 - 8) + 64));
        }
        else
        {
          v458 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v458 - 8) + 16))(v374, v375, v458);
          *((_BYTE *)v374 + *(int *)(v426 + 20)) = *((_BYTE *)v375 + *(int *)(v426 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v427 + 56))(v374, 0, 1, v426);
        }
        v459 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)v374 + *(int *)(v459 + 20)) = *(void **)((char *)v375 + *(int *)(v459 + 20));
        swift_storeEnumTagMultiPayload(v374, v9, 8);
        break;
      case 9u:
        *(_BYTE *)v374 = *(_BYTE *)v375;
        v420 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v421 = (char *)v374 + v420;
        v422 = (char *)v375 + v420;
        v423 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v423 - 8) + 16))(v421, v422, v423);
        swift_storeEnumTagMultiPayload(v374, v9, 9);
        break;
      default:
        memcpy(v374, v375, *(_QWORD *)(v10 + 64));
        break;
    }
  }
  return a1;
}

void sub_1003B8F3C(id *a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  int v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v4 = sub_10002A750(&qword_10064B6B0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, v4);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = (*(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, 1, v6);
  if (EnumCaseMultiPayload == 1)
  {
    if (!v7)
    {
      switch(swift_getEnumCaseMultiPayload(a1, v6))
      {
        case 0u:
          v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a1, v8))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_53;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_52;
            default:
              goto LABEL_54;
          }
          goto LABEL_54;
        case 1u:
          v37 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a1, v37))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_53;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_52;
            default:
              goto LABEL_54;
          }
          goto LABEL_54;
        case 2u:

          v35 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v38 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v35, 1, v38))
          {
            switch(swift_getEnumCaseMultiPayload(v35, v38))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_66;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_64;
              default:
                goto LABEL_6;
            }
          }
          break;
        case 3u:

          v35 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v39 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v35, 1, v39))
          {
            switch(swift_getEnumCaseMultiPayload(v35, v39))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_66;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_64;
              default:
                goto LABEL_6;
            }
          }
          break;
        case 4u:

          v35 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v40 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v35, 1, v40))
          {
            switch(swift_getEnumCaseMultiPayload(v35, v40))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_66;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_64;
              default:
                goto LABEL_6;
            }
          }
          break;
        case 5u:
          goto LABEL_35;
        case 6u:
          goto LABEL_36;
        case 7u:
          goto LABEL_37;
        case 8u:
          goto LABEL_41;
        case 9u:
          goto LABEL_43;
        default:
          break;
      }
    }
  }
  else if (!v7)
  {
    switch(swift_getEnumCaseMultiPayload(a1, v6))
    {
      case 0u:
        v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a1, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_53;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_52;
          default:
            goto LABEL_54;
        }
        goto LABEL_54;
      case 1u:
        v41 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a1, v41))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_53:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_52:
            v42 = type metadata accessor for Date(0);
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(a1, v42);
            break;
          default:
            break;
        }
LABEL_54:
        v43 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v44 = (char *)a1 + *(int *)(v43 + 20);
        v45 = *((_QWORD *)v44 + 1);
        if (v45)
        {
          swift_bridgeObjectRelease(v45);
          sub_10003E2EC(*((void **)v44 + 2), *((_QWORD *)v44 + 3), *((_QWORD *)v44 + 4), *((_QWORD *)v44 + 5), *((_QWORD *)v44 + 6), *((_QWORD *)v44 + 7), v44[64]);
          v46 = v44[120];
          if (v46 != 255)
            sub_10002B328(*((void **)v44 + 9), *((_QWORD *)v44 + 10), *((_QWORD *)v44 + 11), *((_QWORD *)v44 + 12), *((_QWORD *)v44 + 13), *((_QWORD *)v44 + 14), v46 & 1);
        }

        break;
      case 2u:

        v35 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v47 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48))(v35, 1, v47))
        {
          switch(swift_getEnumCaseMultiPayload(v35, v47))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_66;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_64;
            default:
              goto LABEL_6;
          }
        }
        break;
      case 3u:

        v35 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v48 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v35, 1, v48))
        {
          switch(swift_getEnumCaseMultiPayload(v35, v48))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_66;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_64;
            default:
              goto LABEL_6;
          }
        }
        break;
      case 4u:

        v35 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v49 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48))(v35, 1, v49))
        {
          switch(swift_getEnumCaseMultiPayload(v35, v49))
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_66:

              break;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_64:
              v36 = type metadata accessor for Date(0);
              goto LABEL_65;
            default:
              goto LABEL_6;
          }
        }
        break;
      case 5u:
LABEL_35:

        break;
      case 6u:
LABEL_36:

        break;
      case 7u:
LABEL_37:
        v28 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(a1, 1, v28))
        {
          swift_bridgeObjectRelease(*a1);
          v29 = (char *)a1 + *(int *)(v28 + 20);
          v30 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
        }
        v31 = (char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v32 = *((_QWORD *)v31 + 1);
        if (v32)
        {
          swift_bridgeObjectRelease(v32);

        }
        break;
      case 8u:
LABEL_41:
        v33 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(a1, 1, v33))
        {
          v34 = type metadata accessor for Date(0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(a1, v34);
        }
        break;
      case 9u:
LABEL_43:
        v35 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
        v36 = type metadata accessor for AnyTip(0);
LABEL_65:
        (*(void (**)(id *, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
        break;
      default:
        break;
    }
  }
LABEL_6:
  v9 = (id *)((char *)a1 + *(int *)(a2 + 20));
  switch(swift_getEnumCaseMultiPayload(v9, v6))
  {
    case 0u:
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v9, v10))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_29;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_11;
        default:
          goto LABEL_30;
      }
      goto LABEL_30;
    case 1u:
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v9, v12))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_29:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_11:
          v13 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v9, v13);
          break;
        default:
          break;
      }
LABEL_30:
      v24 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v25 = (char *)v9 + *(int *)(v24 + 20);
      v26 = *((_QWORD *)v25 + 1);
      if (v26)
      {
        swift_bridgeObjectRelease(v26);
        sub_10003E2EC(*((void **)v25 + 2), *((_QWORD *)v25 + 3), *((_QWORD *)v25 + 4), *((_QWORD *)v25 + 5), *((_QWORD *)v25 + 6), *((_QWORD *)v25 + 7), v25[64]);
        v27 = v25[120];
        if (v27 != 255)
          sub_10002B328(*((void **)v25 + 9), *((_QWORD *)v25 + 10), *((_QWORD *)v25 + 11), *((_QWORD *)v25 + 12), *((_QWORD *)v25 + 13), *((_QWORD *)v25 + 14), v27 & 1);
      }
      v17 = *(id *)((char *)v9 + *(int *)(v24 + 44));
      goto LABEL_34;
    case 2u:

      v9 = (_QWORD *)((char *)v9 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v9, 1, v14))
      {
        switch(swift_getEnumCaseMultiPayload(v9, v14))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_18;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_27;
          default:
            return;
        }
      }
      return;
    case 3u:

      v9 = (_QWORD *)((char *)v9 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v9, 1, v15))
      {
        switch(swift_getEnumCaseMultiPayload(v9, v15))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_18;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_27;
          default:
            return;
        }
      }
      return;
    case 4u:

      v9 = (_QWORD *)((char *)v9 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v9, 1, v16))
      {
        switch(swift_getEnumCaseMultiPayload(v9, v16))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_18;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_27;
          default:
            return;
        }
      }
      return;
    case 5u:
      goto LABEL_23;
    case 6u:
LABEL_18:
      v17 = (id)*v9;
      goto LABEL_34;
    case 7u:
      v18 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v9, 1, v18))
      {
        swift_bridgeObjectRelease(*v9);
        v19 = (char *)v9 + *(int *)(v18 + 20);
        v20 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
      }
      v9 = (_QWORD *)((char *)v9 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v21 = v9[1];
      if (!v21)
        return;
      swift_bridgeObjectRelease(v21);
LABEL_23:
      v17 = (id)v9[2];
LABEL_34:

      break;
    case 8u:
      v22 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v9, 1, v22))
        return;
LABEL_27:
      v23 = type metadata accessor for Date(0);
LABEL_28:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v9, v23);
      break;
    case 9u:
      v9 = (_QWORD *)((char *)v9 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v23 = type metadata accessor for AnyTip(0);
      goto LABEL_28;
    default:
      return;
  }
}

void **sub_1003B98C0(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  void **v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void **v33;
  void **v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(void **, uint64_t, uint64_t);
  id v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void **v42;
  void **v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(void **, uint64_t, uint64_t);
  id v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void **v51;
  void **v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v55)(void **, uint64_t, uint64_t);
  id v56;
  uint64_t v57;
  void *v58;
  id v59;
  void **v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  void **v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  void **v78;
  void **v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(void **, uint64_t, uint64_t);
  id v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  void **v87;
  void **v88;
  uint64_t v89;
  uint64_t v90;
  unsigned int (*v91)(void **, uint64_t, uint64_t);
  id v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  void **v96;
  void **v97;
  uint64_t v98;
  uint64_t v99;
  unsigned int (*v100)(void **, uint64_t, uint64_t);
  id v101;
  uint64_t v102;
  void *v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  void *v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  id v123;
  void **v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  id v128;
  void **v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  id v133;
  void **v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(char *, char *, uint64_t, __n128);
  __n128 v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  _QWORD *v148;
  uint64_t v149;
  void *v150;
  id v151;
  void *v152;
  id v153;
  void **v154;
  uint64_t v155;
  uint64_t v156;
  void *v157;
  id v158;
  void **v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  id v163;
  void **v164;
  uint64_t v165;
  uint64_t v166;
  void *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  void (*v172)(char *, char *, uint64_t, __n128);
  __n128 v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  _QWORD *v178;
  uint64_t v179;
  void *v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  void *v191;
  id v192;
  void *v193;
  id v194;
  int *v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  void *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  int v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  void *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  void *v216;
  id v217;
  void **v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  void *v226;
  id v227;
  void *v228;
  id v229;
  int *v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  void *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  int v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  void *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  void *v253;
  id v254;
  void **v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  void *v263;
  id v264;
  void *v265;
  id v266;
  int *v267;
  uint64_t v268;
  char *v269;
  char *v270;
  uint64_t v271;
  void *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  int v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  void *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  void *v288;
  id v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  void *v295;
  id v296;
  void *v297;
  id v298;
  int *v299;
  uint64_t v300;
  char *v301;
  char *v302;
  uint64_t v303;
  void *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  int v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  __int128 v314;
  void *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  void *v322;
  id v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  void *v329;
  id v330;
  void *v331;
  id v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  void *v337;
  id v338;
  void *v339;
  id v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  void *v346;
  id v347;
  void *v348;
  id v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  void *v355;
  id v356;
  void *v357;
  id v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  void *v363;
  id v364;
  void *v365;
  id v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  void *v372;
  id v373;
  void *v374;
  id v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  void **v381;
  void **v382;
  uint64_t v383;
  void *v384;
  id v385;
  void **v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  void *v390;
  id v391;
  void **v392;
  uint64_t v393;
  uint64_t v394;
  void *v395;
  uint64_t v396;
  void **v397;
  void **v398;
  uint64_t v399;
  uint64_t v400;
  unsigned int (*v401)(void **, uint64_t, uint64_t);
  id v402;
  uint64_t v403;
  void *v404;
  uint64_t v405;
  void **v406;
  void **v407;
  uint64_t v408;
  uint64_t v409;
  unsigned int (*v410)(void **, uint64_t, uint64_t);
  id v411;
  uint64_t v412;
  void *v413;
  uint64_t v414;
  void **v415;
  void **v416;
  uint64_t v417;
  uint64_t v418;
  unsigned int (*v419)(void **, uint64_t, uint64_t);
  id v420;
  uint64_t v421;
  void *v422;
  id v423;
  void **v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  char *v431;
  char *v432;
  uint64_t v433;
  void *v434;
  id v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  void *v439;
  id v440;
  void **v441;
  uint64_t v442;
  uint64_t v443;
  void *v444;
  id v445;
  void **v446;
  uint64_t v447;
  uint64_t v448;
  void *v449;
  id v450;
  void **v451;
  uint64_t v452;
  uint64_t v453;
  void *v454;
  uint64_t v455;
  char *v456;
  void **v457;
  void **v458;
  uint64_t v459;
  void (*v460)(char *, char *, uint64_t, __n128);
  __n128 v461;
  uint64_t v462;
  uint64_t v463;
  _QWORD *v464;
  _QWORD *v465;
  uint64_t v466;
  void *v467;
  id v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  void *v476;
  id v477;
  void *v478;
  id v479;
  int *v480;
  uint64_t v481;
  char *v482;
  char *v483;
  uint64_t v484;
  void *v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  int v491;
  __int128 v492;
  __int128 v493;
  __int128 v494;
  __int128 v495;
  uint64_t v496;
  void *v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  void *v504;
  id v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  void *v511;
  id v512;
  void *v513;
  id v514;
  int *v515;
  uint64_t v516;
  char *v517;
  char *v518;
  uint64_t v519;
  void *v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  int v526;
  __int128 v527;
  __int128 v528;
  __int128 v529;
  __int128 v530;
  uint64_t v531;
  void *v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  void *v539;
  id v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  void *v546;
  id v547;
  void *v548;
  id v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  void *v555;
  id v556;
  void *v557;
  id v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  void *v564;
  id v565;
  void *v566;
  id v567;
  unsigned __int8 v569;
  uint64_t v570;
  unsigned __int8 v571;
  uint64_t v572;
  char *v573;
  char *v574;
  uint64_t v575;
  char v576;
  unsigned __int8 v577;
  char v578;
  uint64_t v579;
  char v580;
  unsigned __int8 v581;
  char v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  unsigned __int8 v597;
  char v598;
  unsigned __int8 v599;
  char v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  char *v607;
  void **v608;
  void **v609;
  void **v610;
  void **v611;
  void **v612;
  void **v613;
  void **v614;
  void **v615;
  uint64_t v616;
  uint64_t v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;

  v6 = sub_10002A750(&qword_10064B6B0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8);
  if (EnumCaseMultiPayload == 1)
  {
    if (v10)
    {
      v11 = sub_10002A750((uint64_t *)&unk_100640EB0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(a2, v8))
      {
        case 0u:
          v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v616 = v8;
          v585 = a3;
          v601 = v9;
          switch(swift_getEnumCaseMultiPayload(a2, v13))
          {
            case 1u:
              v14 = *a2;
              *a1 = *a2;
              v15 = v14;
              v16 = a1;
              v17 = v13;
              v18 = 1;
              goto LABEL_78;
            case 2u:
              v186 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(a1, a2, v186);
              v16 = a1;
              v17 = v13;
              v18 = 2;
              goto LABEL_78;
            case 3u:
              v187 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(a1, a2, v187);
              v16 = a1;
              v17 = v13;
              v18 = 3;
              goto LABEL_78;
            case 4u:
              v188 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(a1, a2, v188);
              v16 = a1;
              v17 = v13;
              v18 = 4;
              goto LABEL_78;
            case 5u:
              v189 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v189 - 8) + 16))(a1, a2, v189);
              v16 = a1;
              v17 = v13;
              v18 = 5;
              goto LABEL_78;
            case 6u:
              v190 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(a1, a2, v190);
              v16 = a1;
              v17 = v13;
              v18 = 6;
              goto LABEL_78;
            case 8u:
              v191 = *a2;
              *a1 = *a2;
              v192 = v191;
              v16 = a1;
              v17 = v13;
              v18 = 8;
              goto LABEL_78;
            case 9u:
              v193 = *a2;
              *a1 = *a2;
              v194 = v193;
              v16 = a1;
              v17 = v13;
              v18 = 9;
LABEL_78:
              swift_storeEnumTagMultiPayload(v16, v17, v18);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
              break;
          }
          v195 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v196 = v195[5];
          v197 = (char *)a1 + v196;
          v198 = (char *)a2 + v196;
          v199 = *(uint64_t *)((char *)a2 + v196 + 8);
          if (v199)
          {
            v610 = a1;
            *(_QWORD *)v197 = *(_QWORD *)v198;
            *((_QWORD *)v197 + 1) = v199;
            v200 = (void *)*((_QWORD *)v198 + 2);
            v201 = *((_QWORD *)v198 + 3);
            v202 = *((_QWORD *)v198 + 4);
            v203 = *((_QWORD *)v198 + 5);
            v204 = *((_QWORD *)v198 + 6);
            v575 = *((_QWORD *)v198 + 7);
            v569 = v198[64];
            swift_bridgeObjectRetain(v199);
            sub_10003E1F0(v200, v201, v202, v203, v204, v575, v569);
            *((_QWORD *)v197 + 2) = v200;
            *((_QWORD *)v197 + 3) = v201;
            *((_QWORD *)v197 + 4) = v202;
            *((_QWORD *)v197 + 5) = v203;
            *((_QWORD *)v197 + 6) = v204;
            *((_QWORD *)v197 + 7) = v575;
            v197[64] = v569;
            *(_DWORD *)(v197 + 65) = *(_DWORD *)(v198 + 65);
            v205 = v198[120];
            if (v205 == 255)
            {
              v206 = *(_OWORD *)(v198 + 88);
              *(_OWORD *)(v197 + 72) = *(_OWORD *)(v198 + 72);
              *(_OWORD *)(v197 + 88) = v206;
              *(_OWORD *)(v197 + 104) = *(_OWORD *)(v198 + 104);
              v197[120] = v198[120];
            }
            else
            {
              v576 = v205 & 1;
              v210 = (void *)*((_QWORD *)v198 + 9);
              v211 = *((_QWORD *)v198 + 10);
              v212 = *((_QWORD *)v198 + 11);
              v213 = *((_QWORD *)v198 + 12);
              v214 = *((_QWORD *)v198 + 13);
              v570 = *((_QWORD *)v198 + 14);
              sub_10002B764(v210, v211, v212, v213, v214, v570, v205 & 1);
              *((_QWORD *)v197 + 9) = v210;
              *((_QWORD *)v197 + 10) = v211;
              *((_QWORD *)v197 + 11) = v212;
              *((_QWORD *)v197 + 12) = v213;
              *((_QWORD *)v197 + 13) = v214;
              *((_QWORD *)v197 + 14) = v570;
              v197[120] = v576;
            }
            a1 = v610;
            v8 = v616;
            a3 = v585;
            v197[121] = v198[121];
          }
          else
          {
            v207 = *((_OWORD *)v198 + 5);
            *((_OWORD *)v197 + 4) = *((_OWORD *)v198 + 4);
            *((_OWORD *)v197 + 5) = v207;
            *((_OWORD *)v197 + 6) = *((_OWORD *)v198 + 6);
            *(_OWORD *)(v197 + 106) = *(_OWORD *)(v198 + 106);
            v208 = *((_OWORD *)v198 + 1);
            *(_OWORD *)v197 = *(_OWORD *)v198;
            *((_OWORD *)v197 + 1) = v208;
            v209 = *((_OWORD *)v198 + 3);
            *((_OWORD *)v197 + 2) = *((_OWORD *)v198 + 2);
            *((_OWORD *)v197 + 3) = v209;
          }
          *((_BYTE *)a1 + v195[6]) = *((_BYTE *)a2 + v195[6]);
          *((_BYTE *)a1 + v195[7]) = *((_BYTE *)a2 + v195[7]);
          *((_BYTE *)a1 + v195[8]) = *((_BYTE *)a2 + v195[8]);
          *((_BYTE *)a1 + v195[9]) = *((_BYTE *)a2 + v195[9]);
          *((_BYTE *)a1 + v195[10]) = *((_BYTE *)a2 + v195[10]);
          v215 = v195[11];
          v216 = *(void **)((char *)a2 + v215);
          *(void **)((char *)a1 + v215) = v216;
          v217 = v216;
          v218 = a1;
          v219 = v8;
          v220 = 0;
          goto LABEL_118;
        case 1u:
          v25 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v618 = v8;
          v586 = a3;
          v601 = v9;
          switch(swift_getEnumCaseMultiPayload(a2, v25))
          {
            case 1u:
              v26 = *a2;
              *a1 = *a2;
              v27 = v26;
              v28 = a1;
              v29 = v25;
              v30 = 1;
              goto LABEL_110;
            case 2u:
              v258 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v258 - 8) + 16))(a1, a2, v258);
              v28 = a1;
              v29 = v25;
              v30 = 2;
              goto LABEL_110;
            case 3u:
              v259 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v259 - 8) + 16))(a1, a2, v259);
              v28 = a1;
              v29 = v25;
              v30 = 3;
              goto LABEL_110;
            case 4u:
              v260 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v260 - 8) + 16))(a1, a2, v260);
              v28 = a1;
              v29 = v25;
              v30 = 4;
              goto LABEL_110;
            case 5u:
              v261 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v261 - 8) + 16))(a1, a2, v261);
              v28 = a1;
              v29 = v25;
              v30 = 5;
              goto LABEL_110;
            case 6u:
              v262 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v262 - 8) + 16))(a1, a2, v262);
              v28 = a1;
              v29 = v25;
              v30 = 6;
              goto LABEL_110;
            case 8u:
              v263 = *a2;
              *a1 = *a2;
              v264 = v263;
              v28 = a1;
              v29 = v25;
              v30 = 8;
              goto LABEL_110;
            case 9u:
              v265 = *a2;
              *a1 = *a2;
              v266 = v265;
              v28 = a1;
              v29 = v25;
              v30 = 9;
LABEL_110:
              swift_storeEnumTagMultiPayload(v28, v29, v30);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
              break;
          }
          v267 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v268 = v267[5];
          v269 = (char *)a1 + v268;
          v270 = (char *)a2 + v268;
          v271 = *(uint64_t *)((char *)a2 + v268 + 8);
          if (v271)
          {
            v612 = a1;
            *(_QWORD *)v269 = *(_QWORD *)v270;
            *((_QWORD *)v269 + 1) = v271;
            v272 = (void *)*((_QWORD *)v270 + 2);
            v273 = *((_QWORD *)v270 + 3);
            v274 = *((_QWORD *)v270 + 4);
            v275 = *((_QWORD *)v270 + 5);
            v276 = *((_QWORD *)v270 + 6);
            v579 = *((_QWORD *)v270 + 7);
            v571 = v270[64];
            swift_bridgeObjectRetain(v271);
            sub_10003E1F0(v272, v273, v274, v275, v276, v579, v571);
            *((_QWORD *)v269 + 2) = v272;
            *((_QWORD *)v269 + 3) = v273;
            *((_QWORD *)v269 + 4) = v274;
            *((_QWORD *)v269 + 5) = v275;
            *((_QWORD *)v269 + 6) = v276;
            *((_QWORD *)v269 + 7) = v579;
            v269[64] = v571;
            *(_DWORD *)(v269 + 65) = *(_DWORD *)(v270 + 65);
            v277 = v270[120];
            if (v277 == 255)
            {
              v278 = *(_OWORD *)(v270 + 88);
              *(_OWORD *)(v269 + 72) = *(_OWORD *)(v270 + 72);
              *(_OWORD *)(v269 + 88) = v278;
              *(_OWORD *)(v269 + 104) = *(_OWORD *)(v270 + 104);
              v269[120] = v270[120];
            }
            else
            {
              v580 = v277 & 1;
              v282 = (void *)*((_QWORD *)v270 + 9);
              v283 = *((_QWORD *)v270 + 10);
              v284 = *((_QWORD *)v270 + 11);
              v285 = *((_QWORD *)v270 + 12);
              v286 = *((_QWORD *)v270 + 13);
              v572 = *((_QWORD *)v270 + 14);
              sub_10002B764(v282, v283, v284, v285, v286, v572, v277 & 1);
              *((_QWORD *)v269 + 9) = v282;
              *((_QWORD *)v269 + 10) = v283;
              *((_QWORD *)v269 + 11) = v284;
              *((_QWORD *)v269 + 12) = v285;
              *((_QWORD *)v269 + 13) = v286;
              *((_QWORD *)v269 + 14) = v572;
              v269[120] = v580;
            }
            a1 = v612;
            v8 = v618;
            a3 = v586;
            v269[121] = v270[121];
          }
          else
          {
            v279 = *((_OWORD *)v270 + 5);
            *((_OWORD *)v269 + 4) = *((_OWORD *)v270 + 4);
            *((_OWORD *)v269 + 5) = v279;
            *((_OWORD *)v269 + 6) = *((_OWORD *)v270 + 6);
            *(_OWORD *)(v269 + 106) = *(_OWORD *)(v270 + 106);
            v280 = *((_OWORD *)v270 + 1);
            *(_OWORD *)v269 = *(_OWORD *)v270;
            *((_OWORD *)v269 + 1) = v280;
            v281 = *((_OWORD *)v270 + 3);
            *((_OWORD *)v269 + 2) = *((_OWORD *)v270 + 2);
            *((_OWORD *)v269 + 3) = v281;
          }
          *((_BYTE *)a1 + v267[6]) = *((_BYTE *)a2 + v267[6]);
          *((_BYTE *)a1 + v267[7]) = *((_BYTE *)a2 + v267[7]);
          *((_BYTE *)a1 + v267[8]) = *((_BYTE *)a2 + v267[8]);
          *((_BYTE *)a1 + v267[9]) = *((_BYTE *)a2 + v267[9]);
          *((_BYTE *)a1 + v267[10]) = *((_BYTE *)a2 + v267[10]);
          v287 = v267[11];
          v288 = *(void **)((char *)a2 + v287);
          *(void **)((char *)a1 + v287) = v288;
          v289 = v288;
          v218 = a1;
          v219 = v8;
          v220 = 1;
LABEL_118:
          swift_storeEnumTagMultiPayload(v218, v219, v220);
          v9 = v601;
          break;
        case 2u:
          v587 = a3;
          v603 = v9;
          v31 = *a2;
          *a1 = *a2;
          v32 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v33 = (void **)((char *)a1 + v32);
          v34 = (void **)((char *)a2 + v32);
          v35 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v36 = *(_QWORD *)(v35 - 8);
          v37 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v36 + 48);
          v38 = v31;
          if (v37(v34, 1, v35))
          {
            v39 = sub_10002A750(&qword_100644980);
            memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v34, v35))
            {
              case 1u:
                v122 = *v34;
                *v33 = *v34;
                v123 = v122;
                v124 = v33;
                v125 = v35;
                v126 = 1;
                goto LABEL_143;
              case 2u:
                v324 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v324 - 8) + 16))(v33, v34, v324);
                v124 = v33;
                v125 = v35;
                v126 = 2;
                goto LABEL_143;
              case 3u:
                v325 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v325 - 8) + 16))(v33, v34, v325);
                v124 = v33;
                v125 = v35;
                v126 = 3;
                goto LABEL_143;
              case 4u:
                v326 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v326 - 8) + 16))(v33, v34, v326);
                v124 = v33;
                v125 = v35;
                v126 = 4;
                goto LABEL_143;
              case 5u:
                v327 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v327 - 8) + 16))(v33, v34, v327);
                v124 = v33;
                v125 = v35;
                v126 = 5;
                goto LABEL_143;
              case 6u:
                v328 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v328 - 8) + 16))(v33, v34, v328);
                v124 = v33;
                v125 = v35;
                v126 = 6;
                goto LABEL_143;
              case 8u:
                v329 = *v34;
                *v33 = *v34;
                v330 = v329;
                v124 = v33;
                v125 = v35;
                v126 = 8;
                goto LABEL_143;
              case 9u:
                v331 = *v34;
                *v33 = *v34;
                v332 = v331;
                v124 = v33;
                v125 = v35;
                v126 = 9;
LABEL_143:
                swift_storeEnumTagMultiPayload(v124, v125, v126);
                break;
              default:
                memcpy(v33, v34, *(_QWORD *)(v36 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
          }
          a3 = v587;
          v9 = v603;
          v60 = a1;
          v61 = v8;
          v62 = 2;
          goto LABEL_197;
        case 3u:
          v588 = a3;
          v604 = v9;
          v40 = *a2;
          *a1 = *a2;
          v41 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v42 = (void **)((char *)a1 + v41);
          v43 = (void **)((char *)a2 + v41);
          v44 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v45 = *(_QWORD *)(v44 - 8);
          v46 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v45 + 48);
          v47 = v40;
          if (v46(v43, 1, v44))
          {
            v48 = sub_10002A750(&qword_100644980);
            memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
            a3 = v588;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v43, v44))
            {
              case 1u:
                v127 = *v43;
                *v42 = *v43;
                v128 = v127;
                v129 = v42;
                v130 = v44;
                v131 = 1;
                goto LABEL_194;
              case 2u:
                v333 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v333 - 8) + 16))(v42, v43, v333);
                v129 = v42;
                v130 = v44;
                v131 = 2;
                goto LABEL_194;
              case 3u:
                v334 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v334 - 8) + 16))(v42, v43, v334);
                v129 = v42;
                v130 = v44;
                v131 = 3;
                goto LABEL_194;
              case 4u:
                v335 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v335 - 8) + 16))(v42, v43, v335);
                v129 = v42;
                v130 = v44;
                v131 = 4;
                goto LABEL_194;
              case 5u:
                v376 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v376 - 8) + 16))(v42, v43, v376);
                v129 = v42;
                v130 = v44;
                v131 = 5;
                goto LABEL_194;
              case 6u:
                v336 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v336 - 8) + 16))(v42, v43, v336);
                v129 = v42;
                v130 = v44;
                v131 = 6;
                goto LABEL_194;
              case 8u:
                v337 = *v43;
                *v42 = *v43;
                v338 = v337;
                v129 = v42;
                v130 = v44;
                v131 = 8;
                goto LABEL_194;
              case 9u:
                v339 = *v43;
                *v42 = *v43;
                v340 = v339;
                v129 = v42;
                v130 = v44;
                v131 = 9;
LABEL_194:
                swift_storeEnumTagMultiPayload(v129, v130, v131);
                break;
              default:
                memcpy(v42, v43, *(_QWORD *)(v45 + 64));
                break;
            }
            a3 = v588;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
          }
          v9 = v604;
          v60 = a1;
          v61 = v8;
          v62 = 3;
          goto LABEL_197;
        case 4u:
          v589 = a3;
          v605 = v9;
          v49 = *a2;
          *a1 = *a2;
          v50 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v51 = (void **)((char *)a1 + v50);
          v52 = (void **)((char *)a2 + v50);
          v53 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v54 = *(_QWORD *)(v53 - 8);
          v55 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v54 + 48);
          v56 = v49;
          if (v55(v52, 1, v53))
          {
            v57 = sub_10002A750(&qword_100644980);
            memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v52, v53))
            {
              case 1u:
                v132 = *v52;
                *v51 = *v52;
                v133 = v132;
                v134 = v51;
                v135 = v53;
                v136 = 1;
                goto LABEL_161;
              case 2u:
                v341 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v341 - 8) + 16))(v51, v52, v341);
                v134 = v51;
                v135 = v53;
                v136 = 2;
                goto LABEL_161;
              case 3u:
                v342 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v342 - 8) + 16))(v51, v52, v342);
                v134 = v51;
                v135 = v53;
                v136 = 3;
                goto LABEL_161;
              case 4u:
                v343 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v343 - 8) + 16))(v51, v52, v343);
                v134 = v51;
                v135 = v53;
                v136 = 4;
                goto LABEL_161;
              case 5u:
                v344 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v344 - 8) + 16))(v51, v52, v344);
                v134 = v51;
                v135 = v53;
                v136 = 5;
                goto LABEL_161;
              case 6u:
                v345 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v345 - 8) + 16))(v51, v52, v345);
                v134 = v51;
                v135 = v53;
                v136 = 6;
                goto LABEL_161;
              case 8u:
                v346 = *v52;
                *v51 = *v52;
                v347 = v346;
                v134 = v51;
                v135 = v53;
                v136 = 8;
                goto LABEL_161;
              case 9u:
                v348 = *v52;
                *v51 = *v52;
                v349 = v348;
                v134 = v51;
                v135 = v53;
                v136 = 9;
LABEL_161:
                swift_storeEnumTagMultiPayload(v134, v135, v136);
                break;
              default:
                memcpy(v51, v52, *(_QWORD *)(v54 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
          }
          a3 = v589;
          v9 = v605;
          v60 = a1;
          v61 = v8;
          v62 = 4;
          goto LABEL_197;
        case 5u:
          *a1 = *a2;
          *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
          *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
          v58 = a2[2];
          a1[2] = v58;
          v59 = v58;
          v60 = a1;
          v61 = v8;
          v62 = 5;
          goto LABEL_197;
        case 6u:
          v112 = *a2;
          *a1 = *a2;
          v113 = v112;
          v60 = a1;
          v61 = v8;
          v62 = 6;
          goto LABEL_197;
        case 7u:
          v63 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v64 = *(_QWORD *)(v63 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v64 + 48))(a2, 1, v63))
          {
            v65 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
          }
          else
          {
            v137 = *a2;
            *a1 = *a2;
            v138 = *(int *)(v63 + 20);
            v573 = (char *)a1 + v138;
            v593 = a3;
            v139 = (char *)a2 + v138;
            v620 = v8;
            v140 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v141 = v9;
            v142 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v140 - 8) + 16);
            v143 = swift_bridgeObjectRetain(v137);
            v144 = v139;
            a3 = v593;
            v145 = v140;
            v8 = v620;
            v142(v573, v144, v145, v143);
            v9 = v141;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v64 + 56))(a1, 0, 1, v63);
          }
          v146 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v147 = (void **)((char *)a1 + v146);
          v148 = (void **)((char *)a2 + v146);
          v149 = v148[1];
          if (v149)
          {
            *v147 = *v148;
            v147[1] = v149;
            v150 = (void *)v148[2];
            v147[2] = v150;
            swift_bridgeObjectRetain(v149);
            v151 = v150;
          }
          else
          {
            *(_OWORD *)v147 = *(_OWORD *)v148;
            v147[2] = v148[2];
          }
          v60 = a1;
          v61 = v8;
          v62 = 7;
          goto LABEL_197;
        case 8u:
          v114 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v115 = *(_QWORD *)(v114 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v115 + 48))(a2, 1, v114))
          {
            v116 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
          }
          else
          {
            v182 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(a1, a2, v182);
            *((_BYTE *)a1 + *(int *)(v114 + 20)) = *((_BYTE *)a2 + *(int *)(v114 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v115 + 56))(a1, 0, 1, v114);
          }
          v183 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)a1 + *(int *)(v183 + 20)) = *(void **)((char *)a2 + *(int *)(v183 + 20));
          v60 = a1;
          v61 = v8;
          v62 = 8;
          goto LABEL_197;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v66 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v67 = (char *)a1 + v66;
          v68 = (char *)a2 + v66;
          v69 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v67, v68, v69);
          v60 = a1;
          v61 = v8;
          v62 = 9;
LABEL_197:
          swift_storeEnumTagMultiPayload(v60, v61, v62);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v9 + 64));
          break;
      }
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v377 = sub_10002A750(&qword_1006588F8);
    *(void **)((char *)a1 + *(int *)(v377 + 48)) = *(void **)((char *)a2 + *(int *)(v377 + 48));
    v378 = 1;
  }
  else
  {
    if (v10)
    {
      v12 = sub_10002A750((uint64_t *)&unk_100640EB0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(a2, v8))
      {
        case 0u:
          v19 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v617 = v8;
          v602 = v9;
          switch(swift_getEnumCaseMultiPayload(a2, v19))
          {
            case 1u:
              v20 = *a2;
              *a1 = *a2;
              v21 = v20;
              v22 = a1;
              v23 = v19;
              v24 = 1;
              goto LABEL_94;
            case 2u:
              v221 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v221 - 8) + 16))(a1, a2, v221);
              v22 = a1;
              v23 = v19;
              v24 = 2;
              goto LABEL_94;
            case 3u:
              v222 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v222 - 8) + 16))(a1, a2, v222);
              v22 = a1;
              v23 = v19;
              v24 = 3;
              goto LABEL_94;
            case 4u:
              v223 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v223 - 8) + 16))(a1, a2, v223);
              v22 = a1;
              v23 = v19;
              v24 = 4;
              goto LABEL_94;
            case 5u:
              v224 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v224 - 8) + 16))(a1, a2, v224);
              v22 = a1;
              v23 = v19;
              v24 = 5;
              goto LABEL_94;
            case 6u:
              v225 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v225 - 8) + 16))(a1, a2, v225);
              v22 = a1;
              v23 = v19;
              v24 = 6;
              goto LABEL_94;
            case 8u:
              v226 = *a2;
              *a1 = *a2;
              v227 = v226;
              v22 = a1;
              v23 = v19;
              v24 = 8;
              goto LABEL_94;
            case 9u:
              v228 = *a2;
              *a1 = *a2;
              v229 = v228;
              v22 = a1;
              v23 = v19;
              v24 = 9;
LABEL_94:
              swift_storeEnumTagMultiPayload(v22, v23, v24);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
              break;
          }
          v230 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v231 = v230[5];
          v232 = (char *)a1 + v231;
          v233 = (char *)a2 + v231;
          v234 = *(uint64_t *)((char *)a2 + v231 + 8);
          if (v234)
          {
            v584 = v6;
            v595 = a3;
            v611 = a1;
            *(_QWORD *)v232 = *(_QWORD *)v233;
            *((_QWORD *)v232 + 1) = v234;
            v235 = (void *)*((_QWORD *)v233 + 2);
            v236 = *((_QWORD *)v233 + 3);
            v238 = *((_QWORD *)v233 + 4);
            v237 = *((_QWORD *)v233 + 5);
            v240 = *((_QWORD *)v233 + 6);
            v239 = *((_QWORD *)v233 + 7);
            v577 = v233[64];
            swift_bridgeObjectRetain(v234);
            sub_10003E1F0(v235, v236, v238, v237, v240, v239, v577);
            *((_QWORD *)v232 + 2) = v235;
            *((_QWORD *)v232 + 3) = v236;
            *((_QWORD *)v232 + 4) = v238;
            *((_QWORD *)v232 + 5) = v237;
            *((_QWORD *)v232 + 6) = v240;
            *((_QWORD *)v232 + 7) = v239;
            v232[64] = v577;
            *(_DWORD *)(v232 + 65) = *(_DWORD *)(v233 + 65);
            v241 = v233[120];
            if (v241 == 255)
            {
              v242 = *(_OWORD *)(v233 + 88);
              *(_OWORD *)(v232 + 72) = *(_OWORD *)(v233 + 72);
              *(_OWORD *)(v232 + 88) = v242;
              *(_OWORD *)(v232 + 104) = *(_OWORD *)(v233 + 104);
              v232[120] = v233[120];
            }
            else
            {
              v578 = v241 & 1;
              v246 = (void *)*((_QWORD *)v233 + 9);
              v247 = *((_QWORD *)v233 + 10);
              v248 = *((_QWORD *)v233 + 11);
              v249 = *((_QWORD *)v233 + 12);
              v250 = *((_QWORD *)v233 + 13);
              v251 = *((_QWORD *)v233 + 14);
              sub_10002B764(v246, v247, v248, v249, v250, v251, v241 & 1);
              *((_QWORD *)v232 + 9) = v246;
              *((_QWORD *)v232 + 10) = v247;
              *((_QWORD *)v232 + 11) = v248;
              *((_QWORD *)v232 + 12) = v249;
              *((_QWORD *)v232 + 13) = v250;
              *((_QWORD *)v232 + 14) = v251;
              v232[120] = v578;
            }
            a1 = v611;
            v8 = v617;
            v6 = v584;
            a3 = v595;
            v232[121] = v233[121];
          }
          else
          {
            v243 = *((_OWORD *)v233 + 5);
            *((_OWORD *)v232 + 4) = *((_OWORD *)v233 + 4);
            *((_OWORD *)v232 + 5) = v243;
            *((_OWORD *)v232 + 6) = *((_OWORD *)v233 + 6);
            *(_OWORD *)(v232 + 106) = *(_OWORD *)(v233 + 106);
            v244 = *((_OWORD *)v233 + 1);
            *(_OWORD *)v232 = *(_OWORD *)v233;
            *((_OWORD *)v232 + 1) = v244;
            v245 = *((_OWORD *)v233 + 3);
            *((_OWORD *)v232 + 2) = *((_OWORD *)v233 + 2);
            *((_OWORD *)v232 + 3) = v245;
          }
          *((_BYTE *)a1 + v230[6]) = *((_BYTE *)a2 + v230[6]);
          *((_BYTE *)a1 + v230[7]) = *((_BYTE *)a2 + v230[7]);
          *((_BYTE *)a1 + v230[8]) = *((_BYTE *)a2 + v230[8]);
          *((_BYTE *)a1 + v230[9]) = *((_BYTE *)a2 + v230[9]);
          *((_BYTE *)a1 + v230[10]) = *((_BYTE *)a2 + v230[10]);
          v252 = v230[11];
          v253 = *(void **)((char *)a2 + v252);
          *(void **)((char *)a1 + v252) = v253;
          v254 = v253;
          v255 = a1;
          v256 = v8;
          v257 = 0;
          goto LABEL_204;
        case 1u:
          v70 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v619 = v8;
          v602 = v9;
          v583 = v6;
          switch(swift_getEnumCaseMultiPayload(a2, v70))
          {
            case 1u:
              v71 = *a2;
              *a1 = *a2;
              v72 = v71;
              v73 = a1;
              v74 = v70;
              v75 = 1;
              goto LABEL_127;
            case 2u:
              v290 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v290 - 8) + 16))(a1, a2, v290);
              v73 = a1;
              v74 = v70;
              v75 = 2;
              goto LABEL_127;
            case 3u:
              v291 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v291 - 8) + 16))(a1, a2, v291);
              v73 = a1;
              v74 = v70;
              v75 = 3;
              goto LABEL_127;
            case 4u:
              v292 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v292 - 8) + 16))(a1, a2, v292);
              v73 = a1;
              v74 = v70;
              v75 = 4;
              goto LABEL_127;
            case 5u:
              v293 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v293 - 8) + 16))(a1, a2, v293);
              v73 = a1;
              v74 = v70;
              v75 = 5;
              goto LABEL_127;
            case 6u:
              v294 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v294 - 8) + 16))(a1, a2, v294);
              v73 = a1;
              v74 = v70;
              v75 = 6;
              goto LABEL_127;
            case 8u:
              v295 = *a2;
              *a1 = *a2;
              v296 = v295;
              v73 = a1;
              v74 = v70;
              v75 = 8;
              goto LABEL_127;
            case 9u:
              v297 = *a2;
              *a1 = *a2;
              v298 = v297;
              v73 = a1;
              v74 = v70;
              v75 = 9;
LABEL_127:
              swift_storeEnumTagMultiPayload(v73, v74, v75);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
              break;
          }
          v299 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v300 = v299[5];
          v301 = (char *)a1 + v300;
          v302 = (char *)a2 + v300;
          v303 = *(uint64_t *)((char *)a2 + v300 + 8);
          if (v303)
          {
            v596 = a3;
            v613 = a1;
            *(_QWORD *)v301 = *(_QWORD *)v302;
            *((_QWORD *)v301 + 1) = v303;
            v304 = (void *)*((_QWORD *)v302 + 2);
            v305 = *((_QWORD *)v302 + 3);
            v306 = *((_QWORD *)v302 + 4);
            v307 = *((_QWORD *)v302 + 5);
            v308 = *((_QWORD *)v302 + 6);
            v309 = *((_QWORD *)v302 + 7);
            v581 = v302[64];
            swift_bridgeObjectRetain(v303);
            sub_10003E1F0(v304, v305, v306, v307, v308, v309, v581);
            *((_QWORD *)v301 + 2) = v304;
            *((_QWORD *)v301 + 3) = v305;
            *((_QWORD *)v301 + 4) = v306;
            *((_QWORD *)v301 + 5) = v307;
            *((_QWORD *)v301 + 6) = v308;
            *((_QWORD *)v301 + 7) = v309;
            v301[64] = v581;
            *(_DWORD *)(v301 + 65) = *(_DWORD *)(v302 + 65);
            v310 = v302[120];
            if (v310 == 255)
            {
              v311 = *(_OWORD *)(v302 + 88);
              *(_OWORD *)(v301 + 72) = *(_OWORD *)(v302 + 72);
              *(_OWORD *)(v301 + 88) = v311;
              *(_OWORD *)(v301 + 104) = *(_OWORD *)(v302 + 104);
              v301[120] = v302[120];
            }
            else
            {
              v582 = v310 & 1;
              v315 = (void *)*((_QWORD *)v302 + 9);
              v316 = *((_QWORD *)v302 + 10);
              v317 = *((_QWORD *)v302 + 11);
              v318 = *((_QWORD *)v302 + 12);
              v319 = *((_QWORD *)v302 + 13);
              v320 = *((_QWORD *)v302 + 14);
              sub_10002B764(v315, v316, v317, v318, v319, v320, v310 & 1);
              *((_QWORD *)v301 + 9) = v315;
              *((_QWORD *)v301 + 10) = v316;
              *((_QWORD *)v301 + 11) = v317;
              *((_QWORD *)v301 + 12) = v318;
              *((_QWORD *)v301 + 13) = v319;
              *((_QWORD *)v301 + 14) = v320;
              v301[120] = v582;
            }
            a1 = v613;
            v8 = v619;
            v6 = v583;
            a3 = v596;
            v301[121] = v302[121];
          }
          else
          {
            v312 = *((_OWORD *)v302 + 5);
            *((_OWORD *)v301 + 4) = *((_OWORD *)v302 + 4);
            *((_OWORD *)v301 + 5) = v312;
            *((_OWORD *)v301 + 6) = *((_OWORD *)v302 + 6);
            *(_OWORD *)(v301 + 106) = *(_OWORD *)(v302 + 106);
            v313 = *((_OWORD *)v302 + 1);
            *(_OWORD *)v301 = *(_OWORD *)v302;
            *((_OWORD *)v301 + 1) = v313;
            v314 = *((_OWORD *)v302 + 3);
            *((_OWORD *)v301 + 2) = *((_OWORD *)v302 + 2);
            *((_OWORD *)v301 + 3) = v314;
          }
          *((_BYTE *)a1 + v299[6]) = *((_BYTE *)a2 + v299[6]);
          *((_BYTE *)a1 + v299[7]) = *((_BYTE *)a2 + v299[7]);
          *((_BYTE *)a1 + v299[8]) = *((_BYTE *)a2 + v299[8]);
          *((_BYTE *)a1 + v299[9]) = *((_BYTE *)a2 + v299[9]);
          *((_BYTE *)a1 + v299[10]) = *((_BYTE *)a2 + v299[10]);
          v321 = v299[11];
          v322 = *(void **)((char *)a2 + v321);
          *(void **)((char *)a1 + v321) = v322;
          v323 = v322;
          v255 = a1;
          v256 = v8;
          v257 = 1;
          goto LABEL_204;
        case 2u:
          v590 = a3;
          v602 = v9;
          v76 = *a2;
          *a1 = *a2;
          v77 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v78 = (void **)((char *)a1 + v77);
          v79 = (void **)((char *)a2 + v77);
          v80 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v81 = *(_QWORD *)(v80 - 8);
          v82 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v81 + 48);
          v83 = v76;
          if (v82(v79, 1, v80))
          {
            v84 = sub_10002A750(&qword_100644980);
            memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v79, v80))
            {
              case 1u:
                v152 = *v79;
                *v78 = *v79;
                v153 = v152;
                v154 = v78;
                v155 = v80;
                v156 = 1;
                goto LABEL_172;
              case 2u:
                v350 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v350 - 8) + 16))(v78, v79, v350);
                v154 = v78;
                v155 = v80;
                v156 = 2;
                goto LABEL_172;
              case 3u:
                v351 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v351 - 8) + 16))(v78, v79, v351);
                v154 = v78;
                v155 = v80;
                v156 = 3;
                goto LABEL_172;
              case 4u:
                v352 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v352 - 8) + 16))(v78, v79, v352);
                v154 = v78;
                v155 = v80;
                v156 = 4;
                goto LABEL_172;
              case 5u:
                v353 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v353 - 8) + 16))(v78, v79, v353);
                v154 = v78;
                v155 = v80;
                v156 = 5;
                goto LABEL_172;
              case 6u:
                v354 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v354 - 8) + 16))(v78, v79, v354);
                v154 = v78;
                v155 = v80;
                v156 = 6;
                goto LABEL_172;
              case 8u:
                v355 = *v79;
                *v78 = *v79;
                v356 = v355;
                v154 = v78;
                v155 = v80;
                v156 = 8;
                goto LABEL_172;
              case 9u:
                v357 = *v79;
                *v78 = *v79;
                v358 = v357;
                v154 = v78;
                v155 = v80;
                v156 = 9;
LABEL_172:
                swift_storeEnumTagMultiPayload(v154, v155, v156);
                break;
              default:
                memcpy(v78, v79, *(_QWORD *)(v81 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
          }
          a3 = v590;
          v255 = a1;
          v256 = v8;
          v257 = 2;
          goto LABEL_204;
        case 3u:
          v591 = a3;
          v602 = v9;
          v85 = *a2;
          *a1 = *a2;
          v86 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v87 = (void **)((char *)a1 + v86);
          v88 = (void **)((char *)a2 + v86);
          v89 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v90 = *(_QWORD *)(v89 - 8);
          v91 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v90 + 48);
          v92 = v85;
          if (v91(v88, 1, v89))
          {
            v93 = sub_10002A750(&qword_100644980);
            memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
            a3 = v591;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v88, v89))
            {
              case 1u:
                v157 = *v88;
                *v87 = *v88;
                v158 = v157;
                v159 = v87;
                v160 = v89;
                v161 = 1;
                goto LABEL_201;
              case 2u:
                v359 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v359 - 8) + 16))(v87, v88, v359);
                v159 = v87;
                v160 = v89;
                v161 = 2;
                goto LABEL_201;
              case 3u:
                v360 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v360 - 8) + 16))(v87, v88, v360);
                v159 = v87;
                v160 = v89;
                v161 = 3;
                goto LABEL_201;
              case 4u:
                v361 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v361 - 8) + 16))(v87, v88, v361);
                v159 = v87;
                v160 = v89;
                v161 = 4;
                goto LABEL_201;
              case 5u:
                v379 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v379 - 8) + 16))(v87, v88, v379);
                v159 = v87;
                v160 = v89;
                v161 = 5;
                goto LABEL_201;
              case 6u:
                v362 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v362 - 8) + 16))(v87, v88, v362);
                v159 = v87;
                v160 = v89;
                v161 = 6;
                goto LABEL_201;
              case 8u:
                v363 = *v88;
                *v87 = *v88;
                v364 = v363;
                v159 = v87;
                v160 = v89;
                v161 = 8;
                goto LABEL_201;
              case 9u:
                v365 = *v88;
                *v87 = *v88;
                v366 = v365;
                v159 = v87;
                v160 = v89;
                v161 = 9;
LABEL_201:
                swift_storeEnumTagMultiPayload(v159, v160, v161);
                break;
              default:
                memcpy(v87, v88, *(_QWORD *)(v90 + 64));
                break;
            }
            a3 = v591;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
          }
          v255 = a1;
          v256 = v8;
          v257 = 3;
LABEL_204:
          swift_storeEnumTagMultiPayload(v255, v256, v257);
          v9 = v602;
          break;
        case 4u:
          v592 = a3;
          v606 = v9;
          v94 = *a2;
          *a1 = *a2;
          v95 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v96 = (void **)((char *)a1 + v95);
          v97 = (void **)((char *)a2 + v95);
          v98 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v99 = *(_QWORD *)(v98 - 8);
          v100 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v99 + 48);
          v101 = v94;
          if (v100(v97, 1, v98))
          {
            v102 = sub_10002A750(&qword_100644980);
            memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v97, v98))
            {
              case 1u:
                v162 = *v97;
                *v96 = *v97;
                v163 = v162;
                v164 = v96;
                v165 = v98;
                v166 = 1;
                goto LABEL_190;
              case 2u:
                v367 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v367 - 8) + 16))(v96, v97, v367);
                v164 = v96;
                v165 = v98;
                v166 = 2;
                goto LABEL_190;
              case 3u:
                v368 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v368 - 8) + 16))(v96, v97, v368);
                v164 = v96;
                v165 = v98;
                v166 = 3;
                goto LABEL_190;
              case 4u:
                v369 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v369 - 8) + 16))(v96, v97, v369);
                v164 = v96;
                v165 = v98;
                v166 = 4;
                goto LABEL_190;
              case 5u:
                v370 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v370 - 8) + 16))(v96, v97, v370);
                v164 = v96;
                v165 = v98;
                v166 = 5;
                goto LABEL_190;
              case 6u:
                v371 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v371 - 8) + 16))(v96, v97, v371);
                v164 = v96;
                v165 = v98;
                v166 = 6;
                goto LABEL_190;
              case 8u:
                v372 = *v97;
                *v96 = *v97;
                v373 = v372;
                v164 = v96;
                v165 = v98;
                v166 = 8;
                goto LABEL_190;
              case 9u:
                v374 = *v97;
                *v96 = *v97;
                v375 = v374;
                v164 = v96;
                v165 = v98;
                v166 = 9;
LABEL_190:
                swift_storeEnumTagMultiPayload(v164, v165, v166);
                break;
              default:
                memcpy(v96, v97, *(_QWORD *)(v99 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
          }
          a3 = v592;
          v9 = v606;
          swift_storeEnumTagMultiPayload(a1, v8, 4);
          break;
        case 5u:
          *a1 = *a2;
          *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
          *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
          v103 = a2[2];
          a1[2] = v103;
          v104 = v103;
          swift_storeEnumTagMultiPayload(a1, v8, 5);
          break;
        case 6u:
          v117 = *a2;
          *a1 = *a2;
          v118 = v117;
          swift_storeEnumTagMultiPayload(a1, v8, 6);
          break;
        case 7u:
          v105 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v106 = *(_QWORD *)(v105 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v106 + 48))(a2, 1, v105))
          {
            v107 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
          }
          else
          {
            v167 = *a2;
            *a1 = *a2;
            v168 = *(int *)(v105 + 20);
            v574 = (char *)a1 + v168;
            v594 = a3;
            v169 = (char *)a2 + v168;
            v621 = v8;
            v170 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v171 = v9;
            v172 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v170 - 8) + 16);
            v173 = swift_bridgeObjectRetain(v167);
            v174 = v169;
            a3 = v594;
            v175 = v170;
            v8 = v621;
            v172(v574, v174, v175, v173);
            v9 = v171;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v106 + 56))(a1, 0, 1, v105);
          }
          v176 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v177 = (void **)((char *)a1 + v176);
          v178 = (void **)((char *)a2 + v176);
          v179 = v178[1];
          if (v179)
          {
            *v177 = *v178;
            v177[1] = v179;
            v180 = (void *)v178[2];
            v177[2] = v180;
            swift_bridgeObjectRetain(v179);
            v181 = v180;
          }
          else
          {
            *(_OWORD *)v177 = *(_OWORD *)v178;
            v177[2] = v178[2];
          }
          swift_storeEnumTagMultiPayload(a1, v8, 7);
          break;
        case 8u:
          v119 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v120 = *(_QWORD *)(v119 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v120 + 48))(a2, 1, v119))
          {
            v121 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
          }
          else
          {
            v184 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(a1, a2, v184);
            *((_BYTE *)a1 + *(int *)(v119 + 20)) = *((_BYTE *)a2 + *(int *)(v119 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v120 + 56))(a1, 0, 1, v119);
          }
          v185 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)a1 + *(int *)(v185 + 20)) = *(void **)((char *)a2 + *(int *)(v185 + 20));
          swift_storeEnumTagMultiPayload(a1, v8, 8);
          break;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v108 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v109 = (char *)a1 + v108;
          v110 = (char *)a2 + v108;
          v111 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 16))(v109, v110, v111);
          swift_storeEnumTagMultiPayload(a1, v8, 9);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v9 + 64));
          break;
      }
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v378 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, v6, v378);
  v380 = *(int *)(a3 + 20);
  v381 = (void **)((char *)a1 + v380);
  v382 = (void **)((char *)a2 + v380);
  switch(swift_getEnumCaseMultiPayload(v382, v8))
  {
    case 0u:
      v383 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v614 = a1;
      v622 = v8;
      switch(swift_getEnumCaseMultiPayload(v382, v383))
      {
        case 1u:
          v384 = *v382;
          *v381 = *v382;
          v385 = v384;
          v386 = v381;
          v387 = v383;
          v388 = 1;
          goto LABEL_247;
        case 2u:
          v471 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v471 - 8) + 16))(v381, v382, v471);
          v386 = v381;
          v387 = v383;
          v388 = 2;
          goto LABEL_247;
        case 3u:
          v472 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v472 - 8) + 16))(v381, v382, v472);
          v386 = v381;
          v387 = v383;
          v388 = 3;
          goto LABEL_247;
        case 4u:
          v473 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v473 - 8) + 16))(v381, v382, v473);
          v386 = v381;
          v387 = v383;
          v388 = 4;
          goto LABEL_247;
        case 5u:
          v474 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v474 - 8) + 16))(v381, v382, v474);
          v386 = v381;
          v387 = v383;
          v388 = 5;
          goto LABEL_247;
        case 6u:
          v475 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v475 - 8) + 16))(v381, v382, v475);
          v386 = v381;
          v387 = v383;
          v388 = 6;
          goto LABEL_247;
        case 8u:
          v476 = *v382;
          *v381 = *v382;
          v477 = v476;
          v386 = v381;
          v387 = v383;
          v388 = 8;
          goto LABEL_247;
        case 9u:
          v478 = *v382;
          *v381 = *v382;
          v479 = v478;
          v386 = v381;
          v387 = v383;
          v388 = 9;
LABEL_247:
          swift_storeEnumTagMultiPayload(v386, v387, v388);
          break;
        default:
          memcpy(v381, v382, *(_QWORD *)(*(_QWORD *)(v383 - 8) + 64));
          break;
      }
      v480 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v481 = v480[5];
      v482 = (char *)v381 + v481;
      v483 = (char *)v382 + v481;
      v484 = *(uint64_t *)((char *)v382 + v481 + 8);
      if (v484)
      {
        v608 = v381;
        *(_QWORD *)v482 = *(_QWORD *)v483;
        *((_QWORD *)v482 + 1) = v484;
        v485 = (void *)*((_QWORD *)v483 + 2);
        v486 = *((_QWORD *)v483 + 3);
        v487 = *((_QWORD *)v483 + 4);
        v488 = *((_QWORD *)v483 + 5);
        v489 = *((_QWORD *)v483 + 6);
        v490 = *((_QWORD *)v483 + 7);
        v597 = v483[64];
        swift_bridgeObjectRetain(v484);
        sub_10003E1F0(v485, v486, v487, v488, v489, v490, v597);
        *((_QWORD *)v482 + 2) = v485;
        *((_QWORD *)v482 + 3) = v486;
        *((_QWORD *)v482 + 4) = v487;
        *((_QWORD *)v482 + 5) = v488;
        *((_QWORD *)v482 + 6) = v489;
        *((_QWORD *)v482 + 7) = v490;
        v482[64] = v597;
        *(_DWORD *)(v482 + 65) = *(_DWORD *)(v483 + 65);
        v491 = v483[120];
        if (v491 == 255)
        {
          v492 = *(_OWORD *)(v483 + 88);
          *(_OWORD *)(v482 + 72) = *(_OWORD *)(v483 + 72);
          *(_OWORD *)(v482 + 88) = v492;
          *(_OWORD *)(v482 + 104) = *(_OWORD *)(v483 + 104);
          v482[120] = v483[120];
        }
        else
        {
          v598 = v491 & 1;
          v497 = (void *)*((_QWORD *)v483 + 9);
          v498 = *((_QWORD *)v483 + 10);
          v499 = *((_QWORD *)v483 + 11);
          v500 = *((_QWORD *)v483 + 12);
          v501 = *((_QWORD *)v483 + 13);
          v502 = *((_QWORD *)v483 + 14);
          sub_10002B764(v497, v498, v499, v500, v501, v502, v491 & 1);
          *((_QWORD *)v482 + 9) = v497;
          *((_QWORD *)v482 + 10) = v498;
          *((_QWORD *)v482 + 11) = v499;
          *((_QWORD *)v482 + 12) = v500;
          *((_QWORD *)v482 + 13) = v501;
          *((_QWORD *)v482 + 14) = v502;
          v482[120] = v598;
        }
        a1 = v614;
        v496 = v622;
        v482[121] = v483[121];
        v381 = v608;
      }
      else
      {
        v493 = *((_OWORD *)v483 + 5);
        *((_OWORD *)v482 + 4) = *((_OWORD *)v483 + 4);
        *((_OWORD *)v482 + 5) = v493;
        *((_OWORD *)v482 + 6) = *((_OWORD *)v483 + 6);
        *(_OWORD *)(v482 + 106) = *(_OWORD *)(v483 + 106);
        v494 = *((_OWORD *)v483 + 1);
        *(_OWORD *)v482 = *(_OWORD *)v483;
        *((_OWORD *)v482 + 1) = v494;
        v495 = *((_OWORD *)v483 + 3);
        *((_OWORD *)v482 + 2) = *((_OWORD *)v483 + 2);
        *((_OWORD *)v482 + 3) = v495;
        v496 = v8;
      }
      *((_BYTE *)v381 + v480[6]) = *((_BYTE *)v382 + v480[6]);
      *((_BYTE *)v381 + v480[7]) = *((_BYTE *)v382 + v480[7]);
      *((_BYTE *)v381 + v480[8]) = *((_BYTE *)v382 + v480[8]);
      *((_BYTE *)v381 + v480[9]) = *((_BYTE *)v382 + v480[9]);
      *((_BYTE *)v381 + v480[10]) = *((_BYTE *)v382 + v480[10]);
      v503 = v480[11];
      v504 = *(void **)((char *)v382 + v503);
      *(void **)((char *)v381 + v503) = v504;
      v505 = v504;
      v424 = v381;
      v425 = v496;
      v426 = 0;
      goto LABEL_304;
    case 1u:
      v389 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v615 = a1;
      v623 = v8;
      switch(swift_getEnumCaseMultiPayload(v382, v389))
      {
        case 1u:
          v390 = *v382;
          *v381 = *v382;
          v391 = v390;
          v392 = v381;
          v393 = v389;
          v394 = 1;
          goto LABEL_263;
        case 2u:
          v506 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v506 - 8) + 16))(v381, v382, v506);
          v392 = v381;
          v393 = v389;
          v394 = 2;
          goto LABEL_263;
        case 3u:
          v507 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v507 - 8) + 16))(v381, v382, v507);
          v392 = v381;
          v393 = v389;
          v394 = 3;
          goto LABEL_263;
        case 4u:
          v508 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v508 - 8) + 16))(v381, v382, v508);
          v392 = v381;
          v393 = v389;
          v394 = 4;
          goto LABEL_263;
        case 5u:
          v509 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v509 - 8) + 16))(v381, v382, v509);
          v392 = v381;
          v393 = v389;
          v394 = 5;
          goto LABEL_263;
        case 6u:
          v510 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v510 - 8) + 16))(v381, v382, v510);
          v392 = v381;
          v393 = v389;
          v394 = 6;
          goto LABEL_263;
        case 8u:
          v511 = *v382;
          *v381 = *v382;
          v512 = v511;
          v392 = v381;
          v393 = v389;
          v394 = 8;
          goto LABEL_263;
        case 9u:
          v513 = *v382;
          *v381 = *v382;
          v514 = v513;
          v392 = v381;
          v393 = v389;
          v394 = 9;
LABEL_263:
          swift_storeEnumTagMultiPayload(v392, v393, v394);
          break;
        default:
          memcpy(v381, v382, *(_QWORD *)(*(_QWORD *)(v389 - 8) + 64));
          break;
      }
      v515 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v516 = v515[5];
      v517 = (char *)v381 + v516;
      v518 = (char *)v382 + v516;
      v519 = *(uint64_t *)((char *)v382 + v516 + 8);
      if (v519)
      {
        v609 = v381;
        *(_QWORD *)v517 = *(_QWORD *)v518;
        *((_QWORD *)v517 + 1) = v519;
        v520 = (void *)*((_QWORD *)v518 + 2);
        v521 = *((_QWORD *)v518 + 3);
        v522 = *((_QWORD *)v518 + 4);
        v523 = *((_QWORD *)v518 + 5);
        v524 = *((_QWORD *)v518 + 6);
        v525 = *((_QWORD *)v518 + 7);
        v599 = v518[64];
        swift_bridgeObjectRetain(v519);
        sub_10003E1F0(v520, v521, v522, v523, v524, v525, v599);
        *((_QWORD *)v517 + 2) = v520;
        *((_QWORD *)v517 + 3) = v521;
        *((_QWORD *)v517 + 4) = v522;
        *((_QWORD *)v517 + 5) = v523;
        *((_QWORD *)v517 + 6) = v524;
        *((_QWORD *)v517 + 7) = v525;
        v517[64] = v599;
        *(_DWORD *)(v517 + 65) = *(_DWORD *)(v518 + 65);
        v526 = v518[120];
        if (v526 == 255)
        {
          v527 = *(_OWORD *)(v518 + 88);
          *(_OWORD *)(v517 + 72) = *(_OWORD *)(v518 + 72);
          *(_OWORD *)(v517 + 88) = v527;
          *(_OWORD *)(v517 + 104) = *(_OWORD *)(v518 + 104);
          v517[120] = v518[120];
        }
        else
        {
          v600 = v526 & 1;
          v532 = (void *)*((_QWORD *)v518 + 9);
          v533 = *((_QWORD *)v518 + 10);
          v534 = *((_QWORD *)v518 + 11);
          v535 = *((_QWORD *)v518 + 12);
          v536 = *((_QWORD *)v518 + 13);
          v537 = *((_QWORD *)v518 + 14);
          sub_10002B764(v532, v533, v534, v535, v536, v537, v526 & 1);
          *((_QWORD *)v517 + 9) = v532;
          *((_QWORD *)v517 + 10) = v533;
          *((_QWORD *)v517 + 11) = v534;
          *((_QWORD *)v517 + 12) = v535;
          *((_QWORD *)v517 + 13) = v536;
          *((_QWORD *)v517 + 14) = v537;
          v517[120] = v600;
        }
        a1 = v615;
        v531 = v623;
        v517[121] = v518[121];
        v381 = v609;
      }
      else
      {
        v528 = *((_OWORD *)v518 + 5);
        *((_OWORD *)v517 + 4) = *((_OWORD *)v518 + 4);
        *((_OWORD *)v517 + 5) = v528;
        *((_OWORD *)v517 + 6) = *((_OWORD *)v518 + 6);
        *(_OWORD *)(v517 + 106) = *(_OWORD *)(v518 + 106);
        v529 = *((_OWORD *)v518 + 1);
        *(_OWORD *)v517 = *(_OWORD *)v518;
        *((_OWORD *)v517 + 1) = v529;
        v530 = *((_OWORD *)v518 + 3);
        *((_OWORD *)v517 + 2) = *((_OWORD *)v518 + 2);
        *((_OWORD *)v517 + 3) = v530;
        v531 = v8;
      }
      *((_BYTE *)v381 + v515[6]) = *((_BYTE *)v382 + v515[6]);
      *((_BYTE *)v381 + v515[7]) = *((_BYTE *)v382 + v515[7]);
      *((_BYTE *)v381 + v515[8]) = *((_BYTE *)v382 + v515[8]);
      *((_BYTE *)v381 + v515[9]) = *((_BYTE *)v382 + v515[9]);
      *((_BYTE *)v381 + v515[10]) = *((_BYTE *)v382 + v515[10]);
      v538 = v515[11];
      v539 = *(void **)((char *)v382 + v538);
      *(void **)((char *)v381 + v538) = v539;
      v540 = v539;
      v424 = v381;
      v425 = v531;
      v426 = 1;
      goto LABEL_304;
    case 2u:
      v395 = *v382;
      *v381 = *v382;
      v396 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v397 = (void **)((char *)v381 + v396);
      v398 = (void **)((char *)v382 + v396);
      v399 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v400 = *(_QWORD *)(v399 - 8);
      v401 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v400 + 48);
      v402 = v395;
      if (v401(v398, 1, v399))
      {
        v403 = sub_10002A750(&qword_100644980);
        memcpy(v397, v398, *(_QWORD *)(*(_QWORD *)(v403 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v398, v399))
        {
          case 1u:
            v439 = *v398;
            *v397 = *v398;
            v440 = v439;
            v441 = v397;
            v442 = v399;
            v443 = 1;
            goto LABEL_279;
          case 2u:
            v541 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v541 - 8) + 16))(v397, v398, v541);
            v441 = v397;
            v442 = v399;
            v443 = 2;
            goto LABEL_279;
          case 3u:
            v542 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v542 - 8) + 16))(v397, v398, v542);
            v441 = v397;
            v442 = v399;
            v443 = 3;
            goto LABEL_279;
          case 4u:
            v543 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v543 - 8) + 16))(v397, v398, v543);
            v441 = v397;
            v442 = v399;
            v443 = 4;
            goto LABEL_279;
          case 5u:
            v544 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v544 - 8) + 16))(v397, v398, v544);
            v441 = v397;
            v442 = v399;
            v443 = 5;
            goto LABEL_279;
          case 6u:
            v545 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v545 - 8) + 16))(v397, v398, v545);
            v441 = v397;
            v442 = v399;
            v443 = 6;
            goto LABEL_279;
          case 8u:
            v546 = *v398;
            *v397 = *v398;
            v547 = v546;
            v441 = v397;
            v442 = v399;
            v443 = 8;
            goto LABEL_279;
          case 9u:
            v548 = *v398;
            *v397 = *v398;
            v549 = v548;
            v441 = v397;
            v442 = v399;
            v443 = 9;
LABEL_279:
            swift_storeEnumTagMultiPayload(v441, v442, v443);
            break;
          default:
            memcpy(v397, v398, *(_QWORD *)(v400 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v400 + 56))(v397, 0, 1, v399);
      }
      v424 = v381;
      v425 = v8;
      v426 = 2;
      goto LABEL_304;
    case 3u:
      v404 = *v382;
      *v381 = *v382;
      v405 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v406 = (void **)((char *)v381 + v405);
      v407 = (void **)((char *)v382 + v405);
      v408 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v409 = *(_QWORD *)(v408 - 8);
      v410 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v409 + 48);
      v411 = v404;
      if (v410(v407, 1, v408))
      {
        v412 = sub_10002A750(&qword_100644980);
        memcpy(v406, v407, *(_QWORD *)(*(_QWORD *)(v412 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v407, v408))
        {
          case 1u:
            v444 = *v407;
            *v406 = *v407;
            v445 = v444;
            v446 = v406;
            v447 = v408;
            v448 = 1;
            goto LABEL_290;
          case 2u:
            v550 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v550 - 8) + 16))(v406, v407, v550);
            v446 = v406;
            v447 = v408;
            v448 = 2;
            goto LABEL_290;
          case 3u:
            v551 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v551 - 8) + 16))(v406, v407, v551);
            v446 = v406;
            v447 = v408;
            v448 = 3;
            goto LABEL_290;
          case 4u:
            v552 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v552 - 8) + 16))(v406, v407, v552);
            v446 = v406;
            v447 = v408;
            v448 = 4;
            goto LABEL_290;
          case 5u:
            v553 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v553 - 8) + 16))(v406, v407, v553);
            v446 = v406;
            v447 = v408;
            v448 = 5;
            goto LABEL_290;
          case 6u:
            v554 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v554 - 8) + 16))(v406, v407, v554);
            v446 = v406;
            v447 = v408;
            v448 = 6;
            goto LABEL_290;
          case 8u:
            v555 = *v407;
            *v406 = *v407;
            v556 = v555;
            v446 = v406;
            v447 = v408;
            v448 = 8;
            goto LABEL_290;
          case 9u:
            v557 = *v407;
            *v406 = *v407;
            v558 = v557;
            v446 = v406;
            v447 = v408;
            v448 = 9;
LABEL_290:
            swift_storeEnumTagMultiPayload(v446, v447, v448);
            break;
          default:
            memcpy(v406, v407, *(_QWORD *)(v409 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v409 + 56))(v406, 0, 1, v408);
      }
      v424 = v381;
      v425 = v8;
      v426 = 3;
      goto LABEL_304;
    case 4u:
      v413 = *v382;
      *v381 = *v382;
      v414 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v415 = (void **)((char *)v381 + v414);
      v416 = (void **)((char *)v382 + v414);
      v417 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v418 = *(_QWORD *)(v417 - 8);
      v419 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v418 + 48);
      v420 = v413;
      if (v419(v416, 1, v417))
      {
        v421 = sub_10002A750(&qword_100644980);
        memcpy(v415, v416, *(_QWORD *)(*(_QWORD *)(v421 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v416, v417))
        {
          case 1u:
            v449 = *v416;
            *v415 = *v416;
            v450 = v449;
            v451 = v415;
            v452 = v417;
            v453 = 1;
            goto LABEL_301;
          case 2u:
            v559 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v559 - 8) + 16))(v415, v416, v559);
            v451 = v415;
            v452 = v417;
            v453 = 2;
            goto LABEL_301;
          case 3u:
            v560 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v560 - 8) + 16))(v415, v416, v560);
            v451 = v415;
            v452 = v417;
            v453 = 3;
            goto LABEL_301;
          case 4u:
            v561 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v561 - 8) + 16))(v415, v416, v561);
            v451 = v415;
            v452 = v417;
            v453 = 4;
            goto LABEL_301;
          case 5u:
            v562 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v562 - 8) + 16))(v415, v416, v562);
            v451 = v415;
            v452 = v417;
            v453 = 5;
            goto LABEL_301;
          case 6u:
            v563 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v563 - 8) + 16))(v415, v416, v563);
            v451 = v415;
            v452 = v417;
            v453 = 6;
            goto LABEL_301;
          case 8u:
            v564 = *v416;
            *v415 = *v416;
            v565 = v564;
            v451 = v415;
            v452 = v417;
            v453 = 8;
            goto LABEL_301;
          case 9u:
            v566 = *v416;
            *v415 = *v416;
            v567 = v566;
            v451 = v415;
            v452 = v417;
            v453 = 9;
LABEL_301:
            swift_storeEnumTagMultiPayload(v451, v452, v453);
            break;
          default:
            memcpy(v415, v416, *(_QWORD *)(v418 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v418 + 56))(v415, 0, 1, v417);
      }
      v424 = v381;
      v425 = v8;
      v426 = 4;
      goto LABEL_304;
    case 5u:
      *v381 = *v382;
      *((_BYTE *)v381 + 8) = *((_BYTE *)v382 + 8);
      *(_WORD *)((char *)v381 + 9) = *(_WORD *)((char *)v382 + 9);
      v422 = v382[2];
      v381[2] = v422;
      v423 = v422;
      v424 = v381;
      v425 = v8;
      v426 = 5;
      goto LABEL_304;
    case 6u:
      v434 = *v382;
      *v381 = *v382;
      v435 = v434;
      v424 = v381;
      v425 = v8;
      v426 = 6;
      goto LABEL_304;
    case 7u:
      v427 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v428 = *(_QWORD *)(v427 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v428 + 48))(v382, 1, v427))
      {
        v429 = sub_10002A750(&qword_100644600);
        memcpy(v381, v382, *(_QWORD *)(*(_QWORD *)(v429 - 8) + 64));
      }
      else
      {
        v454 = *v382;
        *v381 = *v382;
        v455 = *(int *)(v427 + 20);
        v607 = (char *)v381 + v455;
        v456 = (char *)v382 + v455;
        v457 = a1;
        v458 = v381;
        v459 = type metadata accessor for REMHashtagLabelSpecifier(0);
        v460 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v459 - 8) + 16);
        v461 = swift_bridgeObjectRetain(v454);
        v462 = v459;
        v381 = v458;
        a1 = v457;
        v460(v607, v456, v462, v461);
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v428 + 56))(v381, 0, 1, v427);
      }
      v463 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v464 = (void **)((char *)v381 + v463);
      v465 = (void **)((char *)v382 + v463);
      v466 = v465[1];
      if (v466)
      {
        *v464 = *v465;
        v464[1] = v466;
        v467 = (void *)v465[2];
        v464[2] = v467;
        swift_bridgeObjectRetain(v466);
        v468 = v467;
      }
      else
      {
        *(_OWORD *)v464 = *(_OWORD *)v465;
        v464[2] = v465[2];
      }
      v424 = v381;
      v425 = v8;
      v426 = 7;
      goto LABEL_304;
    case 8u:
      v436 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v437 = *(_QWORD *)(v436 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v437 + 48))(v382, 1, v436))
      {
        v438 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(v381, v382, *(_QWORD *)(*(_QWORD *)(v438 - 8) + 64));
      }
      else
      {
        v469 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v469 - 8) + 16))(v381, v382, v469);
        *((_BYTE *)v381 + *(int *)(v436 + 20)) = *((_BYTE *)v382 + *(int *)(v436 + 20));
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v437 + 56))(v381, 0, 1, v436);
      }
      v470 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(void **)((char *)v381 + *(int *)(v470 + 20)) = *(void **)((char *)v382 + *(int *)(v470 + 20));
      v424 = v381;
      v425 = v8;
      v426 = 8;
      goto LABEL_304;
    case 9u:
      *(_BYTE *)v381 = *(_BYTE *)v382;
      v430 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v431 = (char *)v381 + v430;
      v432 = (char *)v382 + v430;
      v433 = type metadata accessor for AnyTip(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v433 - 8) + 16))(v431, v432, v433);
      v424 = v381;
      v425 = v8;
      v426 = 9;
LABEL_304:
      swift_storeEnumTagMultiPayload(v424, v425, v426);
      break;
    default:
      memcpy(v381, v382, *(_QWORD *)(v9 + 64));
      break;
  }
  return a1;
}

_QWORD *sub_1003BC8D4(uint64_t a1, void **a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void **v32;
  void **v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(void **, uint64_t, uint64_t);
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void **v41;
  void **v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(void **, uint64_t, uint64_t);
  id v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  void **v50;
  void **v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(void **, uint64_t, uint64_t);
  id v55;
  uint64_t v56;
  void *v57;
  id v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  void **v77;
  void **v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(void **, uint64_t, uint64_t);
  id v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  void **v86;
  void **v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int (*v90)(void **, uint64_t, uint64_t);
  id v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  void **v95;
  void **v96;
  uint64_t v97;
  uint64_t v98;
  unsigned int (*v99)(void **, uint64_t, uint64_t);
  id v100;
  uint64_t v101;
  void *v102;
  id v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  void *v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  id v125;
  void **v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  id v130;
  void **v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  id v135;
  void **v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  void (*v144)(char *, char *, uint64_t, __n128);
  __n128 v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  _QWORD *v150;
  uint64_t v151;
  void *v152;
  id v153;
  void *v154;
  id v155;
  void **v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  id v160;
  void **v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  id v165;
  void **v166;
  uint64_t v167;
  uint64_t v168;
  void *v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  void (*v174)(char *, char *, uint64_t, __n128);
  __n128 v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;
  _QWORD *v180;
  uint64_t v181;
  void *v182;
  id v183;
  __int128 v184;
  __int128 v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  void *v195;
  id v196;
  void *v197;
  id v198;
  int *v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  void *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  int v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  void *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  void *v225;
  id v226;
  _QWORD *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  void *v235;
  id v236;
  void *v237;
  id v238;
  int *v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  void *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  int v249;
  __int128 v250;
  __int128 v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  void *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  void *v265;
  id v266;
  _QWORD *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  void *v275;
  id v276;
  void *v277;
  id v278;
  int *v279;
  uint64_t v280;
  char *v281;
  char *v282;
  uint64_t v283;
  void *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  int v289;
  __int128 v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  __int128 v294;
  __int128 v295;
  __int128 v296;
  __int128 v297;
  __int128 v298;
  void *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  void *v305;
  id v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  void *v312;
  id v313;
  void *v314;
  id v315;
  int *v316;
  uint64_t v317;
  char *v318;
  char *v319;
  uint64_t v320;
  void *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  int v327;
  __int128 v328;
  __int128 v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  __int128 v334;
  __int128 v335;
  __int128 v336;
  void *v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  void *v344;
  id v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  void *v351;
  id v352;
  void *v353;
  id v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  void *v360;
  id v361;
  void *v362;
  id v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  void *v369;
  id v370;
  void *v371;
  id v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  void *v380;
  id v381;
  void *v382;
  id v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  void *v389;
  id v390;
  void *v391;
  id v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  void *v398;
  id v399;
  void *v400;
  id v401;
  uint64_t v402;
  void **v403;
  void **v404;
  uint64_t v405;
  void *v406;
  id v407;
  void **v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  void *v412;
  id v413;
  void **v414;
  uint64_t v415;
  uint64_t v416;
  void *v417;
  uint64_t v418;
  void **v419;
  void **v420;
  uint64_t v421;
  uint64_t v422;
  unsigned int (*v423)(void **, uint64_t, uint64_t);
  id v424;
  uint64_t v425;
  void *v426;
  uint64_t v427;
  void **v428;
  void **v429;
  uint64_t v430;
  uint64_t v431;
  unsigned int (*v432)(void **, uint64_t, uint64_t);
  id v433;
  uint64_t v434;
  void *v435;
  uint64_t v436;
  void **v437;
  void **v438;
  uint64_t v439;
  uint64_t v440;
  unsigned int (*v441)(void **, uint64_t, uint64_t);
  id v442;
  uint64_t v443;
  void *v444;
  id v445;
  void **v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  char *v453;
  char *v454;
  uint64_t v455;
  void *v456;
  id v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  void *v461;
  id v462;
  void **v463;
  uint64_t v464;
  uint64_t v465;
  void *v466;
  id v467;
  void **v468;
  uint64_t v469;
  uint64_t v470;
  void *v471;
  id v472;
  void **v473;
  uint64_t v474;
  uint64_t v475;
  void *v476;
  uint64_t v477;
  char *v478;
  uint64_t v479;
  uint64_t v480;
  void (*v481)(char *, char *, uint64_t, __n128);
  __n128 v482;
  uint64_t v483;
  _QWORD *v484;
  _QWORD *v485;
  uint64_t v486;
  void *v487;
  id v488;
  __int128 v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  void *v497;
  id v498;
  void *v499;
  id v500;
  int *v501;
  uint64_t v502;
  char *v503;
  char *v504;
  uint64_t v505;
  void *v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  int v512;
  __int128 v513;
  __int128 v514;
  __int128 v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  __int128 v521;
  uint64_t v522;
  uint64_t v523;
  void *v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  void *v530;
  id v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  void *v537;
  id v538;
  void *v539;
  id v540;
  int *v541;
  uint64_t v542;
  char *v543;
  char *v544;
  uint64_t v545;
  void *v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  int v552;
  __int128 v553;
  __int128 v554;
  __int128 v555;
  __int128 v556;
  __int128 v557;
  __int128 v558;
  __int128 v559;
  __int128 v560;
  __int128 v561;
  uint64_t v562;
  uint64_t v563;
  void *v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  void *v570;
  id v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  void *v577;
  id v578;
  void *v579;
  id v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  void *v586;
  id v587;
  void *v588;
  id v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  void *v595;
  id v596;
  void *v597;
  id v598;
  unsigned __int8 v600;
  uint64_t v601;
  unsigned __int8 v602;
  uint64_t v603;
  unsigned __int8 v604;
  uint64_t v605;
  uint64_t v606;
  char v607;
  uint64_t v608;
  char v609;
  uint64_t v610;
  char v611;
  unsigned __int8 v612;
  char v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  uint64_t v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  unsigned __int8 v621;
  char v622;
  unsigned __int8 v623;
  char v624;
  _QWORD *v625;
  _QWORD *v626;
  _QWORD *v627;
  _QWORD *v628;
  _QWORD *v629;
  _QWORD *v630;
  _QWORD *v631;
  _QWORD *v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  char *v648;
  void **v649;
  void **v650;

  v3 = (_QWORD *)a1;
  if ((void **)a1 != a2)
  {
    sub_1000073A0(a1, &qword_10064B6B0);
    v5 = sub_10002A750(&qword_10064B6B0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v5);
    v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7);
    if (EnumCaseMultiPayload == 1)
    {
      if (v9)
      {
        v10 = sub_10002A750((uint64_t *)&unk_100640EB0);
        memcpy(v3, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(a2, v7))
        {
          case 0u:
            v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v615 = v8;
            switch(swift_getEnumCaseMultiPayload(a2, v12))
            {
              case 1u:
                v13 = *a2;
                *v3 = *a2;
                v14 = v13;
                v15 = v3;
                v16 = v12;
                v17 = 1;
                goto LABEL_79;
              case 2u:
                v190 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v3, a2, v190);
                v15 = v3;
                v16 = v12;
                v17 = 2;
                goto LABEL_79;
              case 3u:
                v191 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v3, a2, v191);
                v15 = v3;
                v16 = v12;
                v17 = 3;
                goto LABEL_79;
              case 4u:
                v192 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v192 - 8) + 16))(v3, a2, v192);
                v15 = v3;
                v16 = v12;
                v17 = 4;
                goto LABEL_79;
              case 5u:
                v193 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v193 - 8) + 16))(v3, a2, v193);
                v15 = v3;
                v16 = v12;
                v17 = 5;
                goto LABEL_79;
              case 6u:
                v194 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v194 - 8) + 16))(v3, a2, v194);
                v15 = v3;
                v16 = v12;
                v17 = 6;
                goto LABEL_79;
              case 8u:
                v195 = *a2;
                *v3 = *a2;
                v196 = v195;
                v15 = v3;
                v16 = v12;
                v17 = 8;
                goto LABEL_79;
              case 9u:
                v197 = *a2;
                *v3 = *a2;
                v198 = v197;
                v15 = v3;
                v16 = v12;
                v17 = 9;
LABEL_79:
                swift_storeEnumTagMultiPayload(v15, v16, v17);
                break;
              default:
                memcpy(v3, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
                break;
            }
            v199 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v200 = v199[5];
            v201 = (char *)v3 + v200;
            v202 = (char *)a2 + v200;
            if (*(void **)((char *)a2 + v200 + 8))
            {
              v627 = v3;
              v643 = v7;
              *(_QWORD *)v201 = *(_QWORD *)v202;
              v203 = *((_QWORD *)v202 + 1);
              *((_QWORD *)v201 + 1) = v203;
              v204 = (void *)*((_QWORD *)v202 + 2);
              v205 = *((_QWORD *)v202 + 3);
              v207 = *((_QWORD *)v202 + 4);
              v206 = *((_QWORD *)v202 + 5);
              v208 = *((_QWORD *)v202 + 6);
              v606 = *((_QWORD *)v202 + 7);
              v600 = v202[64];
              swift_bridgeObjectRetain(v203);
              sub_10003E1F0(v204, v205, v207, v206, v208, v606, v600);
              *((_QWORD *)v201 + 2) = v204;
              *((_QWORD *)v201 + 3) = v205;
              *((_QWORD *)v201 + 4) = v207;
              *((_QWORD *)v201 + 5) = v206;
              *((_QWORD *)v201 + 6) = v208;
              *((_QWORD *)v201 + 7) = v606;
              v201[64] = v600;
              v201[65] = v202[65];
              v201[66] = v202[66];
              v201[67] = v202[67];
              v201[68] = v202[68];
              v209 = v202[120];
              if (v209 == 255)
              {
                v210 = *(_OWORD *)(v202 + 72);
                v211 = *(_OWORD *)(v202 + 88);
                v212 = *(_OWORD *)(v202 + 104);
                v201[120] = v202[120];
                *(_OWORD *)(v201 + 88) = v211;
                *(_OWORD *)(v201 + 104) = v212;
                *(_OWORD *)(v201 + 72) = v210;
              }
              else
              {
                v607 = v209 & 1;
                v219 = (void *)*((_QWORD *)v202 + 9);
                v220 = *((_QWORD *)v202 + 10);
                v222 = *((_QWORD *)v202 + 11);
                v221 = *((_QWORD *)v202 + 12);
                v223 = *((_QWORD *)v202 + 13);
                v601 = *((_QWORD *)v202 + 14);
                sub_10002B764(v219, v220, v222, v221, v223, v601, v209 & 1);
                *((_QWORD *)v201 + 9) = v219;
                *((_QWORD *)v201 + 10) = v220;
                *((_QWORD *)v201 + 11) = v222;
                *((_QWORD *)v201 + 12) = v221;
                *((_QWORD *)v201 + 13) = v223;
                *((_QWORD *)v201 + 14) = v601;
                v201[120] = v607;
              }
              v3 = v627;
              v7 = v643;
              v201[121] = v202[121];
            }
            else
            {
              v213 = *(_OWORD *)v202;
              v214 = *((_OWORD *)v202 + 1);
              v215 = *((_OWORD *)v202 + 3);
              *((_OWORD *)v201 + 2) = *((_OWORD *)v202 + 2);
              *((_OWORD *)v201 + 3) = v215;
              *(_OWORD *)v201 = v213;
              *((_OWORD *)v201 + 1) = v214;
              v216 = *((_OWORD *)v202 + 4);
              v217 = *((_OWORD *)v202 + 5);
              v218 = *((_OWORD *)v202 + 6);
              *(_OWORD *)(v201 + 106) = *(_OWORD *)(v202 + 106);
              *((_OWORD *)v201 + 5) = v217;
              *((_OWORD *)v201 + 6) = v218;
              *((_OWORD *)v201 + 4) = v216;
            }
            *((_BYTE *)v3 + v199[6]) = *((_BYTE *)a2 + v199[6]);
            *((_BYTE *)v3 + v199[7]) = *((_BYTE *)a2 + v199[7]);
            *((_BYTE *)v3 + v199[8]) = *((_BYTE *)a2 + v199[8]);
            *((_BYTE *)v3 + v199[9]) = *((_BYTE *)a2 + v199[9]);
            *((_BYTE *)v3 + v199[10]) = *((_BYTE *)a2 + v199[10]);
            v224 = v199[11];
            v225 = *(void **)((char *)a2 + v224);
            *(_QWORD *)((char *)v3 + v224) = v225;
            v226 = v225;
            v227 = v3;
            v228 = v7;
            v229 = 0;
            goto LABEL_119;
          case 1u:
            v24 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v615 = v8;
            switch(swift_getEnumCaseMultiPayload(a2, v24))
            {
              case 1u:
                v25 = *a2;
                *v3 = *a2;
                v26 = v25;
                v27 = v3;
                v28 = v24;
                v29 = 1;
                goto LABEL_111;
              case 2u:
                v270 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v270 - 8) + 16))(v3, a2, v270);
                v27 = v3;
                v28 = v24;
                v29 = 2;
                goto LABEL_111;
              case 3u:
                v271 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v271 - 8) + 16))(v3, a2, v271);
                v27 = v3;
                v28 = v24;
                v29 = 3;
                goto LABEL_111;
              case 4u:
                v272 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v272 - 8) + 16))(v3, a2, v272);
                v27 = v3;
                v28 = v24;
                v29 = 4;
                goto LABEL_111;
              case 5u:
                v273 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v273 - 8) + 16))(v3, a2, v273);
                v27 = v3;
                v28 = v24;
                v29 = 5;
                goto LABEL_111;
              case 6u:
                v274 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v274 - 8) + 16))(v3, a2, v274);
                v27 = v3;
                v28 = v24;
                v29 = 6;
                goto LABEL_111;
              case 8u:
                v275 = *a2;
                *v3 = *a2;
                v276 = v275;
                v27 = v3;
                v28 = v24;
                v29 = 8;
                goto LABEL_111;
              case 9u:
                v277 = *a2;
                *v3 = *a2;
                v278 = v277;
                v27 = v3;
                v28 = v24;
                v29 = 9;
LABEL_111:
                swift_storeEnumTagMultiPayload(v27, v28, v29);
                break;
              default:
                memcpy(v3, a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
                break;
            }
            v279 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v280 = v279[5];
            v281 = (char *)v3 + v280;
            v282 = (char *)a2 + v280;
            if (*(void **)((char *)a2 + v280 + 8))
            {
              v629 = v3;
              v644 = v7;
              *(_QWORD *)v281 = *(_QWORD *)v282;
              v283 = *((_QWORD *)v282 + 1);
              *((_QWORD *)v281 + 1) = v283;
              v284 = (void *)*((_QWORD *)v282 + 2);
              v285 = *((_QWORD *)v282 + 3);
              v287 = *((_QWORD *)v282 + 4);
              v286 = *((_QWORD *)v282 + 5);
              v288 = *((_QWORD *)v282 + 6);
              v610 = *((_QWORD *)v282 + 7);
              v604 = v282[64];
              swift_bridgeObjectRetain(v283);
              sub_10003E1F0(v284, v285, v287, v286, v288, v610, v604);
              *((_QWORD *)v281 + 2) = v284;
              *((_QWORD *)v281 + 3) = v285;
              *((_QWORD *)v281 + 4) = v287;
              *((_QWORD *)v281 + 5) = v286;
              *((_QWORD *)v281 + 6) = v288;
              *((_QWORD *)v281 + 7) = v610;
              v281[64] = v604;
              v281[65] = v282[65];
              v281[66] = v282[66];
              v281[67] = v282[67];
              v281[68] = v282[68];
              v289 = v282[120];
              if (v289 == 255)
              {
                v290 = *(_OWORD *)(v282 + 72);
                v291 = *(_OWORD *)(v282 + 88);
                v292 = *(_OWORD *)(v282 + 104);
                v281[120] = v282[120];
                *(_OWORD *)(v281 + 88) = v291;
                *(_OWORD *)(v281 + 104) = v292;
                *(_OWORD *)(v281 + 72) = v290;
              }
              else
              {
                v611 = v289 & 1;
                v299 = (void *)*((_QWORD *)v282 + 9);
                v300 = *((_QWORD *)v282 + 10);
                v302 = *((_QWORD *)v282 + 11);
                v301 = *((_QWORD *)v282 + 12);
                v303 = *((_QWORD *)v282 + 13);
                v605 = *((_QWORD *)v282 + 14);
                sub_10002B764(v299, v300, v302, v301, v303, v605, v289 & 1);
                *((_QWORD *)v281 + 9) = v299;
                *((_QWORD *)v281 + 10) = v300;
                *((_QWORD *)v281 + 11) = v302;
                *((_QWORD *)v281 + 12) = v301;
                *((_QWORD *)v281 + 13) = v303;
                *((_QWORD *)v281 + 14) = v605;
                v281[120] = v611;
              }
              v3 = v629;
              v7 = v644;
              v281[121] = v282[121];
            }
            else
            {
              v293 = *(_OWORD *)v282;
              v294 = *((_OWORD *)v282 + 1);
              v295 = *((_OWORD *)v282 + 3);
              *((_OWORD *)v281 + 2) = *((_OWORD *)v282 + 2);
              *((_OWORD *)v281 + 3) = v295;
              *(_OWORD *)v281 = v293;
              *((_OWORD *)v281 + 1) = v294;
              v296 = *((_OWORD *)v282 + 4);
              v297 = *((_OWORD *)v282 + 5);
              v298 = *((_OWORD *)v282 + 6);
              *(_OWORD *)(v281 + 106) = *(_OWORD *)(v282 + 106);
              *((_OWORD *)v281 + 5) = v297;
              *((_OWORD *)v281 + 6) = v298;
              *((_OWORD *)v281 + 4) = v296;
            }
            *((_BYTE *)v3 + v279[6]) = *((_BYTE *)a2 + v279[6]);
            *((_BYTE *)v3 + v279[7]) = *((_BYTE *)a2 + v279[7]);
            *((_BYTE *)v3 + v279[8]) = *((_BYTE *)a2 + v279[8]);
            *((_BYTE *)v3 + v279[9]) = *((_BYTE *)a2 + v279[9]);
            *((_BYTE *)v3 + v279[10]) = *((_BYTE *)a2 + v279[10]);
            v304 = v279[11];
            v305 = *(void **)((char *)a2 + v304);
            *(_QWORD *)((char *)v3 + v304) = v305;
            v306 = v305;
            v227 = v3;
            v228 = v7;
            v229 = 1;
LABEL_119:
            swift_storeEnumTagMultiPayload(v227, v228, v229);
            v8 = v615;
            break;
          case 2u:
            v617 = v8;
            v634 = v7;
            v30 = *a2;
            *v3 = *a2;
            v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v32 = (void **)((char *)v3 + v31);
            v33 = (void **)((char *)a2 + v31);
            v34 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v35 = *(_QWORD *)(v34 - 8);
            v36 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v35 + 48);
            v37 = v30;
            if (v36(v33, 1, v34))
            {
              v38 = sub_10002A750(&qword_100644980);
              memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
              v7 = v634;
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v33, v34))
              {
                case 1u:
                  v124 = *v33;
                  *v32 = *v33;
                  v125 = v124;
                  v126 = v32;
                  v127 = v34;
                  v128 = 1;
                  goto LABEL_144;
                case 2u:
                  v346 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v346 - 8) + 16))(v32, v33, v346);
                  v126 = v32;
                  v127 = v34;
                  v128 = 2;
                  goto LABEL_144;
                case 3u:
                  v347 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v347 - 8) + 16))(v32, v33, v347);
                  v126 = v32;
                  v127 = v34;
                  v128 = 3;
                  goto LABEL_144;
                case 4u:
                  v348 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v348 - 8) + 16))(v32, v33, v348);
                  v126 = v32;
                  v127 = v34;
                  v128 = 4;
                  goto LABEL_144;
                case 5u:
                  v349 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v349 - 8) + 16))(v32, v33, v349);
                  v126 = v32;
                  v127 = v34;
                  v128 = 5;
                  goto LABEL_144;
                case 6u:
                  v350 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v350 - 8) + 16))(v32, v33, v350);
                  v126 = v32;
                  v127 = v34;
                  v128 = 6;
                  goto LABEL_144;
                case 8u:
                  v351 = *v33;
                  *v32 = *v33;
                  v352 = v351;
                  v126 = v32;
                  v127 = v34;
                  v128 = 8;
                  goto LABEL_144;
                case 9u:
                  v353 = *v33;
                  *v32 = *v33;
                  v354 = v353;
                  v126 = v32;
                  v127 = v34;
                  v128 = 9;
LABEL_144:
                  swift_storeEnumTagMultiPayload(v126, v127, v128);
                  break;
                default:
                  memcpy(v32, v33, *(_QWORD *)(v35 + 64));
                  break;
              }
              v7 = v634;
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
            }
            v8 = v617;
            v59 = v3;
            v60 = v7;
            v61 = 2;
            goto LABEL_169;
          case 3u:
            v618 = v8;
            v635 = v7;
            v39 = *a2;
            *v3 = *a2;
            v40 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v41 = (void **)((char *)v3 + v40);
            v42 = (void **)((char *)a2 + v40);
            v43 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v44 = *(_QWORD *)(v43 - 8);
            v45 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v44 + 48);
            v46 = v39;
            if (v45(v42, 1, v43))
            {
              v47 = sub_10002A750(&qword_100644980);
              memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
              v7 = v635;
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v42, v43))
              {
                case 1u:
                  v129 = *v42;
                  *v41 = *v42;
                  v130 = v129;
                  v131 = v41;
                  v132 = v43;
                  v133 = 1;
                  goto LABEL_155;
                case 2u:
                  v355 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v355 - 8) + 16))(v41, v42, v355);
                  v131 = v41;
                  v132 = v43;
                  v133 = 2;
                  goto LABEL_155;
                case 3u:
                  v356 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v356 - 8) + 16))(v41, v42, v356);
                  v131 = v41;
                  v132 = v43;
                  v133 = 3;
                  goto LABEL_155;
                case 4u:
                  v357 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v357 - 8) + 16))(v41, v42, v357);
                  v131 = v41;
                  v132 = v43;
                  v133 = 4;
                  goto LABEL_155;
                case 5u:
                  v358 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v358 - 8) + 16))(v41, v42, v358);
                  v131 = v41;
                  v132 = v43;
                  v133 = 5;
                  goto LABEL_155;
                case 6u:
                  v359 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v359 - 8) + 16))(v41, v42, v359);
                  v131 = v41;
                  v132 = v43;
                  v133 = 6;
                  goto LABEL_155;
                case 8u:
                  v360 = *v42;
                  *v41 = *v42;
                  v361 = v360;
                  v131 = v41;
                  v132 = v43;
                  v133 = 8;
                  goto LABEL_155;
                case 9u:
                  v362 = *v42;
                  *v41 = *v42;
                  v363 = v362;
                  v131 = v41;
                  v132 = v43;
                  v133 = 9;
LABEL_155:
                  swift_storeEnumTagMultiPayload(v131, v132, v133);
                  break;
                default:
                  memcpy(v41, v42, *(_QWORD *)(v44 + 64));
                  break;
              }
              v7 = v635;
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
            }
            v8 = v618;
            v59 = v3;
            v60 = v7;
            v61 = 3;
            goto LABEL_169;
          case 4u:
            v619 = v8;
            v636 = v7;
            v48 = *a2;
            *v3 = *a2;
            v49 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v50 = (void **)((char *)v3 + v49);
            v51 = (void **)((char *)a2 + v49);
            v52 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v53 = *(_QWORD *)(v52 - 8);
            v54 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v53 + 48);
            v55 = v48;
            if (v54(v51, 1, v52))
            {
              v56 = sub_10002A750(&qword_100644980);
              memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
              v7 = v636;
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v51, v52))
              {
                case 1u:
                  v134 = *v51;
                  *v50 = *v51;
                  v135 = v134;
                  v136 = v50;
                  v137 = v52;
                  v138 = 1;
                  goto LABEL_166;
                case 2u:
                  v364 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v364 - 8) + 16))(v50, v51, v364);
                  v136 = v50;
                  v137 = v52;
                  v138 = 2;
                  goto LABEL_166;
                case 3u:
                  v365 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v365 - 8) + 16))(v50, v51, v365);
                  v136 = v50;
                  v137 = v52;
                  v138 = 3;
                  goto LABEL_166;
                case 4u:
                  v366 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v366 - 8) + 16))(v50, v51, v366);
                  v136 = v50;
                  v137 = v52;
                  v138 = 4;
                  goto LABEL_166;
                case 5u:
                  v367 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v367 - 8) + 16))(v50, v51, v367);
                  v136 = v50;
                  v137 = v52;
                  v138 = 5;
                  goto LABEL_166;
                case 6u:
                  v368 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v368 - 8) + 16))(v50, v51, v368);
                  v136 = v50;
                  v137 = v52;
                  v138 = 6;
                  goto LABEL_166;
                case 8u:
                  v369 = *v51;
                  *v50 = *v51;
                  v370 = v369;
                  v136 = v50;
                  v137 = v52;
                  v138 = 8;
                  goto LABEL_166;
                case 9u:
                  v371 = *v51;
                  *v50 = *v51;
                  v372 = v371;
                  v136 = v50;
                  v137 = v52;
                  v138 = 9;
LABEL_166:
                  swift_storeEnumTagMultiPayload(v136, v137, v138);
                  break;
                default:
                  memcpy(v50, v51, *(_QWORD *)(v53 + 64));
                  break;
              }
              v7 = v636;
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
            }
            v8 = v619;
            v59 = v3;
            v60 = v7;
            v61 = 4;
            goto LABEL_169;
          case 5u:
            *v3 = *a2;
            *((_BYTE *)v3 + 8) = *((_BYTE *)a2 + 8);
            *((_BYTE *)v3 + 9) = *((_BYTE *)a2 + 9);
            *((_BYTE *)v3 + 10) = *((_BYTE *)a2 + 10);
            v57 = a2[2];
            v3[2] = v57;
            v58 = v57;
            v59 = v3;
            v60 = v7;
            v61 = 5;
            goto LABEL_169;
          case 6u:
            v114 = *a2;
            *v3 = *a2;
            v115 = v114;
            v59 = v3;
            v60 = v7;
            v61 = 6;
            goto LABEL_169;
          case 7u:
            v62 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
            v63 = *(_QWORD *)(v62 - 8);
            if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v63 + 48))(a2, 1, v62))
            {
              v64 = sub_10002A750(&qword_100644600);
              memcpy(v3, a2, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
            }
            else
            {
              v139 = *a2;
              *v3 = *a2;
              v140 = *(int *)(v62 + 20);
              v141 = (char *)v3 + v140;
              v641 = v7;
              v142 = (char *)a2 + v140;
              v625 = v3;
              v143 = type metadata accessor for REMHashtagLabelSpecifier(0);
              v144 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v143 - 8) + 16);
              v145 = swift_bridgeObjectRetain(v139);
              v146 = v142;
              v147 = v143;
              v3 = v625;
              v7 = v641;
              v144(v141, v146, v147, v145);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v625, 0, 1, v62);
            }
            v148 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
            v149 = (_QWORD *)((char *)v3 + v148);
            v150 = (void **)((char *)a2 + v148);
            if (v150[1])
            {
              *v149 = *v150;
              v151 = v150[1];
              v149[1] = v151;
              v152 = (void *)v150[2];
              v149[2] = v152;
              swift_bridgeObjectRetain(v151);
              v153 = v152;
            }
            else
            {
              v184 = *(_OWORD *)v150;
              v149[2] = v150[2];
              *(_OWORD *)v149 = v184;
            }
            v59 = v3;
            v60 = v7;
            v61 = 7;
            goto LABEL_169;
          case 8u:
            v116 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
            v117 = *(_QWORD *)(v116 - 8);
            if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v117 + 48))(a2, 1, v116))
            {
              v118 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
              memcpy(v3, a2, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
            }
            else
            {
              v186 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(v3, a2, v186);
              *((_BYTE *)v3 + *(int *)(v116 + 20)) = *((_BYTE *)a2 + *(int *)(v116 + 20));
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v117 + 56))(v3, 0, 1, v116);
            }
            v187 = type metadata accessor for TTRTemplatePublicLinkData(0);
            *(_QWORD *)((char *)v3 + *(int *)(v187 + 20)) = *(void **)((char *)a2 + *(int *)(v187 + 20));
            v59 = v3;
            v60 = v7;
            v61 = 8;
            goto LABEL_169;
          case 9u:
            *(_BYTE *)v3 = *(_BYTE *)a2;
            v65 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
            v66 = (char *)v3 + v65;
            v67 = (char *)a2 + v65;
            v68 = type metadata accessor for AnyTip(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
            v59 = v3;
            v60 = v7;
            v61 = 9;
LABEL_169:
            swift_storeEnumTagMultiPayload(v59, v60, v61);
            break;
          default:
            memcpy(v3, a2, *(_QWORD *)(v8 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v3, 0, 1, v7);
      }
      v373 = sub_10002A750(&qword_1006588F8);
      *(_QWORD *)((char *)v3 + *(int *)(v373 + 48)) = *(void **)((char *)a2 + *(int *)(v373 + 48));
      v374 = 1;
    }
    else
    {
      if (v9)
      {
        v11 = sub_10002A750((uint64_t *)&unk_100640EB0);
        memcpy(v3, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(a2, v7))
        {
          case 0u:
            v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v633 = v7;
            v616 = v8;
            switch(swift_getEnumCaseMultiPayload(a2, v18))
            {
              case 1u:
                v19 = *a2;
                *v3 = *a2;
                v20 = v19;
                v21 = v3;
                v22 = v18;
                v23 = 1;
                goto LABEL_95;
              case 2u:
                v230 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v230 - 8) + 16))(v3, a2, v230);
                v21 = v3;
                v22 = v18;
                v23 = 2;
                goto LABEL_95;
              case 3u:
                v231 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v231 - 8) + 16))(v3, a2, v231);
                v21 = v3;
                v22 = v18;
                v23 = 3;
                goto LABEL_95;
              case 4u:
                v232 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v232 - 8) + 16))(v3, a2, v232);
                v21 = v3;
                v22 = v18;
                v23 = 4;
                goto LABEL_95;
              case 5u:
                v233 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v233 - 8) + 16))(v3, a2, v233);
                v21 = v3;
                v22 = v18;
                v23 = 5;
                goto LABEL_95;
              case 6u:
                v234 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v234 - 8) + 16))(v3, a2, v234);
                v21 = v3;
                v22 = v18;
                v23 = 6;
                goto LABEL_95;
              case 8u:
                v235 = *a2;
                *v3 = *a2;
                v236 = v235;
                v21 = v3;
                v22 = v18;
                v23 = 8;
                goto LABEL_95;
              case 9u:
                v237 = *a2;
                *v3 = *a2;
                v238 = v237;
                v21 = v3;
                v22 = v18;
                v23 = 9;
LABEL_95:
                swift_storeEnumTagMultiPayload(v21, v22, v23);
                break;
              default:
                memcpy(v3, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
                break;
            }
            v239 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v240 = v239[5];
            v241 = (char *)v3 + v240;
            v242 = (char *)a2 + v240;
            if (*(void **)((char *)a2 + v240 + 8))
            {
              v628 = v3;
              *(_QWORD *)v241 = *(_QWORD *)v242;
              v243 = *((_QWORD *)v242 + 1);
              *((_QWORD *)v241 + 1) = v243;
              v244 = (void *)*((_QWORD *)v242 + 2);
              v245 = *((_QWORD *)v242 + 3);
              v247 = *((_QWORD *)v242 + 4);
              v246 = *((_QWORD *)v242 + 5);
              v248 = *((_QWORD *)v242 + 6);
              v608 = *((_QWORD *)v242 + 7);
              v602 = v242[64];
              swift_bridgeObjectRetain(v243);
              sub_10003E1F0(v244, v245, v247, v246, v248, v608, v602);
              *((_QWORD *)v241 + 2) = v244;
              *((_QWORD *)v241 + 3) = v245;
              *((_QWORD *)v241 + 4) = v247;
              *((_QWORD *)v241 + 5) = v246;
              *((_QWORD *)v241 + 6) = v248;
              *((_QWORD *)v241 + 7) = v608;
              v241[64] = v602;
              v241[65] = v242[65];
              v241[66] = v242[66];
              v241[67] = v242[67];
              v241[68] = v242[68];
              v249 = v242[120];
              if (v249 == 255)
              {
                v250 = *(_OWORD *)(v242 + 72);
                v251 = *(_OWORD *)(v242 + 88);
                v252 = *(_OWORD *)(v242 + 104);
                v241[120] = v242[120];
                *(_OWORD *)(v241 + 88) = v251;
                *(_OWORD *)(v241 + 104) = v252;
                *(_OWORD *)(v241 + 72) = v250;
              }
              else
              {
                v609 = v249 & 1;
                v259 = (void *)*((_QWORD *)v242 + 9);
                v260 = *((_QWORD *)v242 + 10);
                v262 = *((_QWORD *)v242 + 11);
                v261 = *((_QWORD *)v242 + 12);
                v263 = *((_QWORD *)v242 + 13);
                v603 = *((_QWORD *)v242 + 14);
                sub_10002B764(v259, v260, v262, v261, v263, v603, v249 & 1);
                *((_QWORD *)v241 + 9) = v259;
                *((_QWORD *)v241 + 10) = v260;
                *((_QWORD *)v241 + 11) = v262;
                *((_QWORD *)v241 + 12) = v261;
                *((_QWORD *)v241 + 13) = v263;
                *((_QWORD *)v241 + 14) = v603;
                v241[120] = v609;
              }
              v3 = v628;
              v7 = v633;
              v241[121] = v242[121];
            }
            else
            {
              v253 = *(_OWORD *)v242;
              v254 = *((_OWORD *)v242 + 1);
              v255 = *((_OWORD *)v242 + 3);
              *((_OWORD *)v241 + 2) = *((_OWORD *)v242 + 2);
              *((_OWORD *)v241 + 3) = v255;
              *(_OWORD *)v241 = v253;
              *((_OWORD *)v241 + 1) = v254;
              v256 = *((_OWORD *)v242 + 4);
              v257 = *((_OWORD *)v242 + 5);
              v258 = *((_OWORD *)v242 + 6);
              *(_OWORD *)(v241 + 106) = *(_OWORD *)(v242 + 106);
              *((_OWORD *)v241 + 5) = v257;
              *((_OWORD *)v241 + 6) = v258;
              *((_OWORD *)v241 + 4) = v256;
            }
            *((_BYTE *)v3 + v239[6]) = *((_BYTE *)a2 + v239[6]);
            *((_BYTE *)v3 + v239[7]) = *((_BYTE *)a2 + v239[7]);
            *((_BYTE *)v3 + v239[8]) = *((_BYTE *)a2 + v239[8]);
            *((_BYTE *)v3 + v239[9]) = *((_BYTE *)a2 + v239[9]);
            *((_BYTE *)v3 + v239[10]) = *((_BYTE *)a2 + v239[10]);
            v264 = v239[11];
            v265 = *(void **)((char *)a2 + v264);
            *(_QWORD *)((char *)v3 + v264) = v265;
            v266 = v265;
            v267 = v3;
            v268 = v7;
            v269 = 0;
            goto LABEL_194;
          case 1u:
            v69 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v637 = v7;
            v614 = v5;
            v616 = v8;
            switch(swift_getEnumCaseMultiPayload(a2, v69))
            {
              case 1u:
                v70 = *a2;
                *v3 = *a2;
                v71 = v70;
                v72 = v3;
                v73 = v69;
                v74 = 1;
                goto LABEL_128;
              case 2u:
                v307 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v307 - 8) + 16))(v3, a2, v307);
                v72 = v3;
                v73 = v69;
                v74 = 2;
                goto LABEL_128;
              case 3u:
                v308 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v308 - 8) + 16))(v3, a2, v308);
                v72 = v3;
                v73 = v69;
                v74 = 3;
                goto LABEL_128;
              case 4u:
                v309 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v309 - 8) + 16))(v3, a2, v309);
                v72 = v3;
                v73 = v69;
                v74 = 4;
                goto LABEL_128;
              case 5u:
                v310 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v310 - 8) + 16))(v3, a2, v310);
                v72 = v3;
                v73 = v69;
                v74 = 5;
                goto LABEL_128;
              case 6u:
                v311 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v311 - 8) + 16))(v3, a2, v311);
                v72 = v3;
                v73 = v69;
                v74 = 6;
                goto LABEL_128;
              case 8u:
                v312 = *a2;
                *v3 = *a2;
                v313 = v312;
                v72 = v3;
                v73 = v69;
                v74 = 8;
                goto LABEL_128;
              case 9u:
                v314 = *a2;
                *v3 = *a2;
                v315 = v314;
                v72 = v3;
                v73 = v69;
                v74 = 9;
LABEL_128:
                swift_storeEnumTagMultiPayload(v72, v73, v74);
                break;
              default:
                memcpy(v3, a2, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
                break;
            }
            v316 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v317 = v316[5];
            v318 = (char *)v3 + v317;
            v319 = (char *)a2 + v317;
            if (*(void **)((char *)a2 + v317 + 8))
            {
              v630 = v3;
              *(_QWORD *)v318 = *(_QWORD *)v319;
              v320 = *((_QWORD *)v319 + 1);
              *((_QWORD *)v318 + 1) = v320;
              v321 = (void *)*((_QWORD *)v319 + 2);
              v322 = *((_QWORD *)v319 + 3);
              v324 = *((_QWORD *)v319 + 4);
              v323 = *((_QWORD *)v319 + 5);
              v326 = *((_QWORD *)v319 + 6);
              v325 = *((_QWORD *)v319 + 7);
              v612 = v319[64];
              swift_bridgeObjectRetain(v320);
              sub_10003E1F0(v321, v322, v324, v323, v326, v325, v612);
              *((_QWORD *)v318 + 2) = v321;
              *((_QWORD *)v318 + 3) = v322;
              *((_QWORD *)v318 + 4) = v324;
              *((_QWORD *)v318 + 5) = v323;
              *((_QWORD *)v318 + 6) = v326;
              *((_QWORD *)v318 + 7) = v325;
              v318[64] = v612;
              v318[65] = v319[65];
              v318[66] = v319[66];
              v318[67] = v319[67];
              v318[68] = v319[68];
              v327 = v319[120];
              if (v327 == 255)
              {
                v328 = *(_OWORD *)(v319 + 72);
                v329 = *(_OWORD *)(v319 + 88);
                v330 = *(_OWORD *)(v319 + 104);
                v318[120] = v319[120];
                *(_OWORD *)(v318 + 88) = v329;
                *(_OWORD *)(v318 + 104) = v330;
                *(_OWORD *)(v318 + 72) = v328;
              }
              else
              {
                v613 = v327 & 1;
                v337 = (void *)*((_QWORD *)v319 + 9);
                v338 = *((_QWORD *)v319 + 10);
                v340 = *((_QWORD *)v319 + 11);
                v339 = *((_QWORD *)v319 + 12);
                v341 = *((_QWORD *)v319 + 13);
                v342 = *((_QWORD *)v319 + 14);
                sub_10002B764(v337, v338, v340, v339, v341, v342, v327 & 1);
                *((_QWORD *)v318 + 9) = v337;
                *((_QWORD *)v318 + 10) = v338;
                *((_QWORD *)v318 + 11) = v340;
                *((_QWORD *)v318 + 12) = v339;
                *((_QWORD *)v318 + 13) = v341;
                *((_QWORD *)v318 + 14) = v342;
                v318[120] = v613;
              }
              v3 = v630;
              v7 = v637;
              v5 = v614;
              v318[121] = v319[121];
            }
            else
            {
              v331 = *(_OWORD *)v319;
              v332 = *((_OWORD *)v319 + 1);
              v333 = *((_OWORD *)v319 + 3);
              *((_OWORD *)v318 + 2) = *((_OWORD *)v319 + 2);
              *((_OWORD *)v318 + 3) = v333;
              *(_OWORD *)v318 = v331;
              *((_OWORD *)v318 + 1) = v332;
              v334 = *((_OWORD *)v319 + 4);
              v335 = *((_OWORD *)v319 + 5);
              v336 = *((_OWORD *)v319 + 6);
              *(_OWORD *)(v318 + 106) = *(_OWORD *)(v319 + 106);
              *((_OWORD *)v318 + 5) = v335;
              *((_OWORD *)v318 + 6) = v336;
              *((_OWORD *)v318 + 4) = v334;
            }
            *((_BYTE *)v3 + v316[6]) = *((_BYTE *)a2 + v316[6]);
            *((_BYTE *)v3 + v316[7]) = *((_BYTE *)a2 + v316[7]);
            *((_BYTE *)v3 + v316[8]) = *((_BYTE *)a2 + v316[8]);
            *((_BYTE *)v3 + v316[9]) = *((_BYTE *)a2 + v316[9]);
            *((_BYTE *)v3 + v316[10]) = *((_BYTE *)a2 + v316[10]);
            v343 = v316[11];
            v344 = *(void **)((char *)a2 + v343);
            *(_QWORD *)((char *)v3 + v343) = v344;
            v345 = v344;
            v267 = v3;
            v268 = v7;
            v269 = 1;
            goto LABEL_194;
          case 2u:
            v616 = v8;
            v638 = v7;
            v75 = *a2;
            *v3 = *a2;
            v76 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v77 = (void **)((char *)v3 + v76);
            v78 = (void **)((char *)a2 + v76);
            v79 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v80 = *(_QWORD *)(v79 - 8);
            v81 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v80 + 48);
            v82 = v75;
            if (v81(v78, 1, v79))
            {
              v83 = sub_10002A750(&qword_100644980);
              memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
              v7 = v638;
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v78, v79))
              {
                case 1u:
                  v154 = *v78;
                  *v77 = *v78;
                  v155 = v154;
                  v156 = v77;
                  v157 = v79;
                  v158 = 1;
                  goto LABEL_180;
                case 2u:
                  v375 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v375 - 8) + 16))(v77, v78, v375);
                  v156 = v77;
                  v157 = v79;
                  v158 = 2;
                  goto LABEL_180;
                case 3u:
                  v376 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v376 - 8) + 16))(v77, v78, v376);
                  v156 = v77;
                  v157 = v79;
                  v158 = 3;
                  goto LABEL_180;
                case 4u:
                  v377 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v377 - 8) + 16))(v77, v78, v377);
                  v156 = v77;
                  v157 = v79;
                  v158 = 4;
                  goto LABEL_180;
                case 5u:
                  v378 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v378 - 8) + 16))(v77, v78, v378);
                  v156 = v77;
                  v157 = v79;
                  v158 = 5;
                  goto LABEL_180;
                case 6u:
                  v379 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v379 - 8) + 16))(v77, v78, v379);
                  v156 = v77;
                  v157 = v79;
                  v158 = 6;
                  goto LABEL_180;
                case 8u:
                  v380 = *v78;
                  *v77 = *v78;
                  v381 = v380;
                  v156 = v77;
                  v157 = v79;
                  v158 = 8;
                  goto LABEL_180;
                case 9u:
                  v382 = *v78;
                  *v77 = *v78;
                  v383 = v382;
                  v156 = v77;
                  v157 = v79;
                  v158 = 9;
LABEL_180:
                  swift_storeEnumTagMultiPayload(v156, v157, v158);
                  break;
                default:
                  memcpy(v77, v78, *(_QWORD *)(v80 + 64));
                  break;
              }
              v7 = v638;
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
            }
            v267 = v3;
            v268 = v7;
            v269 = 2;
            goto LABEL_194;
          case 3u:
            v616 = v8;
            v639 = v7;
            v84 = *a2;
            *v3 = *a2;
            v85 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v86 = (void **)((char *)v3 + v85);
            v87 = (void **)((char *)a2 + v85);
            v88 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v89 = *(_QWORD *)(v88 - 8);
            v90 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v89 + 48);
            v91 = v84;
            if (v90(v87, 1, v88))
            {
              v92 = sub_10002A750(&qword_100644980);
              memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
              v7 = v639;
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v87, v88))
              {
                case 1u:
                  v159 = *v87;
                  *v86 = *v87;
                  v160 = v159;
                  v161 = v86;
                  v162 = v88;
                  v163 = 1;
                  goto LABEL_191;
                case 2u:
                  v384 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v384 - 8) + 16))(v86, v87, v384);
                  v161 = v86;
                  v162 = v88;
                  v163 = 2;
                  goto LABEL_191;
                case 3u:
                  v385 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v385 - 8) + 16))(v86, v87, v385);
                  v161 = v86;
                  v162 = v88;
                  v163 = 3;
                  goto LABEL_191;
                case 4u:
                  v386 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v386 - 8) + 16))(v86, v87, v386);
                  v161 = v86;
                  v162 = v88;
                  v163 = 4;
                  goto LABEL_191;
                case 5u:
                  v387 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v387 - 8) + 16))(v86, v87, v387);
                  v161 = v86;
                  v162 = v88;
                  v163 = 5;
                  goto LABEL_191;
                case 6u:
                  v388 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v388 - 8) + 16))(v86, v87, v388);
                  v161 = v86;
                  v162 = v88;
                  v163 = 6;
                  goto LABEL_191;
                case 8u:
                  v389 = *v87;
                  *v86 = *v87;
                  v390 = v389;
                  v161 = v86;
                  v162 = v88;
                  v163 = 8;
                  goto LABEL_191;
                case 9u:
                  v391 = *v87;
                  *v86 = *v87;
                  v392 = v391;
                  v161 = v86;
                  v162 = v88;
                  v163 = 9;
LABEL_191:
                  swift_storeEnumTagMultiPayload(v161, v162, v163);
                  break;
                default:
                  memcpy(v86, v87, *(_QWORD *)(v89 + 64));
                  break;
              }
              v7 = v639;
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
            }
            v267 = v3;
            v268 = v7;
            v269 = 3;
LABEL_194:
            swift_storeEnumTagMultiPayload(v267, v268, v269);
            v8 = v616;
            break;
          case 4u:
            v620 = v8;
            v640 = v7;
            v93 = *a2;
            *v3 = *a2;
            v94 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v95 = (void **)((char *)v3 + v94);
            v96 = (void **)((char *)a2 + v94);
            v97 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v98 = *(_QWORD *)(v97 - 8);
            v99 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v98 + 48);
            v100 = v93;
            if (v99(v96, 1, v97))
            {
              v101 = sub_10002A750(&qword_100644980);
              memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
              v7 = v640;
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v96, v97))
              {
                case 1u:
                  v164 = *v96;
                  *v95 = *v96;
                  v165 = v164;
                  v166 = v95;
                  v167 = v97;
                  v168 = 1;
                  goto LABEL_203;
                case 2u:
                  v393 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v393 - 8) + 16))(v95, v96, v393);
                  v166 = v95;
                  v167 = v97;
                  v168 = 2;
                  goto LABEL_203;
                case 3u:
                  v394 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v394 - 8) + 16))(v95, v96, v394);
                  v166 = v95;
                  v167 = v97;
                  v168 = 3;
                  goto LABEL_203;
                case 4u:
                  v395 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v395 - 8) + 16))(v95, v96, v395);
                  v166 = v95;
                  v167 = v97;
                  v168 = 4;
                  goto LABEL_203;
                case 5u:
                  v396 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v396 - 8) + 16))(v95, v96, v396);
                  v166 = v95;
                  v167 = v97;
                  v168 = 5;
                  goto LABEL_203;
                case 6u:
                  v397 = type metadata accessor for Date(0);
                  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v397 - 8) + 16))(v95, v96, v397);
                  v166 = v95;
                  v167 = v97;
                  v168 = 6;
                  goto LABEL_203;
                case 8u:
                  v398 = *v96;
                  *v95 = *v96;
                  v399 = v398;
                  v166 = v95;
                  v167 = v97;
                  v168 = 8;
                  goto LABEL_203;
                case 9u:
                  v400 = *v96;
                  *v95 = *v96;
                  v401 = v400;
                  v166 = v95;
                  v167 = v97;
                  v168 = 9;
LABEL_203:
                  swift_storeEnumTagMultiPayload(v166, v167, v168);
                  break;
                default:
                  memcpy(v95, v96, *(_QWORD *)(v98 + 64));
                  break;
              }
              v7 = v640;
              (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
            }
            v8 = v620;
            v104 = v3;
            v105 = v7;
            v106 = 4;
            goto LABEL_206;
          case 5u:
            *v3 = *a2;
            *((_BYTE *)v3 + 8) = *((_BYTE *)a2 + 8);
            *((_BYTE *)v3 + 9) = *((_BYTE *)a2 + 9);
            *((_BYTE *)v3 + 10) = *((_BYTE *)a2 + 10);
            v102 = a2[2];
            v3[2] = v102;
            v103 = v102;
            v104 = v3;
            v105 = v7;
            v106 = 5;
            goto LABEL_206;
          case 6u:
            v119 = *a2;
            *v3 = *a2;
            v120 = v119;
            v104 = v3;
            v105 = v7;
            v106 = 6;
            goto LABEL_206;
          case 7u:
            v107 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
            v108 = *(_QWORD *)(v107 - 8);
            if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v108 + 48))(a2, 1, v107))
            {
              v109 = sub_10002A750(&qword_100644600);
              memcpy(v3, a2, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
            }
            else
            {
              v169 = *a2;
              *v3 = *a2;
              v170 = *(int *)(v107 + 20);
              v171 = (char *)v3 + v170;
              v642 = v7;
              v172 = (char *)a2 + v170;
              v626 = v3;
              v173 = type metadata accessor for REMHashtagLabelSpecifier(0);
              v174 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v173 - 8) + 16);
              v175 = swift_bridgeObjectRetain(v169);
              v176 = v172;
              v177 = v173;
              v3 = v626;
              v7 = v642;
              v174(v171, v176, v177, v175);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v626, 0, 1, v107);
            }
            v178 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
            v179 = (_QWORD *)((char *)v3 + v178);
            v180 = (void **)((char *)a2 + v178);
            if (v180[1])
            {
              *v179 = *v180;
              v181 = v180[1];
              v179[1] = v181;
              v182 = (void *)v180[2];
              v179[2] = v182;
              swift_bridgeObjectRetain(v181);
              v183 = v182;
            }
            else
            {
              v185 = *(_OWORD *)v180;
              v179[2] = v180[2];
              *(_OWORD *)v179 = v185;
            }
            v104 = v3;
            v105 = v7;
            v106 = 7;
            goto LABEL_206;
          case 8u:
            v121 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
            v122 = *(_QWORD *)(v121 - 8);
            if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v122 + 48))(a2, 1, v121))
            {
              v123 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
              memcpy(v3, a2, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
            }
            else
            {
              v188 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(v3, a2, v188);
              *((_BYTE *)v3 + *(int *)(v121 + 20)) = *((_BYTE *)a2 + *(int *)(v121 + 20));
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v3, 0, 1, v121);
            }
            v189 = type metadata accessor for TTRTemplatePublicLinkData(0);
            *(_QWORD *)((char *)v3 + *(int *)(v189 + 20)) = *(void **)((char *)a2 + *(int *)(v189 + 20));
            v104 = v3;
            v105 = v7;
            v106 = 8;
            goto LABEL_206;
          case 9u:
            *(_BYTE *)v3 = *(_BYTE *)a2;
            v110 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
            v111 = (char *)v3 + v110;
            v112 = (char *)a2 + v110;
            v113 = type metadata accessor for AnyTip(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 16))(v111, v112, v113);
            v104 = v3;
            v105 = v7;
            v106 = 9;
LABEL_206:
            swift_storeEnumTagMultiPayload(v104, v105, v106);
            break;
          default:
            memcpy(v3, a2, *(_QWORD *)(v8 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v3, 0, 1, v7);
      }
      v374 = 0;
    }
    swift_storeEnumTagMultiPayload(v3, v5, v374);
    v402 = *(int *)(a3 + 20);
    v403 = (void **)((char *)v3 + v402);
    v404 = (void **)((char *)a2 + v402);
    sub_10001F544((uint64_t)v3 + v402, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    switch(swift_getEnumCaseMultiPayload(v404, v7))
    {
      case 0u:
        v405 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v631 = v3;
        v645 = v7;
        switch(swift_getEnumCaseMultiPayload(v404, v405))
        {
          case 1u:
            v406 = *v404;
            *v403 = *v404;
            v407 = v406;
            v408 = v403;
            v409 = v405;
            v410 = 1;
            goto LABEL_249;
          case 2u:
            v492 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v492 - 8) + 16))(v403, v404, v492);
            v408 = v403;
            v409 = v405;
            v410 = 2;
            goto LABEL_249;
          case 3u:
            v493 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v493 - 8) + 16))(v403, v404, v493);
            v408 = v403;
            v409 = v405;
            v410 = 3;
            goto LABEL_249;
          case 4u:
            v494 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v494 - 8) + 16))(v403, v404, v494);
            v408 = v403;
            v409 = v405;
            v410 = 4;
            goto LABEL_249;
          case 5u:
            v495 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v495 - 8) + 16))(v403, v404, v495);
            v408 = v403;
            v409 = v405;
            v410 = 5;
            goto LABEL_249;
          case 6u:
            v496 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v496 - 8) + 16))(v403, v404, v496);
            v408 = v403;
            v409 = v405;
            v410 = 6;
            goto LABEL_249;
          case 8u:
            v497 = *v404;
            *v403 = *v404;
            v498 = v497;
            v408 = v403;
            v409 = v405;
            v410 = 8;
            goto LABEL_249;
          case 9u:
            v499 = *v404;
            *v403 = *v404;
            v500 = v499;
            v408 = v403;
            v409 = v405;
            v410 = 9;
LABEL_249:
            swift_storeEnumTagMultiPayload(v408, v409, v410);
            break;
          default:
            memcpy(v403, v404, *(_QWORD *)(*(_QWORD *)(v405 - 8) + 64));
            break;
        }
        v501 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v502 = v501[5];
        v503 = (char *)v403 + v502;
        v504 = (char *)v404 + v502;
        if (*(void **)((char *)v404 + v502 + 8))
        {
          v649 = v403;
          *(_QWORD *)v503 = *(_QWORD *)v504;
          v505 = *((_QWORD *)v504 + 1);
          *((_QWORD *)v503 + 1) = v505;
          v506 = (void *)*((_QWORD *)v504 + 2);
          v507 = *((_QWORD *)v504 + 3);
          v508 = *((_QWORD *)v504 + 4);
          v509 = *((_QWORD *)v504 + 5);
          v510 = *((_QWORD *)v504 + 6);
          v511 = *((_QWORD *)v504 + 7);
          v621 = v504[64];
          swift_bridgeObjectRetain(v505);
          sub_10003E1F0(v506, v507, v508, v509, v510, v511, v621);
          *((_QWORD *)v503 + 2) = v506;
          *((_QWORD *)v503 + 3) = v507;
          *((_QWORD *)v503 + 4) = v508;
          *((_QWORD *)v503 + 5) = v509;
          *((_QWORD *)v503 + 6) = v510;
          *((_QWORD *)v503 + 7) = v511;
          v503[64] = v621;
          v503[65] = v504[65];
          v503[66] = v504[66];
          v503[67] = v504[67];
          v503[68] = v504[68];
          v512 = v504[120];
          if (v512 == 255)
          {
            v513 = *(_OWORD *)(v504 + 72);
            v514 = *(_OWORD *)(v504 + 88);
            v515 = *(_OWORD *)(v504 + 104);
            v503[120] = v504[120];
            *(_OWORD *)(v503 + 88) = v514;
            *(_OWORD *)(v503 + 104) = v515;
            *(_OWORD *)(v503 + 72) = v513;
          }
          else
          {
            v622 = v512 & 1;
            v524 = (void *)*((_QWORD *)v504 + 9);
            v523 = *((_QWORD *)v504 + 10);
            v525 = *((_QWORD *)v504 + 11);
            v526 = *((_QWORD *)v504 + 12);
            v527 = *((_QWORD *)v504 + 13);
            v528 = *((_QWORD *)v504 + 14);
            sub_10002B764(v524, v523, v525, v526, v527, v528, v512 & 1);
            *((_QWORD *)v503 + 9) = v524;
            *((_QWORD *)v503 + 10) = v523;
            *((_QWORD *)v503 + 11) = v525;
            *((_QWORD *)v503 + 12) = v526;
            *((_QWORD *)v503 + 13) = v527;
            *((_QWORD *)v503 + 14) = v528;
            v503[120] = v622;
          }
          v3 = v631;
          v522 = v645;
          v503[121] = v504[121];
          v403 = v649;
        }
        else
        {
          v516 = *(_OWORD *)v504;
          v517 = *((_OWORD *)v504 + 1);
          v518 = *((_OWORD *)v504 + 3);
          *((_OWORD *)v503 + 2) = *((_OWORD *)v504 + 2);
          *((_OWORD *)v503 + 3) = v518;
          *(_OWORD *)v503 = v516;
          *((_OWORD *)v503 + 1) = v517;
          v519 = *((_OWORD *)v504 + 4);
          v520 = *((_OWORD *)v504 + 5);
          v521 = *((_OWORD *)v504 + 6);
          *(_OWORD *)(v503 + 106) = *(_OWORD *)(v504 + 106);
          *((_OWORD *)v503 + 5) = v520;
          *((_OWORD *)v503 + 6) = v521;
          *((_OWORD *)v503 + 4) = v519;
          v522 = v7;
        }
        *((_BYTE *)v403 + v501[6]) = *((_BYTE *)v404 + v501[6]);
        *((_BYTE *)v403 + v501[7]) = *((_BYTE *)v404 + v501[7]);
        *((_BYTE *)v403 + v501[8]) = *((_BYTE *)v404 + v501[8]);
        *((_BYTE *)v403 + v501[9]) = *((_BYTE *)v404 + v501[9]);
        *((_BYTE *)v403 + v501[10]) = *((_BYTE *)v404 + v501[10]);
        v529 = v501[11];
        v530 = *(void **)((char *)v404 + v529);
        *(void **)((char *)v403 + v529) = v530;
        v531 = v530;
        v446 = v403;
        v447 = v522;
        v448 = 0;
        goto LABEL_306;
      case 1u:
        v411 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v632 = v3;
        v646 = v7;
        switch(swift_getEnumCaseMultiPayload(v404, v411))
        {
          case 1u:
            v412 = *v404;
            *v403 = *v404;
            v413 = v412;
            v414 = v403;
            v415 = v411;
            v416 = 1;
            goto LABEL_265;
          case 2u:
            v532 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v532 - 8) + 16))(v403, v404, v532);
            v414 = v403;
            v415 = v411;
            v416 = 2;
            goto LABEL_265;
          case 3u:
            v533 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v533 - 8) + 16))(v403, v404, v533);
            v414 = v403;
            v415 = v411;
            v416 = 3;
            goto LABEL_265;
          case 4u:
            v534 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v534 - 8) + 16))(v403, v404, v534);
            v414 = v403;
            v415 = v411;
            v416 = 4;
            goto LABEL_265;
          case 5u:
            v535 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v535 - 8) + 16))(v403, v404, v535);
            v414 = v403;
            v415 = v411;
            v416 = 5;
            goto LABEL_265;
          case 6u:
            v536 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v536 - 8) + 16))(v403, v404, v536);
            v414 = v403;
            v415 = v411;
            v416 = 6;
            goto LABEL_265;
          case 8u:
            v537 = *v404;
            *v403 = *v404;
            v538 = v537;
            v414 = v403;
            v415 = v411;
            v416 = 8;
            goto LABEL_265;
          case 9u:
            v539 = *v404;
            *v403 = *v404;
            v540 = v539;
            v414 = v403;
            v415 = v411;
            v416 = 9;
LABEL_265:
            swift_storeEnumTagMultiPayload(v414, v415, v416);
            break;
          default:
            memcpy(v403, v404, *(_QWORD *)(*(_QWORD *)(v411 - 8) + 64));
            break;
        }
        v541 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v542 = v541[5];
        v543 = (char *)v403 + v542;
        v544 = (char *)v404 + v542;
        if (*(void **)((char *)v404 + v542 + 8))
        {
          v650 = v403;
          *(_QWORD *)v543 = *(_QWORD *)v544;
          v545 = *((_QWORD *)v544 + 1);
          *((_QWORD *)v543 + 1) = v545;
          v546 = (void *)*((_QWORD *)v544 + 2);
          v547 = *((_QWORD *)v544 + 3);
          v548 = *((_QWORD *)v544 + 4);
          v549 = *((_QWORD *)v544 + 5);
          v551 = *((_QWORD *)v544 + 6);
          v550 = *((_QWORD *)v544 + 7);
          v623 = v544[64];
          swift_bridgeObjectRetain(v545);
          sub_10003E1F0(v546, v547, v548, v549, v551, v550, v623);
          *((_QWORD *)v543 + 2) = v546;
          *((_QWORD *)v543 + 3) = v547;
          *((_QWORD *)v543 + 4) = v548;
          *((_QWORD *)v543 + 5) = v549;
          *((_QWORD *)v543 + 6) = v551;
          *((_QWORD *)v543 + 7) = v550;
          v543[64] = v623;
          v543[65] = v544[65];
          v543[66] = v544[66];
          v543[67] = v544[67];
          v543[68] = v544[68];
          v552 = v544[120];
          if (v552 == 255)
          {
            v553 = *(_OWORD *)(v544 + 72);
            v554 = *(_OWORD *)(v544 + 88);
            v555 = *(_OWORD *)(v544 + 104);
            v543[120] = v544[120];
            *(_OWORD *)(v543 + 88) = v554;
            *(_OWORD *)(v543 + 104) = v555;
            *(_OWORD *)(v543 + 72) = v553;
          }
          else
          {
            v624 = v552 & 1;
            v564 = (void *)*((_QWORD *)v544 + 9);
            v563 = *((_QWORD *)v544 + 10);
            v565 = *((_QWORD *)v544 + 11);
            v566 = *((_QWORD *)v544 + 12);
            v567 = *((_QWORD *)v544 + 13);
            v568 = *((_QWORD *)v544 + 14);
            sub_10002B764(v564, v563, v565, v566, v567, v568, v552 & 1);
            *((_QWORD *)v543 + 9) = v564;
            *((_QWORD *)v543 + 10) = v563;
            *((_QWORD *)v543 + 11) = v565;
            *((_QWORD *)v543 + 12) = v566;
            *((_QWORD *)v543 + 13) = v567;
            *((_QWORD *)v543 + 14) = v568;
            v543[120] = v624;
          }
          v3 = v632;
          v562 = v646;
          v543[121] = v544[121];
          v403 = v650;
        }
        else
        {
          v556 = *(_OWORD *)v544;
          v557 = *((_OWORD *)v544 + 1);
          v558 = *((_OWORD *)v544 + 3);
          *((_OWORD *)v543 + 2) = *((_OWORD *)v544 + 2);
          *((_OWORD *)v543 + 3) = v558;
          *(_OWORD *)v543 = v556;
          *((_OWORD *)v543 + 1) = v557;
          v559 = *((_OWORD *)v544 + 4);
          v560 = *((_OWORD *)v544 + 5);
          v561 = *((_OWORD *)v544 + 6);
          *(_OWORD *)(v543 + 106) = *(_OWORD *)(v544 + 106);
          *((_OWORD *)v543 + 5) = v560;
          *((_OWORD *)v543 + 6) = v561;
          *((_OWORD *)v543 + 4) = v559;
          v562 = v7;
        }
        *((_BYTE *)v403 + v541[6]) = *((_BYTE *)v404 + v541[6]);
        *((_BYTE *)v403 + v541[7]) = *((_BYTE *)v404 + v541[7]);
        *((_BYTE *)v403 + v541[8]) = *((_BYTE *)v404 + v541[8]);
        *((_BYTE *)v403 + v541[9]) = *((_BYTE *)v404 + v541[9]);
        *((_BYTE *)v403 + v541[10]) = *((_BYTE *)v404 + v541[10]);
        v569 = v541[11];
        v570 = *(void **)((char *)v404 + v569);
        *(void **)((char *)v403 + v569) = v570;
        v571 = v570;
        v446 = v403;
        v447 = v562;
        v448 = 1;
        goto LABEL_306;
      case 2u:
        v417 = *v404;
        *v403 = *v404;
        v418 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v419 = (void **)((char *)v403 + v418);
        v420 = (void **)((char *)v404 + v418);
        v421 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v422 = *(_QWORD *)(v421 - 8);
        v423 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v422 + 48);
        v424 = v417;
        if (v423(v420, 1, v421))
        {
          v425 = sub_10002A750(&qword_100644980);
          memcpy(v419, v420, *(_QWORD *)(*(_QWORD *)(v425 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v420, v421))
          {
            case 1u:
              v461 = *v420;
              *v419 = *v420;
              v462 = v461;
              v463 = v419;
              v464 = v421;
              v465 = 1;
              goto LABEL_281;
            case 2u:
              v572 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v572 - 8) + 16))(v419, v420, v572);
              v463 = v419;
              v464 = v421;
              v465 = 2;
              goto LABEL_281;
            case 3u:
              v573 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v573 - 8) + 16))(v419, v420, v573);
              v463 = v419;
              v464 = v421;
              v465 = 3;
              goto LABEL_281;
            case 4u:
              v574 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v574 - 8) + 16))(v419, v420, v574);
              v463 = v419;
              v464 = v421;
              v465 = 4;
              goto LABEL_281;
            case 5u:
              v575 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v575 - 8) + 16))(v419, v420, v575);
              v463 = v419;
              v464 = v421;
              v465 = 5;
              goto LABEL_281;
            case 6u:
              v576 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v576 - 8) + 16))(v419, v420, v576);
              v463 = v419;
              v464 = v421;
              v465 = 6;
              goto LABEL_281;
            case 8u:
              v577 = *v420;
              *v419 = *v420;
              v578 = v577;
              v463 = v419;
              v464 = v421;
              v465 = 8;
              goto LABEL_281;
            case 9u:
              v579 = *v420;
              *v419 = *v420;
              v580 = v579;
              v463 = v419;
              v464 = v421;
              v465 = 9;
LABEL_281:
              swift_storeEnumTagMultiPayload(v463, v464, v465);
              break;
            default:
              memcpy(v419, v420, *(_QWORD *)(v422 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v422 + 56))(v419, 0, 1, v421);
        }
        v446 = v403;
        v447 = v7;
        v448 = 2;
        goto LABEL_306;
      case 3u:
        v426 = *v404;
        *v403 = *v404;
        v427 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v428 = (void **)((char *)v403 + v427);
        v429 = (void **)((char *)v404 + v427);
        v430 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v431 = *(_QWORD *)(v430 - 8);
        v432 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v431 + 48);
        v433 = v426;
        if (v432(v429, 1, v430))
        {
          v434 = sub_10002A750(&qword_100644980);
          memcpy(v428, v429, *(_QWORD *)(*(_QWORD *)(v434 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v429, v430))
          {
            case 1u:
              v466 = *v429;
              *v428 = *v429;
              v467 = v466;
              v468 = v428;
              v469 = v430;
              v470 = 1;
              goto LABEL_292;
            case 2u:
              v581 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v581 - 8) + 16))(v428, v429, v581);
              v468 = v428;
              v469 = v430;
              v470 = 2;
              goto LABEL_292;
            case 3u:
              v582 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v582 - 8) + 16))(v428, v429, v582);
              v468 = v428;
              v469 = v430;
              v470 = 3;
              goto LABEL_292;
            case 4u:
              v583 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v583 - 8) + 16))(v428, v429, v583);
              v468 = v428;
              v469 = v430;
              v470 = 4;
              goto LABEL_292;
            case 5u:
              v584 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v584 - 8) + 16))(v428, v429, v584);
              v468 = v428;
              v469 = v430;
              v470 = 5;
              goto LABEL_292;
            case 6u:
              v585 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v585 - 8) + 16))(v428, v429, v585);
              v468 = v428;
              v469 = v430;
              v470 = 6;
              goto LABEL_292;
            case 8u:
              v586 = *v429;
              *v428 = *v429;
              v587 = v586;
              v468 = v428;
              v469 = v430;
              v470 = 8;
              goto LABEL_292;
            case 9u:
              v588 = *v429;
              *v428 = *v429;
              v589 = v588;
              v468 = v428;
              v469 = v430;
              v470 = 9;
LABEL_292:
              swift_storeEnumTagMultiPayload(v468, v469, v470);
              break;
            default:
              memcpy(v428, v429, *(_QWORD *)(v431 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v431 + 56))(v428, 0, 1, v430);
        }
        v446 = v403;
        v447 = v7;
        v448 = 3;
        goto LABEL_306;
      case 4u:
        v435 = *v404;
        *v403 = *v404;
        v436 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v437 = (void **)((char *)v403 + v436);
        v438 = (void **)((char *)v404 + v436);
        v439 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v440 = *(_QWORD *)(v439 - 8);
        v441 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v440 + 48);
        v442 = v435;
        if (v441(v438, 1, v439))
        {
          v443 = sub_10002A750(&qword_100644980);
          memcpy(v437, v438, *(_QWORD *)(*(_QWORD *)(v443 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v438, v439))
          {
            case 1u:
              v471 = *v438;
              *v437 = *v438;
              v472 = v471;
              v473 = v437;
              v474 = v439;
              v475 = 1;
              goto LABEL_303;
            case 2u:
              v590 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v590 - 8) + 16))(v437, v438, v590);
              v473 = v437;
              v474 = v439;
              v475 = 2;
              goto LABEL_303;
            case 3u:
              v591 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v591 - 8) + 16))(v437, v438, v591);
              v473 = v437;
              v474 = v439;
              v475 = 3;
              goto LABEL_303;
            case 4u:
              v592 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v592 - 8) + 16))(v437, v438, v592);
              v473 = v437;
              v474 = v439;
              v475 = 4;
              goto LABEL_303;
            case 5u:
              v593 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v593 - 8) + 16))(v437, v438, v593);
              v473 = v437;
              v474 = v439;
              v475 = 5;
              goto LABEL_303;
            case 6u:
              v594 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v594 - 8) + 16))(v437, v438, v594);
              v473 = v437;
              v474 = v439;
              v475 = 6;
              goto LABEL_303;
            case 8u:
              v595 = *v438;
              *v437 = *v438;
              v596 = v595;
              v473 = v437;
              v474 = v439;
              v475 = 8;
              goto LABEL_303;
            case 9u:
              v597 = *v438;
              *v437 = *v438;
              v598 = v597;
              v473 = v437;
              v474 = v439;
              v475 = 9;
LABEL_303:
              swift_storeEnumTagMultiPayload(v473, v474, v475);
              break;
            default:
              memcpy(v437, v438, *(_QWORD *)(v440 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v440 + 56))(v437, 0, 1, v439);
        }
        v446 = v403;
        v447 = v7;
        v448 = 4;
        goto LABEL_306;
      case 5u:
        *v403 = *v404;
        *((_BYTE *)v403 + 8) = *((_BYTE *)v404 + 8);
        *((_BYTE *)v403 + 9) = *((_BYTE *)v404 + 9);
        *((_BYTE *)v403 + 10) = *((_BYTE *)v404 + 10);
        v444 = v404[2];
        v403[2] = v444;
        v445 = v444;
        v446 = v403;
        v447 = v7;
        v448 = 5;
        goto LABEL_306;
      case 6u:
        v456 = *v404;
        *v403 = *v404;
        v457 = v456;
        v446 = v403;
        v447 = v7;
        v448 = 6;
        goto LABEL_306;
      case 7u:
        v449 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v450 = *(_QWORD *)(v449 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v450 + 48))(v404, 1, v449))
        {
          v451 = sub_10002A750(&qword_100644600);
          memcpy(v403, v404, *(_QWORD *)(*(_QWORD *)(v451 - 8) + 64));
        }
        else
        {
          v476 = *v404;
          *v403 = *v404;
          v477 = *(int *)(v449 + 20);
          v648 = (char *)v403 + v477;
          v478 = (char *)v404 + v477;
          v479 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v480 = v7;
          v481 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v479 - 8) + 16);
          v482 = swift_bridgeObjectRetain(v476);
          v481(v648, v478, v479, v482);
          v7 = v480;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v450 + 56))(v403, 0, 1, v449);
        }
        v483 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v484 = (void **)((char *)v403 + v483);
        v485 = (void **)((char *)v404 + v483);
        if (v485[1])
        {
          *v484 = *v485;
          v486 = v485[1];
          v484[1] = v486;
          v487 = (void *)v485[2];
          v484[2] = v487;
          swift_bridgeObjectRetain(v486);
          v488 = v487;
        }
        else
        {
          v489 = *(_OWORD *)v485;
          v484[2] = v485[2];
          *(_OWORD *)v484 = v489;
        }
        v446 = v403;
        v447 = v7;
        v448 = 7;
        goto LABEL_306;
      case 8u:
        v458 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v459 = *(_QWORD *)(v458 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v459 + 48))(v404, 1, v458))
        {
          v460 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v403, v404, *(_QWORD *)(*(_QWORD *)(v460 - 8) + 64));
        }
        else
        {
          v490 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v490 - 8) + 16))(v403, v404, v490);
          *((_BYTE *)v403 + *(int *)(v458 + 20)) = *((_BYTE *)v404 + *(int *)(v458 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v459 + 56))(v403, 0, 1, v458);
        }
        v491 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)v403 + *(int *)(v491 + 20)) = *(void **)((char *)v404 + *(int *)(v491 + 20));
        v446 = v403;
        v447 = v7;
        v448 = 8;
        goto LABEL_306;
      case 9u:
        *(_BYTE *)v403 = *(_BYTE *)v404;
        v452 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v453 = (char *)v403 + v452;
        v454 = (char *)v404 + v452;
        v455 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v455 - 8) + 16))(v453, v454, v455);
        v446 = v403;
        v447 = v7;
        v448 = 9;
LABEL_306:
        swift_storeEnumTagMultiPayload(v446, v447, v448);
        break;
      default:
        memcpy(v403, v404, *(_QWORD *)(v8 + 64));
        break;
    }
  }
  return v3;
}

_QWORD *sub_1003BF9E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int *v135;
  uint64_t v136;
  _OWORD *v137;
  _OWORD *v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int *v147;
  uint64_t v148;
  _OWORD *v149;
  _OWORD *v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  int *v159;
  uint64_t v160;
  _OWORD *v161;
  _OWORD *v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  int *v171;
  uint64_t v172;
  _OWORD *v173;
  _OWORD *v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  _QWORD *v207;
  uint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  _QWORD *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  _QWORD *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  int *v274;
  uint64_t v275;
  _OWORD *v276;
  _OWORD *v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  int *v286;
  uint64_t v287;
  _OWORD *v288;
  _OWORD *v289;
  __int128 v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;

  v6 = sub_10002A750(&qword_10064B6B0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8);
  if (EnumCaseMultiPayload == 1)
  {
    if (v10)
    {
      v11 = sub_10002A750((uint64_t *)&unk_100640EB0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(a2, v8))
      {
        case 0u:
          v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v13))
          {
            case 2u:
              v14 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
              v15 = a1;
              v16 = v13;
              v17 = 2;
              goto LABEL_65;
            case 3u:
              v131 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v131 - 8) + 32))(a1, a2, v131);
              v15 = a1;
              v16 = v13;
              v17 = 3;
              goto LABEL_65;
            case 4u:
              v132 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v132 - 8) + 32))(a1, a2, v132);
              v15 = a1;
              v16 = v13;
              v17 = 4;
              goto LABEL_65;
            case 5u:
              v133 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v133 - 8) + 32))(a1, a2, v133);
              v15 = a1;
              v16 = v13;
              v17 = 5;
              goto LABEL_65;
            case 6u:
              v134 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(a1, a2, v134);
              v15 = a1;
              v16 = v13;
              v17 = 6;
LABEL_65:
              swift_storeEnumTagMultiPayload(v15, v16, v17);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
              break;
          }
          v135 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v136 = v135[5];
          v137 = (_OWORD *)((char *)a1 + v136);
          v138 = (_OWORD *)((char *)a2 + v136);
          v139 = v138[3];
          v137[2] = v138[2];
          v137[3] = v139;
          v140 = v138[1];
          *v137 = *v138;
          v137[1] = v140;
          *(_OWORD *)((char *)v137 + 106) = *(_OWORD *)((char *)v138 + 106);
          v141 = v138[6];
          v142 = v138[4];
          v137[5] = v138[5];
          v137[6] = v141;
          v137[4] = v142;
          *((_BYTE *)a1 + v135[6]) = *((_BYTE *)a2 + v135[6]);
          *((_BYTE *)a1 + v135[7]) = *((_BYTE *)a2 + v135[7]);
          *((_BYTE *)a1 + v135[8]) = *((_BYTE *)a2 + v135[8]);
          *((_BYTE *)a1 + v135[9]) = *((_BYTE *)a2 + v135[9]);
          *((_BYTE *)a1 + v135[10]) = *((_BYTE *)a2 + v135[10]);
          *(_QWORD *)((char *)a1 + v135[11]) = *(_QWORD *)((char *)a2 + v135[11]);
          v56 = a1;
          v57 = v8;
          v58 = 0;
          goto LABEL_131;
        case 1u:
          v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v23))
          {
            case 2u:
              v24 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a1, a2, v24);
              v25 = a1;
              v26 = v23;
              v27 = 2;
              goto LABEL_79;
            case 3u:
              v155 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v155 - 8) + 32))(a1, a2, v155);
              v25 = a1;
              v26 = v23;
              v27 = 3;
              goto LABEL_79;
            case 4u:
              v156 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v156 - 8) + 32))(a1, a2, v156);
              v25 = a1;
              v26 = v23;
              v27 = 4;
              goto LABEL_79;
            case 5u:
              v157 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(a1, a2, v157);
              v25 = a1;
              v26 = v23;
              v27 = 5;
              goto LABEL_79;
            case 6u:
              v158 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(a1, a2, v158);
              v25 = a1;
              v26 = v23;
              v27 = 6;
LABEL_79:
              swift_storeEnumTagMultiPayload(v25, v26, v27);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
              break;
          }
          v159 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v160 = v159[5];
          v161 = (_OWORD *)((char *)a1 + v160);
          v162 = (_OWORD *)((char *)a2 + v160);
          v163 = v162[3];
          v161[2] = v162[2];
          v161[3] = v163;
          v164 = v162[1];
          *v161 = *v162;
          v161[1] = v164;
          *(_OWORD *)((char *)v161 + 106) = *(_OWORD *)((char *)v162 + 106);
          v165 = v162[6];
          v166 = v162[4];
          v161[5] = v162[5];
          v161[6] = v165;
          v161[4] = v166;
          *((_BYTE *)a1 + v159[6]) = *((_BYTE *)a2 + v159[6]);
          *((_BYTE *)a1 + v159[7]) = *((_BYTE *)a2 + v159[7]);
          *((_BYTE *)a1 + v159[8]) = *((_BYTE *)a2 + v159[8]);
          *((_BYTE *)a1 + v159[9]) = *((_BYTE *)a2 + v159[9]);
          *((_BYTE *)a1 + v159[10]) = *((_BYTE *)a2 + v159[10]);
          *(_QWORD *)((char *)a1 + v159[11]) = *(_QWORD *)((char *)a2 + v159[11]);
          v56 = a1;
          v57 = v8;
          v58 = 1;
          goto LABEL_131;
        case 2u:
          *a1 = *a2;
          v28 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v29 = (char *)a1 + v28;
          v30 = (char *)a2 + v28;
          v31 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v32 = *(_QWORD *)(v31 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
          {
            v33 = sub_10002A750(&qword_100644980);
            memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v30, v31))
            {
              case 2u:
                v95 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v29, v30, v95);
                v96 = v29;
                v97 = v31;
                v98 = 2;
                goto LABEL_93;
              case 3u:
                v179 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v179 - 8) + 32))(v29, v30, v179);
                v96 = v29;
                v97 = v31;
                v98 = 3;
                goto LABEL_93;
              case 4u:
                v180 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 32))(v29, v30, v180);
                v96 = v29;
                v97 = v31;
                v98 = 4;
                goto LABEL_93;
              case 5u:
                v181 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(v29, v30, v181);
                v96 = v29;
                v97 = v31;
                v98 = 5;
                goto LABEL_93;
              case 6u:
                v182 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 32))(v29, v30, v182);
                v96 = v29;
                v97 = v31;
                v98 = 6;
LABEL_93:
                swift_storeEnumTagMultiPayload(v96, v97, v98);
                break;
              default:
                memcpy(v29, v30, *(_QWORD *)(v32 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
          }
          v56 = a1;
          v57 = v8;
          v58 = 2;
          goto LABEL_131;
        case 3u:
          *a1 = *a2;
          v34 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v35 = (char *)a1 + v34;
          v36 = (char *)a2 + v34;
          v37 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v38 = *(_QWORD *)(v37 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
          {
            v39 = sub_10002A750(&qword_100644980);
            memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v36, v37))
            {
              case 2u:
                v99 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v35, v36, v99);
                v100 = v35;
                v101 = v37;
                v102 = 2;
                goto LABEL_101;
              case 3u:
                v183 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v35, v36, v183);
                v100 = v35;
                v101 = v37;
                v102 = 3;
                goto LABEL_101;
              case 4u:
                v184 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v35, v36, v184);
                v100 = v35;
                v101 = v37;
                v102 = 4;
                goto LABEL_101;
              case 5u:
                v185 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v35, v36, v185);
                v100 = v35;
                v101 = v37;
                v102 = 5;
                goto LABEL_101;
              case 6u:
                v186 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v35, v36, v186);
                v100 = v35;
                v101 = v37;
                v102 = 6;
LABEL_101:
                swift_storeEnumTagMultiPayload(v100, v101, v102);
                break;
              default:
                memcpy(v35, v36, *(_QWORD *)(v38 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
          }
          v56 = a1;
          v57 = v8;
          v58 = 3;
          goto LABEL_131;
        case 4u:
          *a1 = *a2;
          v40 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v41 = (char *)a1 + v40;
          v42 = (char *)a2 + v40;
          v43 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v44 = *(_QWORD *)(v43 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
          {
            v45 = sub_10002A750(&qword_100644980);
            memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v42, v43))
            {
              case 2u:
                v103 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v41, v42, v103);
                swift_storeEnumTagMultiPayload(v41, v43, 2);
                break;
              case 3u:
                v187 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v41, v42, v187);
                swift_storeEnumTagMultiPayload(v41, v43, 3);
                break;
              case 4u:
                v188 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v41, v42, v188);
                swift_storeEnumTagMultiPayload(v41, v43, 4);
                break;
              case 5u:
                v189 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(v41, v42, v189);
                swift_storeEnumTagMultiPayload(v41, v43, 5);
                break;
              case 6u:
                v190 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 32))(v41, v42, v190);
                swift_storeEnumTagMultiPayload(v41, v43, 6);
                break;
              default:
                memcpy(v41, v42, *(_QWORD *)(v44 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
          }
          v56 = a1;
          v57 = v8;
          v58 = 4;
          goto LABEL_131;
        case 7u:
          v46 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v47 = *(_QWORD *)(v46 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v47 + 48))(a2, 1, v46))
          {
            v48 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            v104 = *(int *)(v46 + 20);
            v105 = (char *)a1 + v104;
            v106 = (char *)a2 + v104;
            v107 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v105, v106, v107);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(a1, 0, 1, v46);
          }
          v108 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v109 = (char *)a1 + v108;
          v110 = (char *)a2 + v108;
          *(_OWORD *)v109 = *(_OWORD *)v110;
          *((_QWORD *)v109 + 2) = *((_QWORD *)v110 + 2);
          v56 = a1;
          v57 = v8;
          v58 = 7;
          goto LABEL_131;
        case 8u:
          v49 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v50 = *(_QWORD *)(v49 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v50 + 48))(a2, 1, v49))
          {
            v51 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
          }
          else
          {
            v111 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(a1, a2, v111);
            *((_BYTE *)a1 + *(int *)(v49 + 20)) = *((_BYTE *)a2 + *(int *)(v49 + 20));
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v50 + 56))(a1, 0, 1, v49);
          }
          v112 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)((char *)a1 + *(int *)(v112 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v112 + 20));
          v56 = a1;
          v57 = v8;
          v58 = 8;
          goto LABEL_131;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v52 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v53 = (char *)a1 + v52;
          v54 = (char *)a2 + v52;
          v55 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
          v56 = a1;
          v57 = v8;
          v58 = 9;
LABEL_131:
          swift_storeEnumTagMultiPayload(v56, v57, v58);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v9 + 64));
          break;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v203 = sub_10002A750(&qword_1006588F8);
    *(_QWORD *)((char *)a1 + *(int *)(v203 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v203 + 48));
    v204 = 1;
  }
  else
  {
    if (v10)
    {
      v12 = sub_10002A750((uint64_t *)&unk_100640EB0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(a2, v8))
      {
        case 0u:
          v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v18))
          {
            case 2u:
              v19 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
              v20 = a1;
              v21 = v18;
              v22 = 2;
              goto LABEL_72;
            case 3u:
              v143 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v143 - 8) + 32))(a1, a2, v143);
              v20 = a1;
              v21 = v18;
              v22 = 3;
              goto LABEL_72;
            case 4u:
              v144 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v144 - 8) + 32))(a1, a2, v144);
              v20 = a1;
              v21 = v18;
              v22 = 4;
              goto LABEL_72;
            case 5u:
              v145 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(a1, a2, v145);
              v20 = a1;
              v21 = v18;
              v22 = 5;
              goto LABEL_72;
            case 6u:
              v146 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(a1, a2, v146);
              v20 = a1;
              v21 = v18;
              v22 = 6;
LABEL_72:
              swift_storeEnumTagMultiPayload(v20, v21, v22);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
              break;
          }
          v147 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v148 = v147[5];
          v149 = (_OWORD *)((char *)a1 + v148);
          v150 = (_OWORD *)((char *)a2 + v148);
          v151 = v150[3];
          v149[2] = v150[2];
          v149[3] = v151;
          v152 = v150[1];
          *v149 = *v150;
          v149[1] = v152;
          *(_OWORD *)((char *)v149 + 106) = *(_OWORD *)((char *)v150 + 106);
          v153 = v150[6];
          v154 = v150[4];
          v149[5] = v150[5];
          v149[6] = v153;
          v149[4] = v154;
          *((_BYTE *)a1 + v147[6]) = *((_BYTE *)a2 + v147[6]);
          *((_BYTE *)a1 + v147[7]) = *((_BYTE *)a2 + v147[7]);
          *((_BYTE *)a1 + v147[8]) = *((_BYTE *)a2 + v147[8]);
          *((_BYTE *)a1 + v147[9]) = *((_BYTE *)a2 + v147[9]);
          *((_BYTE *)a1 + v147[10]) = *((_BYTE *)a2 + v147[10]);
          *(_QWORD *)((char *)a1 + v147[11]) = *(_QWORD *)((char *)a2 + v147[11]);
          v92 = a1;
          v93 = v8;
          v94 = 0;
          goto LABEL_137;
        case 1u:
          v59 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v59))
          {
            case 2u:
              v60 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(a1, a2, v60);
              v61 = a1;
              v62 = v59;
              v63 = 2;
              goto LABEL_86;
            case 3u:
              v167 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v167 - 8) + 32))(a1, a2, v167);
              v61 = a1;
              v62 = v59;
              v63 = 3;
              goto LABEL_86;
            case 4u:
              v168 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v168 - 8) + 32))(a1, a2, v168);
              v61 = a1;
              v62 = v59;
              v63 = 4;
              goto LABEL_86;
            case 5u:
              v169 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v169 - 8) + 32))(a1, a2, v169);
              v61 = a1;
              v62 = v59;
              v63 = 5;
              goto LABEL_86;
            case 6u:
              v170 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(a1, a2, v170);
              v61 = a1;
              v62 = v59;
              v63 = 6;
LABEL_86:
              swift_storeEnumTagMultiPayload(v61, v62, v63);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
              break;
          }
          v171 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v172 = v171[5];
          v173 = (_OWORD *)((char *)a1 + v172);
          v174 = (_OWORD *)((char *)a2 + v172);
          v175 = v174[3];
          v173[2] = v174[2];
          v173[3] = v175;
          v176 = v174[1];
          *v173 = *v174;
          v173[1] = v176;
          *(_OWORD *)((char *)v173 + 106) = *(_OWORD *)((char *)v174 + 106);
          v177 = v174[6];
          v178 = v174[4];
          v173[5] = v174[5];
          v173[6] = v177;
          v173[4] = v178;
          *((_BYTE *)a1 + v171[6]) = *((_BYTE *)a2 + v171[6]);
          *((_BYTE *)a1 + v171[7]) = *((_BYTE *)a2 + v171[7]);
          *((_BYTE *)a1 + v171[8]) = *((_BYTE *)a2 + v171[8]);
          *((_BYTE *)a1 + v171[9]) = *((_BYTE *)a2 + v171[9]);
          *((_BYTE *)a1 + v171[10]) = *((_BYTE *)a2 + v171[10]);
          *(_QWORD *)((char *)a1 + v171[11]) = *(_QWORD *)((char *)a2 + v171[11]);
          v92 = a1;
          v93 = v8;
          v94 = 1;
          goto LABEL_137;
        case 2u:
          *a1 = *a2;
          v64 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v65 = (char *)a1 + v64;
          v66 = (char *)a2 + v64;
          v67 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v68 = *(_QWORD *)(v67 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
          {
            v69 = sub_10002A750(&qword_100644980);
            memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v66, v67))
            {
              case 2u:
                v113 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(v65, v66, v113);
                v114 = v65;
                v115 = v67;
                v116 = 2;
                goto LABEL_113;
              case 3u:
                v191 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v65, v66, v191);
                v114 = v65;
                v115 = v67;
                v116 = 3;
                goto LABEL_113;
              case 4u:
                v192 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32))(v65, v66, v192);
                v114 = v65;
                v115 = v67;
                v116 = 4;
                goto LABEL_113;
              case 5u:
                v193 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v193 - 8) + 32))(v65, v66, v193);
                v114 = v65;
                v115 = v67;
                v116 = 5;
                goto LABEL_113;
              case 6u:
                v194 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 32))(v65, v66, v194);
                v114 = v65;
                v115 = v67;
                v116 = 6;
LABEL_113:
                swift_storeEnumTagMultiPayload(v114, v115, v116);
                break;
              default:
                memcpy(v65, v66, *(_QWORD *)(v68 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
          }
          v92 = a1;
          v93 = v8;
          v94 = 2;
          goto LABEL_137;
        case 3u:
          *a1 = *a2;
          v70 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v71 = (char *)a1 + v70;
          v72 = (char *)a2 + v70;
          v73 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v74 = *(_QWORD *)(v73 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
          {
            v75 = sub_10002A750(&qword_100644980);
            memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v72, v73))
            {
              case 2u:
                v117 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v71, v72, v117);
                v118 = v71;
                v119 = v73;
                v120 = 2;
                goto LABEL_121;
              case 3u:
                v195 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v71, v72, v195);
                v118 = v71;
                v119 = v73;
                v120 = 3;
                goto LABEL_121;
              case 4u:
                v196 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v71, v72, v196);
                v118 = v71;
                v119 = v73;
                v120 = 4;
                goto LABEL_121;
              case 5u:
                v197 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32))(v71, v72, v197);
                v118 = v71;
                v119 = v73;
                v120 = 5;
                goto LABEL_121;
              case 6u:
                v198 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v71, v72, v198);
                v118 = v71;
                v119 = v73;
                v120 = 6;
LABEL_121:
                swift_storeEnumTagMultiPayload(v118, v119, v120);
                break;
              default:
                memcpy(v71, v72, *(_QWORD *)(v74 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
          }
          v92 = a1;
          v93 = v8;
          v94 = 3;
          goto LABEL_137;
        case 4u:
          *a1 = *a2;
          v76 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v77 = (char *)a1 + v76;
          v78 = (char *)a2 + v76;
          v79 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v80 = *(_QWORD *)(v79 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
          {
            v81 = sub_10002A750(&qword_100644980);
            memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v78, v79))
            {
              case 2u:
                v121 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v77, v78, v121);
                swift_storeEnumTagMultiPayload(v77, v79, 2);
                break;
              case 3u:
                v199 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v77, v78, v199);
                swift_storeEnumTagMultiPayload(v77, v79, 3);
                break;
              case 4u:
                v200 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v77, v78, v200);
                swift_storeEnumTagMultiPayload(v77, v79, 4);
                break;
              case 5u:
                v201 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v77, v78, v201);
                swift_storeEnumTagMultiPayload(v77, v79, 5);
                break;
              case 6u:
                v202 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v77, v78, v202);
                swift_storeEnumTagMultiPayload(v77, v79, 6);
                break;
              default:
                memcpy(v77, v78, *(_QWORD *)(v80 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
          }
          v92 = a1;
          v93 = v8;
          v94 = 4;
          goto LABEL_137;
        case 7u:
          v82 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v83 = *(_QWORD *)(v82 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v83 + 48))(a2, 1, v82))
          {
            v84 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            v122 = *(int *)(v82 + 20);
            v123 = (char *)a1 + v122;
            v124 = (char *)a2 + v122;
            v125 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 32))(v123, v124, v125);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v83 + 56))(a1, 0, 1, v82);
          }
          v126 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v127 = (char *)a1 + v126;
          v128 = (char *)a2 + v126;
          *(_OWORD *)v127 = *(_OWORD *)v128;
          *((_QWORD *)v127 + 2) = *((_QWORD *)v128 + 2);
          v92 = a1;
          v93 = v8;
          v94 = 7;
          goto LABEL_137;
        case 8u:
          v85 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v86 = *(_QWORD *)(v85 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v86 + 48))(a2, 1, v85))
          {
            v87 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
          }
          else
          {
            v129 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v129 - 8) + 32))(a1, a2, v129);
            *((_BYTE *)a1 + *(int *)(v85 + 20)) = *((_BYTE *)a2 + *(int *)(v85 + 20));
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v86 + 56))(a1, 0, 1, v85);
          }
          v130 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)((char *)a1 + *(int *)(v130 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v130 + 20));
          v92 = a1;
          v93 = v8;
          v94 = 8;
          goto LABEL_137;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v88 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v89 = (char *)a1 + v88;
          v90 = (char *)a2 + v88;
          v91 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v89, v90, v91);
          v92 = a1;
          v93 = v8;
          v94 = 9;
LABEL_137:
          swift_storeEnumTagMultiPayload(v92, v93, v94);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v9 + 64));
          break;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v204 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, v6, v204);
  v205 = *(int *)(a3 + 20);
  v206 = (_QWORD *)((char *)a1 + v205);
  v207 = (_QWORD *)((char *)a2 + v205);
  switch(swift_getEnumCaseMultiPayload(v207, v8))
  {
    case 0u:
      v208 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v207, v208))
      {
        case 2u:
          v209 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v209 - 8) + 32))(v206, v207, v209);
          v210 = v206;
          v211 = v208;
          v212 = 2;
          goto LABEL_172;
        case 3u:
          v270 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v270 - 8) + 32))(v206, v207, v270);
          v210 = v206;
          v211 = v208;
          v212 = 3;
          goto LABEL_172;
        case 4u:
          v271 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v271 - 8) + 32))(v206, v207, v271);
          v210 = v206;
          v211 = v208;
          v212 = 4;
          goto LABEL_172;
        case 5u:
          v272 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v272 - 8) + 32))(v206, v207, v272);
          v210 = v206;
          v211 = v208;
          v212 = 5;
          goto LABEL_172;
        case 6u:
          v273 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v273 - 8) + 32))(v206, v207, v273);
          v210 = v206;
          v211 = v208;
          v212 = 6;
LABEL_172:
          swift_storeEnumTagMultiPayload(v210, v211, v212);
          break;
        default:
          memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v208 - 8) + 64));
          break;
      }
      v274 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v275 = v274[5];
      v276 = (_OWORD *)((char *)v206 + v275);
      v277 = (_OWORD *)((char *)v207 + v275);
      v278 = v277[3];
      v276[2] = v277[2];
      v276[3] = v278;
      v279 = v277[1];
      *v276 = *v277;
      v276[1] = v279;
      *(_OWORD *)((char *)v276 + 106) = *(_OWORD *)((char *)v277 + 106);
      v280 = v277[6];
      v281 = v277[4];
      v276[5] = v277[5];
      v276[6] = v280;
      v276[4] = v281;
      *((_BYTE *)v206 + v274[6]) = *((_BYTE *)v207 + v274[6]);
      *((_BYTE *)v206 + v274[7]) = *((_BYTE *)v207 + v274[7]);
      *((_BYTE *)v206 + v274[8]) = *((_BYTE *)v207 + v274[8]);
      *((_BYTE *)v206 + v274[9]) = *((_BYTE *)v207 + v274[9]);
      *((_BYTE *)v206 + v274[10]) = *((_BYTE *)v207 + v274[10]);
      *(_QWORD *)((char *)v206 + v274[11]) = *(_QWORD *)((char *)v207 + v274[11]);
      v246 = v206;
      v247 = v8;
      v248 = 0;
      goto LABEL_205;
    case 1u:
      v213 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v207, v213))
      {
        case 2u:
          v214 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v214 - 8) + 32))(v206, v207, v214);
          v215 = v206;
          v216 = v213;
          v217 = 2;
          goto LABEL_179;
        case 3u:
          v282 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v282 - 8) + 32))(v206, v207, v282);
          v215 = v206;
          v216 = v213;
          v217 = 3;
          goto LABEL_179;
        case 4u:
          v283 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v283 - 8) + 32))(v206, v207, v283);
          v215 = v206;
          v216 = v213;
          v217 = 4;
          goto LABEL_179;
        case 5u:
          v284 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v284 - 8) + 32))(v206, v207, v284);
          v215 = v206;
          v216 = v213;
          v217 = 5;
          goto LABEL_179;
        case 6u:
          v285 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v285 - 8) + 32))(v206, v207, v285);
          v215 = v206;
          v216 = v213;
          v217 = 6;
LABEL_179:
          swift_storeEnumTagMultiPayload(v215, v216, v217);
          break;
        default:
          memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v213 - 8) + 64));
          break;
      }
      v286 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v287 = v286[5];
      v288 = (_OWORD *)((char *)v206 + v287);
      v289 = (_OWORD *)((char *)v207 + v287);
      v290 = v289[3];
      v288[2] = v289[2];
      v288[3] = v290;
      v291 = v289[1];
      *v288 = *v289;
      v288[1] = v291;
      *(_OWORD *)((char *)v288 + 106) = *(_OWORD *)((char *)v289 + 106);
      v292 = v289[6];
      v293 = v289[4];
      v288[5] = v289[5];
      v288[6] = v292;
      v288[4] = v293;
      *((_BYTE *)v206 + v286[6]) = *((_BYTE *)v207 + v286[6]);
      *((_BYTE *)v206 + v286[7]) = *((_BYTE *)v207 + v286[7]);
      *((_BYTE *)v206 + v286[8]) = *((_BYTE *)v207 + v286[8]);
      *((_BYTE *)v206 + v286[9]) = *((_BYTE *)v207 + v286[9]);
      *((_BYTE *)v206 + v286[10]) = *((_BYTE *)v207 + v286[10]);
      *(_QWORD *)((char *)v206 + v286[11]) = *(_QWORD *)((char *)v207 + v286[11]);
      v246 = v206;
      v247 = v8;
      v248 = 1;
      goto LABEL_205;
    case 2u:
      *v206 = *v207;
      v218 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v219 = (char *)v206 + v218;
      v220 = (char *)v207 + v218;
      v221 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v222 = *(_QWORD *)(v221 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v222 + 48))(v220, 1, v221))
      {
        v223 = sub_10002A750(&qword_100644980);
        memcpy(v219, v220, *(_QWORD *)(*(_QWORD *)(v223 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v220, v221))
        {
          case 2u:
            v249 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v249 - 8) + 32))(v219, v220, v249);
            v250 = v219;
            v251 = v221;
            v252 = 2;
            goto LABEL_186;
          case 3u:
            v294 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v294 - 8) + 32))(v219, v220, v294);
            v250 = v219;
            v251 = v221;
            v252 = 3;
            goto LABEL_186;
          case 4u:
            v295 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v295 - 8) + 32))(v219, v220, v295);
            v250 = v219;
            v251 = v221;
            v252 = 4;
            goto LABEL_186;
          case 5u:
            v296 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v296 - 8) + 32))(v219, v220, v296);
            v250 = v219;
            v251 = v221;
            v252 = 5;
            goto LABEL_186;
          case 6u:
            v297 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v297 - 8) + 32))(v219, v220, v297);
            v250 = v219;
            v251 = v221;
            v252 = 6;
LABEL_186:
            swift_storeEnumTagMultiPayload(v250, v251, v252);
            break;
          default:
            memcpy(v219, v220, *(_QWORD *)(v222 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v222 + 56))(v219, 0, 1, v221);
      }
      v246 = v206;
      v247 = v8;
      v248 = 2;
      goto LABEL_205;
    case 3u:
      *v206 = *v207;
      v224 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v225 = (char *)v206 + v224;
      v226 = (char *)v207 + v224;
      v227 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v228 = *(_QWORD *)(v227 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v228 + 48))(v226, 1, v227))
      {
        v229 = sub_10002A750(&qword_100644980);
        memcpy(v225, v226, *(_QWORD *)(*(_QWORD *)(v229 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v226, v227))
        {
          case 2u:
            v253 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v253 - 8) + 32))(v225, v226, v253);
            v254 = v225;
            v255 = v227;
            v256 = 2;
            goto LABEL_194;
          case 3u:
            v298 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v298 - 8) + 32))(v225, v226, v298);
            v254 = v225;
            v255 = v227;
            v256 = 3;
            goto LABEL_194;
          case 4u:
            v299 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v299 - 8) + 32))(v225, v226, v299);
            v254 = v225;
            v255 = v227;
            v256 = 4;
            goto LABEL_194;
          case 5u:
            v300 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v300 - 8) + 32))(v225, v226, v300);
            v254 = v225;
            v255 = v227;
            v256 = 5;
            goto LABEL_194;
          case 6u:
            v301 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v301 - 8) + 32))(v225, v226, v301);
            v254 = v225;
            v255 = v227;
            v256 = 6;
LABEL_194:
            swift_storeEnumTagMultiPayload(v254, v255, v256);
            break;
          default:
            memcpy(v225, v226, *(_QWORD *)(v228 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v228 + 56))(v225, 0, 1, v227);
      }
      v246 = v206;
      v247 = v8;
      v248 = 3;
      goto LABEL_205;
    case 4u:
      *v206 = *v207;
      v230 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v231 = (char *)v206 + v230;
      v232 = (char *)v207 + v230;
      v233 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v234 = *(_QWORD *)(v233 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v234 + 48))(v232, 1, v233))
      {
        v235 = sub_10002A750(&qword_100644980);
        memcpy(v231, v232, *(_QWORD *)(*(_QWORD *)(v235 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v232, v233))
        {
          case 2u:
            v257 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v257 - 8) + 32))(v231, v232, v257);
            v258 = v231;
            v259 = v233;
            v260 = 2;
            goto LABEL_202;
          case 3u:
            v302 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v302 - 8) + 32))(v231, v232, v302);
            v258 = v231;
            v259 = v233;
            v260 = 3;
            goto LABEL_202;
          case 4u:
            v303 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v303 - 8) + 32))(v231, v232, v303);
            v258 = v231;
            v259 = v233;
            v260 = 4;
            goto LABEL_202;
          case 5u:
            v304 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v304 - 8) + 32))(v231, v232, v304);
            v258 = v231;
            v259 = v233;
            v260 = 5;
            goto LABEL_202;
          case 6u:
            v305 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v305 - 8) + 32))(v231, v232, v305);
            v258 = v231;
            v259 = v233;
            v260 = 6;
LABEL_202:
            swift_storeEnumTagMultiPayload(v258, v259, v260);
            break;
          default:
            memcpy(v231, v232, *(_QWORD *)(v234 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v234 + 56))(v231, 0, 1, v233);
      }
      v246 = v206;
      v247 = v8;
      v248 = 4;
      goto LABEL_205;
    case 7u:
      v236 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v237 = *(_QWORD *)(v236 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v237 + 48))(v207, 1, v236))
      {
        v238 = sub_10002A750(&qword_100644600);
        memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v238 - 8) + 64));
      }
      else
      {
        *v206 = *v207;
        v261 = *(int *)(v236 + 20);
        v262 = (char *)v206 + v261;
        v263 = (char *)v207 + v261;
        v264 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v264 - 8) + 32))(v262, v263, v264);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v237 + 56))(v206, 0, 1, v236);
      }
      v265 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v266 = (char *)v206 + v265;
      v267 = (char *)v207 + v265;
      *(_OWORD *)v266 = *(_OWORD *)v267;
      *((_QWORD *)v266 + 2) = *((_QWORD *)v267 + 2);
      v246 = v206;
      v247 = v8;
      v248 = 7;
      goto LABEL_205;
    case 8u:
      v239 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v240 = *(_QWORD *)(v239 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v240 + 48))(v207, 1, v239))
      {
        v241 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v241 - 8) + 64));
      }
      else
      {
        v268 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v268 - 8) + 32))(v206, v207, v268);
        *((_BYTE *)v206 + *(int *)(v239 + 20)) = *((_BYTE *)v207 + *(int *)(v239 + 20));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v240 + 56))(v206, 0, 1, v239);
      }
      v269 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(_QWORD *)((char *)v206 + *(int *)(v269 + 20)) = *(_QWORD *)((char *)v207 + *(int *)(v269 + 20));
      v246 = v206;
      v247 = v8;
      v248 = 8;
      goto LABEL_205;
    case 9u:
      *(_BYTE *)v206 = *(_BYTE *)v207;
      v242 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v243 = (char *)v206 + v242;
      v244 = (char *)v207 + v242;
      v245 = type metadata accessor for AnyTip(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v245 - 8) + 32))(v243, v244, v245);
      v246 = v206;
      v247 = v8;
      v248 = 9;
LABEL_205:
      swift_storeEnumTagMultiPayload(v246, v247, v248);
      break;
    default:
      memcpy(v206, v207, *(_QWORD *)(v9 + 64));
      break;
  }
  return a1;
}

_QWORD *sub_1003C1C70(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int *v135;
  uint64_t v136;
  _OWORD *v137;
  _OWORD *v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int *v147;
  uint64_t v148;
  _OWORD *v149;
  _OWORD *v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  int *v159;
  uint64_t v160;
  _OWORD *v161;
  _OWORD *v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  int *v171;
  uint64_t v172;
  _OWORD *v173;
  _OWORD *v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  _QWORD *v207;
  uint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  _QWORD *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  _QWORD *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  int *v274;
  uint64_t v275;
  _OWORD *v276;
  _OWORD *v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  int *v286;
  uint64_t v287;
  _OWORD *v288;
  _OWORD *v289;
  __int128 v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;

  if (a1 != a2)
  {
    sub_1000073A0((uint64_t)a1, &qword_10064B6B0);
    v6 = sub_10002A750(&qword_10064B6B0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
    v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v9 = *(_QWORD *)(v8 - 8);
    v10 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8);
    if (EnumCaseMultiPayload == 1)
    {
      if (v10)
      {
        v11 = sub_10002A750((uint64_t *)&unk_100640EB0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(a2, v8))
        {
          case 0u:
            v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            switch(swift_getEnumCaseMultiPayload(a2, v13))
            {
              case 2u:
                v14 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
                v15 = a1;
                v16 = v13;
                v17 = 2;
                goto LABEL_66;
              case 3u:
                v131 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v131 - 8) + 32))(a1, a2, v131);
                v15 = a1;
                v16 = v13;
                v17 = 3;
                goto LABEL_66;
              case 4u:
                v132 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v132 - 8) + 32))(a1, a2, v132);
                v15 = a1;
                v16 = v13;
                v17 = 4;
                goto LABEL_66;
              case 5u:
                v133 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v133 - 8) + 32))(a1, a2, v133);
                v15 = a1;
                v16 = v13;
                v17 = 5;
                goto LABEL_66;
              case 6u:
                v134 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(a1, a2, v134);
                v15 = a1;
                v16 = v13;
                v17 = 6;
LABEL_66:
                swift_storeEnumTagMultiPayload(v15, v16, v17);
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
                break;
            }
            v135 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v136 = v135[5];
            v137 = (_OWORD *)((char *)a1 + v136);
            v138 = (_OWORD *)((char *)a2 + v136);
            v139 = v138[3];
            v137[2] = v138[2];
            v137[3] = v139;
            v140 = v138[1];
            *v137 = *v138;
            v137[1] = v140;
            *(_OWORD *)((char *)v137 + 106) = *(_OWORD *)((char *)v138 + 106);
            v141 = v138[6];
            v142 = v138[4];
            v137[5] = v138[5];
            v137[6] = v141;
            v137[4] = v142;
            *((_BYTE *)a1 + v135[6]) = *((_BYTE *)a2 + v135[6]);
            *((_BYTE *)a1 + v135[7]) = *((_BYTE *)a2 + v135[7]);
            *((_BYTE *)a1 + v135[8]) = *((_BYTE *)a2 + v135[8]);
            *((_BYTE *)a1 + v135[9]) = *((_BYTE *)a2 + v135[9]);
            *((_BYTE *)a1 + v135[10]) = *((_BYTE *)a2 + v135[10]);
            *(_QWORD *)((char *)a1 + v135[11]) = *(_QWORD *)((char *)a2 + v135[11]);
            v56 = a1;
            v57 = v8;
            v58 = 0;
            goto LABEL_132;
          case 1u:
            v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            switch(swift_getEnumCaseMultiPayload(a2, v23))
            {
              case 2u:
                v24 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a1, a2, v24);
                v25 = a1;
                v26 = v23;
                v27 = 2;
                goto LABEL_80;
              case 3u:
                v155 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v155 - 8) + 32))(a1, a2, v155);
                v25 = a1;
                v26 = v23;
                v27 = 3;
                goto LABEL_80;
              case 4u:
                v156 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v156 - 8) + 32))(a1, a2, v156);
                v25 = a1;
                v26 = v23;
                v27 = 4;
                goto LABEL_80;
              case 5u:
                v157 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(a1, a2, v157);
                v25 = a1;
                v26 = v23;
                v27 = 5;
                goto LABEL_80;
              case 6u:
                v158 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(a1, a2, v158);
                v25 = a1;
                v26 = v23;
                v27 = 6;
LABEL_80:
                swift_storeEnumTagMultiPayload(v25, v26, v27);
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
                break;
            }
            v159 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v160 = v159[5];
            v161 = (_OWORD *)((char *)a1 + v160);
            v162 = (_OWORD *)((char *)a2 + v160);
            v163 = v162[3];
            v161[2] = v162[2];
            v161[3] = v163;
            v164 = v162[1];
            *v161 = *v162;
            v161[1] = v164;
            *(_OWORD *)((char *)v161 + 106) = *(_OWORD *)((char *)v162 + 106);
            v165 = v162[6];
            v166 = v162[4];
            v161[5] = v162[5];
            v161[6] = v165;
            v161[4] = v166;
            *((_BYTE *)a1 + v159[6]) = *((_BYTE *)a2 + v159[6]);
            *((_BYTE *)a1 + v159[7]) = *((_BYTE *)a2 + v159[7]);
            *((_BYTE *)a1 + v159[8]) = *((_BYTE *)a2 + v159[8]);
            *((_BYTE *)a1 + v159[9]) = *((_BYTE *)a2 + v159[9]);
            *((_BYTE *)a1 + v159[10]) = *((_BYTE *)a2 + v159[10]);
            *(_QWORD *)((char *)a1 + v159[11]) = *(_QWORD *)((char *)a2 + v159[11]);
            v56 = a1;
            v57 = v8;
            v58 = 1;
            goto LABEL_132;
          case 2u:
            *a1 = *a2;
            v28 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v29 = (char *)a1 + v28;
            v30 = (char *)a2 + v28;
            v31 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v32 = *(_QWORD *)(v31 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
            {
              v33 = sub_10002A750(&qword_100644980);
              memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v30, v31))
              {
                case 2u:
                  v95 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v29, v30, v95);
                  v96 = v29;
                  v97 = v31;
                  v98 = 2;
                  goto LABEL_94;
                case 3u:
                  v179 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v179 - 8) + 32))(v29, v30, v179);
                  v96 = v29;
                  v97 = v31;
                  v98 = 3;
                  goto LABEL_94;
                case 4u:
                  v180 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 32))(v29, v30, v180);
                  v96 = v29;
                  v97 = v31;
                  v98 = 4;
                  goto LABEL_94;
                case 5u:
                  v181 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(v29, v30, v181);
                  v96 = v29;
                  v97 = v31;
                  v98 = 5;
                  goto LABEL_94;
                case 6u:
                  v182 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 32))(v29, v30, v182);
                  v96 = v29;
                  v97 = v31;
                  v98 = 6;
LABEL_94:
                  swift_storeEnumTagMultiPayload(v96, v97, v98);
                  break;
                default:
                  memcpy(v29, v30, *(_QWORD *)(v32 + 64));
                  break;
              }
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
            }
            v56 = a1;
            v57 = v8;
            v58 = 2;
            goto LABEL_132;
          case 3u:
            *a1 = *a2;
            v34 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v35 = (char *)a1 + v34;
            v36 = (char *)a2 + v34;
            v37 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v38 = *(_QWORD *)(v37 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
            {
              v39 = sub_10002A750(&qword_100644980);
              memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v36, v37))
              {
                case 2u:
                  v99 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v35, v36, v99);
                  v100 = v35;
                  v101 = v37;
                  v102 = 2;
                  goto LABEL_102;
                case 3u:
                  v183 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v35, v36, v183);
                  v100 = v35;
                  v101 = v37;
                  v102 = 3;
                  goto LABEL_102;
                case 4u:
                  v184 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v35, v36, v184);
                  v100 = v35;
                  v101 = v37;
                  v102 = 4;
                  goto LABEL_102;
                case 5u:
                  v185 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v35, v36, v185);
                  v100 = v35;
                  v101 = v37;
                  v102 = 5;
                  goto LABEL_102;
                case 6u:
                  v186 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v35, v36, v186);
                  v100 = v35;
                  v101 = v37;
                  v102 = 6;
LABEL_102:
                  swift_storeEnumTagMultiPayload(v100, v101, v102);
                  break;
                default:
                  memcpy(v35, v36, *(_QWORD *)(v38 + 64));
                  break;
              }
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
            }
            v56 = a1;
            v57 = v8;
            v58 = 3;
            goto LABEL_132;
          case 4u:
            *a1 = *a2;
            v40 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v41 = (char *)a1 + v40;
            v42 = (char *)a2 + v40;
            v43 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v44 = *(_QWORD *)(v43 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
            {
              v45 = sub_10002A750(&qword_100644980);
              memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v42, v43))
              {
                case 2u:
                  v103 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v41, v42, v103);
                  swift_storeEnumTagMultiPayload(v41, v43, 2);
                  break;
                case 3u:
                  v187 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v41, v42, v187);
                  swift_storeEnumTagMultiPayload(v41, v43, 3);
                  break;
                case 4u:
                  v188 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v41, v42, v188);
                  swift_storeEnumTagMultiPayload(v41, v43, 4);
                  break;
                case 5u:
                  v189 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(v41, v42, v189);
                  swift_storeEnumTagMultiPayload(v41, v43, 5);
                  break;
                case 6u:
                  v190 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 32))(v41, v42, v190);
                  swift_storeEnumTagMultiPayload(v41, v43, 6);
                  break;
                default:
                  memcpy(v41, v42, *(_QWORD *)(v44 + 64));
                  break;
              }
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
            }
            v56 = a1;
            v57 = v8;
            v58 = 4;
            goto LABEL_132;
          case 7u:
            v46 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
            v47 = *(_QWORD *)(v46 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v47 + 48))(a2, 1, v46))
            {
              v48 = sub_10002A750(&qword_100644600);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
            }
            else
            {
              *a1 = *a2;
              v104 = *(int *)(v46 + 20);
              v105 = (char *)a1 + v104;
              v106 = (char *)a2 + v104;
              v107 = type metadata accessor for REMHashtagLabelSpecifier(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v105, v106, v107);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(a1, 0, 1, v46);
            }
            v108 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
            v109 = (char *)a1 + v108;
            v110 = (char *)a2 + v108;
            *(_OWORD *)v109 = *(_OWORD *)v110;
            *((_QWORD *)v109 + 2) = *((_QWORD *)v110 + 2);
            v56 = a1;
            v57 = v8;
            v58 = 7;
            goto LABEL_132;
          case 8u:
            v49 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
            v50 = *(_QWORD *)(v49 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v50 + 48))(a2, 1, v49))
            {
              v51 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
            }
            else
            {
              v111 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(a1, a2, v111);
              *((_BYTE *)a1 + *(int *)(v49 + 20)) = *((_BYTE *)a2 + *(int *)(v49 + 20));
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v50 + 56))(a1, 0, 1, v49);
            }
            v112 = type metadata accessor for TTRTemplatePublicLinkData(0);
            *(_QWORD *)((char *)a1 + *(int *)(v112 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v112 + 20));
            v56 = a1;
            v57 = v8;
            v58 = 8;
            goto LABEL_132;
          case 9u:
            *(_BYTE *)a1 = *(_BYTE *)a2;
            v52 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
            v53 = (char *)a1 + v52;
            v54 = (char *)a2 + v52;
            v55 = type metadata accessor for AnyTip(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
            v56 = a1;
            v57 = v8;
            v58 = 9;
LABEL_132:
            swift_storeEnumTagMultiPayload(v56, v57, v58);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(v9 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      v203 = sub_10002A750(&qword_1006588F8);
      *(_QWORD *)((char *)a1 + *(int *)(v203 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v203 + 48));
      v204 = 1;
    }
    else
    {
      if (v10)
      {
        v12 = sub_10002A750((uint64_t *)&unk_100640EB0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(a2, v8))
        {
          case 0u:
            v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            switch(swift_getEnumCaseMultiPayload(a2, v18))
            {
              case 2u:
                v19 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
                v20 = a1;
                v21 = v18;
                v22 = 2;
                goto LABEL_73;
              case 3u:
                v143 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v143 - 8) + 32))(a1, a2, v143);
                v20 = a1;
                v21 = v18;
                v22 = 3;
                goto LABEL_73;
              case 4u:
                v144 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v144 - 8) + 32))(a1, a2, v144);
                v20 = a1;
                v21 = v18;
                v22 = 4;
                goto LABEL_73;
              case 5u:
                v145 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(a1, a2, v145);
                v20 = a1;
                v21 = v18;
                v22 = 5;
                goto LABEL_73;
              case 6u:
                v146 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(a1, a2, v146);
                v20 = a1;
                v21 = v18;
                v22 = 6;
LABEL_73:
                swift_storeEnumTagMultiPayload(v20, v21, v22);
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
                break;
            }
            v147 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v148 = v147[5];
            v149 = (_OWORD *)((char *)a1 + v148);
            v150 = (_OWORD *)((char *)a2 + v148);
            v151 = v150[3];
            v149[2] = v150[2];
            v149[3] = v151;
            v152 = v150[1];
            *v149 = *v150;
            v149[1] = v152;
            *(_OWORD *)((char *)v149 + 106) = *(_OWORD *)((char *)v150 + 106);
            v153 = v150[6];
            v154 = v150[4];
            v149[5] = v150[5];
            v149[6] = v153;
            v149[4] = v154;
            *((_BYTE *)a1 + v147[6]) = *((_BYTE *)a2 + v147[6]);
            *((_BYTE *)a1 + v147[7]) = *((_BYTE *)a2 + v147[7]);
            *((_BYTE *)a1 + v147[8]) = *((_BYTE *)a2 + v147[8]);
            *((_BYTE *)a1 + v147[9]) = *((_BYTE *)a2 + v147[9]);
            *((_BYTE *)a1 + v147[10]) = *((_BYTE *)a2 + v147[10]);
            *(_QWORD *)((char *)a1 + v147[11]) = *(_QWORD *)((char *)a2 + v147[11]);
            v92 = a1;
            v93 = v8;
            v94 = 0;
            goto LABEL_138;
          case 1u:
            v59 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            switch(swift_getEnumCaseMultiPayload(a2, v59))
            {
              case 2u:
                v60 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(a1, a2, v60);
                v61 = a1;
                v62 = v59;
                v63 = 2;
                goto LABEL_87;
              case 3u:
                v167 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v167 - 8) + 32))(a1, a2, v167);
                v61 = a1;
                v62 = v59;
                v63 = 3;
                goto LABEL_87;
              case 4u:
                v168 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v168 - 8) + 32))(a1, a2, v168);
                v61 = a1;
                v62 = v59;
                v63 = 4;
                goto LABEL_87;
              case 5u:
                v169 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v169 - 8) + 32))(a1, a2, v169);
                v61 = a1;
                v62 = v59;
                v63 = 5;
                goto LABEL_87;
              case 6u:
                v170 = type metadata accessor for Date(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(a1, a2, v170);
                v61 = a1;
                v62 = v59;
                v63 = 6;
LABEL_87:
                swift_storeEnumTagMultiPayload(v61, v62, v63);
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
                break;
            }
            v171 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
            v172 = v171[5];
            v173 = (_OWORD *)((char *)a1 + v172);
            v174 = (_OWORD *)((char *)a2 + v172);
            v175 = v174[3];
            v173[2] = v174[2];
            v173[3] = v175;
            v176 = v174[1];
            *v173 = *v174;
            v173[1] = v176;
            *(_OWORD *)((char *)v173 + 106) = *(_OWORD *)((char *)v174 + 106);
            v177 = v174[6];
            v178 = v174[4];
            v173[5] = v174[5];
            v173[6] = v177;
            v173[4] = v178;
            *((_BYTE *)a1 + v171[6]) = *((_BYTE *)a2 + v171[6]);
            *((_BYTE *)a1 + v171[7]) = *((_BYTE *)a2 + v171[7]);
            *((_BYTE *)a1 + v171[8]) = *((_BYTE *)a2 + v171[8]);
            *((_BYTE *)a1 + v171[9]) = *((_BYTE *)a2 + v171[9]);
            *((_BYTE *)a1 + v171[10]) = *((_BYTE *)a2 + v171[10]);
            *(_QWORD *)((char *)a1 + v171[11]) = *(_QWORD *)((char *)a2 + v171[11]);
            v92 = a1;
            v93 = v8;
            v94 = 1;
            goto LABEL_138;
          case 2u:
            *a1 = *a2;
            v64 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v65 = (char *)a1 + v64;
            v66 = (char *)a2 + v64;
            v67 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v68 = *(_QWORD *)(v67 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
            {
              v69 = sub_10002A750(&qword_100644980);
              memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v66, v67))
              {
                case 2u:
                  v113 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(v65, v66, v113);
                  v114 = v65;
                  v115 = v67;
                  v116 = 2;
                  goto LABEL_114;
                case 3u:
                  v191 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v65, v66, v191);
                  v114 = v65;
                  v115 = v67;
                  v116 = 3;
                  goto LABEL_114;
                case 4u:
                  v192 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32))(v65, v66, v192);
                  v114 = v65;
                  v115 = v67;
                  v116 = 4;
                  goto LABEL_114;
                case 5u:
                  v193 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v193 - 8) + 32))(v65, v66, v193);
                  v114 = v65;
                  v115 = v67;
                  v116 = 5;
                  goto LABEL_114;
                case 6u:
                  v194 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 32))(v65, v66, v194);
                  v114 = v65;
                  v115 = v67;
                  v116 = 6;
LABEL_114:
                  swift_storeEnumTagMultiPayload(v114, v115, v116);
                  break;
                default:
                  memcpy(v65, v66, *(_QWORD *)(v68 + 64));
                  break;
              }
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
            }
            v92 = a1;
            v93 = v8;
            v94 = 2;
            goto LABEL_138;
          case 3u:
            *a1 = *a2;
            v70 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v71 = (char *)a1 + v70;
            v72 = (char *)a2 + v70;
            v73 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v74 = *(_QWORD *)(v73 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
            {
              v75 = sub_10002A750(&qword_100644980);
              memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v72, v73))
              {
                case 2u:
                  v117 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v71, v72, v117);
                  v118 = v71;
                  v119 = v73;
                  v120 = 2;
                  goto LABEL_122;
                case 3u:
                  v195 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v71, v72, v195);
                  v118 = v71;
                  v119 = v73;
                  v120 = 3;
                  goto LABEL_122;
                case 4u:
                  v196 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v71, v72, v196);
                  v118 = v71;
                  v119 = v73;
                  v120 = 4;
                  goto LABEL_122;
                case 5u:
                  v197 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32))(v71, v72, v197);
                  v118 = v71;
                  v119 = v73;
                  v120 = 5;
                  goto LABEL_122;
                case 6u:
                  v198 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v71, v72, v198);
                  v118 = v71;
                  v119 = v73;
                  v120 = 6;
LABEL_122:
                  swift_storeEnumTagMultiPayload(v118, v119, v120);
                  break;
                default:
                  memcpy(v71, v72, *(_QWORD *)(v74 + 64));
                  break;
              }
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
            }
            v92 = a1;
            v93 = v8;
            v94 = 3;
            goto LABEL_138;
          case 4u:
            *a1 = *a2;
            v76 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
            v77 = (char *)a1 + v76;
            v78 = (char *)a2 + v76;
            v79 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            v80 = *(_QWORD *)(v79 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
            {
              v81 = sub_10002A750(&qword_100644980);
              memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload(v78, v79))
              {
                case 2u:
                  v121 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v77, v78, v121);
                  swift_storeEnumTagMultiPayload(v77, v79, 2);
                  break;
                case 3u:
                  v199 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v77, v78, v199);
                  swift_storeEnumTagMultiPayload(v77, v79, 3);
                  break;
                case 4u:
                  v200 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v77, v78, v200);
                  swift_storeEnumTagMultiPayload(v77, v79, 4);
                  break;
                case 5u:
                  v201 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v77, v78, v201);
                  swift_storeEnumTagMultiPayload(v77, v79, 5);
                  break;
                case 6u:
                  v202 = type metadata accessor for Date(0);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v77, v78, v202);
                  swift_storeEnumTagMultiPayload(v77, v79, 6);
                  break;
                default:
                  memcpy(v77, v78, *(_QWORD *)(v80 + 64));
                  break;
              }
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
            }
            v92 = a1;
            v93 = v8;
            v94 = 4;
            goto LABEL_138;
          case 7u:
            v82 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
            v83 = *(_QWORD *)(v82 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v83 + 48))(a2, 1, v82))
            {
              v84 = sub_10002A750(&qword_100644600);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
            }
            else
            {
              *a1 = *a2;
              v122 = *(int *)(v82 + 20);
              v123 = (char *)a1 + v122;
              v124 = (char *)a2 + v122;
              v125 = type metadata accessor for REMHashtagLabelSpecifier(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 32))(v123, v124, v125);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v83 + 56))(a1, 0, 1, v82);
            }
            v126 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
            v127 = (char *)a1 + v126;
            v128 = (char *)a2 + v126;
            *(_OWORD *)v127 = *(_OWORD *)v128;
            *((_QWORD *)v127 + 2) = *((_QWORD *)v128 + 2);
            v92 = a1;
            v93 = v8;
            v94 = 7;
            goto LABEL_138;
          case 8u:
            v85 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
            v86 = *(_QWORD *)(v85 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v86 + 48))(a2, 1, v85))
            {
              v87 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
            }
            else
            {
              v129 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v129 - 8) + 32))(a1, a2, v129);
              *((_BYTE *)a1 + *(int *)(v85 + 20)) = *((_BYTE *)a2 + *(int *)(v85 + 20));
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v86 + 56))(a1, 0, 1, v85);
            }
            v130 = type metadata accessor for TTRTemplatePublicLinkData(0);
            *(_QWORD *)((char *)a1 + *(int *)(v130 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v130 + 20));
            v92 = a1;
            v93 = v8;
            v94 = 8;
            goto LABEL_138;
          case 9u:
            *(_BYTE *)a1 = *(_BYTE *)a2;
            v88 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
            v89 = (char *)a1 + v88;
            v90 = (char *)a2 + v88;
            v91 = type metadata accessor for AnyTip(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v89, v90, v91);
            v92 = a1;
            v93 = v8;
            v94 = 9;
LABEL_138:
            swift_storeEnumTagMultiPayload(v92, v93, v94);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(v9 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      v204 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v6, v204);
    v205 = *(int *)(a3 + 20);
    v206 = (_QWORD *)((char *)a1 + v205);
    v207 = (_QWORD *)((char *)a2 + v205);
    sub_10001F544((uint64_t)a1 + v205, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    switch(swift_getEnumCaseMultiPayload(v207, v8))
    {
      case 0u:
        v208 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v207, v208))
        {
          case 2u:
            v209 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v209 - 8) + 32))(v206, v207, v209);
            v210 = v206;
            v211 = v208;
            v212 = 2;
            goto LABEL_173;
          case 3u:
            v270 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v270 - 8) + 32))(v206, v207, v270);
            v210 = v206;
            v211 = v208;
            v212 = 3;
            goto LABEL_173;
          case 4u:
            v271 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v271 - 8) + 32))(v206, v207, v271);
            v210 = v206;
            v211 = v208;
            v212 = 4;
            goto LABEL_173;
          case 5u:
            v272 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v272 - 8) + 32))(v206, v207, v272);
            v210 = v206;
            v211 = v208;
            v212 = 5;
            goto LABEL_173;
          case 6u:
            v273 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v273 - 8) + 32))(v206, v207, v273);
            v210 = v206;
            v211 = v208;
            v212 = 6;
LABEL_173:
            swift_storeEnumTagMultiPayload(v210, v211, v212);
            break;
          default:
            memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v208 - 8) + 64));
            break;
        }
        v274 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v275 = v274[5];
        v276 = (_OWORD *)((char *)v206 + v275);
        v277 = (_OWORD *)((char *)v207 + v275);
        v278 = v277[3];
        v276[2] = v277[2];
        v276[3] = v278;
        v279 = v277[1];
        *v276 = *v277;
        v276[1] = v279;
        *(_OWORD *)((char *)v276 + 106) = *(_OWORD *)((char *)v277 + 106);
        v280 = v277[6];
        v281 = v277[4];
        v276[5] = v277[5];
        v276[6] = v280;
        v276[4] = v281;
        *((_BYTE *)v206 + v274[6]) = *((_BYTE *)v207 + v274[6]);
        *((_BYTE *)v206 + v274[7]) = *((_BYTE *)v207 + v274[7]);
        *((_BYTE *)v206 + v274[8]) = *((_BYTE *)v207 + v274[8]);
        *((_BYTE *)v206 + v274[9]) = *((_BYTE *)v207 + v274[9]);
        *((_BYTE *)v206 + v274[10]) = *((_BYTE *)v207 + v274[10]);
        *(_QWORD *)((char *)v206 + v274[11]) = *(_QWORD *)((char *)v207 + v274[11]);
        v246 = v206;
        v247 = v8;
        v248 = 0;
        goto LABEL_206;
      case 1u:
        v213 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v207, v213))
        {
          case 2u:
            v214 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v214 - 8) + 32))(v206, v207, v214);
            v215 = v206;
            v216 = v213;
            v217 = 2;
            goto LABEL_180;
          case 3u:
            v282 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v282 - 8) + 32))(v206, v207, v282);
            v215 = v206;
            v216 = v213;
            v217 = 3;
            goto LABEL_180;
          case 4u:
            v283 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v283 - 8) + 32))(v206, v207, v283);
            v215 = v206;
            v216 = v213;
            v217 = 4;
            goto LABEL_180;
          case 5u:
            v284 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v284 - 8) + 32))(v206, v207, v284);
            v215 = v206;
            v216 = v213;
            v217 = 5;
            goto LABEL_180;
          case 6u:
            v285 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v285 - 8) + 32))(v206, v207, v285);
            v215 = v206;
            v216 = v213;
            v217 = 6;
LABEL_180:
            swift_storeEnumTagMultiPayload(v215, v216, v217);
            break;
          default:
            memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v213 - 8) + 64));
            break;
        }
        v286 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v287 = v286[5];
        v288 = (_OWORD *)((char *)v206 + v287);
        v289 = (_OWORD *)((char *)v207 + v287);
        v290 = v289[3];
        v288[2] = v289[2];
        v288[3] = v290;
        v291 = v289[1];
        *v288 = *v289;
        v288[1] = v291;
        *(_OWORD *)((char *)v288 + 106) = *(_OWORD *)((char *)v289 + 106);
        v292 = v289[6];
        v293 = v289[4];
        v288[5] = v289[5];
        v288[6] = v292;
        v288[4] = v293;
        *((_BYTE *)v206 + v286[6]) = *((_BYTE *)v207 + v286[6]);
        *((_BYTE *)v206 + v286[7]) = *((_BYTE *)v207 + v286[7]);
        *((_BYTE *)v206 + v286[8]) = *((_BYTE *)v207 + v286[8]);
        *((_BYTE *)v206 + v286[9]) = *((_BYTE *)v207 + v286[9]);
        *((_BYTE *)v206 + v286[10]) = *((_BYTE *)v207 + v286[10]);
        *(_QWORD *)((char *)v206 + v286[11]) = *(_QWORD *)((char *)v207 + v286[11]);
        v246 = v206;
        v247 = v8;
        v248 = 1;
        goto LABEL_206;
      case 2u:
        *v206 = *v207;
        v218 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v219 = (char *)v206 + v218;
        v220 = (char *)v207 + v218;
        v221 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v222 = *(_QWORD *)(v221 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v222 + 48))(v220, 1, v221))
        {
          v223 = sub_10002A750(&qword_100644980);
          memcpy(v219, v220, *(_QWORD *)(*(_QWORD *)(v223 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v220, v221))
          {
            case 2u:
              v249 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v249 - 8) + 32))(v219, v220, v249);
              v250 = v219;
              v251 = v221;
              v252 = 2;
              goto LABEL_187;
            case 3u:
              v294 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v294 - 8) + 32))(v219, v220, v294);
              v250 = v219;
              v251 = v221;
              v252 = 3;
              goto LABEL_187;
            case 4u:
              v295 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v295 - 8) + 32))(v219, v220, v295);
              v250 = v219;
              v251 = v221;
              v252 = 4;
              goto LABEL_187;
            case 5u:
              v296 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v296 - 8) + 32))(v219, v220, v296);
              v250 = v219;
              v251 = v221;
              v252 = 5;
              goto LABEL_187;
            case 6u:
              v297 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v297 - 8) + 32))(v219, v220, v297);
              v250 = v219;
              v251 = v221;
              v252 = 6;
LABEL_187:
              swift_storeEnumTagMultiPayload(v250, v251, v252);
              break;
            default:
              memcpy(v219, v220, *(_QWORD *)(v222 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v222 + 56))(v219, 0, 1, v221);
        }
        v246 = v206;
        v247 = v8;
        v248 = 2;
        goto LABEL_206;
      case 3u:
        *v206 = *v207;
        v224 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v225 = (char *)v206 + v224;
        v226 = (char *)v207 + v224;
        v227 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v228 = *(_QWORD *)(v227 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v228 + 48))(v226, 1, v227))
        {
          v229 = sub_10002A750(&qword_100644980);
          memcpy(v225, v226, *(_QWORD *)(*(_QWORD *)(v229 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v226, v227))
          {
            case 2u:
              v253 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v253 - 8) + 32))(v225, v226, v253);
              v254 = v225;
              v255 = v227;
              v256 = 2;
              goto LABEL_195;
            case 3u:
              v298 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v298 - 8) + 32))(v225, v226, v298);
              v254 = v225;
              v255 = v227;
              v256 = 3;
              goto LABEL_195;
            case 4u:
              v299 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v299 - 8) + 32))(v225, v226, v299);
              v254 = v225;
              v255 = v227;
              v256 = 4;
              goto LABEL_195;
            case 5u:
              v300 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v300 - 8) + 32))(v225, v226, v300);
              v254 = v225;
              v255 = v227;
              v256 = 5;
              goto LABEL_195;
            case 6u:
              v301 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v301 - 8) + 32))(v225, v226, v301);
              v254 = v225;
              v255 = v227;
              v256 = 6;
LABEL_195:
              swift_storeEnumTagMultiPayload(v254, v255, v256);
              break;
            default:
              memcpy(v225, v226, *(_QWORD *)(v228 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v228 + 56))(v225, 0, 1, v227);
        }
        v246 = v206;
        v247 = v8;
        v248 = 3;
        goto LABEL_206;
      case 4u:
        *v206 = *v207;
        v230 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v231 = (char *)v206 + v230;
        v232 = (char *)v207 + v230;
        v233 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v234 = *(_QWORD *)(v233 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v234 + 48))(v232, 1, v233))
        {
          v235 = sub_10002A750(&qword_100644980);
          memcpy(v231, v232, *(_QWORD *)(*(_QWORD *)(v235 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v232, v233))
          {
            case 2u:
              v257 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v257 - 8) + 32))(v231, v232, v257);
              v258 = v231;
              v259 = v233;
              v260 = 2;
              goto LABEL_203;
            case 3u:
              v302 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v302 - 8) + 32))(v231, v232, v302);
              v258 = v231;
              v259 = v233;
              v260 = 3;
              goto LABEL_203;
            case 4u:
              v303 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v303 - 8) + 32))(v231, v232, v303);
              v258 = v231;
              v259 = v233;
              v260 = 4;
              goto LABEL_203;
            case 5u:
              v304 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v304 - 8) + 32))(v231, v232, v304);
              v258 = v231;
              v259 = v233;
              v260 = 5;
              goto LABEL_203;
            case 6u:
              v305 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v305 - 8) + 32))(v231, v232, v305);
              v258 = v231;
              v259 = v233;
              v260 = 6;
LABEL_203:
              swift_storeEnumTagMultiPayload(v258, v259, v260);
              break;
            default:
              memcpy(v231, v232, *(_QWORD *)(v234 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v234 + 56))(v231, 0, 1, v233);
        }
        v246 = v206;
        v247 = v8;
        v248 = 4;
        goto LABEL_206;
      case 7u:
        v236 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v237 = *(_QWORD *)(v236 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v237 + 48))(v207, 1, v236))
        {
          v238 = sub_10002A750(&qword_100644600);
          memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v238 - 8) + 64));
        }
        else
        {
          *v206 = *v207;
          v261 = *(int *)(v236 + 20);
          v262 = (char *)v206 + v261;
          v263 = (char *)v207 + v261;
          v264 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v264 - 8) + 32))(v262, v263, v264);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v237 + 56))(v206, 0, 1, v236);
        }
        v265 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v266 = (char *)v206 + v265;
        v267 = (char *)v207 + v265;
        *(_OWORD *)v266 = *(_OWORD *)v267;
        *((_QWORD *)v266 + 2) = *((_QWORD *)v267 + 2);
        v246 = v206;
        v247 = v8;
        v248 = 7;
        goto LABEL_206;
      case 8u:
        v239 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v240 = *(_QWORD *)(v239 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v240 + 48))(v207, 1, v239))
        {
          v241 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v241 - 8) + 64));
        }
        else
        {
          v268 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v268 - 8) + 32))(v206, v207, v268);
          *((_BYTE *)v206 + *(int *)(v239 + 20)) = *((_BYTE *)v207 + *(int *)(v239 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v240 + 56))(v206, 0, 1, v239);
        }
        v269 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)v206 + *(int *)(v269 + 20)) = *(_QWORD *)((char *)v207 + *(int *)(v269 + 20));
        v246 = v206;
        v247 = v8;
        v248 = 8;
        goto LABEL_206;
      case 9u:
        *(_BYTE *)v206 = *(_BYTE *)v207;
        v242 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v243 = (char *)v206 + v242;
        v244 = (char *)v207 + v242;
        v245 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v245 - 8) + 32))(v243, v244, v245);
        v246 = v206;
        v247 = v8;
        v248 = 9;
LABEL_206:
        swift_storeEnumTagMultiPayload(v246, v247, v248);
        break;
      default:
        memcpy(v206, v207, *(_QWORD *)(v9 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1003C3F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003C3F2C);
}

uint64_t sub_1003C3F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_10002A750(&qword_10064B6B0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1003C3FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003C3FB0);
}

uint64_t sub_1003C3FB0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_10002A750(&qword_10064B6B0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1003C4030(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  sub_1003B5E34(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for TTRRemindersListViewModel.Item(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

char *sub_1003C40B4(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void **v31;
  void **v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(void **, uint64_t, uint64_t);
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void **v40;
  void **v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(void **, uint64_t, uint64_t);
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void **v49;
  void **v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int (*v53)(void **, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  void **v76;
  void **v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(void **, uint64_t, uint64_t);
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  void **v85;
  void **v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int (*v89)(void **, uint64_t, uint64_t);
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  void **v94;
  void **v95;
  uint64_t v96;
  uint64_t v97;
  unsigned int (*v98)(void **, uint64_t, uint64_t);
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  id v124;
  void **v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  id v129;
  void **v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  id v134;
  void **v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  void (*v143)(char *, char *, uint64_t, __n128);
  __n128 v144;
  uint64_t v145;
  char *v146;
  _QWORD *v147;
  uint64_t v148;
  void *v149;
  id v150;
  void *v151;
  id v152;
  void **v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  id v157;
  void **v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  id v162;
  void **v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  void (*v171)(char *, char *, uint64_t, __n128);
  __n128 v172;
  uint64_t v173;
  char *v174;
  _QWORD *v175;
  uint64_t v176;
  void *v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  char *v190;
  char *v191;
  int *v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  void *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  int v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  void *v214;
  id v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  char *v222;
  char *v223;
  char *v224;
  int *v225;
  uint64_t v226;
  char *v227;
  char *v228;
  uint64_t v229;
  void *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  int v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  void *v246;
  id v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  char *v254;
  char *v255;
  char *v256;
  int *v257;
  uint64_t v258;
  char *v259;
  char *v260;
  uint64_t v261;
  void *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  int v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  __int128 v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  void *v279;
  id v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  char *v286;
  char *v287;
  char *v288;
  char *v289;
  int *v290;
  uint64_t v291;
  char *v292;
  char *v293;
  uint64_t v294;
  void *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  int v300;
  __int128 v301;
  __int128 v302;
  __int128 v303;
  __int128 v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  void *v311;
  id v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  void *v318;
  id v319;
  void *v320;
  id v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  void *v327;
  id v328;
  void *v329;
  id v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  void *v336;
  id v337;
  void *v338;
  id v339;
  char *v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  void *v348;
  id v349;
  void *v350;
  id v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  void *v357;
  id v358;
  void *v359;
  id v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  void *v366;
  id v367;
  void *v368;
  id v369;
  uint64_t v371;
  void *v372;
  unsigned __int8 v373;
  void *v374;
  uint64_t v375;
  void *v376;
  uint64_t v377;
  void *v378;
  char *v379;
  char *v380;
  unsigned __int8 v381;
  char v382;
  uint64_t v383;
  char v384;
  unsigned __int8 v385;
  char v386;
  unsigned __int8 v387;
  char v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v16[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v6 = a3;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v9 = swift_getEnumCaseMultiPayload(a2, v8);
    if (EnumCaseMultiPayload == 1)
    {
      switch(v9)
      {
        case 0:
          v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v389 = v8;
          switch(swift_getEnumCaseMultiPayload(a2, v10))
          {
            case 1u:
              v11 = *a2;
              *(_QWORD *)a1 = *a2;
              v12 = v11;
              v13 = a1;
              v14 = v10;
              v15 = 1;
              goto LABEL_76;
            case 2u:
              v183 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(a1, a2, v183);
              v13 = a1;
              v14 = v10;
              v15 = 2;
              goto LABEL_76;
            case 3u:
              v184 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(a1, a2, v184);
              v13 = a1;
              v14 = v10;
              v15 = 3;
              goto LABEL_76;
            case 4u:
              v185 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(a1, a2, v185);
              v13 = a1;
              v14 = v10;
              v15 = 4;
              goto LABEL_76;
            case 5u:
              v186 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(a1, a2, v186);
              v13 = a1;
              v14 = v10;
              v15 = 5;
              goto LABEL_76;
            case 6u:
              v187 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(a1, a2, v187);
              v13 = a1;
              v14 = v10;
              v15 = 6;
              goto LABEL_76;
            case 8u:
              v188 = *a2;
              *(_QWORD *)a1 = *a2;
              v189 = v188;
              v13 = a1;
              v14 = v10;
              v15 = 8;
              goto LABEL_76;
            case 9u:
              v190 = *a2;
              *(_QWORD *)a1 = *a2;
              v191 = v190;
              v13 = a1;
              v14 = v10;
              v15 = 9;
LABEL_76:
              swift_storeEnumTagMultiPayload(v13, v14, v15);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
              break;
          }
          v192 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v193 = v192[5];
          v194 = &a1[v193];
          v195 = (char *)a2 + v193;
          v196 = *(uint64_t *)((char *)a2 + v193 + 8);
          if (v196)
          {
            v395 = v6;
            *(_QWORD *)v194 = *(_QWORD *)v195;
            *((_QWORD *)v194 + 1) = v196;
            v197 = (void *)*((_QWORD *)v195 + 2);
            v198 = *((_QWORD *)v195 + 3);
            v199 = *((_QWORD *)v195 + 4);
            v200 = *((_QWORD *)v195 + 5);
            v201 = *((_QWORD *)v195 + 6);
            v371 = *((_QWORD *)v195 + 7);
            v381 = v195[64];
            swift_bridgeObjectRetain(v196);
            sub_10003E1F0(v197, v198, v199, v200, v201, v371, v381);
            *((_QWORD *)v194 + 2) = v197;
            *((_QWORD *)v194 + 3) = v198;
            *((_QWORD *)v194 + 4) = v199;
            *((_QWORD *)v194 + 5) = v200;
            *((_QWORD *)v194 + 6) = v201;
            *((_QWORD *)v194 + 7) = v371;
            v194[64] = v381;
            *(_DWORD *)(v194 + 65) = *(_DWORD *)(v195 + 65);
            v202 = v195[120];
            if (v202 == 255)
            {
              v203 = *(_OWORD *)(v195 + 88);
              *(_OWORD *)(v194 + 72) = *(_OWORD *)(v195 + 72);
              *(_OWORD *)(v194 + 88) = v203;
              *(_OWORD *)(v194 + 104) = *(_OWORD *)(v195 + 104);
              v194[120] = v195[120];
            }
            else
            {
              v382 = v202 & 1;
              v208 = *((_QWORD *)v195 + 10);
              v372 = (void *)*((_QWORD *)v195 + 9);
              v209 = *((_QWORD *)v195 + 11);
              v210 = *((_QWORD *)v195 + 12);
              v211 = *((_QWORD *)v195 + 13);
              v212 = *((_QWORD *)v195 + 14);
              sub_10002B764(v372, v208, v209, v210, v211, v212, v202 & 1);
              *((_QWORD *)v194 + 9) = v372;
              *((_QWORD *)v194 + 10) = v208;
              *((_QWORD *)v194 + 11) = v209;
              *((_QWORD *)v194 + 12) = v210;
              *((_QWORD *)v194 + 13) = v211;
              *((_QWORD *)v194 + 14) = v212;
              v194[120] = v382;
            }
            v207 = v389;
            v6 = v395;
            v194[121] = v195[121];
          }
          else
          {
            v204 = *((_OWORD *)v195 + 5);
            *((_OWORD *)v194 + 4) = *((_OWORD *)v195 + 4);
            *((_OWORD *)v194 + 5) = v204;
            *((_OWORD *)v194 + 6) = *((_OWORD *)v195 + 6);
            *(_OWORD *)(v194 + 106) = *(_OWORD *)(v195 + 106);
            v205 = *((_OWORD *)v195 + 1);
            *(_OWORD *)v194 = *(_OWORD *)v195;
            *((_OWORD *)v194 + 1) = v205;
            v206 = *((_OWORD *)v195 + 3);
            *((_OWORD *)v194 + 2) = *((_OWORD *)v195 + 2);
            *((_OWORD *)v194 + 3) = v206;
            v207 = v8;
          }
          a1[v192[6]] = *((_BYTE *)a2 + v192[6]);
          a1[v192[7]] = *((_BYTE *)a2 + v192[7]);
          a1[v192[8]] = *((_BYTE *)a2 + v192[8]);
          a1[v192[9]] = *((_BYTE *)a2 + v192[9]);
          a1[v192[10]] = *((_BYTE *)a2 + v192[10]);
          v213 = v192[11];
          v214 = *(char **)((char *)a2 + v213);
          *(_QWORD *)&a1[v213] = v214;
          v215 = v214;
          v58 = a1;
          v59 = v207;
          v60 = 0;
          goto LABEL_165;
        case 1:
          v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v390 = v8;
          switch(swift_getEnumCaseMultiPayload(a2, v23))
          {
            case 1u:
              v24 = *a2;
              *(_QWORD *)a1 = *a2;
              v25 = v24;
              v26 = a1;
              v27 = v23;
              v28 = 1;
              goto LABEL_108;
            case 2u:
              v248 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v248 - 8) + 16))(a1, a2, v248);
              v26 = a1;
              v27 = v23;
              v28 = 2;
              goto LABEL_108;
            case 3u:
              v249 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v249 - 8) + 16))(a1, a2, v249);
              v26 = a1;
              v27 = v23;
              v28 = 3;
              goto LABEL_108;
            case 4u:
              v250 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v250 - 8) + 16))(a1, a2, v250);
              v26 = a1;
              v27 = v23;
              v28 = 4;
              goto LABEL_108;
            case 5u:
              v251 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v251 - 8) + 16))(a1, a2, v251);
              v26 = a1;
              v27 = v23;
              v28 = 5;
              goto LABEL_108;
            case 6u:
              v252 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v252 - 8) + 16))(a1, a2, v252);
              v26 = a1;
              v27 = v23;
              v28 = 6;
              goto LABEL_108;
            case 8u:
              v253 = *a2;
              *(_QWORD *)a1 = *a2;
              v254 = v253;
              v26 = a1;
              v27 = v23;
              v28 = 8;
              goto LABEL_108;
            case 9u:
              v255 = *a2;
              *(_QWORD *)a1 = *a2;
              v256 = v255;
              v26 = a1;
              v27 = v23;
              v28 = 9;
LABEL_108:
              swift_storeEnumTagMultiPayload(v26, v27, v28);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
              break;
          }
          v257 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v258 = v257[5];
          v259 = &a1[v258];
          v260 = (char *)a2 + v258;
          v261 = *(uint64_t *)((char *)a2 + v258 + 8);
          if (v261)
          {
            v396 = v6;
            *(_QWORD *)v259 = *(_QWORD *)v260;
            *((_QWORD *)v259 + 1) = v261;
            v262 = (void *)*((_QWORD *)v260 + 2);
            v263 = *((_QWORD *)v260 + 3);
            v264 = *((_QWORD *)v260 + 4);
            v265 = *((_QWORD *)v260 + 5);
            v266 = *((_QWORD *)v260 + 6);
            v375 = *((_QWORD *)v260 + 7);
            v385 = v260[64];
            swift_bridgeObjectRetain(v261);
            sub_10003E1F0(v262, v263, v264, v265, v266, v375, v385);
            *((_QWORD *)v259 + 2) = v262;
            *((_QWORD *)v259 + 3) = v263;
            *((_QWORD *)v259 + 4) = v264;
            *((_QWORD *)v259 + 5) = v265;
            *((_QWORD *)v259 + 6) = v266;
            *((_QWORD *)v259 + 7) = v375;
            v259[64] = v385;
            *(_DWORD *)(v259 + 65) = *(_DWORD *)(v260 + 65);
            v267 = v260[120];
            if (v267 == 255)
            {
              v268 = *(_OWORD *)(v260 + 88);
              *(_OWORD *)(v259 + 72) = *(_OWORD *)(v260 + 72);
              *(_OWORD *)(v259 + 88) = v268;
              *(_OWORD *)(v259 + 104) = *(_OWORD *)(v260 + 104);
              v259[120] = v260[120];
            }
            else
            {
              v386 = v267 & 1;
              v273 = *((_QWORD *)v260 + 10);
              v376 = (void *)*((_QWORD *)v260 + 9);
              v274 = *((_QWORD *)v260 + 11);
              v275 = *((_QWORD *)v260 + 12);
              v276 = *((_QWORD *)v260 + 13);
              v277 = *((_QWORD *)v260 + 14);
              sub_10002B764(v376, v273, v274, v275, v276, v277, v267 & 1);
              *((_QWORD *)v259 + 9) = v376;
              *((_QWORD *)v259 + 10) = v273;
              *((_QWORD *)v259 + 11) = v274;
              *((_QWORD *)v259 + 12) = v275;
              *((_QWORD *)v259 + 13) = v276;
              *((_QWORD *)v259 + 14) = v277;
              v259[120] = v386;
            }
            v272 = v390;
            v6 = v396;
            v259[121] = v260[121];
          }
          else
          {
            v269 = *((_OWORD *)v260 + 5);
            *((_OWORD *)v259 + 4) = *((_OWORD *)v260 + 4);
            *((_OWORD *)v259 + 5) = v269;
            *((_OWORD *)v259 + 6) = *((_OWORD *)v260 + 6);
            *(_OWORD *)(v259 + 106) = *(_OWORD *)(v260 + 106);
            v270 = *((_OWORD *)v260 + 1);
            *(_OWORD *)v259 = *(_OWORD *)v260;
            *((_OWORD *)v259 + 1) = v270;
            v271 = *((_OWORD *)v260 + 3);
            *((_OWORD *)v259 + 2) = *((_OWORD *)v260 + 2);
            *((_OWORD *)v259 + 3) = v271;
            v272 = v8;
          }
          a1[v257[6]] = *((_BYTE *)a2 + v257[6]);
          a1[v257[7]] = *((_BYTE *)a2 + v257[7]);
          a1[v257[8]] = *((_BYTE *)a2 + v257[8]);
          a1[v257[9]] = *((_BYTE *)a2 + v257[9]);
          a1[v257[10]] = *((_BYTE *)a2 + v257[10]);
          v278 = v257[11];
          v279 = *(char **)((char *)a2 + v278);
          *(_QWORD *)&a1[v278] = v279;
          v280 = v279;
          v58 = a1;
          v59 = v272;
          v60 = 1;
          goto LABEL_165;
        case 2:
          v29 = *a2;
          *(_QWORD *)a1 = *a2;
          v30 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v31 = (void **)&a1[v30];
          v32 = (void **)((char *)a2 + v30);
          v33 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v34 = *(_QWORD *)(v33 - 8);
          v35 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v34 + 48);
          v36 = v29;
          if (v35(v32, 1, v33))
          {
            v37 = sub_10002A750(&qword_100644980);
            memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v32, v33))
            {
              case 1u:
                v123 = *v32;
                *v31 = *v32;
                v124 = v123;
                v125 = v31;
                v126 = v33;
                v127 = 1;
                goto LABEL_140;
              case 2u:
                v313 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v313 - 8) + 16))(v31, v32, v313);
                v125 = v31;
                v126 = v33;
                v127 = 2;
                goto LABEL_140;
              case 3u:
                v314 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v314 - 8) + 16))(v31, v32, v314);
                v125 = v31;
                v126 = v33;
                v127 = 3;
                goto LABEL_140;
              case 4u:
                v315 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v315 - 8) + 16))(v31, v32, v315);
                v125 = v31;
                v126 = v33;
                v127 = 4;
                goto LABEL_140;
              case 5u:
                v316 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v316 - 8) + 16))(v31, v32, v316);
                v125 = v31;
                v126 = v33;
                v127 = 5;
                goto LABEL_140;
              case 6u:
                v317 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v317 - 8) + 16))(v31, v32, v317);
                v125 = v31;
                v126 = v33;
                v127 = 6;
                goto LABEL_140;
              case 8u:
                v318 = *v32;
                *v31 = *v32;
                v319 = v318;
                v125 = v31;
                v126 = v33;
                v127 = 8;
                goto LABEL_140;
              case 9u:
                v320 = *v32;
                *v31 = *v32;
                v321 = v320;
                v125 = v31;
                v126 = v33;
                v127 = 9;
LABEL_140:
                swift_storeEnumTagMultiPayload(v125, v126, v127);
                break;
              default:
                memcpy(v31, v32, *(_QWORD *)(v34 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
          }
          v58 = a1;
          v59 = v8;
          v60 = 2;
          goto LABEL_165;
        case 3:
          v38 = *a2;
          *(_QWORD *)a1 = *a2;
          v39 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v40 = (void **)&a1[v39];
          v41 = (void **)((char *)a2 + v39);
          v42 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v43 = *(_QWORD *)(v42 - 8);
          v44 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v43 + 48);
          v45 = v38;
          if (v44(v41, 1, v42))
          {
            v46 = sub_10002A750(&qword_100644980);
            memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v41, v42))
            {
              case 1u:
                v128 = *v41;
                *v40 = *v41;
                v129 = v128;
                v130 = v40;
                v131 = v42;
                v132 = 1;
                goto LABEL_151;
              case 2u:
                v322 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v322 - 8) + 16))(v40, v41, v322);
                v130 = v40;
                v131 = v42;
                v132 = 2;
                goto LABEL_151;
              case 3u:
                v323 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v323 - 8) + 16))(v40, v41, v323);
                v130 = v40;
                v131 = v42;
                v132 = 3;
                goto LABEL_151;
              case 4u:
                v324 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v324 - 8) + 16))(v40, v41, v324);
                v130 = v40;
                v131 = v42;
                v132 = 4;
                goto LABEL_151;
              case 5u:
                v325 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v325 - 8) + 16))(v40, v41, v325);
                v130 = v40;
                v131 = v42;
                v132 = 5;
                goto LABEL_151;
              case 6u:
                v326 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v326 - 8) + 16))(v40, v41, v326);
                v130 = v40;
                v131 = v42;
                v132 = 6;
                goto LABEL_151;
              case 8u:
                v327 = *v41;
                *v40 = *v41;
                v328 = v327;
                v130 = v40;
                v131 = v42;
                v132 = 8;
                goto LABEL_151;
              case 9u:
                v329 = *v41;
                *v40 = *v41;
                v330 = v329;
                v130 = v40;
                v131 = v42;
                v132 = 9;
LABEL_151:
                swift_storeEnumTagMultiPayload(v130, v131, v132);
                break;
              default:
                memcpy(v40, v41, *(_QWORD *)(v43 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
          }
          v58 = a1;
          v59 = v8;
          v60 = 3;
          goto LABEL_165;
        case 4:
          v47 = *a2;
          *(_QWORD *)a1 = *a2;
          v48 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v49 = (void **)&a1[v48];
          v50 = (void **)((char *)a2 + v48);
          v51 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v52 = *(_QWORD *)(v51 - 8);
          v53 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v52 + 48);
          v54 = v47;
          if (v53(v50, 1, v51))
          {
            v55 = sub_10002A750(&qword_100644980);
            memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v50, v51))
            {
              case 1u:
                v133 = *v50;
                *v49 = *v50;
                v134 = v133;
                v135 = v49;
                v136 = v51;
                v137 = 1;
                goto LABEL_162;
              case 2u:
                v331 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v331 - 8) + 16))(v49, v50, v331);
                v135 = v49;
                v136 = v51;
                v137 = 2;
                goto LABEL_162;
              case 3u:
                v332 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v332 - 8) + 16))(v49, v50, v332);
                v135 = v49;
                v136 = v51;
                v137 = 3;
                goto LABEL_162;
              case 4u:
                v333 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v333 - 8) + 16))(v49, v50, v333);
                v135 = v49;
                v136 = v51;
                v137 = 4;
                goto LABEL_162;
              case 5u:
                v334 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v334 - 8) + 16))(v49, v50, v334);
                v135 = v49;
                v136 = v51;
                v137 = 5;
                goto LABEL_162;
              case 6u:
                v335 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v335 - 8) + 16))(v49, v50, v335);
                v135 = v49;
                v136 = v51;
                v137 = 6;
                goto LABEL_162;
              case 8u:
                v336 = *v50;
                *v49 = *v50;
                v337 = v336;
                v135 = v49;
                v136 = v51;
                v137 = 8;
                goto LABEL_162;
              case 9u:
                v338 = *v50;
                *v49 = *v50;
                v339 = v338;
                v135 = v49;
                v136 = v51;
                v137 = 9;
LABEL_162:
                swift_storeEnumTagMultiPayload(v135, v136, v137);
                break;
              default:
                memcpy(v49, v50, *(_QWORD *)(v52 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
          }
          v58 = a1;
          v59 = v8;
          v60 = 4;
          goto LABEL_165;
        case 5:
          *(_QWORD *)a1 = *a2;
          a1[8] = *((_BYTE *)a2 + 8);
          *(_WORD *)(a1 + 9) = *(_WORD *)((char *)a2 + 9);
          v56 = a2[2];
          *((_QWORD *)a1 + 2) = v56;
          v57 = v56;
          v58 = a1;
          v59 = v8;
          v60 = 5;
          goto LABEL_165;
        case 6:
          v113 = *a2;
          *(_QWORD *)a1 = *a2;
          v114 = v113;
          v58 = a1;
          v59 = v8;
          v60 = 6;
          goto LABEL_165;
        case 7:
          v61 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v62 = *(_QWORD *)(v61 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v62 + 48))(a2, 1, v61))
          {
            v63 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
          }
          else
          {
            v138 = *a2;
            *(_QWORD *)a1 = *a2;
            v139 = *(int *)(v61 + 20);
            v379 = &a1[v139];
            v140 = (char *)a2 + v139;
            v141 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v142 = v8;
            v143 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v141 - 8) + 16);
            v144 = swift_bridgeObjectRetain(v138);
            v143(v379, v140, v141, v144);
            v8 = v142;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(a1, 0, 1, v61);
          }
          v145 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v146 = &a1[v145];
          v147 = (char **)((char *)a2 + v145);
          v148 = v147[1];
          if (v148)
          {
            *(_QWORD *)v146 = *v147;
            *((_QWORD *)v146 + 1) = v148;
            v149 = (void *)v147[2];
            *((_QWORD *)v146 + 2) = v149;
            swift_bridgeObjectRetain(v148);
            v150 = v149;
          }
          else
          {
            *(_OWORD *)v146 = *(_OWORD *)v147;
            *((_QWORD *)v146 + 2) = v147[2];
          }
          v58 = a1;
          v59 = v8;
          v60 = 7;
          goto LABEL_165;
        case 8:
          v115 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v116 = *(_QWORD *)(v115 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v116 + 48))(a2, 1, v115))
          {
            v117 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
          }
          else
          {
            v179 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(a1, a2, v179);
            a1[*(int *)(v115 + 20)] = *((_BYTE *)a2 + *(int *)(v115 + 20));
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(a1, 0, 1, v115);
          }
          v180 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)&a1[*(int *)(v180 + 20)] = *(char **)((char *)a2 + *(int *)(v180 + 20));
          v58 = a1;
          v59 = v8;
          v60 = 8;
          goto LABEL_165;
        case 9:
          *a1 = *(_BYTE *)a2;
          v64 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v65 = &a1[v64];
          v66 = (char *)a2 + v64;
          v67 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
          v58 = a1;
          v59 = v8;
          v60 = 9;
LABEL_165:
          swift_storeEnumTagMultiPayload(v58, v59, v60);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
          break;
      }
      v340 = a1;
      v341 = v6;
      v342 = 1;
    }
    else
    {
      switch(v9)
      {
        case 0:
          v17 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v393 = v6;
          switch(swift_getEnumCaseMultiPayload(a2, v17))
          {
            case 1u:
              v18 = *a2;
              *(_QWORD *)a1 = *a2;
              v19 = v18;
              v20 = a1;
              v21 = v17;
              v22 = 1;
              goto LABEL_92;
            case 2u:
              v216 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v216 - 8) + 16))(a1, a2, v216);
              v20 = a1;
              v21 = v17;
              v22 = 2;
              goto LABEL_92;
            case 3u:
              v217 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v217 - 8) + 16))(a1, a2, v217);
              v20 = a1;
              v21 = v17;
              v22 = 3;
              goto LABEL_92;
            case 4u:
              v218 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v218 - 8) + 16))(a1, a2, v218);
              v20 = a1;
              v21 = v17;
              v22 = 4;
              goto LABEL_92;
            case 5u:
              v219 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v219 - 8) + 16))(a1, a2, v219);
              v20 = a1;
              v21 = v17;
              v22 = 5;
              goto LABEL_92;
            case 6u:
              v220 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v220 - 8) + 16))(a1, a2, v220);
              v20 = a1;
              v21 = v17;
              v22 = 6;
              goto LABEL_92;
            case 8u:
              v221 = *a2;
              *(_QWORD *)a1 = *a2;
              v222 = v221;
              v20 = a1;
              v21 = v17;
              v22 = 8;
              goto LABEL_92;
            case 9u:
              v223 = *a2;
              *(_QWORD *)a1 = *a2;
              v224 = v223;
              v20 = a1;
              v21 = v17;
              v22 = 9;
LABEL_92:
              swift_storeEnumTagMultiPayload(v20, v21, v22);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
              break;
          }
          v225 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v226 = v225[5];
          v227 = &a1[v226];
          v228 = (char *)a2 + v226;
          v229 = *(uint64_t *)((char *)a2 + v226 + 8);
          if (v229)
          {
            v391 = v8;
            *(_QWORD *)v227 = *(_QWORD *)v228;
            *((_QWORD *)v227 + 1) = v229;
            v230 = (void *)*((_QWORD *)v228 + 2);
            v231 = *((_QWORD *)v228 + 3);
            v232 = *((_QWORD *)v228 + 4);
            v233 = *((_QWORD *)v228 + 5);
            v234 = *((_QWORD *)v228 + 6);
            v383 = *((_QWORD *)v228 + 7);
            v373 = v228[64];
            swift_bridgeObjectRetain(v229);
            sub_10003E1F0(v230, v231, v232, v233, v234, v383, v373);
            *((_QWORD *)v227 + 2) = v230;
            *((_QWORD *)v227 + 3) = v231;
            *((_QWORD *)v227 + 4) = v232;
            *((_QWORD *)v227 + 5) = v233;
            *((_QWORD *)v227 + 6) = v234;
            *((_QWORD *)v227 + 7) = v383;
            v227[64] = v373;
            *(_DWORD *)(v227 + 65) = *(_DWORD *)(v228 + 65);
            v235 = v228[120];
            if (v235 == 255)
            {
              v236 = *(_OWORD *)(v228 + 88);
              *(_OWORD *)(v227 + 72) = *(_OWORD *)(v228 + 72);
              *(_OWORD *)(v227 + 88) = v236;
              *(_OWORD *)(v227 + 104) = *(_OWORD *)(v228 + 104);
              v227[120] = v228[120];
            }
            else
            {
              v384 = v235 & 1;
              v240 = *((_QWORD *)v228 + 10);
              v374 = (void *)*((_QWORD *)v228 + 9);
              v241 = *((_QWORD *)v228 + 11);
              v242 = *((_QWORD *)v228 + 12);
              v243 = *((_QWORD *)v228 + 13);
              v244 = *((_QWORD *)v228 + 14);
              sub_10002B764(v374, v240, v241, v242, v243, v244, v235 & 1);
              *((_QWORD *)v227 + 9) = v374;
              *((_QWORD *)v227 + 10) = v240;
              *((_QWORD *)v227 + 11) = v241;
              *((_QWORD *)v227 + 12) = v242;
              *((_QWORD *)v227 + 13) = v243;
              *((_QWORD *)v227 + 14) = v244;
              v227[120] = v384;
            }
            v8 = v391;
            v6 = v393;
            v227[121] = v228[121];
          }
          else
          {
            v237 = *((_OWORD *)v228 + 5);
            *((_OWORD *)v227 + 4) = *((_OWORD *)v228 + 4);
            *((_OWORD *)v227 + 5) = v237;
            *((_OWORD *)v227 + 6) = *((_OWORD *)v228 + 6);
            *(_OWORD *)(v227 + 106) = *(_OWORD *)(v228 + 106);
            v238 = *((_OWORD *)v228 + 1);
            *(_OWORD *)v227 = *(_OWORD *)v228;
            *((_OWORD *)v227 + 1) = v238;
            v239 = *((_OWORD *)v228 + 3);
            *((_OWORD *)v227 + 2) = *((_OWORD *)v228 + 2);
            *((_OWORD *)v227 + 3) = v239;
          }
          a1[v225[6]] = *((_BYTE *)a2 + v225[6]);
          a1[v225[7]] = *((_BYTE *)a2 + v225[7]);
          a1[v225[8]] = *((_BYTE *)a2 + v225[8]);
          a1[v225[9]] = *((_BYTE *)a2 + v225[9]);
          a1[v225[10]] = *((_BYTE *)a2 + v225[10]);
          v245 = v225[11];
          v246 = *(char **)((char *)a2 + v245);
          *(_QWORD *)&a1[v245] = v246;
          v247 = v246;
          v103 = a1;
          v104 = v8;
          v105 = 0;
          goto LABEL_200;
        case 1:
          v68 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v394 = v6;
          switch(swift_getEnumCaseMultiPayload(a2, v68))
          {
            case 1u:
              v69 = *a2;
              *(_QWORD *)a1 = *a2;
              v70 = v69;
              v71 = a1;
              v72 = v68;
              v73 = 1;
              goto LABEL_124;
            case 2u:
              v281 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v281 - 8) + 16))(a1, a2, v281);
              v71 = a1;
              v72 = v68;
              v73 = 2;
              goto LABEL_124;
            case 3u:
              v282 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v282 - 8) + 16))(a1, a2, v282);
              v71 = a1;
              v72 = v68;
              v73 = 3;
              goto LABEL_124;
            case 4u:
              v283 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v283 - 8) + 16))(a1, a2, v283);
              v71 = a1;
              v72 = v68;
              v73 = 4;
              goto LABEL_124;
            case 5u:
              v284 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v284 - 8) + 16))(a1, a2, v284);
              v71 = a1;
              v72 = v68;
              v73 = 5;
              goto LABEL_124;
            case 6u:
              v285 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v285 - 8) + 16))(a1, a2, v285);
              v71 = a1;
              v72 = v68;
              v73 = 6;
              goto LABEL_124;
            case 8u:
              v286 = *a2;
              *(_QWORD *)a1 = *a2;
              v287 = v286;
              v71 = a1;
              v72 = v68;
              v73 = 8;
              goto LABEL_124;
            case 9u:
              v288 = *a2;
              *(_QWORD *)a1 = *a2;
              v289 = v288;
              v71 = a1;
              v72 = v68;
              v73 = 9;
LABEL_124:
              swift_storeEnumTagMultiPayload(v71, v72, v73);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
              break;
          }
          v290 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v291 = v290[5];
          v292 = &a1[v291];
          v293 = (char *)a2 + v291;
          v294 = *(uint64_t *)((char *)a2 + v291 + 8);
          if (v294)
          {
            v392 = v8;
            *(_QWORD *)v292 = *(_QWORD *)v293;
            *((_QWORD *)v292 + 1) = v294;
            v295 = (void *)*((_QWORD *)v293 + 2);
            v296 = *((_QWORD *)v293 + 3);
            v297 = *((_QWORD *)v293 + 4);
            v298 = *((_QWORD *)v293 + 5);
            v299 = *((_QWORD *)v293 + 6);
            v377 = *((_QWORD *)v293 + 7);
            v387 = v293[64];
            swift_bridgeObjectRetain(v294);
            sub_10003E1F0(v295, v296, v297, v298, v299, v377, v387);
            *((_QWORD *)v292 + 2) = v295;
            *((_QWORD *)v292 + 3) = v296;
            *((_QWORD *)v292 + 4) = v297;
            *((_QWORD *)v292 + 5) = v298;
            *((_QWORD *)v292 + 6) = v299;
            *((_QWORD *)v292 + 7) = v377;
            v292[64] = v387;
            *(_DWORD *)(v292 + 65) = *(_DWORD *)(v293 + 65);
            v300 = v293[120];
            if (v300 == 255)
            {
              v301 = *(_OWORD *)(v293 + 88);
              *(_OWORD *)(v292 + 72) = *(_OWORD *)(v293 + 72);
              *(_OWORD *)(v292 + 88) = v301;
              *(_OWORD *)(v292 + 104) = *(_OWORD *)(v293 + 104);
              v292[120] = v293[120];
            }
            else
            {
              v388 = v300 & 1;
              v305 = *((_QWORD *)v293 + 10);
              v378 = (void *)*((_QWORD *)v293 + 9);
              v306 = *((_QWORD *)v293 + 11);
              v307 = *((_QWORD *)v293 + 12);
              v308 = *((_QWORD *)v293 + 13);
              v309 = *((_QWORD *)v293 + 14);
              sub_10002B764(v378, v305, v306, v307, v308, v309, v300 & 1);
              *((_QWORD *)v292 + 9) = v378;
              *((_QWORD *)v292 + 10) = v305;
              *((_QWORD *)v292 + 11) = v306;
              *((_QWORD *)v292 + 12) = v307;
              *((_QWORD *)v292 + 13) = v308;
              *((_QWORD *)v292 + 14) = v309;
              v292[120] = v388;
            }
            v8 = v392;
            v6 = v394;
            v292[121] = v293[121];
          }
          else
          {
            v302 = *((_OWORD *)v293 + 5);
            *((_OWORD *)v292 + 4) = *((_OWORD *)v293 + 4);
            *((_OWORD *)v292 + 5) = v302;
            *((_OWORD *)v292 + 6) = *((_OWORD *)v293 + 6);
            *(_OWORD *)(v292 + 106) = *(_OWORD *)(v293 + 106);
            v303 = *((_OWORD *)v293 + 1);
            *(_OWORD *)v292 = *(_OWORD *)v293;
            *((_OWORD *)v292 + 1) = v303;
            v304 = *((_OWORD *)v293 + 3);
            *((_OWORD *)v292 + 2) = *((_OWORD *)v293 + 2);
            *((_OWORD *)v292 + 3) = v304;
          }
          a1[v290[6]] = *((_BYTE *)a2 + v290[6]);
          a1[v290[7]] = *((_BYTE *)a2 + v290[7]);
          a1[v290[8]] = *((_BYTE *)a2 + v290[8]);
          a1[v290[9]] = *((_BYTE *)a2 + v290[9]);
          a1[v290[10]] = *((_BYTE *)a2 + v290[10]);
          v310 = v290[11];
          v311 = *(char **)((char *)a2 + v310);
          *(_QWORD *)&a1[v310] = v311;
          v312 = v311;
          v103 = a1;
          v104 = v8;
          v105 = 1;
          goto LABEL_200;
        case 2:
          v74 = *a2;
          *(_QWORD *)a1 = *a2;
          v75 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v76 = (void **)&a1[v75];
          v77 = (void **)((char *)a2 + v75);
          v78 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v79 = *(_QWORD *)(v78 - 8);
          v80 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v79 + 48);
          v81 = v74;
          if (v80(v77, 1, v78))
          {
            v82 = sub_10002A750(&qword_100644980);
            memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v77, v78))
            {
              case 1u:
                v151 = *v77;
                *v76 = *v77;
                v152 = v151;
                v153 = v76;
                v154 = v78;
                v155 = 1;
                goto LABEL_175;
              case 2u:
                v343 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v343 - 8) + 16))(v76, v77, v343);
                v153 = v76;
                v154 = v78;
                v155 = 2;
                goto LABEL_175;
              case 3u:
                v344 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v344 - 8) + 16))(v76, v77, v344);
                v153 = v76;
                v154 = v78;
                v155 = 3;
                goto LABEL_175;
              case 4u:
                v345 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v345 - 8) + 16))(v76, v77, v345);
                v153 = v76;
                v154 = v78;
                v155 = 4;
                goto LABEL_175;
              case 5u:
                v346 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v346 - 8) + 16))(v76, v77, v346);
                v153 = v76;
                v154 = v78;
                v155 = 5;
                goto LABEL_175;
              case 6u:
                v347 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v347 - 8) + 16))(v76, v77, v347);
                v153 = v76;
                v154 = v78;
                v155 = 6;
                goto LABEL_175;
              case 8u:
                v348 = *v77;
                *v76 = *v77;
                v349 = v348;
                v153 = v76;
                v154 = v78;
                v155 = 8;
                goto LABEL_175;
              case 9u:
                v350 = *v77;
                *v76 = *v77;
                v351 = v350;
                v153 = v76;
                v154 = v78;
                v155 = 9;
LABEL_175:
                swift_storeEnumTagMultiPayload(v153, v154, v155);
                break;
              default:
                memcpy(v76, v77, *(_QWORD *)(v79 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
          }
          v103 = a1;
          v104 = v8;
          v105 = 2;
          goto LABEL_200;
        case 3:
          v83 = *a2;
          *(_QWORD *)a1 = *a2;
          v84 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v85 = (void **)&a1[v84];
          v86 = (void **)((char *)a2 + v84);
          v87 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v88 = *(_QWORD *)(v87 - 8);
          v89 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v88 + 48);
          v90 = v83;
          if (v89(v86, 1, v87))
          {
            v91 = sub_10002A750(&qword_100644980);
            memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v86, v87))
            {
              case 1u:
                v156 = *v86;
                *v85 = *v86;
                v157 = v156;
                v158 = v85;
                v159 = v87;
                v160 = 1;
                goto LABEL_186;
              case 2u:
                v352 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v352 - 8) + 16))(v85, v86, v352);
                v158 = v85;
                v159 = v87;
                v160 = 2;
                goto LABEL_186;
              case 3u:
                v353 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v353 - 8) + 16))(v85, v86, v353);
                v158 = v85;
                v159 = v87;
                v160 = 3;
                goto LABEL_186;
              case 4u:
                v354 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v354 - 8) + 16))(v85, v86, v354);
                v158 = v85;
                v159 = v87;
                v160 = 4;
                goto LABEL_186;
              case 5u:
                v355 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v355 - 8) + 16))(v85, v86, v355);
                v158 = v85;
                v159 = v87;
                v160 = 5;
                goto LABEL_186;
              case 6u:
                v356 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v356 - 8) + 16))(v85, v86, v356);
                v158 = v85;
                v159 = v87;
                v160 = 6;
                goto LABEL_186;
              case 8u:
                v357 = *v86;
                *v85 = *v86;
                v358 = v357;
                v158 = v85;
                v159 = v87;
                v160 = 8;
                goto LABEL_186;
              case 9u:
                v359 = *v86;
                *v85 = *v86;
                v360 = v359;
                v158 = v85;
                v159 = v87;
                v160 = 9;
LABEL_186:
                swift_storeEnumTagMultiPayload(v158, v159, v160);
                break;
              default:
                memcpy(v85, v86, *(_QWORD *)(v88 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v88 + 56))(v85, 0, 1, v87);
          }
          v103 = a1;
          v104 = v8;
          v105 = 3;
          goto LABEL_200;
        case 4:
          v92 = *a2;
          *(_QWORD *)a1 = *a2;
          v93 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v94 = (void **)&a1[v93];
          v95 = (void **)((char *)a2 + v93);
          v96 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v97 = *(_QWORD *)(v96 - 8);
          v98 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v97 + 48);
          v99 = v92;
          if (v98(v95, 1, v96))
          {
            v100 = sub_10002A750(&qword_100644980);
            memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v95, v96))
            {
              case 1u:
                v161 = *v95;
                *v94 = *v95;
                v162 = v161;
                v163 = v94;
                v164 = v96;
                v165 = 1;
                goto LABEL_197;
              case 2u:
                v361 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v361 - 8) + 16))(v94, v95, v361);
                v163 = v94;
                v164 = v96;
                v165 = 2;
                goto LABEL_197;
              case 3u:
                v362 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v362 - 8) + 16))(v94, v95, v362);
                v163 = v94;
                v164 = v96;
                v165 = 3;
                goto LABEL_197;
              case 4u:
                v363 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v363 - 8) + 16))(v94, v95, v363);
                v163 = v94;
                v164 = v96;
                v165 = 4;
                goto LABEL_197;
              case 5u:
                v364 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v364 - 8) + 16))(v94, v95, v364);
                v163 = v94;
                v164 = v96;
                v165 = 5;
                goto LABEL_197;
              case 6u:
                v365 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v365 - 8) + 16))(v94, v95, v365);
                v163 = v94;
                v164 = v96;
                v165 = 6;
                goto LABEL_197;
              case 8u:
                v366 = *v95;
                *v94 = *v95;
                v367 = v366;
                v163 = v94;
                v164 = v96;
                v165 = 8;
                goto LABEL_197;
              case 9u:
                v368 = *v95;
                *v94 = *v95;
                v369 = v368;
                v163 = v94;
                v164 = v96;
                v165 = 9;
LABEL_197:
                swift_storeEnumTagMultiPayload(v163, v164, v165);
                break;
              default:
                memcpy(v94, v95, *(_QWORD *)(v97 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
          }
          v103 = a1;
          v104 = v8;
          v105 = 4;
          goto LABEL_200;
        case 5:
          *(_QWORD *)a1 = *a2;
          a1[8] = *((_BYTE *)a2 + 8);
          *(_WORD *)(a1 + 9) = *(_WORD *)((char *)a2 + 9);
          v101 = a2[2];
          *((_QWORD *)a1 + 2) = v101;
          v102 = v101;
          v103 = a1;
          v104 = v8;
          v105 = 5;
          goto LABEL_200;
        case 6:
          v118 = *a2;
          *(_QWORD *)a1 = *a2;
          v119 = v118;
          v103 = a1;
          v104 = v8;
          v105 = 6;
          goto LABEL_200;
        case 7:
          v106 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v107 = *(_QWORD *)(v106 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v107 + 48))(a2, 1, v106))
          {
            v108 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
          }
          else
          {
            v166 = *a2;
            *(_QWORD *)a1 = *a2;
            v167 = *(int *)(v106 + 20);
            v380 = &a1[v167];
            v168 = (char *)a2 + v167;
            v169 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v170 = v8;
            v171 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v169 - 8) + 16);
            v172 = swift_bridgeObjectRetain(v166);
            v171(v380, v168, v169, v172);
            v8 = v170;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(a1, 0, 1, v106);
          }
          v173 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v174 = &a1[v173];
          v175 = (char **)((char *)a2 + v173);
          v176 = v175[1];
          if (v176)
          {
            *(_QWORD *)v174 = *v175;
            *((_QWORD *)v174 + 1) = v176;
            v177 = (void *)v175[2];
            *((_QWORD *)v174 + 2) = v177;
            swift_bridgeObjectRetain(v176);
            v178 = v177;
          }
          else
          {
            *(_OWORD *)v174 = *(_OWORD *)v175;
            *((_QWORD *)v174 + 2) = v175[2];
          }
          v103 = a1;
          v104 = v8;
          v105 = 7;
          goto LABEL_200;
        case 8:
          v120 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v121 = *(_QWORD *)(v120 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v121 + 48))(a2, 1, v120))
          {
            v122 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
          }
          else
          {
            v181 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(a1, a2, v181);
            a1[*(int *)(v120 + 20)] = *((_BYTE *)a2 + *(int *)(v120 + 20));
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(a1, 0, 1, v120);
          }
          v182 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)&a1[*(int *)(v182 + 20)] = *(char **)((char *)a2 + *(int *)(v182 + 20));
          v103 = a1;
          v104 = v8;
          v105 = 8;
          goto LABEL_200;
        case 9:
          *a1 = *(_BYTE *)a2;
          v109 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v110 = &a1[v109];
          v111 = (char *)a2 + v109;
          v112 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 16))(v110, v111, v112);
          v103 = a1;
          v104 = v8;
          v105 = 9;
LABEL_200:
          swift_storeEnumTagMultiPayload(v103, v104, v105);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
          break;
      }
      v340 = a1;
      v341 = v6;
      v342 = 0;
    }
    swift_storeEnumTagMultiPayload(v340, v341, v342);
  }
  return a1;
}

void sub_1003C6028(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = a1;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = swift_getEnumCaseMultiPayload(v2, v4);
  if (EnumCaseMultiPayload == 1)
  {
    switch(v5)
    {
      case 0:
        v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v2, v6))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_23;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_22;
          default:
            goto LABEL_24;
        }
        goto LABEL_24;
      case 1:
        v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v2, v15))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_23;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_22;
          default:
            goto LABEL_24;
        }
        goto LABEL_24;
      case 2:

        v2 = (_QWORD *)((char *)v2 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v2, 1, v16))
        {
          switch(swift_getEnumCaseMultiPayload(v2, v16))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_37;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_35;
            default:
              return;
          }
        }
        break;
      case 3:

        v2 = (_QWORD *)((char *)v2 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v17 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v2, 1, v17))
        {
          switch(swift_getEnumCaseMultiPayload(v2, v17))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_37;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_35;
            default:
              return;
          }
        }
        break;
      case 4:

        v2 = (_QWORD *)((char *)v2 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v2, 1, v18))
        {
          switch(swift_getEnumCaseMultiPayload(v2, v18))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_37;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_35;
            default:
              return;
          }
        }
        break;
      case 5:
        goto LABEL_10;
      case 6:
        goto LABEL_37;
      case 7:
        goto LABEL_6;
      case 8:
        goto LABEL_11;
      case 9:
        goto LABEL_13;
      default:
        return;
    }
  }
  else
  {
    switch(v5)
    {
      case 0:
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v2, v7))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_23;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_22;
          default:
            goto LABEL_24;
        }
        goto LABEL_24;
      case 1:
        v19 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v2, v19))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_23:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_22:
            v20 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v2, v20);
            break;
          default:
            break;
        }
LABEL_24:
        v21 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v22 = (char *)v2 + *(int *)(v21 + 20);
        v23 = *((_QWORD *)v22 + 1);
        if (v23)
        {
          swift_bridgeObjectRelease(v23);
          sub_10003E2EC(*((void **)v22 + 2), *((_QWORD *)v22 + 3), *((_QWORD *)v22 + 4), *((_QWORD *)v22 + 5), *((_QWORD *)v22 + 6), *((_QWORD *)v22 + 7), v22[64]);
          v24 = v22[120];
          if (v24 != 255)
            sub_10002B328(*((void **)v22 + 9), *((_QWORD *)v22 + 10), *((_QWORD *)v22 + 11), *((_QWORD *)v22 + 12), *((_QWORD *)v22 + 13), *((_QWORD *)v22 + 14), v24 & 1);
        }
        v12 = *(id *)((char *)v2 + *(int *)(v21 + 44));
        goto LABEL_38;
      case 2:

        v2 = (_QWORD *)((char *)v2 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v25 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v2, 1, v25))
        {
          switch(swift_getEnumCaseMultiPayload(v2, v25))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_37;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_35;
            default:
              return;
          }
        }
        return;
      case 3:

        v2 = (_QWORD *)((char *)v2 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v2, 1, v26))
        {
          switch(swift_getEnumCaseMultiPayload(v2, v26))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_37;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_35;
            default:
              return;
          }
        }
        return;
      case 4:

        v2 = (_QWORD *)((char *)v2 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v27 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v2, 1, v27))
        {
          switch(swift_getEnumCaseMultiPayload(v2, v27))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_37;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_35;
            default:
              return;
          }
        }
        return;
      case 5:
        goto LABEL_10;
      case 6:
LABEL_37:
        v12 = (id)*v2;
        goto LABEL_38;
      case 7:
LABEL_6:
        v8 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v2, 1, v8))
        {
          swift_bridgeObjectRelease(*v2);
          v9 = (char *)v2 + *(int *)(v8 + 20);
          v10 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
        }
        v2 = (_QWORD *)((char *)v2
                      + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
        v11 = v2[1];
        if (!v11)
          return;
        swift_bridgeObjectRelease(v11);
LABEL_10:
        v12 = (id)v2[2];
LABEL_38:

        break;
      case 8:
LABEL_11:
        v13 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v2, 1, v13))
          return;
LABEL_35:
        v14 = type metadata accessor for Date(0);
LABEL_36:
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v2, v14);
        break;
      case 9:
LABEL_13:
        v2 = (_QWORD *)((char *)v2 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
        v14 = type metadata accessor for AnyTip(0);
        goto LABEL_36;
      default:
        return;
    }
  }
}

void **sub_1003C65B4(void **a1, void **a2, uint64_t a3)
{
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v7;
  int v8;
  uint64_t v9;
  void *v10;
  id v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void **v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void **v29;
  void **v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(void **, uint64_t, uint64_t);
  id v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void **v38;
  void **v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(void **, uint64_t, uint64_t);
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void **v47;
  void **v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(void **, uint64_t, uint64_t);
  id v52;
  uint64_t v53;
  void *v54;
  id v55;
  void **v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  id v68;
  void **v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  void **v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int (*v78)(void **, uint64_t, uint64_t);
  id v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  void **v83;
  void **v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int (*v87)(void **, uint64_t, uint64_t);
  id v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  void **v92;
  void **v93;
  uint64_t v94;
  uint64_t v95;
  unsigned int (*v96)(void **, uint64_t, uint64_t);
  id v97;
  uint64_t v98;
  void *v99;
  id v100;
  void **v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  void *v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  id v122;
  void **v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  id v127;
  void **v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  id v132;
  void **v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(char *, char *, uint64_t, __n128);
  __n128 v142;
  uint64_t v143;
  _QWORD *v144;
  _QWORD *v145;
  uint64_t v146;
  void *v147;
  id v148;
  void *v149;
  id v150;
  void **v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  id v155;
  void **v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  id v160;
  void **v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  void (*v169)(char *, char *, uint64_t, __n128);
  __n128 v170;
  uint64_t v171;
  _QWORD *v172;
  _QWORD *v173;
  uint64_t v174;
  void *v175;
  id v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void *v186;
  id v187;
  void *v188;
  id v189;
  int *v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  void *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  int v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  uint64_t v206;
  uint64_t v207;
  void *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  void *v214;
  id v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  void *v221;
  id v222;
  void *v223;
  id v224;
  int *v225;
  uint64_t v226;
  char *v227;
  char *v228;
  uint64_t v229;
  void *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  int v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  __int128 v240;
  uint64_t v241;
  void *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  void *v248;
  id v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  void *v255;
  id v256;
  void *v257;
  id v258;
  int *v259;
  uint64_t v260;
  char *v261;
  char *v262;
  uint64_t v263;
  void *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  int v270;
  __int128 v271;
  __int128 v272;
  __int128 v273;
  __int128 v274;
  uint64_t v275;
  uint64_t v276;
  void *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  void *v283;
  id v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  void *v291;
  id v292;
  void *v293;
  id v294;
  int *v295;
  uint64_t v296;
  char *v297;
  char *v298;
  uint64_t v299;
  void *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  int v306;
  __int128 v307;
  __int128 v308;
  __int128 v309;
  __int128 v310;
  uint64_t v311;
  void *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  void *v318;
  id v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  void *v325;
  id v326;
  void *v327;
  id v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  void *v333;
  id v334;
  void *v335;
  id v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  void *v342;
  id v343;
  void *v344;
  id v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  void *v351;
  id v352;
  void *v353;
  id v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  void *v359;
  id v360;
  void *v361;
  id v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  void *v368;
  id v369;
  void *v370;
  id v371;
  uint64_t v372;
  uint64_t v373;
  unsigned __int8 v375;
  char v376;
  unsigned __int8 v377;
  char v378;
  unsigned __int8 v379;
  char v380;
  unsigned __int8 v381;
  char v382;
  char *v383;
  char *v384;
  void **v385;
  void **v386;
  void **v387;
  void **v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;

  v3 = a3;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v8 = swift_getEnumCaseMultiPayload(a2, v7);
  if (EnumCaseMultiPayload == 1)
  {
    switch(v8)
    {
      case 0:
        v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v389 = v7;
        switch(swift_getEnumCaseMultiPayload(a2, v9))
        {
          case 1u:
            v10 = *a2;
            *a1 = *a2;
            v11 = v10;
            v12 = a1;
            v13 = v9;
            v14 = 1;
            goto LABEL_74;
          case 2u:
            v181 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(a1, a2, v181);
            v12 = a1;
            v13 = v9;
            v14 = 2;
            goto LABEL_74;
          case 3u:
            v182 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(a1, a2, v182);
            v12 = a1;
            v13 = v9;
            v14 = 3;
            goto LABEL_74;
          case 4u:
            v183 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(a1, a2, v183);
            v12 = a1;
            v13 = v9;
            v14 = 4;
            goto LABEL_74;
          case 5u:
            v184 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(a1, a2, v184);
            v12 = a1;
            v13 = v9;
            v14 = 5;
            goto LABEL_74;
          case 6u:
            v185 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(a1, a2, v185);
            v12 = a1;
            v13 = v9;
            v14 = 6;
            goto LABEL_74;
          case 8u:
            v186 = *a2;
            *a1 = *a2;
            v187 = v186;
            v12 = a1;
            v13 = v9;
            v14 = 8;
            goto LABEL_74;
          case 9u:
            v188 = *a2;
            *a1 = *a2;
            v189 = v188;
            v12 = a1;
            v13 = v9;
            v14 = 9;
LABEL_74:
            swift_storeEnumTagMultiPayload(v12, v13, v14);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
            break;
        }
        v190 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v191 = v190[5];
        v192 = (char *)a1 + v191;
        v193 = (char *)a2 + v191;
        v194 = *(uint64_t *)((char *)a2 + v191 + 8);
        if (v194)
        {
          v385 = a1;
          v395 = v3;
          *(_QWORD *)v192 = *(_QWORD *)v193;
          *((_QWORD *)v192 + 1) = v194;
          v195 = (void *)*((_QWORD *)v193 + 2);
          v196 = *((_QWORD *)v193 + 3);
          v197 = *((_QWORD *)v193 + 4);
          v198 = *((_QWORD *)v193 + 5);
          v200 = *((_QWORD *)v193 + 6);
          v199 = *((_QWORD *)v193 + 7);
          v375 = v193[64];
          swift_bridgeObjectRetain(v194);
          sub_10003E1F0(v195, v196, v197, v198, v200, v199, v375);
          *((_QWORD *)v192 + 2) = v195;
          *((_QWORD *)v192 + 3) = v196;
          *((_QWORD *)v192 + 4) = v197;
          *((_QWORD *)v192 + 5) = v198;
          *((_QWORD *)v192 + 6) = v200;
          *((_QWORD *)v192 + 7) = v199;
          v192[64] = v375;
          *(_DWORD *)(v192 + 65) = *(_DWORD *)(v193 + 65);
          v201 = v193[120];
          if (v201 == 255)
          {
            v202 = *(_OWORD *)(v193 + 88);
            *(_OWORD *)(v192 + 72) = *(_OWORD *)(v193 + 72);
            *(_OWORD *)(v192 + 88) = v202;
            *(_OWORD *)(v192 + 104) = *(_OWORD *)(v193 + 104);
            v192[120] = v193[120];
          }
          else
          {
            v376 = v201 & 1;
            v208 = (void *)*((_QWORD *)v193 + 9);
            v207 = *((_QWORD *)v193 + 10);
            v209 = *((_QWORD *)v193 + 11);
            v210 = *((_QWORD *)v193 + 12);
            v211 = *((_QWORD *)v193 + 13);
            v212 = *((_QWORD *)v193 + 14);
            sub_10002B764(v208, v207, v209, v210, v211, v212, v201 & 1);
            *((_QWORD *)v192 + 9) = v208;
            *((_QWORD *)v192 + 10) = v207;
            *((_QWORD *)v192 + 11) = v209;
            *((_QWORD *)v192 + 12) = v210;
            *((_QWORD *)v192 + 13) = v211;
            *((_QWORD *)v192 + 14) = v212;
            v192[120] = v376;
          }
          v206 = v389;
          v3 = v395;
          v192[121] = v193[121];
          a1 = v385;
        }
        else
        {
          v203 = *((_OWORD *)v193 + 5);
          *((_OWORD *)v192 + 4) = *((_OWORD *)v193 + 4);
          *((_OWORD *)v192 + 5) = v203;
          *((_OWORD *)v192 + 6) = *((_OWORD *)v193 + 6);
          *(_OWORD *)(v192 + 106) = *(_OWORD *)(v193 + 106);
          v204 = *((_OWORD *)v193 + 1);
          *(_OWORD *)v192 = *(_OWORD *)v193;
          *((_OWORD *)v192 + 1) = v204;
          v205 = *((_OWORD *)v193 + 3);
          *((_OWORD *)v192 + 2) = *((_OWORD *)v193 + 2);
          *((_OWORD *)v192 + 3) = v205;
          v206 = v7;
        }
        *((_BYTE *)a1 + v190[6]) = *((_BYTE *)a2 + v190[6]);
        *((_BYTE *)a1 + v190[7]) = *((_BYTE *)a2 + v190[7]);
        *((_BYTE *)a1 + v190[8]) = *((_BYTE *)a2 + v190[8]);
        *((_BYTE *)a1 + v190[9]) = *((_BYTE *)a2 + v190[9]);
        *((_BYTE *)a1 + v190[10]) = *((_BYTE *)a2 + v190[10]);
        v213 = v190[11];
        v214 = *(void **)((char *)a2 + v213);
        *(void **)((char *)a1 + v213) = v214;
        v215 = v214;
        v56 = a1;
        v57 = v206;
        v58 = 0;
        goto LABEL_192;
      case 1:
        v21 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v390 = v7;
        switch(swift_getEnumCaseMultiPayload(a2, v21))
        {
          case 1u:
            v22 = *a2;
            *a1 = *a2;
            v23 = v22;
            v24 = a1;
            v25 = v21;
            v26 = 1;
            goto LABEL_106;
          case 2u:
            v250 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v250 - 8) + 16))(a1, a2, v250);
            v24 = a1;
            v25 = v21;
            v26 = 2;
            goto LABEL_106;
          case 3u:
            v251 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v251 - 8) + 16))(a1, a2, v251);
            v24 = a1;
            v25 = v21;
            v26 = 3;
            goto LABEL_106;
          case 4u:
            v252 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v252 - 8) + 16))(a1, a2, v252);
            v24 = a1;
            v25 = v21;
            v26 = 4;
            goto LABEL_106;
          case 5u:
            v253 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v253 - 8) + 16))(a1, a2, v253);
            v24 = a1;
            v25 = v21;
            v26 = 5;
            goto LABEL_106;
          case 6u:
            v254 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v254 - 8) + 16))(a1, a2, v254);
            v24 = a1;
            v25 = v21;
            v26 = 6;
            goto LABEL_106;
          case 8u:
            v255 = *a2;
            *a1 = *a2;
            v256 = v255;
            v24 = a1;
            v25 = v21;
            v26 = 8;
            goto LABEL_106;
          case 9u:
            v257 = *a2;
            *a1 = *a2;
            v258 = v257;
            v24 = a1;
            v25 = v21;
            v26 = 9;
LABEL_106:
            swift_storeEnumTagMultiPayload(v24, v25, v26);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
            break;
        }
        v259 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v260 = v259[5];
        v261 = (char *)a1 + v260;
        v262 = (char *)a2 + v260;
        v263 = *(uint64_t *)((char *)a2 + v260 + 8);
        if (v263)
        {
          v387 = a1;
          v396 = v3;
          *(_QWORD *)v261 = *(_QWORD *)v262;
          *((_QWORD *)v261 + 1) = v263;
          v264 = (void *)*((_QWORD *)v262 + 2);
          v265 = *((_QWORD *)v262 + 3);
          v266 = *((_QWORD *)v262 + 4);
          v267 = *((_QWORD *)v262 + 5);
          v269 = *((_QWORD *)v262 + 6);
          v268 = *((_QWORD *)v262 + 7);
          v379 = v262[64];
          swift_bridgeObjectRetain(v263);
          sub_10003E1F0(v264, v265, v266, v267, v269, v268, v379);
          *((_QWORD *)v261 + 2) = v264;
          *((_QWORD *)v261 + 3) = v265;
          *((_QWORD *)v261 + 4) = v266;
          *((_QWORD *)v261 + 5) = v267;
          *((_QWORD *)v261 + 6) = v269;
          *((_QWORD *)v261 + 7) = v268;
          v261[64] = v379;
          *(_DWORD *)(v261 + 65) = *(_DWORD *)(v262 + 65);
          v270 = v262[120];
          if (v270 == 255)
          {
            v271 = *(_OWORD *)(v262 + 88);
            *(_OWORD *)(v261 + 72) = *(_OWORD *)(v262 + 72);
            *(_OWORD *)(v261 + 88) = v271;
            *(_OWORD *)(v261 + 104) = *(_OWORD *)(v262 + 104);
            v261[120] = v262[120];
          }
          else
          {
            v380 = v270 & 1;
            v277 = (void *)*((_QWORD *)v262 + 9);
            v276 = *((_QWORD *)v262 + 10);
            v278 = *((_QWORD *)v262 + 11);
            v279 = *((_QWORD *)v262 + 12);
            v280 = *((_QWORD *)v262 + 13);
            v281 = *((_QWORD *)v262 + 14);
            sub_10002B764(v277, v276, v278, v279, v280, v281, v270 & 1);
            *((_QWORD *)v261 + 9) = v277;
            *((_QWORD *)v261 + 10) = v276;
            *((_QWORD *)v261 + 11) = v278;
            *((_QWORD *)v261 + 12) = v279;
            *((_QWORD *)v261 + 13) = v280;
            *((_QWORD *)v261 + 14) = v281;
            v261[120] = v380;
          }
          v275 = v390;
          v3 = v396;
          v261[121] = v262[121];
          a1 = v387;
        }
        else
        {
          v272 = *((_OWORD *)v262 + 5);
          *((_OWORD *)v261 + 4) = *((_OWORD *)v262 + 4);
          *((_OWORD *)v261 + 5) = v272;
          *((_OWORD *)v261 + 6) = *((_OWORD *)v262 + 6);
          *(_OWORD *)(v261 + 106) = *(_OWORD *)(v262 + 106);
          v273 = *((_OWORD *)v262 + 1);
          *(_OWORD *)v261 = *(_OWORD *)v262;
          *((_OWORD *)v261 + 1) = v273;
          v274 = *((_OWORD *)v262 + 3);
          *((_OWORD *)v261 + 2) = *((_OWORD *)v262 + 2);
          *((_OWORD *)v261 + 3) = v274;
          v275 = v7;
        }
        *((_BYTE *)a1 + v259[6]) = *((_BYTE *)a2 + v259[6]);
        *((_BYTE *)a1 + v259[7]) = *((_BYTE *)a2 + v259[7]);
        *((_BYTE *)a1 + v259[8]) = *((_BYTE *)a2 + v259[8]);
        *((_BYTE *)a1 + v259[9]) = *((_BYTE *)a2 + v259[9]);
        *((_BYTE *)a1 + v259[10]) = *((_BYTE *)a2 + v259[10]);
        v282 = v259[11];
        v283 = *(void **)((char *)a2 + v282);
        *(void **)((char *)a1 + v282) = v283;
        v284 = v283;
        v285 = 1;
        swift_storeEnumTagMultiPayload(a1, v275, 1);
        goto LABEL_200;
      case 2:
        v27 = *a2;
        *a1 = *a2;
        v28 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v29 = (void **)((char *)a1 + v28);
        v30 = (void **)((char *)a2 + v28);
        v31 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v32 = *(_QWORD *)(v31 - 8);
        v33 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v32 + 48);
        v34 = v27;
        if (v33(v30, 1, v31))
        {
          v35 = sub_10002A750(&qword_100644980);
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v30, v31))
          {
            case 1u:
              v121 = *v30;
              *v29 = *v30;
              v122 = v121;
              v123 = v29;
              v124 = v31;
              v125 = 1;
              goto LABEL_138;
            case 2u:
              v320 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v320 - 8) + 16))(v29, v30, v320);
              v123 = v29;
              v124 = v31;
              v125 = 2;
              goto LABEL_138;
            case 3u:
              v321 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v321 - 8) + 16))(v29, v30, v321);
              v123 = v29;
              v124 = v31;
              v125 = 3;
              goto LABEL_138;
            case 4u:
              v322 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v322 - 8) + 16))(v29, v30, v322);
              v123 = v29;
              v124 = v31;
              v125 = 4;
              goto LABEL_138;
            case 5u:
              v323 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v323 - 8) + 16))(v29, v30, v323);
              v123 = v29;
              v124 = v31;
              v125 = 5;
              goto LABEL_138;
            case 6u:
              v324 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v324 - 8) + 16))(v29, v30, v324);
              v123 = v29;
              v124 = v31;
              v125 = 6;
              goto LABEL_138;
            case 8u:
              v325 = *v30;
              *v29 = *v30;
              v326 = v325;
              v123 = v29;
              v124 = v31;
              v125 = 8;
              goto LABEL_138;
            case 9u:
              v327 = *v30;
              *v29 = *v30;
              v328 = v327;
              v123 = v29;
              v124 = v31;
              v125 = 9;
LABEL_138:
              swift_storeEnumTagMultiPayload(v123, v124, v125);
              break;
            default:
              memcpy(v29, v30, *(_QWORD *)(v32 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
        }
        v56 = a1;
        v57 = v7;
        v58 = 2;
        goto LABEL_192;
      case 3:
        v36 = *a2;
        *a1 = *a2;
        v37 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v38 = (void **)((char *)a1 + v37);
        v39 = (void **)((char *)a2 + v37);
        v40 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v41 = *(_QWORD *)(v40 - 8);
        v42 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v41 + 48);
        v43 = v36;
        if (v42(v39, 1, v40))
        {
          v44 = sub_10002A750(&qword_100644980);
          memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v39, v40))
          {
            case 1u:
              v126 = *v39;
              *v38 = *v39;
              v127 = v126;
              v128 = v38;
              v129 = v40;
              v130 = 1;
              goto LABEL_189;
            case 2u:
              v329 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v329 - 8) + 16))(v38, v39, v329);
              v128 = v38;
              v129 = v40;
              v130 = 2;
              goto LABEL_189;
            case 3u:
              v330 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v330 - 8) + 16))(v38, v39, v330);
              v128 = v38;
              v129 = v40;
              v130 = 3;
              goto LABEL_189;
            case 4u:
              v331 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v331 - 8) + 16))(v38, v39, v331);
              v128 = v38;
              v129 = v40;
              v130 = 4;
              goto LABEL_189;
            case 5u:
              v372 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v372 - 8) + 16))(v38, v39, v372);
              v128 = v38;
              v129 = v40;
              v130 = 5;
              goto LABEL_189;
            case 6u:
              v332 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v332 - 8) + 16))(v38, v39, v332);
              v128 = v38;
              v129 = v40;
              v130 = 6;
              goto LABEL_189;
            case 8u:
              v333 = *v39;
              *v38 = *v39;
              v334 = v333;
              v128 = v38;
              v129 = v40;
              v130 = 8;
              goto LABEL_189;
            case 9u:
              v335 = *v39;
              *v38 = *v39;
              v336 = v335;
              v128 = v38;
              v129 = v40;
              v130 = 9;
LABEL_189:
              swift_storeEnumTagMultiPayload(v128, v129, v130);
              break;
            default:
              memcpy(v38, v39, *(_QWORD *)(v41 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
        }
        v56 = a1;
        v57 = v7;
        v58 = 3;
        goto LABEL_192;
      case 4:
        v45 = *a2;
        *a1 = *a2;
        v46 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v47 = (void **)((char *)a1 + v46);
        v48 = (void **)((char *)a2 + v46);
        v49 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v50 = *(_QWORD *)(v49 - 8);
        v51 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v50 + 48);
        v52 = v45;
        if (v51(v48, 1, v49))
        {
          v53 = sub_10002A750(&qword_100644980);
          memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v48, v49))
          {
            case 1u:
              v131 = *v48;
              *v47 = *v48;
              v132 = v131;
              v133 = v47;
              v134 = v49;
              v135 = 1;
              goto LABEL_156;
            case 2u:
              v337 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v337 - 8) + 16))(v47, v48, v337);
              v133 = v47;
              v134 = v49;
              v135 = 2;
              goto LABEL_156;
            case 3u:
              v338 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v338 - 8) + 16))(v47, v48, v338);
              v133 = v47;
              v134 = v49;
              v135 = 3;
              goto LABEL_156;
            case 4u:
              v339 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v339 - 8) + 16))(v47, v48, v339);
              v133 = v47;
              v134 = v49;
              v135 = 4;
              goto LABEL_156;
            case 5u:
              v340 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v340 - 8) + 16))(v47, v48, v340);
              v133 = v47;
              v134 = v49;
              v135 = 5;
              goto LABEL_156;
            case 6u:
              v341 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v341 - 8) + 16))(v47, v48, v341);
              v133 = v47;
              v134 = v49;
              v135 = 6;
              goto LABEL_156;
            case 8u:
              v342 = *v48;
              *v47 = *v48;
              v343 = v342;
              v133 = v47;
              v134 = v49;
              v135 = 8;
              goto LABEL_156;
            case 9u:
              v344 = *v48;
              *v47 = *v48;
              v345 = v344;
              v133 = v47;
              v134 = v49;
              v135 = 9;
LABEL_156:
              swift_storeEnumTagMultiPayload(v133, v134, v135);
              break;
            default:
              memcpy(v47, v48, *(_QWORD *)(v50 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
        }
        v56 = a1;
        v57 = v7;
        v58 = 4;
        goto LABEL_192;
      case 5:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
        v54 = a2[2];
        a1[2] = v54;
        v55 = v54;
        v56 = a1;
        v57 = v7;
        v58 = 5;
        goto LABEL_192;
      case 6:
        v111 = *a2;
        *a1 = *a2;
        v112 = v111;
        v56 = a1;
        v57 = v7;
        v58 = 6;
        goto LABEL_192;
      case 7:
        v59 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v60 = *(_QWORD *)(v59 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v60 + 48))(a2, 1, v59))
        {
          v61 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        }
        else
        {
          v136 = *a2;
          *a1 = *a2;
          v137 = *(int *)(v59 + 20);
          v383 = (char *)a1 + v137;
          v138 = (char *)a2 + v137;
          v139 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v140 = v7;
          v141 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v139 - 8) + 16);
          v142 = swift_bridgeObjectRetain(v136);
          v141(v383, v138, v139, v142);
          v7 = v140;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v60 + 56))(a1, 0, 1, v59);
        }
        v143 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v144 = (void **)((char *)a1 + v143);
        v145 = (void **)((char *)a2 + v143);
        v146 = v145[1];
        if (v146)
        {
          *v144 = *v145;
          v144[1] = v146;
          v147 = (void *)v145[2];
          v144[2] = v147;
          swift_bridgeObjectRetain(v146);
          v148 = v147;
        }
        else
        {
          *(_OWORD *)v144 = *(_OWORD *)v145;
          v144[2] = v145[2];
        }
        v56 = a1;
        v57 = v7;
        v58 = 7;
        goto LABEL_192;
      case 8:
        v113 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v114 = *(_QWORD *)(v113 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v114 + 48))(a2, 1, v113))
        {
          v115 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
        }
        else
        {
          v177 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v177 - 8) + 16))(a1, a2, v177);
          *((_BYTE *)a1 + *(int *)(v113 + 20)) = *((_BYTE *)a2 + *(int *)(v113 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v114 + 56))(a1, 0, 1, v113);
        }
        v178 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)a1 + *(int *)(v178 + 20)) = *(void **)((char *)a2 + *(int *)(v178 + 20));
        v56 = a1;
        v57 = v7;
        v58 = 8;
        goto LABEL_192;
      case 9:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v62 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v63 = (char *)a1 + v62;
        v64 = (char *)a2 + v62;
        v65 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
        v56 = a1;
        v57 = v7;
        v58 = 9;
LABEL_192:
        swift_storeEnumTagMultiPayload(v56, v57, v58);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
    v285 = 1;
  }
  else
  {
    switch(v8)
    {
      case 0:
        v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v393 = v3;
        switch(swift_getEnumCaseMultiPayload(a2, v15))
        {
          case 1u:
            v16 = *a2;
            *a1 = *a2;
            v17 = v16;
            v18 = a1;
            v19 = v15;
            v20 = 1;
            goto LABEL_90;
          case 2u:
            v216 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v216 - 8) + 16))(a1, a2, v216);
            v18 = a1;
            v19 = v15;
            v20 = 2;
            goto LABEL_90;
          case 3u:
            v217 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v217 - 8) + 16))(a1, a2, v217);
            v18 = a1;
            v19 = v15;
            v20 = 3;
            goto LABEL_90;
          case 4u:
            v218 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v218 - 8) + 16))(a1, a2, v218);
            v18 = a1;
            v19 = v15;
            v20 = 4;
            goto LABEL_90;
          case 5u:
            v219 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v219 - 8) + 16))(a1, a2, v219);
            v18 = a1;
            v19 = v15;
            v20 = 5;
            goto LABEL_90;
          case 6u:
            v220 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v220 - 8) + 16))(a1, a2, v220);
            v18 = a1;
            v19 = v15;
            v20 = 6;
            goto LABEL_90;
          case 8u:
            v221 = *a2;
            *a1 = *a2;
            v222 = v221;
            v18 = a1;
            v19 = v15;
            v20 = 8;
            goto LABEL_90;
          case 9u:
            v223 = *a2;
            *a1 = *a2;
            v224 = v223;
            v18 = a1;
            v19 = v15;
            v20 = 9;
LABEL_90:
            swift_storeEnumTagMultiPayload(v18, v19, v20);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
            break;
        }
        v225 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v226 = v225[5];
        v227 = (char *)a1 + v226;
        v228 = (char *)a2 + v226;
        v229 = *(uint64_t *)((char *)a2 + v226 + 8);
        if (v229)
        {
          v386 = a1;
          v391 = v7;
          *(_QWORD *)v227 = *(_QWORD *)v228;
          *((_QWORD *)v227 + 1) = v229;
          v230 = (void *)*((_QWORD *)v228 + 2);
          v231 = *((_QWORD *)v228 + 3);
          v232 = *((_QWORD *)v228 + 4);
          v233 = *((_QWORD *)v228 + 5);
          v234 = *((_QWORD *)v228 + 6);
          v235 = *((_QWORD *)v228 + 7);
          v377 = v228[64];
          swift_bridgeObjectRetain(v229);
          sub_10003E1F0(v230, v231, v232, v233, v234, v235, v377);
          *((_QWORD *)v227 + 2) = v230;
          *((_QWORD *)v227 + 3) = v231;
          *((_QWORD *)v227 + 4) = v232;
          *((_QWORD *)v227 + 5) = v233;
          *((_QWORD *)v227 + 6) = v234;
          *((_QWORD *)v227 + 7) = v235;
          v227[64] = v377;
          *(_DWORD *)(v227 + 65) = *(_DWORD *)(v228 + 65);
          v236 = v228[120];
          if (v236 == 255)
          {
            v237 = *(_OWORD *)(v228 + 88);
            *(_OWORD *)(v227 + 72) = *(_OWORD *)(v228 + 72);
            *(_OWORD *)(v227 + 88) = v237;
            *(_OWORD *)(v227 + 104) = *(_OWORD *)(v228 + 104);
            v227[120] = v228[120];
          }
          else
          {
            v378 = v236 & 1;
            v242 = (void *)*((_QWORD *)v228 + 9);
            v241 = *((_QWORD *)v228 + 10);
            v243 = *((_QWORD *)v228 + 11);
            v244 = *((_QWORD *)v228 + 12);
            v245 = *((_QWORD *)v228 + 13);
            v246 = *((_QWORD *)v228 + 14);
            sub_10002B764(v242, v241, v243, v244, v245, v246, v236 & 1);
            *((_QWORD *)v227 + 9) = v242;
            *((_QWORD *)v227 + 10) = v241;
            *((_QWORD *)v227 + 11) = v243;
            *((_QWORD *)v227 + 12) = v244;
            *((_QWORD *)v227 + 13) = v245;
            *((_QWORD *)v227 + 14) = v246;
            v227[120] = v378;
          }
          v7 = v391;
          v3 = v393;
          v227[121] = v228[121];
          a1 = v386;
        }
        else
        {
          v238 = *((_OWORD *)v228 + 5);
          *((_OWORD *)v227 + 4) = *((_OWORD *)v228 + 4);
          *((_OWORD *)v227 + 5) = v238;
          *((_OWORD *)v227 + 6) = *((_OWORD *)v228 + 6);
          *(_OWORD *)(v227 + 106) = *(_OWORD *)(v228 + 106);
          v239 = *((_OWORD *)v228 + 1);
          *(_OWORD *)v227 = *(_OWORD *)v228;
          *((_OWORD *)v227 + 1) = v239;
          v240 = *((_OWORD *)v228 + 3);
          *((_OWORD *)v227 + 2) = *((_OWORD *)v228 + 2);
          *((_OWORD *)v227 + 3) = v240;
        }
        *((_BYTE *)a1 + v225[6]) = *((_BYTE *)a2 + v225[6]);
        *((_BYTE *)a1 + v225[7]) = *((_BYTE *)a2 + v225[7]);
        *((_BYTE *)a1 + v225[8]) = *((_BYTE *)a2 + v225[8]);
        *((_BYTE *)a1 + v225[9]) = *((_BYTE *)a2 + v225[9]);
        *((_BYTE *)a1 + v225[10]) = *((_BYTE *)a2 + v225[10]);
        v247 = v225[11];
        v248 = *(void **)((char *)a2 + v247);
        *(void **)((char *)a1 + v247) = v248;
        v249 = v248;
        v101 = a1;
        v102 = v7;
        v103 = 0;
        goto LABEL_198;
      case 1:
        v66 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v394 = v3;
        switch(swift_getEnumCaseMultiPayload(a2, v66))
        {
          case 1u:
            v67 = *a2;
            *a1 = *a2;
            v68 = v67;
            v69 = a1;
            v70 = v66;
            v71 = 1;
            goto LABEL_122;
          case 2u:
            v286 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v286 - 8) + 16))(a1, a2, v286);
            v69 = a1;
            v70 = v66;
            v71 = 2;
            goto LABEL_122;
          case 3u:
            v287 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v287 - 8) + 16))(a1, a2, v287);
            v69 = a1;
            v70 = v66;
            v71 = 3;
            goto LABEL_122;
          case 4u:
            v288 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v288 - 8) + 16))(a1, a2, v288);
            v69 = a1;
            v70 = v66;
            v71 = 4;
            goto LABEL_122;
          case 5u:
            v289 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v289 - 8) + 16))(a1, a2, v289);
            v69 = a1;
            v70 = v66;
            v71 = 5;
            goto LABEL_122;
          case 6u:
            v290 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v290 - 8) + 16))(a1, a2, v290);
            v69 = a1;
            v70 = v66;
            v71 = 6;
            goto LABEL_122;
          case 8u:
            v291 = *a2;
            *a1 = *a2;
            v292 = v291;
            v69 = a1;
            v70 = v66;
            v71 = 8;
            goto LABEL_122;
          case 9u:
            v293 = *a2;
            *a1 = *a2;
            v294 = v293;
            v69 = a1;
            v70 = v66;
            v71 = 9;
LABEL_122:
            swift_storeEnumTagMultiPayload(v69, v70, v71);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
            break;
        }
        v295 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v296 = v295[5];
        v297 = (char *)a1 + v296;
        v298 = (char *)a2 + v296;
        v299 = *(uint64_t *)((char *)a2 + v296 + 8);
        if (v299)
        {
          v388 = a1;
          v392 = v7;
          *(_QWORD *)v297 = *(_QWORD *)v298;
          *((_QWORD *)v297 + 1) = v299;
          v300 = (void *)*((_QWORD *)v298 + 2);
          v301 = *((_QWORD *)v298 + 3);
          v302 = *((_QWORD *)v298 + 4);
          v303 = *((_QWORD *)v298 + 5);
          v305 = *((_QWORD *)v298 + 6);
          v304 = *((_QWORD *)v298 + 7);
          v381 = v298[64];
          swift_bridgeObjectRetain(v299);
          sub_10003E1F0(v300, v301, v302, v303, v305, v304, v381);
          *((_QWORD *)v297 + 2) = v300;
          *((_QWORD *)v297 + 3) = v301;
          *((_QWORD *)v297 + 4) = v302;
          *((_QWORD *)v297 + 5) = v303;
          *((_QWORD *)v297 + 6) = v305;
          *((_QWORD *)v297 + 7) = v304;
          v297[64] = v381;
          *(_DWORD *)(v297 + 65) = *(_DWORD *)(v298 + 65);
          v306 = v298[120];
          if (v306 == 255)
          {
            v307 = *(_OWORD *)(v298 + 88);
            *(_OWORD *)(v297 + 72) = *(_OWORD *)(v298 + 72);
            *(_OWORD *)(v297 + 88) = v307;
            *(_OWORD *)(v297 + 104) = *(_OWORD *)(v298 + 104);
            v297[120] = v298[120];
          }
          else
          {
            v382 = v306 & 1;
            v312 = (void *)*((_QWORD *)v298 + 9);
            v311 = *((_QWORD *)v298 + 10);
            v313 = *((_QWORD *)v298 + 11);
            v314 = *((_QWORD *)v298 + 12);
            v315 = *((_QWORD *)v298 + 13);
            v316 = *((_QWORD *)v298 + 14);
            sub_10002B764(v312, v311, v313, v314, v315, v316, v306 & 1);
            *((_QWORD *)v297 + 9) = v312;
            *((_QWORD *)v297 + 10) = v311;
            *((_QWORD *)v297 + 11) = v313;
            *((_QWORD *)v297 + 12) = v314;
            *((_QWORD *)v297 + 13) = v315;
            *((_QWORD *)v297 + 14) = v316;
            v297[120] = v382;
          }
          v7 = v392;
          v3 = v394;
          v297[121] = v298[121];
          a1 = v388;
        }
        else
        {
          v308 = *((_OWORD *)v298 + 5);
          *((_OWORD *)v297 + 4) = *((_OWORD *)v298 + 4);
          *((_OWORD *)v297 + 5) = v308;
          *((_OWORD *)v297 + 6) = *((_OWORD *)v298 + 6);
          *(_OWORD *)(v297 + 106) = *(_OWORD *)(v298 + 106);
          v309 = *((_OWORD *)v298 + 1);
          *(_OWORD *)v297 = *(_OWORD *)v298;
          *((_OWORD *)v297 + 1) = v309;
          v310 = *((_OWORD *)v298 + 3);
          *((_OWORD *)v297 + 2) = *((_OWORD *)v298 + 2);
          *((_OWORD *)v297 + 3) = v310;
        }
        *((_BYTE *)a1 + v295[6]) = *((_BYTE *)a2 + v295[6]);
        *((_BYTE *)a1 + v295[7]) = *((_BYTE *)a2 + v295[7]);
        *((_BYTE *)a1 + v295[8]) = *((_BYTE *)a2 + v295[8]);
        *((_BYTE *)a1 + v295[9]) = *((_BYTE *)a2 + v295[9]);
        *((_BYTE *)a1 + v295[10]) = *((_BYTE *)a2 + v295[10]);
        v317 = v295[11];
        v318 = *(void **)((char *)a2 + v317);
        *(void **)((char *)a1 + v317) = v318;
        v319 = v318;
        v101 = a1;
        v102 = v7;
        v103 = 1;
        goto LABEL_198;
      case 2:
        v72 = *a2;
        *a1 = *a2;
        v73 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v74 = (void **)((char *)a1 + v73);
        v75 = (void **)((char *)a2 + v73);
        v76 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v77 = *(_QWORD *)(v76 - 8);
        v78 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v77 + 48);
        v79 = v72;
        if (v78(v75, 1, v76))
        {
          v80 = sub_10002A750(&qword_100644980);
          memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v75, v76))
          {
            case 1u:
              v149 = *v75;
              *v74 = *v75;
              v150 = v149;
              v151 = v74;
              v152 = v76;
              v153 = 1;
              goto LABEL_167;
            case 2u:
              v346 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v346 - 8) + 16))(v74, v75, v346);
              v151 = v74;
              v152 = v76;
              v153 = 2;
              goto LABEL_167;
            case 3u:
              v347 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v347 - 8) + 16))(v74, v75, v347);
              v151 = v74;
              v152 = v76;
              v153 = 3;
              goto LABEL_167;
            case 4u:
              v348 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v348 - 8) + 16))(v74, v75, v348);
              v151 = v74;
              v152 = v76;
              v153 = 4;
              goto LABEL_167;
            case 5u:
              v349 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v349 - 8) + 16))(v74, v75, v349);
              v151 = v74;
              v152 = v76;
              v153 = 5;
              goto LABEL_167;
            case 6u:
              v350 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v350 - 8) + 16))(v74, v75, v350);
              v151 = v74;
              v152 = v76;
              v153 = 6;
              goto LABEL_167;
            case 8u:
              v351 = *v75;
              *v74 = *v75;
              v352 = v351;
              v151 = v74;
              v152 = v76;
              v153 = 8;
              goto LABEL_167;
            case 9u:
              v353 = *v75;
              *v74 = *v75;
              v354 = v353;
              v151 = v74;
              v152 = v76;
              v153 = 9;
LABEL_167:
              swift_storeEnumTagMultiPayload(v151, v152, v153);
              break;
            default:
              memcpy(v74, v75, *(_QWORD *)(v77 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
        }
        v101 = a1;
        v102 = v7;
        v103 = 2;
        goto LABEL_198;
      case 3:
        v81 = *a2;
        *a1 = *a2;
        v82 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v83 = (void **)((char *)a1 + v82);
        v84 = (void **)((char *)a2 + v82);
        v85 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v86 = *(_QWORD *)(v85 - 8);
        v87 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v86 + 48);
        v88 = v81;
        if (v87(v84, 1, v85))
        {
          v89 = sub_10002A750(&qword_100644980);
          memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v84, v85))
          {
            case 1u:
              v154 = *v84;
              *v83 = *v84;
              v155 = v154;
              v156 = v83;
              v157 = v85;
              v158 = 1;
              goto LABEL_195;
            case 2u:
              v355 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v355 - 8) + 16))(v83, v84, v355);
              v156 = v83;
              v157 = v85;
              v158 = 2;
              goto LABEL_195;
            case 3u:
              v356 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v356 - 8) + 16))(v83, v84, v356);
              v156 = v83;
              v157 = v85;
              v158 = 3;
              goto LABEL_195;
            case 4u:
              v357 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v357 - 8) + 16))(v83, v84, v357);
              v156 = v83;
              v157 = v85;
              v158 = 4;
              goto LABEL_195;
            case 5u:
              v373 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v373 - 8) + 16))(v83, v84, v373);
              v156 = v83;
              v157 = v85;
              v158 = 5;
              goto LABEL_195;
            case 6u:
              v358 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v358 - 8) + 16))(v83, v84, v358);
              v156 = v83;
              v157 = v85;
              v158 = 6;
              goto LABEL_195;
            case 8u:
              v359 = *v84;
              *v83 = *v84;
              v360 = v359;
              v156 = v83;
              v157 = v85;
              v158 = 8;
              goto LABEL_195;
            case 9u:
              v361 = *v84;
              *v83 = *v84;
              v362 = v361;
              v156 = v83;
              v157 = v85;
              v158 = 9;
LABEL_195:
              swift_storeEnumTagMultiPayload(v156, v157, v158);
              break;
            default:
              memcpy(v83, v84, *(_QWORD *)(v86 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
        }
        v101 = a1;
        v102 = v7;
        v103 = 3;
        goto LABEL_198;
      case 4:
        v90 = *a2;
        *a1 = *a2;
        v91 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v92 = (void **)((char *)a1 + v91);
        v93 = (void **)((char *)a2 + v91);
        v94 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v95 = *(_QWORD *)(v94 - 8);
        v96 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v95 + 48);
        v97 = v90;
        if (v96(v93, 1, v94))
        {
          v98 = sub_10002A750(&qword_100644980);
          memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v93, v94))
          {
            case 1u:
              v159 = *v93;
              *v92 = *v93;
              v160 = v159;
              v161 = v92;
              v162 = v94;
              v163 = 1;
              goto LABEL_185;
            case 2u:
              v363 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v363 - 8) + 16))(v92, v93, v363);
              v161 = v92;
              v162 = v94;
              v163 = 2;
              goto LABEL_185;
            case 3u:
              v364 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v364 - 8) + 16))(v92, v93, v364);
              v161 = v92;
              v162 = v94;
              v163 = 3;
              goto LABEL_185;
            case 4u:
              v365 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v365 - 8) + 16))(v92, v93, v365);
              v161 = v92;
              v162 = v94;
              v163 = 4;
              goto LABEL_185;
            case 5u:
              v366 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v366 - 8) + 16))(v92, v93, v366);
              v161 = v92;
              v162 = v94;
              v163 = 5;
              goto LABEL_185;
            case 6u:
              v367 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v367 - 8) + 16))(v92, v93, v367);
              v161 = v92;
              v162 = v94;
              v163 = 6;
              goto LABEL_185;
            case 8u:
              v368 = *v93;
              *v92 = *v93;
              v369 = v368;
              v161 = v92;
              v162 = v94;
              v163 = 8;
              goto LABEL_185;
            case 9u:
              v370 = *v93;
              *v92 = *v93;
              v371 = v370;
              v161 = v92;
              v162 = v94;
              v163 = 9;
LABEL_185:
              swift_storeEnumTagMultiPayload(v161, v162, v163);
              break;
            default:
              memcpy(v92, v93, *(_QWORD *)(v95 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
        }
        v101 = a1;
        v102 = v7;
        v103 = 4;
        goto LABEL_198;
      case 5:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
        v99 = a2[2];
        a1[2] = v99;
        v100 = v99;
        v101 = a1;
        v102 = v7;
        v103 = 5;
        goto LABEL_198;
      case 6:
        v116 = *a2;
        *a1 = *a2;
        v117 = v116;
        v101 = a1;
        v102 = v7;
        v103 = 6;
        goto LABEL_198;
      case 7:
        v104 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v105 = *(_QWORD *)(v104 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v105 + 48))(a2, 1, v104))
        {
          v106 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
        }
        else
        {
          v164 = *a2;
          *a1 = *a2;
          v165 = *(int *)(v104 + 20);
          v384 = (char *)a1 + v165;
          v166 = (char *)a2 + v165;
          v167 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v168 = v7;
          v169 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v167 - 8) + 16);
          v170 = swift_bridgeObjectRetain(v164);
          v169(v384, v166, v167, v170);
          v7 = v168;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v105 + 56))(a1, 0, 1, v104);
        }
        v171 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v172 = (void **)((char *)a1 + v171);
        v173 = (void **)((char *)a2 + v171);
        v174 = v173[1];
        if (v174)
        {
          *v172 = *v173;
          v172[1] = v174;
          v175 = (void *)v173[2];
          v172[2] = v175;
          swift_bridgeObjectRetain(v174);
          v176 = v175;
        }
        else
        {
          *(_OWORD *)v172 = *(_OWORD *)v173;
          v172[2] = v173[2];
        }
        v101 = a1;
        v102 = v7;
        v103 = 7;
        goto LABEL_198;
      case 8:
        v118 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v119 = *(_QWORD *)(v118 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v119 + 48))(a2, 1, v118))
        {
          v120 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
        }
        else
        {
          v179 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(a1, a2, v179);
          *((_BYTE *)a1 + *(int *)(v118 + 20)) = *((_BYTE *)a2 + *(int *)(v118 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v119 + 56))(a1, 0, 1, v118);
        }
        v180 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)a1 + *(int *)(v180 + 20)) = *(void **)((char *)a2 + *(int *)(v180 + 20));
        v101 = a1;
        v102 = v7;
        v103 = 8;
        goto LABEL_198;
      case 9:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v107 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v108 = (char *)a1 + v107;
        v109 = (char *)a2 + v107;
        v110 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16))(v108, v109, v110);
        v101 = a1;
        v102 = v7;
        v103 = 9;
LABEL_198:
        swift_storeEnumTagMultiPayload(v101, v102, v103);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
    v285 = 0;
  }
LABEL_200:
  swift_storeEnumTagMultiPayload(a1, v3, v285);
  return a1;
}

void **sub_1003C84F4(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int v8;
  uint64_t v9;
  void *v10;
  id v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void **v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void **v29;
  void **v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(void **, uint64_t, uint64_t);
  id v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void **v38;
  void **v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(void **, uint64_t, uint64_t);
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void **v47;
  void **v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(void **, uint64_t, uint64_t);
  id v52;
  uint64_t v53;
  void *v54;
  id v55;
  void **v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  id v68;
  void **v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  void **v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int (*v78)(void **, uint64_t, uint64_t);
  id v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  void **v83;
  void **v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int (*v87)(void **, uint64_t, uint64_t);
  id v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  void **v92;
  void **v93;
  uint64_t v94;
  uint64_t v95;
  unsigned int (*v96)(void **, uint64_t, uint64_t);
  id v97;
  uint64_t v98;
  void *v99;
  id v100;
  void **v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  void *v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  id v122;
  void **v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  id v127;
  void **v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  id v132;
  void **v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(char *, char *, uint64_t, __n128);
  __n128 v142;
  uint64_t v143;
  _QWORD *v144;
  _QWORD *v145;
  uint64_t v146;
  void *v147;
  id v148;
  void *v149;
  id v150;
  void **v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  id v155;
  void **v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  id v160;
  void **v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  void (*v169)(char *, char *, uint64_t, __n128);
  __n128 v170;
  uint64_t v171;
  _QWORD *v172;
  _QWORD *v173;
  uint64_t v174;
  void *v175;
  id v176;
  __int128 v177;
  __int128 v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  void *v188;
  id v189;
  void *v190;
  id v191;
  int *v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  void *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unsigned __int8 v202;
  int v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  uint64_t v213;
  uint64_t v214;
  void *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  void *v221;
  id v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  void *v228;
  id v229;
  void *v230;
  id v231;
  int *v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  void *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  int v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  __int128 v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  void *v258;
  id v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  void *v265;
  id v266;
  void *v267;
  id v268;
  int *v269;
  uint64_t v270;
  char *v271;
  char *v272;
  uint64_t v273;
  void *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  unsigned __int8 v279;
  int v280;
  __int128 v281;
  __int128 v282;
  __int128 v283;
  __int128 v284;
  __int128 v285;
  __int128 v286;
  __int128 v287;
  __int128 v288;
  __int128 v289;
  uint64_t v290;
  uint64_t v291;
  void *v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  void *v298;
  id v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  void *v306;
  id v307;
  void *v308;
  id v309;
  int *v310;
  uint64_t v311;
  char *v312;
  char *v313;
  uint64_t v314;
  void *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  unsigned __int8 v320;
  int v321;
  __int128 v322;
  __int128 v323;
  __int128 v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  __int128 v329;
  __int128 v330;
  uint64_t v331;
  void *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  void *v338;
  id v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  void *v345;
  id v346;
  void *v347;
  id v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  void *v354;
  id v355;
  void *v356;
  id v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  void *v363;
  id v364;
  void *v365;
  id v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  void *v372;
  id v373;
  void *v374;
  id v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  void *v381;
  id v382;
  void *v383;
  id v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  void *v390;
  id v391;
  void *v392;
  id v393;
  uint64_t v395;
  char v396;
  unsigned __int8 v397;
  void *v398;
  uint64_t v399;
  char v400;
  uint64_t v401;
  char v402;
  char *v403;
  char *v404;
  int *v405;
  uint64_t v406;
  char v407;
  int *v408;
  int *v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRRemindersListSectionCreationLocation);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v8 = swift_getEnumCaseMultiPayload(a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      switch(v8)
      {
        case 0:
          v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v414 = v7;
          switch(swift_getEnumCaseMultiPayload(a2, v9))
          {
            case 1u:
              v10 = *a2;
              *a1 = *a2;
              v11 = v10;
              v12 = a1;
              v13 = v9;
              v14 = 1;
              goto LABEL_75;
            case 2u:
              v183 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(a1, a2, v183);
              v12 = a1;
              v13 = v9;
              v14 = 2;
              goto LABEL_75;
            case 3u:
              v184 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(a1, a2, v184);
              v12 = a1;
              v13 = v9;
              v14 = 3;
              goto LABEL_75;
            case 4u:
              v185 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(a1, a2, v185);
              v12 = a1;
              v13 = v9;
              v14 = 4;
              goto LABEL_75;
            case 5u:
              v186 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(a1, a2, v186);
              v12 = a1;
              v13 = v9;
              v14 = 5;
              goto LABEL_75;
            case 6u:
              v187 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(a1, a2, v187);
              v12 = a1;
              v13 = v9;
              v14 = 6;
              goto LABEL_75;
            case 8u:
              v188 = *a2;
              *a1 = *a2;
              v189 = v188;
              v12 = a1;
              v13 = v9;
              v14 = 8;
              goto LABEL_75;
            case 9u:
              v190 = *a2;
              *a1 = *a2;
              v191 = v190;
              v12 = a1;
              v13 = v9;
              v14 = 9;
LABEL_75:
              swift_storeEnumTagMultiPayload(v12, v13, v14);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
              break;
          }
          v192 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v193 = v192[5];
          v194 = (char *)a1 + v193;
          v195 = (char *)a2 + v193;
          if (*(void **)((char *)a2 + v193 + 8))
          {
            v405 = v192;
            v412 = a3;
            *(_QWORD *)v194 = *(_QWORD *)v195;
            v196 = *((_QWORD *)v195 + 1);
            *((_QWORD *)v194 + 1) = v196;
            v197 = (void *)*((_QWORD *)v195 + 2);
            v198 = *((_QWORD *)v195 + 3);
            v199 = *((_QWORD *)v195 + 4);
            v200 = *((_QWORD *)v195 + 5);
            v201 = *((_QWORD *)v195 + 6);
            v395 = *((_QWORD *)v195 + 7);
            v202 = v195[64];
            swift_bridgeObjectRetain(v196);
            sub_10003E1F0(v197, v198, v199, v200, v201, v395, v202);
            *((_QWORD *)v194 + 2) = v197;
            *((_QWORD *)v194 + 3) = v198;
            *((_QWORD *)v194 + 4) = v199;
            *((_QWORD *)v194 + 5) = v200;
            *((_QWORD *)v194 + 6) = v201;
            *((_QWORD *)v194 + 7) = v395;
            v194[64] = v202;
            v194[65] = v195[65];
            v194[66] = v195[66];
            v194[67] = v195[67];
            v194[68] = v195[68];
            v203 = v195[120];
            if (v203 == 255)
            {
              v204 = *(_OWORD *)(v195 + 72);
              v205 = *(_OWORD *)(v195 + 88);
              v206 = *(_OWORD *)(v195 + 104);
              v194[120] = v195[120];
              *(_OWORD *)(v194 + 88) = v205;
              *(_OWORD *)(v194 + 104) = v206;
              *(_OWORD *)(v194 + 72) = v204;
            }
            else
            {
              v396 = v203 & 1;
              v215 = (void *)*((_QWORD *)v195 + 9);
              v214 = *((_QWORD *)v195 + 10);
              v216 = *((_QWORD *)v195 + 11);
              v217 = *((_QWORD *)v195 + 12);
              v218 = *((_QWORD *)v195 + 13);
              v219 = *((_QWORD *)v195 + 14);
              sub_10002B764(v215, v214, v216, v217, v218, v219, v203 & 1);
              *((_QWORD *)v194 + 9) = v215;
              *((_QWORD *)v194 + 10) = v214;
              *((_QWORD *)v194 + 11) = v216;
              *((_QWORD *)v194 + 12) = v217;
              *((_QWORD *)v194 + 13) = v218;
              *((_QWORD *)v194 + 14) = v219;
              v194[120] = v396;
            }
            a3 = v412;
            v213 = v414;
            v194[121] = v195[121];
            v192 = v405;
          }
          else
          {
            v207 = *(_OWORD *)v195;
            v208 = *((_OWORD *)v195 + 1);
            v209 = *((_OWORD *)v195 + 3);
            *((_OWORD *)v194 + 2) = *((_OWORD *)v195 + 2);
            *((_OWORD *)v194 + 3) = v209;
            *(_OWORD *)v194 = v207;
            *((_OWORD *)v194 + 1) = v208;
            v210 = *((_OWORD *)v195 + 4);
            v211 = *((_OWORD *)v195 + 5);
            v212 = *((_OWORD *)v195 + 6);
            *(_OWORD *)(v194 + 106) = *(_OWORD *)(v195 + 106);
            *((_OWORD *)v194 + 5) = v211;
            *((_OWORD *)v194 + 6) = v212;
            *((_OWORD *)v194 + 4) = v210;
            v213 = v7;
          }
          *((_BYTE *)a1 + v192[6]) = *((_BYTE *)a2 + v192[6]);
          *((_BYTE *)a1 + v192[7]) = *((_BYTE *)a2 + v192[7]);
          *((_BYTE *)a1 + v192[8]) = *((_BYTE *)a2 + v192[8]);
          *((_BYTE *)a1 + v192[9]) = *((_BYTE *)a2 + v192[9]);
          *((_BYTE *)a1 + v192[10]) = *((_BYTE *)a2 + v192[10]);
          v220 = v192[11];
          v221 = *(void **)((char *)a2 + v220);
          *(void **)((char *)a1 + v220) = v221;
          v222 = v221;
          v56 = a1;
          v57 = v213;
          v58 = 0;
          goto LABEL_164;
        case 1:
          v21 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v415 = v7;
          switch(swift_getEnumCaseMultiPayload(a2, v21))
          {
            case 1u:
              v22 = *a2;
              *a1 = *a2;
              v23 = v22;
              v24 = a1;
              v25 = v21;
              v26 = 1;
              goto LABEL_107;
            case 2u:
              v260 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v260 - 8) + 16))(a1, a2, v260);
              v24 = a1;
              v25 = v21;
              v26 = 2;
              goto LABEL_107;
            case 3u:
              v261 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v261 - 8) + 16))(a1, a2, v261);
              v24 = a1;
              v25 = v21;
              v26 = 3;
              goto LABEL_107;
            case 4u:
              v262 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v262 - 8) + 16))(a1, a2, v262);
              v24 = a1;
              v25 = v21;
              v26 = 4;
              goto LABEL_107;
            case 5u:
              v263 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v263 - 8) + 16))(a1, a2, v263);
              v24 = a1;
              v25 = v21;
              v26 = 5;
              goto LABEL_107;
            case 6u:
              v264 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v264 - 8) + 16))(a1, a2, v264);
              v24 = a1;
              v25 = v21;
              v26 = 6;
              goto LABEL_107;
            case 8u:
              v265 = *a2;
              *a1 = *a2;
              v266 = v265;
              v24 = a1;
              v25 = v21;
              v26 = 8;
              goto LABEL_107;
            case 9u:
              v267 = *a2;
              *a1 = *a2;
              v268 = v267;
              v24 = a1;
              v25 = v21;
              v26 = 9;
LABEL_107:
              swift_storeEnumTagMultiPayload(v24, v25, v26);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
              break;
          }
          v269 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v270 = v269[5];
          v271 = (char *)a1 + v270;
          v272 = (char *)a2 + v270;
          if (*(void **)((char *)a2 + v270 + 8))
          {
            v408 = v269;
            v413 = a3;
            *(_QWORD *)v271 = *(_QWORD *)v272;
            v273 = *((_QWORD *)v272 + 1);
            *((_QWORD *)v271 + 1) = v273;
            v274 = (void *)*((_QWORD *)v272 + 2);
            v275 = *((_QWORD *)v272 + 3);
            v276 = *((_QWORD *)v272 + 4);
            v277 = *((_QWORD *)v272 + 5);
            v278 = *((_QWORD *)v272 + 6);
            v399 = *((_QWORD *)v272 + 7);
            v279 = v272[64];
            swift_bridgeObjectRetain(v273);
            sub_10003E1F0(v274, v275, v276, v277, v278, v399, v279);
            *((_QWORD *)v271 + 2) = v274;
            *((_QWORD *)v271 + 3) = v275;
            *((_QWORD *)v271 + 4) = v276;
            *((_QWORD *)v271 + 5) = v277;
            *((_QWORD *)v271 + 6) = v278;
            *((_QWORD *)v271 + 7) = v399;
            v271[64] = v279;
            v271[65] = v272[65];
            v271[66] = v272[66];
            v271[67] = v272[67];
            v271[68] = v272[68];
            v280 = v272[120];
            if (v280 == 255)
            {
              v281 = *(_OWORD *)(v272 + 72);
              v282 = *(_OWORD *)(v272 + 88);
              v283 = *(_OWORD *)(v272 + 104);
              v271[120] = v272[120];
              *(_OWORD *)(v271 + 88) = v282;
              *(_OWORD *)(v271 + 104) = v283;
              *(_OWORD *)(v271 + 72) = v281;
            }
            else
            {
              v400 = v280 & 1;
              v292 = (void *)*((_QWORD *)v272 + 9);
              v291 = *((_QWORD *)v272 + 10);
              v293 = *((_QWORD *)v272 + 11);
              v294 = *((_QWORD *)v272 + 12);
              v295 = *((_QWORD *)v272 + 13);
              v296 = *((_QWORD *)v272 + 14);
              sub_10002B764(v292, v291, v293, v294, v295, v296, v280 & 1);
              *((_QWORD *)v271 + 9) = v292;
              *((_QWORD *)v271 + 10) = v291;
              *((_QWORD *)v271 + 11) = v293;
              *((_QWORD *)v271 + 12) = v294;
              *((_QWORD *)v271 + 13) = v295;
              *((_QWORD *)v271 + 14) = v296;
              v271[120] = v400;
            }
            a3 = v413;
            v290 = v415;
            v271[121] = v272[121];
            v269 = v408;
          }
          else
          {
            v284 = *(_OWORD *)v272;
            v285 = *((_OWORD *)v272 + 1);
            v286 = *((_OWORD *)v272 + 3);
            *((_OWORD *)v271 + 2) = *((_OWORD *)v272 + 2);
            *((_OWORD *)v271 + 3) = v286;
            *(_OWORD *)v271 = v284;
            *((_OWORD *)v271 + 1) = v285;
            v287 = *((_OWORD *)v272 + 4);
            v288 = *((_OWORD *)v272 + 5);
            v289 = *((_OWORD *)v272 + 6);
            *(_OWORD *)(v271 + 106) = *(_OWORD *)(v272 + 106);
            *((_OWORD *)v271 + 5) = v288;
            *((_OWORD *)v271 + 6) = v289;
            *((_OWORD *)v271 + 4) = v287;
            v290 = v7;
          }
          *((_BYTE *)a1 + v269[6]) = *((_BYTE *)a2 + v269[6]);
          *((_BYTE *)a1 + v269[7]) = *((_BYTE *)a2 + v269[7]);
          *((_BYTE *)a1 + v269[8]) = *((_BYTE *)a2 + v269[8]);
          *((_BYTE *)a1 + v269[9]) = *((_BYTE *)a2 + v269[9]);
          *((_BYTE *)a1 + v269[10]) = *((_BYTE *)a2 + v269[10]);
          v297 = v269[11];
          v298 = *(void **)((char *)a2 + v297);
          *(void **)((char *)a1 + v297) = v298;
          v299 = v298;
          v300 = 1;
          swift_storeEnumTagMultiPayload(a1, v290, 1);
          goto LABEL_201;
        case 2:
          v27 = *a2;
          *a1 = *a2;
          v28 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v29 = (void **)((char *)a1 + v28);
          v30 = (void **)((char *)a2 + v28);
          v31 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v32 = *(_QWORD *)(v31 - 8);
          v33 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v32 + 48);
          v34 = v27;
          if (v33(v30, 1, v31))
          {
            v35 = sub_10002A750(&qword_100644980);
            memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v30, v31))
            {
              case 1u:
                v121 = *v30;
                *v29 = *v30;
                v122 = v121;
                v123 = v29;
                v124 = v31;
                v125 = 1;
                goto LABEL_139;
              case 2u:
                v340 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v340 - 8) + 16))(v29, v30, v340);
                v123 = v29;
                v124 = v31;
                v125 = 2;
                goto LABEL_139;
              case 3u:
                v341 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v341 - 8) + 16))(v29, v30, v341);
                v123 = v29;
                v124 = v31;
                v125 = 3;
                goto LABEL_139;
              case 4u:
                v342 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v342 - 8) + 16))(v29, v30, v342);
                v123 = v29;
                v124 = v31;
                v125 = 4;
                goto LABEL_139;
              case 5u:
                v343 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v343 - 8) + 16))(v29, v30, v343);
                v123 = v29;
                v124 = v31;
                v125 = 5;
                goto LABEL_139;
              case 6u:
                v344 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v344 - 8) + 16))(v29, v30, v344);
                v123 = v29;
                v124 = v31;
                v125 = 6;
                goto LABEL_139;
              case 8u:
                v345 = *v30;
                *v29 = *v30;
                v346 = v345;
                v123 = v29;
                v124 = v31;
                v125 = 8;
                goto LABEL_139;
              case 9u:
                v347 = *v30;
                *v29 = *v30;
                v348 = v347;
                v123 = v29;
                v124 = v31;
                v125 = 9;
LABEL_139:
                swift_storeEnumTagMultiPayload(v123, v124, v125);
                break;
              default:
                memcpy(v29, v30, *(_QWORD *)(v32 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
          }
          v56 = a1;
          v57 = v7;
          v58 = 2;
          goto LABEL_164;
        case 3:
          v36 = *a2;
          *a1 = *a2;
          v37 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v38 = (void **)((char *)a1 + v37);
          v39 = (void **)((char *)a2 + v37);
          v40 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v41 = *(_QWORD *)(v40 - 8);
          v42 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v41 + 48);
          v43 = v36;
          if (v42(v39, 1, v40))
          {
            v44 = sub_10002A750(&qword_100644980);
            memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v39, v40))
            {
              case 1u:
                v126 = *v39;
                *v38 = *v39;
                v127 = v126;
                v128 = v38;
                v129 = v40;
                v130 = 1;
                goto LABEL_150;
              case 2u:
                v349 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v349 - 8) + 16))(v38, v39, v349);
                v128 = v38;
                v129 = v40;
                v130 = 2;
                goto LABEL_150;
              case 3u:
                v350 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v350 - 8) + 16))(v38, v39, v350);
                v128 = v38;
                v129 = v40;
                v130 = 3;
                goto LABEL_150;
              case 4u:
                v351 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v351 - 8) + 16))(v38, v39, v351);
                v128 = v38;
                v129 = v40;
                v130 = 4;
                goto LABEL_150;
              case 5u:
                v352 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v352 - 8) + 16))(v38, v39, v352);
                v128 = v38;
                v129 = v40;
                v130 = 5;
                goto LABEL_150;
              case 6u:
                v353 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v353 - 8) + 16))(v38, v39, v353);
                v128 = v38;
                v129 = v40;
                v130 = 6;
                goto LABEL_150;
              case 8u:
                v354 = *v39;
                *v38 = *v39;
                v355 = v354;
                v128 = v38;
                v129 = v40;
                v130 = 8;
                goto LABEL_150;
              case 9u:
                v356 = *v39;
                *v38 = *v39;
                v357 = v356;
                v128 = v38;
                v129 = v40;
                v130 = 9;
LABEL_150:
                swift_storeEnumTagMultiPayload(v128, v129, v130);
                break;
              default:
                memcpy(v38, v39, *(_QWORD *)(v41 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
          }
          v56 = a1;
          v57 = v7;
          v58 = 3;
          goto LABEL_164;
        case 4:
          v45 = *a2;
          *a1 = *a2;
          v46 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v47 = (void **)((char *)a1 + v46);
          v48 = (void **)((char *)a2 + v46);
          v49 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v50 = *(_QWORD *)(v49 - 8);
          v51 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v50 + 48);
          v52 = v45;
          if (v51(v48, 1, v49))
          {
            v53 = sub_10002A750(&qword_100644980);
            memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v48, v49))
            {
              case 1u:
                v131 = *v48;
                *v47 = *v48;
                v132 = v131;
                v133 = v47;
                v134 = v49;
                v135 = 1;
                goto LABEL_161;
              case 2u:
                v358 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v358 - 8) + 16))(v47, v48, v358);
                v133 = v47;
                v134 = v49;
                v135 = 2;
                goto LABEL_161;
              case 3u:
                v359 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v359 - 8) + 16))(v47, v48, v359);
                v133 = v47;
                v134 = v49;
                v135 = 3;
                goto LABEL_161;
              case 4u:
                v360 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v360 - 8) + 16))(v47, v48, v360);
                v133 = v47;
                v134 = v49;
                v135 = 4;
                goto LABEL_161;
              case 5u:
                v361 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v361 - 8) + 16))(v47, v48, v361);
                v133 = v47;
                v134 = v49;
                v135 = 5;
                goto LABEL_161;
              case 6u:
                v362 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v362 - 8) + 16))(v47, v48, v362);
                v133 = v47;
                v134 = v49;
                v135 = 6;
                goto LABEL_161;
              case 8u:
                v363 = *v48;
                *v47 = *v48;
                v364 = v363;
                v133 = v47;
                v134 = v49;
                v135 = 8;
                goto LABEL_161;
              case 9u:
                v365 = *v48;
                *v47 = *v48;
                v366 = v365;
                v133 = v47;
                v134 = v49;
                v135 = 9;
LABEL_161:
                swift_storeEnumTagMultiPayload(v133, v134, v135);
                break;
              default:
                memcpy(v47, v48, *(_QWORD *)(v50 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
          }
          v56 = a1;
          v57 = v7;
          v58 = 4;
          goto LABEL_164;
        case 5:
          *a1 = *a2;
          *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
          *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
          *((_BYTE *)a1 + 10) = *((_BYTE *)a2 + 10);
          v54 = a2[2];
          a1[2] = v54;
          v55 = v54;
          v56 = a1;
          v57 = v7;
          v58 = 5;
          goto LABEL_164;
        case 6:
          v111 = *a2;
          *a1 = *a2;
          v112 = v111;
          v56 = a1;
          v57 = v7;
          v58 = 6;
          goto LABEL_164;
        case 7:
          v59 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v60 = *(_QWORD *)(v59 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v60 + 48))(a2, 1, v59))
          {
            v61 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
          }
          else
          {
            v136 = *a2;
            *a1 = *a2;
            v137 = *(int *)(v59 + 20);
            v403 = (char *)a1 + v137;
            v138 = (char *)a2 + v137;
            v139 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v140 = v7;
            v141 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v139 - 8) + 16);
            v142 = swift_bridgeObjectRetain(v136);
            v141(v403, v138, v139, v142);
            v7 = v140;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v60 + 56))(a1, 0, 1, v59);
          }
          v143 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v144 = (void **)((char *)a1 + v143);
          v145 = (void **)((char *)a2 + v143);
          if (v145[1])
          {
            *v144 = *v145;
            v146 = v145[1];
            v144[1] = v146;
            v147 = (void *)v145[2];
            v144[2] = v147;
            swift_bridgeObjectRetain(v146);
            v148 = v147;
          }
          else
          {
            v177 = *(_OWORD *)v145;
            v144[2] = v145[2];
            *(_OWORD *)v144 = v177;
          }
          v56 = a1;
          v57 = v7;
          v58 = 7;
          goto LABEL_164;
        case 8:
          v113 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v114 = *(_QWORD *)(v113 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v114 + 48))(a2, 1, v113))
          {
            v115 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
          }
          else
          {
            v179 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(a1, a2, v179);
            *((_BYTE *)a1 + *(int *)(v113 + 20)) = *((_BYTE *)a2 + *(int *)(v113 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v114 + 56))(a1, 0, 1, v113);
          }
          v180 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)a1 + *(int *)(v180 + 20)) = *(void **)((char *)a2 + *(int *)(v180 + 20));
          v56 = a1;
          v57 = v7;
          v58 = 8;
          goto LABEL_164;
        case 9:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v62 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v63 = (char *)a1 + v62;
          v64 = (char *)a2 + v62;
          v65 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
          v56 = a1;
          v57 = v7;
          v58 = 9;
LABEL_164:
          swift_storeEnumTagMultiPayload(v56, v57, v58);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      v300 = 1;
    }
    else
    {
      switch(v8)
      {
        case 0:
          v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v410 = a3;
          switch(swift_getEnumCaseMultiPayload(a2, v15))
          {
            case 1u:
              v16 = *a2;
              *a1 = *a2;
              v17 = v16;
              v18 = a1;
              v19 = v15;
              v20 = 1;
              goto LABEL_91;
            case 2u:
              v223 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v223 - 8) + 16))(a1, a2, v223);
              v18 = a1;
              v19 = v15;
              v20 = 2;
              goto LABEL_91;
            case 3u:
              v224 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v224 - 8) + 16))(a1, a2, v224);
              v18 = a1;
              v19 = v15;
              v20 = 3;
              goto LABEL_91;
            case 4u:
              v225 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v225 - 8) + 16))(a1, a2, v225);
              v18 = a1;
              v19 = v15;
              v20 = 4;
              goto LABEL_91;
            case 5u:
              v226 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v226 - 8) + 16))(a1, a2, v226);
              v18 = a1;
              v19 = v15;
              v20 = 5;
              goto LABEL_91;
            case 6u:
              v227 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v227 - 8) + 16))(a1, a2, v227);
              v18 = a1;
              v19 = v15;
              v20 = 6;
              goto LABEL_91;
            case 8u:
              v228 = *a2;
              *a1 = *a2;
              v229 = v228;
              v18 = a1;
              v19 = v15;
              v20 = 8;
              goto LABEL_91;
            case 9u:
              v230 = *a2;
              *a1 = *a2;
              v231 = v230;
              v18 = a1;
              v19 = v15;
              v20 = 9;
LABEL_91:
              swift_storeEnumTagMultiPayload(v18, v19, v20);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
              break;
          }
          v232 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v233 = v232[5];
          v234 = (char *)a1 + v233;
          v235 = (char *)a2 + v233;
          if (*(void **)((char *)a2 + v233 + 8))
          {
            v416 = v7;
            *(_QWORD *)v234 = *(_QWORD *)v235;
            v236 = *((_QWORD *)v235 + 1);
            *((_QWORD *)v234 + 1) = v236;
            v237 = (void *)*((_QWORD *)v235 + 2);
            v238 = *((_QWORD *)v235 + 3);
            v239 = *((_QWORD *)v235 + 4);
            v240 = *((_QWORD *)v235 + 5);
            v241 = *((_QWORD *)v235 + 6);
            v406 = *((_QWORD *)v235 + 7);
            v397 = v235[64];
            swift_bridgeObjectRetain(v236);
            sub_10003E1F0(v237, v238, v239, v240, v241, v406, v397);
            *((_QWORD *)v234 + 2) = v237;
            *((_QWORD *)v234 + 3) = v238;
            *((_QWORD *)v234 + 4) = v239;
            *((_QWORD *)v234 + 5) = v240;
            *((_QWORD *)v234 + 6) = v241;
            *((_QWORD *)v234 + 7) = v406;
            v234[64] = v397;
            v234[65] = v235[65];
            v234[66] = v235[66];
            v234[67] = v235[67];
            v234[68] = v235[68];
            v242 = v235[120];
            if (v242 == 255)
            {
              v243 = *(_OWORD *)(v235 + 72);
              v244 = *(_OWORD *)(v235 + 88);
              v245 = *(_OWORD *)(v235 + 104);
              v234[120] = v235[120];
              *(_OWORD *)(v234 + 88) = v244;
              *(_OWORD *)(v234 + 104) = v245;
              *(_OWORD *)(v234 + 72) = v243;
            }
            else
            {
              v407 = v242 & 1;
              v252 = *((_QWORD *)v235 + 10);
              v398 = (void *)*((_QWORD *)v235 + 9);
              v253 = *((_QWORD *)v235 + 11);
              v254 = *((_QWORD *)v235 + 12);
              v255 = *((_QWORD *)v235 + 13);
              v256 = *((_QWORD *)v235 + 14);
              sub_10002B764(v398, v252, v253, v254, v255, v256, v242 & 1);
              *((_QWORD *)v234 + 9) = v398;
              *((_QWORD *)v234 + 10) = v252;
              *((_QWORD *)v234 + 11) = v253;
              *((_QWORD *)v234 + 12) = v254;
              *((_QWORD *)v234 + 13) = v255;
              *((_QWORD *)v234 + 14) = v256;
              v234[120] = v407;
            }
            a3 = v410;
            v7 = v416;
            v234[121] = v235[121];
          }
          else
          {
            v246 = *(_OWORD *)v235;
            v247 = *((_OWORD *)v235 + 1);
            v248 = *((_OWORD *)v235 + 3);
            *((_OWORD *)v234 + 2) = *((_OWORD *)v235 + 2);
            *((_OWORD *)v234 + 3) = v248;
            *(_OWORD *)v234 = v246;
            *((_OWORD *)v234 + 1) = v247;
            v249 = *((_OWORD *)v235 + 4);
            v250 = *((_OWORD *)v235 + 5);
            v251 = *((_OWORD *)v235 + 6);
            *(_OWORD *)(v234 + 106) = *(_OWORD *)(v235 + 106);
            *((_OWORD *)v234 + 5) = v250;
            *((_OWORD *)v234 + 6) = v251;
            *((_OWORD *)v234 + 4) = v249;
          }
          *((_BYTE *)a1 + v232[6]) = *((_BYTE *)a2 + v232[6]);
          *((_BYTE *)a1 + v232[7]) = *((_BYTE *)a2 + v232[7]);
          *((_BYTE *)a1 + v232[8]) = *((_BYTE *)a2 + v232[8]);
          *((_BYTE *)a1 + v232[9]) = *((_BYTE *)a2 + v232[9]);
          *((_BYTE *)a1 + v232[10]) = *((_BYTE *)a2 + v232[10]);
          v257 = v232[11];
          v258 = *(void **)((char *)a2 + v257);
          *(void **)((char *)a1 + v257) = v258;
          v259 = v258;
          v101 = a1;
          v102 = v7;
          v103 = 0;
          goto LABEL_199;
        case 1:
          v66 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v411 = a3;
          switch(swift_getEnumCaseMultiPayload(a2, v66))
          {
            case 1u:
              v67 = *a2;
              *a1 = *a2;
              v68 = v67;
              v69 = a1;
              v70 = v66;
              v71 = 1;
              goto LABEL_123;
            case 2u:
              v301 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v301 - 8) + 16))(a1, a2, v301);
              v69 = a1;
              v70 = v66;
              v71 = 2;
              goto LABEL_123;
            case 3u:
              v302 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v302 - 8) + 16))(a1, a2, v302);
              v69 = a1;
              v70 = v66;
              v71 = 3;
              goto LABEL_123;
            case 4u:
              v303 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v303 - 8) + 16))(a1, a2, v303);
              v69 = a1;
              v70 = v66;
              v71 = 4;
              goto LABEL_123;
            case 5u:
              v304 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v304 - 8) + 16))(a1, a2, v304);
              v69 = a1;
              v70 = v66;
              v71 = 5;
              goto LABEL_123;
            case 6u:
              v305 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v305 - 8) + 16))(a1, a2, v305);
              v69 = a1;
              v70 = v66;
              v71 = 6;
              goto LABEL_123;
            case 8u:
              v306 = *a2;
              *a1 = *a2;
              v307 = v306;
              v69 = a1;
              v70 = v66;
              v71 = 8;
              goto LABEL_123;
            case 9u:
              v308 = *a2;
              *a1 = *a2;
              v309 = v308;
              v69 = a1;
              v70 = v66;
              v71 = 9;
LABEL_123:
              swift_storeEnumTagMultiPayload(v69, v70, v71);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
              break;
          }
          v310 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v311 = v310[5];
          v312 = (char *)a1 + v311;
          v313 = (char *)a2 + v311;
          if (*(void **)((char *)a2 + v311 + 8))
          {
            v409 = v310;
            v417 = v7;
            *(_QWORD *)v312 = *(_QWORD *)v313;
            v314 = *((_QWORD *)v313 + 1);
            *((_QWORD *)v312 + 1) = v314;
            v315 = (void *)*((_QWORD *)v313 + 2);
            v316 = *((_QWORD *)v313 + 3);
            v317 = *((_QWORD *)v313 + 4);
            v318 = *((_QWORD *)v313 + 5);
            v319 = *((_QWORD *)v313 + 6);
            v401 = *((_QWORD *)v313 + 7);
            v320 = v313[64];
            swift_bridgeObjectRetain(v314);
            sub_10003E1F0(v315, v316, v317, v318, v319, v401, v320);
            *((_QWORD *)v312 + 2) = v315;
            *((_QWORD *)v312 + 3) = v316;
            *((_QWORD *)v312 + 4) = v317;
            *((_QWORD *)v312 + 5) = v318;
            *((_QWORD *)v312 + 6) = v319;
            *((_QWORD *)v312 + 7) = v401;
            v312[64] = v320;
            v312[65] = v313[65];
            v312[66] = v313[66];
            v312[67] = v313[67];
            v312[68] = v313[68];
            v321 = v313[120];
            if (v321 == 255)
            {
              v322 = *(_OWORD *)(v313 + 72);
              v323 = *(_OWORD *)(v313 + 88);
              v324 = *(_OWORD *)(v313 + 104);
              v312[120] = v313[120];
              *(_OWORD *)(v312 + 88) = v323;
              *(_OWORD *)(v312 + 104) = v324;
              *(_OWORD *)(v312 + 72) = v322;
            }
            else
            {
              v402 = v321 & 1;
              v332 = (void *)*((_QWORD *)v313 + 9);
              v331 = *((_QWORD *)v313 + 10);
              v333 = *((_QWORD *)v313 + 11);
              v334 = *((_QWORD *)v313 + 12);
              v335 = *((_QWORD *)v313 + 13);
              v336 = *((_QWORD *)v313 + 14);
              sub_10002B764(v332, v331, v333, v334, v335, v336, v321 & 1);
              *((_QWORD *)v312 + 9) = v332;
              *((_QWORD *)v312 + 10) = v331;
              *((_QWORD *)v312 + 11) = v333;
              *((_QWORD *)v312 + 12) = v334;
              *((_QWORD *)v312 + 13) = v335;
              *((_QWORD *)v312 + 14) = v336;
              v312[120] = v402;
            }
            a3 = v411;
            v7 = v417;
            v312[121] = v313[121];
            v310 = v409;
          }
          else
          {
            v325 = *(_OWORD *)v313;
            v326 = *((_OWORD *)v313 + 1);
            v327 = *((_OWORD *)v313 + 3);
            *((_OWORD *)v312 + 2) = *((_OWORD *)v313 + 2);
            *((_OWORD *)v312 + 3) = v327;
            *(_OWORD *)v312 = v325;
            *((_OWORD *)v312 + 1) = v326;
            v328 = *((_OWORD *)v313 + 4);
            v329 = *((_OWORD *)v313 + 5);
            v330 = *((_OWORD *)v313 + 6);
            *(_OWORD *)(v312 + 106) = *(_OWORD *)(v313 + 106);
            *((_OWORD *)v312 + 5) = v329;
            *((_OWORD *)v312 + 6) = v330;
            *((_OWORD *)v312 + 4) = v328;
          }
          *((_BYTE *)a1 + v310[6]) = *((_BYTE *)a2 + v310[6]);
          *((_BYTE *)a1 + v310[7]) = *((_BYTE *)a2 + v310[7]);
          *((_BYTE *)a1 + v310[8]) = *((_BYTE *)a2 + v310[8]);
          *((_BYTE *)a1 + v310[9]) = *((_BYTE *)a2 + v310[9]);
          *((_BYTE *)a1 + v310[10]) = *((_BYTE *)a2 + v310[10]);
          v337 = v310[11];
          v338 = *(void **)((char *)a2 + v337);
          *(void **)((char *)a1 + v337) = v338;
          v339 = v338;
          v101 = a1;
          v102 = v7;
          v103 = 1;
          goto LABEL_199;
        case 2:
          v72 = *a2;
          *a1 = *a2;
          v73 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v74 = (void **)((char *)a1 + v73);
          v75 = (void **)((char *)a2 + v73);
          v76 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v77 = *(_QWORD *)(v76 - 8);
          v78 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v77 + 48);
          v79 = v72;
          if (v78(v75, 1, v76))
          {
            v80 = sub_10002A750(&qword_100644980);
            memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v75, v76))
            {
              case 1u:
                v149 = *v75;
                *v74 = *v75;
                v150 = v149;
                v151 = v74;
                v152 = v76;
                v153 = 1;
                goto LABEL_174;
              case 2u:
                v367 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v367 - 8) + 16))(v74, v75, v367);
                v151 = v74;
                v152 = v76;
                v153 = 2;
                goto LABEL_174;
              case 3u:
                v368 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v368 - 8) + 16))(v74, v75, v368);
                v151 = v74;
                v152 = v76;
                v153 = 3;
                goto LABEL_174;
              case 4u:
                v369 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v369 - 8) + 16))(v74, v75, v369);
                v151 = v74;
                v152 = v76;
                v153 = 4;
                goto LABEL_174;
              case 5u:
                v370 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v370 - 8) + 16))(v74, v75, v370);
                v151 = v74;
                v152 = v76;
                v153 = 5;
                goto LABEL_174;
              case 6u:
                v371 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v371 - 8) + 16))(v74, v75, v371);
                v151 = v74;
                v152 = v76;
                v153 = 6;
                goto LABEL_174;
              case 8u:
                v372 = *v75;
                *v74 = *v75;
                v373 = v372;
                v151 = v74;
                v152 = v76;
                v153 = 8;
                goto LABEL_174;
              case 9u:
                v374 = *v75;
                *v74 = *v75;
                v375 = v374;
                v151 = v74;
                v152 = v76;
                v153 = 9;
LABEL_174:
                swift_storeEnumTagMultiPayload(v151, v152, v153);
                break;
              default:
                memcpy(v74, v75, *(_QWORD *)(v77 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
          }
          v101 = a1;
          v102 = v7;
          v103 = 2;
          goto LABEL_199;
        case 3:
          v81 = *a2;
          *a1 = *a2;
          v82 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v83 = (void **)((char *)a1 + v82);
          v84 = (void **)((char *)a2 + v82);
          v85 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v86 = *(_QWORD *)(v85 - 8);
          v87 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v86 + 48);
          v88 = v81;
          if (v87(v84, 1, v85))
          {
            v89 = sub_10002A750(&qword_100644980);
            memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v84, v85))
            {
              case 1u:
                v154 = *v84;
                *v83 = *v84;
                v155 = v154;
                v156 = v83;
                v157 = v85;
                v158 = 1;
                goto LABEL_185;
              case 2u:
                v376 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v376 - 8) + 16))(v83, v84, v376);
                v156 = v83;
                v157 = v85;
                v158 = 2;
                goto LABEL_185;
              case 3u:
                v377 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v377 - 8) + 16))(v83, v84, v377);
                v156 = v83;
                v157 = v85;
                v158 = 3;
                goto LABEL_185;
              case 4u:
                v378 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v378 - 8) + 16))(v83, v84, v378);
                v156 = v83;
                v157 = v85;
                v158 = 4;
                goto LABEL_185;
              case 5u:
                v379 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v379 - 8) + 16))(v83, v84, v379);
                v156 = v83;
                v157 = v85;
                v158 = 5;
                goto LABEL_185;
              case 6u:
                v380 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v380 - 8) + 16))(v83, v84, v380);
                v156 = v83;
                v157 = v85;
                v158 = 6;
                goto LABEL_185;
              case 8u:
                v381 = *v84;
                *v83 = *v84;
                v382 = v381;
                v156 = v83;
                v157 = v85;
                v158 = 8;
                goto LABEL_185;
              case 9u:
                v383 = *v84;
                *v83 = *v84;
                v384 = v383;
                v156 = v83;
                v157 = v85;
                v158 = 9;
LABEL_185:
                swift_storeEnumTagMultiPayload(v156, v157, v158);
                break;
              default:
                memcpy(v83, v84, *(_QWORD *)(v86 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
          }
          v101 = a1;
          v102 = v7;
          v103 = 3;
          goto LABEL_199;
        case 4:
          v90 = *a2;
          *a1 = *a2;
          v91 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v92 = (void **)((char *)a1 + v91);
          v93 = (void **)((char *)a2 + v91);
          v94 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v95 = *(_QWORD *)(v94 - 8);
          v96 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v95 + 48);
          v97 = v90;
          if (v96(v93, 1, v94))
          {
            v98 = sub_10002A750(&qword_100644980);
            memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v93, v94))
            {
              case 1u:
                v159 = *v93;
                *v92 = *v93;
                v160 = v159;
                v161 = v92;
                v162 = v94;
                v163 = 1;
                goto LABEL_196;
              case 2u:
                v385 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v385 - 8) + 16))(v92, v93, v385);
                v161 = v92;
                v162 = v94;
                v163 = 2;
                goto LABEL_196;
              case 3u:
                v386 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v386 - 8) + 16))(v92, v93, v386);
                v161 = v92;
                v162 = v94;
                v163 = 3;
                goto LABEL_196;
              case 4u:
                v387 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v387 - 8) + 16))(v92, v93, v387);
                v161 = v92;
                v162 = v94;
                v163 = 4;
                goto LABEL_196;
              case 5u:
                v388 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v388 - 8) + 16))(v92, v93, v388);
                v161 = v92;
                v162 = v94;
                v163 = 5;
                goto LABEL_196;
              case 6u:
                v389 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v389 - 8) + 16))(v92, v93, v389);
                v161 = v92;
                v162 = v94;
                v163 = 6;
                goto LABEL_196;
              case 8u:
                v390 = *v93;
                *v92 = *v93;
                v391 = v390;
                v161 = v92;
                v162 = v94;
                v163 = 8;
                goto LABEL_196;
              case 9u:
                v392 = *v93;
                *v92 = *v93;
                v393 = v392;
                v161 = v92;
                v162 = v94;
                v163 = 9;
LABEL_196:
                swift_storeEnumTagMultiPayload(v161, v162, v163);
                break;
              default:
                memcpy(v92, v93, *(_QWORD *)(v95 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
          }
          v101 = a1;
          v102 = v7;
          v103 = 4;
          goto LABEL_199;
        case 5:
          *a1 = *a2;
          *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
          *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
          *((_BYTE *)a1 + 10) = *((_BYTE *)a2 + 10);
          v99 = a2[2];
          a1[2] = v99;
          v100 = v99;
          v101 = a1;
          v102 = v7;
          v103 = 5;
          goto LABEL_199;
        case 6:
          v116 = *a2;
          *a1 = *a2;
          v117 = v116;
          v101 = a1;
          v102 = v7;
          v103 = 6;
          goto LABEL_199;
        case 7:
          v104 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v105 = *(_QWORD *)(v104 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v105 + 48))(a2, 1, v104))
          {
            v106 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
          }
          else
          {
            v164 = *a2;
            *a1 = *a2;
            v165 = *(int *)(v104 + 20);
            v404 = (char *)a1 + v165;
            v166 = (char *)a2 + v165;
            v167 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v168 = v7;
            v169 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v167 - 8) + 16);
            v170 = swift_bridgeObjectRetain(v164);
            v169(v404, v166, v167, v170);
            v7 = v168;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v105 + 56))(a1, 0, 1, v104);
          }
          v171 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v172 = (void **)((char *)a1 + v171);
          v173 = (void **)((char *)a2 + v171);
          if (v173[1])
          {
            *v172 = *v173;
            v174 = v173[1];
            v172[1] = v174;
            v175 = (void *)v173[2];
            v172[2] = v175;
            swift_bridgeObjectRetain(v174);
            v176 = v175;
          }
          else
          {
            v178 = *(_OWORD *)v173;
            v172[2] = v173[2];
            *(_OWORD *)v172 = v178;
          }
          v101 = a1;
          v102 = v7;
          v103 = 7;
          goto LABEL_199;
        case 8:
          v118 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v119 = *(_QWORD *)(v118 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v119 + 48))(a2, 1, v118))
          {
            v120 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
          }
          else
          {
            v181 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(a1, a2, v181);
            *((_BYTE *)a1 + *(int *)(v118 + 20)) = *((_BYTE *)a2 + *(int *)(v118 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v119 + 56))(a1, 0, 1, v118);
          }
          v182 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)a1 + *(int *)(v182 + 20)) = *(void **)((char *)a2 + *(int *)(v182 + 20));
          v101 = a1;
          v102 = v7;
          v103 = 8;
          goto LABEL_199;
        case 9:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v107 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v108 = (char *)a1 + v107;
          v109 = (char *)a2 + v107;
          v110 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16))(v108, v109, v110);
          v101 = a1;
          v102 = v7;
          v103 = 9;
LABEL_199:
          swift_storeEnumTagMultiPayload(v101, v102, v103);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      v300 = 0;
    }
LABEL_201:
    swift_storeEnumTagMultiPayload(a1, a3, v300);
  }
  return a1;
}

_QWORD *sub_1003CA4D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int *v137;
  uint64_t v138;
  _OWORD *v139;
  _OWORD *v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int *v149;
  uint64_t v150;
  _OWORD *v151;
  _OWORD *v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int *v161;
  uint64_t v162;
  _OWORD *v163;
  _OWORD *v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  int *v174;
  uint64_t v175;
  _OWORD *v176;
  _OWORD *v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v8 = swift_getEnumCaseMultiPayload(a2, v7);
  if (EnumCaseMultiPayload == 1)
  {
    switch(v8)
    {
      case 0:
        v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v9))
        {
          case 2u:
            v10 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
            v11 = a1;
            v12 = v9;
            v13 = 2;
            goto LABEL_61;
          case 3u:
            v133 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v133 - 8) + 32))(a1, a2, v133);
            v11 = a1;
            v12 = v9;
            v13 = 3;
            goto LABEL_61;
          case 4u:
            v134 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(a1, a2, v134);
            v11 = a1;
            v12 = v9;
            v13 = 4;
            goto LABEL_61;
          case 5u:
            v135 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v135 - 8) + 32))(a1, a2, v135);
            v11 = a1;
            v12 = v9;
            v13 = 5;
            goto LABEL_61;
          case 6u:
            v136 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(a1, a2, v136);
            v11 = a1;
            v12 = v9;
            v13 = 6;
LABEL_61:
            swift_storeEnumTagMultiPayload(v11, v12, v13);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
            break;
        }
        v137 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v138 = v137[5];
        v139 = (_OWORD *)((char *)a1 + v138);
        v140 = (_OWORD *)((char *)a2 + v138);
        v141 = v140[3];
        v139[2] = v140[2];
        v139[3] = v141;
        v142 = v140[1];
        *v139 = *v140;
        v139[1] = v142;
        *(_OWORD *)((char *)v139 + 106) = *(_OWORD *)((char *)v140 + 106);
        v143 = v140[6];
        v144 = v140[4];
        v139[5] = v140[5];
        v139[6] = v143;
        v139[4] = v144;
        *((_BYTE *)a1 + v137[6]) = *((_BYTE *)a2 + v137[6]);
        *((_BYTE *)a1 + v137[7]) = *((_BYTE *)a2 + v137[7]);
        *((_BYTE *)a1 + v137[8]) = *((_BYTE *)a2 + v137[8]);
        *((_BYTE *)a1 + v137[9]) = *((_BYTE *)a2 + v137[9]);
        *((_BYTE *)a1 + v137[10]) = *((_BYTE *)a2 + v137[10]);
        *(_QWORD *)((char *)a1 + v137[11]) = *(_QWORD *)((char *)a2 + v137[11]);
        v52 = a1;
        v53 = v7;
        v54 = 0;
        goto LABEL_108;
      case 1:
        v19 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v19))
        {
          case 2u:
            v20 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
            v21 = a1;
            v22 = v19;
            v23 = 2;
            goto LABEL_75;
          case 3u:
            v157 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(a1, a2, v157);
            v21 = a1;
            v22 = v19;
            v23 = 3;
            goto LABEL_75;
          case 4u:
            v158 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(a1, a2, v158);
            v21 = a1;
            v22 = v19;
            v23 = 4;
            goto LABEL_75;
          case 5u:
            v159 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v159 - 8) + 32))(a1, a2, v159);
            v21 = a1;
            v22 = v19;
            v23 = 5;
            goto LABEL_75;
          case 6u:
            v160 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v160 - 8) + 32))(a1, a2, v160);
            v21 = a1;
            v22 = v19;
            v23 = 6;
LABEL_75:
            swift_storeEnumTagMultiPayload(v21, v22, v23);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
            break;
        }
        v161 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v162 = v161[5];
        v163 = (_OWORD *)((char *)a1 + v162);
        v164 = (_OWORD *)((char *)a2 + v162);
        v165 = v164[3];
        v163[2] = v164[2];
        v163[3] = v165;
        v166 = v164[1];
        *v163 = *v164;
        v163[1] = v166;
        *(_OWORD *)((char *)v163 + 106) = *(_OWORD *)((char *)v164 + 106);
        v167 = v164[6];
        v168 = v164[4];
        v163[5] = v164[5];
        v163[6] = v167;
        v163[4] = v168;
        *((_BYTE *)a1 + v161[6]) = *((_BYTE *)a2 + v161[6]);
        *((_BYTE *)a1 + v161[7]) = *((_BYTE *)a2 + v161[7]);
        *((_BYTE *)a1 + v161[8]) = *((_BYTE *)a2 + v161[8]);
        *((_BYTE *)a1 + v161[9]) = *((_BYTE *)a2 + v161[9]);
        *((_BYTE *)a1 + v161[10]) = *((_BYTE *)a2 + v161[10]);
        *(_QWORD *)((char *)a1 + v161[11]) = *(_QWORD *)((char *)a2 + v161[11]);
        v169 = 1;
        swift_storeEnumTagMultiPayload(a1, v7, 1);
        goto LABEL_136;
      case 2:
        *a1 = *a2;
        v24 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v25 = (char *)a1 + v24;
        v26 = (char *)a2 + v24;
        v27 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v28 = *(_QWORD *)(v27 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
        {
          v29 = sub_10002A750(&qword_100644980);
          memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v26, v27))
          {
            case 2u:
              v91 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v25, v26, v91);
              v92 = v25;
              v93 = v27;
              v94 = 2;
              goto LABEL_89;
            case 3u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 32))(v25, v26, v182);
              v92 = v25;
              v93 = v27;
              v94 = 3;
              goto LABEL_89;
            case 4u:
              v183 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v25, v26, v183);
              v92 = v25;
              v93 = v27;
              v94 = 4;
              goto LABEL_89;
            case 5u:
              v184 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v25, v26, v184);
              v92 = v25;
              v93 = v27;
              v94 = 5;
              goto LABEL_89;
            case 6u:
              v185 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v25, v26, v185);
              v92 = v25;
              v93 = v27;
              v94 = 6;
LABEL_89:
              swift_storeEnumTagMultiPayload(v92, v93, v94);
              break;
            default:
              memcpy(v25, v26, *(_QWORD *)(v28 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
        }
        v52 = a1;
        v53 = v7;
        v54 = 2;
        goto LABEL_108;
      case 3:
        *a1 = *a2;
        v30 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v31 = (char *)a1 + v30;
        v32 = (char *)a2 + v30;
        v33 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v34 = *(_QWORD *)(v33 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
        {
          v35 = sub_10002A750(&qword_100644980);
          memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v32, v33))
          {
            case 2u:
              v95 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v31, v32, v95);
              v96 = v31;
              v97 = v33;
              v98 = 2;
              goto LABEL_97;
            case 3u:
              v186 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v31, v32, v186);
              v96 = v31;
              v97 = v33;
              v98 = 3;
              goto LABEL_97;
            case 4u:
              v187 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v31, v32, v187);
              v96 = v31;
              v97 = v33;
              v98 = 4;
              goto LABEL_97;
            case 5u:
              v188 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v31, v32, v188);
              v96 = v31;
              v97 = v33;
              v98 = 5;
              goto LABEL_97;
            case 6u:
              v189 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(v31, v32, v189);
              v96 = v31;
              v97 = v33;
              v98 = 6;
LABEL_97:
              swift_storeEnumTagMultiPayload(v96, v97, v98);
              break;
            default:
              memcpy(v31, v32, *(_QWORD *)(v34 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
        }
        v52 = a1;
        v53 = v7;
        v54 = 3;
        goto LABEL_108;
      case 4:
        *a1 = *a2;
        v36 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v37 = (char *)a1 + v36;
        v38 = (char *)a2 + v36;
        v39 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v40 = *(_QWORD *)(v39 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
        {
          v41 = sub_10002A750(&qword_100644980);
          memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v38, v39))
          {
            case 2u:
              v99 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v37, v38, v99);
              v100 = v37;
              v101 = v39;
              v102 = 2;
              goto LABEL_105;
            case 3u:
              v190 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 32))(v37, v38, v190);
              v100 = v37;
              v101 = v39;
              v102 = 3;
              goto LABEL_105;
            case 4u:
              v191 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v37, v38, v191);
              v100 = v37;
              v101 = v39;
              v102 = 4;
              goto LABEL_105;
            case 5u:
              v192 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32))(v37, v38, v192);
              v100 = v37;
              v101 = v39;
              v102 = 5;
              goto LABEL_105;
            case 6u:
              v193 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v193 - 8) + 32))(v37, v38, v193);
              v100 = v37;
              v101 = v39;
              v102 = 6;
LABEL_105:
              swift_storeEnumTagMultiPayload(v100, v101, v102);
              break;
            default:
              memcpy(v37, v38, *(_QWORD *)(v40 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
        }
        v52 = a1;
        v53 = v7;
        v54 = 4;
        goto LABEL_108;
      case 7:
        v42 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v43 = *(_QWORD *)(v42 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v43 + 48))(a2, 1, v42))
        {
          v44 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v103 = *(int *)(v42 + 20);
          v104 = (char *)a1 + v103;
          v105 = (char *)a2 + v103;
          v106 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v104, v105, v106);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v43 + 56))(a1, 0, 1, v42);
        }
        v107 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v108 = (char *)a1 + v107;
        v109 = (char *)a2 + v107;
        *(_OWORD *)v108 = *(_OWORD *)v109;
        *((_QWORD *)v108 + 2) = *((_QWORD *)v109 + 2);
        v52 = a1;
        v53 = v7;
        v54 = 7;
        goto LABEL_108;
      case 8:
        v45 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v46 = *(_QWORD *)(v45 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v46 + 48))(a2, 1, v45))
        {
          v47 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          v110 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(a1, a2, v110);
          *((_BYTE *)a1 + *(int *)(v45 + 20)) = *((_BYTE *)a2 + *(int *)(v45 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v46 + 56))(a1, 0, 1, v45);
        }
        v111 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)a1 + *(int *)(v111 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v111 + 20));
        v52 = a1;
        v53 = v7;
        v54 = 8;
        goto LABEL_108;
      case 9:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v48 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v49 = (char *)a1 + v48;
        v50 = (char *)a2 + v48;
        v51 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
        v52 = a1;
        v53 = v7;
        v54 = 9;
LABEL_108:
        swift_storeEnumTagMultiPayload(v52, v53, v54);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
    v169 = 1;
  }
  else
  {
    switch(v8)
    {
      case 0:
        v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v14))
        {
          case 2u:
            v15 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
            v16 = a1;
            v17 = v14;
            v18 = 2;
            goto LABEL_68;
          case 3u:
            v145 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(a1, a2, v145);
            v16 = a1;
            v17 = v14;
            v18 = 3;
            goto LABEL_68;
          case 4u:
            v146 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(a1, a2, v146);
            v16 = a1;
            v17 = v14;
            v18 = 4;
            goto LABEL_68;
          case 5u:
            v147 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v147 - 8) + 32))(a1, a2, v147);
            v16 = a1;
            v17 = v14;
            v18 = 5;
            goto LABEL_68;
          case 6u:
            v148 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v148 - 8) + 32))(a1, a2, v148);
            v16 = a1;
            v17 = v14;
            v18 = 6;
LABEL_68:
            swift_storeEnumTagMultiPayload(v16, v17, v18);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
            break;
        }
        v149 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v150 = v149[5];
        v151 = (_OWORD *)((char *)a1 + v150);
        v152 = (_OWORD *)((char *)a2 + v150);
        v153 = v152[3];
        v151[2] = v152[2];
        v151[3] = v153;
        v154 = v152[1];
        *v151 = *v152;
        v151[1] = v154;
        *(_OWORD *)((char *)v151 + 106) = *(_OWORD *)((char *)v152 + 106);
        v155 = v152[6];
        v156 = v152[4];
        v151[5] = v152[5];
        v151[6] = v155;
        v151[4] = v156;
        *((_BYTE *)a1 + v149[6]) = *((_BYTE *)a2 + v149[6]);
        *((_BYTE *)a1 + v149[7]) = *((_BYTE *)a2 + v149[7]);
        *((_BYTE *)a1 + v149[8]) = *((_BYTE *)a2 + v149[8]);
        *((_BYTE *)a1 + v149[9]) = *((_BYTE *)a2 + v149[9]);
        *((_BYTE *)a1 + v149[10]) = *((_BYTE *)a2 + v149[10]);
        *(_QWORD *)((char *)a1 + v149[11]) = *(_QWORD *)((char *)a2 + v149[11]);
        v88 = a1;
        v89 = v7;
        v90 = 0;
        goto LABEL_134;
      case 1:
        v55 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v55))
        {
          case 2u:
            v56 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(a1, a2, v56);
            v57 = a1;
            v58 = v55;
            v59 = 2;
            goto LABEL_82;
          case 3u:
            v170 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(a1, a2, v170);
            v57 = a1;
            v58 = v55;
            v59 = 3;
            goto LABEL_82;
          case 4u:
            v171 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v171 - 8) + 32))(a1, a2, v171);
            v57 = a1;
            v58 = v55;
            v59 = 4;
            goto LABEL_82;
          case 5u:
            v172 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v172 - 8) + 32))(a1, a2, v172);
            v57 = a1;
            v58 = v55;
            v59 = 5;
            goto LABEL_82;
          case 6u:
            v173 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v173 - 8) + 32))(a1, a2, v173);
            v57 = a1;
            v58 = v55;
            v59 = 6;
LABEL_82:
            swift_storeEnumTagMultiPayload(v57, v58, v59);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
            break;
        }
        v174 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v175 = v174[5];
        v176 = (_OWORD *)((char *)a1 + v175);
        v177 = (_OWORD *)((char *)a2 + v175);
        v178 = v177[3];
        v176[2] = v177[2];
        v176[3] = v178;
        v179 = v177[1];
        *v176 = *v177;
        v176[1] = v179;
        *(_OWORD *)((char *)v176 + 106) = *(_OWORD *)((char *)v177 + 106);
        v180 = v177[6];
        v181 = v177[4];
        v176[5] = v177[5];
        v176[6] = v180;
        v176[4] = v181;
        *((_BYTE *)a1 + v174[6]) = *((_BYTE *)a2 + v174[6]);
        *((_BYTE *)a1 + v174[7]) = *((_BYTE *)a2 + v174[7]);
        *((_BYTE *)a1 + v174[8]) = *((_BYTE *)a2 + v174[8]);
        *((_BYTE *)a1 + v174[9]) = *((_BYTE *)a2 + v174[9]);
        *((_BYTE *)a1 + v174[10]) = *((_BYTE *)a2 + v174[10]);
        *(_QWORD *)((char *)a1 + v174[11]) = *(_QWORD *)((char *)a2 + v174[11]);
        v88 = a1;
        v89 = v7;
        v90 = 1;
        goto LABEL_134;
      case 2:
        *a1 = *a2;
        v60 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v61 = (char *)a1 + v60;
        v62 = (char *)a2 + v60;
        v63 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v64 = *(_QWORD *)(v63 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
        {
          v65 = sub_10002A750(&qword_100644980);
          memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v62, v63))
          {
            case 2u:
              v112 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v61, v62, v112);
              v113 = v61;
              v114 = v63;
              v115 = 2;
              goto LABEL_115;
            case 3u:
              v194 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 32))(v61, v62, v194);
              v113 = v61;
              v114 = v63;
              v115 = 3;
              goto LABEL_115;
            case 4u:
              v195 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v61, v62, v195);
              v113 = v61;
              v114 = v63;
              v115 = 4;
              goto LABEL_115;
            case 5u:
              v196 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v61, v62, v196);
              v113 = v61;
              v114 = v63;
              v115 = 5;
              goto LABEL_115;
            case 6u:
              v197 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32))(v61, v62, v197);
              v113 = v61;
              v114 = v63;
              v115 = 6;
LABEL_115:
              swift_storeEnumTagMultiPayload(v113, v114, v115);
              break;
            default:
              memcpy(v61, v62, *(_QWORD *)(v64 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
        }
        v88 = a1;
        v89 = v7;
        v90 = 2;
        goto LABEL_134;
      case 3:
        *a1 = *a2;
        v66 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v67 = (char *)a1 + v66;
        v68 = (char *)a2 + v66;
        v69 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v70 = *(_QWORD *)(v69 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
        {
          v71 = sub_10002A750(&qword_100644980);
          memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v68, v69))
          {
            case 2u:
              v116 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v67, v68, v116);
              v117 = v67;
              v118 = v69;
              v119 = 2;
              goto LABEL_123;
            case 3u:
              v198 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v67, v68, v198);
              v117 = v67;
              v118 = v69;
              v119 = 3;
              goto LABEL_123;
            case 4u:
              v199 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v67, v68, v199);
              v117 = v67;
              v118 = v69;
              v119 = 4;
              goto LABEL_123;
            case 5u:
              v200 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v67, v68, v200);
              v117 = v67;
              v118 = v69;
              v119 = 5;
              goto LABEL_123;
            case 6u:
              v201 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v67, v68, v201);
              v117 = v67;
              v118 = v69;
              v119 = 6;
LABEL_123:
              swift_storeEnumTagMultiPayload(v117, v118, v119);
              break;
            default:
              memcpy(v67, v68, *(_QWORD *)(v70 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
        }
        v88 = a1;
        v89 = v7;
        v90 = 3;
        goto LABEL_134;
      case 4:
        *a1 = *a2;
        v72 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v73 = (char *)a1 + v72;
        v74 = (char *)a2 + v72;
        v75 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v76 = *(_QWORD *)(v75 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
        {
          v77 = sub_10002A750(&qword_100644980);
          memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v74, v75))
          {
            case 2u:
              v120 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 32))(v73, v74, v120);
              v121 = v73;
              v122 = v75;
              v123 = 2;
              goto LABEL_131;
            case 3u:
              v202 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v73, v74, v202);
              v121 = v73;
              v122 = v75;
              v123 = 3;
              goto LABEL_131;
            case 4u:
              v203 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v73, v74, v203);
              v121 = v73;
              v122 = v75;
              v123 = 4;
              goto LABEL_131;
            case 5u:
              v204 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v204 - 8) + 32))(v73, v74, v204);
              v121 = v73;
              v122 = v75;
              v123 = 5;
              goto LABEL_131;
            case 6u:
              v205 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v205 - 8) + 32))(v73, v74, v205);
              v121 = v73;
              v122 = v75;
              v123 = 6;
LABEL_131:
              swift_storeEnumTagMultiPayload(v121, v122, v123);
              break;
            default:
              memcpy(v73, v74, *(_QWORD *)(v76 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
        }
        v88 = a1;
        v89 = v7;
        v90 = 4;
        goto LABEL_134;
      case 7:
        v78 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v79 = *(_QWORD *)(v78 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v79 + 48))(a2, 1, v78))
        {
          v80 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v124 = *(int *)(v78 + 20);
          v125 = (char *)a1 + v124;
          v126 = (char *)a2 + v124;
          v127 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 32))(v125, v126, v127);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v79 + 56))(a1, 0, 1, v78);
        }
        v128 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v129 = (char *)a1 + v128;
        v130 = (char *)a2 + v128;
        *(_OWORD *)v129 = *(_OWORD *)v130;
        *((_QWORD *)v129 + 2) = *((_QWORD *)v130 + 2);
        v88 = a1;
        v89 = v7;
        v90 = 7;
        goto LABEL_134;
      case 8:
        v81 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v82 = *(_QWORD *)(v81 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v82 + 48))(a2, 1, v81))
        {
          v83 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        }
        else
        {
          v131 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v131 - 8) + 32))(a1, a2, v131);
          *((_BYTE *)a1 + *(int *)(v81 + 20)) = *((_BYTE *)a2 + *(int *)(v81 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v82 + 56))(a1, 0, 1, v81);
        }
        v132 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)a1 + *(int *)(v132 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v132 + 20));
        v88 = a1;
        v89 = v7;
        v90 = 8;
        goto LABEL_134;
      case 9:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v84 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v85 = (char *)a1 + v84;
        v86 = (char *)a2 + v84;
        v87 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v85, v86, v87);
        v88 = a1;
        v89 = v7;
        v90 = 9;
LABEL_134:
        swift_storeEnumTagMultiPayload(v88, v89, v90);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
    v169 = 0;
  }
LABEL_136:
  swift_storeEnumTagMultiPayload(a1, a3, v169);
  return a1;
}

_QWORD *sub_1003CBB68(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int *v137;
  uint64_t v138;
  _OWORD *v139;
  _OWORD *v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int *v149;
  uint64_t v150;
  _OWORD *v151;
  _OWORD *v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int *v161;
  uint64_t v162;
  _OWORD *v163;
  _OWORD *v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  int *v174;
  uint64_t v175;
  _OWORD *v176;
  _OWORD *v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRRemindersListSectionCreationLocation);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v8 = swift_getEnumCaseMultiPayload(a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      switch(v8)
      {
        case 0:
          v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v9))
          {
            case 2u:
              v10 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
              v11 = a1;
              v12 = v9;
              v13 = 2;
              goto LABEL_62;
            case 3u:
              v133 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v133 - 8) + 32))(a1, a2, v133);
              v11 = a1;
              v12 = v9;
              v13 = 3;
              goto LABEL_62;
            case 4u:
              v134 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(a1, a2, v134);
              v11 = a1;
              v12 = v9;
              v13 = 4;
              goto LABEL_62;
            case 5u:
              v135 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v135 - 8) + 32))(a1, a2, v135);
              v11 = a1;
              v12 = v9;
              v13 = 5;
              goto LABEL_62;
            case 6u:
              v136 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(a1, a2, v136);
              v11 = a1;
              v12 = v9;
              v13 = 6;
LABEL_62:
              swift_storeEnumTagMultiPayload(v11, v12, v13);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
              break;
          }
          v137 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v138 = v137[5];
          v139 = (_OWORD *)((char *)a1 + v138);
          v140 = (_OWORD *)((char *)a2 + v138);
          v141 = v140[3];
          v139[2] = v140[2];
          v139[3] = v141;
          v142 = v140[1];
          *v139 = *v140;
          v139[1] = v142;
          *(_OWORD *)((char *)v139 + 106) = *(_OWORD *)((char *)v140 + 106);
          v143 = v140[6];
          v144 = v140[4];
          v139[5] = v140[5];
          v139[6] = v143;
          v139[4] = v144;
          *((_BYTE *)a1 + v137[6]) = *((_BYTE *)a2 + v137[6]);
          *((_BYTE *)a1 + v137[7]) = *((_BYTE *)a2 + v137[7]);
          *((_BYTE *)a1 + v137[8]) = *((_BYTE *)a2 + v137[8]);
          *((_BYTE *)a1 + v137[9]) = *((_BYTE *)a2 + v137[9]);
          *((_BYTE *)a1 + v137[10]) = *((_BYTE *)a2 + v137[10]);
          *(_QWORD *)((char *)a1 + v137[11]) = *(_QWORD *)((char *)a2 + v137[11]);
          v52 = a1;
          v53 = v7;
          v54 = 0;
          goto LABEL_109;
        case 1:
          v19 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v19))
          {
            case 2u:
              v20 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
              v21 = a1;
              v22 = v19;
              v23 = 2;
              goto LABEL_76;
            case 3u:
              v157 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(a1, a2, v157);
              v21 = a1;
              v22 = v19;
              v23 = 3;
              goto LABEL_76;
            case 4u:
              v158 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(a1, a2, v158);
              v21 = a1;
              v22 = v19;
              v23 = 4;
              goto LABEL_76;
            case 5u:
              v159 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v159 - 8) + 32))(a1, a2, v159);
              v21 = a1;
              v22 = v19;
              v23 = 5;
              goto LABEL_76;
            case 6u:
              v160 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v160 - 8) + 32))(a1, a2, v160);
              v21 = a1;
              v22 = v19;
              v23 = 6;
LABEL_76:
              swift_storeEnumTagMultiPayload(v21, v22, v23);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
              break;
          }
          v161 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v162 = v161[5];
          v163 = (_OWORD *)((char *)a1 + v162);
          v164 = (_OWORD *)((char *)a2 + v162);
          v165 = v164[3];
          v163[2] = v164[2];
          v163[3] = v165;
          v166 = v164[1];
          *v163 = *v164;
          v163[1] = v166;
          *(_OWORD *)((char *)v163 + 106) = *(_OWORD *)((char *)v164 + 106);
          v167 = v164[6];
          v168 = v164[4];
          v163[5] = v164[5];
          v163[6] = v167;
          v163[4] = v168;
          *((_BYTE *)a1 + v161[6]) = *((_BYTE *)a2 + v161[6]);
          *((_BYTE *)a1 + v161[7]) = *((_BYTE *)a2 + v161[7]);
          *((_BYTE *)a1 + v161[8]) = *((_BYTE *)a2 + v161[8]);
          *((_BYTE *)a1 + v161[9]) = *((_BYTE *)a2 + v161[9]);
          *((_BYTE *)a1 + v161[10]) = *((_BYTE *)a2 + v161[10]);
          *(_QWORD *)((char *)a1 + v161[11]) = *(_QWORD *)((char *)a2 + v161[11]);
          v169 = 1;
          swift_storeEnumTagMultiPayload(a1, v7, 1);
          goto LABEL_137;
        case 2:
          *a1 = *a2;
          v24 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v25 = (char *)a1 + v24;
          v26 = (char *)a2 + v24;
          v27 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v28 = *(_QWORD *)(v27 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
          {
            v29 = sub_10002A750(&qword_100644980);
            memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v26, v27))
            {
              case 2u:
                v91 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v25, v26, v91);
                v92 = v25;
                v93 = v27;
                v94 = 2;
                goto LABEL_90;
              case 3u:
                v182 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 32))(v25, v26, v182);
                v92 = v25;
                v93 = v27;
                v94 = 3;
                goto LABEL_90;
              case 4u:
                v183 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v25, v26, v183);
                v92 = v25;
                v93 = v27;
                v94 = 4;
                goto LABEL_90;
              case 5u:
                v184 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v25, v26, v184);
                v92 = v25;
                v93 = v27;
                v94 = 5;
                goto LABEL_90;
              case 6u:
                v185 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v25, v26, v185);
                v92 = v25;
                v93 = v27;
                v94 = 6;
LABEL_90:
                swift_storeEnumTagMultiPayload(v92, v93, v94);
                break;
              default:
                memcpy(v25, v26, *(_QWORD *)(v28 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
          }
          v52 = a1;
          v53 = v7;
          v54 = 2;
          goto LABEL_109;
        case 3:
          *a1 = *a2;
          v30 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v31 = (char *)a1 + v30;
          v32 = (char *)a2 + v30;
          v33 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v34 = *(_QWORD *)(v33 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
          {
            v35 = sub_10002A750(&qword_100644980);
            memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v32, v33))
            {
              case 2u:
                v95 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v31, v32, v95);
                v96 = v31;
                v97 = v33;
                v98 = 2;
                goto LABEL_98;
              case 3u:
                v186 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v31, v32, v186);
                v96 = v31;
                v97 = v33;
                v98 = 3;
                goto LABEL_98;
              case 4u:
                v187 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v31, v32, v187);
                v96 = v31;
                v97 = v33;
                v98 = 4;
                goto LABEL_98;
              case 5u:
                v188 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v31, v32, v188);
                v96 = v31;
                v97 = v33;
                v98 = 5;
                goto LABEL_98;
              case 6u:
                v189 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(v31, v32, v189);
                v96 = v31;
                v97 = v33;
                v98 = 6;
LABEL_98:
                swift_storeEnumTagMultiPayload(v96, v97, v98);
                break;
              default:
                memcpy(v31, v32, *(_QWORD *)(v34 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
          }
          v52 = a1;
          v53 = v7;
          v54 = 3;
          goto LABEL_109;
        case 4:
          *a1 = *a2;
          v36 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v37 = (char *)a1 + v36;
          v38 = (char *)a2 + v36;
          v39 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v40 = *(_QWORD *)(v39 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
          {
            v41 = sub_10002A750(&qword_100644980);
            memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v38, v39))
            {
              case 2u:
                v99 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v37, v38, v99);
                v100 = v37;
                v101 = v39;
                v102 = 2;
                goto LABEL_106;
              case 3u:
                v190 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 32))(v37, v38, v190);
                v100 = v37;
                v101 = v39;
                v102 = 3;
                goto LABEL_106;
              case 4u:
                v191 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v37, v38, v191);
                v100 = v37;
                v101 = v39;
                v102 = 4;
                goto LABEL_106;
              case 5u:
                v192 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32))(v37, v38, v192);
                v100 = v37;
                v101 = v39;
                v102 = 5;
                goto LABEL_106;
              case 6u:
                v193 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v193 - 8) + 32))(v37, v38, v193);
                v100 = v37;
                v101 = v39;
                v102 = 6;
LABEL_106:
                swift_storeEnumTagMultiPayload(v100, v101, v102);
                break;
              default:
                memcpy(v37, v38, *(_QWORD *)(v40 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
          }
          v52 = a1;
          v53 = v7;
          v54 = 4;
          goto LABEL_109;
        case 7:
          v42 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v43 = *(_QWORD *)(v42 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v43 + 48))(a2, 1, v42))
          {
            v44 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            v103 = *(int *)(v42 + 20);
            v104 = (char *)a1 + v103;
            v105 = (char *)a2 + v103;
            v106 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v104, v105, v106);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v43 + 56))(a1, 0, 1, v42);
          }
          v107 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v108 = (char *)a1 + v107;
          v109 = (char *)a2 + v107;
          *(_OWORD *)v108 = *(_OWORD *)v109;
          *((_QWORD *)v108 + 2) = *((_QWORD *)v109 + 2);
          v52 = a1;
          v53 = v7;
          v54 = 7;
          goto LABEL_109;
        case 8:
          v45 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v46 = *(_QWORD *)(v45 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v46 + 48))(a2, 1, v45))
          {
            v47 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
          }
          else
          {
            v110 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(a1, a2, v110);
            *((_BYTE *)a1 + *(int *)(v45 + 20)) = *((_BYTE *)a2 + *(int *)(v45 + 20));
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v46 + 56))(a1, 0, 1, v45);
          }
          v111 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)((char *)a1 + *(int *)(v111 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v111 + 20));
          v52 = a1;
          v53 = v7;
          v54 = 8;
          goto LABEL_109;
        case 9:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v48 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v49 = (char *)a1 + v48;
          v50 = (char *)a2 + v48;
          v51 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
          v52 = a1;
          v53 = v7;
          v54 = 9;
LABEL_109:
          swift_storeEnumTagMultiPayload(v52, v53, v54);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      v169 = 1;
    }
    else
    {
      switch(v8)
      {
        case 0:
          v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v14))
          {
            case 2u:
              v15 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
              v16 = a1;
              v17 = v14;
              v18 = 2;
              goto LABEL_69;
            case 3u:
              v145 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(a1, a2, v145);
              v16 = a1;
              v17 = v14;
              v18 = 3;
              goto LABEL_69;
            case 4u:
              v146 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(a1, a2, v146);
              v16 = a1;
              v17 = v14;
              v18 = 4;
              goto LABEL_69;
            case 5u:
              v147 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v147 - 8) + 32))(a1, a2, v147);
              v16 = a1;
              v17 = v14;
              v18 = 5;
              goto LABEL_69;
            case 6u:
              v148 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v148 - 8) + 32))(a1, a2, v148);
              v16 = a1;
              v17 = v14;
              v18 = 6;
LABEL_69:
              swift_storeEnumTagMultiPayload(v16, v17, v18);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
              break;
          }
          v149 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v150 = v149[5];
          v151 = (_OWORD *)((char *)a1 + v150);
          v152 = (_OWORD *)((char *)a2 + v150);
          v153 = v152[3];
          v151[2] = v152[2];
          v151[3] = v153;
          v154 = v152[1];
          *v151 = *v152;
          v151[1] = v154;
          *(_OWORD *)((char *)v151 + 106) = *(_OWORD *)((char *)v152 + 106);
          v155 = v152[6];
          v156 = v152[4];
          v151[5] = v152[5];
          v151[6] = v155;
          v151[4] = v156;
          *((_BYTE *)a1 + v149[6]) = *((_BYTE *)a2 + v149[6]);
          *((_BYTE *)a1 + v149[7]) = *((_BYTE *)a2 + v149[7]);
          *((_BYTE *)a1 + v149[8]) = *((_BYTE *)a2 + v149[8]);
          *((_BYTE *)a1 + v149[9]) = *((_BYTE *)a2 + v149[9]);
          *((_BYTE *)a1 + v149[10]) = *((_BYTE *)a2 + v149[10]);
          *(_QWORD *)((char *)a1 + v149[11]) = *(_QWORD *)((char *)a2 + v149[11]);
          v88 = a1;
          v89 = v7;
          v90 = 0;
          goto LABEL_135;
        case 1:
          v55 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v55))
          {
            case 2u:
              v56 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(a1, a2, v56);
              v57 = a1;
              v58 = v55;
              v59 = 2;
              goto LABEL_83;
            case 3u:
              v170 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(a1, a2, v170);
              v57 = a1;
              v58 = v55;
              v59 = 3;
              goto LABEL_83;
            case 4u:
              v171 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v171 - 8) + 32))(a1, a2, v171);
              v57 = a1;
              v58 = v55;
              v59 = 4;
              goto LABEL_83;
            case 5u:
              v172 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v172 - 8) + 32))(a1, a2, v172);
              v57 = a1;
              v58 = v55;
              v59 = 5;
              goto LABEL_83;
            case 6u:
              v173 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v173 - 8) + 32))(a1, a2, v173);
              v57 = a1;
              v58 = v55;
              v59 = 6;
LABEL_83:
              swift_storeEnumTagMultiPayload(v57, v58, v59);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
              break;
          }
          v174 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v175 = v174[5];
          v176 = (_OWORD *)((char *)a1 + v175);
          v177 = (_OWORD *)((char *)a2 + v175);
          v178 = v177[3];
          v176[2] = v177[2];
          v176[3] = v178;
          v179 = v177[1];
          *v176 = *v177;
          v176[1] = v179;
          *(_OWORD *)((char *)v176 + 106) = *(_OWORD *)((char *)v177 + 106);
          v180 = v177[6];
          v181 = v177[4];
          v176[5] = v177[5];
          v176[6] = v180;
          v176[4] = v181;
          *((_BYTE *)a1 + v174[6]) = *((_BYTE *)a2 + v174[6]);
          *((_BYTE *)a1 + v174[7]) = *((_BYTE *)a2 + v174[7]);
          *((_BYTE *)a1 + v174[8]) = *((_BYTE *)a2 + v174[8]);
          *((_BYTE *)a1 + v174[9]) = *((_BYTE *)a2 + v174[9]);
          *((_BYTE *)a1 + v174[10]) = *((_BYTE *)a2 + v174[10]);
          *(_QWORD *)((char *)a1 + v174[11]) = *(_QWORD *)((char *)a2 + v174[11]);
          v88 = a1;
          v89 = v7;
          v90 = 1;
          goto LABEL_135;
        case 2:
          *a1 = *a2;
          v60 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v61 = (char *)a1 + v60;
          v62 = (char *)a2 + v60;
          v63 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v64 = *(_QWORD *)(v63 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
          {
            v65 = sub_10002A750(&qword_100644980);
            memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v62, v63))
            {
              case 2u:
                v112 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v61, v62, v112);
                v113 = v61;
                v114 = v63;
                v115 = 2;
                goto LABEL_116;
              case 3u:
                v194 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 32))(v61, v62, v194);
                v113 = v61;
                v114 = v63;
                v115 = 3;
                goto LABEL_116;
              case 4u:
                v195 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v61, v62, v195);
                v113 = v61;
                v114 = v63;
                v115 = 4;
                goto LABEL_116;
              case 5u:
                v196 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v61, v62, v196);
                v113 = v61;
                v114 = v63;
                v115 = 5;
                goto LABEL_116;
              case 6u:
                v197 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32))(v61, v62, v197);
                v113 = v61;
                v114 = v63;
                v115 = 6;
LABEL_116:
                swift_storeEnumTagMultiPayload(v113, v114, v115);
                break;
              default:
                memcpy(v61, v62, *(_QWORD *)(v64 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
          }
          v88 = a1;
          v89 = v7;
          v90 = 2;
          goto LABEL_135;
        case 3:
          *a1 = *a2;
          v66 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v67 = (char *)a1 + v66;
          v68 = (char *)a2 + v66;
          v69 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v70 = *(_QWORD *)(v69 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
          {
            v71 = sub_10002A750(&qword_100644980);
            memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v68, v69))
            {
              case 2u:
                v116 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v67, v68, v116);
                v117 = v67;
                v118 = v69;
                v119 = 2;
                goto LABEL_124;
              case 3u:
                v198 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v67, v68, v198);
                v117 = v67;
                v118 = v69;
                v119 = 3;
                goto LABEL_124;
              case 4u:
                v199 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v67, v68, v199);
                v117 = v67;
                v118 = v69;
                v119 = 4;
                goto LABEL_124;
              case 5u:
                v200 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v67, v68, v200);
                v117 = v67;
                v118 = v69;
                v119 = 5;
                goto LABEL_124;
              case 6u:
                v201 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v67, v68, v201);
                v117 = v67;
                v118 = v69;
                v119 = 6;
LABEL_124:
                swift_storeEnumTagMultiPayload(v117, v118, v119);
                break;
              default:
                memcpy(v67, v68, *(_QWORD *)(v70 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
          }
          v88 = a1;
          v89 = v7;
          v90 = 3;
          goto LABEL_135;
        case 4:
          *a1 = *a2;
          v72 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v73 = (char *)a1 + v72;
          v74 = (char *)a2 + v72;
          v75 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v76 = *(_QWORD *)(v75 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
          {
            v77 = sub_10002A750(&qword_100644980);
            memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v74, v75))
            {
              case 2u:
                v120 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 32))(v73, v74, v120);
                v121 = v73;
                v122 = v75;
                v123 = 2;
                goto LABEL_132;
              case 3u:
                v202 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v73, v74, v202);
                v121 = v73;
                v122 = v75;
                v123 = 3;
                goto LABEL_132;
              case 4u:
                v203 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v73, v74, v203);
                v121 = v73;
                v122 = v75;
                v123 = 4;
                goto LABEL_132;
              case 5u:
                v204 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v204 - 8) + 32))(v73, v74, v204);
                v121 = v73;
                v122 = v75;
                v123 = 5;
                goto LABEL_132;
              case 6u:
                v205 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v205 - 8) + 32))(v73, v74, v205);
                v121 = v73;
                v122 = v75;
                v123 = 6;
LABEL_132:
                swift_storeEnumTagMultiPayload(v121, v122, v123);
                break;
              default:
                memcpy(v73, v74, *(_QWORD *)(v76 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
          }
          v88 = a1;
          v89 = v7;
          v90 = 4;
          goto LABEL_135;
        case 7:
          v78 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v79 = *(_QWORD *)(v78 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v79 + 48))(a2, 1, v78))
          {
            v80 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            v124 = *(int *)(v78 + 20);
            v125 = (char *)a1 + v124;
            v126 = (char *)a2 + v124;
            v127 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 32))(v125, v126, v127);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v79 + 56))(a1, 0, 1, v78);
          }
          v128 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v129 = (char *)a1 + v128;
          v130 = (char *)a2 + v128;
          *(_OWORD *)v129 = *(_OWORD *)v130;
          *((_QWORD *)v129 + 2) = *((_QWORD *)v130 + 2);
          v88 = a1;
          v89 = v7;
          v90 = 7;
          goto LABEL_135;
        case 8:
          v81 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v82 = *(_QWORD *)(v81 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v82 + 48))(a2, 1, v81))
          {
            v83 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
          }
          else
          {
            v131 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v131 - 8) + 32))(a1, a2, v131);
            *((_BYTE *)a1 + *(int *)(v81 + 20)) = *((_BYTE *)a2 + *(int *)(v81 + 20));
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v82 + 56))(a1, 0, 1, v81);
          }
          v132 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)((char *)a1 + *(int *)(v132 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v132 + 20));
          v88 = a1;
          v89 = v7;
          v90 = 8;
          goto LABEL_135;
        case 9:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v84 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v85 = (char *)a1 + v84;
          v86 = (char *)a2 + v84;
          v87 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v85, v86, v87);
          v88 = a1;
          v89 = v7;
          v90 = 9;
LABEL_135:
          swift_storeEnumTagMultiPayload(v88, v89, v90);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      v169 = 0;
    }
LABEL_137:
    swift_storeEnumTagMultiPayload(a1, a3, v169);
  }
  return a1;
}

void **sub_1003CD210(void **a1, void **a2, uint64_t a3)
{
  void **v3;
  int v5;
  uint64_t v6;
  void *v7;
  id v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  int v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  void *v50;
  id v51;
  void **v53;
  void **v54;

  v3 = a2;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = (char *)*a2;
    *a1 = *a2;
    a1 = (void **)&v12[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(v3, v6))
    {
      case 1u:
        v7 = *v3;
        *a1 = *v3;
        v8 = v7;
        v9 = a1;
        v10 = v6;
        v11 = 1;
        goto LABEL_13;
      case 2u:
        v13 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, v3, v13);
        v9 = a1;
        v10 = v6;
        v11 = 2;
        goto LABEL_13;
      case 3u:
        v14 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, v3, v14);
        v9 = a1;
        v10 = v6;
        v11 = 3;
        goto LABEL_13;
      case 4u:
        v15 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, v3, v15);
        v9 = a1;
        v10 = v6;
        v11 = 4;
        goto LABEL_13;
      case 5u:
        v16 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, v3, v16);
        v9 = a1;
        v10 = v6;
        v11 = 5;
        goto LABEL_13;
      case 6u:
        v17 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, v3, v17);
        v9 = a1;
        v10 = v6;
        v11 = 6;
        goto LABEL_13;
      case 8u:
        v18 = *v3;
        *a1 = *v3;
        v19 = v18;
        v9 = a1;
        v10 = v6;
        v11 = 8;
        goto LABEL_13;
      case 9u:
        v20 = *v3;
        *a1 = *v3;
        v21 = v20;
        v9 = a1;
        v10 = v6;
        v11 = 9;
LABEL_13:
        swift_storeEnumTagMultiPayload(v9, v10, v11);
        break;
      default:
        memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
    v22 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
    v23 = v22[5];
    v24 = (char *)a1 + v23;
    v25 = (char *)v3 + v23;
    v26 = *(uint64_t *)((char *)v3 + v23 + 8);
    if (v26)
    {
      v53 = a1;
      v54 = v3;
      *(_QWORD *)v24 = *(_QWORD *)v25;
      *((_QWORD *)v24 + 1) = v26;
      v27 = (void *)*((_QWORD *)v25 + 2);
      v28 = *((_QWORD *)v25 + 3);
      v29 = *((_QWORD *)v25 + 4);
      v30 = *((_QWORD *)v25 + 5);
      v32 = *((_QWORD *)v25 + 6);
      v31 = *((_QWORD *)v25 + 7);
      v33 = v25[64];
      swift_bridgeObjectRetain(v26);
      sub_10003E1F0(v27, v28, v29, v30, v32, v31, v33);
      *((_QWORD *)v24 + 2) = v27;
      *((_QWORD *)v24 + 3) = v28;
      *((_QWORD *)v24 + 4) = v29;
      *((_QWORD *)v24 + 5) = v30;
      *((_QWORD *)v24 + 6) = v32;
      *((_QWORD *)v24 + 7) = v31;
      v24[64] = v33;
      *(_DWORD *)(v24 + 65) = *(_DWORD *)(v25 + 65);
      v34 = v25[120];
      if (v34 == 255)
      {
        v35 = *(_OWORD *)(v25 + 88);
        *(_OWORD *)(v24 + 72) = *(_OWORD *)(v25 + 72);
        *(_OWORD *)(v24 + 88) = v35;
        *(_OWORD *)(v24 + 104) = *(_OWORD *)(v25 + 104);
        v24[120] = v25[120];
      }
      else
      {
        v40 = (void *)*((_QWORD *)v25 + 9);
        v41 = *((_QWORD *)v25 + 10);
        v42 = *((_QWORD *)v25 + 11);
        v43 = *((_QWORD *)v25 + 12);
        v44 = *((_QWORD *)v25 + 13);
        v45 = *((_QWORD *)v25 + 14);
        v46 = v34 & 1;
        sub_10002B764(v40, v41, v42, v43, v44, v45, v34 & 1);
        *((_QWORD *)v24 + 9) = v40;
        *((_QWORD *)v24 + 10) = v41;
        *((_QWORD *)v24 + 11) = v42;
        *((_QWORD *)v24 + 12) = v43;
        *((_QWORD *)v24 + 13) = v44;
        *((_QWORD *)v24 + 14) = v45;
        v24[120] = v46;
      }
      v3 = v54;
      v39 = a3;
      a1 = v53;
      v24[121] = v25[121];
    }
    else
    {
      v36 = *((_OWORD *)v25 + 5);
      *((_OWORD *)v24 + 4) = *((_OWORD *)v25 + 4);
      *((_OWORD *)v24 + 5) = v36;
      *((_OWORD *)v24 + 6) = *((_OWORD *)v25 + 6);
      *(_OWORD *)(v24 + 106) = *(_OWORD *)(v25 + 106);
      v37 = *((_OWORD *)v25 + 1);
      *(_OWORD *)v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v37;
      v38 = *((_OWORD *)v25 + 3);
      *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
      *((_OWORD *)v24 + 3) = v38;
      v39 = a3;
    }
    *((_BYTE *)a1 + v22[6]) = *((_BYTE *)v3 + v22[6]);
    *((_BYTE *)a1 + v22[7]) = *((_BYTE *)v3 + v22[7]);
    *((_BYTE *)a1 + v22[8]) = *((_BYTE *)v3 + v22[8]);
    *((_BYTE *)a1 + v22[9]) = *((_BYTE *)v3 + v22[9]);
    *((_BYTE *)a1 + v22[10]) = *((_BYTE *)v3 + v22[10]);
    v47 = v22[11];
    v48 = *(void **)((char *)v3 + v47);
    *(void **)((char *)a1 + v47) = v48;
    v49 = *(int *)(v39 + 20);
    v50 = *(void **)((char *)v3 + v49);
    *(void **)((char *)a1 + v49) = v50;
    v51 = v48;
    swift_bridgeObjectRetain(v50);
  }
  return a1;
}

double sub_1003CD5AC(id *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  double result;

  v4 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  switch(swift_getEnumCaseMultiPayload(a1, v4))
  {
    case 1u:
    case 8u:
    case 9u:

      break;
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      v5 = type metadata accessor for Date(0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
      break;
    default:
      break;
  }
  v6 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v7 = (char *)a1 + *(int *)(v6 + 20);
  v8 = *((_QWORD *)v7 + 1);
  if (v8)
  {
    swift_bridgeObjectRelease(v8);
    sub_10003E2EC(*((void **)v7 + 2), *((_QWORD *)v7 + 3), *((_QWORD *)v7 + 4), *((_QWORD *)v7 + 5), *((_QWORD *)v7 + 6), *((_QWORD *)v7 + 7), v7[64]);
    v9 = v7[120];
    if (v9 != 255)
      sub_10002B328(*((void **)v7 + 9), *((_QWORD *)v7 + 10), *((_QWORD *)v7 + 11), *((_QWORD *)v7 + 12), *((_QWORD *)v7 + 13), *((_QWORD *)v7 + 14), v9 & 1);
  }

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(id *)((char *)a1 + *(int *)(a2 + 20))).n128_u64[0];
  return result;
}

void **sub_1003CD69C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  id v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  int v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  char v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v51;
  void **v52;
  void **v53;

  v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  switch(swift_getEnumCaseMultiPayload(a2, v6))
  {
    case 1u:
      v7 = *a2;
      *a1 = *a2;
      v8 = v7;
      v9 = a1;
      v10 = v6;
      v11 = 1;
      goto LABEL_11;
    case 2u:
      v12 = type metadata accessor for Date(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v9 = a1;
      v10 = v6;
      v11 = 2;
      goto LABEL_11;
    case 3u:
      v13 = type metadata accessor for Date(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v9 = a1;
      v10 = v6;
      v11 = 3;
      goto LABEL_11;
    case 4u:
      v14 = type metadata accessor for Date(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v9 = a1;
      v10 = v6;
      v11 = 4;
      goto LABEL_11;
    case 5u:
      v15 = type metadata accessor for Date(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      v9 = a1;
      v10 = v6;
      v11 = 5;
      goto LABEL_11;
    case 6u:
      v16 = type metadata accessor for Date(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
      v9 = a1;
      v10 = v6;
      v11 = 6;
      goto LABEL_11;
    case 8u:
      v17 = *a2;
      *a1 = *a2;
      v18 = v17;
      v9 = a1;
      v10 = v6;
      v11 = 8;
      goto LABEL_11;
    case 9u:
      v19 = *a2;
      *a1 = *a2;
      v20 = v19;
      v9 = a1;
      v10 = v6;
      v11 = 9;
LABEL_11:
      swift_storeEnumTagMultiPayload(v9, v10, v11);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v21 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v22 = v21[5];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = *(uint64_t *)((char *)a2 + v22 + 8);
  if (v25)
  {
    v51 = a3;
    v52 = a2;
    v53 = a1;
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *((_QWORD *)v23 + 1) = v25;
    v26 = (void *)*((_QWORD *)v24 + 2);
    v27 = *((_QWORD *)v24 + 3);
    v28 = *((_QWORD *)v24 + 4);
    v29 = *((_QWORD *)v24 + 5);
    v30 = *((_QWORD *)v24 + 6);
    v31 = *((_QWORD *)v24 + 7);
    v32 = v24[64];
    swift_bridgeObjectRetain(v25);
    sub_10003E1F0(v26, v27, v28, v29, v30, v31, v32);
    *((_QWORD *)v23 + 2) = v26;
    *((_QWORD *)v23 + 3) = v27;
    *((_QWORD *)v23 + 4) = v28;
    *((_QWORD *)v23 + 5) = v29;
    *((_QWORD *)v23 + 6) = v30;
    *((_QWORD *)v23 + 7) = v31;
    v23[64] = v32;
    *(_DWORD *)(v23 + 65) = *(_DWORD *)(v24 + 65);
    v33 = v24[120];
    if (v33 == 255)
    {
      v34 = *(_OWORD *)(v24 + 88);
      *(_OWORD *)(v23 + 72) = *(_OWORD *)(v24 + 72);
      *(_OWORD *)(v23 + 88) = v34;
      *(_OWORD *)(v23 + 104) = *(_OWORD *)(v24 + 104);
      v23[120] = v24[120];
    }
    else
    {
      v38 = v33 & 1;
      v39 = (void *)*((_QWORD *)v24 + 9);
      v40 = *((_QWORD *)v24 + 10);
      v41 = *((_QWORD *)v24 + 11);
      v42 = *((_QWORD *)v24 + 12);
      v43 = *((_QWORD *)v24 + 13);
      v44 = *((_QWORD *)v24 + 14);
      sub_10002B764(v39, v40, v41, v42, v43, v44, v33 & 1);
      *((_QWORD *)v23 + 9) = v39;
      *((_QWORD *)v23 + 10) = v40;
      *((_QWORD *)v23 + 11) = v41;
      *((_QWORD *)v23 + 12) = v42;
      *((_QWORD *)v23 + 13) = v43;
      *((_QWORD *)v23 + 14) = v44;
      v23[120] = v38;
    }
    a2 = v52;
    a1 = v53;
    a3 = v51;
    v23[121] = v24[121];
  }
  else
  {
    v35 = *((_OWORD *)v24 + 5);
    *((_OWORD *)v23 + 4) = *((_OWORD *)v24 + 4);
    *((_OWORD *)v23 + 5) = v35;
    *((_OWORD *)v23 + 6) = *((_OWORD *)v24 + 6);
    *(_OWORD *)(v23 + 106) = *(_OWORD *)(v24 + 106);
    v36 = *((_OWORD *)v24 + 1);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *((_OWORD *)v23 + 1) = v36;
    v37 = *((_OWORD *)v24 + 3);
    *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
    *((_OWORD *)v23 + 3) = v37;
  }
  *((_BYTE *)a1 + v21[6]) = *((_BYTE *)a2 + v21[6]);
  *((_BYTE *)a1 + v21[7]) = *((_BYTE *)a2 + v21[7]);
  *((_BYTE *)a1 + v21[8]) = *((_BYTE *)a2 + v21[8]);
  *((_BYTE *)a1 + v21[9]) = *((_BYTE *)a2 + v21[9]);
  *((_BYTE *)a1 + v21[10]) = *((_BYTE *)a2 + v21[10]);
  v45 = v21[11];
  v46 = *(void **)((char *)a2 + v45);
  *(void **)((char *)a1 + v45) = v46;
  v47 = *(int *)(a3 + 20);
  v48 = *(void **)((char *)a2 + v47);
  *(void **)((char *)a1 + v47) = v48;
  v49 = v46;
  swift_bridgeObjectRetain(v48);
  return a1;
}

void **sub_1003CDA0C(void **a1, void **a2, uint64_t a3)
{
  void **v4;
  uint64_t v6;
  void *v7;
  id v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  _OWORD *v43;
  __int128 *v44;
  int v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  char v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  char v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  void *v97;
  void *v98;
  id v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  int *v104;
  uint64_t v105;
  void **v106;

  v4 = a2;
  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(v4, v6))
    {
      case 1u:
        v7 = *v4;
        *a1 = *v4;
        v8 = v7;
        v9 = a1;
        v10 = v6;
        v11 = 1;
        goto LABEL_12;
      case 2u:
        v12 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, v4, v12);
        v9 = a1;
        v10 = v6;
        v11 = 2;
        goto LABEL_12;
      case 3u:
        v13 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, v4, v13);
        v9 = a1;
        v10 = v6;
        v11 = 3;
        goto LABEL_12;
      case 4u:
        v14 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, v4, v14);
        v9 = a1;
        v10 = v6;
        v11 = 4;
        goto LABEL_12;
      case 5u:
        v15 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, v4, v15);
        v9 = a1;
        v10 = v6;
        v11 = 5;
        goto LABEL_12;
      case 6u:
        v16 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, v4, v16);
        v9 = a1;
        v10 = v6;
        v11 = 6;
        goto LABEL_12;
      case 8u:
        v17 = *v4;
        *a1 = *v4;
        v18 = v17;
        v9 = a1;
        v10 = v6;
        v11 = 8;
        goto LABEL_12;
      case 9u:
        v19 = *v4;
        *a1 = *v4;
        v20 = v19;
        v9 = a1;
        v10 = v6;
        v11 = 9;
LABEL_12:
        swift_storeEnumTagMultiPayload(v9, v10, v11);
        break;
      default:
        memcpy(a1, v4, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  v21 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v22 = (int *)v21;
  v23 = *(int *)(v21 + 20);
  v24 = (uint64_t)a1 + v23;
  v25 = (char *)v4 + v23;
  v26 = *(uint64_t *)((char *)a1 + v23 + 8);
  v27 = *(uint64_t *)((char *)v4 + v23 + 8);
  if (v26)
  {
    if (v27)
    {
      v104 = (int *)v21;
      v105 = a3;
      v106 = v4;
      *(_QWORD *)v24 = *(_QWORD *)v25;
      v28 = *((_QWORD *)v25 + 1);
      *(_QWORD *)(v24 + 8) = v28;
      swift_bridgeObjectRetain(v28);
      swift_bridgeObjectRelease(v26);
      v29 = (void *)*((_QWORD *)v25 + 2);
      v30 = *((_QWORD *)v25 + 3);
      v31 = *((_QWORD *)v25 + 4);
      v32 = *((_QWORD *)v25 + 5);
      v34 = *((_QWORD *)v25 + 6);
      v33 = *((_QWORD *)v25 + 7);
      v35 = v25[64];
      sub_10003E1F0(v29, v30, v31, v32, v34, v33, v35);
      v36 = *(void **)(v24 + 16);
      v37 = *(_QWORD *)(v24 + 24);
      v38 = *(_QWORD *)(v24 + 32);
      v39 = *(_QWORD *)(v24 + 40);
      v40 = *(_QWORD *)(v24 + 48);
      v41 = *(_QWORD *)(v24 + 56);
      *(_QWORD *)(v24 + 16) = v29;
      *(_QWORD *)(v24 + 24) = v30;
      *(_QWORD *)(v24 + 32) = v31;
      *(_QWORD *)(v24 + 40) = v32;
      *(_QWORD *)(v24 + 48) = v34;
      *(_QWORD *)(v24 + 56) = v33;
      v42 = *(_BYTE *)(v24 + 64);
      *(_BYTE *)(v24 + 64) = v35;
      sub_10003E2EC(v36, v37, v38, v39, v40, v41, v42);
      *(_BYTE *)(v24 + 65) = v25[65];
      *(_BYTE *)(v24 + 66) = v25[66];
      *(_BYTE *)(v24 + 67) = v25[67];
      *(_BYTE *)(v24 + 68) = v25[68];
      v43 = (_OWORD *)(v24 + 72);
      v44 = (__int128 *)(v25 + 72);
      v45 = v25[120];
      if (*(unsigned __int8 *)(v24 + 120) != 255)
      {
        if (v45 == 255)
        {
          sub_100227BF8(v24 + 72);
          v47 = *(_OWORD *)(v25 + 88);
          v46 = *(_OWORD *)(v25 + 104);
          v48 = *v44;
          *(_BYTE *)(v24 + 120) = v25[120];
          *(_OWORD *)(v24 + 88) = v47;
          *(_OWORD *)(v24 + 104) = v46;
          *v43 = v48;
        }
        else
        {
          v82 = v45 & 1;
          v83 = (void *)*((_QWORD *)v25 + 9);
          v84 = *((_QWORD *)v25 + 10);
          v85 = *((_QWORD *)v25 + 11);
          v86 = *((_QWORD *)v25 + 12);
          v87 = *((_QWORD *)v25 + 13);
          v88 = *((_QWORD *)v25 + 14);
          sub_10002B764(v83, v84, v85, v86, v87, v88, v45 & 1);
          v89 = *(void **)(v24 + 72);
          v90 = *(_QWORD *)(v24 + 80);
          v91 = *(_QWORD *)(v24 + 88);
          v92 = *(_QWORD *)(v24 + 96);
          v93 = *(_QWORD *)(v24 + 104);
          v94 = *(_QWORD *)(v24 + 112);
          v95 = *(_BYTE *)(v24 + 120);
          *(_QWORD *)(v24 + 72) = v83;
          *(_QWORD *)(v24 + 80) = v84;
          *(_QWORD *)(v24 + 88) = v85;
          *(_QWORD *)(v24 + 96) = v86;
          *(_QWORD *)(v24 + 104) = v87;
          *(_QWORD *)(v24 + 112) = v88;
          *(_BYTE *)(v24 + 120) = v82;
          sub_10002B328(v89, v90, v91, v92, v93, v94, v95);
        }
        goto LABEL_27;
      }
      if (v45 == 255)
      {
        v66 = *v44;
        v67 = *(_OWORD *)(v25 + 88);
        v68 = *(_OWORD *)(v25 + 104);
        *(_BYTE *)(v24 + 120) = v25[120];
        *(_OWORD *)(v24 + 88) = v67;
        *(_OWORD *)(v24 + 104) = v68;
        *v43 = v66;
        goto LABEL_27;
      }
      goto LABEL_24;
    }
    sub_100227C2C(v24);
    v60 = *((_OWORD *)v25 + 3);
    v62 = *(_OWORD *)v25;
    v61 = *((_OWORD *)v25 + 1);
    *(_OWORD *)(v24 + 32) = *((_OWORD *)v25 + 2);
    *(_OWORD *)(v24 + 48) = v60;
    *(_OWORD *)v24 = v62;
    *(_OWORD *)(v24 + 16) = v61;
    v64 = *((_OWORD *)v25 + 5);
    v63 = *((_OWORD *)v25 + 6);
    v65 = *((_OWORD *)v25 + 4);
    *(_OWORD *)(v24 + 106) = *(_OWORD *)(v25 + 106);
    *(_OWORD *)(v24 + 80) = v64;
    *(_OWORD *)(v24 + 96) = v63;
    *(_OWORD *)(v24 + 64) = v65;
  }
  else
  {
    if (v27)
    {
      v104 = (int *)v21;
      v105 = a3;
      v106 = v4;
      *(_QWORD *)v24 = *(_QWORD *)v25;
      v49 = *((_QWORD *)v25 + 1);
      *(_QWORD *)(v24 + 8) = v49;
      v50 = (void *)*((_QWORD *)v25 + 2);
      v51 = *((_QWORD *)v25 + 3);
      v52 = *((_QWORD *)v25 + 4);
      v53 = *((_QWORD *)v25 + 5);
      v54 = *((_QWORD *)v25 + 6);
      v55 = *((_QWORD *)v25 + 7);
      v56 = v25[64];
      swift_bridgeObjectRetain(v49);
      sub_10003E1F0(v50, v51, v52, v53, v54, v55, v56);
      *(_QWORD *)(v24 + 16) = v50;
      *(_QWORD *)(v24 + 24) = v51;
      *(_QWORD *)(v24 + 32) = v52;
      *(_QWORD *)(v24 + 40) = v53;
      *(_QWORD *)(v24 + 48) = v54;
      *(_QWORD *)(v24 + 56) = v55;
      *(_BYTE *)(v24 + 64) = v56;
      *(_BYTE *)(v24 + 65) = v25[65];
      *(_BYTE *)(v24 + 66) = v25[66];
      *(_BYTE *)(v24 + 67) = v25[67];
      *(_BYTE *)(v24 + 68) = v25[68];
      v45 = v25[120];
      if (v45 == 255)
      {
        v57 = *(_OWORD *)(v25 + 72);
        v58 = *(_OWORD *)(v25 + 88);
        v59 = *(_OWORD *)(v25 + 104);
        *(_BYTE *)(v24 + 120) = v25[120];
        *(_OWORD *)(v24 + 88) = v58;
        *(_OWORD *)(v24 + 104) = v59;
        *(_OWORD *)(v24 + 72) = v57;
LABEL_27:
        a3 = v105;
        v4 = v106;
        v22 = v104;
        *(_BYTE *)(v24 + 121) = v25[121];
        goto LABEL_28;
      }
LABEL_24:
      v69 = v45 & 1;
      v70 = (void *)*((_QWORD *)v25 + 9);
      v71 = *((_QWORD *)v25 + 10);
      v72 = *((_QWORD *)v25 + 11);
      v73 = *((_QWORD *)v25 + 12);
      v74 = *((_QWORD *)v25 + 13);
      v75 = *((_QWORD *)v25 + 14);
      sub_10002B764(v70, v71, v72, v73, v74, v75, v45 & 1);
      *(_QWORD *)(v24 + 72) = v70;
      *(_QWORD *)(v24 + 80) = v71;
      *(_QWORD *)(v24 + 88) = v72;
      *(_QWORD *)(v24 + 96) = v73;
      *(_QWORD *)(v24 + 104) = v74;
      *(_QWORD *)(v24 + 112) = v75;
      *(_BYTE *)(v24 + 120) = v69;
      goto LABEL_27;
    }
    v76 = *(_OWORD *)v25;
    v77 = *((_OWORD *)v25 + 1);
    v78 = *((_OWORD *)v25 + 3);
    *(_OWORD *)(v24 + 32) = *((_OWORD *)v25 + 2);
    *(_OWORD *)(v24 + 48) = v78;
    *(_OWORD *)v24 = v76;
    *(_OWORD *)(v24 + 16) = v77;
    v79 = *((_OWORD *)v25 + 4);
    v80 = *((_OWORD *)v25 + 5);
    v81 = *((_OWORD *)v25 + 6);
    *(_OWORD *)(v24 + 106) = *(_OWORD *)(v25 + 106);
    *(_OWORD *)(v24 + 80) = v80;
    *(_OWORD *)(v24 + 96) = v81;
    *(_OWORD *)(v24 + 64) = v79;
  }
LABEL_28:
  *((_BYTE *)a1 + v22[6]) = *((_BYTE *)v4 + v22[6]);
  *((_BYTE *)a1 + v22[7]) = *((_BYTE *)v4 + v22[7]);
  *((_BYTE *)a1 + v22[8]) = *((_BYTE *)v4 + v22[8]);
  *((_BYTE *)a1 + v22[9]) = *((_BYTE *)v4 + v22[9]);
  *((_BYTE *)a1 + v22[10]) = *((_BYTE *)v4 + v22[10]);
  v96 = v22[11];
  v97 = *(void **)((char *)a1 + v96);
  v98 = *(void **)((char *)v4 + v96);
  *(void **)((char *)a1 + v96) = v98;
  v99 = v98;

  v100 = *(int *)(a3 + 20);
  v101 = *(void **)((char *)v4 + v100);
  v102 = *(uint64_t *)((char *)a1 + v100);
  *(void **)((char *)a1 + v100) = v101;
  swift_bridgeObjectRetain(v101);
  swift_bridgeObjectRelease(v102);
  return a1;
}

char *sub_1003CDF5C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  switch(swift_getEnumCaseMultiPayload(a2, v6))
  {
    case 2u:
      v7 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 2;
      goto LABEL_8;
    case 3u:
      v11 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      v8 = a1;
      v9 = v6;
      v10 = 3;
      goto LABEL_8;
    case 4u:
      v12 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      v8 = a1;
      v9 = v6;
      v10 = 4;
      goto LABEL_8;
    case 5u:
      v13 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
      v8 = a1;
      v9 = v6;
      v10 = 5;
      goto LABEL_8;
    case 6u:
      v14 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
      v8 = a1;
      v9 = v6;
      v10 = 6;
LABEL_8:
      swift_storeEnumTagMultiPayload(v8, v9, v10);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v15 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v16 = v15[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *((_OWORD *)v18 + 3);
  *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
  *((_OWORD *)v17 + 3) = v19;
  v20 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v20;
  *(_OWORD *)(v17 + 106) = *(_OWORD *)(v18 + 106);
  v21 = *((_OWORD *)v18 + 6);
  v22 = *((_OWORD *)v18 + 4);
  *((_OWORD *)v17 + 5) = *((_OWORD *)v18 + 5);
  *((_OWORD *)v17 + 6) = v21;
  *((_OWORD *)v17 + 4) = v22;
  a1[v15[6]] = a2[v15[6]];
  a1[v15[7]] = a2[v15[7]];
  a1[v15[8]] = a2[v15[8]];
  a1[v15[9]] = a2[v15[9]];
  a1[v15[10]] = a2[v15[10]];
  *(_QWORD *)&a1[v15[11]] = *(_QWORD *)&a2[v15[11]];
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1003CE160(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  unsigned __int8 v29;
  int v30;
  int v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 2u:
        v7 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        v8 = a1;
        v9 = v6;
        v10 = 2;
        goto LABEL_9;
      case 3u:
        v11 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
        v8 = a1;
        v9 = v6;
        v10 = 3;
        goto LABEL_9;
      case 4u:
        v12 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
        v8 = a1;
        v9 = v6;
        v10 = 4;
        goto LABEL_9;
      case 5u:
        v13 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        v8 = a1;
        v9 = v6;
        v10 = 5;
        goto LABEL_9;
      case 6u:
        v14 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
        v8 = a1;
        v9 = v6;
        v10 = 6;
LABEL_9:
        swift_storeEnumTagMultiPayload(v8, v9, v10);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  v15 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v16 = v15[5];
  v17 = (uint64_t)&a1[v16];
  v18 = &a2[v16];
  v19 = *(_QWORD *)&a1[v16 + 8];
  if (v19)
  {
    v20 = *((_QWORD *)v18 + 1);
    if (v20)
    {
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *(_QWORD *)(v17 + 8) = v20;
      swift_bridgeObjectRelease(v19);
      v21 = v18[64];
      v22 = *(void **)(v17 + 16);
      v23 = *(_QWORD *)(v17 + 24);
      v24 = *(_QWORD *)(v17 + 32);
      v25 = *(_QWORD *)(v17 + 40);
      v26 = *(_QWORD *)(v17 + 48);
      v27 = *(_QWORD *)(v17 + 56);
      v28 = *((_OWORD *)v18 + 2);
      *(_OWORD *)(v17 + 16) = *((_OWORD *)v18 + 1);
      *(_OWORD *)(v17 + 32) = v28;
      *(_OWORD *)(v17 + 48) = *((_OWORD *)v18 + 3);
      v29 = *(_BYTE *)(v17 + 64);
      *(_BYTE *)(v17 + 64) = v21;
      sub_10003E2EC(v22, v23, v24, v25, v26, v27, v29);
      *(_WORD *)(v17 + 65) = *(_WORD *)(v18 + 65);
      *(_BYTE *)(v17 + 67) = v18[67];
      *(_BYTE *)(v17 + 68) = v18[68];
      v30 = *(unsigned __int8 *)(v17 + 120);
      if (v30 != 255)
      {
        v31 = v18[120];
        if (v31 != 255)
        {
          v36 = *(void **)(v17 + 72);
          v37 = *(_QWORD *)(v17 + 80);
          v38 = *(_QWORD *)(v17 + 88);
          v39 = *(_QWORD *)(v17 + 96);
          v40 = *(_QWORD *)(v17 + 104);
          v41 = *(_QWORD *)(v17 + 112);
          *(_OWORD *)(v17 + 72) = *(_OWORD *)(v18 + 72);
          *(_OWORD *)(v17 + 88) = *(_OWORD *)(v18 + 88);
          *(_OWORD *)(v17 + 104) = *(_OWORD *)(v18 + 104);
          *(_BYTE *)(v17 + 120) = v31 & 1;
          sub_10002B328(v36, v37, v38, v39, v40, v41, v30 & 1);
          goto LABEL_19;
        }
        sub_100227BF8(v17 + 72);
      }
      v32 = *(_OWORD *)(v18 + 88);
      *(_OWORD *)(v17 + 72) = *(_OWORD *)(v18 + 72);
      *(_OWORD *)(v17 + 88) = v32;
      *(_OWORD *)(v17 + 104) = *(_OWORD *)(v18 + 104);
      *(_BYTE *)(v17 + 120) = v18[120];
LABEL_19:
      *(_BYTE *)(v17 + 121) = v18[121];
      goto LABEL_20;
    }
    sub_100227C2C(v17);
  }
  v33 = *((_OWORD *)v18 + 5);
  *(_OWORD *)(v17 + 64) = *((_OWORD *)v18 + 4);
  *(_OWORD *)(v17 + 80) = v33;
  *(_OWORD *)(v17 + 96) = *((_OWORD *)v18 + 6);
  *(_OWORD *)(v17 + 106) = *(_OWORD *)(v18 + 106);
  v34 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v34;
  v35 = *((_OWORD *)v18 + 3);
  *(_OWORD *)(v17 + 32) = *((_OWORD *)v18 + 2);
  *(_OWORD *)(v17 + 48) = v35;
LABEL_20:
  a1[v15[6]] = a2[v15[6]];
  a1[v15[7]] = a2[v15[7]];
  a1[v15[8]] = a2[v15[8]];
  a1[v15[9]] = a2[v15[9]];
  a1[v15[10]] = a2[v15[10]];
  v42 = v15[11];
  v43 = *(void **)&a1[v42];
  *(_QWORD *)&a1[v42] = *(_QWORD *)&a2[v42];

  v44 = *(int *)(a3 + 20);
  v45 = *(_QWORD *)&a1[v44];
  *(_QWORD *)&a1[v44] = *(_QWORD *)&a2[v44];
  swift_bridgeObjectRelease(v45);
  return a1;
}

uint64_t sub_1003CE48C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003CE498);
}

uint64_t sub_1003CE49C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1003CE518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003CE524);
}

uint64_t sub_1003CE528(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1003CE5A0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for TTRRemindersListViewModel.SectionHeader(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

unint64_t sub_1003CE618()
{
  unint64_t result;

  result = qword_100658CC0;
  if (!qword_100658CC0)
  {
    result = swift_getWitnessTable(&unk_1005320F4, &type metadata for TTRRemindersListTreeViewModel.IndentationMoveCalculationError);
    atomic_store(result, (unint64_t *)&qword_100658CC0);
  }
  return result;
}

uint64_t sub_1003CE66C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10039534C(a1, a2);
}

uint64_t sub_1003CE684@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  BOOL v12;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v9 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v12 = *(_QWORD *)(v4 + 16) != a1 || a2 == 0;
    if (!v12 && a3 != 0)
    {
      v14 = a2;
      v15 = a3;
      sub_10011AFF0((uint64_t)v15, (uint64_t)v11);

      v16 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v11, 1, v16) != 1)
      {
        sub_1000CDFA4((uint64_t)v11, a4);
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(a4, 0, 1, v16);
      }
      sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_1006463C0);
    }
  }
  v18 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a4, 1, 1, v18);
}

uint64_t sub_1003CE7B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v12;

  v2 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersBoardMainDiffableDataSource.columnID(containingItemID:)(a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1000073A0((uint64_t)v4, (uint64_t *)&unk_1006463C0);
    return 0;
  }
  sub_1000CDFA4((uint64_t)v4, (uint64_t)v8);
  v9 = (void *)sub_1003CE8E4((uint64_t)v8);
  sub_1000CDF68((uint64_t)v8);
  if (!v9)
    return 0;
  v10 = sub_10011AE70(a1);

  return v10;
}

uint64_t sub_1003CE8E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v2 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1000073A0((uint64_t)v4, &qword_100646950);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v9 = (void *)UICollectionView.visibleCellForItem(at:)(v8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if (v9)
    {
      v10 = type metadata accessor for TTRIBoardColumnCollectionViewCell();
      result = swift_dynamicCastClass(v9, v10);
      if (result)
        return result;

    }
  }
  return 0;
}

uint64_t sub_1003CEA28()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for TTRIRemindersBoardItemLookupController()
{
  return objc_opt_self(_TtC9Reminders38TTRIRemindersBoardItemLookupController);
}

uint64_t sub_1003CEA74(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v22;

  v2 = UIView.ancestorViews(includingSelf:)(1);
  v3 = dispatch thunk of _AnySequenceBox._makeIterator()(v2);
  swift_release();
  v4 = swift_retain();
  dispatch thunk of _AnyIteratorBoxBase.next()(v4);
  v5 = v22;
  if (v22)
  {
    v6 = type metadata accessor for TTRIBoardReminderCell(0);
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      while (1)
      {
        v12 = swift_dynamicCastClass(v5, v6);
        if (!v12)
          break;
        v17 = (void *)v12;

        if (v5 != a1)
        {
          v19 = a1;

          v9 = a1;
        }
        dispatch thunk of _AnyIteratorBoxBase.next()(v18);
        v5 = v22;
        v8 = v17;
      }
      v13 = type metadata accessor for TTRIBoardColumnCollectionViewCell();
      v14 = swift_dynamicCastClass(v5, v13);
      if (v14)
      {
        v10 = (void *)v14;

        v7 = v10;
      }
      else
      {
        v15 = objc_opt_self(UICollectionView);
        v16 = swift_dynamicCastObjCClass(v5, v15);
        if (v16 && v7)
        {
          v20 = v16;
          swift_release_n(v3, 2);
          return v20;
        }

      }
      dispatch thunk of _AnyIteratorBoxBase.next()(v11);
      v5 = v22;
    }
  }
  swift_release_n(v3, 2);
  return 0;
}

uint64_t sub_1003CEBF8(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v14;

  v4 = sub_10002A750(&qword_1006436F0);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v5);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10001413C(a1, v9);
  v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);

  if (v11)
  {
    sub_1000493D8(a2, (uint64_t)v8);
    v12 = (char *)&loc_1003CED2C + 4 * byte_1005321A0[swift_getEnumCaseMultiPayload(v8, v6)];
    __asm { BR              X10 }
  }
  return 0;
}

void sub_1003CED64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;

  sub_10028C3D8(v3, v1);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(v2 + 24);
    ObjectType = swift_getObjectType(Strong, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16))(v2, v1, ObjectType, v7);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    if (qword_10063D3F0 != -1)
      swift_once(&qword_10063D3F0, sub_100125F50);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100012DC4(v9, (uint64_t)qword_1006476C0);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.fault.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Missing TTRSmartListDragAndDropPresenterCapabilityDelegate", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

    v14 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v0, 1, 1, v14);
  }
  sub_10001F544(v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  v15 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v0, 1, v15);
  sub_1003CEEE4(v0);
  JUMPOUT(0x1003CED40);
}

uint64_t type metadata accessor for TTRAttributeMatchingDragAndDropPresenterCapability()
{
  return objc_opt_self(_TtC9Reminders50TTRAttributeMatchingDragAndDropPresenterCapability);
}

uint64_t sub_1003CEEE4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750(&qword_1006436F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1003CEF24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  void *v6;
  char *v7;
  uint64_t Strong;
  uint64_t v9;
  _BYTE v10[24];

  v2 = v1;
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameModule);
  swift_beginAccess(v4, v10, 33, 0);
  sub_1003D3684(a1, (uint64_t)v4, (uint64_t *)&unk_1006653B0);
  swift_endAccess(v10);
  v5 = *v4;
  if (!v5)
  {
LABEL_6:
    sub_1000073A0(a1, (uint64_t *)&unk_1006653B0);
    return;
  }
  *(_QWORD *)(v5 + 40) = &off_100604540;
  swift_unknownObjectWeakAssign(v5 + 32, v2);
  v6 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameTextView);
  if (v6)
  {
    swift_unknownObjectRetain(v5);
    v7 = v6;
    sub_100416620(v7, 0);

    Strong = swift_unknownObjectWeakLoadStrong(v5 + 16);
    if (Strong)
    {
      v9 = Strong;
      swift_unknownObjectWeakAssign(Strong+ OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_ttriAccessibilityViewToFocusWhenEditingEnds, v2);
      swift_unknownObjectRelease(v5);
      v5 = v9;
    }
    swift_unknownObjectRelease(v5);
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_1003CF02C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[24];
  _BYTE v12[24];

  v3 = sub_10002A750((uint64_t *)&unk_100654970);
  __chkstk_darwin(v3);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v11[-v7];
  v9 = v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_viewModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_viewModel, v12, 0, 0);
  sub_10000735C(v9, (uint64_t)v8, (uint64_t *)&unk_100654970);
  swift_beginAccess(v9, v11, 33, 0);
  sub_1003D3684(a1, v9, (uint64_t *)&unk_100654970);
  swift_endAccess(v11);
  sub_10000735C(v9, (uint64_t)v5, (uint64_t *)&unk_100654970);
  LOBYTE(v9) = sub_1003D25D0((uint64_t)v5, (uint64_t)v8);
  sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_100654970);
  if ((v9 & 1) != 0)
    sub_1003CF220();
  sub_1000073A0(a1, (uint64_t *)&unk_100654970);
  return sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100654970);
}

uint64_t sub_1003CF168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100658EB0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100658EB0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_1003CF220()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  char *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  NSString v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  id v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD aBlock[6];
  char v55[24];
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  _OWORD v62[3];

  v1 = v0;
  v53 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v53);
  v3 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v51);
  v50 = (uint64_t)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750((uint64_t *)&unk_100654970);
  __chkstk_darwin(v5);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v49 - v9;
  v11 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v52 = (uint64_t)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v49 - v15;
  v17 = (uint64_t)&v1[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_viewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_viewModel], v55, 0, 0);
  sub_10000735C(v17, (uint64_t)v10, (uint64_t *)&unk_100654970);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
  {
    sub_10001F580((uint64_t)v10, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
    v23 = &v16[*(int *)(v11 + 20)];
    v24 = *((_OWORD *)v23 + 5);
    v60 = *((_OWORD *)v23 + 4);
    v61 = v24;
    v62[0] = *((_OWORD *)v23 + 6);
    *(_OWORD *)((char *)v62 + 10) = *(_OWORD *)(v23 + 106);
    v25 = *((_OWORD *)v23 + 3);
    v58 = *((_OWORD *)v23 + 2);
    v59 = v25;
    v26 = *((_OWORD *)v23 + 1);
    v56 = *(_OWORD *)v23;
    v57 = v26;
    sub_10003E134((uint64_t)&v56);
    TTRRemindersListEditableSectionNameViewModel.placeholderTitle(listLayout:)(0);
    if (v27)
    {
      v28 = v27;
      v29 = objc_allocWithZone((Class)NSAttributedString);
      v30 = String._bridgeToObjectiveC()();
      v49 = objc_msgSend(v29, "initWithString:", v30, swift_bridgeObjectRelease(v28).n128_f64[0]);

    }
    else
    {
      v49 = 0;
    }
    v31 = v53;
    sub_10002B1E8((uint64_t)v16, (uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v3, v31) == 1)
    {
      v32 = v50;
      sub_10001F580((uint64_t)v3, v50, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v33 = *(_BYTE *)(v32 + *(int *)(v51 + 32));
      sub_10001F544(v32, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    }
    else
    {
      sub_10001F544((uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v33 = 0;
    }
    v34 = v1;
    v35 = *(void **)&v1[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameContainer];
    if (!v35)
      goto LABEL_17;
    v36 = v52;
    sub_10002B1E8((uint64_t)v16, v52, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
    v37 = *(unsigned __int8 *)(v12 + 80);
    v38 = (v37 + 161) & ~v37;
    v39 = swift_allocObject(&unk_100604620, v38 + v13, v37 | 7);
    v40 = v61;
    *(_OWORD *)(v39 + 80) = v60;
    *(_OWORD *)(v39 + 96) = v40;
    *(_OWORD *)(v39 + 112) = v62[0];
    *(_OWORD *)(v39 + 122) = *(_OWORD *)((char *)v62 + 10);
    v41 = v57;
    *(_OWORD *)(v39 + 16) = v56;
    *(_OWORD *)(v39 + 32) = v41;
    v42 = v59;
    *(_OWORD *)(v39 + 48) = v58;
    *(_OWORD *)(v39 + 64) = v42;
    v43 = v49;
    *(_QWORD *)(v39 + 144) = v34;
    *(_QWORD *)(v39 + 152) = v43;
    *(_BYTE *)(v39 + 160) = v33;
    sub_10001F580(v36, v39 + v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
    v44 = swift_allocObject(&unk_100604648, 32, 7);
    *(_QWORD *)(v44 + 16) = sub_1003D3558;
    *(_QWORD *)(v44 + 24) = v39;
    aBlock[4] = sub_10001B278;
    aBlock[5] = v44;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001B258;
    aBlock[3] = &unk_100604660;
    v45 = _Block_copy(aBlock);
    sub_10003E134((uint64_t)&v56);
    v46 = v43;
    swift_retain();
    v47 = v35;
    v48 = v34;
    objc_msgSend(v47, "performBatchUpdates:", v45, swift_release().n128_f64[0]);

    _Block_release(v45);
    LOBYTE(v45) = swift_isEscapingClosureAtFileLocation(v44, "", 159, 191, 43, 1);
    swift_release();
    if ((v45 & 1) == 0)
    {
      sub_1003D0B48();
      sub_10003E230((uint64_t)&v56);

      sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
      swift_release();
      return;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:

    __break(1u);
    return;
  }
  sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100654970);
  v18 = *(void **)&v1[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameTextView];
  if (!v18)
    goto LABEL_16;
  objc_msgSend(v18, "setText:", 0);
  v19 = &v1[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameModule];
  v20 = swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameModule], &v56, 0, 0);
  v21 = *(_QWORD *)v19;
  if (v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v12 + 56))(v7, 1, 1, v11, v20);
    v22 = v21 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
    swift_beginAccess(v21 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel, aBlock, 33, 0);
    swift_unknownObjectRetain(v21);
    sub_1003D3684((uint64_t)v7, v22, (uint64_t *)&unk_100654970);
    swift_endAccess(aBlock);
    sub_100415B30();
    sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100654970);
    swift_unknownObjectRelease(v21);
  }
}

void sub_1003CF7E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  _BYTE v11[40];
  uint64_t v12;
  _OWORD v13[2];
  __int128 v14;
  uint64_t v15;
  _BYTE v16[24];

  v3 = v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_treeCellViewModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_treeCellViewModel, v16, 0, 0);
  sub_10000735C(v3, (uint64_t)v11, (uint64_t *)&unk_10065BDF0);
  sub_10000735C(a1, (uint64_t)v13, (uint64_t *)&unk_10065BDF0);
  if (!v12)
  {
    if (!*((_QWORD *)&v14 + 1))
    {
      sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_10065BDF0);
      swift_beginAccess(v3, v11, 33, 0);
      sub_1003D3684(a1, v3, (uint64_t *)&unk_10065BDF0);
      swift_endAccess(v11);
      return;
    }
    goto LABEL_12;
  }
  sub_10000735C((uint64_t)v11, (uint64_t)&v8, (uint64_t *)&unk_10065BDF0);
  if (!*((_QWORD *)&v14 + 1))
  {
    sub_100092348((uint64_t)&v8);
LABEL_12:
    sub_1000073A0((uint64_t)v11, &qword_100646300);
    swift_beginAccess(v3, v11, 33, 0);
    sub_1003D3684(a1, v3, (uint64_t *)&unk_10065BDF0);
    swift_endAccess(v11);
LABEL_13:
    sub_1003D0900();
    return;
  }
  v5 = v13[0];
  v6[0] = v13[1];
  v6[1] = v14;
  v7 = v15;
  if (v8 == *(_QWORD *)&v13[0] && v9 == BYTE8(v5))
    v4 = static AnyHashable.== infix(_:_:)(&v10, v6);
  else
    v4 = 0;
  sub_100092348((uint64_t)&v5);
  sub_100092348((uint64_t)&v8);
  sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_10065BDF0);
  swift_beginAccess(v3, v11, 33, 0);
  sub_1003D3684(a1, v3, (uint64_t *)&unk_10065BDF0);
  swift_endAccess(v11);
  if ((v4 & 1) == 0)
    goto LABEL_13;
}

void sub_1003CFAB4(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  double v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  double *v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  Class isa;
  id v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  uint64_t v52;
  void *v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  Class v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  id v64;
  void *v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  objc_class *v70;
  uint64_t v71;
  uint64_t v72[3];
  objc_super v73;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v73.receiver = v2;
  v73.super_class = ObjectType;
  objc_msgSendSuper2(&v73, "containerViewDidLoad");
  v5 = objc_allocWithZone((Class)type metadata accessor for TTRIRemindersListEditableSectionNameTextView());
  v6 = TTRIExpandingTextView.init(isForUseInNUIContainerView:lineIndexWhereClippingBegins:textContainer:)(1, 1, 0, 0);
  v7 = OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameTextView;
  v8 = *(void **)&v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameTextView];
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameTextView] = v6;

  v9 = *(void **)&v2[v7];
  if (!v9)
  {
    __break(1u);
    goto LABEL_26;
  }
  sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v10 = v9;
  v11 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(UIFontTextStyleTitle2, *(_QWORD *)&UIFontWeightBold, 0, 0);
  objc_msgSend(v10, "setFont:", v11);

  v12 = *(void **)&v3[v7];
  if (!v12)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v13 = objc_msgSend(v12, "textContainer");
  objc_msgSend(v13, "setLineBreakMode:", 4);

  v14 = *(void **)&v3[v7];
  if (!v14)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v15 = objc_msgSend(v14, "textContainer");
  objc_msgSend(v15, "setWidthTracksTextView:", 1);

  v17 = *(void **)&v3[v7];
  if (!v17)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  LODWORD(v16) = 1132068864;
  objc_msgSend(v17, "setLayoutSize:withContentPriority:", NUIContainerViewSizeUnbounded[0], NUIContainerViewSizeUnbounded[1], v16);
  v18 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TTRIRemindersListDisclosureView(0)), "init");
  v19 = OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_disclosureView;
  v20 = *(void **)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_disclosureView];
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_disclosureView] = v18;

  v21 = *(void **)&v3[v19];
  if (!v21)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v22 = v21;
  v23 = (double *)CGSize.nuiUseDefault.unsafeMutableAddressor();
  LODWORD(v24) = 1148846080;
  objc_msgSend(v22, "setLayoutSize:withContentPriority:", *v23, v23[1], v24);

  v25 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v26 = swift_allocObject(v25, 48, 7);
  *(_OWORD *)(v26 + 16) = xmmword_10051FF90;
  v27 = *(void **)&v3[v7];
  if (!v27)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v71 = v25;
  v70 = ObjectType;
  *(_QWORD *)(v26 + 32) = v27;
  v28 = *(void **)&v3[v19];
  if (!v28)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  *(_QWORD *)(v26 + 40) = v28;
  v72[0] = v26;
  specialized Array._endMutation()(v26);
  v29 = objc_allocWithZone((Class)NUIContainerStackView);
  sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  v30 = v27;
  v31 = v28;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v33 = objc_msgSend(v29, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v72[0]).n128_f64[0]);

  v34 = OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameContainer;
  v35 = *(void **)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameContainer];
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameContainer] = v33;

  v36 = *(void **)&v3[v34];
  if (!v36)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  objc_msgSend(v36, "setAxis:", 0);
  v37 = *(void **)&v3[v34];
  if (!v37)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  objc_msgSend(v37, "setArrangedSubviewRemovalPolicy:", 2);
  v38 = *(void **)&v3[v34];
  if (!v38)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  objc_msgSend(v38, "setSpacing:", 12.0);
  v39 = *(void **)&v3[v34];
  if (!v39)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  objc_msgSend(v39, "setInvalidatingIntrinsicContentSizeAlsoInvalidatesSuperview:", 1);
  v40 = *(void **)&v3[v34];
  if (!v40)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  objc_msgSend(v40, "setEdgesPreservingSuperviewLayoutMargins:", 10);
  v41 = *(void **)&v3[v34];
  if (!v41)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  objc_msgSend(v41, "setDirectionalLayoutMargins:", 12.0, 0.0, 8.0, 0.0);
  v42 = *(void **)&v3[v34];
  if (!v42)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  objc_msgSend(v42, "setLayoutMarginsRelativeArrangement:", 1);
  v43 = *(void **)&v3[v34];
  if (!v43)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  objc_msgSend(v43, "setDebugBoundingBoxesEnabled:", 0);
  v44 = objc_allocWithZone((Class)type metadata accessor for TTRISeparator(0));
  v45 = TTRISeparator.init(axis:)(0);
  v46 = OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_topSeparator;
  v47 = *(void **)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_topSeparator];
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_topSeparator] = v45;

  v48 = *(void **)&v3[v46];
  if (!v48)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v49 = v48;
  TTRISeparator.thickness.setter(0x4000000000000000, 0);

  v50 = *(void **)&v3[v46];
  if (!v50)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  objc_msgSend(v50, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  objc_msgSend(v3, "_setIgnoresMultipleSelectionDuringEditing:", 1);
  v51 = objc_msgSend(v3, "containerView");
  objc_msgSend(v51, "setHorizontalAlignment:", 0);
  objc_msgSend(v51, "setVerticalAlignment:", 0);
  objc_msgSend(v51, "setPreservesSuperviewLayoutMargins:", 1);
  objc_msgSend(v51, "setLayoutMarginsRelativeArrangement:", 0);
  objc_msgSend(v51, "setDebugBoundingBoxesEnabled:", 0);
  v52 = swift_allocObject(v71, 48, 7);
  *(_OWORD *)(v52 + 16) = xmmword_10051FF90;
  v53 = *(void **)&v3[v46];
  if (!v53)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  *(_QWORD *)(v52 + 32) = v53;
  v54 = *(void **)&v3[v34];
  if (!v54)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  *(_QWORD *)(v52 + 40) = v54;
  v72[0] = v52;
  specialized Array._endMutation()(v52);
  v55 = v51;
  v56 = v53;
  v57 = v54;
  v58 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v55, "setArrangedSubviews:", v58, swift_bridgeObjectRelease(v72[0]).n128_f64[0]);

  v59 = *(_QWORD *)&v3[v46];
  if (!v59)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  objc_msgSend(v55, "setAlignment:forView:inAxis:", 1, v59, 1);
  v60 = *(_QWORD *)&v3[v19];
  if (!v60)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v61 = v60 + direct field offset for TTRIRemindersListDisclosureView.actionDelegate;
  swift_beginAccess(v60 + direct field offset for TTRIRemindersListDisclosureView.actionDelegate, v72, 1, 0);
  *(_QWORD *)(v61 + 8) = &off_100604530;
  swift_unknownObjectWeakAssign(v61, v3);
  UITableViewCell.setSeparatorInsetType(_:)(0);
  v62 = *(void **)&v3[v7];
  if (!v62)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v63 = sub_100005ED8(0, (unint64_t *)&unk_1006406C0, UITextView_ptr);
  v64 = v62;
  UITextDraggable<>.disableDragInteraction_rdar93793341()(v63);
  objc_msgSend(v64, "setTextDropDelegate:", *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_unsupportedTextDropHandler]);

  UITableViewCell.ttr_registerForRemindersListCellBackgroundConfiguration()();
  v65 = *(void **)&v3[v46];
  if (v65)
  {
    v66 = (void *)objc_opt_self(UIColor);
    v67 = v65;
    TTRISeparator.backgroundColor.setter(objc_msgSend(v66, "tertiarySystemFillColor"));

    sub_100005ED8(0, &qword_100659000, UITraitCollection_ptr);
    v68 = static UITraitCollection.systemTraitsAffectingColorAppearance.getter();
    v69 = UIView.registerForTraitChanges<A>(_:handler:)(v68, sub_1003D2560, 0, v70);

    swift_unknownObjectRelease(v69);
    swift_bridgeObjectRelease(v68);
    return;
  }
LABEL_47:
  __break(1u);
}

void sub_1003D03B0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  _QWORD *v18;
  double v19;
  double v20;
  void *v21;
  UIFont v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  NSObject *v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  NSString v34;
  void *v35;
  void *v36;
  NSObject *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  Class v43;
  NSObject *v44;
  id v45;
  void *v46;
  NSObject *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  Class isa;
  int v56;
  uint64_t v57;
  char v58;
  _BYTE v59[56];
  uint64_t v60;
  _BYTE v61[56];
  _BYTE v62[55];
  char v63[9];

  v54 = a5;
  v56 = a4;
  v8 = sub_10002A750((uint64_t *)&unk_100654970);
  __chkstk_darwin(v8);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend((id)objc_opt_self(UIColor), *off_100604688[*(char *)(a1 + 66)]);
  v12 = *(void **)(a2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameContainer);
  if (!v12)
  {
    __break(1u);
    goto LABEL_28;
  }
  objc_msgSend(v12, "directionalLayoutMargins");
  v14 = v13;
  v16 = v15;
  v17 = 8 * *(char *)(a1 + 65);
  v18 = *(_UNKNOWN **)((char *)&off_1006046A0 + v17);
  v19 = *(double *)((char *)&unk_100532360 + v17);
  v20 = *(double *)((char *)&unk_100532378 + v17);
  sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v21 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(*v18, 0, 1, 0);
  v22.super.isa = UIFont.withBoldTrait()().super.isa;

  v23 = OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameTextView;
  v24 = *(void **)(a2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameTextView);
  if (!v24)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  objc_msgSend(v24, "setFont:", v22.super.isa);
  v25 = *(void **)(a2 + v23);
  if (!v25)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  isa = v22.super.isa;
  objc_msgSend(v25, "setDirectionalLayoutMargins:", v20, v14, v19, v16);
  v26 = *(void **)(a2 + v23);
  if (!v26)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v27 = v11;
  objc_msgSend(v26, "setTextColor:", v11);
  v28 = *(void **)(a2 + v23);
  if (!v28)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v29 = (void *)objc_opt_self(UIColor);
  v30 = v28;
  v31 = objc_msgSend(v29, "clearColor");
  objc_msgSend(v30, "setBackgroundColor:", v31);

  v32 = *(void **)(a2 + v23);
  if (!v32)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v33 = v32;
  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v33, "setText:", v34);

  v35 = *(void **)(a2 + v23);
  if (!v35)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  objc_msgSend(v35, "setAttributedPlaceholder:", a3);
  v36 = *(void **)(a2 + v23);
  if (!v36)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v37 = v27;
  objc_msgSend(v36, "setUserInteractionEnabled:", v56 & 1);
  v38 = (uint64_t *)(a2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameModule);
  swift_beginAccess(a2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameModule, &v57, 0, 0);
  v39 = *v38;
  if (v39)
  {
    sub_10002B1E8(v54, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
    v40 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v10, 0, 1, v40);
    v41 = v39 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
    swift_beginAccess(v39 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel, v62, 33, 0);
    swift_unknownObjectRetain(v39);
    sub_1003D3684((uint64_t)v10, v41, (uint64_t *)&unk_100654970);
    swift_endAccess(v62);
    sub_100415B30();
    v37 = v27;
    sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100654970);
    swift_unknownObjectRelease(v39);
  }
  v42 = *(void **)(a2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_disclosureView);
  if (!v42)
    goto LABEL_35;
  sub_10000F614(a1 + 72, (uint64_t)v59, &qword_100658FF8);
  sub_10000F614((uint64_t)v59, (uint64_t)v61, &qword_100658FF8);
  v43 = isa;
  if (v61[48] == 255)
  {
    v45 = v42;
    v44 = v37;
  }
  else
  {
    sub_1000AE578((uint64_t)v61, (uint64_t)v62);
    sub_1000AE578((uint64_t)v62, (uint64_t)&v60);
    v44 = TTRListColors.Color.nativeColor.getter(v42);
  }
  TTRIRemindersListDisclosureView.tintColor.setter(v44);

  sub_1003D0900();
  sub_1003D35E8(a1 + 68, (uint64_t)&v58);
  sub_1003D35E8((uint64_t)&v58, (uint64_t)v63);
  if (v63[0] != 3)
  {
    if (v63[0] != 2)
    {
      if (qword_10063D710 != -1)
        swift_once(&qword_10063D710, sub_1003CF168);
      v49 = type metadata accessor for Logger(0);
      v50 = sub_100012DC4(v49, (uint64_t)qword_100658EB0);
      v51 = Logger.logObject.getter(v50);
      v52 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v53 = 0;
        _os_log_impl((void *)&_mh_execute_header, v51, v52, "TTRIRemindersListEditableSectionCell inset separator not supported", v53, 2u);
        swift_slowDealloc(v53, -1, -1);
      }
      v47 = v37;
      v37 = v51;
      goto LABEL_26;
    }
    v46 = *(void **)(a2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_topSeparator);
    if (v46)
    {
      v47 = v46;
      -[NSObject setHidden:](v47, "setHidden:", 1);
LABEL_26:

      return;
    }
    goto LABEL_36;
  }
  v48 = *(void **)(a2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_topSeparator);
  if (v48)
  {
    v47 = v48;
    -[NSObject setHidden:](v47, "setHidden:", 0);
    goto LABEL_26;
  }
LABEL_37:
  __break(1u);
}

void sub_1003D0900()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  char *v14;
  double v15;
  _BOOL8 v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  _BYTE v22[24];
  char v23[24];

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v1);
  v3 = &v22[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v4);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __chkstk_darwin(v7);
  v10 = &v22[-v9];
  if ((objc_msgSend(v0, "isEditing", v8) & 1) != 0)
    goto LABEL_9;
  v11 = (uint64_t)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_viewModel];
  swift_beginAccess(&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_viewModel], v23, 0, 0);
  v12 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
    goto LABEL_9;
  sub_10002B1E8(v11, (uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v3, v1) != 1)
  {
    sub_10001F544((uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_9:
    v17 = *(void **)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_disclosureView];
    if (v17)
    {
      objc_msgSend(v17, "setHidden:", 1);
      return;
    }
    __break(1u);
    goto LABEL_15;
  }
  sub_10001F580((uint64_t)v3, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  sub_10001F580((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  v13 = v10[*(int *)(v4 + 36)];
  sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  if (v13 != 1)
    goto LABEL_9;
  v14 = &v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_treeCellViewModel];
  *(_QWORD *)&v15 = swift_beginAccess(&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_treeCellViewModel], v22, 0, 0).n128_u64[0];
  if (!*((_QWORD *)v14 + 5) || !v14[8])
    goto LABEL_9;
  v16 = v14[8] != 1;
  v18 = OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_disclosureView;
  v19 = *(void **)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_disclosureView];
  if (!v19)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  objc_msgSend(v19, "setHidden:", 0, v15);
  v20 = *(void **)&v0[v18];
  if (v20)
  {
    v21 = v20;
    TTRIRemindersListDisclosureView.isExpanded.setter(v16);

    return;
  }
LABEL_16:
  __break(1u);
}

uint64_t sub_1003D0B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  unsigned __int8 v27;
  char *v28;
  uint64_t (*v29)(_QWORD);
  uint64_t v30;
  _QWORD v31[7];
  _BYTE v32[24];

  v1 = v0;
  v2 = type metadata accessor for SectionEntityID(0);
  v31[5] = *(_QWORD *)(v2 - 8);
  v31[6] = v2;
  __chkstk_darwin(v2);
  v31[4] = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AppEntityID(0);
  v31[2] = *(_QWORD *)(v4 - 8);
  v31[3] = v4;
  __chkstk_darwin(v4);
  v31[1] = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v6);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v9);
  v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v31 - v13;
  v15 = type metadata accessor for REMFeatureFlags(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (*(uint64_t (**)(char *, _QWORD, uint64_t, double))(v16 + 104))(v19, enum case for REMFeatureFlags.viewAnnotation(_:), v15, v17);
  v21 = REMFeatureFlags.isEnabled.getter(v20);
  result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  if ((v21 & 1) != 0)
  {
    v23 = v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_viewModel;
    swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_viewModel, v32, 0, 0);
    v24 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v23, 1, v24);
    if (!(_DWORD)result)
    {
      sub_10002B1E8(v23, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
      {
        sub_10001F580((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        sub_10001F580((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        v25 = *(void **)&v14[*(int *)(v9 + 44)];
        if (v25)
        {
          v26 = v25;
          TTRRemindersListViewModel.SectionID.editableSectionCasesOnly.getter(v26);
          v28 = (char *)&loc_1003D0DB4 + 4 * asc_1005321F0[v27];
          v31[0] = v26;
          __asm { BR              X10 }
        }
        v29 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader;
        v30 = (uint64_t)v14;
      }
      else
      {
        v29 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item;
        v30 = (uint64_t)v8;
      }
      return sub_10001F544(v30, v29);
    }
  }
  return result;
}

id sub_1003D0EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  id v15;
  char *v16;
  NSString v17;
  id v18;
  objc_super v20;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  v8 = &v4[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_delegate];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8, 0);
  v9 = &v4[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_viewModel];
  v10 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = &v4[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_treeCellViewModel];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((_OWORD *)v11 + 2) = 0u;
  *((_QWORD *)v11 + 6) = 0;
  v12 = &v4[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_treeCellViewDelegate];
  *((_QWORD *)v12 + 1) = 0;
  swift_unknownObjectWeakInit(v12, 0);
  v13 = &v4[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameModule];
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_OWORD *)v13 + 2) = 0u;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameTextView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_disclosureView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameContainer] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_topSeparator] = 0;
  v14 = OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_unsupportedTextDropHandler;
  v15 = objc_allocWithZone((Class)type metadata accessor for TTRIUnsupportedTextDropHandler(0));
  v16 = v4;
  *(_QWORD *)&v4[v14] = objc_msgSend(v15, "init");

  if (a3)
  {
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v17 = 0;
  }
  v20.receiver = v16;
  v20.super_class = ObjectType;
  v18 = objc_msgSendSuper2(&v20, "initWithStyle:reuseIdentifier:", a1, v17);

  return v18;
}

id sub_1003D108C(void *a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = &v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_delegate];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5, 0);
  v6 = &v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_viewModel];
  v7 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = &v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_treeCellViewModel];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_OWORD *)v8 + 2) = 0u;
  *((_QWORD *)v8 + 6) = 0;
  v9 = &v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_treeCellViewDelegate];
  *((_QWORD *)v9 + 1) = 0;
  swift_unknownObjectWeakInit(v9, 0);
  v10 = &v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameModule];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_OWORD *)v10 + 2) = 0u;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameTextView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_disclosureView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameContainer] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_topSeparator] = 0;
  v11 = OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_unsupportedTextDropHandler;
  v12 = objc_allocWithZone((Class)type metadata accessor for TTRIUnsupportedTextDropHandler(0));
  v13 = v2;
  *(_QWORD *)&v2[v11] = objc_msgSend(v12, "init");

  v16.receiver = v13;
  v16.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v16, "initWithCoder:", a1);

  return v14;
}

uint64_t sub_1003D12E0()
{
  return type metadata accessor for TTRIRemindersListEditableSectionCell(0);
}

uint64_t type metadata accessor for TTRIRemindersListEditableSectionCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100658F20;
  if (!qword_100658F20)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIRemindersListEditableSectionCell);
  return result;
}

void sub_1003D1324(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[10];

  v4[0] = &unk_100532298;
  sub_1003D13D0(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_1005322B0;
    v4[3] = &unk_100532298;
    v4[4] = &unk_1005322C8;
    v4[5] = &unk_1005322E0;
    v4[6] = &unk_1005322E0;
    v4[7] = &unk_1005322E0;
    v4[8] = &unk_1005322E0;
    v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 80);
  }
}

void sub_1003D13D0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100658F30)
  {
    v2 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100658F30);
  }
}

uint64_t sub_1003D1424@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = *v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_treeCellViewModel;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_10000735C(v3, a1, (uint64_t *)&unk_10065BDF0);
}

uint64_t sub_1003D1480()
{
  _QWORD *v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_treeCellViewDelegate;
  swift_beginAccess(v1, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t sub_1003D14D0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  _BYTE v7[24];

  v5 = *v2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_treeCellViewDelegate;
  swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1);
  return swift_unknownObjectRelease(a1);
}

void (*sub_1003D153C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = *v1;
  v5 = OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_treeCellViewDelegate;
  v3[5] = *v1;
  v3[6] = v5;
  v6 = v4 + v5;
  swift_beginAccess(v4 + v5, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  v8 = *(_QWORD *)(v6 + 8);
  v3[3] = Strong;
  v3[4] = v8;
  return sub_1000DAAC0;
}

void sub_1003D15B4(uint64_t a1)
{
  sub_1003CF7E8(a1);
}

void sub_1003D15D4(char a1, uint64_t a2)
{
  uint64_t v2;

  swift_getObjectType(v2, a2);
  __asm { BR              X10 }
}

id sub_1003D163C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;
  void *v34;
  void *v35;
  double v36;
  double v37;
  double v38;
  double v39;
  id result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  objc_msgSend(v34, "bounds");
  result = objc_msgSend(v35, "convertRect:fromCoordinateSpace:", v34, v36, v37, v38, v39);
  *(_QWORD *)v33 = v41;
  *(_QWORD *)(v33 + 8) = v42;
  *(_QWORD *)(v33 + 16) = v43;
  *(_QWORD *)(v33 + 24) = v44;
  *(_BYTE *)(v33 + 32) = 0;
  return result;
}

void sub_1003D1778()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameTextView);
  if (v1)
  {
    v2 = type metadata accessor for TTRIRemindersListEditableSectionNameTextView();
    v3 = v1;
    UITextInput<>.ttrBeginEditing()(v2);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003D17D4@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _BYTE v5[40];

  sub_1003D15D4(a1, a2);
  return sub_10000F614((uint64_t)v5, a3, (uint64_t *)&unk_1006547A0);
}

void sub_1003D1818()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  uint64_t v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double MaxY;
  CGFloat MinY;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;

  objc_msgSend(v0, "bounds");
  v5 = OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_topSeparator;
  v6 = *(void **)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_topSeparator];
  if (!v6)
  {
    __break(1u);
    goto LABEL_8;
  }
  v7 = v1;
  v8 = v2;
  v9 = v3;
  v10 = v4;
  if ((objc_msgSend(v6, "isHidden") & 1) != 0)
    return;
  v11 = *(void **)&v0[v5];
  if (!v11)
  {
LABEL_8:
    __break(1u);
    return;
  }
  objc_msgSend(v11, "bounds");
  objc_msgSend(v0, "convertRect:fromView:", *(_QWORD *)&v0[v5]);
  v22.origin.x = v7;
  v22.origin.y = v8;
  v22.size.width = v9;
  v22.size.height = v10;
  v19 = CGRectIntersection(v18, v22);
  x = v19.origin.x;
  y = v19.origin.y;
  width = v19.size.width;
  height = v19.size.height;
  if (!CGRectIsEmpty(v19))
  {
    v20.origin.x = x;
    v20.origin.y = y;
    v20.size.width = width;
    v20.size.height = height;
    MaxY = CGRectGetMaxY(v20);
    v21.origin.x = v7;
    v21.origin.y = v8;
    v21.size.width = v9;
    v21.size.height = v10;
    MinY = CGRectGetMinY(v21);
    sub_100038048(v7, v8, v9, v10, MaxY - MinY, 0.0);
  }
}

id sub_1003D19A0(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t ObjectType;
  id result;
  int v5;
  void *v6;
  char *v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD *, uint64_t, uint64_t);
  id v14;
  char *v15;
  _QWORD v16[5];
  char v17[24];

  ObjectType = swift_getObjectType(v2, a2);
  result = objc_msgSend(v2, "isEditing");
  v5 = (int)result;
  if ((result & 1) != 0)
    return (id)(v5 ^ 1u);
  v6 = *(void **)&v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_disclosureView];
  if (v6)
  {
    v7 = &v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_treeCellViewDelegate];
    swift_beginAccess(&v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_treeCellViewDelegate], v17, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v7);
    if (Strong)
    {
      v10 = Strong;
      v11 = *((_QWORD *)v7 + 1);
      v12 = swift_getObjectType(Strong, v9);
      v16[3] = ObjectType;
      v16[4] = &off_100604590;
      v16[0] = v2;
      v13 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v11 + 8);
      v14 = v6;
      v15 = v2;
      v13(v16, v12, v11);
      swift_unknownObjectRelease(v10);
      sub_100027F10(v16);

    }
    return (id)(v5 ^ 1u);
  }
  __break(1u);
  return result;
}

void *sub_1003D1B2C()
{
  uint64_t v0;
  uint64_t v1;
  void *result;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;

  v1 = OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameTextView;
  result = *(void **)(v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameTextView);
  if (result)
  {
    v3 = objc_msgSend(result, "text");
    if (v3)
    {
      v4 = v3;
      v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
      v7 = v6;

      v8 = HIBYTE(v7) & 0xF;
      if ((v7 & 0x2000000000000000) == 0)
        v8 = v5 & 0xFFFFFFFFFFFFLL;
      if (v8)
        return (void *)v5;
      swift_bridgeObjectRelease(v7);
    }
    result = *(void **)(v0 + v1);
    if (result)
    {
      v9 = objc_msgSend(result, "attributedPlaceholder");
      v10 = v9;
      if (!v9)
        return 0;
      v11 = objc_msgSend(v9, "string");

      v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      return (void *)v5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1003D1C34(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t))
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;

  v6 = a1;
  sub_1003D1CC0(a3, a4);
  v8 = v7;

  if (v8)
  {
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v9 = 0;
  }
  return v9;
}

id sub_1003D1CC0(uint64_t (*a1)(uint64_t), uint64_t (*a2)(uint64_t))
{
  char *v2;
  id result;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t *v10;
  _BYTE v11[24];

  result = objc_msgSend(v2, "isEditing");
  if ((result & 1) != 0)
    return 0;
  v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_disclosureView];
  if (v7)
  {
    v8 = (_BYTE *)(v7 + direct field offset for TTRIRemindersListDisclosureView.isExpanded);
    v9 = swift_beginAccess(v7 + direct field offset for TTRIRemindersListDisclosureView.isExpanded, v11, 0, 0);
    if (*v8)
      v10 = (uint64_t *)a1(v9);
    else
      v10 = (uint64_t *)a2(v9);
    v6 = *v10;
    swift_bridgeObjectRetain(v10[1]);
    return (id)v6;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1003D1DC8()
{
  char *v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  _QWORD *result;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _BYTE v20[24];

  v1 = (unint64_t)sub_1003D1B2C();
  if (!v2)
    goto LABEL_9;
  v3 = v1;
  v4 = v2;
  v5 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v5 = v1 & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease(v2);
LABEL_9:
    v6 = _swiftEmptyArrayStorage;
    goto LABEL_10;
  }
  v6 = sub_10001D840(0, 1, 1, _swiftEmptyArrayStorage);
  v8 = v6[2];
  v7 = v6[3];
  if (v8 >= v7 >> 1)
    v6 = sub_10001D840((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
  v6[2] = v8 + 1;
  v9 = &v6[2 * v8];
  v9[4] = v3;
  v9[5] = v4;
LABEL_10:
  result = objc_msgSend(v0, "isEditing");
  if ((result & 1) != 0)
    return v6;
  v11 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_disclosureView];
  if (v11)
  {
    v12 = (_BYTE *)(v11 + direct field offset for TTRIRemindersListDisclosureView.isExpanded);
    swift_beginAccess(v11 + direct field offset for TTRIRemindersListDisclosureView.isExpanded, v20, 0, 0);
    if (*v12 == 1)
      v14 = (uint64_t *)TTRAccesibility.AccountsList.Action.Collapse.unsafeMutableAddressor(v13);
    else
      v14 = (uint64_t *)TTRAccesibility.AccountsList.Action.Expand.unsafeMutableAddressor(v13);
    v16 = *v14;
    v15 = v14[1];
    swift_bridgeObjectRetain(v15);
    if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
      v6 = sub_10001D840(0, v6[2] + 1, 1, v6);
    v18 = v6[2];
    v17 = v6[3];
    if (v18 >= v17 >> 1)
      v6 = sub_10001D840((_QWORD *)(v17 > 1), v18 + 1, 1, v6);
    v6[2] = v18 + 1;
    v19 = &v6[2 * v18];
    v19[4] = v16;
    v19[5] = v15;
    return v6;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1003D1FD4(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  Swift::String v19;
  Swift::String v20;
  void *object;
  void *v22;
  uint64_t v23;
  id v24;
  NSString v25;
  void *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];
  char v34[24];
  objc_super v35;
  unint64_t v36;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35.receiver = v3;
  v35.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v35, "accessibilityCustomActions", v9);
  if (v12)
  {
    v13 = v12;
    v14 = sub_100005ED8(0, (unint64_t *)&unk_1006466C0, UIAccessibilityCustomAction_ptr);
    v15 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

  }
  else
  {
    v15 = _swiftEmptyArrayStorage;
  }
  v36 = (unint64_t)v15;
  if ((objc_msgSend(v3, "isEditing") & 1) == 0)
  {
    v16 = (uint64_t)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_viewModel];
    swift_beginAccess(&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_viewModel], v34, 0, 0);
    v17 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
    {
      sub_10002B1E8(v16, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (swift_getEnumCaseMultiPayload(v7, v5) == 1)
      {
        sub_10001F580((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        v18 = v11[*(int *)(v8 + 32)];
        sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        if (v18 == 1)
        {
          v19._object = (void *)0x8000000100577620;
          v20._countAndFlagsBits = 0x656D616E6552;
          v20._object = (void *)0xE600000000000000;
          v19._countAndFlagsBits = 0xD00000000000003FLL;
          object = TTRLocalizedString(_:comment:)(v20, v19)._object;
          sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
          v22 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)(0x6C69636E6570, 0xE600000000000000);
          v23 = swift_allocObject(&unk_1006045D0, 24, 7);
          swift_unknownObjectWeakInit(v23 + 16, v3);
          v24 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
          swift_retain();
          v25 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(object);
          aBlock[4] = sub_1003D30D4;
          aBlock[5] = v23;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100341638;
          aBlock[3] = &unk_1006045E8;
          v26 = _Block_copy(aBlock);
          v27 = objc_msgSend(v24, "initWithName:image:actionHandler:", v25, v22, v26);

          _Block_release(v26);
          swift_release();
          swift_release();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
          v30 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v29 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v30 >= v29 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
          v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v27);
          specialized Array._endMutation()(v31);
          return (_QWORD *)v36;
        }
      }
      else
      {
        sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
    }
  }
  return v15;
}

uint64_t sub_1003D23F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  _BYTE v10[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v2);
  v4 = (char *)result;
  if (!result)
    return v4 != 0;
  v5 = OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameTextView;
  v6 = *(void **)(result + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameTextView);
  if (v6)
  {
    v7 = type metadata accessor for TTRIRemindersListEditableSectionNameTextView();
    v8 = v6;
    UITextInput<>.ttrBeginEditing()(v7);

    LODWORD(v7) = UIAccessibilityLayoutChangedNotification;
    v9 = *(id *)&v4[v5];
    UIAccessibilityPostNotification(v7, v9);

    return v4 != 0;
  }
  __break(1u);
  return result;
}

void sub_1003D2560(uint64_t a1)
{
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_topSeparator);
  if (v1)
  {
    v2 = (void *)objc_opt_self(UIColor);
    v3 = v1;
    TTRISeparator.backgroundColor.setter(objc_msgSend(v2, "tertiarySystemFillColor"));

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003D25D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, uint64_t);
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  unsigned int (*v54)(uint64_t, uint64_t, uint64_t);
  __int128 *v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  __int128 *v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  char v64;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  unsigned int (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _OWORD v78[6];
  _OWORD v79[2];
  _OWORD v80[6];
  _OWORD v81[2];
  _BYTE v82[128];
  _BYTE v83[128];
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  _OWORD v90[8];
  _OWORD v91[2];
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  _OWORD v98[2];
  _OWORD v99[6];
  _OWORD v100[2];
  _BYTE v101[128];
  _BYTE v102[128];
  _BYTE v103[128];
  _OWORD v104[6];
  _OWORD v105[3];

  v77 = a2;
  v3 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v3);
  v68 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v67 = (char *)&v66 - v6;
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v66 = (uint64_t)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_10002A750(&qword_10064B6A8);
  __chkstk_darwin(v73);
  v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750((uint64_t *)&unk_100654970);
  __chkstk_darwin(v12);
  v69 = (uint64_t)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v71 = (uint64_t)&v66 - v15;
  __chkstk_darwin(v16);
  v75 = (uint64_t)&v66 - v17;
  __chkstk_darwin(v18);
  v76 = (uint64_t)&v66 - v19;
  __chkstk_darwin(v20);
  v22 = (char *)&v66 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v66 - v24;
  v26 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v26);
  v72 = (uint64_t)&v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v66 - v29;
  __chkstk_darwin(v31);
  v33 = (char *)&v66 - v32;
  v74 = a1;
  sub_10000735C(a1, (uint64_t)v25, (uint64_t *)&unk_100654970);
  v34 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
  v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48);
  if (v35(v25, 1, v34) == 1)
  {
    sub_1000073A0((uint64_t)v25, (uint64_t *)&unk_100654970);
    v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v36(v33, 1, 1, v7);
  }
  else
  {
    sub_10002B1E8((uint64_t)v25, (uint64_t)v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F544((uint64_t)v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
    v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v36(v33, 0, 1, v7);
  }
  sub_10000735C(v77, (uint64_t)v22, (uint64_t *)&unk_100654970);
  v37 = v35(v22, 1, v34);
  v70 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v35;
  if (v37 == 1)
  {
    sub_1000073A0((uint64_t)v22, (uint64_t *)&unk_100654970);
    v38 = 1;
  }
  else
  {
    sub_10002B1E8((uint64_t)v22, (uint64_t)v30, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F544((uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
    v38 = 0;
  }
  v39 = v73;
  v36(v30, v38, 1, v7);
  v40 = (uint64_t)&v11[*(int *)(v39 + 48)];
  sub_10000735C((uint64_t)v33, (uint64_t)v11, (uint64_t *)&unk_100640EB0);
  sub_10000735C((uint64_t)v30, v40, (uint64_t *)&unk_100640EB0);
  v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v41((uint64_t)v11, 1, v7) == 1)
  {
    sub_1000073A0((uint64_t)v30, (uint64_t *)&unk_100640EB0);
    sub_1000073A0((uint64_t)v33, (uint64_t *)&unk_100640EB0);
    v42 = v41(v40, 1, v7);
    v43 = v76;
    if (v42 == 1)
    {
      sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_100640EB0);
      sub_10000735C(v74, v43, (uint64_t *)&unk_100654970);
      v44 = v75;
      sub_10000735C(v77, v75, (uint64_t *)&unk_100654970);
      goto LABEL_15;
    }
    goto LABEL_12;
  }
  v45 = v72;
  sub_10000735C((uint64_t)v11, v72, (uint64_t *)&unk_100640EB0);
  if (v41(v40, 1, v7) == 1)
  {
    sub_1000073A0((uint64_t)v30, (uint64_t *)&unk_100640EB0);
    sub_1000073A0((uint64_t)v33, (uint64_t *)&unk_100640EB0);
    sub_10001F544(v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v43 = v76;
LABEL_12:
    sub_1000073A0((uint64_t)v11, &qword_10064B6A8);
    sub_10000735C(v74, v43, (uint64_t *)&unk_100654970);
    v44 = v75;
    sub_10000735C(v77, v75, (uint64_t *)&unk_100654970);
    goto LABEL_13;
  }
  v47 = v66;
  v48 = sub_10001F580(v40, v66, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v49 = (uint64_t)v67;
  v50 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v48);
  v51 = (uint64_t)v68;
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v50);
  v52 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v49, v51);
  sub_10001F544(v51, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  sub_10001F544(v49, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  sub_10001F544(v47, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_1000073A0((uint64_t)v30, (uint64_t *)&unk_100640EB0);
  sub_1000073A0((uint64_t)v33, (uint64_t *)&unk_100640EB0);
  sub_10001F544(v72, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_100640EB0);
  v43 = v76;
  sub_10000735C(v74, v76, (uint64_t *)&unk_100654970);
  v44 = v75;
  sub_10000735C(v77, v75, (uint64_t *)&unk_100654970);
  if ((v52 & 1) != 0)
  {
LABEL_15:
    v53 = v71;
    sub_10000735C(v43, v71, (uint64_t *)&unk_100654970);
    v54 = v70;
    if (v70(v53, 1, v34) == 1)
    {
      sub_1000073A0(v53, (uint64_t *)&unk_100654970);
      sub_1000D2B94(&v92);
    }
    else
    {
      v55 = (__int128 *)(v53 + *(int *)(v34 + 20));
      v56 = v55[5];
      v88 = v55[4];
      v89 = v56;
      v90[0] = v55[6];
      *(_OWORD *)((char *)v90 + 10) = *(__int128 *)((char *)v55 + 106);
      v57 = v55[1];
      v84 = *v55;
      v85 = v57;
      v58 = v55[3];
      v86 = v55[2];
      v87 = v58;
      sub_10003E134((uint64_t)&v84);
      sub_10001F544(v53, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
      v96 = v88;
      v97 = v89;
      v98[0] = v90[0];
      *(_OWORD *)((char *)v98 + 10) = *(_OWORD *)((char *)v90 + 10);
      v92 = v84;
      v93 = v85;
      v94 = v86;
      v95 = v87;
      TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v92);
    }
    sub_10000F614((uint64_t)&v92, (uint64_t)v103, &qword_100649B60);
    v59 = v69;
    sub_10000735C(v44, v69, (uint64_t *)&unk_100654970);
    if (v54(v59, 1, v34) == 1)
    {
      sub_1000073A0(v59, (uint64_t *)&unk_100654970);
      sub_1000D2B94(&v92);
    }
    else
    {
      v60 = (__int128 *)(v59 + *(int *)(v34 + 20));
      v61 = v60[5];
      v88 = v60[4];
      v89 = v61;
      v90[0] = v60[6];
      *(_OWORD *)((char *)v90 + 10) = *(__int128 *)((char *)v60 + 106);
      v62 = v60[1];
      v84 = *v60;
      v85 = v62;
      v63 = v60[3];
      v86 = v60[2];
      v87 = v63;
      sub_10003E134((uint64_t)&v84);
      sub_10001F544(v59, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
      v96 = v88;
      v97 = v89;
      v98[0] = v90[0];
      *(_OWORD *)((char *)v98 + 10) = *(_OWORD *)((char *)v90 + 10);
      v92 = v84;
      v93 = v85;
      v94 = v86;
      v95 = v87;
      TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v92);
    }
    sub_10000F614((uint64_t)&v92, (uint64_t)v102, &qword_100649B60);
    sub_10000F614((uint64_t)v103, (uint64_t)&v92, &qword_100649B60);
    sub_10000F614((uint64_t)v102, (uint64_t)v99, &qword_100649B60);
    sub_10000F614((uint64_t)v103, (uint64_t)v101, &qword_100649B60);
    if (sub_100171C50((uint64_t)v101) == 1)
    {
      sub_1000073A0(v44, (uint64_t *)&unk_100654970);
      sub_1000073A0(v43, (uint64_t *)&unk_100654970);
      sub_10000F614((uint64_t)v99, (uint64_t)v104, &qword_100649B60);
      sub_10000F614((uint64_t)v104, (uint64_t)&v84, &qword_100649B60);
      if (sub_100171C50((uint64_t)&v84) == 1)
      {
        sub_10000F614((uint64_t)&v92, (uint64_t)v83, &qword_100649B60);
        sub_1003D3624((uint64_t)v83);
        v46 = 0;
        return v46 & 1;
      }
    }
    else
    {
      sub_10000F614((uint64_t)v102, (uint64_t)v83, &qword_100649B60);
      if (sub_100171C50((uint64_t)v83) != 1)
      {
        sub_10000F614((uint64_t)v102, (uint64_t)v78, &qword_100649B60);
        v88 = v78[4];
        v89 = v78[5];
        v90[0] = v79[0];
        *(_OWORD *)((char *)v90 + 10) = *(_OWORD *)((char *)v79 + 10);
        v84 = v78[0];
        v85 = v78[1];
        v86 = v78[2];
        v87 = v78[3];
        sub_10000F614((uint64_t)v103, (uint64_t)v80, &qword_100649B60);
        v104[4] = v80[4];
        v104[5] = v80[5];
        v105[0] = v81[0];
        *(_OWORD *)((char *)v105 + 10) = *(_OWORD *)((char *)v81 + 10);
        v104[0] = v80[0];
        v104[1] = v80[1];
        v104[2] = v80[2];
        v104[3] = v80[3];
        sub_10003E134((uint64_t)v80);
        v64 = static TTRRemindersListViewModel.SectionHeaderTitle.__derived_struct_equals(_:_:)(v104, &v84);
        sub_1003D3624((uint64_t)v102);
        sub_1000073A0(v44, (uint64_t *)&unk_100654970);
        sub_1000073A0(v43, (uint64_t *)&unk_100654970);
        sub_1003D3624((uint64_t)v103);
        sub_10000F614((uint64_t)&v92, (uint64_t)v82, &qword_100649B60);
        sub_1003D3624((uint64_t)v82);
        v46 = v64 ^ 1;
        return v46 & 1;
      }
      sub_10000F614((uint64_t)v103, (uint64_t)&v84, &qword_100649B60);
      sub_10003E134((uint64_t)&v84);
      sub_1000073A0(v44, (uint64_t *)&unk_100654970);
      sub_1000073A0(v43, (uint64_t *)&unk_100654970);
      sub_1003D3624((uint64_t)v103);
    }
    v90[6] = v99[4];
    v90[7] = v99[5];
    v91[0] = v100[0];
    *(_OWORD *)((char *)v91 + 10) = *(_OWORD *)((char *)v100 + 10);
    v90[2] = v99[0];
    v90[3] = v99[1];
    v90[4] = v99[2];
    v90[5] = v99[3];
    v88 = v96;
    v89 = v97;
    v90[0] = v98[0];
    v90[1] = v98[1];
    v84 = v92;
    v85 = v93;
    v86 = v94;
    v87 = v95;
    sub_1001E478C((uint64_t)&v84);
    v46 = 1;
    return v46 & 1;
  }
LABEL_13:
  sub_1000073A0(v44, (uint64_t *)&unk_100654970);
  sub_1000073A0(v43, (uint64_t *)&unk_100654970);
  v46 = 1;
  return v46 & 1;
}

uint64_t sub_1003D2FFC(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t ObjectType;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_QWORD *, uint64_t, uint64_t);
  char *v11;
  _QWORD v12[5];
  char v13[24];

  ObjectType = swift_getObjectType(v2, a2);
  v4 = &v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_treeCellViewDelegate];
  swift_beginAccess(&v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_treeCellViewDelegate], v13, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v4);
  if (result)
  {
    v7 = result;
    v8 = *((_QWORD *)v4 + 1);
    v9 = swift_getObjectType(result, v6);
    v12[3] = ObjectType;
    v12[4] = &off_100604590;
    v12[0] = v2;
    v10 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v8 + 8);
    v11 = v2;
    v10(v12, v9, v8);
    swift_unknownObjectRelease(v7);
    return sub_100027F10(v12);
  }
  return result;
}

uint64_t sub_1003D30B0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003D30D4(uint64_t a1)
{
  uint64_t v1;

  return sub_1003D23F8(a1, v1);
}

uint64_t sub_1003D30DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  int v28;
  char *v29;
  int v30;

  v1 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 161) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  sub_10003E2EC(*(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 80));
  v6 = *(unsigned __int8 *)(v0 + 136);
  if (v6 != 255)
    sub_10002B328(*(void **)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), v6 & 1);

  v7 = (_QWORD *)(v0 + v4);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
  {
    case 0u:
      v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v9))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_25;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_6;
        default:
          goto LABEL_26;
      }
      goto LABEL_26;
    case 1u:
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v10))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_25:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_6:
          v11 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v4, v11);
          break;
        default:
          break;
      }
LABEL_26:
      v25 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v26 = (char *)v7 + *(int *)(v25 + 20);
      v27 = *((_QWORD *)v26 + 1);
      if (v27)
      {
        swift_bridgeObjectRelease(v27);
        sub_10003E2EC(*((void **)v26 + 2), *((_QWORD *)v26 + 3), *((_QWORD *)v26 + 4), *((_QWORD *)v26 + 5), *((_QWORD *)v26 + 6), *((_QWORD *)v26 + 7), v26[64]);
        v28 = v26[120];
        if (v28 != 255)
          sub_10002B328(*((void **)v26 + 9), *((_QWORD *)v26 + 10), *((_QWORD *)v26 + 11), *((_QWORD *)v26 + 12), *((_QWORD *)v26 + 13), *((_QWORD *)v26 + 14), v28 & 1);
      }
      v17 = *(id *)((char *)v7 + *(int *)(v25 + 44));
      goto LABEL_30;
    case 2u:

      v12 = (id *)((char *)v7 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
      {
        switch(swift_getEnumCaseMultiPayload(v12, v13))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_34;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_13;
          default:
            goto LABEL_31;
        }
      }
      goto LABEL_31;
    case 3u:

      v12 = (id *)((char *)v7 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v12, 1, v14))
      {
        switch(swift_getEnumCaseMultiPayload(v12, v14))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_34;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_13;
          default:
            goto LABEL_31;
        }
      }
      goto LABEL_31;
    case 4u:

      v12 = (id *)((char *)v7 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v12, 1, v15))
      {
        switch(swift_getEnumCaseMultiPayload(v12, v15))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_34:
            v17 = *v12;
            goto LABEL_30;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_13:
            v16 = type metadata accessor for Date(0);
            goto LABEL_23;
          default:
            goto LABEL_31;
        }
      }
      goto LABEL_31;
    case 5u:
      v17 = (id)v7[2];
      goto LABEL_30;
    case 6u:
      v17 = (id)*v7;
      goto LABEL_30;
    case 7u:
      v18 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
      {
        swift_bridgeObjectRelease(*v7);
        v19 = (char *)v7 + *(int *)(v18 + 20);
        v20 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
      }
      v21 = (char *)v7 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (!v22)
        goto LABEL_31;
      swift_bridgeObjectRelease(v22);
      v17 = (id)*((_QWORD *)v21 + 2);
LABEL_30:

LABEL_31:
      v29 = (char *)v7 + *(int *)(v1 + 20);
      swift_bridgeObjectRelease(*((_QWORD *)v29 + 1));
      sub_10003E2EC(*((void **)v29 + 2), *((_QWORD *)v29 + 3), *((_QWORD *)v29 + 4), *((_QWORD *)v29 + 5), *((_QWORD *)v29 + 6), *((_QWORD *)v29 + 7), v29[64]);
      v30 = v29[120];
      if (v30 != 255)
        sub_10002B328(*((void **)v29 + 9), *((_QWORD *)v29 + 10), *((_QWORD *)v29 + 11), *((_QWORD *)v29 + 12), *((_QWORD *)v29 + 13), *((_QWORD *)v29 + 14), v30 & 1);
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 8u:
      v23 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v0 + v4, 1, v23))
      {
        v24 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v0 + v4, v24);
      }
      goto LABEL_31;
    case 9u:
      v12 = (id *)((char *)v7 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v16 = type metadata accessor for AnyTip(0);
LABEL_23:
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v12, v16);
      goto LABEL_31;
    default:
      goto LABEL_31;
  }
}

void sub_1003D3558()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0) - 8)
                          + 80);
  sub_1003D03B0(v0 + 16, *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(unsigned __int8 *)(v0 + 160), v0 + ((v1 + 161) & ~v1));
}

uint64_t sub_1003D3590()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1003D35A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100658FF0;
  if (!qword_100658FF0)
  {
    v1 = type metadata accessor for SectionEntity(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for SectionEntity, v1);
    atomic_store(result, (unint64_t *)&qword_100658FF0);
  }
  return result;
}

uint64_t sub_1003D35E8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for TTRRemindersListViewModel.SectionHeaderTitle.Separator
                                             - 1)
                                           + 32))(a2, a1);
  return a2;
}

uint64_t sub_1003D3624(uint64_t a1)
{
  sub_100171CCC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_OWORD *)(a1 + 64), *(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_WORD *)(a1 + 120));
  return a1;
}

uint64_t sub_1003D3684(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10002A750(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003D36D0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_unknownObjectWeakDestroy(v0 + 24);

  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for TTRITemplateSavingRouter()
{
  return objc_opt_self(_TtC9Reminders24TTRITemplateSavingRouter);
}

UIMenu sub_1003D3724(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *preferredElementSize;
  Swift::String v24;
  _QWORD *v26;
  uint64_t v27;
  Swift::OpaquePointer v28;
  UIImage_optional v29;

  v5 = a1 & 1;
  sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
  v6 = static TTRLocalizableStrings.Sections.newSectionActionText(listLayout:)(v5);
  v8 = v7;
  v9 = swift_allocObject(&unk_100604710, 33, 7);
  *(_QWORD *)(v9 + 16) = a2;
  *(_QWORD *)(v9 + 24) = a3;
  *(_BYTE *)(v9 + 32) = 0;
  swift_retain();
  v10 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v6, v8, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1003D3A1C, v9);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
  v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v11 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v12 >= v11 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
  v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
  specialized Array._endMutation()(v13);
  v14 = static TTRLocalizableStrings.RemindersList.editSectionsActionText(listLayout:)(v5);
  v16 = v15;
  v17 = swift_allocObject(&unk_100604738, 33, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  *(_BYTE *)(v17 + 32) = 1;
  swift_retain();
  v18 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v14, v16, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1003D3A1C, v17);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
  v20 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v19 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v20 >= v19 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
  v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v18);
  specialized Array._endMutation()(v21);
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v26 = _swiftEmptyArrayStorage;
    else
      v26 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    v27 = sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    preferredElementSize = (_QWORD *)_bridgeCocoaArray<A>(_:)(v26, v27);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  }
  else
  {
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v22);
    sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
    preferredElementSize = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v29.value.super.isa = 0;
  v29.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v24, (Swift::String_optional)0, v29, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, v28);
}

uint64_t sub_1003D39F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 33, 7);
}

uint64_t sub_1003D3A20()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(unsigned __int8 *)(v0 + 32));
}

void sub_1003D3A4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003DC6B0(v0, (uint64_t)v3);
  v4 = (char *)sub_1003D3AD0 + 4 * byte_100532430[swift_getEnumCaseMultiPayload(v3, v1)];
  __asm { BR              X10 }
}

uint64_t sub_1003D3AD0()
{
  return 2;
}

uint64_t TTRSmartListFilterEditorViewModel.DateOptions.Bare.localizedOptionString.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)())((char *)sub_1003D3CC8 + 4 * byte_100532439[a1]))();
}

uint64_t sub_1003D3CC8()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000002ALL;
  v1._object = (void *)0x8000000100569750;
  v0._object = (void *)0x8000000100569770;
  v1._countAndFlagsBits = 0xD00000000000001BLL;
  v2._countAndFlagsBits = 6710863;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t sub_1003D3D0C()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000002ALL;
  v1._object = (void *)0x80000001005697A0;
  v0._object = (void *)0x80000001005697C0;
  v1._countAndFlagsBits = 0xD00000000000001BLL;
  v2._countAndFlagsBits = 7958081;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t sub_1003D3D50()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000001DLL;
  v1._countAndFlagsBits = 0xD00000000000002CLL;
  v0._object = (void *)0x80000001005697F0;
  v1._object = (void *)0x8000000100569810;
  v2._countAndFlagsBits = 0x7961646F54;
  v2._object = (void *)0xE500000000000000;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t sub_1003D3D94()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000001FLL;
  v1._countAndFlagsBits = 0xD000000000000030;
  v0._object = (void *)0x8000000100569840;
  v1._object = (void *)0x8000000100569860;
  v2._countAndFlagsBits = 0x7461442061206E4FLL;
  v2._object = (void *)0xE900000000000065;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t sub_1003D3DE0()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000023;
  v1._countAndFlagsBits = 0xD000000000000034;
  v0._object = (void *)0x80000001005698A0;
  v1._object = (void *)0x80000001005698D0;
  v2._countAndFlagsBits = 0x612065726F666542;
  v2._object = (void *)0xED00006574614420;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t sub_1003D3E34()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000022;
  v1._countAndFlagsBits = 0xD000000000000033;
  v0._object = (void *)0x8000000100569910;
  v1._object = (void *)0x8000000100569940;
  v2._countAndFlagsBits = 0x2061207265746641;
  v2._object = (void *)0xEC00000065746144;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t sub_1003D3E84()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000027;
  v1._countAndFlagsBits = 0xD000000000000036;
  v0._object = (void *)0x8000000100569980;
  v1._object = (void *)0x80000001005699B0;
  v2._countAndFlagsBits = 0x6569666963657053;
  v2._object = (void *)0xEF65676E61522064;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t sub_1003D3ED8()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000026;
  v1._countAndFlagsBits = 0xD000000000000035;
  v0._object = (void *)0x80000001005699F0;
  v1._object = (void *)0x8000000100569A20;
  v2._countAndFlagsBits = 0x65766974616C6552;
  v2._object = (void *)0xEE0065676E615220;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t sub_1003D3F2C()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000001FLL;
  v1._countAndFlagsBits = 0xD00000000000002ELL;
  v0._object = (void *)0x8000000100569A60;
  v1._object = (void *)0x8000000100569A80;
  v2._countAndFlagsBits = 0x65746144206F4ELL;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t TTRSmartListFilterEditorViewModel.TimeOptions.localizedOptionString.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)())((char *)sub_1003D3F90 + 4 * byte_100532442[a1]))();
}

uint64_t sub_1003D3F90()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000001BLL;
  v1._countAndFlagsBits = 0xD00000000000002ALL;
  v0._object = (void *)0x800000010056A260;
  v1._object = (void *)0x800000010056A280;
  v2._countAndFlagsBits = 6710863;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t sub_1003D3FD0()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000001BLL;
  v1._countAndFlagsBits = 0xD00000000000002ALL;
  v0._object = (void *)0x800000010056A2B0;
  v1._object = (void *)0x800000010056A2D0;
  v2._countAndFlagsBits = 7958081;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t sub_1003D4010()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000001FLL;
  v0._object = (void *)0x800000010056A300;
  v1._object = (void *)0x800000010056A320;
  v2._countAndFlagsBits = 0x676E696E726F4DLL;
  v2._object = (void *)0xE700000000000000;
  v1._countAndFlagsBits = 0xD00000000000002ELL;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t TTRSmartListFilterEditorViewModel.PriorityOptions.localizedOptionString.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)())((char *)sub_1003D4180 + 4 * byte_100532449[a1]))();
}

uint64_t sub_1003D4180()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000030;
  v1._object = (void *)0x8000000100569E70;
  v0._object = (void *)0x8000000100569EA0;
  v1._countAndFlagsBits = 0xD000000000000021;
  v2._countAndFlagsBits = 6710863;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t sub_1003D41C4()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000030;
  v1._object = (void *)0x8000000100569EE0;
  v0._object = (void *)0x8000000100569F10;
  v1._countAndFlagsBits = 0xD000000000000021;
  v2._countAndFlagsBits = 7958081;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t sub_1003D4208()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000030;
  v1._object = (void *)0x8000000100569F50;
  v0._object = (void *)0x8000000100569F80;
  v1._countAndFlagsBits = 0xD000000000000021;
  v2._countAndFlagsBits = 7827276;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t sub_1003D424C()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000024;
  v1._countAndFlagsBits = 0xD000000000000033;
  v0._object = (void *)0x8000000100569FC0;
  v1._object = (void *)0x8000000100569FF0;
  v2._countAndFlagsBits = 0x6D756964654DLL;
  v2._object = (void *)0xE600000000000000;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t sub_1003D4294()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000022;
  v1._countAndFlagsBits = 0xD000000000000031;
  v0._object = (void *)0x800000010056A030;
  v1._object = (void *)0x800000010056A060;
  v2._countAndFlagsBits = 1751607624;
  v2._object = (void *)0xE400000000000000;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t sub_1003D42D4()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000029;
  v1._countAndFlagsBits = 0xD000000000000038;
  v0._object = (void *)0x800000010056A0A0;
  v1._object = (void *)0x800000010056A0D0;
  v2._countAndFlagsBits = 0x726F697250206F4ELL;
  v2._object = (void *)0xEB00000000797469;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t TTRSmartListFilterEditorViewModel.FlaggedOptions.localizedOptionString.getter(char a1)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;

  if (a1)
  {
    if (a1 == 1)
    {
      v1 = 0xD000000000000022;
      v2 = 0xD000000000000031;
      v3 = 0x800000010056A180;
      v4 = 0x800000010056A1B0;
      v5 = 0x64656767616C46;
      v6 = 0xE700000000000000;
    }
    else
    {
      v1 = 0xD000000000000026;
      v2 = 0xD000000000000035;
      v3 = 0x800000010056A1F0;
      v4 = 0x800000010056A220;
      v5 = 0x67616C4620746F4ELL;
      v6 = 0xEB00000000646567;
    }
    return TTRLocalizedString(_:value:comment:)(*(Swift::String *)&v1, *(Swift::String *)&v5, *(Swift::String *)&v2)._countAndFlagsBits;
  }
  else
  {
    v7._countAndFlagsBits = 0xD00000000000002DLL;
    v8._object = (void *)0x800000010056A130;
    v7._object = (void *)0x800000010056A150;
    v8._countAndFlagsBits = 0xD00000000000001ELL;
    v9._countAndFlagsBits = 6710863;
    v9._object = (void *)0xE300000000000000;
    return TTRLocalizedString(_:value:comment:)(v8, v9, v7)._countAndFlagsBits;
  }
}

uint64_t TTRSmartListFilterEditorViewModel.LocationOptions.localizedOptionString.getter(char a1)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;

  if (a1)
  {
    if (a1 == 1)
    {
      v1 = 0xD000000000000024;
      v2 = 0xD000000000000033;
      v3 = 0x8000000100569BA0;
      v4 = 0x8000000100569BD0;
      v5 = 0x6369666963657053;
      v6 = 0xE800000000000000;
    }
    else
    {
      v1 = 0xD000000000000027;
      v2 = 0xD000000000000036;
      v3 = 0x8000000100569C10;
      v4 = 0x8000000100569C40;
      v5 = 0x7461636F4C206F4ELL;
      v6 = 0xEB000000006E6F69;
    }
    return TTRLocalizedString(_:value:comment:)(*(Swift::String *)&v1, *(Swift::String *)&v5, *(Swift::String *)&v2)._countAndFlagsBits;
  }
  else
  {
    v7._countAndFlagsBits = 0xD00000000000002ELL;
    v8._object = (void *)0x8000000100569B50;
    v7._object = (void *)0x8000000100569B70;
    v8._countAndFlagsBits = 0xD00000000000001FLL;
    v9._countAndFlagsBits = 6710863;
    v9._object = (void *)0xE300000000000000;
    return TTRLocalizedString(_:value:comment:)(v8, v9, v7)._countAndFlagsBits;
  }
}

uint64_t TTRSmartListFilterEditorViewModel.HashtagOptions.localizedOptionString.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)())((char *)sub_1003D4518 + 4 * byte_10053244F[a1]))();
}

uint64_t sub_1003D4518()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000001ALL;
  v1._countAndFlagsBits = 0xD000000000000029;
  v0._object = (void *)0x80000001005694F0;
  v1._object = (void *)0x8000000100569510;
  v2._countAndFlagsBits = 6710863;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t sub_1003D4558()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000001ALL;
  v1._countAndFlagsBits = 0xD00000000000002DLL;
  v0._object = (void *)0x8000000100569540;
  v1._object = (void *)0x8000000100569560;
  v2._countAndFlagsBits = 0x67615420796E41;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t sub_1003D45A0()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD000000000000023;
  v1._countAndFlagsBits = 0xD000000000000037;
  v0._object = (void *)0x8000000100569590;
  v2._object = (void *)0x80000001005695C0;
  v1._object = (void *)0x80000001005695E0;
  v2._countAndFlagsBits = 0xD000000000000011;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t sub_1003D462C()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  v0._countAndFlagsBits = 0xD00000000000001FLL;
  v1._countAndFlagsBits = 0xD00000000000002DLL;
  v0._object = (void *)0x80000001005696B0;
  v1._object = (void *)0x80000001005696D0;
  v2._countAndFlagsBits = 0x73676154206F4ELL;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t TTRSmartListFilterEditorViewModel.ListsOptions.localizedOptionString.getter(char a1)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;

  if (a1)
  {
    if (a1 == 1)
    {
      v1 = 0xD00000000000002FLL;
      v2 = 0x8000000100569CF0;
      v3 = 0x8000000100569D20;
      v4 = 0xD000000000000020;
      v5 = 0x6564756C636E49;
    }
    else
    {
      v5 = 0x6564756C637845;
      v1 = 0xD00000000000002FLL;
      v2 = 0x8000000100569D50;
      v3 = 0x8000000100569D80;
      v4 = 0xD000000000000020;
    }
    v6 = 0xE700000000000000;
    return TTRLocalizedString(_:value:comment:)(*(Swift::String *)&v4, *(Swift::String *)&v5, *(Swift::String *)&v1)._countAndFlagsBits;
  }
  else
  {
    v7._countAndFlagsBits = 0xD00000000000001CLL;
    v8._countAndFlagsBits = 0xD00000000000002BLL;
    v7._object = (void *)0x8000000100569CA0;
    v8._object = (void *)0x8000000100569CC0;
    v9._countAndFlagsBits = 6710863;
    v9._object = (void *)0xE300000000000000;
    return TTRLocalizedString(_:value:comment:)(v7, v9, v8)._countAndFlagsBits;
  }
}

uint64_t TTRSmartListFilterEditorViewModel.FilterOperationOptions.localizedOptionString.getter(char a1)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  if ((a1 & 1) != 0)
  {
    v1 = 0xD000000000000044;
    v2 = 0x800000010056A540;
    v3 = 0x800000010056A560;
    v4 = 0xD000000000000016;
    v5 = 7105633;
  }
  else
  {
    v1 = 0xD000000000000045;
    v2 = 0x800000010056A4D0;
    v3 = 0x800000010056A4F0;
    v4 = 0xD000000000000016;
    v5 = 7958113;
  }
  v6 = 0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(*(Swift::String *)&v4, *(Swift::String *)&v5, *(Swift::String *)&v1)._countAndFlagsBits;
}

uint64_t TTRSmartListFilterEditorViewModel.ListsData.listsOption.getter()
{
  __int128 *v0;
  int v1;
  uint64_t v2;
  _BYTE v4[176];

  sub_1001CCEC4(v0, (uint64_t)v4);
  v1 = sub_1001CCF00((uint64_t)v4);
  if (v1)
  {
    if (v1 != 1)
      return 0;
    v2 = 2;
  }
  else
  {
    v2 = 1;
  }
  TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v4);
  return v2;
}

uint64_t TTRSmartListFilterEditorViewModel.ListsData.listData.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  Reminders::TTRReminderIDsWithMatchingHashtagsProvider v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[9];
  _BYTE v14[25];
  _BYTE v15[176];
  _BYTE v16[168];

  sub_1001CCEC4(v1, (uint64_t)v15);
  if (sub_1001CCF00((uint64_t)v15) > 1)
  {
    sub_1003D7640((uint64_t)v16);
  }
  else
  {
    v3.reminders._rawValue = TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v15).reminders._rawValue;
    v5 = *((_OWORD *)v3.reminders._rawValue + 1);
    v4 = *((_OWORD *)v3.reminders._rawValue + 2);
    v13[0] = *(_OWORD *)v3.reminders._rawValue;
    v13[1] = v5;
    v13[2] = v4;
    v6 = *((_OWORD *)v3.reminders._rawValue + 6);
    v8 = *((_OWORD *)v3.reminders._rawValue + 3);
    v7 = *((_OWORD *)v3.reminders._rawValue + 4);
    v13[5] = *((_OWORD *)v3.reminders._rawValue + 5);
    v13[6] = v6;
    v13[3] = v8;
    v13[4] = v7;
    v10 = *((_OWORD *)v3.reminders._rawValue + 8);
    v9 = *((_OWORD *)v3.reminders._rawValue + 9);
    v11 = *((_OWORD *)v3.reminders._rawValue + 7);
    *(_OWORD *)&v14[9] = *(_OWORD *)((char *)v3.reminders._rawValue + 153);
    v13[8] = v10;
    *(_OWORD *)v14 = v9;
    v13[7] = v11;
    sub_10000F614((uint64_t)v13 + 8, (uint64_t)v16, &qword_10064ABD8);
    sub_1003DC588((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1003D752C);
  }
  sub_10000F614((uint64_t)v16, (uint64_t)v13, &qword_10064ABD8);
  return sub_10000F614((uint64_t)v13, a1, &qword_10064ABD8);
}

uint64_t static TTRSmartListFilterEditorViewModel.helpAnchor(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)TTRHelpAnchor.IOSHelpTopic.defaultVersion.unsafeMutableAddressor(a1);
  v5 = *v3;
  v4 = v3[1];
  *(_QWORD *)a2 = 0xD000000000000014;
  *(_QWORD *)(a2 + 8) = 0x8000000100569E30;
  *(_QWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 32) = xmmword_100527ED0;
  *(_OWORD *)(a2 + 48) = xmmword_100527EE0;
  *(_QWORD *)(a2 + 64) = 0xD000000000000018;
  *(_QWORD *)(a2 + 72) = 0x8000000100569E50;
  return swift_bridgeObjectRetain(v4);
}

uint64_t TTRSmartListFilterEditorViewModel.init(filter:doneAlwaysEnabled:)@<X0>(void *a1@<X0>, int a2@<W1>, _BYTE *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  id v36;
  int v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  _BYTE *v44;
  int v45;
  uint64_t *v46;
  id v47;
  uint64_t v48;
  int v49;
  id v50;
  uint64_t v51;
  id v52;
  char v53;
  int v54;
  int v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  double v70;
  double v71;
  double v72;
  id v73;
  NSString v74;
  void *v75;
  __int128 *v76;
  uint64_t v77;
  __int128 *v78;
  Swift::String v79;
  Swift::String v80;
  Swift::String v81;
  Swift::String v82;
  id v83;
  Class v84;
  id v85;
  char *v86;
  Swift::String v87;
  Swift::String v88;
  Swift::String v89;
  Swift::String v90;
  char *v91;
  id v92;
  Class v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int *v98;
  _BYTE *v99;
  _QWORD *v100;
  uint64_t *v101;
  uint64_t v102;
  __int128 *v103;
  void (*v104)(_BYTE *, __int128 *, uint64_t);
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  id v122;
  char v123;
  id v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v129;
  id v130;
  Class isa;
  id v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v143;
  id v144;
  Class v145;
  id v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  void (*v153)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v154;
  id v155;
  Class v156;
  id v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  id v165;
  char v166;
  _BYTE *v167;
  int *v168;
  _BYTE *v169;
  _QWORD *v170;
  uint64_t result;
  void *v172;
  id v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  __int128 *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  char *v186;
  uint64_t object;
  _QWORD *countAndFlagsBits;
  _BOOL4 v189;
  int v190;
  _BYTE *v191;
  uint64_t v192;
  char *v193;
  void *v194;
  uint64_t v195;
  char *v196;
  _BYTE *v197;
  _BYTE v198[168];
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  _OWORD v208[2];
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  _OWORD v218[2];
  __int128 v219[12];

  v190 = a2;
  v191 = a3;
  v174 = sub_10002A750(&qword_100642078);
  __chkstk_darwin(v174);
  v196 = (char *)&v172 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750(&qword_100642080);
  __chkstk_darwin(v5);
  v7 = (char *)&v172 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLocation(0);
  v195 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v184 = (char *)&v172 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v185 = (char *)&v172 - v11;
  v12 = sub_10002A750(&qword_100642088);
  __chkstk_darwin(v12);
  v193 = (char *)&v172 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Date(0);
  v181 = *(_QWORD *)(v14 - 8);
  v182 = v14;
  __chkstk_darwin(v14);
  countAndFlagsBits = (void **)((char *)&v172 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v178 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
  v175 = *(_QWORD *)(v178 - 8);
  __chkstk_darwin(v178);
  v176 = (char *)&v172 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = sub_10002A750(&qword_100654C98);
  __chkstk_darwin(v179);
  v180 = (__int128 *)((char *)&v172 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = sub_10002A750(&qword_100642090);
  __chkstk_darwin(v18);
  v20 = (char *)&v172 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  object = (uint64_t)&v172 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v172 - v25;
  v192 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
  __chkstk_darwin(v192);
  v197 = (char *)&v172 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_10002A750(&qword_1006590C8);
  __chkstk_darwin(v28);
  v30 = (char *)&v172 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = a1;
  if (!a1)
  {
    v40 = type metadata accessor for REMCustomSmartListFilterDescriptor.Operation(0);
    v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56);
    v189 = 1;
    v41(v30, 1, 1, v40);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
    v38 = v195;
    v33 = v8;
    goto LABEL_7;
  }
  v177 = v26;
  v31 = (void *)v21;
  v186 = v7;
  v183 = v8;
  v32 = a1;
  REMCustomSmartListFilterDescriptor.operation.getter();

  v33 = type metadata accessor for REMCustomSmartListFilterDescriptor.Operation(0);
  v34 = *(_QWORD *)(v33 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v30, 0, 1, v33);
  v35 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v30, v33);
  v189 = v35 == enum case for REMCustomSmartListFilterDescriptor.Operation.and(_:);
  if (v35 != enum case for REMCustomSmartListFilterDescriptor.Operation.and(_:)
    && v35 != enum case for REMCustomSmartListFilterDescriptor.Operation.or(_:))
  {
LABEL_90:
    _diagnoseUnexpectedEnumCase<A>(type:)(v28, v28);
    __break(1u);
LABEL_91:
    _diagnoseUnexpectedEnumCase<A>(type:)(v33, v33);
    __break(1u);
    goto LABEL_92;
  }
  v36 = v32;
  REMCustomSmartListFilterDescriptor.date.getter(v36);

  v32 = v31;
  v37 = (*(uint64_t (**)(char *, uint64_t, void *))(v22 + 48))(v20, 1, v31);
  v38 = v195;
  v39 = countAndFlagsBits;
  if (v37 == 1)
  {
    a1 = v194;
    v33 = v183;
    v7 = v186;
LABEL_7:
    sub_1000073A0((uint64_t)v20, &qword_100642090);
    v42 = (uint64_t)v197;
    swift_storeEnumTagMultiPayload(v197, v192, 6);
    if (!a1)
    {
      v67 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime(0);
      v68 = (uint64_t)v193;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v193, 1, 1, v67);
      LODWORD(v195) = _s9Reminders33TTRSmartListFilterEditorViewModelV11TimeOptionsO4timeAE19ReminderKitInternal014REMCustomSmartcD10DescriptorC0dH0OSg_tcfC_0(v68);
      LODWORD(v193) = _s9Reminders33TTRSmartListFilterEditorViewModelV15PriorityOptionsO14priorityLevelsAESaySo011REMReminderH5LevelVGSg_tcfC_0(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v7, 1, 1, v33);
      sub_1000073A0((uint64_t)v7, &qword_100642080);
      v69 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLists(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v196, 1, 1, v69);
      LODWORD(v186) = 0;
      LOBYTE(v38) = 0;
      object = 0;
      countAndFlagsBits = 0;
      v56 = 0;
      v57 = 0;
      v58 = 0;
      v33 = 0;
      LODWORD(v192) = 0;
LABEL_36:
      sub_1003DC4DC((uint64_t)&v209);
      sub_1001CCEC4(&v209, (uint64_t)v219);
      if ((v190 & 1) == 0)
        goto LABEL_82;
LABEL_46:

      v123 = 1;
      goto LABEL_85;
    }
    v36 = a1;
LABEL_11:
    v46 = (uint64_t *)v196;
    goto LABEL_12;
  }
  v43 = v177;
  (*(void (**)(char *, char *, id))(v22 + 32))(v177, v20, v32);
  v44 = (_BYTE *)object;
  (*(void (**)(uint64_t, char *, id))(v22 + 16))(object, v43, v32);
  v45 = (*(uint64_t (**)(_BYTE *, id))(v22 + 88))(v44, v32);
  v33 = v183;
  v7 = v186;
  if (v45 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.today(_:))
  {
    (*(void (**)(char *, id))(v22 + 8))(v43, v32);
    (*(void (**)(_BYTE *, id))(v22 + 96))(v44, v32);
    v42 = (uint64_t)v197;
    *v197 = *v44;
    swift_storeEnumTagMultiPayload(v42, v192, 0);
    goto LABEL_11;
  }
  v46 = (uint64_t *)v196;
  v173 = v36;
  if (v45 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.dateRange(_:))
  {
    v76 = (__int128 *)0xD000000000000019;
    v77 = object;
    (*(void (**)(uint64_t, id))(v22 + 96))(object, v32);
    v78 = v180;
    sub_10000F614(v77, (uint64_t)v180, &qword_100654C98);
    v79._countAndFlagsBits = 0xD00000000000001BLL;
    v80._countAndFlagsBits = 0xD000000000000030;
    v79._object = (void *)0x80000001005776B0;
    v80._object = (void *)0x80000001005776D0;
    v81._countAndFlagsBits = 1836020294;
    v81._object = (void *)0xE400000000000000;
    v82 = TTRLocalizedString(_:value:comment:)(v79, v81, v80);
    object = (uint64_t)v82._object;
    countAndFlagsBits = (_QWORD *)v82._countAndFlagsBits;
    v58 = (uint64_t)v32;
    v56 = v22;
    if (qword_10063D718 != -1)
      goto LABEL_88;
    goto LABEL_26;
  }
  if (v45 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.relativeRange(_:))
  {
    v108 = object;
    (*(void (**)(uint64_t, id))(v22 + 96))(object, v32);
    v109 = v176;
    countAndFlagsBits = *(_QWORD **)(v175 + 32);
    ((void (*)(char *, uint64_t, uint64_t))countAndFlagsBits)(v176, v108, v178);
    v110 = _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO30dateOptionRelativeRangeDetailsySS19ReminderKitInternal014REMCustomSmartE16FilterDescriptorC0Q4DateO0iJ0VFZ_0();
    v111 = v32;
    v112 = v110;
    v114 = v113;
    (*(void (**)(char *, id))(v22 + 8))(v43, v111);
    v115 = sub_10002A750(&qword_10064AC00);
    v42 = (uint64_t)v197;
    v116 = &v197[*(int *)(v115 + 48)];
    ((void (*)(_BYTE *, char *, uint64_t))countAndFlagsBits)(v197, v109, v178);
    v7 = v186;
    *v116 = 0;
    v116[1] = 0;
    v116[2] = v112;
    v116[3] = v114;
    v36 = v173;
    swift_storeEnumTagMultiPayload(v42, v192, 5);
    goto LABEL_12;
  }
  if (v45 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.beforeDate(_:))
  {
    v126 = object;
    (*(void (**)(uint64_t, id))(v22 + 96))(object, v32);
    v127 = v182;
    v128 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v181 + 32);
    v128(v39, v126, v182);
    v129 = v39;
    v42 = (uint64_t)v197;
    object = (uint64_t)v32;
    v181 = v22;
    if (qword_10063D718 != -1)
      swift_once(&qword_10063D718, sub_1003D64BC);
    v130 = (id)qword_1006590C0;
    isa = Date._bridgeToObjectiveC()().super.isa;
    v132 = objc_msgSend(v130, "stringFromDate:", isa);

    v133 = static String._unconditionallyBridgeFromObjectiveC(_:)(v132);
    v135 = v134;

    (*(void (**)(char *, uint64_t))(v181 + 8))(v177, object);
    v136 = (_QWORD *)(v42 + *(int *)(sub_10002A750(&qword_10064AC10) + 48));
    v128((_QWORD *)v42, (uint64_t)v129, v127);
    *v136 = 0;
    v136[1] = 0;
    v136[2] = v133;
    v136[3] = v135;
    v137 = v42;
    v138 = v192;
    v139 = 2;
LABEL_65:
    swift_storeEnumTagMultiPayload(v137, v138, v139);
    v7 = v186;
    v36 = v173;
    v33 = v183;
    goto LABEL_12;
  }
  v42 = (uint64_t)v197;
  if (v45 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.onDate(_:))
  {
    v140 = object;
    (*(void (**)(uint64_t, id))(v22 + 96))(object, v32);
    v141 = v182;
    v142 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v181 + 32);
    v143 = countAndFlagsBits;
    v142(countAndFlagsBits, v140, v182);
    object = (uint64_t)v32;
    v181 = v22;
    if (qword_10063D718 != -1)
      swift_once(&qword_10063D718, sub_1003D64BC);
    v144 = (id)qword_1006590C0;
    v145 = Date._bridgeToObjectiveC()().super.isa;
    v146 = objc_msgSend(v144, "stringFromDate:", v145);

    v147 = static String._unconditionallyBridgeFromObjectiveC(_:)(v146);
    v149 = v148;

    (*(void (**)(char *, uint64_t))(v181 + 8))(v177, object);
    v150 = (_QWORD *)(v42 + *(int *)(sub_10002A750(&qword_10064AC10) + 48));
    v142((_QWORD *)v42, (uint64_t)v143, v141);
    *v150 = 0;
    v150[1] = 0;
    v150[2] = v147;
    v150[3] = v149;
    v137 = v42;
    v138 = v192;
    v139 = 1;
    goto LABEL_65;
  }
  if (v45 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.afterDate(_:))
  {
    v151 = object;
    (*(void (**)(uint64_t, id))(v22 + 96))(object, v32);
    v152 = v182;
    v153 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v181 + 32);
    v154 = countAndFlagsBits;
    v153(countAndFlagsBits, v151, v182);
    object = (uint64_t)v32;
    v181 = v22;
    if (qword_10063D718 != -1)
      swift_once(&qword_10063D718, sub_1003D64BC);
    v155 = (id)qword_1006590C0;
    v156 = Date._bridgeToObjectiveC()().super.isa;
    v157 = objc_msgSend(v155, "stringFromDate:", v156);

    v158 = static String._unconditionallyBridgeFromObjectiveC(_:)(v157);
    v160 = v159;

    (*(void (**)(char *, uint64_t))(v181 + 8))(v177, object);
    v161 = (_QWORD *)(v42 + *(int *)(sub_10002A750(&qword_10064AC10) + 48));
    v153((_QWORD *)v42, (uint64_t)v154, v152);
    *v161 = 0;
    v161[1] = 0;
    v161[2] = v158;
    v161[3] = v160;
    v137 = v42;
    v138 = v192;
    v139 = 3;
    goto LABEL_65;
  }
  if (v45 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.any(_:))
  {
    (*(void (**)(char *, id))(v22 + 8))(v43, v32);
    swift_storeEnumTagMultiPayload(v42, v192, 7);
    goto LABEL_12;
  }
  if (v45 != enum case for REMCustomSmartListFilterDescriptor.FilterDate.noDate(_:))
  {
LABEL_92:
    result = _diagnoseUnexpectedEnumCase<A>(type:)(v32, v32);
    __break(1u);
    return result;
  }
  (*(void (**)(char *, id))(v22 + 8))(v43, v32);
  swift_storeEnumTagMultiPayload(v42, v192, 8);
  while (1)
  {
LABEL_12:
    v47 = v36;
    v48 = (uint64_t)v193;
    REMCustomSmartListFilterDescriptor.time.getter(v47);

    v49 = _s9Reminders33TTRSmartListFilterEditorViewModelV11TimeOptionsO4timeAE19ReminderKitInternal014REMCustomSmartcD10DescriptorC0dH0OSg_tcfC_0(v48);
    v50 = v47;
    v51 = REMCustomSmartListFilterDescriptor.priorities.getter(v50);

    LODWORD(v193) = _s9Reminders33TTRSmartListFilterEditorViewModelV15PriorityOptionsO14priorityLevelsAESaySo011REMReminderH5LevelVGSg_tcfC_0(v51);
    v52 = v50;
    v53 = REMCustomSmartListFilterDescriptor.flagged.getter(v52);

    if ((v53 & 1) != 0)
      v54 = 1;
    else
      v54 = 2;
    if (v53 == 2)
      v54 = 0;
    LODWORD(v192) = v54;
    v32 = v52;
    REMCustomSmartListFilterDescriptor.location.getter(v32);

    v55 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48))(v7, 1, v33);
    LODWORD(v195) = v49;
    if (v55 == 1)
    {
      sub_1000073A0((uint64_t)v7, &qword_100642080);
      LODWORD(v186) = 0;
      LODWORD(v38) = 0;
      object = 0;
      countAndFlagsBits = 0;
      v56 = 0;
      v57 = 0;
      v58 = 0;
      v33 = 0;
    }
    else
    {
      v59 = v185;
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v185, v7, v33);
      v60 = v184;
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v184, v59, v33);
      v61 = (*(uint64_t (**)(char *, uint64_t))(v38 + 88))(v60, v33);
      if (v61 == enum case for REMCustomSmartListFilterDescriptor.FilterLocation.vehicle(_:))
      {
        (*(void (**)(char *, uint64_t))(v38 + 96))(v60, v33);
        v62 = static TTRLocalizableStrings.LocationPicker.vehicleEventText(_:)(*(_QWORD *)v60);
        v58 = v63;
        v64 = 0;
        v56 = 0;
        LODWORD(v186) = 1;
        v65 = v38;
        LODWORD(v38) = 6;
        v66 = v33;
        object = 128;
        countAndFlagsBits = _swiftEmptyArrayStorage;
      }
      else if (v61 == enum case for REMCustomSmartListFilterDescriptor.FilterLocation.location(_:))
      {
        (*(void (**)(char *, uint64_t))(v38 + 96))(v60, v33);
        v62 = *(_QWORD *)v60;
        v58 = *((_QWORD *)v60 + 1);
        v70 = *((double *)v60 + 2);
        v71 = *((double *)v60 + 3);
        v72 = *((double *)v60 + 4);
        v56 = *((_QWORD *)v60 + 5);
        v73 = objc_allocWithZone((Class)CLCircularRegion);
        v74 = String._bridgeToObjectiveC()();
        v75 = v73;
        v59 = v185;
        v64 = objc_msgSend(v75, "initWithCenter:radius:identifier:", v74, v70, v71, v72);

        object = 0;
        LODWORD(v186) = 1;
        v65 = v38;
        LODWORD(v38) = 6;
        v66 = v33;
        countAndFlagsBits = _swiftEmptyArrayStorage;
      }
      else if (v61 == enum case for REMCustomSmartListFilterDescriptor.FilterLocation.any(_:))
      {
        v62 = 0;
        v58 = 0;
        v64 = 0;
        v56 = 0;
        object = 0;
        countAndFlagsBits = 0;
        v66 = v33;
        v65 = v38;
        LODWORD(v38) = 0;
        LODWORD(v186) = 0;
      }
      else
      {
        if (v61 != enum case for REMCustomSmartListFilterDescriptor.FilterLocation.noLocation(_:))
          goto LABEL_91;
        v117 = v38;
        v62 = 0;
        v58 = 0;
        v64 = 0;
        v56 = 0;
        object = 0;
        countAndFlagsBits = 0;
        LODWORD(v38) = 0;
        LODWORD(v186) = 2;
        v66 = v33;
        v65 = v117;
      }
      (*(void (**)(char *, uint64_t))(v65 + 8))(v59, v66);
      v33 = v62;
      v57 = v64;
      v46 = (uint64_t *)v196;
      v42 = (uint64_t)v197;
    }
    v118 = v32;
    REMCustomSmartListFilterDescriptor.lists.getter(v118);

    v32 = (id)type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLists(0);
    v28 = *((_QWORD *)v32 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, id))(v28 + 48))(v46, 1, v32) == 1)
    {
      a1 = v194;
      goto LABEL_36;
    }
    LODWORD(v185) = v38;
    if ((*(unsigned int (**)(uint64_t *, id))(v28 + 88))(v46, v32) != enum case for REMCustomSmartListFilterDescriptor.FilterLists.lists(_:))
    {
      sub_1003DC55C(v33, v58, v57, v56, object, (uint64_t)countAndFlagsBits);
      _diagnoseUnexpectedEnumCase<A>(type:)(v174, v174);
      __break(1u);
      goto LABEL_90;
    }
    (*(void (**)(uint64_t *, id))(v28 + 96))(v46, v32);
    v38 = *v46;
    v119 = v46[1];
    if ((unint64_t)*v46 >> 62)
    {
      v162 = v38 < 0 ? *v46 : v38 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v46);
      v120 = _CocoaArrayWrapper.endIndex.getter(v162);
      swift_bridgeObjectRelease(v38);
    }
    else
    {
      v120 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v78 = &v209;
    v76 = &v199;
    if (v120)
    {
      if ((v38 & 0xC000000000000001) != 0)
      {
        v121 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v38);
LABEL_45:
        v122 = v121;
        swift_bridgeObjectRelease(v119);
        swift_bridgeObjectRelease(v38);
        sub_1003D7640((uint64_t)v198);
        *(_QWORD *)&v199 = v122;
        sub_10000F614((uint64_t)v198, (uint64_t)&v199 + 8, &qword_10064ABD8);
        v216 = v206;
        v217 = v207;
        v218[0] = v208[0];
        *(_OWORD *)((char *)v218 + 9) = *(_OWORD *)((char *)v208 + 9);
        v213 = v203;
        v214 = v204;
        v215 = v205;
        v209 = v199;
        v210 = v200;
        v211 = v201;
        v212 = v202;
        sub_1002E9FF4((uint64_t)&v209);
        sub_1001CCEC4(&v209, (uint64_t)v219);
        a1 = v194;
        v42 = (uint64_t)v197;
        LOBYTE(v38) = (_BYTE)v185;
        if ((v190 & 1) == 0)
          goto LABEL_82;
        goto LABEL_46;
      }
      if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v121 = *(id *)(v38 + 32);
        goto LABEL_45;
      }
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease(v38);
      if (!((unint64_t)v119 >> 62))
      {
        LOBYTE(v38) = (_BYTE)v185;
        if (!*(_QWORD *)((v119 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_80;
        goto LABEL_49;
      }
    }
    if (v119 < 0)
      v163 = v119;
    else
      v163 = v119 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v119);
    v164 = _CocoaArrayWrapper.endIndex.getter(v163);
    swift_bridgeObjectRelease(v119);
    LOBYTE(v38) = (_BYTE)v185;
    if (!v164)
    {
LABEL_80:
      swift_bridgeObjectRelease(v119);
      sub_1003DC4DC((uint64_t)&v209);
      goto LABEL_81;
    }
LABEL_49:
    if ((v119 & 0xC000000000000001) != 0)
    {
      v124 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v119);
      goto LABEL_52;
    }
    if (*(_QWORD *)((v119 & 0xFFFFFFFFFFFFF8) + 0x10))
      break;
    __break(1u);
LABEL_88:
    swift_once(&qword_10063D718, sub_1003D64BC);
LABEL_26:
    v83 = (id)qword_1006590C0;
    v84 = Date._bridgeToObjectiveC()().super.isa;
    v85 = objc_msgSend(v83, "stringFromDate:", v84);

    v178 = static String._unconditionallyBridgeFromObjectiveC(_:)(v85);
    v176 = v86;

    v87._countAndFlagsBits = (uint64_t)v76 + 21;
    v88._object = (void *)0x8000000100577710;
    v87._object = (void *)0x8000000100577730;
    v88._countAndFlagsBits = 0xD000000000000019;
    v89._countAndFlagsBits = 28500;
    v89._object = (void *)0xE200000000000000;
    v90 = TTRLocalizedString(_:value:comment:)(v88, v89, v87);
    v175 = v90._countAndFlagsBits;
    v172 = v90._object;
    v91 = (char *)v78 + *(int *)(v179 + 36);
    v92 = (id)qword_1006590C0;
    v93 = Date._bridgeToObjectiveC()().super.isa;
    v94 = objc_msgSend(v92, "stringFromDate:", v93);

    v95 = static String._unconditionallyBridgeFromObjectiveC(_:)(v94);
    v97 = v96;

    (*(void (**)(char *, uint64_t))(v56 + 8))(v177, v58);
    v98 = (int *)sub_10002A750(&qword_10064AC08);
    v42 = (uint64_t)v197;
    v99 = &v197[v98[12]];
    v100 = &v197[v98[16]];
    v101 = (uint64_t *)&v197[v98[20]];
    v102 = v182;
    v103 = v78;
    v104 = *(void (**)(_BYTE *, __int128 *, uint64_t))(v181 + 32);
    v104(v197, v103, v182);
    v104(v99, (__int128 *)v91, v102);
    v105 = object;
    *v100 = countAndFlagsBits;
    v100[1] = v105;
    v106 = v176;
    v100[2] = v178;
    v100[3] = v106;
    v107 = (uint64_t)v172;
    *v101 = v175;
    v101[1] = v107;
    v101[2] = v95;
    v101[3] = v97;
    swift_storeEnumTagMultiPayload(v42, v192, 4);
    v38 = v195;
    v46 = (uint64_t *)v196;
    v33 = v183;
    v7 = v186;
    v36 = v173;
  }
  v124 = *(id *)(v119 + 32);
LABEL_52:
  v125 = v124;
  swift_bridgeObjectRelease(v119);
  sub_1003D7640((uint64_t)v198);
  *(_QWORD *)&v199 = v125;
  sub_10000F614((uint64_t)v198, (uint64_t)&v199 + 8, &qword_10064ABD8);
  v217 = v207;
  v218[0] = v208[0];
  *(_OWORD *)((char *)v218 + 9) = *(_OWORD *)((char *)v208 + 9);
  v213 = v203;
  v214 = v204;
  v215 = v205;
  v216 = v206;
  v209 = v199;
  v210 = v200;
  v211 = v201;
  v212 = v202;
  sub_1002E9FFC((uint64_t)&v209);
LABEL_81:
  sub_1001CCEC4(&v209, (uint64_t)v219);
  a1 = v194;
  v42 = (uint64_t)v197;
  if ((v190 & 1) != 0)
    goto LABEL_46;
LABEL_82:
  if (a1)
  {
    v165 = a1;
    v166 = REMCustomSmartListFilterDescriptor.isEmpty.getter();

    v123 = v166 ^ 1;
  }
  else
  {
    v123 = 0;
  }
LABEL_85:
  v167 = v191;
  *v191 = v189;
  v168 = (int *)type metadata accessor for TTRSmartListFilterEditorViewModel(0);
  sub_1003DC518(v42, (uint64_t)&v167[v168[5]]);
  v167[v168[6]] = v195;
  v167[v168[7]] = (_BYTE)v186;
  v169 = &v167[v168[8]];
  *(_QWORD *)v169 = v33;
  *((_QWORD *)v169 + 1) = v58;
  *((_QWORD *)v169 + 2) = v57;
  *((_QWORD *)v169 + 3) = v56;
  v170 = countAndFlagsBits;
  *((_QWORD *)v169 + 4) = object;
  *((_QWORD *)v169 + 5) = v170;
  v169[48] = v38;
  v167[v168[9]] = (_BYTE)v193;
  v167[v168[10]] = v192;
  result = sub_1001CCEC4(v219, (uint64_t)&v167[v168[11]]);
  v167[v168[12]] = v123 & 1;
  return result;
}

_UNKNOWN **TTRSmartListFilterEditorViewModel.PriorityOptions.priorities.getter(unsigned __int8 a1)
{
  return ((_UNKNOWN **(*)())((char *)sub_1003D5D78 + 4 * byte_100532454[a1]))();
}

_UNKNOWN **sub_1003D5D78()
{
  return &off_1005EAC70;
}

_UNKNOWN **sub_1003D5D84()
{
  return &off_1005EACA8;
}

_UNKNOWN **sub_1003D5D90()
{
  return &off_1005EACD0;
}

_UNKNOWN **sub_1003D5D9C()
{
  return &off_1005EACF8;
}

_UNKNOWN **sub_1003D5DA8()
{
  return &off_1005EAD20;
}

void *TTRSmartListFilterEditorViewModel.ListsData.listID.getter()
{
  __int128 *v0;
  Reminders::TTRReminderIDsWithMatchingHashtagsProvider v1;
  id v2;
  _BYTE v4[176];

  sub_1001CCEC4(v0, (uint64_t)v4);
  if (sub_1001CCF00((uint64_t)v4) > 1)
    return 0;
  v1.reminders._rawValue = *(void **)TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v4).reminders._rawValue;
  v2 = v1.reminders._rawValue;
  return v1.reminders._rawValue;
}

uint64_t TTRSmartListFilterEditorViewModel.ListsData.listData.setter(uint64_t a1)
{
  __int128 *v1;
  int v3;
  Reminders::TTRReminderIDsWithMatchingHashtagsProvider v4;
  uint64_t v5;
  Reminders::TTRReminderIDsWithMatchingHashtagsProvider v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _OWORD v18[2];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _OWORD v28[2];
  _BYTE v29[168];
  _BYTE v30[168];
  __int128 v31[11];
  _BYTE v32[176];

  sub_10000F614(a1, (uint64_t)v29, &qword_10064ABD8);
  sub_10000F614((uint64_t)v29, (uint64_t)v30, &qword_10064ABD8);
  sub_1001CCEC4(v1, (uint64_t)v31);
  sub_1001CCEC4(v31, (uint64_t)v32);
  v3 = sub_1001CCF00((uint64_t)v32);
  if (!v3)
  {
    v6.reminders._rawValue = TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v32).reminders._rawValue;
    v7 = *(_QWORD *)v6.reminders._rawValue;
    sub_1003DC588((uint64_t)v6.reminders._rawValue + 8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1001CD2B8);
    *(_QWORD *)&v9 = v7;
    sub_10000F614((uint64_t)v30, (uint64_t)&v9 + 8, &qword_10064ABD8);
    v27 = v17;
    v28[0] = v18[0];
    *(_OWORD *)((char *)v28 + 9) = *(_OWORD *)((char *)v18 + 9);
    v23 = v13;
    v24 = v14;
    v25 = v15;
    v26 = v16;
    v19 = v9;
    v20 = v10;
    v21 = v11;
    v22 = v12;
    sub_1002E9FF4((uint64_t)&v19);
    return sub_1001CCEC4(&v19, (uint64_t)v1);
  }
  if (v3 == 1)
  {
    v4.reminders._rawValue = TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v32).reminders._rawValue;
    v5 = *(_QWORD *)v4.reminders._rawValue;
    sub_1003DC588((uint64_t)v4.reminders._rawValue + 8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1001CD2B8);
    *(_QWORD *)&v9 = v5;
    sub_10000F614((uint64_t)v30, (uint64_t)&v9 + 8, &qword_10064ABD8);
    v27 = v17;
    v28[0] = v18[0];
    *(_OWORD *)((char *)v28 + 9) = *(_OWORD *)((char *)v18 + 9);
    v23 = v13;
    v24 = v14;
    v25 = v15;
    v26 = v16;
    v19 = v9;
    v20 = v10;
    v21 = v11;
    v22 = v12;
    sub_1002E9FFC((uint64_t)&v19);
    return sub_1001CCEC4(&v19, (uint64_t)v1);
  }
  return sub_1003DC588(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1001CD2B8);
}

uint64_t TTRSmartListFilterEditorViewModel.Details.label.getter(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain(a2);
  return a1;
}

uint64_t TTRSmartListFilterEditorViewModel.Details.details.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain(a4);
  return a3;
}

uint64_t sub_1003D5FF4(uint64_t *a1, uint64_t *a2)
{
  return _s9Reminders33TTRSmartListFilterEditorViewModelV7DetailsV23__derived_struct_equalsySbAE_AEtFZ_0(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

Reminders::TTRSmartListFilterEditorViewModel::FilterOperationOptions_optional __swiftcall TTRSmartListFilterEditorViewModel.FilterOperationOptions.init(rawValue:)(Swift::Int rawValue)
{
  Reminders::TTRSmartListFilterEditorViewModel::FilterOperationOptions_optional v1;

  if (rawValue == 1)
    v1.value = Reminders_TTRSmartListFilterEditorViewModel_FilterOperationOptions_all;
  else
    v1.value = Reminders_TTRSmartListFilterEditorViewModel_FilterOperationOptions_unknownDefault;
  if (rawValue)
    return v1;
  else
    return 0;
}

_UNKNOWN **static TTRSmartListFilterEditorViewModel.FilterOperationOptions.allCases.getter()
{
  return &off_1005EAD48;
}

uint64_t TTRSmartListFilterEditorViewModel.FilterOperationOptions.rawValue.getter(char a1)
{
  return a1 & 1;
}

void sub_1003D603C(_QWORD *a1@<X8>)
{
  *a1 = &off_1005EAD70;
}

_UNKNOWN **static TTRSmartListFilterEditorViewModel.HashtagOptions.allCases.getter()
{
  return &off_1005EAD98;
}

void sub_1003D605C(_QWORD *a1@<X8>)
{
  *a1 = &off_1005EADC0;
}

_UNKNOWN **static TTRSmartListFilterEditorViewModel.DateOptions.Bare.allCases.getter()
{
  return &off_1005EADE8;
}

uint64_t TTRSmartListFilterEditorViewModel.DateOptions.Bare.rawValue.getter(uint64_t result)
{
  return result;
}

unint64_t sub_1003D6084@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9Reminders33TTRSmartListFilterEditorViewModelV11DateOptionsO4BareO8rawValueAGSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_1003D60AC(_QWORD *a1@<X8>)
{
  *a1 = &off_1005EADE8;
}

_UNKNOWN **static TTRSmartListFilterEditorViewModel.TimeOptions.allCases.getter()
{
  return &off_1005EAE18;
}

void sub_1003D60D0(_QWORD *a1@<X8>)
{
  *a1 = &off_1005EAE18;
}

_UNKNOWN **static TTRSmartListFilterEditorViewModel.PriorityOptions.allCases.getter()
{
  return &off_1005EAE40;
}

unint64_t sub_1003D60F0@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9Reminders33TTRSmartListFilterEditorViewModelV15PriorityOptionsO8rawValueAESgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_1003D6118(_QWORD *a1@<X8>)
{
  *a1 = &off_1005EAE40;
}

_UNKNOWN **static TTRSmartListFilterEditorViewModel.FlaggedOptions.allCases.getter()
{
  return &off_1005EAE68;
}

void sub_1003D6134(_QWORD *a1@<X8>)
{
  *a1 = &off_1005EAE90;
}

_UNKNOWN **static TTRSmartListFilterEditorViewModel.LocationOptions.allCases.getter()
{
  return &off_1005EAEB8;
}

void sub_1003D6150(_QWORD *a1@<X8>)
{
  *a1 = &off_1005EAEE0;
}

uint64_t TTRSmartListFilterEditorViewModel.LocationData.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003DC614(v1, a1);
}

uint64_t TTRSmartListFilterEditorViewModel.LocationData.quickPickItems.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 40));
}

uint64_t TTRSmartListFilterEditorViewModel.LocationData.quickPickItems.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 40));
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *TTRSmartListFilterEditorViewModel.LocationData.quickPickItems.modify())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t TTRSmartListFilterEditorViewModel.LocationData.quickPickItemSelected.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t TTRSmartListFilterEditorViewModel.LocationData.quickPickItemSelected.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = result;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *TTRSmartListFilterEditorViewModel.LocationData.quickPickItemSelected.modify())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

Reminders::TTRSmartListFilterEditorViewModel::ListsOptions_optional __swiftcall TTRSmartListFilterEditorViewModel.ListsOptions.init(rawValue:)(Swift::Int rawValue)
{
  if ((unint64_t)rawValue >= 3)
    LOBYTE(rawValue) = 3;
  return (Reminders::TTRSmartListFilterEditorViewModel::ListsOptions_optional)rawValue;
}

_UNKNOWN **static TTRSmartListFilterEditorViewModel.ListsOptions.allCases.getter()
{
  return &off_1005EAF08;
}

void sub_1003D61E8(_QWORD *a1@<X8>)
{
  *a1 = &off_1005EAF30;
}

uint64_t TTRSmartListFilterEditorViewModel.ListData.color.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003DC674(v1 + 16, a1);
}

uint64_t TTRSmartListFilterEditorViewModel.ListData.badge.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10000735C(v1 + 72, a1, &qword_1006590D0);
}

uint64_t TTRSmartListFilterEditorViewModel.dateOptions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for TTRSmartListFilterEditorViewModel(0) + 20);
  return sub_1003DC6B0(v3, a1);
}

uint64_t TTRSmartListFilterEditorViewModel.timeOptions.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TTRSmartListFilterEditorViewModel(0) + 24));
}

uint64_t TTRSmartListFilterEditorViewModel.locationOptions.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TTRSmartListFilterEditorViewModel(0) + 28));
}

uint64_t TTRSmartListFilterEditorViewModel.locationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TTRSmartListFilterEditorViewModel(0);
  return sub_10000735C(v1 + *(int *)(v3 + 32), a1, &qword_1006590D8);
}

uint64_t TTRSmartListFilterEditorViewModel.locationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for TTRSmartListFilterEditorViewModel(0) + 32);
  return sub_1003DC6F4(a1, v3);
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *TTRSmartListFilterEditorViewModel.locationData.modify())(Swift::OpaquePointer reminders)
{
  type metadata accessor for TTRSmartListFilterEditorViewModel(0);
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t TTRSmartListFilterEditorViewModel.priorityOptions.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TTRSmartListFilterEditorViewModel(0) + 36));
}

uint64_t TTRSmartListFilterEditorViewModel.flaggedOptions.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TTRSmartListFilterEditorViewModel(0) + 40));
}

uint64_t TTRSmartListFilterEditorViewModel.listsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for TTRSmartListFilterEditorViewModel(0) + 44);
  return sub_1003DC73C(v3, a1);
}

uint64_t TTRSmartListFilterEditorViewModel.listsData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for TTRSmartListFilterEditorViewModel(0) + 44);
  return sub_1003DC770(a1, v3);
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *TTRSmartListFilterEditorViewModel.listsData.modify())(Swift::OpaquePointer reminders)
{
  type metadata accessor for TTRSmartListFilterEditorViewModel(0);
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t TTRSmartListFilterEditorViewModel.doneEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TTRSmartListFilterEditorViewModel(0) + 48));
}

void TTRSmartListFilterEditorViewModel.HelpTopic.hash(into:)()
{
  Hasher._combine(_:)(0);
}

Swift::Int TTRSmartListFilterEditorViewModel.HelpTopic.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

Swift::Int sub_1003D6478(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

id sub_1003D64BC()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  objc_msgSend(v0, "setDateStyle:", 1);
  result = objc_msgSend(v0, "setTimeStyle:", 0);
  qword_1006590C0 = (uint64_t)v0;
  return result;
}

_QWORD *static TTRSmartListFilterEditorViewModel.FilterOperationOptions.localizedOptionStrings.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  unint64_t v4;
  unint64_t v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  unint64_t v10;
  unint64_t v11;

  sub_1003D7FFC(0, 2, 0);
  v0._countAndFlagsBits = 0xD000000000000045;
  v1._object = (void *)0x800000010056A4D0;
  v0._object = (void *)0x800000010056A4F0;
  v1._countAndFlagsBits = 0xD000000000000016;
  v2._countAndFlagsBits = 7958113;
  v2._object = (void *)0xE300000000000000;
  v3 = TTRLocalizedString(_:value:comment:)(v1, v2, v0);
  v5 = _swiftEmptyArrayStorage[2];
  v4 = _swiftEmptyArrayStorage[3];
  if (v5 >= v4 >> 1)
    sub_1003D7FFC(v4 > 1, v5 + 1, 1);
  _swiftEmptyArrayStorage[2] = v5 + 1;
  *(Swift::String *)&_swiftEmptyArrayStorage[2 * v5 + 4] = v3;
  v6._countAndFlagsBits = 0xD000000000000044;
  v7._object = (void *)0x800000010056A540;
  v6._object = (void *)0x800000010056A560;
  v7._countAndFlagsBits = 0xD000000000000016;
  v8._countAndFlagsBits = 7105633;
  v8._object = (void *)0xE300000000000000;
  v9 = TTRLocalizedString(_:value:comment:)(v7, v8, v6);
  v11 = _swiftEmptyArrayStorage[2];
  v10 = _swiftEmptyArrayStorage[3];
  if (v11 >= v10 >> 1)
    sub_1003D7FFC(v10 > 1, v11 + 1, 1);
  _swiftEmptyArrayStorage[2] = v11 + 1;
  *(Swift::String *)&_swiftEmptyArrayStorage[2 * v11 + 4] = v9;
  return _swiftEmptyArrayStorage;
}

void static TTRSmartListFilterEditorViewModel.HashtagOptions.localizedOptionStrings.getter()
{
  sub_1003D7FFC(0, 5, 0);
  __asm { BR              X9 }
}

_QWORD *static TTRSmartListFilterEditorViewModel.DateOptions.localizedOptionStrings.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;

  v0 = 9;
  sub_1003D7FFC(0, 9, 0);
  v1 = (unsigned __int8 *)&byte_1005EAE08;
  do
  {
    v2 = *v1++;
    v3 = TTRSmartListFilterEditorViewModel.DateOptions.Bare.localizedOptionString.getter(v2);
    v5 = v4;
    v7 = _swiftEmptyArrayStorage[2];
    v6 = _swiftEmptyArrayStorage[3];
    if (v7 >= v6 >> 1)
      sub_1003D7FFC(v6 > 1, v7 + 1, 1);
    _swiftEmptyArrayStorage[2] = v7 + 1;
    v8 = &_swiftEmptyArrayStorage[2 * v7];
    v8[4] = v3;
    v8[5] = v5;
    --v0;
  }
  while (v0);
  return _swiftEmptyArrayStorage;
}

_QWORD *static TTRSmartListFilterEditorViewModel.TimeOptions.localizedOptionStrings.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;

  v0 = 7;
  sub_1003D7FFC(0, 7, 0);
  v1 = (unsigned __int8 *)&byte_1005EAE38;
  do
  {
    v2 = *v1++;
    v3 = TTRSmartListFilterEditorViewModel.TimeOptions.localizedOptionString.getter(v2);
    v5 = v4;
    v7 = _swiftEmptyArrayStorage[2];
    v6 = _swiftEmptyArrayStorage[3];
    if (v7 >= v6 >> 1)
      sub_1003D7FFC(v6 > 1, v7 + 1, 1);
    _swiftEmptyArrayStorage[2] = v7 + 1;
    v8 = &_swiftEmptyArrayStorage[2 * v7];
    v8[4] = v3;
    v8[5] = v5;
    --v0;
  }
  while (v0);
  return _swiftEmptyArrayStorage;
}

void static TTRSmartListFilterEditorViewModel.PriorityOptions.localizedOptionStrings.getter()
{
  sub_1003D7FFC(0, 6, 0);
  __asm { BR              X9 }
}

_QWORD *static TTRSmartListFilterEditorViewModel.FlaggedOptions.localizedOptionStrings.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  unint64_t v4;
  unint64_t v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  unint64_t v10;
  unint64_t v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  unint64_t v16;
  unint64_t v17;

  sub_1003D7FFC(0, 3, 0);
  v0._countAndFlagsBits = 0xD00000000000002DLL;
  v1._object = (void *)0x800000010056A130;
  v0._object = (void *)0x800000010056A150;
  v1._countAndFlagsBits = 0xD00000000000001ELL;
  v2._countAndFlagsBits = 6710863;
  v2._object = (void *)0xE300000000000000;
  v3 = TTRLocalizedString(_:value:comment:)(v1, v2, v0);
  v5 = _swiftEmptyArrayStorage[2];
  v4 = _swiftEmptyArrayStorage[3];
  if (v5 >= v4 >> 1)
    sub_1003D7FFC(v4 > 1, v5 + 1, 1);
  _swiftEmptyArrayStorage[2] = v5 + 1;
  *(Swift::String *)&_swiftEmptyArrayStorage[2 * v5 + 4] = v3;
  v6._countAndFlagsBits = 0xD000000000000022;
  v7._countAndFlagsBits = 0xD000000000000031;
  v6._object = (void *)0x800000010056A180;
  v7._object = (void *)0x800000010056A1B0;
  v8._countAndFlagsBits = 0x64656767616C46;
  v8._object = (void *)0xE700000000000000;
  v9 = TTRLocalizedString(_:value:comment:)(v6, v8, v7);
  v11 = _swiftEmptyArrayStorage[2];
  v10 = _swiftEmptyArrayStorage[3];
  if (v11 >= v10 >> 1)
    sub_1003D7FFC(v10 > 1, v11 + 1, 1);
  _swiftEmptyArrayStorage[2] = v11 + 1;
  *(Swift::String *)&_swiftEmptyArrayStorage[2 * v11 + 4] = v9;
  v12._countAndFlagsBits = 0xD000000000000026;
  v13._countAndFlagsBits = 0xD000000000000035;
  v12._object = (void *)0x800000010056A1F0;
  v13._object = (void *)0x800000010056A220;
  v14._countAndFlagsBits = 0x67616C4620746F4ELL;
  v14._object = (void *)0xEB00000000646567;
  v15 = TTRLocalizedString(_:value:comment:)(v12, v14, v13);
  v17 = _swiftEmptyArrayStorage[2];
  v16 = _swiftEmptyArrayStorage[3];
  if (v17 >= v16 >> 1)
    sub_1003D7FFC(v16 > 1, v17 + 1, 1);
  _swiftEmptyArrayStorage[2] = v17 + 1;
  *(Swift::String *)&_swiftEmptyArrayStorage[2 * v17 + 4] = v15;
  return _swiftEmptyArrayStorage;
}

_QWORD *static TTRSmartListFilterEditorViewModel.LocationOptions.localizedOptionStrings.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  unint64_t v4;
  unint64_t v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  unint64_t v10;
  unint64_t v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  unint64_t v16;
  unint64_t v17;

  sub_1003D7FFC(0, 3, 0);
  v0._countAndFlagsBits = 0xD00000000000002ELL;
  v1._object = (void *)0x8000000100569B50;
  v0._object = (void *)0x8000000100569B70;
  v1._countAndFlagsBits = 0xD00000000000001FLL;
  v2._countAndFlagsBits = 6710863;
  v2._object = (void *)0xE300000000000000;
  v3 = TTRLocalizedString(_:value:comment:)(v1, v2, v0);
  v5 = _swiftEmptyArrayStorage[2];
  v4 = _swiftEmptyArrayStorage[3];
  if (v5 >= v4 >> 1)
    sub_1003D7FFC(v4 > 1, v5 + 1, 1);
  _swiftEmptyArrayStorage[2] = v5 + 1;
  *(Swift::String *)&_swiftEmptyArrayStorage[2 * v5 + 4] = v3;
  v6._countAndFlagsBits = 0xD000000000000024;
  v7._countAndFlagsBits = 0xD000000000000033;
  v6._object = (void *)0x8000000100569BA0;
  v7._object = (void *)0x8000000100569BD0;
  v8._countAndFlagsBits = 0x6369666963657053;
  v8._object = (void *)0xE800000000000000;
  v9 = TTRLocalizedString(_:value:comment:)(v6, v8, v7);
  v11 = _swiftEmptyArrayStorage[2];
  v10 = _swiftEmptyArrayStorage[3];
  if (v11 >= v10 >> 1)
    sub_1003D7FFC(v10 > 1, v11 + 1, 1);
  _swiftEmptyArrayStorage[2] = v11 + 1;
  *(Swift::String *)&_swiftEmptyArrayStorage[2 * v11 + 4] = v9;
  v12._countAndFlagsBits = 0xD000000000000027;
  v13._countAndFlagsBits = 0xD000000000000036;
  v12._object = (void *)0x8000000100569C10;
  v13._object = (void *)0x8000000100569C40;
  v14._countAndFlagsBits = 0x7461636F4C206F4ELL;
  v14._object = (void *)0xEB000000006E6F69;
  v15 = TTRLocalizedString(_:value:comment:)(v12, v14, v13);
  v17 = _swiftEmptyArrayStorage[2];
  v16 = _swiftEmptyArrayStorage[3];
  if (v17 >= v16 >> 1)
    sub_1003D7FFC(v16 > 1, v17 + 1, 1);
  _swiftEmptyArrayStorage[2] = v17 + 1;
  *(Swift::String *)&_swiftEmptyArrayStorage[2 * v17 + 4] = v15;
  return _swiftEmptyArrayStorage;
}

id sub_1003D752C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, void *a19, void *a20,char a21)
{
  id result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    sub_10002B764(a3, a4, a5, a6, a7, a8, a9 & 1);
    return sub_1001CD04C(a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
  }
  return result;
}

double sub_1003D7640(uint64_t a1)
{
  double result;

  *(_BYTE *)(a1 + 160) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(uint64_t a1)
{
  return sub_100007328(a1, qword_100659288, (uint64_t)&nominal type descriptor for TTRSmartListFilterEditorViewModel.DateOptions);
}

_QWORD *static TTRSmartListFilterEditorViewModel.ListsOptions.localizedOptionStrings.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  unint64_t v4;
  unint64_t v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  unint64_t v10;
  unint64_t v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  unint64_t v16;
  unint64_t v17;

  sub_1003D7FFC(0, 3, 0);
  v0._countAndFlagsBits = 0xD00000000000001CLL;
  v1._countAndFlagsBits = 0xD00000000000002BLL;
  v0._object = (void *)0x8000000100569CA0;
  v1._object = (void *)0x8000000100569CC0;
  v2._countAndFlagsBits = 6710863;
  v2._object = (void *)0xE300000000000000;
  v3 = TTRLocalizedString(_:value:comment:)(v0, v2, v1);
  v5 = _swiftEmptyArrayStorage[2];
  v4 = _swiftEmptyArrayStorage[3];
  if (v5 >= v4 >> 1)
    sub_1003D7FFC(v4 > 1, v5 + 1, 1);
  _swiftEmptyArrayStorage[2] = v5 + 1;
  *(Swift::String *)&_swiftEmptyArrayStorage[2 * v5 + 4] = v3;
  v6._countAndFlagsBits = 0xD00000000000002FLL;
  v7._object = (void *)0x8000000100569CF0;
  v6._object = (void *)0x8000000100569D20;
  v7._countAndFlagsBits = 0xD000000000000020;
  v8._countAndFlagsBits = 0x6564756C636E49;
  v8._object = (void *)0xE700000000000000;
  v9 = TTRLocalizedString(_:value:comment:)(v7, v8, v6);
  v11 = _swiftEmptyArrayStorage[2];
  v10 = _swiftEmptyArrayStorage[3];
  if (v11 >= v10 >> 1)
    sub_1003D7FFC(v10 > 1, v11 + 1, 1);
  _swiftEmptyArrayStorage[2] = v11 + 1;
  *(Swift::String *)&_swiftEmptyArrayStorage[2 * v11 + 4] = v9;
  v12._countAndFlagsBits = 0x6564756C637845;
  v13._countAndFlagsBits = 0xD00000000000002FLL;
  v14._object = (void *)0x8000000100569D50;
  v13._object = (void *)0x8000000100569D80;
  v14._countAndFlagsBits = 0xD000000000000020;
  v12._object = (void *)0xE700000000000000;
  v15 = TTRLocalizedString(_:value:comment:)(v14, v12, v13);
  v17 = _swiftEmptyArrayStorage[2];
  v16 = _swiftEmptyArrayStorage[3];
  if (v17 >= v16 >> 1)
    sub_1003D7FFC(v16 > 1, v17 + 1, 1);
  _swiftEmptyArrayStorage[2] = v17 + 1;
  *(Swift::String *)&_swiftEmptyArrayStorage[2 * v17 + 4] = v15;
  return _swiftEmptyArrayStorage;
}

void (*TTRSmartListFilterEditorViewModel.ListsData.listData.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  __int128 *v1;
  __int128 *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  Reminders::TTRReminderIDsWithMatchingHashtagsProvider v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v1;
  v4 = malloc(0x6C8uLL);
  *a1 = v4;
  v5 = (uint64_t)v4 + 1224;
  v6 = (uint64_t)v4 + 1392;
  *((_QWORD *)v4 + 216) = v2;
  sub_1001CCEC4(v2, (uint64_t)v4 + 176);
  sub_1001CCEC4((__int128 *)v4 + 11, (uint64_t)v4);
  if (sub_1001CCF00((uint64_t)v4) >= 2)
  {
    v10 = (uint64_t)v4 + 352;
    sub_1003D7640(v10);
    v8 = v10;
    v9 = v6;
  }
  else
  {
    v7.reminders._rawValue = TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v4).reminders._rawValue;
    sub_10000F614((uint64_t)v7.reminders._rawValue + 8, (uint64_t)v4 + 1560, &qword_10064ABD8);
    sub_1003DC588((uint64_t)v4 + 1560, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1003D752C);
    v8 = (uint64_t)v4 + 1560;
    v9 = (uint64_t)v4 + 1392;
  }
  sub_10000F614(v8, v9, &qword_10064ABD8);
  sub_10000F614(v6, v5, &qword_10064ABD8);
  return sub_1003D7B08;
}

void sub_1003D7B08(uint64_t a1, char a2)
{
  _QWORD *v2;
  __int128 *v3;
  __int128 *v4;
  __int128 *v5;
  __int128 *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  int v10;
  uint64_t v11;
  Reminders::TTRReminderIDsWithMatchingHashtagsProvider v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int v20;
  uint64_t v21;
  Reminders::TTRReminderIDsWithMatchingHashtagsProvider v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  Reminders::TTRReminderIDsWithMatchingHashtagsProvider v29;
  char *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  Reminders::TTRReminderIDsWithMatchingHashtagsProvider v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;

  v2 = *(_QWORD **)a1;
  v3 = (__int128 *)(*(_QWORD *)a1 + 352);
  v4 = (__int128 *)(*(_QWORD *)a1 + 528);
  v5 = (__int128 *)(*(_QWORD *)a1 + 704);
  v6 = (__int128 *)(*(_QWORD *)a1 + 880);
  v7 = *(_QWORD *)a1 + 1056;
  v8 = *(_QWORD *)a1 + 1224;
  v9 = *(__int128 **)(*(_QWORD *)a1 + 1728);
  if ((a2 & 1) != 0)
  {
    sub_10000F614(*(_QWORD *)a1 + 1224, v7, &qword_10064ABD8);
    sub_1001CCEC4(v9, (uint64_t)v5);
    sub_1001CCEC4(v5, (uint64_t)v4);
    v10 = sub_1001CCF00((uint64_t)v4);
    if (v10)
    {
      if (v10 != 1)
      {
LABEL_10:
        sub_10000F614(v8, (uint64_t)v3, &qword_10064ABD8);
        v37 = (uint64_t)v3;
LABEL_14:
        sub_1003DC588(v37, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1001CD2B8);
        goto LABEL_15;
      }
      v11 = v2[216];
      v12.reminders._rawValue = TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v4).reminders._rawValue;
      v13 = (char *)v12.reminders._rawValue + 8;
      v14 = *(_QWORD *)v12.reminders._rawValue;
      sub_1003DC588(v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1003D752C);
      sub_1003DC588((uint64_t)v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1001CD2B8);
      v2[110] = v14;
      sub_10000F614(v7, (uint64_t)(v2 + 111), &qword_10064ABD8);
      v15 = v6[9];
      v3[8] = v6[8];
      v3[9] = v15;
      *(__int128 *)((char *)v3 + 153) = *(__int128 *)((char *)v6 + 153);
      v16 = v6[5];
      v3[4] = v6[4];
      v3[5] = v16;
      v17 = v6[7];
      v3[6] = v6[6];
      v3[7] = v17;
      v18 = v6[1];
      *v3 = *v6;
      v3[1] = v18;
      v19 = v6[3];
      v3[2] = v6[2];
      v3[3] = v19;
      sub_1002E9FFC((uint64_t)v3);
    }
    else
    {
      v11 = v2[216];
      v29.reminders._rawValue = TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v4).reminders._rawValue;
      v30 = (char *)v29.reminders._rawValue + 8;
      v31 = *(_QWORD *)v29.reminders._rawValue;
      sub_1003DC588(v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1003D752C);
      sub_1003DC588((uint64_t)v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1001CD2B8);
      v2[110] = v31;
      sub_10000F614(v7, (uint64_t)(v2 + 111), &qword_10064ABD8);
      v32 = v6[9];
      v3[8] = v6[8];
      v3[9] = v32;
      *(__int128 *)((char *)v3 + 153) = *(__int128 *)((char *)v6 + 153);
      v33 = v6[5];
      v3[4] = v6[4];
      v3[5] = v33;
      v34 = v6[7];
      v3[6] = v6[6];
      v3[7] = v34;
      v35 = v6[1];
      *v3 = *v6;
      v3[1] = v35;
      v36 = v6[3];
      v3[2] = v6[2];
      v3[3] = v36;
      sub_1002E9FF4((uint64_t)v3);
    }
    sub_1001CCEC4(v3, v11);
    goto LABEL_10;
  }
  sub_10000F614(*(_QWORD *)a1 + 1224, v7, &qword_10064ABD8);
  sub_1001CCEC4(v9, (uint64_t)v5);
  sub_1001CCEC4(v5, (uint64_t)v3);
  v20 = sub_1001CCF00((uint64_t)v3);
  if (v20)
  {
    if (v20 != 1)
    {
      v37 = v7;
      goto LABEL_14;
    }
    v21 = v2[216];
    v22.reminders._rawValue = TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v3).reminders._rawValue;
    v23 = *(_QWORD *)v22.reminders._rawValue;
    sub_1003DC588((uint64_t)v22.reminders._rawValue + 8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1001CD2B8);
    v2[110] = v23;
    sub_10000F614(v7, (uint64_t)(v2 + 111), &qword_10064ABD8);
    v24 = v6[9];
    v4[8] = v6[8];
    v4[9] = v24;
    *(__int128 *)((char *)v4 + 153) = *(__int128 *)((char *)v6 + 153);
    v25 = v6[5];
    v4[4] = v6[4];
    v4[5] = v25;
    v26 = v6[7];
    v4[6] = v6[6];
    v4[7] = v26;
    v27 = v6[1];
    *v4 = *v6;
    v4[1] = v27;
    v28 = v6[3];
    v4[2] = v6[2];
    v4[3] = v28;
    sub_1002E9FFC((uint64_t)v4);
  }
  else
  {
    v21 = v2[216];
    v38.reminders._rawValue = TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v3).reminders._rawValue;
    v39 = *(_QWORD *)v38.reminders._rawValue;
    sub_1003DC588((uint64_t)v38.reminders._rawValue + 8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1001CD2B8);
    v2[110] = v39;
    sub_10000F614(v7, (uint64_t)(v2 + 111), &qword_10064ABD8);
    v40 = v6[9];
    v4[8] = v6[8];
    v4[9] = v40;
    *(__int128 *)((char *)v4 + 153) = *(__int128 *)((char *)v6 + 153);
    v41 = v6[5];
    v4[4] = v6[4];
    v4[5] = v41;
    v42 = v6[7];
    v4[6] = v6[6];
    v4[7] = v42;
    v43 = v6[1];
    *v4 = *v6;
    v4[1] = v43;
    v44 = v6[3];
    v4[2] = v6[2];
    v4[3] = v44;
    sub_1002E9FF4((uint64_t)v4);
  }
  sub_1001CCEC4(v4, v21);
LABEL_15:
  free(v2);
}

uint64_t sub_1003D7E10(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1003D8668(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1003D7E2C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DA438(a1, a2, a3, (_QWORD *)*v3, &qword_1006592F0, &qword_100658908);
  *v3 = result;
  return result;
}

uint64_t sub_1003D7E58(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003D87C4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1003D7E74(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1003D897C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1003D7E90(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1003D8AFC(a1, a2, a3, *v3, &qword_100659438);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1003D7EB4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1003D8AFC(a1, a2, a3, *v3, &qword_100659328);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1003D7ED8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DAF24(a1, a2, a3, (_QWORD *)*v3, &qword_100659338, (uint64_t (*)(_QWORD))&type metadata accessor for REMRemindersListDataView.SectionLite);
  *v3 = result;
  return result;
}

uint64_t sub_1003D7F04(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DAF24(a1, a2, a3, (_QWORD *)*v3, &qword_1006592F8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  *v3 = result;
  return result;
}

uint64_t sub_1003D7F30(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1003D8C50(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1003D7F4C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DA438(a1, a2, a3, (_QWORD *)*v3, &qword_100659388, &qword_100654838);
  *v3 = result;
  return result;
}

uint64_t sub_1003D7F78(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DAF24(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1006469C0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *v3 = result;
  return result;
}

uint64_t sub_1003D7FA4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DA438(a1, a2, a3, (_QWORD *)*v3, &qword_100659450, &qword_100659458);
  *v3 = result;
  return result;
}

uint64_t sub_1003D7FD0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DAF24(a1, a2, a3, (_QWORD *)*v3, &qword_100659440, type metadata accessor for TTRRemindersListUncommittedReminder);
  *v3 = result;
  return result;
}

uint64_t sub_1003D7FFC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1003D8DD8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1003D8018(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DA438(a1, a2, a3, (_QWORD *)*v3, &qword_100659448, &qword_1006589A8);
  *v3 = result;
  return result;
}

uint64_t sub_1003D8044(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DA438(a1, a2, a3, (_QWORD *)*v3, &qword_1006593C0, &qword_10063F178);
  *v3 = result;
  return result;
}

uint64_t sub_1003D8070(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DAF24(a1, a2, a3, (_QWORD *)*v3, &qword_10063F1C0, type metadata accessor for TTRIRemindersBoardDragItemSources.Source);
  *v3 = result;
  return result;
}

uint64_t sub_1003D809C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DAC18(a1, a2, a3, (_QWORD *)*v3, &qword_100659368, &qword_100647B38);
  *v3 = result;
  return result;
}

uint64_t sub_1003D80C8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DAF24(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_100650540, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
  *v3 = result;
  return result;
}

uint64_t sub_1003D80F4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DAF24(a1, a2, a3, (_QWORD *)*v3, &qword_1006593C8, type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.DropItem);
  *v3 = result;
  return result;
}

uint64_t sub_1003D8120(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003D8F54(a1, a2, a3, (_QWORD *)*v3, &qword_100659358, &qword_100654CF8);
  *v3 = result;
  return result;
}

uint64_t sub_1003D814C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003D8F54(a1, a2, a3, (_QWORD *)*v3, &qword_100659360, &qword_100654CF0);
  *v3 = result;
  return result;
}

uint64_t sub_1003D8178(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DAC18(a1, a2, a3, (_QWORD *)*v3, &qword_100659370, &qword_100659378);
  *v3 = result;
  return result;
}

uint64_t sub_1003D81A4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1003D90E0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1003D81C0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1003DA144(a1, a2, a3, *v3, &qword_100659300);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1003D81E4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1003DAAB0(a1, a2, a3, *v3, &qword_100659310);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1003D8210(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1003D9258(a1, a2, a3, *v3, &qword_1006593B8);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1003D823C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1003D9258(a1, a2, a3, *v3, &qword_1006593B0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1003D8268(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1003D93D0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1003D8284(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1003D9554(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1003D82A0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DAF24(a1, a2, a3, (_QWORD *)*v3, &qword_100659430, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.LinkAttachment);
  *v3 = result;
  return result;
}

uint64_t sub_1003D82CC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003D96B8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1003D82E8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003D9840(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1003D8304(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003D99C4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1003D8320(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DAF24(a1, a2, a3, (_QWORD *)*v3, &qword_100646A70, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  *v3 = result;
  return result;
}

uint64_t sub_1003D834C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DA438(a1, a2, a3, (_QWORD *)*v3, &qword_100659410, &qword_100641000);
  *v3 = result;
  return result;
}

uint64_t sub_1003D8378(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1003D9B4C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1003D8394(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1003D9CC8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1003D83B0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1003D9E48(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1003D83CC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DAF24(a1, a2, a3, (_QWORD *)*v3, &qword_1006452D8, type metadata accessor for TTRRemindersListTreeViewModel.Section);
  *v3 = result;
  return result;
}

uint64_t sub_1003D83F8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DAF24(a1, a2, a3, (_QWORD *)*v3, &qword_100659330, type metadata accessor for TTRRemindersListTreeViewModel.SectionsContainer);
  *v3 = result;
  return result;
}

uint64_t sub_1003D8424(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DAF24(a1, a2, a3, (_QWORD *)*v3, &qword_100642EB0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  *v3 = result;
  return result;
}

uint64_t sub_1003D8450(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003D8F54(a1, a2, a3, (_QWORD *)*v3, &qword_1006593E0, &qword_1006593E8);
  *v3 = result;
  return result;
}

uint64_t sub_1003D847C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003D8F54(a1, a2, a3, (_QWORD *)*v3, &qword_10064AAE0, &qword_100659408);
  *v3 = result;
  return result;
}

uint64_t sub_1003D84A8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DAF24(a1, a2, a3, (_QWORD *)*v3, &qword_100656AC8, (uint64_t (*)(_QWORD))&type metadata accessor for Date);
  *v3 = result;
  return result;
}

uint64_t sub_1003D84D4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DAF24(a1, a2, a3, (_QWORD *)*v3, &qword_100659340, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRecurrenceRuleModel);
  *v3 = result;
  return result;
}

uint64_t sub_1003D8500(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003D8F54(a1, a2, a3, (_QWORD *)*v3, &qword_100659350, &qword_10064AAA0);
  *v3 = result;
  return result;
}

uint64_t sub_1003D852C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DA28C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1003D8548(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DA438(a1, a2, a3, (_QWORD *)*v3, &qword_1006593D8, &qword_100654918);
  *v3 = result;
  return result;
}

uint64_t sub_1003D8574(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1003DA618(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1003D8590(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DA790(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1003D85AC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DA928(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1003D85C8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1003DAAB0(a1, a2, a3, *v3, &qword_100656278);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1003D85F4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DAC18(a1, a2, a3, (_QWORD *)*v3, &qword_100643708, &qword_100659468);
  *v3 = result;
  return result;
}

uint64_t sub_1003D8620(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1003DADBC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1003D863C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003DAF24(a1, a2, a3, (_QWORD *)*v3, &qword_100659460, (uint64_t (*)(_QWORD))&type metadata accessor for REMAccountsListDataView.Model.PinnedList);
  *v3 = result;
  return result;
}

uint64_t sub_1003D8668(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10002A750((uint64_t *)&unk_10064FA40);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    memcpy(v14, v15, 8 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003D87C4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10002A750(&qword_100659308);
    v11 = (_QWORD *)swift_allocObject(v10, 48 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (unint64_t)(v11 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= v14 + 48 * v8)
      memmove(v11 + 4, a4 + 4, 48 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v14 >= v13 + 48 * v8 || v13 >= v14 + 48 * v8)
  {
    sub_10002A750(&qword_10063F668);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003D8968(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1003DAF24(a1, a2, a3, a4, (uint64_t *)&unk_100650540, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
}

uint64_t sub_1003D897C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10002A750(&qword_10064DD10);
    v11 = (char *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[40 * v8])
      memmove(v13, v14, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[40 * v8] || v13 >= &v14[40 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003D8AFC(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  size_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    v11 = sub_10002A750(a5);
    v12 = (char *)swift_allocObject(v11, 16 * v10 + 32, 7);
    v13 = j__malloc_size(v12);
    v14 = v13 - 32;
    if (v13 < 32)
      v14 = v13 - 17;
    *((_QWORD *)v12 + 2) = v9;
    *((_QWORD *)v12 + 3) = 2 * (v14 >> 4);
  }
  else
  {
    v12 = (char *)_swiftEmptyArrayStorage;
  }
  v15 = v12 + 32;
  v16 = a4 + 32;
  v17 = 16 * v9;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v15 >= &v16[v17])
      memmove(v15, v16, v17);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v16 >= &v15[v17] || v15 >= &v16[v17])
  {
    memcpy(v15, v16, v17);
LABEL_30:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003D8C50(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10002A750(&qword_1006592E0);
    v11 = (char *)swift_allocObject(v10, 112 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 112);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[112 * v8])
      memmove(v13, v14, 112 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[112 * v8] || v13 >= &v14[112 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003D8DD8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10002A750((uint64_t *)&unk_100654F80);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003D8F40(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1003DA438(a1, a2, a3, a4, &qword_100659448, &qword_1006589A8);
}

uint64_t sub_1003D8F54(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    v13 = sub_10002A750(a5);
    v14 = (_QWORD *)swift_allocObject(v13, 16 * v12 + 32, 7);
    v15 = j__malloc_size(v14);
    v16 = v15 - 32;
    if (v15 < 32)
      v16 = v15 - 17;
    v14[2] = v11;
    v14[3] = 2 * (v16 >> 4);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  v17 = (unint64_t)(v14 + 4);
  v18 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v14 != a4 || v17 >= v18 + 16 * v11)
      memmove(v14 + 4, a4 + 4, 16 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v18 >= v17 + 16 * v11 || v17 >= v18 + 16 * v11)
  {
    sub_10002A750(a6);
    swift_arrayInitWithCopy(v14 + 4);
LABEL_30:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003D90E0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10002A750(&qword_1006487F0);
    v11 = (char *)swift_allocObject(v10, 48 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 48);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  v15 = 48 * v8;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003D9258(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;
  size_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    v11 = sub_10002A750(a5);
    v12 = (char *)swift_allocObject(v11, 40 * v10 + 32, 7);
    v13 = j__malloc_size(v12);
    *((_QWORD *)v12 + 2) = v9;
    *((_QWORD *)v12 + 3) = 2 * ((uint64_t)(v13 - 32) / 40);
  }
  else
  {
    v12 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v12 + 32;
  v15 = a4 + 32;
  v16 = 40 * v9;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v14 >= &v15[v16])
      memmove(v14, v15, v16);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    swift_arrayInitWithCopy(v14);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v12;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003D93D0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10002A750(&qword_1006593A8);
    v11 = (char *)swift_allocObject(v10, 96 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 96);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[96 * v8])
      memmove(v13, v14, 96 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[96 * v8] || v13 >= &v14[96 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003D9554(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  size_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10002A750(&qword_10064A890);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  v16 = 32 * v8;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[v16])
      memmove(v14, v15, v16);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003D96B8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10002A750(&qword_100659420);
    v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 5);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 32 * v8)
      memmove(v11 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 32 * v8 || v14 >= v15 + 32 * v8)
  {
    sub_10002A750(&qword_100659428);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003D9840(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  size_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10002A750(&qword_1006593F8);
    v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 5);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = v11 + 4;
  v15 = a4 + 4;
  v16 = 4 * v8;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[v16])
      memmove(v11 + 4, a4 + 4, v16 * 8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    sub_10002A750(&qword_100659400);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003D99C4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10002A750(&qword_100659A30);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 8 * v8)
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 8 * v8 || v14 >= v15 + 8 * v8)
  {
    sub_10002A750(&qword_100650720);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003D9B4C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10002A750(&qword_100659398);
    v11 = (char *)swift_allocObject(v10, 112 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 112);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  v15 = 112 * v8;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003D9CC8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10002A750(&qword_1006593F0);
    v11 = (char *)swift_allocObject(v10, 136 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 136);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[136 * v8])
      memmove(v13, v14, 136 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[136 * v8] || v13 >= &v14[136 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003D9E48(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10002A750(&qword_100659478);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003D9FB0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10002A750(&qword_1006542F0);
    v11 = (char *)swift_allocObject(v10, 56 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 56);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[56 * v8])
      memmove(v13, v14, 56 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[56 * v8] || v13 >= &v14[56 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003DA138(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1003DA144(a1, a2, a3, a4, &qword_1006542C0);
}

uint64_t sub_1003DA144(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    v11 = sub_10002A750(a5);
    v12 = (char *)swift_allocObject(v11, v10 + 32, 7);
    v13 = j__malloc_size(v12);
    *((_QWORD *)v12 + 2) = v9;
    *((_QWORD *)v12 + 3) = 2 * v13 - 64;
  }
  else
  {
    v12 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v12 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v14 >= &v15[v9])
      memmove(v14, v15, v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[v9] || v14 >= &v15[v9])
  {
    memcpy(v14, v15, v9);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v12;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003DA28C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;
  _QWORD *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10002A750(&qword_100659480);
    v11 = (_QWORD *)swift_allocObject(v10, 48 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = v11 + 4;
  v14 = a4 + 4;
  v15 = 6 * v8;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v15])
      memmove(v11 + 4, a4 + 4, v15 * 8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    sub_10002A750(&qword_100647B20);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003DA424(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1003DA438(a1, a2, a3, a4, &qword_100654340, &qword_100654148);
}

uint64_t sub_1003DA438(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_10002A750(a5);
  v14 = *(_QWORD *)(sub_10002A750(a6) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_34;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = sub_10002A750(a6);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (char *)v18 + v23;
  v25 = (char *)a4 + v23;
  if ((a1 & 1) != 0)
  {
    if (v18 < a4 || v24 >= &v25[*(_QWORD *)(v22 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v24, v25, v11, v21);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v24, v25);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v26 = *(_QWORD *)(v22 + 72) * v11;
  v27 = &v24[v26];
  v28 = (unint64_t)&v25[v26];
  if (v25 >= v27 || (unint64_t)v24 >= v28)
  {
    swift_arrayInitWithCopy(v24);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v18;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003DA618(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10002A750(&qword_1006593A0);
    v11 = (char *)swift_allocObject(v10, 24 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  v15 = 24 * v8;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003DA790(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;
  _QWORD *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10002A750(&qword_100659348);
    v11 = (_QWORD *)swift_allocObject(v10, 24 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = v11 + 4;
  v14 = a4 + 4;
  v15 = 3 * v8;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v15])
      memmove(v11 + 4, a4 + 4, v15 * 8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    sub_10002A750(&qword_100654C80);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003DA928(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10002A750(&qword_100655918);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 16 * v8)
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 16 * v8 || v14 >= v15 + 16 * v8)
  {
    sub_10002A750(&qword_100659380);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003DAAB0(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  size_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    v11 = sub_10002A750(a5);
    v12 = (char *)swift_allocObject(v11, 16 * v10 + 32, 7);
    v13 = j__malloc_size(v12);
    v14 = v13 - 32;
    if (v13 < 32)
      v14 = v13 - 17;
    *((_QWORD *)v12 + 2) = v9;
    *((_QWORD *)v12 + 3) = 2 * (v14 >> 4);
  }
  else
  {
    v12 = (char *)_swiftEmptyArrayStorage;
  }
  v15 = v12 + 32;
  v16 = a4 + 32;
  v17 = 16 * v9;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v15 >= &v16[v17])
      memmove(v15, v16, v17);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v16 >= &v15[v17] || v15 >= &v16[v17])
  {
    swift_arrayInitWithCopy(v15);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v12;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003DAC18(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    v13 = sub_10002A750(a5);
    v14 = (_QWORD *)swift_allocObject(v13, 40 * v12 + 32, 7);
    v15 = j__malloc_size(v14);
    v14[2] = v11;
    v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  v16 = (unint64_t)(v14 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v14 != a4 || v16 >= v17 + 40 * v11)
      memmove(v14 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v17 >= v16 + 40 * v11 || v16 >= v17 + 40 * v11)
  {
    sub_10002A750(a6);
    swift_arrayInitWithCopy(v14 + 4);
LABEL_28:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003DADBC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10002A750(&qword_100659390);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003DAF24(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_10002A750(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_34;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = a6(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (char *)v18 + v23;
  v25 = (char *)a4 + v23;
  if ((a1 & 1) != 0)
  {
    if (v18 < a4 || v24 >= &v25[*(_QWORD *)(v22 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v24, v25, v11, v21);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v24, v25);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v26 = *(_QWORD *)(v22 + 72) * v11;
  v27 = &v24[v26];
  v28 = (unint64_t)&v25[v26];
  if (v25 >= v27 || (unint64_t)v24 >= v28)
  {
    swift_arrayInitWithCopy(v24);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v18;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void _s9Reminders33TTRSmartListFilterEditorViewModelV11DateOptionsO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD v29[20];
  uint64_t v30;

  v30 = a2;
  v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
  v29[16] = *(_QWORD *)(v3 - 8);
  v29[17] = v3;
  __chkstk_darwin(v3);
  v29[15] = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v29[18] = *(_QWORD *)(v5 - 8);
  v29[19] = v5;
  __chkstk_darwin(v5);
  v29[9] = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v29[10] = (char *)v29 - v8;
  __chkstk_darwin(v9);
  v29[11] = (char *)v29 - v10;
  __chkstk_darwin(v11);
  v29[14] = (char *)v29 - v12;
  __chkstk_darwin(v13);
  v29[13] = (char *)v29 - v14;
  __chkstk_darwin(v15);
  v29[12] = (char *)v29 - v16;
  v17 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
  __chkstk_darwin(v17);
  __chkstk_darwin(v18);
  __chkstk_darwin(v19);
  __chkstk_darwin(v20);
  __chkstk_darwin(v21);
  __chkstk_darwin(v22);
  v23 = sub_10002A750(&qword_100659470);
  __chkstk_darwin(v23);
  v25 = (char *)v29 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = (uint64_t)&v25[*(int *)(v26 + 48)];
  sub_1003DC6B0(a1, (uint64_t)v25);
  sub_1003DC6B0(v30, v27);
  v28 = (char *)sub_1003DB388 + 4 * word_100532466[swift_getEnumCaseMultiPayload(v25, v17)];
  __asm { BR              X10 }
}

uint64_t sub_1003DB388()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  char v4;
  char v5;

  sub_1003DC6B0(v2, (uint64_t)v3);
  if (swift_getEnumCaseMultiPayload(v0, v1))
  {
    sub_1000073A0(v2, &qword_100659470);
    v5 = 0;
  }
  else
  {
    v4 = *v3 ^ *v0;
    sub_1003DDD68(v2);
    v5 = v4 ^ 1;
  }
  return v5 & 1;
}

uint64_t _s9Reminders33TTRSmartListFilterEditorViewModelV7DetailsV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v12;
  uint64_t result;

  if (!a2)
  {
    if (!a6)
    {
LABEL_9:
      if (a3 == a7 && a4 == a8)
        return 1;
      else
        return _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a7, a8, 0);
    }
    return 0;
  }
  if (!a6)
    return 0;
  if (a1 == a5 && a2 == a6)
    goto LABEL_9;
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a5, a6, 0);
  result = 0;
  if ((v12 & 1) != 0)
    goto LABEL_9;
  return result;
}

uint64_t _s9Reminders33TTRSmartListFilterEditorViewModelV11TimeOptionsO4timeAE19ReminderKitInternal014REMCustomSmartcD10DescriptorC0dH0OSg_tcfC_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  uint64_t result;
  uint64_t v15;

  v2 = sub_10002A750(&qword_100642088);
  __chkstk_darwin(v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v15 - v10;
  sub_10000735C(a1, (uint64_t)v4, &qword_100642088);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1000073A0(a1, &qword_100642088);
    sub_1000073A0((uint64_t)v4, &qword_100642088);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterTime.any(_:))
  {
    v12 = 1;
LABEL_15:
    sub_1000073A0(a1, &qword_100642088);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return v12;
  }
  if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterTime.morning(_:))
  {
    v12 = 2;
    goto LABEL_15;
  }
  if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterTime.afternoon(_:))
  {
    v12 = 3;
    goto LABEL_15;
  }
  if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterTime.evening(_:))
  {
    v12 = 4;
    goto LABEL_15;
  }
  if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterTime.night(_:))
  {
    v12 = 5;
    goto LABEL_15;
  }
  if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterTime.noTime(_:))
  {
    v12 = 6;
    goto LABEL_15;
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v5, v5);
  __break(1u);
  return result;
}

uint64_t _s9Reminders33TTRSmartListFilterEditorViewModelV15PriorityOptionsO14priorityLevelsAESaySo011REMReminderH5LevelVGSg_tcfC_0(uint64_t result)
{
  uint64_t v1;
  int v2;
  char v3;
  int v4;
  int v5;

  if (result)
  {
    v1 = result;
    v2 = sub_100082240(0, result);
    v3 = sub_100082240(1, v1);
    v4 = sub_100082240(2, v1);
    v5 = sub_100082240(3, v1);
    swift_bridgeObjectRelease(v1);
    if ((v3 & 1) != 0)
    {
      if ((v4 & 1) == 0 && ((v2 | v5) & 1) == 0)
        return 2;
      return 1;
    }
    if ((v2 & 1) != 0)
    {
      if (((v4 | v5) & 1) == 0)
        return 5;
      return 1;
    }
    if ((v4 & 1) != 0)
    {
      if ((v5 & 1) == 0)
        return 3;
      return 1;
    }
    if ((v5 & 1) != 0)
      return 4;
    else
      return 0;
  }
  return result;
}

double sub_1003DC4DC(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 153) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 169) = 2;
  return result;
}

uint64_t type metadata accessor for TTRSmartListFilterEditorViewModel(uint64_t a1)
{
  return sub_100007328(a1, qword_1006591C0, (uint64_t)&nominal type descriptor for TTRSmartListFilterEditorViewModel);
}

uint64_t sub_1003DC518(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_1003DC55C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, char a5, uint64_t a6)
{
  double result;

  if (a6)
  {
    sub_1001CD3F8(a1, a2, a3, a4, a5);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a6).n128_u64[0];
  }
  return result;
}

uint64_t sub_1003DC588(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 160);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    v4);
  return a1;
}

unint64_t _s9Reminders33TTRSmartListFilterEditorViewModelV11DateOptionsO4BareO8rawValueAGSgSi_tcfC_0(unint64_t result)
{
  if (result >= 9)
    return 9;
  return result;
}

unint64_t _s9Reminders33TTRSmartListFilterEditorViewModelV15PriorityOptionsO8rawValueAESgSi_tcfC_0(unint64_t result)
{
  if (result >= 6)
    return 6;
  return result;
}

uint64_t sub_1003DC614(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(void **)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_BYTE *)(a1 + 32);
  sub_1001CD3C8(*(_QWORD *)a1, v4, v5, v6, v7);
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = v6;
  *(_BYTE *)(a2 + 32) = v7;
  return a2;
}

uint64_t sub_1003DC674(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for TTRListColors.Color - 1) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1003DC6B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003DC6F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_1006590D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003DC73C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for TTRSmartListFilterEditorViewModel.ListsData(a2, a1);
  return a2;
}

uint64_t sub_1003DC770(uint64_t a1, uint64_t a2)
{
  assignWithTake for TTRSmartListFilterEditorViewModel.ListsData(a2, a1);
  return a2;
}

uint64_t sub_1003DC7A8()
{
  return sub_1003DC8E4(&qword_1006590E0, &qword_1006590E8);
}

uint64_t sub_1003DC7D0()
{
  return sub_1003DC8E4(&qword_1006590F0, &qword_1006590F8);
}

uint64_t sub_1003DC7F8()
{
  return sub_1003DC8E4(&qword_100659100, &qword_100659108);
}

uint64_t sub_1003DC820()
{
  return sub_1003DC8E4(&qword_100659110, &qword_100659118);
}

uint64_t sub_1003DC848()
{
  return sub_1003DC8E4(&qword_100659120, &qword_100659128);
}

uint64_t sub_1003DC870()
{
  return sub_1003DC8E4(&qword_100659130, &qword_100659138);
}

uint64_t sub_1003DC898()
{
  return sub_1003DC8E4(&qword_100659140, &qword_100659148);
}

uint64_t sub_1003DC8C0()
{
  return sub_1003DC8E4(&qword_100659150, &qword_100659158);
}

uint64_t sub_1003DC8E4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_10002CA5C(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1003DC928()
{
  unint64_t result;

  result = qword_100659160;
  if (!qword_100659160)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRSmartListFilterEditorViewModel.HelpTopic, &type metadata for TTRSmartListFilterEditorViewModel.HelpTopic);
    atomic_store(result, (unint64_t *)&qword_100659160);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for TTRSmartListFilterEditorViewModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  void *v89;
  char v90;
  unsigned __int8 v91;
  int *v92;
  _QWORD *v93;
  _QWORD *v94;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    v21 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
    switch(swift_getEnumCaseMultiPayload(v9, v10))
    {
      case 1u:
        v11 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
        v12 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
        v13 = &v8[v12];
        v14 = &v9[v12];
        v15 = *((_QWORD *)v14 + 1);
        *(_QWORD *)v13 = *(_QWORD *)v14;
        *((_QWORD *)v13 + 1) = v15;
        v16 = *((_QWORD *)v14 + 3);
        *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
        *((_QWORD *)v13 + 3) = v16;
        swift_bridgeObjectRetain(v15);
        swift_bridgeObjectRetain(v16);
        v17 = v8;
        v18 = v10;
        v19 = 1;
        goto LABEL_10;
      case 2u:
        v22 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v8, v9, v22);
        v23 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
        v24 = &v8[v23];
        v25 = &v9[v23];
        v26 = *((_QWORD *)v25 + 1);
        *(_QWORD *)v24 = *(_QWORD *)v25;
        *((_QWORD *)v24 + 1) = v26;
        v27 = *((_QWORD *)v25 + 3);
        *((_QWORD *)v24 + 2) = *((_QWORD *)v25 + 2);
        *((_QWORD *)v24 + 3) = v27;
        swift_bridgeObjectRetain(v26);
        swift_bridgeObjectRetain(v27);
        v17 = v8;
        v18 = v10;
        v19 = 2;
        goto LABEL_10;
      case 3u:
        v28 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v8, v9, v28);
        v29 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
        v30 = &v8[v29];
        v31 = &v9[v29];
        v32 = *((_QWORD *)v31 + 1);
        *(_QWORD *)v30 = *(_QWORD *)v31;
        *((_QWORD *)v30 + 1) = v32;
        v33 = *((_QWORD *)v31 + 3);
        *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
        *((_QWORD *)v30 + 3) = v33;
        swift_bridgeObjectRetain(v32);
        swift_bridgeObjectRetain(v33);
        v17 = v8;
        v18 = v10;
        v19 = 3;
        goto LABEL_10;
      case 4u:
        v34 = type metadata accessor for Date(0);
        v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
        v35(v8, v9, v34);
        v36 = (int *)sub_10002A750(&qword_10064AC08);
        v35(&v8[v36[12]], &v9[v36[12]], v34);
        v37 = v36[16];
        v38 = &v8[v37];
        v39 = &v9[v37];
        v40 = *((_QWORD *)v39 + 1);
        *(_QWORD *)v38 = *(_QWORD *)v39;
        *((_QWORD *)v38 + 1) = v40;
        v41 = *((_QWORD *)v39 + 3);
        *((_QWORD *)v38 + 2) = *((_QWORD *)v39 + 2);
        *((_QWORD *)v38 + 3) = v41;
        v42 = v36[20];
        v43 = &v8[v42];
        v44 = &v9[v42];
        v45 = *((_QWORD *)v44 + 1);
        *(_QWORD *)v43 = *(_QWORD *)v44;
        *((_QWORD *)v43 + 1) = v45;
        v46 = *((_QWORD *)v44 + 3);
        *((_QWORD *)v43 + 2) = *((_QWORD *)v44 + 2);
        *((_QWORD *)v43 + 3) = v46;
        swift_bridgeObjectRetain(v40);
        swift_bridgeObjectRetain(v41);
        swift_bridgeObjectRetain(v45);
        swift_bridgeObjectRetain(v46);
        v17 = v8;
        v18 = v10;
        v19 = 4;
        goto LABEL_10;
      case 5u:
        v47 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v8, v9, v47);
        v48 = *(int *)(sub_10002A750(&qword_10064AC00) + 48);
        v49 = &v8[v48];
        v50 = &v9[v48];
        v51 = *((_QWORD *)v50 + 1);
        *(_QWORD *)v49 = *(_QWORD *)v50;
        *((_QWORD *)v49 + 1) = v51;
        v52 = *((_QWORD *)v50 + 3);
        *((_QWORD *)v49 + 2) = *((_QWORD *)v50 + 2);
        *((_QWORD *)v49 + 3) = v52;
        swift_bridgeObjectRetain(v51);
        swift_bridgeObjectRetain(v52);
        v17 = v8;
        v18 = v10;
        v19 = 5;
LABEL_10:
        swift_storeEnumTagMultiPayload(v17, v18, v19);
        break;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        break;
    }
    v53 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)a1 + v53) = *((_BYTE *)a2 + v53);
    v54 = a3[8];
    v55 = (char *)a1 + v54;
    v56 = (char *)a2 + v54;
    if (*(_QWORD *)((char *)a2 + v54 + 40))
    {
      v57 = *(_QWORD *)v56;
      v58 = *((_QWORD *)v56 + 1);
      v59 = (void *)*((_QWORD *)v56 + 2);
      v60 = *((_QWORD *)v56 + 3);
      v61 = v56[32];
      sub_1001CD3C8(*(_QWORD *)v56, v58, v59, v60, v61);
      *(_QWORD *)v55 = v57;
      *((_QWORD *)v55 + 1) = v58;
      *((_QWORD *)v55 + 2) = v59;
      *((_QWORD *)v55 + 3) = v60;
      v55[32] = v61;
      v62 = *((_QWORD *)v56 + 5);
      *((_QWORD *)v55 + 5) = v62;
      v55[48] = v56[48];
      swift_bridgeObjectRetain(v62);
    }
    else
    {
      v63 = *((_OWORD *)v56 + 1);
      *(_OWORD *)v55 = *(_OWORD *)v56;
      *((_OWORD *)v55 + 1) = v63;
      *((_OWORD *)v55 + 2) = *((_OWORD *)v56 + 2);
      v55[48] = v56[48];
    }
    v64 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)a1 + v64) = *((_BYTE *)a2 + v64);
    v65 = a3[11];
    v66 = (char *)a1 + v65;
    v67 = (char *)a2 + v65;
    v68 = *((_QWORD *)v67 + 2);
    v69 = (void *)*((_QWORD *)v67 + 3);
    v92 = a3;
    v93 = a2;
    v94 = a1;
    v78 = *((_QWORD *)v67 + 9);
    v79 = *((_QWORD *)v67 + 10);
    v80 = *((_QWORD *)v67 + 11);
    v81 = (void *)*((_QWORD *)v67 + 12);
    v82 = *((_QWORD *)v67 + 13);
    v83 = *((_QWORD *)v67 + 14);
    v84 = *((_QWORD *)v67 + 15);
    v85 = *((_QWORD *)v67 + 16);
    v86 = *((_QWORD *)v67 + 17);
    v87 = *((_QWORD *)v67 + 18);
    v88 = (void *)*((_QWORD *)v67 + 19);
    v89 = (void *)*((_QWORD *)v67 + 20);
    v90 = v67[168];
    v91 = v67[169];
    v70 = *((_QWORD *)v67 + 8);
    v71 = *(id *)v67;
    v72 = *((_QWORD *)v67 + 1);
    v73 = *((_QWORD *)v67 + 4);
    v74 = *((_QWORD *)v67 + 5);
    v75 = *((_QWORD *)v67 + 6);
    v76 = *((_QWORD *)v67 + 7);
    sub_1003DCE5C(*(id *)v67, v72, v68, v69, v73, v74, v75, v76, v70, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87,
      v88,
      v89,
      v90,
      v91);
    *(_QWORD *)v66 = v71;
    *((_QWORD *)v66 + 1) = v72;
    *((_QWORD *)v66 + 2) = v68;
    *((_QWORD *)v66 + 3) = v69;
    *((_QWORD *)v66 + 4) = v73;
    *((_QWORD *)v66 + 5) = v74;
    *((_QWORD *)v66 + 6) = v75;
    *((_QWORD *)v66 + 7) = v76;
    *((_QWORD *)v66 + 8) = v70;
    v21 = v94;
    *((_QWORD *)v66 + 9) = v78;
    *((_QWORD *)v66 + 10) = v79;
    *((_QWORD *)v66 + 11) = v80;
    *((_QWORD *)v66 + 12) = v81;
    *((_QWORD *)v66 + 13) = v82;
    *((_QWORD *)v66 + 14) = v83;
    *((_QWORD *)v66 + 15) = v84;
    *((_QWORD *)v66 + 16) = v85;
    *((_QWORD *)v66 + 17) = v86;
    *((_QWORD *)v66 + 18) = v87;
    *((_QWORD *)v66 + 19) = v88;
    *((_QWORD *)v66 + 20) = v89;
    v66[168] = v90;
    v66[169] = v91;
    *((_BYTE *)v94 + v92[12]) = *((_BYTE *)v93 + v92[12]);
  }
  return v21;
}

id sub_1003DCE5C(id result, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, void *a20,void *a21,char a22,unsigned __int8 a23)
{
  id v27;

  if (a23 <= 1u)
  {
    v27 = result;
    return sub_1003D752C(a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
             a21,
             a22);
  }
  return result;
}

void destroy for TTRSmartListFilterEditorViewModel(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1 + a2[5];
  v5 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
  switch(swift_getEnumCaseMultiPayload(v4, v5))
  {
    case 1u:
    case 2u:
    case 3u:
      v6 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
      v7 = &qword_10064AC10;
      goto LABEL_5;
    case 4u:
      v8 = type metadata accessor for Date(0);
      v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
      v9(v4, v8);
      v10 = sub_10002A750(&qword_10064AC08);
      v9(v4 + *(int *)(v10 + 48), v8);
      v11 = v4 + *(int *)(v10 + 64);
      swift_bridgeObjectRelease(*(_QWORD *)(v11 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v11 + 24));
      v12 = (int *)(v10 + 80);
      goto LABEL_6;
    case 5u:
      v13 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v4, v13);
      v7 = &qword_10064AC00;
LABEL_5:
      v12 = (int *)(sub_10002A750(v7) + 48);
LABEL_6:
      v14 = v4 + *v12;
      swift_bridgeObjectRelease(*(_QWORD *)(v14 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v14 + 24));
      break;
    default:
      break;
  }
  v15 = a1 + a2[8];
  if (*(_QWORD *)(v15 + 40))
  {
    sub_1001CD3F8(*(_QWORD *)v15, *(_QWORD *)(v15 + 8), *(void **)(v15 + 16), *(_QWORD *)(v15 + 24), *(_BYTE *)(v15 + 32));
    swift_bridgeObjectRelease(*(_QWORD *)(v15 + 40));
  }
  v16 = a1 + a2[11];
  sub_1003DD148(*(void **)v16, *(_QWORD *)(v16 + 8), *(_QWORD *)(v16 + 16), *(void **)(v16 + 24), *(_QWORD *)(v16 + 32), *(_QWORD *)(v16 + 40), *(_QWORD *)(v16 + 48), *(_QWORD *)(v16 + 56), *(_QWORD *)(v16 + 64), *(_QWORD *)(v16 + 72), *(_QWORD *)(v16 + 80), *(_QWORD *)(v16 + 88), *(void **)(v16 + 96), *(_QWORD *)(v16 + 104), *(_QWORD *)(v16 + 112), *(_QWORD *)(v16 + 120), *(_QWORD *)(v16 + 128), *(_QWORD *)(v16 + 136), *(_OWORD *)(v16 + 144),
    *(void **)(v16 + 152),
    *(void **)(v16 + 160),
    *(_WORD *)(v16 + 168),
    HIBYTE(*(_WORD *)(v16 + 168)));
}

void sub_1003DD148(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, void *a20,void *a21,char a22,unsigned __int8 a23)
{
  if (a23 <= 1u)
  {

    sub_1001CD2B8(a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
  }
}

_BYTE *initializeWithCopy for TTRSmartListFilterEditorViewModel(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  _BYTE *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *result;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  void *v86;
  char v87;
  unsigned __int8 v88;
  _BYTE *v89;
  int *v90;
  _BYTE *v91;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
  switch(swift_getEnumCaseMultiPayload(v8, v9))
  {
    case 1u:
      v10 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
      v12 = &v7[v11];
      v13 = &v8[v11];
      v14 = *((_QWORD *)v13 + 1);
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *((_QWORD *)v12 + 1) = v14;
      v15 = *((_QWORD *)v13 + 3);
      *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
      *((_QWORD *)v12 + 3) = v15;
      swift_bridgeObjectRetain(v14);
      swift_bridgeObjectRetain(v15);
      v16 = v7;
      v17 = v9;
      v18 = 1;
      goto LABEL_8;
    case 2u:
      v19 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v7, v8, v19);
      v20 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
      v21 = &v7[v20];
      v22 = &v8[v20];
      v23 = *((_QWORD *)v22 + 1);
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = v23;
      v24 = *((_QWORD *)v22 + 3);
      *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
      *((_QWORD *)v21 + 3) = v24;
      swift_bridgeObjectRetain(v23);
      swift_bridgeObjectRetain(v24);
      v16 = v7;
      v17 = v9;
      v18 = 2;
      goto LABEL_8;
    case 3u:
      v25 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v7, v8, v25);
      v26 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
      v27 = &v7[v26];
      v28 = &v8[v26];
      v29 = *((_QWORD *)v28 + 1);
      *(_QWORD *)v27 = *(_QWORD *)v28;
      *((_QWORD *)v27 + 1) = v29;
      v30 = *((_QWORD *)v28 + 3);
      *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
      *((_QWORD *)v27 + 3) = v30;
      swift_bridgeObjectRetain(v29);
      swift_bridgeObjectRetain(v30);
      v16 = v7;
      v17 = v9;
      v18 = 3;
      goto LABEL_8;
    case 4u:
      v31 = type metadata accessor for Date(0);
      v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
      v32(v7, v8, v31);
      v33 = (int *)sub_10002A750(&qword_10064AC08);
      v32(&v7[v33[12]], &v8[v33[12]], v31);
      v34 = v33[16];
      v35 = &v7[v34];
      v36 = &v8[v34];
      v37 = *((_QWORD *)v36 + 1);
      *(_QWORD *)v35 = *(_QWORD *)v36;
      *((_QWORD *)v35 + 1) = v37;
      v38 = *((_QWORD *)v36 + 3);
      *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
      *((_QWORD *)v35 + 3) = v38;
      v39 = v33[20];
      v40 = &v7[v39];
      v41 = &v8[v39];
      v42 = *((_QWORD *)v41 + 1);
      *(_QWORD *)v40 = *(_QWORD *)v41;
      *((_QWORD *)v40 + 1) = v42;
      v43 = *((_QWORD *)v41 + 3);
      *((_QWORD *)v40 + 2) = *((_QWORD *)v41 + 2);
      *((_QWORD *)v40 + 3) = v43;
      swift_bridgeObjectRetain(v37);
      swift_bridgeObjectRetain(v38);
      swift_bridgeObjectRetain(v42);
      swift_bridgeObjectRetain(v43);
      v16 = v7;
      v17 = v9;
      v18 = 4;
      goto LABEL_8;
    case 5u:
      v44 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v7, v8, v44);
      v45 = *(int *)(sub_10002A750(&qword_10064AC00) + 48);
      v46 = &v7[v45];
      v47 = &v8[v45];
      v48 = *((_QWORD *)v47 + 1);
      *(_QWORD *)v46 = *(_QWORD *)v47;
      *((_QWORD *)v46 + 1) = v48;
      v49 = *((_QWORD *)v47 + 3);
      *((_QWORD *)v46 + 2) = *((_QWORD *)v47 + 2);
      *((_QWORD *)v46 + 3) = v49;
      swift_bridgeObjectRetain(v48);
      swift_bridgeObjectRetain(v49);
      v16 = v7;
      v17 = v9;
      v18 = 5;
LABEL_8:
      swift_storeEnumTagMultiPayload(v16, v17, v18);
      break;
    default:
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      break;
  }
  v50 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v50] = a2[v50];
  v51 = a3[8];
  v52 = &a1[v51];
  v53 = &a2[v51];
  if (*(_QWORD *)&a2[v51 + 40])
  {
    v54 = *(_QWORD *)v53;
    v55 = *((_QWORD *)v53 + 1);
    v56 = (void *)*((_QWORD *)v53 + 2);
    v57 = *((_QWORD *)v53 + 3);
    v58 = v53[32];
    sub_1001CD3C8(*(_QWORD *)v53, v55, v56, v57, v58);
    *(_QWORD *)v52 = v54;
    *((_QWORD *)v52 + 1) = v55;
    *((_QWORD *)v52 + 2) = v56;
    *((_QWORD *)v52 + 3) = v57;
    v52[32] = v58;
    v59 = *((_QWORD *)v53 + 5);
    *((_QWORD *)v52 + 5) = v59;
    v52[48] = v53[48];
    swift_bridgeObjectRetain(v59);
  }
  else
  {
    v60 = *((_OWORD *)v53 + 1);
    *(_OWORD *)v52 = *(_OWORD *)v53;
    *((_OWORD *)v52 + 1) = v60;
    *((_OWORD *)v52 + 2) = *((_OWORD *)v53 + 2);
    v52[48] = v53[48];
  }
  v61 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v61] = a2[v61];
  v62 = a3[11];
  v63 = &a1[v62];
  v64 = &a2[v62];
  v65 = *((_QWORD *)v64 + 2);
  v66 = (void *)*((_QWORD *)v64 + 3);
  v90 = a3;
  v91 = a2;
  v89 = a1;
  v75 = *((_QWORD *)v64 + 9);
  v76 = *((_QWORD *)v64 + 10);
  v77 = *((_QWORD *)v64 + 11);
  v78 = (void *)*((_QWORD *)v64 + 12);
  v79 = *((_QWORD *)v64 + 13);
  v80 = *((_QWORD *)v64 + 14);
  v81 = *((_QWORD *)v64 + 15);
  v82 = *((_QWORD *)v64 + 16);
  v83 = *((_QWORD *)v64 + 17);
  v84 = *((_QWORD *)v64 + 18);
  v85 = (void *)*((_QWORD *)v64 + 19);
  v86 = (void *)*((_QWORD *)v64 + 20);
  v87 = v64[168];
  v88 = v64[169];
  v67 = *((_QWORD *)v64 + 8);
  v68 = *(id *)v64;
  v69 = *((_QWORD *)v64 + 1);
  v70 = *((_QWORD *)v64 + 4);
  v71 = *((_QWORD *)v64 + 5);
  v72 = *((_QWORD *)v64 + 6);
  v73 = *((_QWORD *)v64 + 7);
  sub_1003DCE5C(*(id *)v64, v69, v65, v66, v70, v71, v72, v73, v67, v75, v76, v77, v78, v79, v80, v81, v82, v83, v84,
    v85,
    v86,
    v87,
    v88);
  *(_QWORD *)v63 = v68;
  *((_QWORD *)v63 + 1) = v69;
  *((_QWORD *)v63 + 2) = v65;
  *((_QWORD *)v63 + 3) = v66;
  *((_QWORD *)v63 + 4) = v70;
  *((_QWORD *)v63 + 5) = v71;
  *((_QWORD *)v63 + 6) = v72;
  *((_QWORD *)v63 + 7) = v73;
  *((_QWORD *)v63 + 8) = v67;
  *((_QWORD *)v63 + 9) = v75;
  *((_QWORD *)v63 + 10) = v76;
  *((_QWORD *)v63 + 11) = v77;
  *((_QWORD *)v63 + 12) = v78;
  *((_QWORD *)v63 + 13) = v79;
  *((_QWORD *)v63 + 14) = v80;
  *((_QWORD *)v63 + 15) = v81;
  *((_QWORD *)v63 + 16) = v82;
  *((_QWORD *)v63 + 17) = v83;
  *((_QWORD *)v63 + 18) = v84;
  *((_QWORD *)v63 + 19) = v85;
  *((_QWORD *)v63 + 20) = v86;
  v63[168] = v87;
  v63[169] = v88;
  result = v89;
  v89[v90[12]] = v91[v90[12]];
  return result;
}

_BYTE *assignWithCopy for TTRSmartListFilterEditorViewModel(_BYTE *a1, _BYTE *a2, int *a3)
{
  int *v3;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  void (*v33)(char *, char *, uint64_t);
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  void *v106;
  __int16 v107;
  _BYTE *result;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  void *v120;
  char v121;
  unsigned __int8 v122;
  int *v123;
  _BYTE *v124;
  _BYTE *v125;

  v3 = a3;
  *a1 = *a2;
  if (a1 != a2)
  {
    v6 = a3[5];
    v7 = &a1[v6];
    v8 = &a2[v6];
    sub_1003DDD68((uint64_t)&a1[v6]);
    v9 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
    switch(swift_getEnumCaseMultiPayload(v8, v9))
    {
      case 1u:
        v10 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
        v11 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
        v12 = &v7[v11];
        v13 = &v8[v11];
        *(_QWORD *)v12 = *(_QWORD *)v13;
        v14 = *((_QWORD *)v13 + 1);
        *((_QWORD *)v12 + 1) = v14;
        *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
        v15 = *((_QWORD *)v13 + 3);
        *((_QWORD *)v12 + 3) = v15;
        swift_bridgeObjectRetain(v14);
        swift_bridgeObjectRetain(v15);
        v16 = v7;
        v17 = v9;
        v18 = 1;
        goto LABEL_9;
      case 2u:
        v19 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v7, v8, v19);
        v20 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
        v21 = &v7[v20];
        v22 = &v8[v20];
        *(_QWORD *)v21 = *(_QWORD *)v22;
        v23 = *((_QWORD *)v22 + 1);
        *((_QWORD *)v21 + 1) = v23;
        *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
        v24 = *((_QWORD *)v22 + 3);
        *((_QWORD *)v21 + 3) = v24;
        swift_bridgeObjectRetain(v23);
        swift_bridgeObjectRetain(v24);
        v16 = v7;
        v17 = v9;
        v18 = 2;
        goto LABEL_9;
      case 3u:
        v25 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v7, v8, v25);
        v26 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
        v27 = &v7[v26];
        v28 = &v8[v26];
        *(_QWORD *)v27 = *(_QWORD *)v28;
        v29 = *((_QWORD *)v28 + 1);
        *((_QWORD *)v27 + 1) = v29;
        *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
        v30 = *((_QWORD *)v28 + 3);
        *((_QWORD *)v27 + 3) = v30;
        swift_bridgeObjectRetain(v29);
        swift_bridgeObjectRetain(v30);
        v16 = v7;
        v17 = v9;
        v18 = 3;
        goto LABEL_9;
      case 4u:
        v31 = type metadata accessor for Date(0);
        v32 = v3;
        v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
        v33(v7, v8, v31);
        v34 = (int *)sub_10002A750(&qword_10064AC08);
        v33(&v7[v34[12]], &v8[v34[12]], v31);
        v3 = v32;
        v35 = v34[16];
        v36 = &v7[v35];
        v37 = &v8[v35];
        *(_QWORD *)v36 = *(_QWORD *)v37;
        v38 = *((_QWORD *)v37 + 1);
        *((_QWORD *)v36 + 1) = v38;
        *((_QWORD *)v36 + 2) = *((_QWORD *)v37 + 2);
        v39 = *((_QWORD *)v37 + 3);
        *((_QWORD *)v36 + 3) = v39;
        v40 = v34[20];
        v41 = &v7[v40];
        v42 = &v8[v40];
        *(_QWORD *)v41 = *(_QWORD *)v42;
        v43 = *((_QWORD *)v42 + 1);
        *((_QWORD *)v41 + 1) = v43;
        *((_QWORD *)v41 + 2) = *((_QWORD *)v42 + 2);
        v44 = *((_QWORD *)v42 + 3);
        *((_QWORD *)v41 + 3) = v44;
        swift_bridgeObjectRetain(v38);
        swift_bridgeObjectRetain(v39);
        swift_bridgeObjectRetain(v43);
        swift_bridgeObjectRetain(v44);
        v16 = v7;
        v17 = v9;
        v18 = 4;
        goto LABEL_9;
      case 5u:
        v45 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v7, v8, v45);
        v46 = *(int *)(sub_10002A750(&qword_10064AC00) + 48);
        v47 = &v7[v46];
        v48 = &v8[v46];
        *(_QWORD *)v47 = *(_QWORD *)v48;
        v49 = *((_QWORD *)v48 + 1);
        *((_QWORD *)v47 + 1) = v49;
        *((_QWORD *)v47 + 2) = *((_QWORD *)v48 + 2);
        v50 = *((_QWORD *)v48 + 3);
        *((_QWORD *)v47 + 3) = v50;
        swift_bridgeObjectRetain(v49);
        swift_bridgeObjectRetain(v50);
        v16 = v7;
        v17 = v9;
        v18 = 5;
LABEL_9:
        swift_storeEnumTagMultiPayload(v16, v17, v18);
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        break;
    }
  }
  a1[v3[6]] = a2[v3[6]];
  a1[v3[7]] = a2[v3[7]];
  v51 = v3[8];
  v52 = (uint64_t)&a1[v51];
  v53 = &a2[v51];
  v54 = *(_QWORD *)&a1[v51 + 40];
  v55 = *(_QWORD *)&a2[v51 + 40];
  if (v54)
  {
    if (v55)
    {
      v56 = *(_QWORD *)v53;
      v57 = *((_QWORD *)v53 + 1);
      v58 = (void *)*((_QWORD *)v53 + 2);
      v59 = *((_QWORD *)v53 + 3);
      v60 = v53[32];
      sub_1001CD3C8(*(_QWORD *)v53, v57, v58, v59, v60);
      v61 = *(_QWORD *)v52;
      v62 = *(_QWORD *)(v52 + 8);
      v63 = *(void **)(v52 + 16);
      v64 = *(_QWORD *)(v52 + 24);
      *(_QWORD *)v52 = v56;
      *(_QWORD *)(v52 + 8) = v57;
      *(_QWORD *)(v52 + 16) = v58;
      *(_QWORD *)(v52 + 24) = v59;
      v65 = *(_BYTE *)(v52 + 32);
      *(_BYTE *)(v52 + 32) = v60;
      sub_1001CD3F8(v61, v62, v63, v64, v65);
      v66 = *((_QWORD *)v53 + 5);
      v67 = *(_QWORD *)(v52 + 40);
      *(_QWORD *)(v52 + 40) = v66;
      swift_bridgeObjectRetain(v66);
      swift_bridgeObjectRelease(v67);
      *(_BYTE *)(v52 + 48) = v53[48];
    }
    else
    {
      sub_1003DDDA4(v52);
      v75 = *((_OWORD *)v53 + 1);
      v74 = *((_OWORD *)v53 + 2);
      v76 = *(_OWORD *)v53;
      *(_BYTE *)(v52 + 48) = v53[48];
      *(_OWORD *)(v52 + 16) = v75;
      *(_OWORD *)(v52 + 32) = v74;
      *(_OWORD *)v52 = v76;
    }
  }
  else if (v55)
  {
    v68 = *(_QWORD *)v53;
    v69 = *((_QWORD *)v53 + 1);
    v70 = (void *)*((_QWORD *)v53 + 2);
    v71 = *((_QWORD *)v53 + 3);
    v72 = v53[32];
    sub_1001CD3C8(*(_QWORD *)v53, v69, v70, v71, v72);
    *(_QWORD *)v52 = v68;
    *(_QWORD *)(v52 + 8) = v69;
    *(_QWORD *)(v52 + 16) = v70;
    *(_QWORD *)(v52 + 24) = v71;
    *(_BYTE *)(v52 + 32) = v72;
    v73 = *((_QWORD *)v53 + 5);
    *(_QWORD *)(v52 + 40) = v73;
    *(_BYTE *)(v52 + 48) = v53[48];
    swift_bridgeObjectRetain(v73);
  }
  else
  {
    v77 = *(_OWORD *)v53;
    v78 = *((_OWORD *)v53 + 1);
    v79 = *((_OWORD *)v53 + 2);
    *(_BYTE *)(v52 + 48) = v53[48];
    *(_OWORD *)(v52 + 16) = v78;
    *(_OWORD *)(v52 + 32) = v79;
    *(_OWORD *)v52 = v77;
  }
  a1[v3[9]] = a2[v3[9]];
  a1[v3[10]] = a2[v3[10]];
  v80 = v3[11];
  v81 = &a1[v80];
  v82 = &a2[v80];
  v83 = *(id *)v82;
  v84 = *((_QWORD *)v82 + 1);
  v85 = *((_QWORD *)v82 + 2);
  v86 = (void *)*((_QWORD *)v82 + 3);
  v124 = a2;
  v125 = a1;
  v87 = *((_QWORD *)v82 + 4);
  v88 = *((_QWORD *)v82 + 5);
  v90 = *((_QWORD *)v82 + 6);
  v89 = *((_QWORD *)v82 + 7);
  v123 = v3;
  v91 = *((_QWORD *)v82 + 8);
  v109 = *((_QWORD *)v82 + 9);
  v110 = *((_QWORD *)v82 + 10);
  v111 = *((_QWORD *)v82 + 11);
  v112 = (void *)*((_QWORD *)v82 + 12);
  v113 = *((_QWORD *)v82 + 13);
  v114 = *((_QWORD *)v82 + 14);
  v115 = *((_QWORD *)v82 + 15);
  v116 = *((_QWORD *)v82 + 16);
  v117 = *((_QWORD *)v82 + 17);
  v118 = *((_QWORD *)v82 + 18);
  v119 = (void *)*((_QWORD *)v82 + 19);
  v120 = (void *)*((_QWORD *)v82 + 20);
  v121 = v82[168];
  v122 = v82[169];
  sub_1003DCE5C(*(id *)v82, v84, v85, v86, v87, v88, v90, v89, v91, v109, v110, v111, v112, v113, v114, v115, v116, v117, v118,
    v119,
    v120,
    v121,
    v122);
  v92 = *(void **)v81;
  v93 = *((_QWORD *)v81 + 1);
  *(_QWORD *)v81 = v83;
  *((_QWORD *)v81 + 1) = v84;
  v94 = *((_QWORD *)v81 + 2);
  v95 = (void *)*((_QWORD *)v81 + 3);
  *((_QWORD *)v81 + 2) = v85;
  *((_QWORD *)v81 + 3) = v86;
  v96 = *((_QWORD *)v81 + 4);
  v97 = *((_QWORD *)v81 + 5);
  *((_QWORD *)v81 + 4) = v87;
  *((_QWORD *)v81 + 5) = v88;
  v98 = *((_QWORD *)v81 + 6);
  v99 = *((_QWORD *)v81 + 7);
  *((_QWORD *)v81 + 6) = v90;
  *((_QWORD *)v81 + 7) = v89;
  v100 = *((_OWORD *)v81 + 4);
  v101 = *((_OWORD *)v81 + 5);
  *((_QWORD *)v81 + 8) = v91;
  *((_QWORD *)v81 + 9) = v109;
  *((_QWORD *)v81 + 10) = v110;
  *((_QWORD *)v81 + 11) = v111;
  v102 = *((_OWORD *)v81 + 6);
  v103 = *((_OWORD *)v81 + 7);
  *((_QWORD *)v81 + 12) = v112;
  *((_QWORD *)v81 + 13) = v113;
  *((_QWORD *)v81 + 14) = v114;
  *((_QWORD *)v81 + 15) = v115;
  v104 = *((_OWORD *)v81 + 8);
  v105 = *((_OWORD *)v81 + 9);
  *((_QWORD *)v81 + 16) = v116;
  *((_QWORD *)v81 + 17) = v117;
  *((_QWORD *)v81 + 18) = v118;
  *((_QWORD *)v81 + 19) = v119;
  v106 = (void *)*((_QWORD *)v81 + 20);
  *((_QWORD *)v81 + 20) = v120;
  v107 = *((_WORD *)v81 + 84);
  v81[168] = v121;
  v81[169] = v122;
  sub_1003DD148(v92, v93, v94, v95, v96, v97, v98, v99, v100, SBYTE8(v100), v101, *((uint64_t *)&v101 + 1), (void *)v102, *((uint64_t *)&v102 + 1), v103, *((uint64_t *)&v103 + 1), v104, *((uint64_t *)&v104 + 1), v105,
    *((void **)&v105 + 1),
    v106,
    v107,
    HIBYTE(v107));
  result = v125;
  v125[v123[12]] = v124[v123[12]];
  return result;
}

uint64_t sub_1003DDD68(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003DDDA4(uint64_t a1)
{
  destroy for TTRSmartListFilterEditorViewModel.LocationData(a1);
  return a1;
}

_BYTE *initializeWithTake for TTRSmartListFilterEditorViewModel(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  __int128 v49;
  uint64_t v50;
  _OWORD *v51;
  _OWORD *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
  switch(swift_getEnumCaseMultiPayload(v8, v9))
  {
    case 1u:
      v10 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      v11 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
      v12 = &v7[v11];
      v13 = &v8[v11];
      v14 = *((_OWORD *)v13 + 1);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v14;
      v15 = v7;
      v16 = v9;
      v17 = 1;
      goto LABEL_8;
    case 2u:
      v18 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v7, v8, v18);
      v19 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
      v20 = &v7[v19];
      v21 = &v8[v19];
      v22 = *((_OWORD *)v21 + 1);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v22;
      v15 = v7;
      v16 = v9;
      v17 = 2;
      goto LABEL_8;
    case 3u:
      v23 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v7, v8, v23);
      v24 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
      v25 = &v7[v24];
      v26 = &v8[v24];
      v27 = *((_OWORD *)v26 + 1);
      *(_OWORD *)v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v27;
      v15 = v7;
      v16 = v9;
      v17 = 3;
      goto LABEL_8;
    case 4u:
      v28 = type metadata accessor for Date(0);
      v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32);
      v29(v7, v8, v28);
      v30 = (int *)sub_10002A750(&qword_10064AC08);
      v29(&v7[v30[12]], &v8[v30[12]], v28);
      v31 = v30[16];
      v32 = &v7[v31];
      v33 = &v8[v31];
      v34 = *((_OWORD *)v33 + 1);
      *(_OWORD *)v32 = *(_OWORD *)v33;
      *((_OWORD *)v32 + 1) = v34;
      v35 = v30[20];
      v36 = &v7[v35];
      v37 = &v8[v35];
      v38 = *((_OWORD *)v37 + 1);
      *(_OWORD *)v36 = *(_OWORD *)v37;
      *((_OWORD *)v36 + 1) = v38;
      v15 = v7;
      v16 = v9;
      v17 = 4;
      goto LABEL_8;
    case 5u:
      v39 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v7, v8, v39);
      v40 = *(int *)(sub_10002A750(&qword_10064AC00) + 48);
      v41 = &v7[v40];
      v42 = &v8[v40];
      v43 = *((_OWORD *)v42 + 1);
      *(_OWORD *)v41 = *(_OWORD *)v42;
      *((_OWORD *)v41 + 1) = v43;
      v15 = v7;
      v16 = v9;
      v17 = 5;
LABEL_8:
      swift_storeEnumTagMultiPayload(v15, v16, v17);
      break;
    default:
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      break;
  }
  v44 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v44] = a2[v44];
  v45 = a3[8];
  v46 = a3[9];
  v47 = &a1[v45];
  v48 = &a2[v45];
  v49 = *((_OWORD *)v48 + 1);
  *(_OWORD *)v47 = *(_OWORD *)v48;
  *((_OWORD *)v47 + 1) = v49;
  *((_OWORD *)v47 + 2) = *((_OWORD *)v48 + 2);
  v47[48] = v48[48];
  a1[v46] = a2[v46];
  v50 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  v51 = &a1[v50];
  v52 = &a2[v50];
  v53 = v52[1];
  *v51 = *v52;
  v51[1] = v53;
  v54 = v52[5];
  v51[4] = v52[4];
  v51[5] = v54;
  v55 = v52[3];
  v51[2] = v52[2];
  v51[3] = v55;
  *(_OWORD *)((char *)v51 + 154) = *(_OWORD *)((char *)v52 + 154);
  v56 = v52[9];
  v51[8] = v52[8];
  v51[9] = v56;
  v57 = v52[7];
  v51[6] = v52[6];
  v51[7] = v57;
  a1[a3[12]] = a2[a3[12]];
  return a1;
}

_BYTE *assignWithTake for TTRSmartListFilterEditorViewModel(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  __int128 v53;
  char v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;
  __int16 v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  void *v77;
  __int16 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;

  *a1 = *a2;
  if (a1 != a2)
  {
    v6 = a3[5];
    v7 = &a1[v6];
    v8 = &a2[v6];
    sub_1003DDD68((uint64_t)&a1[v6]);
    v9 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
    switch(swift_getEnumCaseMultiPayload(v8, v9))
    {
      case 1u:
        v10 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
        v11 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
        v12 = &v7[v11];
        v13 = &v8[v11];
        v14 = *((_OWORD *)v13 + 1);
        *(_OWORD *)v12 = *(_OWORD *)v13;
        *((_OWORD *)v12 + 1) = v14;
        v15 = v7;
        v16 = v9;
        v17 = 1;
        goto LABEL_9;
      case 2u:
        v18 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v7, v8, v18);
        v19 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
        v20 = &v7[v19];
        v21 = &v8[v19];
        v22 = *((_OWORD *)v21 + 1);
        *(_OWORD *)v20 = *(_OWORD *)v21;
        *((_OWORD *)v20 + 1) = v22;
        v15 = v7;
        v16 = v9;
        v17 = 2;
        goto LABEL_9;
      case 3u:
        v23 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v7, v8, v23);
        v24 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
        v25 = &v7[v24];
        v26 = &v8[v24];
        v27 = *((_OWORD *)v26 + 1);
        *(_OWORD *)v25 = *(_OWORD *)v26;
        *((_OWORD *)v25 + 1) = v27;
        v15 = v7;
        v16 = v9;
        v17 = 3;
        goto LABEL_9;
      case 4u:
        v28 = type metadata accessor for Date(0);
        v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32);
        v29(v7, v8, v28);
        v30 = (int *)sub_10002A750(&qword_10064AC08);
        v29(&v7[v30[12]], &v8[v30[12]], v28);
        v31 = v30[16];
        v32 = &v7[v31];
        v33 = &v8[v31];
        v34 = *((_OWORD *)v33 + 1);
        *(_OWORD *)v32 = *(_OWORD *)v33;
        *((_OWORD *)v32 + 1) = v34;
        v35 = v30[20];
        v36 = &v7[v35];
        v37 = &v8[v35];
        v38 = *((_OWORD *)v37 + 1);
        *(_OWORD *)v36 = *(_OWORD *)v37;
        *((_OWORD *)v36 + 1) = v38;
        v15 = v7;
        v16 = v9;
        v17 = 4;
        goto LABEL_9;
      case 5u:
        v39 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v7, v8, v39);
        v40 = *(int *)(sub_10002A750(&qword_10064AC00) + 48);
        v41 = &v7[v40];
        v42 = &v8[v40];
        v43 = *((_OWORD *)v42 + 1);
        *(_OWORD *)v41 = *(_OWORD *)v42;
        *((_OWORD *)v41 + 1) = v43;
        v15 = v7;
        v16 = v9;
        v17 = 5;
LABEL_9:
        swift_storeEnumTagMultiPayload(v15, v16, v17);
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        break;
    }
  }
  v44 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v44] = a2[v44];
  v45 = a3[8];
  v46 = (uint64_t)&a1[v45];
  v47 = &a2[v45];
  if (!*(_QWORD *)&a1[v45 + 40])
    goto LABEL_14;
  if (!*((_QWORD *)v47 + 5))
  {
    sub_1003DDDA4(v46);
LABEL_14:
    v56 = *((_OWORD *)v47 + 1);
    *(_OWORD *)v46 = *(_OWORD *)v47;
    *(_OWORD *)(v46 + 16) = v56;
    *(_OWORD *)(v46 + 32) = *((_OWORD *)v47 + 2);
    goto LABEL_15;
  }
  v48 = v47[32];
  v49 = *(_QWORD *)v46;
  v50 = *(_QWORD *)(v46 + 8);
  v51 = *(void **)(v46 + 16);
  v52 = *(_QWORD *)(v46 + 24);
  v53 = *((_OWORD *)v47 + 1);
  *(_OWORD *)v46 = *(_OWORD *)v47;
  *(_OWORD *)(v46 + 16) = v53;
  v54 = *(_BYTE *)(v46 + 32);
  *(_BYTE *)(v46 + 32) = v48;
  sub_1001CD3F8(v49, v50, v51, v52, v54);
  v55 = *(_QWORD *)(v46 + 40);
  *(_QWORD *)(v46 + 40) = *((_QWORD *)v47 + 5);
  swift_bridgeObjectRelease(v55);
LABEL_15:
  *(_BYTE *)(v46 + 48) = v47[48];
  v57 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v57] = a2[v57];
  v58 = a3[11];
  v59 = &a1[v58];
  v60 = &a2[v58];
  v61 = *((_QWORD *)v60 + 20);
  v62 = *((_WORD *)v60 + 84);
  v63 = *(void **)v59;
  v64 = *((_QWORD *)v59 + 1);
  v65 = *((_QWORD *)v59 + 2);
  v66 = (void *)*((_QWORD *)v59 + 3);
  v67 = *((_QWORD *)v59 + 4);
  v68 = *((_QWORD *)v59 + 5);
  v69 = *((_QWORD *)v59 + 6);
  v70 = *((_QWORD *)v59 + 7);
  v71 = *((_OWORD *)v59 + 4);
  v72 = *((_OWORD *)v59 + 5);
  v73 = *((_OWORD *)v59 + 6);
  v74 = *((_OWORD *)v59 + 7);
  v75 = *((_OWORD *)v59 + 8);
  v76 = *((_OWORD *)v59 + 9);
  v77 = (void *)*((_QWORD *)v59 + 20);
  v78 = *((_WORD *)v59 + 84);
  v79 = *((_OWORD *)v60 + 1);
  *(_OWORD *)v59 = *(_OWORD *)v60;
  *((_OWORD *)v59 + 1) = v79;
  v80 = *((_OWORD *)v60 + 3);
  *((_OWORD *)v59 + 2) = *((_OWORD *)v60 + 2);
  *((_OWORD *)v59 + 3) = v80;
  v81 = *((_OWORD *)v60 + 5);
  *((_OWORD *)v59 + 4) = *((_OWORD *)v60 + 4);
  *((_OWORD *)v59 + 5) = v81;
  v82 = *((_OWORD *)v60 + 7);
  *((_OWORD *)v59 + 6) = *((_OWORD *)v60 + 6);
  *((_OWORD *)v59 + 7) = v82;
  v83 = *((_OWORD *)v60 + 9);
  *((_OWORD *)v59 + 8) = *((_OWORD *)v60 + 8);
  *((_OWORD *)v59 + 9) = v83;
  *((_QWORD *)v59 + 20) = v61;
  *((_WORD *)v59 + 84) = v62;
  sub_1003DD148(v63, v64, v65, v66, v67, v68, v69, v70, v71, SBYTE8(v71), v72, *((uint64_t *)&v72 + 1), (void *)v73, *((uint64_t *)&v73 + 1), v74, *((uint64_t *)&v74 + 1), v75, *((uint64_t *)&v75 + 1), v76,
    *((void **)&v76 + 1),
    v77,
    v78,
    HIBYTE(v78));
  a1[a3[12]] = a2[a3[12]];
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRSmartListFilterEditorViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003DE488);
}

uint64_t sub_1003DE488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 40);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003DE524);
}

uint64_t sub_1003DE524(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 40) = a2;
  return result;
}

uint64_t sub_1003DE5A4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = &unk_100532CA8;
  result = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_100532CC0;
    v4[3] = &unk_100532CD8;
    v4[4] = &unk_100532CF0;
    v4[5] = &unk_100532D08;
    v4[6] = &unk_100532CD8;
    v4[7] = &unk_100532D20;
    v4[8] = &unk_100532CA8;
    swift_initStructMetadata(a1, 256, 9, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t destroy for TTRIBoardColumnSelectionRequest(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for TTRSmartListFilterEditorViewModel.Details(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

_QWORD *assignWithCopy for TTRSmartListFilterEditorViewModel.Details(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

_QWORD *assignWithTake for TTRSmartListFilterEditorViewModel.Details(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.Details(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.Details(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.Details()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.Details;
}

uint64_t storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.FilterOperationOptions(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003DE844 + 4 * byte_10053249B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003DE878 + 4 * byte_100532496[v4]))();
}

uint64_t sub_1003DE878(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003DE880(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003DE888);
  return result;
}

uint64_t sub_1003DE894(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003DE89CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003DE8A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003DE8A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.FilterOperationOptions()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.FilterOperationOptions;
}

uint64_t storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.HashtagOptions(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1003DE910 + 4 * byte_1005324A5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1003DE944 + 4 * byte_1005324A0[v4]))();
}

uint64_t sub_1003DE944(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003DE94C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003DE954);
  return result;
}

uint64_t sub_1003DE960(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003DE968);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1003DE96C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003DE974(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.HashtagOptions()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.HashtagOptions;
}

uint64_t *initializeBufferWithCopyOfBuffer for TTRSmartListFilterEditorViewModel.DateOptions(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t *, uint64_t *, uint64_t);
  int *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 1u:
        v8 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        v9 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
        v10 = (uint64_t *)((char *)a1 + v9);
        v11 = (uint64_t *)((char *)a2 + v9);
        v12 = v11[1];
        *v10 = *v11;
        v10[1] = v12;
        v13 = v11[3];
        v10[2] = v11[2];
        v10[3] = v13;
        swift_bridgeObjectRetain(v12);
        swift_bridgeObjectRetain(v13);
        swift_storeEnumTagMultiPayload(a1, a3, 1);
        break;
      case 2u:
        v16 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
        v17 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
        v18 = (uint64_t *)((char *)a1 + v17);
        v19 = (uint64_t *)((char *)a2 + v17);
        v20 = v19[1];
        *v18 = *v19;
        v18[1] = v20;
        v21 = v19[3];
        v18[2] = v19[2];
        v18[3] = v21;
        swift_bridgeObjectRetain(v20);
        swift_bridgeObjectRetain(v21);
        swift_storeEnumTagMultiPayload(a1, a3, 2);
        break;
      case 3u:
        v22 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
        v23 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
        v24 = (uint64_t *)((char *)a1 + v23);
        v25 = (uint64_t *)((char *)a2 + v23);
        v26 = v25[1];
        *v24 = *v25;
        v24[1] = v26;
        v27 = v25[3];
        v24[2] = v25[2];
        v24[3] = v27;
        swift_bridgeObjectRetain(v26);
        swift_bridgeObjectRetain(v27);
        swift_storeEnumTagMultiPayload(a1, a3, 3);
        break;
      case 4u:
        v28 = type metadata accessor for Date(0);
        v29 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
        v29(a1, a2, v28);
        v30 = (int *)sub_10002A750(&qword_10064AC08);
        v29((uint64_t *)((char *)a1 + v30[12]), (uint64_t *)((char *)a2 + v30[12]), v28);
        v31 = v30[16];
        v32 = (uint64_t *)((char *)a1 + v31);
        v33 = (uint64_t *)((char *)a2 + v31);
        v34 = v33[1];
        *v32 = *v33;
        v32[1] = v34;
        v35 = v33[3];
        v32[2] = v33[2];
        v32[3] = v35;
        v36 = v30[20];
        v37 = (uint64_t *)((char *)a1 + v36);
        v38 = (uint64_t *)((char *)a2 + v36);
        v39 = v38[1];
        *v37 = *v38;
        v37[1] = v39;
        v40 = v38[3];
        v37[2] = v38[2];
        v37[3] = v40;
        swift_bridgeObjectRetain(v34);
        swift_bridgeObjectRetain(v35);
        swift_bridgeObjectRetain(v39);
        swift_bridgeObjectRetain(v40);
        swift_storeEnumTagMultiPayload(a1, a3, 4);
        break;
      case 5u:
        v41 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(a1, a2, v41);
        v42 = *(int *)(sub_10002A750(&qword_10064AC00) + 48);
        v43 = (uint64_t *)((char *)a1 + v42);
        v44 = (uint64_t *)((char *)a2 + v42);
        v45 = v44[1];
        *v43 = *v44;
        v43[1] = v45;
        v46 = v44[3];
        v43[2] = v44[2];
        v43[3] = v46;
        swift_bridgeObjectRetain(v45);
        swift_bridgeObjectRetain(v46);
        swift_storeEnumTagMultiPayload(a1, a3, 5);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

double destroy for TTRSmartListFilterEditorViewModel.DateOptions(uint64_t a1, uint64_t a2)
{
  double result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;

  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 1u:
    case 2u:
    case 3u:
      v4 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      v5 = &qword_10064AC10;
      goto LABEL_5;
    case 4u:
      v6 = type metadata accessor for Date(0);
      v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
      v7(a1, v6);
      v8 = sub_10002A750(&qword_10064AC08);
      v7(a1 + *(int *)(v8 + 48), v6);
      v9 = a1 + *(int *)(v8 + 64);
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + 24));
      v10 = (int *)(v8 + 80);
      goto LABEL_6;
    case 5u:
      v11 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
      v5 = &qword_10064AC00;
LABEL_5:
      v10 = (int *)(sub_10002A750(v5) + 48);
LABEL_6:
      v12 = a1 + *v10;
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24)).n128_u64[0];
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for TTRSmartListFilterEditorViewModel.DateOptions(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;

  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 1u:
      v6 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = *((_QWORD *)v9 + 1);
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *((_QWORD *)v8 + 1) = v10;
      v11 = *((_QWORD *)v9 + 3);
      *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
      *((_QWORD *)v8 + 3) = v11;
      swift_bridgeObjectRetain(v10);
      swift_bridgeObjectRetain(v11);
      v12 = a1;
      v13 = a3;
      v14 = 1;
      goto LABEL_8;
    case 2u:
      v15 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      v16 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
      v17 = &a1[v16];
      v18 = &a2[v16];
      v19 = *((_QWORD *)v18 + 1);
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *((_QWORD *)v17 + 1) = v19;
      v20 = *((_QWORD *)v18 + 3);
      *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
      *((_QWORD *)v17 + 3) = v20;
      swift_bridgeObjectRetain(v19);
      swift_bridgeObjectRetain(v20);
      v12 = a1;
      v13 = a3;
      v14 = 2;
      goto LABEL_8;
    case 3u:
      v21 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
      v22 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
      v23 = &a1[v22];
      v24 = &a2[v22];
      v25 = *((_QWORD *)v24 + 1);
      *(_QWORD *)v23 = *(_QWORD *)v24;
      *((_QWORD *)v23 + 1) = v25;
      v26 = *((_QWORD *)v24 + 3);
      *((_QWORD *)v23 + 2) = *((_QWORD *)v24 + 2);
      *((_QWORD *)v23 + 3) = v26;
      swift_bridgeObjectRetain(v25);
      swift_bridgeObjectRetain(v26);
      v12 = a1;
      v13 = a3;
      v14 = 3;
      goto LABEL_8;
    case 4u:
      v27 = type metadata accessor for Date(0);
      v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      v28(a1, a2, v27);
      v29 = (int *)sub_10002A750(&qword_10064AC08);
      v28(&a1[v29[12]], &a2[v29[12]], v27);
      v30 = v29[16];
      v31 = &a1[v30];
      v32 = &a2[v30];
      v33 = *((_QWORD *)v32 + 1);
      *(_QWORD *)v31 = *(_QWORD *)v32;
      *((_QWORD *)v31 + 1) = v33;
      v34 = *((_QWORD *)v32 + 3);
      *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
      *((_QWORD *)v31 + 3) = v34;
      v35 = v29[20];
      v36 = &a1[v35];
      v37 = &a2[v35];
      v38 = *((_QWORD *)v37 + 1);
      *(_QWORD *)v36 = *(_QWORD *)v37;
      *((_QWORD *)v36 + 1) = v38;
      v39 = *((_QWORD *)v37 + 3);
      *((_QWORD *)v36 + 2) = *((_QWORD *)v37 + 2);
      *((_QWORD *)v36 + 3) = v39;
      swift_bridgeObjectRetain(v33);
      swift_bridgeObjectRetain(v34);
      swift_bridgeObjectRetain(v38);
      swift_bridgeObjectRetain(v39);
      v12 = a1;
      v13 = a3;
      v14 = 4;
      goto LABEL_8;
    case 5u:
      v40 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(a1, a2, v40);
      v41 = *(int *)(sub_10002A750(&qword_10064AC00) + 48);
      v42 = &a1[v41];
      v43 = &a2[v41];
      v44 = *((_QWORD *)v43 + 1);
      *(_QWORD *)v42 = *(_QWORD *)v43;
      *((_QWORD *)v42 + 1) = v44;
      v45 = *((_QWORD *)v43 + 3);
      *((_QWORD *)v42 + 2) = *((_QWORD *)v43 + 2);
      *((_QWORD *)v42 + 3) = v45;
      swift_bridgeObjectRetain(v44);
      swift_bridgeObjectRetain(v45);
      v12 = a1;
      v13 = a3;
      v14 = 5;
LABEL_8:
      swift_storeEnumTagMultiPayload(v12, v13, v14);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for TTRSmartListFilterEditorViewModel.DateOptions(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;

  if (a1 != a2)
  {
    sub_1003DDD68((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 1u:
        v6 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        v7 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
        v8 = &a1[v7];
        v9 = &a2[v7];
        *(_QWORD *)v8 = *(_QWORD *)v9;
        v10 = *((_QWORD *)v9 + 1);
        *((_QWORD *)v8 + 1) = v10;
        *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
        v11 = *((_QWORD *)v9 + 3);
        *((_QWORD *)v8 + 3) = v11;
        swift_bridgeObjectRetain(v10);
        swift_bridgeObjectRetain(v11);
        v12 = a1;
        v13 = a3;
        v14 = 1;
        goto LABEL_9;
      case 2u:
        v15 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        v16 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
        v17 = &a1[v16];
        v18 = &a2[v16];
        *(_QWORD *)v17 = *(_QWORD *)v18;
        v19 = *((_QWORD *)v18 + 1);
        *((_QWORD *)v17 + 1) = v19;
        *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
        v20 = *((_QWORD *)v18 + 3);
        *((_QWORD *)v17 + 3) = v20;
        swift_bridgeObjectRetain(v19);
        swift_bridgeObjectRetain(v20);
        v12 = a1;
        v13 = a3;
        v14 = 2;
        goto LABEL_9;
      case 3u:
        v21 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
        v22 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
        v23 = &a1[v22];
        v24 = &a2[v22];
        *(_QWORD *)v23 = *(_QWORD *)v24;
        v25 = *((_QWORD *)v24 + 1);
        *((_QWORD *)v23 + 1) = v25;
        *((_QWORD *)v23 + 2) = *((_QWORD *)v24 + 2);
        v26 = *((_QWORD *)v24 + 3);
        *((_QWORD *)v23 + 3) = v26;
        swift_bridgeObjectRetain(v25);
        swift_bridgeObjectRetain(v26);
        v12 = a1;
        v13 = a3;
        v14 = 3;
        goto LABEL_9;
      case 4u:
        v27 = type metadata accessor for Date(0);
        v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
        v28(a1, a2, v27);
        v29 = (int *)sub_10002A750(&qword_10064AC08);
        v28(&a1[v29[12]], &a2[v29[12]], v27);
        v30 = v29[16];
        v31 = &a1[v30];
        v32 = &a2[v30];
        *(_QWORD *)v31 = *(_QWORD *)v32;
        v33 = *((_QWORD *)v32 + 1);
        *((_QWORD *)v31 + 1) = v33;
        *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
        v34 = *((_QWORD *)v32 + 3);
        *((_QWORD *)v31 + 3) = v34;
        v35 = v29[20];
        v36 = &a1[v35];
        v37 = &a2[v35];
        *(_QWORD *)v36 = *(_QWORD *)v37;
        v38 = *((_QWORD *)v37 + 1);
        *((_QWORD *)v36 + 1) = v38;
        *((_QWORD *)v36 + 2) = *((_QWORD *)v37 + 2);
        v39 = *((_QWORD *)v37 + 3);
        *((_QWORD *)v36 + 3) = v39;
        swift_bridgeObjectRetain(v33);
        swift_bridgeObjectRetain(v34);
        swift_bridgeObjectRetain(v38);
        swift_bridgeObjectRetain(v39);
        v12 = a1;
        v13 = a3;
        v14 = 4;
        goto LABEL_9;
      case 5u:
        v40 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(a1, a2, v40);
        v41 = *(int *)(sub_10002A750(&qword_10064AC00) + 48);
        v42 = &a1[v41];
        v43 = &a2[v41];
        *(_QWORD *)v42 = *(_QWORD *)v43;
        v44 = *((_QWORD *)v43 + 1);
        *((_QWORD *)v42 + 1) = v44;
        *((_QWORD *)v42 + 2) = *((_QWORD *)v43 + 2);
        v45 = *((_QWORD *)v43 + 3);
        *((_QWORD *)v42 + 3) = v45;
        swift_bridgeObjectRetain(v44);
        swift_bridgeObjectRetain(v45);
        v12 = a1;
        v13 = a3;
        v14 = 5;
LABEL_9:
        swift_storeEnumTagMultiPayload(v12, v13, v14);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for TTRSmartListFilterEditorViewModel.DateOptions(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  __int128 v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  __int128 v39;

  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 1u:
      v6 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = *((_OWORD *)v9 + 1);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v10;
      v11 = a1;
      v12 = a3;
      v13 = 1;
      goto LABEL_8;
    case 2u:
      v14 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
      v15 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
      v16 = &a1[v15];
      v17 = &a2[v15];
      v18 = *((_OWORD *)v17 + 1);
      *(_OWORD *)v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v18;
      v11 = a1;
      v12 = a3;
      v13 = 2;
      goto LABEL_8;
    case 3u:
      v19 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
      v20 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
      v21 = &a1[v20];
      v22 = &a2[v20];
      v23 = *((_OWORD *)v22 + 1);
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v23;
      v11 = a1;
      v12 = a3;
      v13 = 3;
      goto LABEL_8;
    case 4u:
      v24 = type metadata accessor for Date(0);
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
      v25(a1, a2, v24);
      v26 = (int *)sub_10002A750(&qword_10064AC08);
      v25(&a1[v26[12]], &a2[v26[12]], v24);
      v27 = v26[16];
      v28 = &a1[v27];
      v29 = &a2[v27];
      v30 = *((_OWORD *)v29 + 1);
      *(_OWORD *)v28 = *(_OWORD *)v29;
      *((_OWORD *)v28 + 1) = v30;
      v31 = v26[20];
      v32 = &a1[v31];
      v33 = &a2[v31];
      v34 = *((_OWORD *)v33 + 1);
      *(_OWORD *)v32 = *(_OWORD *)v33;
      *((_OWORD *)v32 + 1) = v34;
      v11 = a1;
      v12 = a3;
      v13 = 4;
      goto LABEL_8;
    case 5u:
      v35 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(a1, a2, v35);
      v36 = *(int *)(sub_10002A750(&qword_10064AC00) + 48);
      v37 = &a1[v36];
      v38 = &a2[v36];
      v39 = *((_OWORD *)v38 + 1);
      *(_OWORD *)v37 = *(_OWORD *)v38;
      *((_OWORD *)v37 + 1) = v39;
      v11 = a1;
      v12 = a3;
      v13 = 5;
LABEL_8:
      swift_storeEnumTagMultiPayload(v11, v12, v13);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for TTRSmartListFilterEditorViewModel.DateOptions(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  __int128 v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  __int128 v39;

  if (a1 != a2)
  {
    sub_1003DDD68((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 1u:
        v6 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        v7 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
        v8 = &a1[v7];
        v9 = &a2[v7];
        v10 = *((_OWORD *)v9 + 1);
        *(_OWORD *)v8 = *(_OWORD *)v9;
        *((_OWORD *)v8 + 1) = v10;
        v11 = a1;
        v12 = a3;
        v13 = 1;
        goto LABEL_9;
      case 2u:
        v14 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
        v15 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
        v16 = &a1[v15];
        v17 = &a2[v15];
        v18 = *((_OWORD *)v17 + 1);
        *(_OWORD *)v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v18;
        v11 = a1;
        v12 = a3;
        v13 = 2;
        goto LABEL_9;
      case 3u:
        v19 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
        v20 = *(int *)(sub_10002A750(&qword_10064AC10) + 48);
        v21 = &a1[v20];
        v22 = &a2[v20];
        v23 = *((_OWORD *)v22 + 1);
        *(_OWORD *)v21 = *(_OWORD *)v22;
        *((_OWORD *)v21 + 1) = v23;
        v11 = a1;
        v12 = a3;
        v13 = 3;
        goto LABEL_9;
      case 4u:
        v24 = type metadata accessor for Date(0);
        v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
        v25(a1, a2, v24);
        v26 = (int *)sub_10002A750(&qword_10064AC08);
        v25(&a1[v26[12]], &a2[v26[12]], v24);
        v27 = v26[16];
        v28 = &a1[v27];
        v29 = &a2[v27];
        v30 = *((_OWORD *)v29 + 1);
        *(_OWORD *)v28 = *(_OWORD *)v29;
        *((_OWORD *)v28 + 1) = v30;
        v31 = v26[20];
        v32 = &a1[v31];
        v33 = &a2[v31];
        v34 = *((_OWORD *)v33 + 1);
        *(_OWORD *)v32 = *(_OWORD *)v33;
        *((_OWORD *)v32 + 1) = v34;
        v11 = a1;
        v12 = a3;
        v13 = 4;
        goto LABEL_9;
      case 5u:
        v35 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(a1, a2, v35);
        v36 = *(int *)(sub_10002A750(&qword_10064AC00) + 48);
        v37 = &a1[v36];
        v38 = &a2[v36];
        v39 = *((_OWORD *)v38 + 1);
        *(_OWORD *)v37 = *(_OWORD *)v38;
        *((_OWORD *)v37 + 1) = v39;
        v11 = a1;
        v12 = a3;
        v13 = 5;
LABEL_9:
        swift_storeEnumTagMultiPayload(v11, v12, v13);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1003DF820(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v6[32];
  _QWORD v7[4];
  _BYTE v8[32];
  _BYTE v9[32];
  _BYTE v10[32];
  _BYTE v11[32];
  _QWORD v12[6];

  v12[0] = &unk_100532CA8;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2(v11, v4, " ");
    v12[1] = v11;
    swift_getTupleTypeLayout2(v10, v4, " ");
    v12[2] = v10;
    swift_getTupleTypeLayout2(v9, v4, " ");
    v12[3] = v9;
    v7[0] = v4;
    v7[1] = v4;
    v7[2] = " ";
    v7[3] = " ";
    swift_getTupleTypeLayout(v8, 0, 4, v7);
    v12[4] = v8;
    result = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(319);
    if (v5 <= 0x3F)
    {
      swift_getTupleTypeLayout2(v6, *(_QWORD *)(result - 8) + 64, " ");
      v12[5] = v6;
      swift_initEnumMetadataMultiPayload(a1, 256, 6, v12);
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.DateOptions.Bare(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.DateOptions.Bare(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1003DFA1C + 4 * byte_1005324CD[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1003DFA50 + 4 * byte_1005324C8[v4]))();
}

uint64_t sub_1003DFA50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003DFA58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003DFA60);
  return result;
}

uint64_t sub_1003DFA6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003DFA74);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1003DFA78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003DFA80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions.Bare()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.DateOptions.Bare;
}

uint64_t storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.TimeOptions(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1003DFAE8 + 4 * byte_1005324D7[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1003DFB1C + 4 * byte_1005324D2[v4]))();
}

uint64_t sub_1003DFB1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003DFB24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003DFB2CLL);
  return result;
}

uint64_t sub_1003DFB38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003DFB40);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1003DFB44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003DFB4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.TimeOptions()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.TimeOptions;
}

uint64_t storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.PriorityOptions(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1003DFBB4 + 4 * byte_1005324E1[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1003DFBE8 + 4 * byte_1005324DC[v4]))();
}

uint64_t sub_1003DFBE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003DFBF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003DFBF8);
  return result;
}

uint64_t sub_1003DFC04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003DFC0CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1003DFC10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003DFC18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.PriorityOptions()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.PriorityOptions;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.FlaggedOptions()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.FlaggedOptions;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.LocationOptions()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.LocationOptions;
}

void destroy for TTRSmartListFilterEditorViewModel.LocationState(uint64_t a1)
{
  sub_1001CD3F8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for TTRSmartListFilterEditorViewModel.LocationState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1001CD3C8(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for TTRSmartListFilterEditorViewModel.LocationState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1001CD3C8(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(void **)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1001CD3F8(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for TTRSmartListFilterEditorViewModel.LocationState(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(void **)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1001CD3F8(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.LocationState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 127);
  v3 = (*(_BYTE *)(a1 + 32) & 0x7E | (*(unsigned __int8 *)(a1 + 32) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.LocationState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 127;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
    {
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_BYTE *)(result + 32) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_1003DFE34(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32) >> 7;
}

uint64_t sub_1003DFE40(uint64_t result)
{
  *(_BYTE *)(result + 32) &= ~0x80u;
  return result;
}

uint64_t sub_1003DFE50(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = *(_BYTE *)(result + 32) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.LocationState()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.LocationState;
}

double destroy for TTRSmartListFilterEditorViewModel.LocationData(uint64_t a1)
{
  double result;

  sub_1001CD3F8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for TTRSmartListFilterEditorViewModel.LocationData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_1001CD3C8(*(_QWORD *)a2, v5, v6, v7, v8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  v9 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain(v9);
  return a1;
}

uint64_t assignWithCopy for TTRSmartListFilterEditorViewModel.LocationData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_1001CD3C8(*(_QWORD *)a2, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(void **)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v13 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v8;
  sub_1001CD3F8(v9, v10, v11, v12, v13);
  v14 = *(_QWORD *)(a2 + 40);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for TTRSmartListFilterEditorViewModel.LocationData(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  uint64_t v11;

  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(void **)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  v10 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v4;
  sub_1001CD3F8(v5, v6, v7, v8, v10);
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.LocationData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.LocationData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.LocationData()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.LocationData;
}

uint64_t _s9Reminders33TTRSmartListFilterEditorViewModelV15LocationOptionsOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1003E0118 + 4 * byte_1005324EB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1003E014C + 4 * byte_1005324E6[v4]))();
}

uint64_t sub_1003E014C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003E0154(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003E015CLL);
  return result;
}

uint64_t sub_1003E0168(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003E0170);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1003E0174(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003E017C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.ListsOptions()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.ListsOptions;
}

void destroy for TTRSmartListFilterEditorViewModel.ListData(uint64_t a1)
{
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  sub_10002B328(*(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  v2 = *(_QWORD *)(a1 + 80);
  if (v2 != 1)
  {
    swift_bridgeObjectRelease(v2);
    sub_10002B328(*(void **)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_BYTE *)(a1 + 136));
    sub_10002B318(*(void **)(a1 + 144), *(id *)(a1 + 152), *(_BYTE *)(a1 + 160));
  }
}

uint64_t initializeWithCopy for TTRSmartListFilterEditorViewModel.ListData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  void *v23;
  char v24;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain(v4);
  sub_10002B764(v5, v6, v7, v8, v9, v10, v11);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v11;
  v12 = *(_QWORD *)(a2 + 80);
  if (v12 == 1)
  {
    v13 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v13;
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 145) = *(_OWORD *)(a2 + 145);
    v14 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v14;
  }
  else
  {
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v12;
    v15 = *(void **)(a2 + 88);
    v16 = *(_QWORD *)(a2 + 96);
    v17 = *(_QWORD *)(a2 + 104);
    v18 = *(_QWORD *)(a2 + 112);
    v19 = *(_QWORD *)(a2 + 120);
    v20 = *(_QWORD *)(a2 + 128);
    v21 = *(_BYTE *)(a2 + 136);
    swift_bridgeObjectRetain(v12);
    sub_10002B764(v15, v16, v17, v18, v19, v20, v21);
    *(_QWORD *)(a1 + 88) = v15;
    *(_QWORD *)(a1 + 96) = v16;
    *(_QWORD *)(a1 + 104) = v17;
    *(_QWORD *)(a1 + 112) = v18;
    *(_QWORD *)(a1 + 120) = v19;
    *(_QWORD *)(a1 + 128) = v20;
    *(_BYTE *)(a1 + 136) = v21;
    v22 = *(void **)(a2 + 144);
    v23 = *(void **)(a2 + 152);
    v24 = *(_BYTE *)(a2 + 160);
    sub_10002B7A0(v22, v23, v24);
    *(_QWORD *)(a1 + 144) = v22;
    *(_QWORD *)(a1 + 152) = v23;
    *(_BYTE *)(a1 + 160) = v24;
  }
  return a1;
}

uint64_t assignWithCopy for TTRSmartListFilterEditorViewModel.ListData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  void *v40;
  void *v41;
  char v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  void *v58;
  void *v59;
  char v60;
  void *v61;
  void *v62;
  char v63;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v12 = *(_BYTE *)(a2 + 64);
  sub_10002B764(v6, v7, v8, v9, v10, v11, v12);
  v13 = *(void **)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 48);
  v18 = *(_QWORD *)(a1 + 56);
  v19 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  sub_10002B328(v13, v14, v15, v16, v17, v18, v19);
  v20 = (_OWORD *)(a1 + 72);
  v21 = (_OWORD *)(a2 + 72);
  v22 = *(_QWORD *)(a1 + 80);
  v23 = *(_QWORD *)(a2 + 80);
  if (v22 == 1)
  {
    if (v23 == 1)
    {
      v24 = *(_OWORD *)(a2 + 88);
      *v20 = *v21;
      *(_OWORD *)(a1 + 88) = v24;
      v25 = *(_OWORD *)(a2 + 104);
      v26 = *(_OWORD *)(a2 + 120);
      v27 = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 145) = *(_OWORD *)(a2 + 145);
      *(_OWORD *)(a1 + 120) = v26;
      *(_OWORD *)(a1 + 136) = v27;
      *(_OWORD *)(a1 + 104) = v25;
    }
    else
    {
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      v32 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 80) = v32;
      v33 = *(void **)(a2 + 88);
      v34 = *(_QWORD *)(a2 + 96);
      v35 = *(_QWORD *)(a2 + 104);
      v36 = *(_QWORD *)(a2 + 112);
      v37 = *(_QWORD *)(a2 + 120);
      v38 = *(_QWORD *)(a2 + 128);
      v39 = *(_BYTE *)(a2 + 136);
      swift_bridgeObjectRetain(v32);
      sub_10002B764(v33, v34, v35, v36, v37, v38, v39);
      *(_QWORD *)(a1 + 88) = v33;
      *(_QWORD *)(a1 + 96) = v34;
      *(_QWORD *)(a1 + 104) = v35;
      *(_QWORD *)(a1 + 112) = v36;
      *(_QWORD *)(a1 + 120) = v37;
      *(_QWORD *)(a1 + 128) = v38;
      *(_BYTE *)(a1 + 136) = v39;
      v40 = *(void **)(a2 + 144);
      v41 = *(void **)(a2 + 152);
      v42 = *(_BYTE *)(a2 + 160);
      sub_10002B7A0(v40, v41, v42);
      *(_QWORD *)(a1 + 144) = v40;
      *(_QWORD *)(a1 + 152) = v41;
      *(_BYTE *)(a1 + 160) = v42;
    }
  }
  else if (v23 == 1)
  {
    sub_1003E0580(a1 + 72);
    v28 = *(_OWORD *)(a2 + 88);
    *v20 = *v21;
    *(_OWORD *)(a1 + 88) = v28;
    v30 = *(_OWORD *)(a2 + 120);
    v29 = *(_OWORD *)(a2 + 136);
    v31 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 145) = *(_OWORD *)(a2 + 145);
    *(_OWORD *)(a1 + 120) = v30;
    *(_OWORD *)(a1 + 136) = v29;
    *(_OWORD *)(a1 + 104) = v31;
  }
  else
  {
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    v43 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 80) = v43;
    swift_bridgeObjectRetain(v43);
    swift_bridgeObjectRelease(v22);
    v44 = *(void **)(a2 + 88);
    v45 = *(_QWORD *)(a2 + 96);
    v46 = *(_QWORD *)(a2 + 104);
    v47 = *(_QWORD *)(a2 + 112);
    v48 = *(_QWORD *)(a2 + 120);
    v49 = *(_QWORD *)(a2 + 128);
    v50 = *(_BYTE *)(a2 + 136);
    sub_10002B764(v44, v45, v46, v47, v48, v49, v50);
    v51 = *(void **)(a1 + 88);
    v52 = *(_QWORD *)(a1 + 96);
    v53 = *(_QWORD *)(a1 + 104);
    v54 = *(_QWORD *)(a1 + 112);
    v55 = *(_QWORD *)(a1 + 120);
    v56 = *(_QWORD *)(a1 + 128);
    v57 = *(_BYTE *)(a1 + 136);
    *(_QWORD *)(a1 + 88) = v44;
    *(_QWORD *)(a1 + 96) = v45;
    *(_QWORD *)(a1 + 104) = v46;
    *(_QWORD *)(a1 + 112) = v47;
    *(_QWORD *)(a1 + 120) = v48;
    *(_QWORD *)(a1 + 128) = v49;
    *(_BYTE *)(a1 + 136) = v50;
    sub_10002B328(v51, v52, v53, v54, v55, v56, v57);
    v58 = *(void **)(a2 + 144);
    v59 = *(void **)(a2 + 152);
    v60 = *(_BYTE *)(a2 + 160);
    sub_10002B7A0(v58, v59, v60);
    v61 = *(void **)(a1 + 144);
    v62 = *(void **)(a1 + 152);
    v63 = *(_BYTE *)(a1 + 160);
    *(_QWORD *)(a1 + 144) = v58;
    *(_QWORD *)(a1 + 152) = v59;
    *(_BYTE *)(a1 + 160) = v60;
    sub_10002B318(v61, v62, v63);
  }
  return a1;
}

uint64_t sub_1003E0580(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for TTRReminderDetailViewModel.BadgeViewModel - 1) + 8))();
  return a1;
}

__n128 initializeWithTake for TTRSmartListFilterEditorViewModel.ListData(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_BYTE *)(a1 + 160) = *((_BYTE *)a2 + 160);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for TTRSmartListFilterEditorViewModel.ListData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  char v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  void *v28;
  void *v29;
  char v30;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_BYTE *)(a2 + 64);
  v7 = *(void **)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_BYTE *)(a1 + 64);
  v14 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v14;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = v6;
  sub_10002B328(v7, v8, v9, v10, v11, v12, v13);
  v15 = *(_QWORD *)(a1 + 80);
  if (v15 != 1)
  {
    v16 = *(_QWORD *)(a2 + 80);
    if (v16 != 1)
    {
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = v16;
      swift_bridgeObjectRelease(v15);
      v19 = *(_BYTE *)(a2 + 136);
      v20 = *(void **)(a1 + 88);
      v21 = *(_QWORD *)(a1 + 96);
      v22 = *(_QWORD *)(a1 + 104);
      v23 = *(_QWORD *)(a1 + 112);
      v24 = *(_QWORD *)(a1 + 120);
      v25 = *(_QWORD *)(a1 + 128);
      v26 = *(_BYTE *)(a1 + 136);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_BYTE *)(a1 + 136) = v19;
      sub_10002B328(v20, v21, v22, v23, v24, v25, v26);
      v27 = *(_BYTE *)(a2 + 160);
      v28 = *(void **)(a1 + 144);
      v29 = *(void **)(a1 + 152);
      v30 = *(_BYTE *)(a1 + 160);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_BYTE *)(a1 + 160) = v27;
      sub_10002B318(v28, v29, v30);
      return a1;
    }
    sub_1003E0580(a1 + 72);
  }
  v17 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = v17;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 145) = *(_OWORD *)(a2 + 145);
  v18 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v18;
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.ListData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 161))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.ListData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 160) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 161) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 161) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.ListData()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.ListData;
}

void destroy for TTRSmartListFilterEditorViewModel.ListsData(uint64_t a1)
{
  sub_1003DD148(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(void **)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_OWORD *)(a1 + 144),
    *(void **)(a1 + 152),
    *(void **)(a1 + 160),
    *(_WORD *)(a1 + 168),
    HIBYTE(*(_WORD *)(a1 + 168)));
}

uint64_t initializeWithCopy for TTRSmartListFilterEditorViewModel.ListsData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  char v25;
  unsigned __int8 v26;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(void **)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 112);
  v19 = *(_QWORD *)(a2 + 120);
  v20 = *(_QWORD *)(a2 + 128);
  v21 = *(_QWORD *)(a2 + 136);
  v22 = *(_QWORD *)(a2 + 144);
  v23 = *(void **)(a2 + 152);
  v24 = *(void **)(a2 + 160);
  v25 = *(_BYTE *)(a2 + 168);
  v26 = *(_BYTE *)(a2 + 169);
  v7 = *(_QWORD *)(a2 + 64);
  v8 = *(id *)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(void **)(a2 + 24);
  sub_1003DCE5C(*(id *)a2, v9, v10, v11, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26);
  *(_QWORD *)a1 = v8;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 120) = v19;
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = v21;
  *(_QWORD *)(a1 + 144) = v22;
  *(_QWORD *)(a1 + 152) = v23;
  *(_QWORD *)(a1 + 160) = v24;
  *(_BYTE *)(a1 + 168) = v25;
  *(_BYTE *)(a1 + 169) = v26;
  return a1;
}

uint64_t assignWithCopy for TTRSmartListFilterEditorViewModel.ListsData(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  void *v26;
  __int16 v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  char v41;
  unsigned __int8 v42;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v29 = *(_QWORD *)(a2 + 72);
  v30 = *(_QWORD *)(a2 + 80);
  v31 = *(_QWORD *)(a2 + 88);
  v32 = *(void **)(a2 + 96);
  v33 = *(_QWORD *)(a2 + 104);
  v34 = *(_QWORD *)(a2 + 112);
  v35 = *(_QWORD *)(a2 + 120);
  v36 = *(_QWORD *)(a2 + 128);
  v37 = *(_QWORD *)(a2 + 136);
  v38 = *(_QWORD *)(a2 + 144);
  v39 = *(void **)(a2 + 152);
  v40 = *(void **)(a2 + 160);
  v41 = *(_BYTE *)(a2 + 168);
  v42 = *(_BYTE *)(a2 + 169);
  sub_1003DCE5C(*(id *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38,
    v39,
    v40,
    v41,
    v42);
  v12 = *(void **)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v29;
  *(_QWORD *)(a1 + 80) = v30;
  *(_QWORD *)(a1 + 88) = v31;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v32;
  *(_QWORD *)(a1 + 104) = v33;
  *(_QWORD *)(a1 + 112) = v34;
  *(_QWORD *)(a1 + 120) = v35;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v36;
  *(_QWORD *)(a1 + 136) = v37;
  *(_QWORD *)(a1 + 144) = v38;
  *(_QWORD *)(a1 + 152) = v39;
  v26 = *(void **)(a1 + 160);
  *(_QWORD *)(a1 + 160) = v40;
  v27 = *(_WORD *)(a1 + 168);
  *(_BYTE *)(a1 + 168) = v41;
  *(_BYTE *)(a1 + 169) = v42;
  sub_1003DD148(v12, v13, v14, v15, v16, v17, v18, v19, v20, SBYTE8(v20), v21, *((uint64_t *)&v21 + 1), (void *)v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((void **)&v25 + 1),
    v26,
    v27,
    HIBYTE(v27));
  return a1;
}

__n128 initializeWithTake for TTRSmartListFilterEditorViewModel.ListsData(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_OWORD *)(a1 + 154) = *(__int128 *)((char *)a2 + 154);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for TTRSmartListFilterEditorViewModel.ListsData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int16 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  void *v19;
  __int16 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  v3 = *(_QWORD *)(a2 + 160);
  v4 = *(_WORD *)(a2 + 168);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(void **)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_OWORD *)(a1 + 64);
  v14 = *(_OWORD *)(a1 + 80);
  v15 = *(_OWORD *)(a1 + 96);
  v16 = *(_OWORD *)(a1 + 112);
  v17 = *(_OWORD *)(a1 + 128);
  v18 = *(_OWORD *)(a1 + 144);
  v19 = *(void **)(a1 + 160);
  v20 = *(_WORD *)(a1 + 168);
  v21 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v21;
  v22 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v22;
  v23 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v23;
  v24 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v24;
  v25 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v25;
  *(_QWORD *)(a1 + 160) = v3;
  *(_WORD *)(a1 + 168) = v4;
  sub_1003DD148(v5, v7, v6, v8, v9, v10, v11, v12, v13, SBYTE8(v13), v14, *((uint64_t *)&v14 + 1), (void *)v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18,
    *((void **)&v18 + 1),
    v19,
    v20,
    HIBYTE(v20));
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.ListsData(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 170))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 169);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.ListsData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 168) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 170) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 170) = 0;
    if (a2)
      *(_BYTE *)(result + 169) = -(char)a2;
  }
  return result;
}

uint64_t sub_1003E0CA0(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    LOBYTE(a2) = 2;
    *(_BYTE *)(result + 168) = 0;
  }
  *(_BYTE *)(result + 169) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.ListsData()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.ListsData;
}

uint64_t getEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.HelpTopic(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.HelpTopic(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1003E0D88 + 4 * byte_1005324F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1003E0DA8 + 4 * byte_1005324F5[v4]))();
}

_BYTE *sub_1003E0D88(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1003E0DA8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1003E0DB0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1003E0DB8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1003E0DC0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1003E0DC8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.HelpTopic()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.HelpTopic;
}

uint64_t getEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.PresenterState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.PresenterState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.PresenterState()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.PresenterState;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.PresenterState.DateVisible()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.PresenterState.DateVisible;
}

unint64_t sub_1003E0EA0()
{
  unint64_t result;

  result = qword_1006592C0;
  if (!qword_1006592C0)
  {
    result = swift_getWitnessTable(&unk_100532E60, &type metadata for TTRSmartListFilterEditorViewModel.PresenterState.DateVisible);
    atomic_store(result, (unint64_t *)&qword_1006592C0);
  }
  return result;
}

unint64_t sub_1003E0EE8()
{
  unint64_t result;

  result = qword_1006592C8;
  if (!qword_1006592C8)
  {
    result = swift_getWitnessTable(&unk_100532E30, &type metadata for TTRSmartListFilterEditorViewModel.PresenterState.DateVisible);
    atomic_store(result, (unint64_t *)&qword_1006592C8);
  }
  return result;
}

unint64_t sub_1003E0F30()
{
  unint64_t result;

  result = qword_1006592D0;
  if (!qword_1006592D0)
  {
    result = swift_getWitnessTable(&unk_100532E88, &type metadata for TTRSmartListFilterEditorViewModel.PresenterState.DateVisible);
    atomic_store(result, (unint64_t *)&qword_1006592D0);
  }
  return result;
}

unint64_t sub_1003E0F78()
{
  unint64_t result;

  result = qword_1006592D8;
  if (!qword_1006592D8)
  {
    result = swift_getWitnessTable(&unk_100532EC0, &type metadata for TTRSmartListFilterEditorViewModel.PresenterState.DateVisible);
    atomic_store(result, (unint64_t *)&qword_1006592D8);
  }
  return result;
}

uint64_t sub_1003E0FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100659488);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100659488);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_1003E1058(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  id v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  void *Strong;
  void *v12;
  id v13;
  void *v14;
  id v15;
  os_log_type_t v16;
  uint8_t *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  NSObject *oslog;
  _BYTE v22[24];

  if (qword_10063D720 != -1)
    swift_once(&qword_10063D720, sub_1003E0FC8);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100012DC4(v2, (uint64_t)qword_100659488);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Attempting to show debug menu", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = objc_msgSend((id)objc_opt_self(REMUserDefaults), "daemonUserDefaults");
  v8 = objc_msgSend(v7, "enableInAppDebugMenu");

  if (v8)
  {
    v10 = a1 + 16;
    swift_beginAccess(v10, v22, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v10);
    if (Strong)
    {
      v12 = Strong;
      v13 = objc_msgSend(Strong, "rootViewController");
      if (v13)
      {
        v14 = v13;
        v15 = sub_100134BE0();
        objc_msgSend(v14, "presentViewController:animated:completion:", v15, 1, 0);

        return;
      }

    }
    v18 = Logger.logObject.getter(Strong);
    v19 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Not showing debug menu because rootViewController is not found", v20, 2u);
      swift_slowDealloc(v20, -1, -1);
    }

  }
  else
  {
    oslog = Logger.logObject.getter(v9);
    v16 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(oslog, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v16, "Debug menu is disabled. You can enable in Internal Settings.", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

  }
}

uint64_t type metadata accessor for TTRIDebugMenuManager()
{
  return objc_opt_self(_TtC9Reminders20TTRIDebugMenuManager);
}

uint64_t sub_1003E1300()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003E1324()
{
  uint64_t v0;

  sub_1003E1058(v0);
}

uint64_t type metadata accessor for TTRIRemindersListEditableSectionNameRouter()
{
  return objc_opt_self(_TtC9Reminders42TTRIRemindersListEditableSectionNameRouter);
}

char *sub_1003E134C(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  objc_class *ObjectType;
  id v12;
  char *v13;
  id v14;
  uint64_t v15;
  id v16;
  NSString v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  id v36;
  char *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  Class isa;
  void *v53;
  void *v54;
  objc_super v56;

  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders50TTRIRemindersBoardColumnReorderingDebugOverlayView_activeReorderingContext] = 0;
  v12 = objc_allocWithZone((Class)UILabel);
  v13 = v6;
  v14 = objc_msgSend(v12, "init");
  v15 = OBJC_IVAR____TtC9Reminders50TTRIRemindersBoardColumnReorderingDebugOverlayView_infoLabel;
  *(_QWORD *)&v13[OBJC_IVAR____TtC9Reminders50TTRIRemindersBoardColumnReorderingDebugOverlayView_infoLabel] = v14;
  objc_msgSend(v14, "setNumberOfLines:", 0);
  v16 = v14;
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithName:size:", v17, 12.0);

  objc_msgSend(v16, "setFont:", v18);
  v19 = *(void **)&v13[v15];
  v20 = (void *)objc_opt_self(UIColor);
  v21 = v19;
  v22 = objc_msgSend(v20, "whiteColor");
  objc_msgSend(v21, "setTextColor:", v22);

  v23 = *(id *)&v13[v15];
  v24 = objc_msgSend(v20, "blackColor");
  objc_msgSend(v23, "setBackgroundColor:", v24);

  v25 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 6.0, 6.0);
  v26 = OBJC_IVAR____TtC9Reminders50TTRIRemindersBoardColumnReorderingDebugOverlayView_pointView;
  *(_QWORD *)&v13[OBJC_IVAR____TtC9Reminders50TTRIRemindersBoardColumnReorderingDebugOverlayView_pointView] = v25;
  objc_msgSend(v25, "setClipsToBounds:", 1);
  v27 = objc_msgSend(v25, "layer");
  objc_msgSend(v27, "setCornerRadius:", 3.0);

  v28 = objc_msgSend(*(id *)&v13[v26], "layer");
  objc_msgSend(v28, "setCornerCurve:", kCACornerCurveCircular);

  v29 = *(id *)&v13[v26];
  v30 = objc_msgSend(v20, "ttr_systemRedColor");
  objc_msgSend(v29, "setBackgroundColor:", v30);

  v31 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v32 = OBJC_IVAR____TtC9Reminders50TTRIRemindersBoardColumnReorderingDebugOverlayView_borderView;
  *(_QWORD *)&v13[OBJC_IVAR____TtC9Reminders50TTRIRemindersBoardColumnReorderingDebugOverlayView_borderView] = v31;
  v33 = objc_msgSend(v31, "layer");
  v34 = objc_msgSend(v20, "greenColor");
  v35 = objc_msgSend(v34, "CGColor");

  objc_msgSend(v33, "setBorderColor:", v35);
  v36 = objc_msgSend(*(id *)&v13[v32], "layer");
  objc_msgSend(v36, "setBorderWidth:", 1.0);

  v56.receiver = v13;
  v56.super_class = ObjectType;
  v37 = (char *)objc_msgSendSuper2(&v56, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v37, "setUserInteractionEnabled:", 0);
  v38 = OBJC_IVAR____TtC9Reminders50TTRIRemindersBoardColumnReorderingDebugOverlayView_infoLabel;
  v39 = *(void **)&v37[OBJC_IVAR____TtC9Reminders50TTRIRemindersBoardColumnReorderingDebugOverlayView_infoLabel];
  objc_msgSend(v39, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v37, "addSubview:", v39);
  v40 = (void *)objc_opt_self(NSLayoutConstraint);
  v41 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v42 = swift_allocObject(v41, 48, 7);
  *(_OWORD *)(v42 + 16) = xmmword_10051FF90;
  v43 = objc_msgSend(v37, "safeAreaLayoutGuide");
  v44 = objc_msgSend(v43, "leadingAnchor");

  v45 = objc_msgSend(*(id *)&v37[v38], "leadingAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:", v45);

  *(_QWORD *)(v42 + 32) = v46;
  v47 = objc_msgSend(v37, "safeAreaLayoutGuide");
  v48 = objc_msgSend(v47, "bottomAnchor");

  v49 = objc_msgSend(*(id *)&v37[v38], "bottomAnchor");
  v50 = objc_msgSend(v48, "constraintEqualToAnchor:constant:", v49, 70.0);

  *(_QWORD *)(v42 + 40) = v50;
  specialized Array._endMutation()(v51);
  sub_1000D5620();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v40, "activateConstraints:", isa, swift_bridgeObjectRelease(v42).n128_f64[0]);

  v53 = *(void **)&v37[OBJC_IVAR____TtC9Reminders50TTRIRemindersBoardColumnReorderingDebugOverlayView_pointView];
  objc_msgSend(v53, "setTranslatesAutoresizingMaskIntoConstraints:", 1);
  objc_msgSend(v37, "addSubview:", v53);
  v54 = *(void **)&v37[OBJC_IVAR____TtC9Reminders50TTRIRemindersBoardColumnReorderingDebugOverlayView_borderView];
  objc_msgSend(v54, "setTranslatesAutoresizingMaskIntoConstraints:", 1);
  objc_msgSend(v37, "addSubview:", v54);

  return v37;
}

uint64_t type metadata accessor for TTRIRemindersBoardColumnReorderingDebugOverlayView()
{
  return objc_opt_self(_TtC9Reminders50TTRIRemindersBoardColumnReorderingDebugOverlayView);
}

uint64_t type metadata accessor for TTRIEditTodaySectionsHostingController(uint64_t a1)
{
  return sub_100007328(a1, (uint64_t *)&unk_100659628, (uint64_t)&nominal type descriptor for TTRIEditTodaySectionsHostingController);
}

uint64_t sub_1003E1A28(uint64_t a1)
{
  void *v2;

  v2 = &unk_1005330D8;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + qword_1006738B8);
}

uint64_t sub_1003E1A70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t OpaqueTypeConformance2;
  uint64_t v40;
  uint64_t v41;
  __int128 v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53[16];
  uint64_t v54;
  __int128 v55;
  unint64_t v56;
  unint64_t v57;

  v52 = a1;
  v2 = type metadata accessor for EditMode(0);
  v47 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750(&qword_100659678);
  __chkstk_darwin(v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_100659680);
  __chkstk_darwin(v8);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_10002A750(&qword_100659688);
  v46 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_10002A750(&qword_100659690);
  __chkstk_darwin(v44);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750(&qword_100659698);
  v16 = *(_QWORD *)(v15 - 8);
  v50 = v15;
  v51 = v16;
  __chkstk_darwin(v15);
  v45 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (__int128 *)v1;
  v49 = v1;
  v19 = *(_QWORD *)(v1 + 16);
  v43 = *v18;
  v55 = v43;
  v56 = v19;
  v20 = enum case for Font.Design.rounded(_:);
  v21 = type metadata accessor for Font.Design(0);
  v22 = *(_QWORD *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 104))(v10, v20, v21);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v10, 0, 1, v21);
  v23 = sub_1003E2DB4();
  swift_unknownObjectRetain(v43);
  swift_retain();
  View.fontDesign(_:)(v10, &type metadata for SectionsList, v23);
  sub_1000073A0((uint64_t)v10, &qword_100659680);
  swift_unknownObjectRelease(v55);
  swift_release();
  KeyPath = swift_getKeyPath(&unk_100533180);
  v25 = v47;
  (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v4, enum case for EditMode.active(_:), v2);
  static Binding.constant(_:)(v4, v2);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v2);
  v26 = sub_10002A750(&qword_1006596A8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v7, 0, 1, v26);
  v27 = v44;
  v28 = (uint64_t *)&v14[*(int *)(v44 + 36)];
  v29 = sub_10002A750(&qword_1006596B0);
  sub_1003E2E1C((uint64_t)v7, (uint64_t)v28 + *(int *)(v29 + 28));
  *v28 = KeyPath;
  v30 = v46;
  v31 = v48;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v14, v12, v48);
  sub_1000073A0((uint64_t)v7, &qword_100659678);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v31);
  v32 = static TTRLocalizableStrings.Sections.editSectionsTitle(listLayout:)(0);
  v34 = v33;
  *(_QWORD *)&v55 = v32;
  *((_QWORD *)&v55 + 1) = v33;
  v35 = sub_1003E2E64();
  v36 = sub_10001D7FC();
  v37 = v45;
  View.navigationTitle<A>(_:)(&v55, v27, &type metadata for String, v35, v36);
  swift_bridgeObjectRelease(v34);
  sub_1000073A0((uint64_t)v14, &qword_100659690);
  v54 = v49;
  v38 = sub_10002A750(&qword_1006596D0);
  *(_QWORD *)&v55 = v27;
  *((_QWORD *)&v55 + 1) = &type metadata for String;
  v56 = v35;
  v57 = v36;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v55, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
  v40 = sub_100023FEC(&qword_1006596D8, &qword_1006596D0, (uint64_t)&protocol conformance descriptor for TupleToolbarContent<A>);
  v41 = v50;
  View.toolbar<A>(content:)(sub_1003E2F08, v53, v50, v38, OpaqueTypeConformance2, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v37, v41);
}

uint64_t sub_1003E1EB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_10002A750(&qword_100659678);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003E2E1C(a1, (uint64_t)v4);
  return EnvironmentValues.editMode.setter(v4);
}

uint64_t sub_1003E1F28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t OpaqueTypeConformance2;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37[16];
  uint64_t v38;
  char v39[16];
  uint64_t v40;
  _QWORD v41[10];

  v31 = a1;
  v36 = a2;
  v35 = sub_10002A750(&qword_1006596E0);
  __chkstk_darwin(v35);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750(&qword_1006596E8);
  v33 = *(_QWORD *)(v5 - 8);
  v34 = v5;
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ToolbarItemPlacement(0, v6);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_10002A750(&qword_1006596F0);
  v12 = *(_QWORD *)(v32 - 8);
  v13 = __chkstk_darwin(v32);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.cancellationAction.getter(v13);
  v40 = a1;
  v16 = sub_10002A750(&qword_1006596F8);
  v17 = sub_10002CA5C(&qword_100659700);
  v18 = sub_10002CA5C(&qword_100659708);
  v19 = sub_100023FEC(&qword_100659710, &qword_100659700, (uint64_t)&protocol conformance descriptor for Button<A>);
  v20 = sub_10001D7FC();
  v21 = sub_1003E2F18();
  v41[0] = v17;
  v41[1] = &type metadata for String;
  v41[2] = v17;
  v41[3] = v18;
  v41[4] = &type metadata for TTRDiscardChangesDialog;
  v41[5] = v19;
  v41[6] = v20;
  v41[7] = v19;
  v41[8] = v21;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v41, &opaque type descriptor for <<opaque return type of View.confirmationDialog<A, B, C, D>(_:isPresented:titleVisibility:presenting:actions:message:)>>, 1);
  v23 = ToolbarItem<>.init(placement:content:)(v11, sub_1003E2F10, v39, v16, OpaqueTypeConformance2);
  static ToolbarItemPlacement.confirmationAction.getter(v23);
  v38 = v31;
  ToolbarItem<>.init(placement:content:)(v11, sub_1003E2F7C, v37, v17, v19);
  v24 = v35;
  v25 = &v4[*(int *)(v35 + 48)];
  v26 = v32;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v4, v15, v32);
  v27 = v33;
  v28 = v25;
  v29 = v34;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v28, v8, v34);
  TupleToolbarContent.init(_:)(v4, v24);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v29);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v26);
}

uint64_t sub_1003E21CC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];
  __int128 v17;

  v2 = sub_10002A750(&qword_100659700);
  v3 = *(_QWORD *)(v2 - 8);
  v4.n128_f64[0] = __chkstk_darwin(v2);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = static TTRLocalizableStrings.Common.alertCancelButton.getter(v4);
  v16[1] = v7;
  v8 = *a1;
  v9 = a1[2];
  v17 = *(_OWORD *)(a1 + 3);
  v10 = swift_allocObject(&unk_100605230, 56, 7);
  v11 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v10 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 48) = a1[4];
  swift_unknownObjectRetain(v8);
  swift_retain();
  sub_1003E2F88((uint64_t)&v17);
  v12 = sub_10001D7FC();
  Button<>.init<A>(_:action:)(v16, sub_1003E2FB4, v10, &type metadata for String, v12);
  v13 = *(_QWORD *)(v9 + 32);
  v14 = sub_100023FEC(&qword_100659710, &qword_100659700, (uint64_t)&protocol conformance descriptor for Button<A>);
  View.confirmationDialog<A>(for:)(v13, v2, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_1003E2318(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  unint64_t v6;
  _QWORD v8[2];
  __int128 v9;

  v8[0] = static TTRLocalizableStrings.Common.doneButton.getter();
  v8[1] = v2;
  v3 = *a1;
  v9 = *(_OWORD *)(a1 + 3);
  v4 = swift_allocObject(&unk_100605208, 56, 7);
  v5 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 48) = a1[4];
  swift_unknownObjectRetain(v3);
  swift_retain();
  sub_1003E2F88((uint64_t)&v9);
  v6 = sub_10001D7FC();
  return Button<>.init<A>(_:action:)(v8, sub_1000D2780, v4, &type metadata for String, v6);
}

uint64_t sub_1003E23D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1003E1A70(a1);
}

uint64_t sub_1003E2410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[6];

  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v3 = sub_10002A750(&qword_100659740);
  v4 = sub_1003E3268();
  return Section<>.init(content:)(sub_1003E337C, v6, v3, v4);
}

uint64_t sub_1003E246C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t (*v25)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a1;
  v29 = a2;
  v6 = sub_10002A750(&qword_100659750);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = TTREditTodaySectionsModelObject.viewModel.getter(v8);
  v13 = TTREditTodaySectionsViewModel.cellViewModels.getter(v11, v12 & 1);
  swift_bridgeObjectRelease(v11);
  v30 = v13;
  v14 = sub_10002A750(&qword_100659778);
  v15 = type metadata accessor for REMSmartListSection.PredefinedSectionType.Today(0);
  v16 = type metadata accessor for ListCell(0);
  v17 = sub_100023FEC(&qword_100659780, &qword_100659778, (uint64_t)&protocol conformance descriptor for [A]);
  v18 = sub_1000175C8(&qword_100659758, type metadata accessor for ListCell, (uint64_t)"\r!\r");
  v19 = sub_1000175C8(&qword_100659788, (uint64_t (*)(uint64_t))&type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel, (uint64_t)&protocol conformance descriptor for TTREditTodaySectionsViewModel.CellViewModel);
  ForEach<>.init(_:content:)(&v30, sub_1003E266C, 0, v14, v15, v16, v17, v18, v19);
  v20 = (_QWORD *)swift_allocObject(&unk_1006052D8, 40, 7);
  v22 = v28;
  v21 = v29;
  v20[2] = v28;
  v20[3] = v21;
  v20[4] = a3;
  v23 = swift_allocObject(&unk_100605300, 32, 7);
  *(_QWORD *)(v23 + 16) = sub_1003E33B4;
  *(_QWORD *)(v23 + 24) = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(a4, v10, v6);
  v24 = (_QWORD *)(a4 + *(int *)(sub_10002A750(&qword_100659740) + 36));
  *v24 = sub_1003E3430;
  v24[1] = v23;
  v25 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  swift_unknownObjectRetain(v22);
  swift_retain();
  return v25(v10, v6);
}

uint64_t sub_1003E266C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003E3454(a1, a2);
}

uint64_t sub_1003E2674()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_1003E268C()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];
  __int128 v16;
  uint64_t v17;

  v1 = type metadata accessor for InsetGroupedListStyle(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_10002A750(&qword_100659720);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *((_QWORD *)v0 + 2);
  v16 = *v0;
  v17 = v9;
  v10 = sub_10002A750(&qword_100659728);
  v11 = sub_1003E31F8();
  v12 = List<>.init(content:)(sub_1003E31EC, v15, v10, v11);
  InsetGroupedListStyle.init()(v12);
  v13 = sub_100023FEC(&qword_100659770, &qword_100659720, (uint64_t)&protocol conformance descriptor for List<A, B>);
  View.listStyle<A>(_:)(v4, v5, v1, v13, &protocol witness table for InsetGroupedListStyle);
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_1003E27EC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  __n128 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  double result;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v4 = type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel(0);
  v5 = (uint64_t *)(a1 + *(int *)(v4 + 20));
  v6 = v5[1];
  v50 = *v5;
  v51 = v6;
  v7 = sub_10001D7FC();
  v8 = swift_bridgeObjectRetain(v6);
  v10 = Text.init<A>(_:)(&v50, &type metadata for String, v7, v8);
  v12 = v11;
  v14 = v13;
  v15 = (uint64_t *)(a1 + *(int *)(v4 + 24));
  v16 = v15[1];
  if (v16)
  {
    v50 = *v15;
    v51 = v16;
    v46 = v9;
    v17 = swift_bridgeObjectRetain(v16);
    v18 = Text.init<A>(_:)(&v50, &type metadata for String, v7, v17);
    v20 = v19;
    v22 = v21;
    v24 = v23 & 1;
    static Color.secondary.getter();
    v47 = v12;
    v48 = v10;
    v25 = Text.foregroundColor(_:)();
    v27 = v26;
    v49 = v14;
    v29 = v28;
    v31 = v30;
    swift_release();
    sub_1003E39D8(v18, v20, v24);
    v32 = swift_bridgeObjectRelease(v22);
    static Font.subheadline.getter(v32);
    v33 = Text.font(_:)();
    v35 = v34;
    v37 = v36;
    v39 = v38;
    swift_release();
    v40 = v37 & 1;
    v41 = v25;
    v12 = v47;
    v42 = v29 & 1;
    v14 = v49;
    sub_1003E39D8(v41, v27, v42);
    v43 = v31;
    v10 = v48;
    swift_bridgeObjectRelease(v43);
    v9 = v46;
  }
  else
  {
    v33 = 0;
    v35 = 0;
    v40 = 0;
    v39 = 0;
  }
  v44 = v9 & 1;
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v9 & 1;
  *(_QWORD *)(a2 + 24) = v14;
  *(_QWORD *)(a2 + 32) = v33;
  *(_QWORD *)(a2 + 40) = v35;
  *(_QWORD *)(a2 + 48) = v40;
  *(_QWORD *)(a2 + 56) = v39;
  sub_1003E3968(v10, v12, v9 & 1);
  swift_bridgeObjectRetain(v14);
  sub_1003E3978(v33, v35, v40, v39);
  sub_1003E39A8(v33, v35, v40, v39);
  sub_1003E39D8(v10, v12, v44);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v14).n128_u64[0];
  return result;
}

__n128 sub_1003E2A00@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  __n128 result;
  __int128 v7;
  __int128 v8;
  __n128 v9;
  char v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;

  v3 = static HorizontalAlignment.leading.getter();
  sub_1003E27EC(v1, (uint64_t)&v9);
  v4 = v10;
  v5 = v11;
  result = v9;
  v7 = v12;
  v8 = v13;
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(_BYTE *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 56) = v7;
  *(_OWORD *)(a1 + 72) = v8;
  return result;
}

void sub_1003E2A70()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010055F310, "Reminders/TTRIEditTodaySectionsView.swift", 41, 2, 113, 0);
  __break(1u);
}

uint64_t sub_1003E2AC8()
{
  uint64_t v0;

  return swift_unknownObjectRelease(*(_QWORD *)(v0 + qword_100659620));
}

uint64_t sub_1003E2AD8(uint64_t a1)
{
  return swift_unknownObjectRelease(*(_QWORD *)(a1 + qword_100659620));
}

void sub_1003E2AE8()
{
  _swift_stdlib_reportUnimplementedInitializer("Reminders.TTRIEditTodaySectionsHostingController", 48, "init(rootView:undoManager:)", 27, 0);
  __break(1u);
}

uint64_t sub_1003E2B14()
{
  return type metadata accessor for TTRIEditTodaySectionsHostingController(0);
}

BOOL sub_1003E2B1C(char *a1, uint64_t a2, void *a3)
{
  void *v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t);
  id v8;
  id v9;

  v4 = a1;
  v5 = *(_QWORD *)&a1[qword_100659620 + 8];
  ObjectType = swift_getObjectType(*(_QWORD *)&a1[qword_100659620], a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
  v8 = a3;
  v9 = v4;
  LOBYTE(v4) = v7(ObjectType, v5);

  return (v4 & 1) == 0;
}

void sub_1003E2BA8(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t);
  id v8;
  char *v9;

  v5 = *(_QWORD *)&a1[qword_100659620 + 8];
  ObjectType = swift_getObjectType(*(_QWORD *)&a1[qword_100659620], a2);
  v7 = *(void (**)(uint64_t, uint64_t))(v5 + 24);
  v8 = a3;
  v9 = a1;
  v7(ObjectType, v5);

}

uint64_t destroy for TTRIEditTodaySectionsView(_QWORD *a1)
{
  swift_unknownObjectRelease(*a1);
  swift_release(a1[2]);
  return swift_release(a1[4]);
}

uint64_t initializeWithCopy for TTRIEditTodaySectionsView(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  *(_OWORD *)a1 = *a2;
  v4 = *((_QWORD *)a2 + 2);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  v5 = *((_QWORD *)a2 + 4);
  *(_QWORD *)(a1 + 32) = v5;
  swift_unknownObjectRetain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t *assignWithCopy for TTRIEditTodaySectionsView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a2;
  v5 = a2[1];
  v6 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v4);
  swift_unknownObjectRelease(v6);
  a1[1] = v5;
  v7 = a2[2];
  v8 = a1[2];
  a1[2] = v7;
  swift_retain(v7);
  swift_release(v8);
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  v9 = a1[4];
  v10 = a2[4];
  a1[4] = v10;
  swift_retain(v10);
  swift_release(v9);
  return a1;
}

uint64_t assignWithTake for TTRIEditTodaySectionsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_unknownObjectRelease(*(_QWORD *)a1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v4);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for TTRIEditTodaySectionsView()
{
  return &type metadata for TTRIEditTodaySectionsView;
}

uint64_t sub_1003E2DA4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10059B688, 1);
}

unint64_t sub_1003E2DB4()
{
  unint64_t result;

  result = qword_1006596A0;
  if (!qword_1006596A0)
  {
    result = swift_getWitnessTable("i!\r", &type metadata for SectionsList);
    atomic_store(result, (unint64_t *)&qword_1006596A0);
  }
  return result;
}

uint64_t sub_1003E2DF8()
{
  return EnvironmentValues.editMode.getter();
}

uint64_t sub_1003E2E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100659678);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1003E2E64()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1006596B8;
  if (!qword_1006596B8)
  {
    v1 = sub_10002CA5C(&qword_100659690);
    v2[0] = &type metadata for SectionsList;
    v2[1] = sub_1003E2DB4();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontDesign(_:)>>, 1);
    sub_100023FEC((unint64_t *)&unk_1006596C0, &qword_1006596B0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1006596B8);
  }
  return result;
}

uint64_t sub_1003E2F08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003E1F28(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1003E2F10()
{
  uint64_t v0;

  return sub_1003E21CC(*(uint64_t **)(v0 + 16));
}

unint64_t sub_1003E2F18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100659718;
  if (!qword_100659718)
  {
    v1 = sub_10002CA5C(&qword_100659708);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100659718);
  }
  return result;
}

uint64_t sub_1003E2F7C()
{
  uint64_t v0;

  return sub_1003E2318(*(uint64_t **)(v0 + 16));
}

uint64_t sub_1003E2F88(uint64_t a1)
{
  swift_retain(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_1003E2FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 16), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(ObjectType, v3);
}

uint64_t destroy for SectionsList(_QWORD *a1)
{
  swift_unknownObjectRelease(*a1);
  return swift_release(a1[2]);
}

uint64_t _s9Reminders12SectionsListVwCP_0(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *a2;
  *(_OWORD *)a1 = *a2;
  v4 = *((_QWORD *)a2 + 2);
  *(_QWORD *)(a1 + 16) = v4;
  swift_unknownObjectRetain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *assignWithCopy for SectionsList(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v5 = a2[1];
  v6 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v4);
  swift_unknownObjectRelease(v6);
  a1[1] = v5;
  v7 = a2[2];
  v8 = a1[2];
  a1[2] = v7;
  swift_retain(v7);
  swift_release(v8);
  return a1;
}

_QWORD *assignWithTake for SectionsList(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  swift_unknownObjectRelease(*a1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = a1[2];
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_release(v4);
  return a1;
}

ValueMetadata *type metadata accessor for SectionsList()
{
  return &type metadata for SectionsList;
}

uint64_t sub_1003E3110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  unint64_t v8;

  v0 = sub_10002CA5C(&qword_100659698);
  v1 = sub_10002CA5C(&qword_1006596D0);
  v5 = sub_10002CA5C(&qword_100659690);
  v6 = &type metadata for String;
  v7 = sub_1003E2E64();
  v8 = sub_10001D7FC();
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
  v3 = sub_100023FEC(&qword_1006596D8, &qword_1006596D0, (uint64_t)&protocol conformance descriptor for TupleToolbarContent<A>);
  v5 = v0;
  v6 = (void *)v1;
  v7 = OpaqueTypeConformance2;
  v8 = v3;
  return swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
}

uint64_t sub_1003E31DC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10059B6E0, 1);
}

uint64_t sub_1003E31EC()
{
  uint64_t *v0;

  return sub_1003E2410(v0[2], v0[3], v0[4]);
}

unint64_t sub_1003E31F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100659730;
  if (!qword_100659730)
  {
    v1 = sub_10002CA5C(&qword_100659728);
    sub_1003E3268();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_100659730);
  }
  return result;
}

unint64_t sub_1003E3268()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100659738;
  if (!qword_100659738)
  {
    v1 = sub_10002CA5C(&qword_100659740);
    sub_1003E32EC();
    sub_100023FEC(&qword_100659760, &qword_100659768, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100659738);
  }
  return result;
}

unint64_t sub_1003E32EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100659748;
  if (!qword_100659748)
  {
    v1 = sub_10002CA5C(&qword_100659750);
    sub_1000175C8(&qword_100659758, type metadata accessor for ListCell, (uint64_t)"\r!\r");
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_100659748);
  }
  return result;
}

uint64_t type metadata accessor for ListCell(uint64_t a1)
{
  return sub_100007328(a1, qword_1006597E8, (uint64_t)&nominal type descriptor for ListCell);
}

uint64_t sub_1003E337C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1003E246C(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1003E3388()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003E33B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t ObjectType;

  v5 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 16), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, ObjectType, v5);
}

uint64_t sub_1003E340C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003E3430(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 16))(a1, *a2);
}

uint64_t sub_1003E3454(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1003E3498(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v6 = v4;
    v7 = type metadata accessor for REMSmartListSection.PredefinedSectionType.Today(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(v6 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = *(int *)(v6 + 24);
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v15);
  }
  return a1;
}

uint64_t sub_1003E3550(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for REMSmartListSection.PredefinedSectionType.Today(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel(0);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v3 + 20) + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v3 + 24) + 8));
}

uint64_t sub_1003E35B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v4 = type metadata accessor for REMSmartListSection.PredefinedSectionType.Today(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel(0);
  v6 = *(int *)(v5 + 20);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (uint64_t *)(a2 + v6);
  v10 = *v8;
  v9 = v8[1];
  *v7 = v10;
  v7[1] = v9;
  v11 = *(int *)(v5 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v14);
  return a1;
}

uint64_t sub_1003E3634(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = type metadata accessor for REMSmartListSection.PredefinedSectionType.Today(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel(0);
  v6 = *(int *)(v5 + 20);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  *v7 = *v8;
  v9 = v8[1];
  v10 = v7[1];
  v7[1] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  v11 = *(int *)(v5 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v14 = v13[1];
  v15 = v12[1];
  v12[1] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  return a1;
}

uint64_t sub_1003E36E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for REMSmartListSection.PredefinedSectionType.Today(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel(0);
  *(_OWORD *)(a1 + *(int *)(v5 + 20)) = *(_OWORD *)(a2 + *(int *)(v5 + 20));
  *(_OWORD *)(a1 + *(int *)(v5 + 24)) = *(_OWORD *)(a2 + *(int *)(v5 + 24));
  return a1;
}

uint64_t sub_1003E3748(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for REMSmartListSection.PredefinedSectionType.Today(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel(0);
  v6 = *(int *)(v5 + 20);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (uint64_t *)(a2 + v6);
  v10 = *v8;
  v9 = v8[1];
  v11 = v7[1];
  *v7 = v10;
  v7[1] = v9;
  swift_bridgeObjectRelease(v11);
  v12 = *(int *)(v5 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  v17 = v13[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease(v17);
  return a1;
}

uint64_t sub_1003E37D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003E37E4);
}

uint64_t sub_1003E37E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1003E3820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003E382C);
}

uint64_t sub_1003E382C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1003E386C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1003E38D4()
{
  _QWORD v1[4];

  v1[0] = sub_10002CA5C(&qword_100659720);
  v1[1] = type metadata accessor for InsetGroupedListStyle(255);
  v1[2] = sub_100023FEC(&qword_100659770, &qword_100659720, (uint64_t)&protocol conformance descriptor for List<A, B>);
  v1[3] = &protocol witness table for InsetGroupedListStyle;
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
}

uint64_t sub_1003E3958(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10059B708, 1);
}

uint64_t sub_1003E3968(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain(a1);
  else
    return swift_bridgeObjectRetain(a2);
}

double sub_1003E3978(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  if (a4)
  {
    sub_1003E3968(a1, a2, a3 & 1);
    *(_QWORD *)&result = swift_bridgeObjectRetain(a4).n128_u64[0];
  }
  return result;
}

double sub_1003E39A8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  if (a4)
  {
    sub_1003E39D8(a1, a2, a3 & 1);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a4).n128_u64[0];
  }
  return result;
}

uint64_t sub_1003E39D8(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release(a1);
  else
    return swift_bridgeObjectRelease(a2);
}

uint64_t sub_1003E39E8()
{
  return sub_100023FEC(&qword_100659820, &qword_100659828, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

uint64_t sub_1003E3A18@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  _QWORD *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;

  v68 = a1;
  v2 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v2);
  v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750((uint64_t *)&unk_100640EB0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v52 - v9;
  v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  result = __chkstk_darwin(v13);
  v18 = (char *)&v52 - v17;
  v20 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor);
  v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 8);
  v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 16);
  v21 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 24);
  v24 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 32);
  v23 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 40);
  v25 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 48);
  v26 = *(_BYTE *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 56);
  if ((~*(_DWORD *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 40) & 0xFELL) != 0)
  {
    v55 = v16;
    v56 = v8;
    v57 = v15;
    v59 = v1;
    v60 = v18;
    v58 = v4;
    v69 = v20;
    v70 = v19;
    v71 = v22;
    v72 = v21;
    v73 = v24;
    v74 = v23;
    v62 = v25;
    v75 = v25;
    v61 = v26 & 1;
    v76 = v26 & 1;
    v27 = v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_singleTargetItem;
    v28 = v19;
    v29 = v23;
    sub_10000735C(v27, (uint64_t)v10, (uint64_t *)&unk_100640EB0);
    v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
    v66 = v28;
    v67 = v20;
    v64 = v21;
    v65 = v22;
    v63 = v24;
    if (v30 == 1)
    {
      sub_1000A2644(v20, v28, v22, v21, v24, v29);
      result = sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100640EB0);
    }
    else
    {
      v31 = (uint64_t)v10;
      v32 = (uint64_t)v60;
      sub_10001F580(v31, (uint64_t)v60, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v54 = v29;
      sub_1000A2644(v20, v28, v22, v21, v24, v29);
      v33 = sub_1003E3DE8();
      if (v33)
      {
        v35 = (void *)v33;
        v36 = v59;
        v37 = v32;
        v38 = v32;
        v39 = (uint64_t)v56;
        v53 = v34;
        sub_1000493D8(v37, (uint64_t)v56);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v39, 0, 1, v11);
        CurrentValueSubject.send(_:)(v39);
        sub_1000073A0(v39, (uint64_t *)&unk_100640EB0);
        v40 = type metadata accessor for TaskPriority(0);
        v41 = (uint64_t)v58;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v58, 1, 1, v40);
        v42 = v57;
        sub_1000493D8(v38, v57);
        v43 = *(unsigned __int8 *)(v12 + 80);
        v44 = (v43 + 40) & ~v43;
        v45 = (v55 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
        v46 = (_QWORD *)swift_allocObject(&unk_100605388, v45 + 16, v43 | 7);
        v46[2] = 0;
        v46[3] = 0;
        v46[4] = v36;
        sub_10001F580(v42, (uint64_t)v46 + v44, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v47 = (_QWORD *)((char *)v46 + v45);
        v48 = v53;
        *v47 = v35;
        v47[1] = v48;
        swift_retain();
        v49 = v35;
        sub_100148368(v41, (uint64_t)&unk_100659910, (uint64_t)v46);

        swift_release();
        v50 = v38;
      }
      else
      {
        v50 = v32;
      }
      result = sub_10001F544(v50, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      LOBYTE(v29) = v54;
    }
    v23 = v29;
    v19 = v66;
    v20 = v67;
    v21 = v64;
    v22 = v65;
    v25 = v62;
    v24 = v63;
    v26 = v61;
  }
  v51 = v68;
  *v68 = v20;
  v51[1] = v19;
  v51[2] = v22;
  v51[3] = v21;
  v51[4] = v24;
  v51[5] = v23;
  v51[6] = v25;
  *((_BYTE *)v51 + 56) = v26;
  return result;
}

uint64_t sub_1003E3DE8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t *v4;
  _QWORD *v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v9;
  _BYTE v10[24];
  uint64_t v11;
  _QWORD v12[4];
  _BYTE v13[48];
  _QWORD v14[5];
  unsigned __int8 v15;

  sub_1003E523C(v0, (uint64_t)v13);
  sub_1003E523C((uint64_t)v13, (uint64_t)v14);
  v2 = v15 >> 6;
  if (!v2)
  {
    v15 &= 0x3Fu;
    v3 = v14[0];
    v4 = (unint64_t *)&qword_1006406F0;
    v5 = UIView_ptr;
    goto LABEL_5;
  }
  if (v2 == 1)
  {
    v15 &= 0x3Fu;
    v3 = v14[0];
    v4 = &qword_100640E70;
    v5 = UIBarButtonItem_ptr;
LABEL_5:
    ObjectType = sub_100005ED8(0, v4, v5);
    goto LABEL_7;
  }
  v15 &= 0x3Fu;
  v3 = v14[0];
  ObjectType = swift_getObjectType(v14[0], v1);
LABEL_7:
  v12[3] = ObjectType;
  v12[0] = v3;
  sub_10023D25C((uint64_t)v12, (uint64_t)v10);
  if (v11)
  {
    sub_100341604((uint64_t)v13);
    v7 = sub_10002A750(&qword_100659948);
    if (swift_dynamicCast(&v9, v10, &type metadata for Any[8], v7, 6))
      return v9;
    else
      return 0;
  }
  else
  {
    sub_100341604((uint64_t)v13);
    sub_1000073A0((uint64_t)v10, &qword_100640E50);
    return 0;
  }
}

uint64_t sub_1003E3F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc(dword_10065991C);
  *(_QWORD *)(v6 + 16) = v9;
  *v9 = v6;
  v9[1] = sub_10006083C;
  return sub_1003E3F7C(a5, a6);
}

uint64_t sub_1003E3F7C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;

  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  v3[12] = *v2;
  v4 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v3[13] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[14] = v5;
  v3[15] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750((uint64_t *)&unk_100651D90);
  v3[16] = v6;
  v3[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v3[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[19] = v8;
  v3[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_10002A750((uint64_t *)&unk_100640EB0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[21] = swift_task_alloc(v9);
  v3[22] = swift_task_alloc(v9);
  v10 = (*(_QWORD *)(*(_QWORD *)(sub_10002A750((uint64_t *)&unk_1006463C0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[23] = swift_task_alloc(v10);
  v3[24] = swift_task_alloc(v10);
  v3[25] = swift_task_alloc(v10);
  v11 = sub_10002A750(&qword_100659920);
  v3[26] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v3[27] = v12;
  v3[28] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750(&qword_100659928);
  v3[29] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v3[30] = v14;
  v3[31] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MainActor(0);
  v3[32] = v15;
  v3[33] = static MainActor.shared.getter(v15);
  v17 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor, v16);
  v3[34] = v17;
  v3[35] = v18;
  return swift_task_switch(sub_1003E413C, v17, v18);
}

uint64_t sub_1003E413C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 224);
  v15 = *(_QWORD *)(v0 + 216);
  v14 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = sub_10002A750(&qword_100659930);
  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  v4 = PassthroughSubject.init()();
  *(_QWORD *)(v0 + 288) = v4;
  v5 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v6 = UIPresentationControllerDismissalTransitionDidEndNotification;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  v7 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
  v8 = swift_allocObject(&unk_1006053B0, 32, 7);
  *(_QWORD *)(v8 + 16) = v4;
  *(_QWORD *)(v8 + 24) = v2;
  swift_retain();
  *(_QWORD *)(v0 + 296) = NSNotificationCenter.ttr_addObserver(forName:object:queue:using:)(v6, v0 + 16, v7, sub_1003E4FC0, v8);
  swift_release();

  sub_1000073A0(v0 + 16, &qword_100640E50);
  *(_QWORD *)(v0 + 48) = v4;
  v9 = sub_100023FEC(&qword_100659938, &qword_100659930, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  Publisher<>.rem_bufferedValues.getter(v3, v9);
  AsyncPublisher.makeAsyncIterator()(v14);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v1, v14);
  *(_QWORD *)(v0 + 304) = OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_cellInfoButtonVisibilityAssertion;
  *(_QWORD *)(v0 + 312) = static MainActor.shared.getter(v10);
  v11 = sub_100023FEC(&qword_100659940, &qword_100659928, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
  v12 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  *(_QWORD *)(v0 + 320) = v12;
  *v12 = v0;
  v12[1] = sub_1003E4358;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 56, *(_QWORD *)(v0 + 232), v11);
}

uint64_t sub_1003E4358()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t (*v14)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 320);
  *(_QWORD *)(*v1 + 328) = v0;
  swift_task_dealloc(v3);
  v5 = *(_QWORD *)(v2 + 312);
  if (v0)
  {
    if (v5)
    {
      ObjectType = swift_getObjectType(v5, v4);
      v8 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor, v7);
      v10 = v9;
    }
    else
    {
      v8 = 0;
      v10 = 0;
    }
    v14 = sub_1003E4914;
  }
  else
  {
    if (v5)
    {
      v11 = swift_getObjectType(v5, v4);
      v8 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor, v12);
      v10 = v13;
    }
    else
    {
      v8 = 0;
      v10 = 0;
    }
    v14 = sub_1003E441C;
  }
  return swift_task_switch(v14, v8, v10);
}

uint64_t sub_1003E441C()
{
  _QWORD *v0;

  swift_release();
  v0[42] = v0[7];
  return swift_task_switch(sub_1003E445C, v0[34], v0[35]);
}

uint64_t sub_1003E445C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;

  v1 = *(_QWORD *)(v0 + 336);
  if (!v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
LABEL_17:
    swift_release();
    swift_release();
    goto LABEL_18;
  }
  v2 = static Task<>.isCancelled.getter();
  if ((v2 & 1) != 0)
  {
LABEL_16:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
    swift_unknownObjectRelease(v1);
    goto LABEL_17;
  }
  v3 = *(_QWORD **)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 152);
  CurrentValueSubject.value.getter(v3, v2);
  v6 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  v7 = *(_QWORD *)(v0 + 200);
  v8 = *(_QWORD *)(v0 + 176);
  if (v6)
  {
    v10 = *(_QWORD *)(v0 + 104);
    v9 = *(_QWORD *)(v0 + 112);
    sub_1000073A0(*(_QWORD *)(v0 + 176), (uint64_t *)&unk_100640EB0);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = v11(v7, 1, 1, v10);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 160);
    v14 = *(_QWORD *)(v0 + 104);
    v15 = *(_QWORD *)(v0 + 112);
    sub_1000493D8(*(_QWORD *)(v0 + 176), v13);
    v16 = sub_1000073A0(v8, (uint64_t *)&unk_100640EB0);
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v16);
    sub_10001F544(v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
    v12 = v11(v7, 0, 1, v14);
  }
  v18 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 200);
  v20 = *(_QWORD *)(v0 + 128);
  v19 = *(_QWORD *)(v0 + 136);
  v22 = *(_QWORD *)(v0 + 104);
  v21 = *(_QWORD *)(v0 + 112);
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v12);
  v11(v18, 0, 1, v22);
  v23 = v19 + *(int *)(v20 + 48);
  sub_10000735C(v17, v19, (uint64_t *)&unk_1006463C0);
  sub_10000735C(v18, v23, (uint64_t *)&unk_1006463C0);
  v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v24(v19, 1, v22) != 1)
  {
    v27 = *(_QWORD *)(v0 + 104);
    sub_10000735C(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 184), (uint64_t *)&unk_1006463C0);
    v28 = v24(v23, 1, v27);
    v30 = *(_QWORD *)(v0 + 192);
    v29 = *(_QWORD *)(v0 + 200);
    v31 = *(_QWORD *)(v0 + 184);
    if (v28 != 1)
    {
      v32 = *(_QWORD *)(v0 + 136);
      v33 = *(_QWORD *)(v0 + 120);
      sub_10001F580(v23, v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v34 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v31, v33);
      sub_10001F544(v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_1000073A0(v30, (uint64_t *)&unk_1006463C0);
      sub_1000073A0(v29, (uint64_t *)&unk_1006463C0);
      sub_10001F544(v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_1000073A0(v32, (uint64_t *)&unk_1006463C0);
      if ((v34 & 1) != 0)
        goto LABEL_14;
      goto LABEL_16;
    }
    sub_1000073A0(*(_QWORD *)(v0 + 192), (uint64_t *)&unk_1006463C0);
    sub_1000073A0(v29, (uint64_t *)&unk_1006463C0);
    sub_10001F544(v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    goto LABEL_12;
  }
  v25 = *(_QWORD *)(v0 + 200);
  v26 = *(_QWORD *)(v0 + 104);
  sub_1000073A0(*(_QWORD *)(v0 + 192), (uint64_t *)&unk_1006463C0);
  sub_1000073A0(v25, (uint64_t *)&unk_1006463C0);
  if (v24(v23, 1, v26) != 1)
  {
LABEL_12:
    sub_1000073A0(*(_QWORD *)(v0 + 136), (uint64_t *)&unk_100651D90);
    goto LABEL_16;
  }
  sub_1000073A0(*(_QWORD *)(v0 + 136), (uint64_t *)&unk_1006463C0);
LABEL_14:
  if (*(_QWORD *)(v0 + 80) != v1)
  {
    v35 = swift_unknownObjectRelease(v1);
    *(_QWORD *)(v0 + 312) = static MainActor.shared.getter(v35);
    v36 = sub_100023FEC(&qword_100659940, &qword_100659928, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
    v37 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(_QWORD *)(v0 + 320) = v37;
    *v37 = v0;
    v37[1] = sub_1003E4358;
    return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 56, *(_QWORD *)(v0 + 232), v36);
  }
  v48 = *(_QWORD *)(v0 + 240);
  v49 = *(_QWORD *)(v0 + 248);
  v50 = *(_QWORD *)(v0 + 232);
  v51 = *(_QWORD *)(v0 + 168);
  v52 = *(_QWORD *)(v0 + 144);
  v53 = *(_QWORD *)(v0 + 152);
  v54 = swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v53 + 56))(v51, 1, 1, v52, v54);
  CurrentValueSubject.send(_:)(v51);
  swift_unknownObjectRelease(v1);
  swift_release();
  sub_1000073A0(v51, (uint64_t *)&unk_100640EB0);
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v50);
LABEL_18:
  v39 = *(_QWORD *)(v0 + 248);
  v40 = *(_QWORD *)(v0 + 224);
  v42 = *(_QWORD *)(v0 + 192);
  v41 = *(_QWORD *)(v0 + 200);
  v44 = *(_QWORD *)(v0 + 176);
  v43 = *(_QWORD *)(v0 + 184);
  v46 = *(_QWORD *)(v0 + 160);
  v45 = *(_QWORD *)(v0 + 168);
  v47 = *(_QWORD *)(v0 + 136);
  v55 = *(_QWORD *)(v0 + 120);
  swift_release();
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v55);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003E4914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v0 + 328);
  v1 = sub_10002A750((uint64_t *)&unk_100649C60);
  v2 = swift_dynamicCast(v1, v0 + 64, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_1003E4974()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = (uint64_t)sub_1003E4FC8();
  if ((result & 1) != 0)
  {
    result = (uint64_t)sub_1003E5114();
    if (result)
    {
      v1 = result;
      v2 = result;
      PassthroughSubject.send(_:)(&v2);
      return swift_unknownObjectRelease(v1);
    }
  }
  return result;
}

uint64_t sub_1003E49C8()
{
  uint64_t v0;

  sub_1000073A0(v0 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_singleTargetItem, (uint64_t *)&unk_100640EB0);
  sub_1000866B0(*(id *)(v0 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor), *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 8), *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 16), *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 24), *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 32), *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 40));
  swift_release();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1003E4A34()
{
  return type metadata accessor for TTRIRemindersListDetailPopoverAnchorProvider(0);
}

uint64_t type metadata accessor for TTRIRemindersListDetailPopoverAnchorProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_100659870;
  if (!qword_100659870)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIRemindersListDetailPopoverAnchorProvider);
  return result;
}

void sub_1003E4A78(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_1000B5C9C(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "9";
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

uint64_t sub_1003E4AFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;
  unint64_t v24;
  unint64_t v25;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();
  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        break;
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        break;
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:
  v24 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = v24 + 16;

  return swift_deallocObject(v0, v25, v3 | 7);
}

uint64_t sub_1003E4EE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = *(_QWORD *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  v6 = (_QWORD *)swift_task_alloc(dword_10065990C);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10004A08C;
  v7 = (_QWORD *)swift_task_alloc(dword_10065991C);
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_10006083C;
  return sub_1003E3F7C(v4, v5);
}

uint64_t sub_1003E4F9C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003E4FC0()
{
  return sub_1003E4974();
}

id sub_1003E4FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  id v6;
  id v7;
  id v9[5];
  id v10;
  __int128 v11;
  __int128 v12;

  v0 = Notification.userInfo.getter();
  if (v0)
  {
    v1 = v0;
    *(_QWORD *)&v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIPresentationControllerDismissalTransitionDidEndCompletedKey);
    *((_QWORD *)&v11 + 1) = v2;
    AnyHashable.init<A>(_:)(v9, &v11, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v1 + 16) && (v3 = sub_1002AA7E4((uint64_t)v9), (v4 & 1) != 0))
    {
      sub_100028CFC(*(_QWORD *)(v1 + 56) + 32 * v3, (uint64_t)&v11);
    }
    else
    {
      v11 = 0u;
      v12 = 0u;
    }
    swift_bridgeObjectRelease(v1);
    sub_100041DDC((uint64_t)v9);
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
  }
  sub_10000735C((uint64_t)&v11, (uint64_t)v9, &qword_100640E50);
  if (!v9[3])
  {
    sub_1000073A0((uint64_t)v9, &qword_100640E50);
    goto LABEL_12;
  }
  v5 = sub_100005ED8(0, (unint64_t *)&qword_100650740, NSNumber_ptr);
  if ((swift_dynamicCast(&v10, v9, &type metadata for Any[8], v5, 6) & 1) == 0)
  {
LABEL_12:
    v7 = 0;
    goto LABEL_13;
  }
  v6 = v10;
  v7 = objc_msgSend(v10, "BOOLValue");

LABEL_13:
  sub_1000073A0((uint64_t)&v11, &qword_100640E50);
  return v7;
}

id sub_1003E5114()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v7;
  id v8;
  _QWORD v9[4];

  Notification.object.getter(v9);
  if (!v9[3])
  {
    sub_1000073A0((uint64_t)v9, &qword_100640E50);
    return 0;
  }
  v0 = sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
  if ((swift_dynamicCast(&v8, v9, &type metadata for Any[8], v0, 6) & 1) == 0)
    return 0;
  v1 = v8;
  v2 = objc_msgSend(v8, "popoverPresentationController");
  if (!v2)
  {

    return 0;
  }
  v3 = v2;
  v4 = objc_msgSend(v2, "sourceItem");
  if (v4)
  {
    v5 = v4;

  }
  else
  {
    v7 = objc_msgSend(v3, "sourceView");
    if (!v7)
      v7 = objc_msgSend(v3, "barButtonItem");
    v5 = v7;

  }
  return v5;
}

uint64_t sub_1003E523C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for TTRIPopoverAnchor.Source - 1) + 32))(a2, a1);
  return a2;
}

uint64_t sub_1003E5278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100659950);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100659950);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1003E5308()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  unsigned __int8 v3;

  v1 = OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder____lazy_storage___hasSubtasks;
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder____lazy_storage___hasSubtasks);
  if (v2 == 2)
  {
    v3 = sub_1003E5350(v0);
    *(_BYTE *)(v0 + v1) = v3 & 1;
  }
  else
  {
    v3 = v2 & 1;
  }
  return v3 & 1;
}

id sub_1003E5350(uint64_t a1)
{
  id v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v16;
  _QWORD v17[3];
  char v18[16];
  id v19;

  v1 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder), "subtaskContext");
  if (!v1)
    return 0;
  v2 = v1;
  v19 = 0;
  v3 = objc_msgSend(v1, "hasSubtasksWithError:", &v19);
  if (v19)
  {
    v4 = v19;
    swift_willThrow(v4);
    if (qword_10063D728 != -1)
      swift_once(&qword_10063D728, sub_1003E5278);
    v5 = type metadata accessor for Logger(0);
    sub_100012DC4(v5, (uint64_t)qword_100659950);
    v6 = v4;
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.error.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v10 = (void *)swift_slowAlloc(32, -1);
      v19 = v10;
      *(_DWORD *)v9 = 136315138;
      swift_getErrorValue(v6, v18, v17);
      v11 = Error.rem_errorDescription.getter(v17[1], v17[2]);
      v13 = v12;
      v16 = sub_100027E40(v11, v12, (uint64_t *)&v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, v17, v9 + 4, v9 + 12);

      swift_bridgeObjectRelease(v13);
      swift_arrayDestroy(v10, 1, &type metadata for Any[8]);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  v14 = v3;

  return v14;
}

void sub_1003E559C(uint64_t a1)
{
  uint64_t *v1;
  Swift::String v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (uint64_t *)TTRAppBundleIdentifier.unsafeMutableAddressor(a1);
  v3 = *v1;
  v4 = v1[1];
  swift_bridgeObjectRetain(v4);
  v2._countAndFlagsBits = 0x65646E696D65722ELL;
  v2._object = (void *)0xE900000000000072;
  String.append(_:)(v2);
  qword_100659968 = v3;
  unk_100659970 = v4;
}

uint64_t type metadata accessor for TTRIRemindersListDragReminder()
{
  return objc_opt_self(_TtC9Reminders29TTRIRemindersListDragReminder);
}

void *sub_1003E5888()
{
  _QWORD *v0;
  void *v1;
  id v2;

  v1 = *(void **)(*v0 + OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder);
  v2 = v1;
  return v1;
}

uint64_t sub_1003E58B8()
{
  return sub_1003E5308() & 1;
}

uint64_t sub_1003E58DC()
{
  return REMReminder.parentReminderID.getter();
}

uint64_t sub_1003E5908(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  uint64_t i;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  char v13;
  _BYTE *v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v24;
  char v25;
  uint64_t v26;
  uint64_t v28;
  int v29;
  objc_super v30;
  _QWORD v31[2];
  _QWORD v32[5];
  char *v33;
  unint64_t v34;

  v34 = (unint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v5)
      goto LABEL_3;
LABEL_33:
    swift_bridgeObjectRelease(a1);
    v1 = (uint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
      goto LABEL_15;
LABEL_34:
    if (v1 < 0)
      v26 = v1;
    else
      v26 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v26);
    if (v2)
      goto LABEL_16;
LABEL_38:
    v2 = 1;
    goto LABEL_39;
  }
LABEL_29:
  if (a1 < 0)
    v2 = a1;
  else
    v2 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v2);
  if (!v5)
    goto LABEL_33;
LABEL_3:
  v6 = type metadata accessor for TTRIRemindersListDragReminder();
  if (v5 < 1)
    goto LABEL_41;
  v7 = (objc_class *)v6;
  for (i = 0; i != v5; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
    else
      v9 = *(id *)(a1 + 8 * i + 32);
    v10 = v9;
    v31[0] = 0xD000000000000029;
    v31[1] = 0x8000000100566E40;
    AnyHashable.init<A>(_:)(v32, v31, &type metadata for String, &protocol witness table for String);
    UIDragItem.localObject<A>(ofType:forKey:)(&v33, v7, v32, v7);
    sub_100041DDC((uint64_t)v32);
    v11 = v33;
    if (v33)
    {
      v12 = *(void **)&v33[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder];
      v13 = v33[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_isFromRecentlyDeletedList];
      v14 = objc_allocWithZone(v7);
      v14[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder____lazy_storage___hasSubtasks] = 2;
      *(_QWORD *)&v14[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder] = v12;
      v14[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_isFromRecentlyDeletedList] = v13;
      v30.receiver = v14;
      v30.super_class = v7;
      v15 = v12;
      v16 = objc_msgSendSuper2(&v30, "init");

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
      v19 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v18 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v19 >= v18 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
      v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v16);
      specialized Array._endMutation()(v20);
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease(a1);
  v1 = v34;
  if (v34 >> 62)
    goto LABEL_34;
LABEL_15:
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v1);
  if (!v2)
    goto LABEL_38;
LABEL_16:
  v3 = v1 & 0xC000000000000001;
  if ((v1 & 0xC000000000000001) != 0)
    goto LABEL_42;
  if ((*(_BYTE *)(*(_QWORD *)(v1 + 32)
                 + OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_isFromRecentlyDeletedList) & 1) != 0)
  {
    while (1)
    {
      if (v2 == 1)
        goto LABEL_39;
      v21 = 1;
      while (v3)
      {
        v22 = specialized _ArrayBuffer._getElementSlowPath(_:)(v21, v1);
        if (__OFADD__(v21++, 1))
        {
          __break(1u);
          goto LABEL_29;
        }
        v24 = *(unsigned __int8 *)(v22
                                 + OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_isFromRecentlyDeletedList);
        swift_unknownObjectRelease(v22);
        if (v24 != 1)
          goto LABEL_27;
LABEL_20:
        if (v21 == v2)
          goto LABEL_38;
      }
      if (!__OFADD__(v21, 1))
        break;
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      v28 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v1);
      v29 = *(unsigned __int8 *)(v28
                               + OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_isFromRecentlyDeletedList);
      swift_unknownObjectRelease(v28);
      if (v29 != 1)
        goto LABEL_27;
    }
    v25 = *(_BYTE *)(*(_QWORD *)(v1 + 32 + 8 * v21++)
                   + OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_isFromRecentlyDeletedList);
    if ((v25 & 1) == 0)
      goto LABEL_27;
    goto LABEL_20;
  }
LABEL_27:
  v2 = 0;
LABEL_39:
  swift_bridgeObjectRelease_n(v1, 2);
  return v2;
}

id sub_1003E5C4C(void *a1)
{
  objc_class *v2;
  void *v3;
  void *v4;
  char v5;
  _BYTE *v6;
  id v7;
  id v8;
  objc_super v10;
  _QWORD v11[2];
  _QWORD v12[5];
  char *v13;

  v2 = (objc_class *)type metadata accessor for TTRIRemindersListDragReminder();
  v11[0] = 0xD000000000000029;
  v11[1] = 0x8000000100566E40;
  AnyHashable.init<A>(_:)(v12, v11, &type metadata for String, &protocol witness table for String);
  UIDragItem.localObject<A>(ofType:forKey:)(&v13, v2, v12, v2);
  sub_100041DDC((uint64_t)v12);
  v3 = v13;
  if (v13)
  {
    v4 = *(void **)&v13[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder];
    v5 = v13[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_isFromRecentlyDeletedList];
    v6 = objc_allocWithZone(v2);
    v6[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder____lazy_storage___hasSubtasks] = 2;
    *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder] = v4;
    v6[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_isFromRecentlyDeletedList] = v5;
    v10.receiver = v6;
    v10.super_class = v2;
    v7 = v4;
    v8 = objc_msgSendSuper2(&v10, "init");

  }
  else
  {

    return 0;
  }
  return v8;
}

id sub_1003E5D64(uint64_t a1, void *a2, uint64_t a3, void (**a4)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  BOOL v15;
  void *v16;
  uint64_t v17;
  void *v18;
  Swift::String v19;
  unint64_t v20;
  NSString v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  NSString v33;
  void *v34;
  void *v35;
  Swift::String v36;
  unint64_t v37;
  NSString v38;
  void **aBlock;
  unint64_t v40;
  double (*v41)(uint64_t, void *, void *);
  void *v42;
  void (*v43)(uint64_t, unint64_t, uint64_t);
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  void *v47;

  v8 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v8);
  v10 = (char *)&aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  __chkstk_darwin(v11);
  v13 = (char *)&aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_allocObject(&unk_1006053F8, 24, 7);
  *(_QWORD *)(v14 + 16) = a4;
  _Block_copy(a4);
  if (qword_10063D730 != -1)
    swift_once(&qword_10063D730, sub_1003E559C);
  v15 = qword_100659968 == a1 && unk_100659970 == (_QWORD)a2;
  if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)(qword_100659968, unk_100659970, a1, a2, 0) & 1) != 0)
  {
    v16 = (void *)objc_opt_self(REMError);
    aBlock = 0;
    v40 = 0xE000000000000000;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease(v40);
    aBlock = (void **)0xD00000000000001ALL;
    v40 = 0x800000010056D250;
    v17 = qword_100659968;
    v18 = (void *)unk_100659970;
    swift_bridgeObjectRetain(unk_100659970);
    v19._countAndFlagsBits = v17;
    v19._object = v18;
    String.append(_:)(v19);
    swift_bridgeObjectRelease(v18);
    v20 = v40;
    v21 = String._bridgeToObjectiveC()();
    v22 = objc_msgSend(v16, "internalErrorWithDebugDescription:", v21, swift_bridgeObjectRelease(v20).n128_f64[0]);

  }
  else
  {
    sub_100005ED8(0, (unint64_t *)&qword_100649BD8, NSString_ptr);
    if ((static NSItemProviderWriting.canWriteTypeIdentifier(_:)(a1, a2) & 1) != 0)
    {
      v26 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v10, 1, 1, v26);
      v27 = *(void **)(a3 + OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder);
      *((_QWORD *)&v46 + 1) = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
      v47 = &protocol witness table for REMReminder;
      *(_QWORD *)&v45 = v27;
      TTRReminderProtocolWithPendingMove.init(reminder:pendingMoveTargetList:)(&aBlock, &v45, 0);
      v45 = 0u;
      v46 = 0u;
      v47 = 0;
      v28 = v27;
      v29 = TTRRemindersListViewModel.Reminder.init(item:reminderAndList:precomputedProperties:overrides:)(v10, &aBlock, &v45, _swiftEmptyArrayStorage);
      TTRRemindersListViewModel.Reminder.localizedDescription.getter(v29);
      v31 = v30;
      v32 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v31);
      v33 = String._bridgeToObjectiveC()();
      v43 = sub_10018049C;
      v44 = v14;
      aBlock = _NSConcreteStackBlock;
      v40 = 1107296256;
      v41 = sub_1004B02FC;
      v42 = &unk_100605410;
      v34 = _Block_copy(&aBlock);
      swift_retain();
      v24 = objc_msgSend(v32, "loadDataWithTypeIdentifier:forItemProviderCompletionHandler:", v33, v34, swift_release().n128_f64[0]);
      _Block_release(v34);

      sub_1003E61C0((uint64_t)v13);
      swift_release();
      return v24;
    }
    v35 = (void *)objc_opt_self(REMError);
    aBlock = 0;
    v40 = 0xE000000000000000;
    _StringGuts.grow(_:)(30);
    swift_bridgeObjectRelease(v40);
    aBlock = (void **)0xD00000000000001CLL;
    v40 = 0x8000000100577A40;
    v36._countAndFlagsBits = a1;
    v36._object = a2;
    String.append(_:)(v36);
    v37 = v40;
    v38 = String._bridgeToObjectiveC()();
    v22 = objc_msgSend(v35, "internalErrorWithDebugDescription:", v38, swift_bridgeObjectRelease(v37).n128_f64[0]);

  }
  v23 = (void *)_convertErrorToNSError(_:)(v22);
  ((void (**)(_QWORD, _QWORD, void *))a4)[2](a4, 0, v23);
  swift_release();

  return 0;
}

uint64_t sub_1003E619C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003E61C0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1003E61FC(void *a1, uint64_t a2)
{
  _BYTE *v2;
  objc_class *ObjectType;
  char *v5;
  double v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_preferredTintColor] = 0;
  v2[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_isExpanded] = 0;
  v5 = &v2[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_layoutDelegate];
  *((_QWORD *)v5 + 1) = 0;
  *(_QWORD *)&v6 = swift_unknownObjectWeakInit(v5, 0).n128_u64[0];
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_gridView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_countLabel] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_disclosureImageView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView____lazy_storage___chevronFont] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView____lazy_storage___chevronConfiguration] = 0;
  v12.receiver = v2;
  v12.super_class = ObjectType;
  v7 = objc_msgSendSuper2(&v12, "initWithCoder:", a1, v6);
  v8 = v7;
  if (v7)
  {
    v9 = v7;
    sub_100027974((uint64_t)v9, v10);

  }
  return v8;
}

id sub_1003E63A4(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_class *ObjectType;
  id v4;
  objc_super v6;
  _QWORD v7[4];

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v7[3] = ObjectType;
  v7[0] = v2;
  v4 = v2;
  static UIAccessibility.removeButtonShapesStatusChangeObserver(_:)(v7);
  sub_100027F10(v7);
  v6.receiver = v4;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, "dealloc");
}

void sub_1003E65DC()
{
  char *v0;
  id v1;
  id v2;
  double v3;
  id v4;
  double v5;
  double v6;
  __n128 v7;
  id v8;

  v1 = objc_msgSend(v0, "layer");
  v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC9Reminders41TTRIBoardReminderCellBackgroundStrokeView_strokeColor], "CGColor");
  objc_msgSend(v1, "setBorderColor:", v2);

  v3 = *(double *)&v0[OBJC_IVAR____TtC9Reminders41TTRIBoardReminderCellBackgroundStrokeView_strokeWidth];
  if (v3 > 0.0)
  {
    v4 = objc_msgSend(v0, "traitCollection");
    objc_msgSend(v4, "displayScale");
    v6 = v5;

    if (v6 == 0.0)
      v7.n128_f64[0] = 1.0;
    else
      v7.n128_f64[0] = v6;
    v3 = ceil(_:toScale:)(v3, v7);
  }
  v8 = objc_msgSend(v0, "layer");
  objc_msgSend(v8, "setBorderWidth:", v3);

}

id sub_1003E6810(void *a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  void *v6;
  char *v7;
  id v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders41TTRIBoardReminderCellBackgroundStrokeView_strokeWidth] = 0;
  v5 = OBJC_IVAR____TtC9Reminders41TTRIBoardReminderCellBackgroundStrokeView_strokeColor;
  v6 = (void *)objc_opt_self(UIColor);
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, "tintColor");

  v10.receiver = v7;
  v10.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v10, "initWithCoder:", a1);

  return v8;
}

uint64_t type metadata accessor for TTRIBoardReminderCellBackgroundStrokeView()
{
  return objc_opt_self(_TtC9Reminders41TTRIBoardReminderCellBackgroundStrokeView);
}

_QWORD *sub_1003E6914(uint64_t (*a1)(id *), _QWORD *a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(id *);
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  _QWORD *v26;

  v4 = a3;
  v26 = _swiftEmptyArrayStorage;
  if (a3 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v8 = 0;
      v23 = v4 & 0xFFFFFFFFFFFFFF8;
      v24 = v4 & 0xC000000000000001;
      v22 = v4;
      while (v24)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v4);
LABEL_9:
        v10 = v9;
        v11 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_17;
        v25 = v9;
        v12 = a2;
        v13 = a1(&v25);
        if (v3)
        {
          swift_bridgeObjectRelease(v4);

          swift_release(v26);
          return v12;
        }
        if ((v13 & 1) != 0)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v13);
          v14 = v7;
          v15 = a1;
          v16 = a2;
          v17 = v26[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
          v18 = v17;
          a2 = v16;
          a1 = v15;
          v7 = v14;
          v4 = v22;
          v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v10);
          specialized ContiguousArray._endMutation()(v19);
        }
        else
        {

        }
        ++v8;
        if (v11 == v7)
        {
          v12 = v26;
          goto LABEL_23;
        }
      }
      if (v8 < *(_QWORD *)(v23 + 16))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      if (v4 < 0)
        v20 = v4;
      else
        v20 = v4 & 0xFFFFFFFFFFFFFF8;
      v7 = _CocoaArrayWrapper.endIndex.getter(v20);
      if (!v7)
        goto LABEL_22;
    }
    v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_22:
  v12 = _swiftEmptyArrayStorage;
LABEL_23:
  swift_bridgeObjectRelease(v4);
  return v12;
}

void sub_1003E6AB8(uint64_t (*a1)(_QWORD *, __n128), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __n128 v12;
  char v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  _QWORD v21[3];
  char v22;
  _QWORD *v23;

  v4 = a3;
  v19 = *(_QWORD *)(a3 + 16);
  if (v19)
  {
    v5 = 0;
    v6 = (_BYTE *)(a3 + 56);
    v7 = _swiftEmptyArrayStorage;
    while (v5 < *(_QWORD *)(v4 + 16))
    {
      v9 = *((_QWORD *)v6 - 3);
      v8 = *((_QWORD *)v6 - 2);
      v10 = *((_QWORD *)v6 - 1);
      v11 = *v6;
      v21[0] = v9;
      v21[1] = v8;
      v21[2] = v10;
      v22 = v11;
      v12 = swift_bridgeObjectRetain(v8);
      v13 = a1(v21, v12);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease(v4);
        swift_bridgeObjectRelease(v8);
        return;
      }
      if ((v13 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v7);
        v23 = v7;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1003D8284(0, v7[2] + 1, 1);
          v7 = v23;
        }
        v16 = v7[2];
        v15 = v7[3];
        v3 = 0;
        if (v16 >= v15 >> 1)
        {
          sub_1003D8284(v15 > 1, v16 + 1, 1);
          v3 = 0;
          v7 = v23;
        }
        v7[2] = v16 + 1;
        v17 = &v7[4 * v16];
        v17[4] = v9;
        v17[5] = v8;
        v17[6] = v10;
        *((_BYTE *)v17 + 56) = v11;
        v4 = a3;
      }
      else
      {
        swift_bridgeObjectRelease(v8);
        v3 = 0;
      }
      ++v5;
      v6 += 32;
      if (v19 == v5)
        goto LABEL_13;
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease(v4);
  }
}

void sub_1003E6C58(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v23 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v22 = (uint64_t)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - v10;
  v24 = _swiftEmptyArrayStorage;
  v21 = *(_QWORD *)(a3 + 16);
  if (v21)
  {
    v12 = 0;
    v13 = _swiftEmptyArrayStorage;
    v19[1] = a2;
    v20 = a3;
    v19[0] = a1;
    while (v12 < *(_QWORD *)(a3 + 16))
    {
      v14 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      v15 = *(_QWORD *)(v23 + 72);
      sub_10002B1E8(a3 + v14 + v15 * v12, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v16 = a1(v11);
      if (v3)
      {
        sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_release();
        swift_bridgeObjectRelease(a3);
        return;
      }
      if ((v16 & 1) != 0)
      {
        sub_10001F580((uint64_t)v11, v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
          sub_1003D7F78(0, v13[2] + 1, 1);
        v13 = v24;
        v18 = v24[2];
        v17 = v24[3];
        if (v18 >= v17 >> 1)
        {
          sub_1003D7F78(v17 > 1, v18 + 1, 1);
          v13 = v24;
        }
        v13[2] = v18 + 1;
        sub_10001F580(v22, (uint64_t)v13 + v14 + v18 * v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        a3 = v20;
        a1 = (uint64_t (*)(char *))v19[0];
      }
      else
      {
        sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      if (v21 == ++v12)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease(a3);
  }
}

uint64_t sub_1003E6E70(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v7)(__int128 *);
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t (*v14)(__int128 *);
  __int128 v15[2];
  __int128 v16[2];
  _QWORD *v17;

  v5 = _swiftEmptyArrayStorage;
  v17 = _swiftEmptyArrayStorage;
  v6 = *(_QWORD **)(a3 + 16);
  if (v6)
  {
    v7 = (uint64_t (*)(__int128 *))result;
    v5 = 0;
    v8 = a3 + 32;
    v9 = _swiftEmptyArrayStorage;
    v13 = *(_QWORD **)(a3 + 16);
    v14 = (uint64_t (*)(__int128 *))result;
    while ((unint64_t)v5 < *(_QWORD *)(a3 + 16))
    {
      sub_100010634(v8, (uint64_t)v16);
      v10 = v7(v16);
      if (v3)
      {
        sub_100027F10(v16);
        swift_release();
        swift_bridgeObjectRelease(a3);
        return (uint64_t)v5;
      }
      if ((v10 & 1) != 0)
      {
        sub_10002E37C(v16, (uint64_t)v15);
        if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
          sub_1003D85F4(0, v9[2] + 1, 1);
        v9 = v17;
        v12 = v17[2];
        v11 = v17[3];
        if (v12 >= v11 >> 1)
        {
          sub_1003D85F4(v11 > 1, v12 + 1, 1);
          v9 = v17;
        }
        v9[2] = v12 + 1;
        result = sub_10002E37C(v15, (uint64_t)&v9[5 * v12 + 4]);
        v6 = v13;
        v7 = v14;
      }
      else
      {
        result = sub_100027F10(v16);
      }
      v5 = (_QWORD *)((char *)v5 + 1);
      v8 += 40;
      if (v6 == v5)
      {
        v5 = v17;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease(a3);
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_1003E6FF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  v13 = sub_1000175C8((unint64_t *)&qword_100644970, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.ItemID, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.ItemID);
  result = Set.init(minimumCapacity:)(v12, v2, v13);
  v15 = 0;
  v16 = *(_QWORD *)(a1 + 64);
  v26 = a1 + 64;
  v27 = result;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_5;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v23 >= v20)
      goto LABEL_23;
    v24 = *(_QWORD *)(v26 + 8 * v23);
    ++v15;
    if (!v24)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v20)
        goto LABEL_23;
      v24 = *(_QWORD *)(v26 + 8 * v15);
      if (!v24)
      {
        v15 = v23 + 2;
        if (v23 + 2 >= v20)
          goto LABEL_23;
        v24 = *(_QWORD *)(v26 + 8 * v15);
        if (!v24)
        {
          v15 = v23 + 3;
          if (v23 + 3 >= v20)
            goto LABEL_23;
          v24 = *(_QWORD *)(v26 + 8 * v15);
          if (!v24)
            break;
        }
      }
    }
LABEL_22:
    v19 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v15 << 6);
LABEL_5:
    sub_10002B1E8(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * v22, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10001F580((uint64_t)v11, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_1004809C4((uint64_t)v8, (uint64_t)v5);
    result = sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  }
  v25 = v23 + 4;
  if (v25 >= v20)
  {
LABEL_23:
    swift_release();
    return v27;
  }
  v24 = *(_QWORD *)(v26 + 8 * v25);
  if (v24)
  {
    v15 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    v15 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v15 >= v20)
      goto LABEL_23;
    v24 = *(_QWORD *)(v26 + 8 * v15);
    ++v25;
    if (v24)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t TTRReminderIDsWithMatchingHashtagsProvider.fetchReminderIDs(include:exclude:operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  __n128 v32;
  void (*v33)(char *, uint64_t, __n128);
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[16];
  uint64_t v38;
  char *v39;
  char *v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;

  v9 = type metadata accessor for REMHashtagLabelCollection(0);
  v36 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - v13;
  swift_bridgeObjectRetain(a1);
  v16 = sub_1002ABEC8(v15);
  swift_bridgeObjectRelease(a1);
  REMHashtagLabelCollection.init(labels:)(v16);
  swift_bridgeObjectRetain(a2);
  v18 = sub_1002ABEC8(v17);
  swift_bridgeObjectRelease(a2);
  REMHashtagLabelCollection.init(labels:)(v18);
  v38 = a3;
  v39 = v14;
  v40 = v11;
  swift_bridgeObjectRetain(a4);
  v19 = sub_1003E6E70((uint64_t)sub_1003E7C08, (uint64_t)v37, a4);
  v20 = v19;
  v21 = *(_QWORD *)(v19 + 16);
  if (v21)
  {
    v35 = v4;
    v44 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v21);
    v22 = v20 + 32;
    do
    {
      sub_100010634(v22, (uint64_t)v41);
      v24 = v42;
      v23 = v43;
      sub_10001413C(v41, v42);
      v25 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v24, v23);
      v26 = REMObjectID.codable.getter();

      v27 = sub_100027F10(v41);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v27);
      v28 = v44[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v28);
      v29 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v26);
      specialized ContiguousArray._endMutation()(v29);
      v22 += 40;
      --v21;
    }
    while (v21);
    v30 = v44;
    swift_bridgeObjectRelease(v20);
  }
  else
  {
    swift_bridgeObjectRelease(v19);
    v30 = _swiftEmptyArrayStorage;
  }
  v31 = sub_100017454((uint64_t)v30, (uint64_t (*)(uint64_t))&type metadata accessor for REMObjectID_Codable, &qword_1006576D8, (void (*)(id *, uint64_t))sub_100481320);
  v32 = swift_bridgeObjectRelease(v30);
  v33 = *(void (**)(char *, uint64_t, __n128))(v36 + 8);
  v33(v11, v9, v32);
  ((void (*)(char *, uint64_t))v33)(v14, v9);
  return v31;
}

uint64_t sub_1003E7488(_QWORD *a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  char *v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  void (*v56)(char *, uint64_t);
  uint64_t result;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  _QWORD v69[3];
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v67 = a4;
  v68 = a2;
  v72 = a3;
  v6 = sub_10002A750((uint64_t *)&unk_100659A80);
  __chkstk_darwin(v6);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for REMHashtagLabelCollection(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v62 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v61 = (char *)&v58 - v13;
  __chkstk_darwin(v14);
  v60 = (char *)&v58 - v15;
  __chkstk_darwin(v16);
  v59 = (char *)&v58 - v17;
  __chkstk_darwin(v18);
  v20 = (char *)&v58 - v19;
  v21 = a1[3];
  v22 = a1[4];
  sub_10001413C(a1, v21);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v22 + 208))(v69, v21, v22);
  v23 = v70;
  if (!v70)
  {
    sub_1003E80F8((uint64_t)v69);
    v41 = 0;
    return v41 & 1;
  }
  v65 = v4;
  v66 = v10;
  v64 = v9;
  v24 = v71;
  sub_10001413C(v69, v70);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
  sub_100027F10(v69);
  v69[0] = v25;
  v26 = sub_10002A750(&qword_100645300);
  v27 = sub_1003E81D0();
  v63 = v20;
  v28 = REMHashtagLabelCollection.init<A>(hashtags:)(v69, v26, v27);
  v29 = REMHashtagLabelCollection.isEmpty.getter(v28);
  v30 = v29;
  v31 = v67;
  v32 = REMHashtagLabelCollection.isEmpty.getter(v29);
  v33 = *(int *)(v6 + 48);
  v34 = *(int *)(v6 + 64);
  v35 = type metadata accessor for REMCustomSmartListFilterDescriptor.Operation(0);
  v36 = *(_QWORD *)(v35 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v8, v68, v35);
  v8[v33] = (v30 & 1) == 0;
  v8[v34] = (v32 & 1) == 0;
  v37 = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))(v8, v35);
  if (v37 == enum case for REMCustomSmartListFilterDescriptor.Operation.and(_:))
  {
    if ((v30 & 1) == 0)
    {
      v43 = v63;
      v41 = REMHashtagLabelCollection.isSuperset(of:)(v72);
      v44 = v64;
      if ((v32 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v66 + 8))(v43, v64);
      }
      else
      {
        v47 = v31;
        v48 = v66;
        v49 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
        v50 = v59;
        v49(v59, v43, v64);
        v51 = v60;
        v49(v60, v47, v44);
        if ((v41 & 1) != 0)
          v41 = REMHashtagLabelCollection.isDisjoint(with:)(v51);
        else
          v41 = 0;
        v55 = *(void (**)(char *, uint64_t))(v48 + 8);
        v55(v51, v44);
        v55(v50, v44);
        v55(v43, v44);
      }
      return v41 & 1;
    }
    v38 = v64;
    v39 = v31;
    v40 = v63;
    if ((v32 & 1) == 0)
    {
      v41 = REMHashtagLabelCollection.isDisjoint(with:)(v39);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v40, v38);
      return v41 & 1;
    }
LABEL_10:
    (*(void (**)(char *, uint64_t))(v66 + 8))(v40, v38);
    v41 = 0;
    return v41 & 1;
  }
  if (v37 == enum case for REMCustomSmartListFilterDescriptor.Operation.or(_:))
  {
    v38 = v64;
    v42 = v31;
    if ((v30 & 1) != 0)
    {
      v40 = v63;
      if ((v32 & 1) != 0)
        goto LABEL_10;
      v46 = REMHashtagLabelCollection.isDisjoint(with:)(v42);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v40, v38);
    }
    else
    {
      v45 = v63;
      v46 = REMHashtagLabelCollection.isDisjoint(with:)(v72);
      if ((v32 & 1) == 0)
      {
        v52 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
        v53 = v61;
        v52(v61, v45, v38);
        v54 = v62;
        v52(v62, v31, v38);
        if ((v46 & 1) != 0)
          v41 = REMHashtagLabelCollection.isDisjoint(with:)(v54) ^ 1;
        else
          v41 = 1;
        v56 = *(void (**)(char *, uint64_t))(v66 + 8);
        v56(v54, v38);
        v56(v53, v38);
        v56(v45, v38);
        return v41 & 1;
      }
      (*(void (**)(char *, uint64_t))(v66 + 8))(v45, v38);
    }
    v41 = v46 ^ 1;
    return v41 & 1;
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v6, v6);
  __break(1u);
  return result;
}

uint64_t TTRReminderIDsWithMatchingHashtagsProvider.fetchAllTaggedReminderIDs()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;

  v33 = _swiftEmptyArrayStorage;
  v2 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain(a1);
  if (v2)
  {
    v3 = a1 + 32;
    v4 = _swiftEmptyArrayStorage;
    while (1)
    {
      sub_100010634(v3, (uint64_t)&v30);
      v5 = v31;
      v6 = v32;
      sub_10001413C(&v30, v31);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v6 + 208))(&v27, v5, v6);
      v7 = v28;
      if (v28)
      {
        v8 = v29;
        sub_10001413C(&v27, v28);
        v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
        sub_100027F10(&v27);
        if ((v9 & 0xC000000000000001) != 0)
        {
          if (v9 < 0)
            v10 = v9;
          else
            v10 = v9 & 0xFFFFFFFFFFFFFF8;
          v11 = __CocoaSet.count.getter(v10);
        }
        else
        {
          v11 = *(_QWORD *)(v9 + 16);
        }
        swift_bridgeObjectRelease(v9);
        if (v11)
        {
          sub_10002E37C(&v30, (uint64_t)&v27);
          if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
            sub_1003D85F4(0, v4[2] + 1, 1);
          v4 = v33;
          v13 = v33[2];
          v12 = v33[3];
          if (v13 >= v12 >> 1)
          {
            sub_1003D85F4(v12 > 1, v13 + 1, 1);
            v4 = v33;
          }
          v4[2] = v13 + 1;
          sub_10002E37C(&v27, (uint64_t)&v4[5 * v13 + 4]);
          goto LABEL_5;
        }
      }
      else
      {
        sub_1003E80F8((uint64_t)&v27);
      }
      sub_100027F10(&v30);
LABEL_5:
      v3 += 40;
      if (!--v2)
      {
        v14 = v33;
        goto LABEL_21;
      }
    }
  }
  v14 = _swiftEmptyArrayStorage;
LABEL_21:
  swift_bridgeObjectRelease(a1);
  v15 = v14[2];
  if (v15)
  {
    *(_QWORD *)&v27 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v15);
    v16 = (uint64_t)(v14 + 4);
    do
    {
      sub_100010634(v16, (uint64_t)&v30);
      v17 = v31;
      v18 = v32;
      sub_10001413C(&v30, v31);
      v19 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
      v20 = REMObjectID.codable.getter();

      v21 = sub_100027F10(&v30);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v21);
      v22 = *(_QWORD *)(v27 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v22);
      v23 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v20);
      specialized ContiguousArray._endMutation()(v23);
      v16 += 40;
      --v15;
    }
    while (v15);
    v24 = (_QWORD *)v27;
    swift_release();
  }
  else
  {
    swift_release();
    v24 = _swiftEmptyArrayStorage;
  }
  v25 = sub_100017454((uint64_t)v24, (uint64_t (*)(uint64_t))&type metadata accessor for REMObjectID_Codable, &qword_1006576D8, (void (*)(id *, uint64_t))sub_100481320);
  swift_bridgeObjectRelease(v24);
  return v25;
}

uint64_t sub_1003E7BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return TTRReminderIDsWithMatchingHashtagsProvider.fetchReminderIDs(include:exclude:operation:)(a1, a2, a3, *v3);
}

uint64_t sub_1003E7BF0()
{
  uint64_t *v0;

  return TTRReminderIDsWithMatchingHashtagsProvider.fetchAllTaggedReminderIDs()(*v0);
}

uint64_t sub_1003E7C08(_QWORD *a1)
{
  uint64_t v1;

  return sub_1003E7488(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(char **)(v1 + 32)) & 1;
}

uint64_t sub_1003E7C28(uint64_t a1)
{
  return sub_1003E7C70(a1, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, &qword_100654840, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item, (void (*)(char *, char *))sub_1004815A4);
}

uint64_t sub_1003E7C4C(uint64_t a1)
{
  return sub_1003E7C70(a1, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.ItemID, (unint64_t *)&qword_100644970, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.ItemID, (void (*)(char *, char *))sub_1004809C4);
}

uint64_t sub_1003E7C70(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4, void (*a5)(char *, char *))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v10 = a2(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v22 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  v18 = sub_1000175C8(a3, a2, a4);
  result = Set.init(minimumCapacity:)(v17, v10, v18);
  v23 = result;
  if (v17)
  {
    v20 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v21 = *(_QWORD *)(v11 + 72);
    do
    {
      sub_10002B1E8(v20, (uint64_t)v14, a2);
      a5(v16, v14);
      sub_10001F544((uint64_t)v16, a2);
      v20 += v21;
      --v17;
    }
    while (v17);
    return v23;
  }
  return result;
}

uint64_t sub_1003E7D94(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7[2];
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = Set.init(minimumCapacity:)(v2, &type metadata for String, &protocol witness table for String);
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain(*v4);
      sub_100481C18(v7, v5, v6);
      swift_bridgeObjectRelease(v7[1]);
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1003E7E28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v18 - v7;
  v9 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = sub_1000175C8((unint64_t *)&qword_1006463A0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  v19 = Set.init(minimumCapacity:)(v12, v2, v13);
  if (v12)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v18 = *(_QWORD *)(v3 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v15(v11, v14, v2);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v16(v11, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v11, v2);
      sub_100481DC4((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v14 += v18;
      if (!--v12)
        goto LABEL_7;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v16(v11, 1, 1, v2);
  }
  return v19;
}

uint64_t sub_1003E7FF8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  unsigned __int8 *v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = sub_1003E8148();
  result = Set.init(minimumCapacity:)(v2, &type metadata for TTRISmartListFilterEditorViewController.Filter, v3);
  v8 = result;
  if (v2)
  {
    v5 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v6 = *v5++;
      sub_1004823C4(&v7, v6);
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1003E8068(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  char *v5;
  void *v6;
  char v7;
  id v8;
  id v9[2];
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = sub_1003E818C();
  result = Set.init(minimumCapacity:)(v2, &type metadata for TTRListOrCustomSmartList, v3);
  v10 = result;
  if (v2)
  {
    v5 = (char *)(a1 + 40);
    do
    {
      v6 = (void *)*((_QWORD *)v5 - 1);
      v7 = *v5;
      v5 += 16;
      v8 = v6;
      sub_10048273C((uint64_t)v9, v6, v7);

      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

uint64_t sub_1003E80F8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750(&qword_10063F588);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for TTRReminderIDsWithMatchingHashtagsProvider()
{
  return &type metadata for TTRReminderIDsWithMatchingHashtagsProvider;
}

unint64_t sub_1003E8148()
{
  unint64_t result;

  result = qword_100659A70;
  if (!qword_100659A70)
  {
    result = swift_getWitnessTable(&unk_100527E48, &type metadata for TTRISmartListFilterEditorViewController.Filter);
    atomic_store(result, (unint64_t *)&qword_100659A70);
  }
  return result;
}

unint64_t sub_1003E818C()
{
  unint64_t result;

  result = qword_100659A78;
  if (!qword_100659A78)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRListOrCustomSmartList, &type metadata for TTRListOrCustomSmartList);
    atomic_store(result, (unint64_t *)&qword_100659A78);
  }
  return result;
}

unint64_t sub_1003E81D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100645308;
  if (!qword_100645308)
  {
    v1 = sub_10002CA5C(&qword_100645300);
    result = swift_getWitnessTable(&protocol conformance descriptor for Set<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100645308);
  }
  return result;
}

void sub_1003E821C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;

  _StringGuts.grow(_:)(16);
  v1 = (uint64_t *)TTRAppBundleIdentifier.unsafeMutableAddressor(v0);
  v3 = *v1;
  v2 = v1[1];
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRelease(0xE000000000000000);
  v4._countAndFlagsBits = 0x616E7265746E692ELL;
  v4._object = (void *)0xEE007473696C2E6CLL;
  String.append(_:)(v4);
  qword_100659A90 = v3;
  *(_QWORD *)algn_100659A98 = v2;
}

uint64_t sub_1003E82EC()
{
  return type metadata accessor for TTRIAccountsListsDragItem(0);
}

uint64_t type metadata accessor for TTRIAccountsListsDragItem(uint64_t a1)
{
  uint64_t result;

  result = qword_100659AC8;
  if (!qword_100659AC8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIAccountsListsDragItem);
  return result;
}

uint64_t sub_1003E8330(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1003E8698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;

  v0 = sub_10002A750((uint64_t *)&unk_100654F80);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100520250;
  if (qword_10063D738 != -1)
    swift_once(&qword_10063D738, sub_1003E821C);
  v2 = *(_QWORD *)algn_100659A98;
  *(_QWORD *)(v1 + 32) = qword_100659A90;
  *(_QWORD *)(v1 + 40) = v2;
  v3 = (void *)objc_opt_self(NSUserActivity);
  v4 = objc_msgSend(v3, "writableTypeIdentifiersForItemProvider", swift_bridgeObjectRetain(v2).n128_f64[0]);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, &type metadata for String);

  sub_1004507EC(v5);
  return v1;
}

id sub_1003E877C(uint64_t a1, void *a2, uint64_t a3, void (**a4)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v8;
  BOOL v9;
  void *v10;
  uint64_t v11;
  void *v12;
  Swift::String v13;
  NSString v14;
  id v15;
  void *v16;
  id v17;
  void *v19;
  uint64_t v20;
  _QWORD *v21;
  NSString v22;
  void *v23;
  void *v24;
  Swift::String v25;
  NSString v26;
  void **v27;
  unint64_t v28;
  double (*v29)(uint64_t, void *, void *);
  void *v30;
  void (*v31)(uint64_t, unint64_t, uint64_t);
  uint64_t v32;

  v8 = swift_allocObject(&unk_100605490, 24, 7);
  *(_QWORD *)(v8 + 16) = a4;
  _Block_copy(a4);
  if (qword_10063D738 != -1)
    swift_once(&qword_10063D738, sub_1003E821C);
  v9 = qword_100659A90 == a1 && *(_QWORD *)algn_100659A98 == (_QWORD)a2;
  if (v9
    || (_stringCompareWithSmolCheck(_:_:expecting:)(qword_100659A90, *(_QWORD *)algn_100659A98, a1, a2, 0) & 1) != 0)
  {
    v10 = (void *)objc_opt_self(REMError);
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease(0xE000000000000000);
    v28 = 0x800000010056D250;
    v11 = qword_100659A90;
    v12 = *(void **)algn_100659A98;
    swift_bridgeObjectRetain(*(_QWORD *)algn_100659A98);
    v13._countAndFlagsBits = v11;
    v13._object = v12;
    String.append(_:)(v13);
    swift_bridgeObjectRelease(v12);
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend(v10, "internalErrorWithDebugDescription:", v14, swift_bridgeObjectRelease(0x800000010056D250).n128_f64[0], 0xD00000000000001ALL);

  }
  else
  {
    sub_10023A73C();
    if ((static NSItemProviderWriting.canWriteTypeIdentifier(_:)(a1, a2) & 1) != 0)
    {
      v19 = (void *)static NSUserActivity.forStoringWindowSceneRestorationPayload()();
      v20 = a3 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsDragItem_listState;
      v30 = (void *)type metadata accessor for TTRUserActivityWindowSceneRestorationPayload(0);
      v31 = (void (*)(uint64_t, unint64_t, uint64_t))&protocol witness table for TTRUserActivityWindowSceneRestorationPayload;
      v21 = sub_100028D70(&v27);
      sub_1003E8AF0(v20, (uint64_t)v21);
      NSUserActivity.setPayload(_:)(&v27);
      sub_100027F10(&v27);
      v22 = String._bridgeToObjectiveC()();
      v31 = sub_10018049C;
      v32 = v8;
      v27 = _NSConcreteStackBlock;
      v28 = 1107296256;
      v29 = sub_1004B02FC;
      v30 = &unk_1006054A8;
      v23 = _Block_copy(&v27);
      swift_retain();
      v17 = objc_msgSend(v19, "loadDataWithTypeIdentifier:forItemProviderCompletionHandler:", v22, v23, swift_release().n128_f64[0]);
      _Block_release(v23);
      swift_release();

      return v17;
    }
    v24 = (void *)objc_opt_self(REMError);
    _StringGuts.grow(_:)(30);
    swift_bridgeObjectRelease(0xE000000000000000);
    v28 = 0x8000000100577A40;
    v25._countAndFlagsBits = a1;
    v25._object = a2;
    String.append(_:)(v25);
    v26 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend(v24, "internalErrorWithDebugDescription:", v26, swift_bridgeObjectRelease(0x8000000100577A40).n128_f64[0], 0xD00000000000001CLL);

  }
  v16 = (void *)_convertErrorToNSError(_:)(v15);
  ((void (**)(_QWORD, _QWORD, void *))a4)[2](a4, 0, v16);
  swift_release();

  return 0;
}

uint64_t sub_1003E8ACC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003E8AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003E8B34(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003E8B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100659AD8);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100659AD8);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1003E8C00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 && *(_BYTE *)(v1 + 24) == 1)
  {
    *(_BYTE *)(v1 + 24) = 0;
    if (*(_QWORD *)(v1 + 16))
    {
      swift_retain();
      swift_retain();
      AnyCancellable.cancel()();
      swift_release();
    }
    else
    {
      swift_retain();
    }
    v2 = type metadata accessor for PromiseError(0);
    v3 = sub_1000A60A8();
    v4 = swift_allocError(v2, v3, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v5, enum case for PromiseError.cancelled(_:), v2);
    DeferredPromise.reject(_:)(v4);
    swift_errorRelease(v4);
    swift_release();
  }
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1003E8CEC()
{
  uint64_t v0;

  sub_1003E8C00();
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for TTRIRemindersListScrollSessionController()
{
  return objc_opt_self(_TtC9Reminders40TTRIRemindersListScrollSessionController);
}

uint64_t sub_1003E8D2C(uint64_t a1, uint64_t a2)
{
  _BYTE v4[24];

  swift_beginAccess(a2 + 16, v4, 0, 0);
  return *(unsigned __int8 *)(a2 + 16);
}

uint64_t sub_1003E8D68(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (*(_BYTE *)(result + 24) == 1)
  {
    *(_BYTE *)(result + 24) = 0;
    if (*(_QWORD *)(result + 16))
    {
      swift_retain();
      AnyCancellable.cancel()();
      swift_release();
    }
    v1 = type metadata accessor for PromiseError(0);
    v2 = sub_1000A60A8();
    v3 = swift_allocError(v1, v2, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v4, enum case for PromiseError.cancelled(_:), v1);
    DeferredPromise.reject(_:)(v3);
    return swift_errorRelease(v3);
  }
  return result;
}

uint64_t sub_1003E8E20()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for ScrollWithCompensationSession()
{
  return objc_opt_self(_TtC9RemindersP33_FE267A1C4EE967C3D7393DFC9A5095F829ScrollWithCompensationSession);
}

uint64_t sub_1003E8E6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  int EnumCaseMultiPayload;
  uint64_t result;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  int *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;

  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability.MoveReminderSubjectForItem(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v50 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v48 - v14;
  sub_10002B1E8(a1, (uint64_t)&v48 - v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v10);
  result = sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (EnumCaseMultiPayload == 2)
  {
    sub_10002B1E8(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v18 = (int *)v7;
    *(_QWORD *)(a2 + 24) = v7;
    *(_QWORD *)(a2 + 32) = &off_100605668;
    v49 = sub_100028D70((_QWORD *)a2);
    v19 = (uint64_t)v9;
    sub_10002B1E8((uint64_t)v13, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v20 = v51;
    Strong = swift_unknownObjectWeakLoadStrong(v51 + 16);
    if (Strong)
    {
      v23 = Strong;
      v24 = *(_QWORD *)(v20 + 24);
      ObjectType = swift_getObjectType(Strong, v22);
      v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 8))(v20, ObjectType, v24);
      swift_retain();
      swift_unknownObjectRelease(v23);
      sub_10002B1E8((uint64_t)v13, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v6, 0, 1, v10);
      swift_retain();
      v27 = TTRMutableTreeStorage.numberOfChildren(of:)(v6);
      swift_release();
      sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
      v28 = v27 > 0;
      v29 = v18;
    }
    else
    {
      v30 = v13;
      v31 = qword_10063D748;
      swift_retain();
      if (v31 != -1)
        swift_once(&qword_10063D748, sub_1003E9A78);
      v32 = type metadata accessor for Logger(0);
      v33 = sub_100012DC4(v32, (uint64_t)qword_100659C50);
      v34 = Logger.logObject.getter(v33);
      v35 = static os_log_type_t.fault.getter(v34);
      v29 = v18;
      if (os_log_type_enabled(v34, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v36 = 0;
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v36, 2u);
        swift_slowDealloc(v36, -1, -1);
      }

      v28 = 0;
      v26 = 0;
      v13 = v30;
    }
    *(_BYTE *)(v19 + v29[5]) = v28;
    *(_QWORD *)(v19 + v29[6]) = sub_1003EA3F0(v26, (uint64_t)v13);
    v37 = swift_unknownObjectWeakLoadStrong(v20 + 16);
    if (v37)
    {
      v39 = v37;
      v40 = *(_QWORD *)(v20 + 24);
      v41 = swift_getObjectType(v37, v38);
      v42 = (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t))(v40 + 16))(v20, v13, v41, v40);
      swift_release();
      swift_unknownObjectRelease(v39);
    }
    else
    {
      if (qword_10063D748 != -1)
        swift_once(&qword_10063D748, sub_1003E9A78);
      v43 = type metadata accessor for Logger(0);
      v44 = sub_100012DC4(v43, (uint64_t)qword_100659C50);
      v45 = Logger.logObject.getter(v44);
      v46 = static os_log_type_t.fault.getter(v45);
      if (os_log_type_enabled(v45, v46))
      {
        v47 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v47 = 0;
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v47, 2u);
        swift_slowDealloc(v47, -1, -1);
      }
      swift_release();

      v42 = 0;
    }
    swift_release();
    sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(_QWORD *)(v19 + v29[7]) = v42;
    return sub_10001F580(v19, (uint64_t)v49, type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability.MoveReminderSubjectForItem);
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

BOOL sub_1003E92E4(void *a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v23;
  _BYTE v24[24];

  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType(Strong, v4);
    v8 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(v1, ObjectType, v6);
    swift_unknownObjectRelease(v5);
    v9 = objc_msgSend(a1, "objectID");
    swift_beginAccess(v8 + 12, v24, 32, 0);
    v10 = v8[12];
    if (*(_QWORD *)(v10 + 16))
    {
      v11 = v9;
      v12 = sub_1002AA364((uint64_t)v11);
      if ((v13 & 1) != 0)
      {
        v14 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v12);
        swift_endAccess(v24);
        swift_bridgeObjectRetain(v14);

        v15 = v11;
        swift_retain();
        v16 = (_QWORD *)sub_10003D6CC(v14, v8, (uint64_t)v15);
        swift_bridgeObjectRelease(v14);
        swift_release_n(v8, 2);

LABEL_12:
        v23 = v16[2];
        swift_bridgeObjectRelease(v16);
        return v23 == 0;
      }

    }
    swift_endAccess(v24);
    swift_release();
    v16 = _swiftEmptyArrayStorage;
    goto LABEL_12;
  }
  if (qword_10063D748 != -1)
    swift_once(&qword_10063D748, sub_1003E9A78);
  v17 = type metadata accessor for Logger(0);
  v18 = sub_100012DC4(v17, (uint64_t)qword_100659C50);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.fault.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v21, 2u);
    swift_slowDealloc(v21, -1, -1);
  }

  return 0;
}

uint64_t sub_1003E94EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (**v16)();
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;

  v7 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(a1, (uint64_t)v9, (uint64_t *)&unk_100640EB0);
  v10 = type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability.RemindersInsertionRequest(0);
  v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  v12 = (_QWORD *)(v11
                 + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_additionalSubjectFilter);
  *v12 = 0;
  v12[1] = 0;
  v13 = v11
      + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___creationTarget;
  *(_QWORD *)(v13 + 8) = 0;
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 24) = -1;
  v14 = v11
      + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___actualInsertionLocation;
  v15 = sub_10002A750(&qword_100641740);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(_BYTE *)(v11
           + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___isAfterPlaceholderReminder) = 2;
  sub_10000F614((uint64_t)v9, v11+ OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_parent, (uint64_t *)&unk_100640EB0);
  *(_QWORD *)(v11
            + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_childIndex) = a2;
  *(_QWORD *)(v11
            + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_dragAndDropCapability) = v3;
  v16 = (uint64_t (**)())(v11
                       + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_additionalSubjectFilter);
  v17 = *(_QWORD *)(v11
                  + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_additionalSubjectFilter);
  v18 = *(_QWORD *)(v11
                  + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_additionalSubjectFilter
                  + 8);
  *v16 = sub_1003EE710;
  v16[1] = (uint64_t (*)())v11;
  swift_retain();
  swift_retain();
  result = sub_1000381B8(v17, v18);
  a3[3] = v10;
  a3[4] = (uint64_t)&off_100605500;
  *a3 = v11;
  return result;
}

uint64_t sub_1003E9680@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;

  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
  v12 = type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability.RemindersInsertionRequest(0);
  v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v14 = (_QWORD *)(v13
                 + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_additionalSubjectFilter);
  *v14 = 0;
  v14[1] = 0;
  v15 = v13
      + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___creationTarget;
  *(_QWORD *)(v15 + 8) = 0;
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 24) = -1;
  v16 = v13
      + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___actualInsertionLocation;
  v17 = sub_10002A750(&qword_100641740);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(_BYTE *)(v13
           + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___isAfterPlaceholderReminder) = 2;
  sub_10000F614((uint64_t)v11, v13+ OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_parent, (uint64_t *)&unk_100640EB0);
  *(_QWORD *)(v13
            + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_childIndex) = 0;
  *(_QWORD *)(v13
            + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_dragAndDropCapability) = v2;
  v18 = swift_allocObject(&unk_100605628, 24, 7);
  swift_weakInit(v18 + 16, v2);
  sub_10002B1E8(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v19 = *(unsigned __int8 *)(v6 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = (v7 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject(&unk_100605650, v21 + 8, v19 | 7);
  sub_10001F580((uint64_t)v8, v22 + v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_QWORD *)(v22 + v21) = v18;
  v23 = (_QWORD *)(v13
                 + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_additionalSubjectFilter);
  v24 = *(_QWORD *)(v13
                  + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_additionalSubjectFilter);
  v25 = *(_QWORD *)(v13
                  + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_additionalSubjectFilter
                  + 8);
  *v23 = sub_1003EE6C0;
  v23[1] = v22;
  swift_retain();
  result = sub_1000381B8(v24, v25);
  a2[3] = v12;
  a2[4] = (uint64_t)&off_100605500;
  *a2 = v13;
  return result;
}

uint64_t sub_1003E98E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  int v12;
  void (*v13)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v16;
  _BYTE v18[40];

  v4 = sub_10002A750(&qword_100659EF0);
  __chkstk_darwin(v4);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability.MoveReminderSubjectForItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100010634(a1, (uint64_t)v18);
  v11 = sub_10002A750(&qword_100647B38);
  v12 = swift_dynamicCast(v6, v18, v11, v7, 6);
  v13 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v12)
  {
    v13(v6, 0, 1, v7);
    sub_10001F580((uint64_t)v6, (uint64_t)v10, type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability.MoveReminderSubjectForItem);
    sub_10002B1E8((uint64_t)v10, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F544((uint64_t)v10, type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability.MoveReminderSubjectForItem);
    v14 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 0, 1, v14);
  }
  else
  {
    v13(v6, 1, 1, v7);
    sub_1000073A0((uint64_t)v6, &qword_100659EF0);
    v16 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

uint64_t sub_1003E9A78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100659C50);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100659C50);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1003E9B08()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;

  v0 = sub_10002A750(&qword_100641740);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v15 - v8;
  __chkstk_darwin(v7);
  v11 = (char *)&v15 - v10;
  sub_1003E9CC8((uint64_t)v2);
  v12 = sub_10002A750(&qword_100641750);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v2, 1, v12))
  {
    sub_10002B1E8((uint64_t)v2, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1000073A0((uint64_t)v2, &qword_100641740);
    sub_10001F580((uint64_t)v9, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F580((uint64_t)v11, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v13 = (char *)&loc_1003E9C84 + 4 * byte_100533540[swift_getEnumCaseMultiPayload(v6, v3)];
    __asm { BR              X10 }
  }
  sub_1000073A0((uint64_t)v2, &qword_100641740);
  return 2;
}

void sub_1003E9CB0()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  JUMPOUT(0x1003E9C98);
}

uint64_t sub_1003E9CC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];
  _BYTE v14[24];

  v3 = sub_10002A750(&qword_100647B28);
  v4 = __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v13[-v7];
  v9 = v1
     + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___actualInsertionLocation;
  swift_beginAccess(v1+ OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___actualInsertionLocation, v14, 0, 0);
  sub_10000735C(v9, (uint64_t)v8, &qword_100647B28);
  v10 = sub_10002A750(&qword_100641740);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return sub_10000F614((uint64_t)v8, a1, &qword_100641740);
  sub_1000073A0((uint64_t)v8, &qword_100647B28);
  sub_1003EB41C(v1, a1);
  sub_10000735C(a1, (uint64_t)v6, &qword_100641740);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess(v9, v13, 33, 0);
  sub_100041F2C((uint64_t)v6, v9, &qword_100647B28);
  return swift_endAccess(v13);
}

uint64_t sub_1003E9E4C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  char v23;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t Strong;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t inited;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t ObjectType;
  uint64_t v45;
  id v46;
  unint64_t v47;
  char v48;
  void *v49;
  id v50;
  void *v51;
  char v52;
  uint64_t (*v53)(_QWORD);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE v64[40];
  _BYTE v65[24];

  v60 = a3;
  v61 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v61);
  v6 = (void **)((char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v7);
  v62 = (uint64_t)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v60 - v13;
  v15 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v15);
  v17 = (id *)((char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = a1[3];
  v19 = a1[4];
  sub_10001413C(a1, v18);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 24))(v18, v19);
  if (v20)
  {
    v21 = (void *)v20;
    sub_10002B1E8(a2, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v14, v9) == 2)
    {
      sub_10001F580((uint64_t)v14, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
      v22 = *v17;
      v23 = static NSObject.== infix(_:_:)(v22, v21);

      sub_10001F544((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      if ((v23 & 1) != 0)
        return 2;
    }
    else
    {

      sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
  }
  sub_10002B1E8(a2, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v12, v9) != 1)
  {
    v53 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item;
    v54 = (uint64_t)v12;
LABEL_31:
    sub_10001F544(v54, v53);
    return 0;
  }
  v25 = v62;
  sub_10001F580((uint64_t)v12, v62, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  sub_10002B1E8(v25, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  if (swift_getEnumCaseMultiPayload(v6, v61) != 1)
  {
    sub_10001F544(v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v53 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID;
    v54 = (uint64_t)v6;
    goto LABEL_31;
  }
  v26 = *v6;
  v27 = a1[3];
  v28 = a1[4];
  sub_10001413C(a1, v27);
  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
  if (!v29)
  {
    sub_10001F544(v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);

    return 0;
  }
  v30 = (void *)v29;
  v31 = v60 + 16;
  swift_beginAccess(v60 + 16, v65, 0, 0);
  Strong = swift_weakLoadStrong(v31);
  if (!Strong)
    goto LABEL_20;
  v33 = Strong;
  v34 = objc_msgSend(v30, "objectID");
  v35 = sub_10002A750((uint64_t *)&unk_1006415A0);
  inited = swift_initStackObject(v35, v64);
  *(_OWORD *)(inited + 16) = xmmword_100521140;
  *(_QWORD *)(inited + 32) = v34;
  v63 = inited;
  specialized Array._endMutation()(inited);
  v37 = v63;
  v38 = v34;
  v39 = sub_100017684(v37);
  swift_bridgeObjectRelease(v37);
  v40 = swift_unknownObjectWeakLoadStrong(v33 + 16);
  if (!v40)
  {
    if (qword_10063D748 != -1)
      swift_once(&qword_10063D748, sub_1003E9A78);
    v55 = type metadata accessor for Logger(0);
    v56 = sub_100012DC4(v55, (uint64_t)qword_100659C50);
    v57 = Logger.logObject.getter(v56);
    v58 = static os_log_type_t.fault.getter(v57);
    if (os_log_type_enabled(v57, v58))
    {
      v59 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v59 = 0;
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v59, 2u);
      swift_slowDealloc(v59, -1, -1);
    }
    swift_bridgeObjectRelease(v39);

    goto LABEL_26;
  }
  v42 = v40;
  v43 = *(_QWORD *)(v33 + 24);
  ObjectType = swift_getObjectType(v40, v41);
  v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 48))(v33, v39, ObjectType, v43);
  swift_bridgeObjectRelease(v39);
  swift_unknownObjectRelease(v42);
  if (!v45)
  {
LABEL_26:

    swift_release();
    goto LABEL_30;
  }
  if (!*(_QWORD *)(v45 + 16))
  {

    swift_release();
LABEL_29:
    swift_bridgeObjectRelease(v45);
    goto LABEL_30;
  }
  v46 = v38;
  v47 = sub_1002AA364((uint64_t)v46);
  if ((v48 & 1) == 0)
  {

    swift_release();
    goto LABEL_29;
  }
  v49 = *(void **)(*(_QWORD *)(v45 + 56) + 8 * v47);
  v50 = v49;
  swift_release();

  swift_bridgeObjectRelease(v45);
  v51 = (void *)TTRSectionID.remObjectID.getter(v49);

  if (!v51)
  {
LABEL_20:

LABEL_30:
    v53 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader;
    v54 = v25;
    goto LABEL_31;
  }
  sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
  v52 = static NSObject.== infix(_:_:)(v26, v51);

  sub_10001F544(v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  if ((v52 & 1) != 0)
    return 2;
  return 0;
}

id sub_1003EA3F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v14;

  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v7);
  v9 = (id *)((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!a1)
  {
    v12 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
    goto LABEL_6;
  }
  swift_retain();
  TTRMutableTreeStorage.parent(of:)(a2);
  swift_release();
  v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10) == 1)
  {
LABEL_6:
    sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
    return 0;
  }
  if (swift_getEnumCaseMultiPayload(v6, v10) != 2)
  {
    sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return 0;
  }
  sub_10001F580((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  v11 = *v9;
  sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  return v11;
}

void *sub_1003EA574(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *(int *)(a1 + 28));
  v3 = v2;
  return v2;
}

uint64_t sub_1003EA59C(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 20));
}

void *sub_1003EA5A8(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *(int *)(a1 + 24));
  v3 = v2;
  return v2;
}

void *sub_1003EA5D0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  int v6;
  void *v7;
  void *v8;
  char v9;
  char v10;
  void *v12;
  void *v13;
  void *v14;

  v1 = v0
     + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___creationTarget;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___creationTarget);
  v3 = *(void **)(v0
                + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___creationTarget
                + 8);
  v4 = *(void **)(v1 + 16);
  v5 = v2;
  v6 = *(unsigned __int8 *)(v1 + 24);
  if (v6 == 255)
  {
    v5 = (void *)sub_1003EA6B4();
    v13 = *(void **)(v1 + 8);
    v14 = *(void **)v1;
    v12 = *(void **)(v1 + 16);
    *(_QWORD *)v1 = v5;
    *(_QWORD *)(v1 + 8) = v7;
    *(_QWORD *)(v1 + 16) = v8;
    v9 = *(_BYTE *)(v1 + 24);
    *(_BYTE *)(v1 + 24) = v10;
    sub_100089894(v5, v7, v8, v10);
    sub_10012B0D4(v14, v13, v12, v9);
  }
  sub_10012B0E8(v2, v3, v4, v6);
  return v5;
}

uint64_t sub_1003EA6B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  char *v15;
  _BYTE v17[144];

  v0 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v0);
  v1 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v1);
  v2 = sub_10002A750(&qword_100641740);
  __chkstk_darwin(v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_10002A750((uint64_t *)&unk_100654950);
  __chkstk_darwin(v5);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v8);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v17[-v12];
  sub_1003E9CC8((uint64_t)v4);
  v14 = sub_10002A750(&qword_100641750);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v4, 1, v14) != 1)
  {
    sub_10001F580((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F580((uint64_t)v7, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10002B1E8((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v15 = (char *)&loc_1003EA8B4 + 4 * byte_10053354C[swift_getEnumCaseMultiPayload(v10, v8)];
    __asm { BR              X10 }
  }
  sub_1000073A0((uint64_t)v4, &qword_100641740);
  return 0;
}

void sub_1003EA94C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  sub_1003EAD4C(v0, (_OWORD *)(v2 - 224));
  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v3 = *(_QWORD *)(v2 - 224);
  if (v3)
  {
    *(_QWORD *)(v2 - 168) = v3;
    sub_10002E37C((__int128 *)(v2 - 216), v2 - 160);
    v4 = *(void **)(v2 - 168);
    sub_10002E37C((__int128 *)(v2 - 160), v2 - 120);
    v5 = *(_QWORD *)(v2 - 96);
    v6 = *(_QWORD *)(v2 - 88);
    sub_10001413C((_QWORD *)(v2 - 120), v5);
    (*(void (**)(void *, uint64_t, uint64_t))(v6 + 24))(v4, v5, v6);

    sub_100027F10((_QWORD *)(v2 - 120));
    sub_10001F544(v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    JUMPOUT(0x1003EA91CLL);
  }
  JUMPOUT(0x1003EAB00);
}

void sub_1003EAA38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;

  sub_10001F544(v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  v6 = *(_QWORD *)(v2 + *(_QWORD *)(v4 + 3352));
  Strong = swift_unknownObjectWeakLoadStrong(v6 + 16);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(_QWORD *)(v6 + 24);
    ObjectType = swift_getObjectType(Strong, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 32))(v6, v1, ObjectType, v10);
    swift_unknownObjectRelease(v9);
    v12 = *(_QWORD *)(v5 - 200);
    sub_10001F544(v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    if (v12)
    {
      sub_10002E37C((__int128 *)(v5 - 224), v5 - 168);
      v13 = *(_QWORD *)(v5 - 144);
      v14 = *(_QWORD *)(v5 - 136);
      sub_10001413C((_QWORD *)(v5 - 168), v13);
      (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
      sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_100027F10((_QWORD *)(v5 - 168));
      JUMPOUT(0x1003EA91CLL);
    }
  }
  else
  {
    if (qword_10063D748 != -1)
      swift_once(&qword_10063D748, sub_1003E9A78);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100012DC4(v15, (uint64_t)qword_100659C50);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.fault.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

    *(_QWORD *)(v5 - 192) = 0;
    *(_OWORD *)(v5 - 224) = 0u;
    *(_OWORD *)(v5 - 208) = 0u;
    sub_10001F544(v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  }
  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  JUMPOUT(0x1003EA84CLL);
}

void sub_1003EAD4C(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, id, uint64_t, uint64_t);
  id v31;
  void *v32;
  id v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, id, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  _OWORD *v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  __int128 v70[2];

  v5 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v5);
  v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v8);
  v65 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v14);
  v16 = (void **)((char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(_QWORD *)(v2
                  + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_dragAndDropCapability);
  Strong = swift_unknownObjectWeakLoadStrong(v17 + 16);
  if (!Strong)
  {
    if (qword_10063D748 != -1)
      swift_once(&qword_10063D748, sub_1003E9A78);
    v35 = type metadata accessor for Logger(0);
    v36 = sub_100012DC4(v35, (uint64_t)qword_100659C50);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.fault.getter(v37);
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v39 = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v39, 2u);
      swift_slowDealloc(v39, -1, -1);
    }

    goto LABEL_23;
  }
  v20 = Strong;
  v66 = a2;
  v21 = *(_QWORD *)(v17 + 24);
  ObjectType = swift_getObjectType(Strong, v19);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 8))(v17, ObjectType, v21);
  swift_unknownObjectRelease(v20);
  sub_10002B1E8(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v13, v10) != 2)
  {
    swift_release();
    sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_22:
    a2 = v66;
    goto LABEL_23;
  }
  sub_10001F580((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  if ((sub_10037E330(a1) & 1) == 0)
    goto LABEL_21;
  v64 = v23;
  v24 = *v16;
  v25 = swift_unknownObjectWeakLoadStrong(v17 + 16);
  if (!v25)
  {
    v40 = qword_10063D748;
    v41 = v24;
    if (v40 != -1)
      swift_once(&qword_10063D748, sub_1003E9A78);
    v42 = type metadata accessor for Logger(0);
    v43 = sub_100012DC4(v42, (uint64_t)qword_100659C50);
    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.fault.getter(v44);
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v46 = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v46, 2u);
      swift_slowDealloc(v46, -1, -1);
    }

    goto LABEL_21;
  }
  v27 = v25;
  v28 = *(_QWORD *)(v17 + 24);
  v29 = swift_getObjectType(v25, v26);
  v30 = *(uint64_t (**)(uint64_t, id, uint64_t, uint64_t))(v28 + 24);
  v62 = v29;
  v63 = v30;
  v31 = v24;
  v32 = (void *)v63(v17, v31, v62, v28);

  swift_unknownObjectRelease(v27);
  if (!v32)
  {
LABEL_21:
    sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    swift_release();
    goto LABEL_22;
  }
  v33 = objc_msgSend(v32, "subtaskContext");

  a2 = v66;
  if (!v33)
  {
    sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);

    swift_release();
    goto LABEL_23;
  }
  v63 = (uint64_t (*)(uint64_t, id, uint64_t, uint64_t))v32;
  swift_retain();
  TTRMutableTreeStorage.parent(of:)(a1);
  v34 = swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48))(v7, 1, v10, v34) == 1)
  {
    sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);

    swift_release();
    sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100640EB0);
LABEL_23:
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
    return;
  }
  if (swift_getEnumCaseMultiPayload(v7, v10) != 1)
  {
    sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);

    swift_release();
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    goto LABEL_23;
  }
  v47 = (uint64_t)v7;
  v48 = v65;
  sub_10001F580(v47, v65, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  v49 = swift_unknownObjectWeakLoadStrong(v17 + 16);
  if (!v49)
  {
    if (qword_10063D748 != -1)
      swift_once(&qword_10063D748, sub_1003E9A78);
    v55 = type metadata accessor for Logger(0);
    v56 = sub_100012DC4(v55, (uint64_t)qword_100659C50);
    v57 = Logger.logObject.getter(v56);
    v58 = static os_log_type_t.fault.getter(v57);
    if (os_log_type_enabled(v57, v58))
    {
      v59 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v59 = 0;
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v59, 2u);
      v60 = v59;
      a2 = v66;
      swift_slowDealloc(v60, -1, -1);
    }

    v69 = 0;
    v67 = 0u;
    v68 = 0u;
    swift_release();
    sub_10001F544(v48, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    goto LABEL_35;
  }
  v51 = v49;
  v52 = *(_QWORD *)(v17 + 24);
  v53 = swift_getObjectType(v49, v50);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 32))(&v67, v17, v48, v53, v52);
  swift_release();
  swift_unknownObjectRelease(v51);
  v54 = *((_QWORD *)&v68 + 1);
  sub_10001F544(v48, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  if (!v54)
  {
LABEL_35:

    sub_1000073A0((uint64_t)&v67, &qword_100658980);
    goto LABEL_23;
  }
  sub_10002E37C(&v67, (uint64_t)v70);
  *(_QWORD *)a2 = v63;
  sub_10002E37C(v70, (uint64_t)a2 + 8);
}

uint64_t sub_1003EB3D4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  char v3;

  v1 = OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___isAfterPlaceholderReminder;
  v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___isAfterPlaceholderReminder);
  if (v2 == 2)
  {
    v3 = sub_1003EBDA4(v0);
    *(_BYTE *)(v0 + v1) = v3 & 1;
  }
  else
  {
    v3 = v2 & 1;
  }
  return v3 & 1;
}

uint64_t sub_1003EB41C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v58 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v53 = (uint64_t)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_10002A750(&qword_100654860);
  v9 = __chkstk_darwin(v59);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v53 - v12;
  v14 = sub_10002A750(&qword_100647AF8);
  __chkstk_darwin(v14);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_10002A750(&qword_100647B00);
  v17 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v57 = (uint64_t)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a1
                  + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_dragAndDropCapability);
  Strong = swift_unknownObjectWeakLoadStrong(v19 + 16);
  if (!Strong)
  {
    if (qword_10063D748 != -1)
      swift_once(&qword_10063D748, sub_1003E9A78);
    v40 = type metadata accessor for Logger(0);
    v41 = sub_100012DC4(v40, (uint64_t)qword_100659C50);
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.fault.getter(v42);
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v44 = 0;
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v44, 2u);
      swift_slowDealloc(v44, -1, -1);
    }

    goto LABEL_14;
  }
  v22 = Strong;
  v56 = a2;
  v23 = *(_QWORD *)(v19 + 24);
  ObjectType = swift_getObjectType(Strong, v21);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 8))(v19, ObjectType, v23);
  swift_unknownObjectRelease(v22);
  v26 = a1
      + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_parent;
  v27 = *(_QWORD *)(a1
                  + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_childIndex);
  v54 = v7;
  v55 = v6;
  v28 = 1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v11, 1, 1, v6);
  sub_1000B5F7C(v26, (uint64_t)v11);
  *(_QWORD *)&v11[*(int *)(v59 + 36)] = v27;
  sub_10000F614((uint64_t)v11, (uint64_t)v13, &qword_100654860);
  v29 = *(_QWORD *)(v25 + 32);
  v31 = swift_getObjectType(*(_QWORD *)(v25 + 24), v30);
  v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 24))(v13, 1, v31, v29);
  v33 = v32;
  if (*(_QWORD *)(v32 + 16))
  {
    sub_10000735C(v32 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), (uint64_t)v16, &qword_100647B00);
    v28 = 0;
  }
  v34 = v60;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v16, v28, 1, v60);
  swift_release();
  swift_bridgeObjectRelease(v33);
  sub_1000073A0((uint64_t)v13, &qword_100654860);
  v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, v34);
  v36 = v55;
  a2 = v56;
  v37 = v54;
  if (v35 == 1)
  {
    v38 = &qword_100647AF8;
    v39 = (uint64_t)v16;
LABEL_13:
    sub_1000073A0(v39, v38);
LABEL_14:
    v47 = sub_10002A750(&qword_100641750);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(a2, 1, 1, v47);
  }
  v45 = v57;
  sub_10000F614((uint64_t)v16, v57, &qword_100647B00);
  v46 = v58;
  sub_10000735C(v45, v58, (uint64_t *)&unk_100640EB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v46, 1, v36) == 1)
  {
    sub_1000073A0(v45, &qword_100647B00);
    v38 = (uint64_t *)&unk_100640EB0;
    v39 = v46;
    goto LABEL_13;
  }
  v49 = v53;
  sub_10001F580(v46, v53, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v50 = sub_10002A750(&qword_100641750);
  v51 = *(int *)(v50 + 48);
  sub_10001F580(v49, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v52 = *(_QWORD *)(v45 + *(int *)(v34 + 36));
  sub_1000073A0(v45, &qword_100647B00);
  *(_QWORD *)(a2 + v51) = v52;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(a2, 0, 1, v50);
}

uint64_t sub_1003EB8D8(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v13;

  v4 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v8);
  v9 = a1[3];
  v10 = a1[4];
  sub_10001413C(a1, v9);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10))
  {
    sub_10002B1E8(a2, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v11 = (char *)&loc_1003EB9FC + dword_1003EBD74[swift_getEnumCaseMultiPayload(v7, v5)];
    __asm { BR              X10 }
  }
  return 0;
}

BOOL sub_1003EBDA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  _QWORD v31[2];

  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v31 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)v31 - v9;
  v11 = *(_QWORD *)(a1
                  + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_childIndex);
  v12 = v11 - 1;
  if (v11 < 1)
    return 0;
  v13 = *(_QWORD *)(a1
                  + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_dragAndDropCapability);
  Strong = swift_unknownObjectWeakLoadStrong(v13 + 16);
  if (!Strong)
  {
    if (qword_10063D748 != -1)
      swift_once(&qword_10063D748, sub_1003E9A78);
    v25 = type metadata accessor for Logger(0);
    v26 = sub_100012DC4(v25, (uint64_t)qword_100659C50);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.fault.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }

    return 0;
  }
  v16 = Strong;
  v17 = *(_QWORD *)(v13 + 24);
  ObjectType = swift_getObjectType(Strong, v15);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 8))(v13, ObjectType, v17);
  swift_unknownObjectRelease(v16);
  v21 = *(_QWORD *)(v19 + 24);
  v20 = *(_QWORD *)(v19 + 32);
  swift_unknownObjectRetain(v21);
  swift_release();
  v23 = swift_getObjectType(v21, v22);
  v31[1] = v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 + 8) + 32))(v12, a1+ OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_parent, v23);
  swift_unknownObjectRelease(v21);
  sub_10001F580((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10001F580((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v24 = swift_getEnumCaseMultiPayload(v4, v2) == 4;
  sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  return v24;
}

uint64_t sub_1003EC000()
{
  uint64_t v0;

  sub_1000073A0(v0+ OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_parent, (uint64_t *)&unk_100640EB0);
  swift_release();
  sub_1000381B8(*(_QWORD *)(v0+ OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_additionalSubjectFilter), *(_QWORD *)(v0+ OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_additionalSubjectFilter+ 8));
  sub_10012B0D4(*(void **)(v0+ OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___creationTarget), *(void **)(v0+ OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___creationTarget+ 8), *(void **)(v0+ OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___creationTarget+ 16), *(_BYTE *)(v0+ OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___creationTarget+ 24));
  sub_1000073A0(v0+ OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___actualInsertionLocation, &qword_100647B28);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

void *sub_1003EC090()
{
  return sub_1003EA5D0();
}

uint64_t sub_1003EC0B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1003E9CC8(a1);
}

void sub_1003EC0D0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *v2;
  v6 = (uint64_t *)(*v2
                 + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_additionalSubjectFilter);
  v7 = *v6;
  v8 = v6[1];
  v9 = type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability.RemindersInsertionPlan();
  swift_allocObject(v9, 88, 7);
  swift_retain();
  swift_bridgeObjectRetain(a1);
  sub_100053DE4(v7, v8);
  v10 = sub_1003EDE00(v5, a1, v7, v8);
  sub_1000381B8(v7, v8);
  swift_release();
  swift_bridgeObjectRelease(a1);
  a2[3] = v9;
  a2[4] = (uint64_t)&off_1006054D0;
  *a2 = v10;
}

void *sub_1003EC198()
{
  uint64_t v0;
  void *v1;
  int v2;
  void *v3;
  void *v4;
  unsigned __int8 v5;
  unsigned __int8 v6;

  v1 = *(void **)(v0 + 32);
  v2 = *(unsigned __int8 *)(v0 + 40);
  v3 = v1;
  if (v2 == 254)
  {
    v3 = (void *)sub_1003EC224(v0);
    v4 = *(void **)(v0 + 32);
    *(_QWORD *)(v0 + 32) = v3;
    v5 = *(_BYTE *)(v0 + 40);
    *(_BYTE *)(v0 + 40) = v6;
    sub_10012B0FC(v3, v6);
    sub_10012B110(v4, v5);
  }
  sub_10012B124(v1, v2);
  return v3;
}

uint64_t sub_1003EC224(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v67 = sub_10002A750(&qword_100647B50);
  __chkstk_darwin(v67);
  v66 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v68 = (uint64_t)&v58 - v4;
  v5 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v5);
  v60 = (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_10002A750(&qword_100647B00);
  __chkstk_darwin(v61);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v63 = (uint64_t)&v58 - v10;
  v11 = sub_10002A750(&qword_100647B58);
  __chkstk_darwin(v11);
  v65 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_10002A750(&qword_100647B60);
  v62 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v59 = (uint64_t)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750(&qword_100641740);
  __chkstk_darwin(v14);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10002A750((uint64_t *)&unk_100654950);
  __chkstk_darwin(v17);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v69 = (uint64_t)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(*(_QWORD *)(a1 + 64)
                  + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_dragAndDropCapability);
  Strong = swift_unknownObjectWeakLoadStrong(v23 + 16);
  if (!Strong)
  {
    v31 = qword_10063D748;
    swift_retain();
    if (v31 != -1)
      swift_once(&qword_10063D748, sub_1003E9A78);
    v32 = type metadata accessor for Logger(0);
    v33 = sub_100012DC4(v32, (uint64_t)qword_100659C50);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.fault.getter(v34);
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v36, 2u);
      swift_slowDealloc(v36, -1, -1);
    }
    swift_release();

    return 0;
  }
  v26 = Strong;
  v58 = a1;
  v27 = *(_QWORD *)(v23 + 24);
  ObjectType = swift_getObjectType(Strong, v25);
  v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 8))(v23, ObjectType, v27);
  swift_unknownObjectRelease(v26);
  sub_1003E9CC8((uint64_t)v16);
  v30 = sub_10002A750(&qword_100641750);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v16, 1, v30) == 1)
  {
    sub_1000073A0((uint64_t)v16, &qword_100641740);
    swift_release();
    return 0;
  }
  v37 = v29;
  v38 = *(_QWORD *)&v16[*(int *)(v30 + 48)];
  v39 = *(int *)(v17 + 48);
  sub_10001F580((uint64_t)v16, (uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_QWORD *)&v19[v39] = v38;
  v40 = *(_QWORD *)&v19[*(int *)(v17 + 48)];
  v41 = (uint64_t)v19;
  v42 = v69;
  sub_10001F580(v41, v69, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v43 = v42;
  v44 = v60;
  sub_10002B1E8(v43, v60, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
  v45(v44, 0, 1, v20);
  v45((uint64_t)v8, 1, 1, v20);
  sub_100041F2C(v44, (uint64_t)v8, (uint64_t *)&unk_100640EB0);
  v46 = v61;
  *(_QWORD *)&v8[*(int *)(v61 + 36)] = v40;
  v47 = v63;
  sub_10000F614((uint64_t)v8, v63, &qword_100647B00);
  v48 = v58;
  v49 = *(_QWORD *)(v58 + 80);
  v60 = v37;
  v50 = *(_QWORD *)(v47 + *(int *)(v46 + 36));
  v51 = (uint64_t)v66;
  v45((uint64_t)v66, 1, 1, v20);
  swift_bridgeObjectRetain(v49);
  swift_retain();
  sub_1000B5F7C(v47, v51);
  *(_QWORD *)(v51 + *(int *)(v67 + 36)) = v50;
  v52 = v68;
  sub_10000F614(v51, v68, &qword_100647B50);
  v53 = (uint64_t)v65;
  TTRMutableTreeStorage.relativeInsertionPosition(forInsertingAt:skipping:)(v52, v49);
  swift_release();
  sub_1000073A0(v52, &qword_100647B50);
  swift_bridgeObjectRelease(v49);
  sub_1000073A0(v47, &qword_100647B00);
  v54 = v64;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v53, 1, v64) == 1)
  {
    sub_10001F544(v69, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_release();
    sub_1000073A0(v53, &qword_100647B58);
    return 0;
  }
  v56 = v59;
  sub_10000F614(v53, v59, &qword_100647B60);
  v57 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
  TTRRelativeInsertionPosition.optionalMapSibling<A>(_:)(&v70, sub_1003EE2C4, v48, v54, v57);
  swift_release();
  sub_1000073A0(v56, &qword_100647B60);
  sub_10001F544(v69, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  return v70;
}

void sub_1003EC83C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 64)
                 + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_dragAndDropCapability);
  Strong = swift_unknownObjectWeakLoadStrong(v5 + 16);
  if (Strong)
  {
    v8 = Strong;
    v9 = *(_QWORD *)(v5 + 24);
    ObjectType = swift_getObjectType(Strong, v7);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16);
    v12 = swift_retain();
    v13 = v11(v12, a1, ObjectType, v9);
    swift_release();
    swift_unknownObjectRelease(v8);
  }
  else
  {
    v14 = qword_10063D748;
    swift_retain();
    if (v14 != -1)
      swift_once(&qword_10063D748, sub_1003E9A78);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100012DC4(v15, (uint64_t)qword_100659C50);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.fault.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }
    swift_release();

    v13 = 0;
  }
  *a3 = v13;
}

double sub_1003EC998(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *inited;
  uint64_t v16;
  uint64_t v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  uint64_t ObjectType;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  int v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  double result;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77[3];
  __int128 v78[2];
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  _QWORD v82[5];
  unsigned __int8 v83;
  char v84[8];

  v3 = sub_10002A750(&qword_100641740);
  __chkstk_darwin(v3);
  v5 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v6 = *(_QWORD *)(v74 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v74);
  v73 = (uint64_t)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v72 = (uint64_t)&v69 - v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v69 - v11;
  v13 = swift_allocObject(&unk_100605538, 24, 7);
  *(_QWORD *)(v13 + 16) = a1;
  v14 = sub_10002A750(&qword_100647B08);
  inited = (_QWORD *)swift_initStackObject(v14, v84);
  *((_OWORD *)inited + 1) = xmmword_100520250;
  v16 = swift_allocObject(&unk_100605560, 32, 7);
  *(_QWORD *)(v16 + 16) = sub_10012AC94;
  *(_QWORD *)(v16 + 24) = v13;
  inited[4] = sub_1003EDE98;
  inited[5] = v16;
  v76 = v1;
  v17 = *(_QWORD *)(*(_QWORD *)(v1 + 64)
                  + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_dragAndDropCapability);
  Strong = swift_unknownObjectWeakLoadStrong(v17 + 16);
  v75 = v13;
  if (Strong)
  {
    v20 = Strong;
    v71 = v7;
    v70 = v6;
    v21 = a1;
    v22 = *(_QWORD *)(v17 + 24);
    v23 = v5;
    v24 = inited;
    v25 = v12;
    ObjectType = swift_getObjectType(Strong, v19);
    v27 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 56);
    swift_bridgeObjectRetain(v21);
    swift_retain();
    v28 = ObjectType;
    v12 = v25;
    inited = v24;
    v5 = v23;
    v29 = v22;
    a1 = v21;
    v6 = v70;
    v7 = v71;
    v30 = v27(v28, v29);
    swift_unknownObjectRelease(v20);
    if ((v30 & 1) == 0)
    {
LABEL_7:
      v32 = 0;
      v33 = v76;
      v34 = *(_QWORD *)(v76 + 48);
      if (!v34)
        goto LABEL_8;
LABEL_13:
      v46 = *(_QWORD *)(v33 + 56);
      v47 = swift_allocObject(&unk_100605588, 32, 7);
      *(_QWORD *)(v47 + 16) = v34;
      *(_QWORD *)(v47 + 24) = v46;
      v49 = inited[2];
      v48 = inited[3];
      swift_retain_n(v46, 2);
      if (v49 >= v48 >> 1)
        inited = sub_100455AFC((_QWORD *)(v48 > 1), v49 + 1, 1, inited);
      inited[2] = v49 + 1;
      v50 = &inited[2 * v49];
      v50[4] = sub_1003F33D4;
      v50[5] = v47;
      sub_1000381B8(v34, v46);
      if (v32)
        goto LABEL_9;
      goto LABEL_16;
    }
  }
  else
  {
    swift_bridgeObjectRetain(a1);
    swift_retain();
  }
  sub_1003E9CC8((uint64_t)v5);
  v31 = sub_10002A750(&qword_100641750);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v5, 1, v31))
  {
    sub_1000073A0((uint64_t)v5, &qword_100641740);
    goto LABEL_7;
  }
  v36 = v72;
  sub_10002B1E8((uint64_t)v5, v72, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_1000073A0((uint64_t)v5, &qword_100641740);
  sub_10001F580(v36, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v37 = swift_allocObject(&unk_1006055B0, 24, 7);
  v33 = v76;
  swift_weakInit(v37 + 16, v76);
  v38 = v73;
  sub_10002B1E8((uint64_t)v12, v73, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v39 = *(unsigned __int8 *)(v6 + 80);
  v40 = (v39 + 24) & ~v39;
  v41 = swift_allocObject(&unk_1006055D8, v40 + v7, v39 | 7);
  *(_QWORD *)(v41 + 16) = v37;
  sub_10001F580(v38, v41 + v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v42 = swift_allocObject(&unk_100605600, 32, 7);
  *(_QWORD *)(v42 + 16) = sub_1003EE260;
  *(_QWORD *)(v42 + 24) = v41;
  v44 = inited[2];
  v43 = inited[3];
  swift_retain();
  if (v44 >= v43 >> 1)
    inited = sub_100455AFC((_QWORD *)(v43 > 1), v44 + 1, 1, inited);
  inited[2] = v44 + 1;
  v45 = &inited[2 * v44];
  v45[4] = sub_1003F33D4;
  v45[5] = v42;
  swift_release();
  sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v32 = 1;
  v34 = *(_QWORD *)(v33 + 48);
  if (v34)
    goto LABEL_13;
LABEL_8:
  if (v32)
  {
LABEL_9:
    v35 = *(_QWORD *)(a1 + 16) == 0;
    goto LABEL_17;
  }
LABEL_16:
  v35 = 1;
LABEL_17:
  type metadata accessor for TTRProcessMoveSubjects(0);
  v82[0] = a1;
  swift_bridgeObjectRetain(inited);
  v51 = sub_10002A750(&qword_100647B10);
  v52 = sub_100023FEC(&qword_100647B18, &qword_100647B10, (uint64_t)&protocol conformance descriptor for [A]);
  v53 = static TTRProcessMoveSubjects.process<A>(moveSubjects:disallowOverride:moveFilters:)(v82, v35, inited, v51, v52);
  v55 = v54;
  swift_bridgeObjectRelease(inited);
  *(_BYTE *)(v33 + 24) = v53 & 1;
  v56 = *(_QWORD *)(v33 + 16);
  *(_QWORD *)(v33 + 16) = v55;
  swift_bridgeObjectRelease(v56);
  v57 = *(_QWORD *)(v33 + 16);
  v58 = *(_QWORD *)(v57 + 16);
  if (v58)
  {
    v72 = v52;
    v73 = v51;
    v59 = v57 + 32;
    swift_bridgeObjectRetain(v57);
    v60 = _swiftEmptyArrayStorage;
    do
    {
      sub_10000735C(v59, (uint64_t)v82, &qword_100647B20);
      sub_100010634((uint64_t)v82, (uint64_t)v77);
      v61 = v83;
      sub_10002E37C(v77, (uint64_t)v78);
      if (v61 == 1)
      {
        sub_10002E37C(v78, (uint64_t)&v79);
      }
      else
      {
        sub_100027F10(v78);
        v81 = 0;
        v79 = 0u;
        v80 = 0u;
      }
      sub_1000073A0((uint64_t)v82, &qword_100647B20);
      if (*((_QWORD *)&v80 + 1))
      {
        sub_10002E37C(&v79, (uint64_t)v77);
        sub_10002E37C(v77, (uint64_t)&v79);
        if ((swift_isUniquelyReferenced_nonNull_native(v60) & 1) == 0)
          v60 = sub_100455AE8(0, v60[2] + 1, 1, v60);
        v63 = v60[2];
        v62 = v60[3];
        if (v63 >= v62 >> 1)
          v60 = sub_100455AE8((_QWORD *)(v62 > 1), v63 + 1, 1, v60);
        v60[2] = v63 + 1;
        sub_10002E37C(&v79, (uint64_t)&v60[5 * v63 + 4]);
      }
      else
      {
        sub_1000073A0((uint64_t)&v79, (uint64_t *)&unk_10064A020);
      }
      v59 += 48;
      --v58;
    }
    while (v58);
    swift_bridgeObjectRelease(v57);
    v33 = v76;
    v51 = v73;
    v52 = v72;
  }
  else
  {
    v60 = _swiftEmptyArrayStorage;
  }
  v64 = *(_QWORD *)(v33 + 72);
  *(_QWORD *)(v33 + 72) = v60;
  swift_bridgeObjectRelease(v64);
  v65 = *(_QWORD *)(v33 + 72);
  if (!v65)
    __break(1u);
  v82[0] = *(_QWORD *)(v33 + 72);
  swift_bridgeObjectRetain(v65);
  v66 = Sequence.completeCompactMap<A>(_:)(sub_1003EDB64, 0, v51, v74, v52);
  swift_bridgeObjectRelease(inited);
  swift_bridgeObjectRelease(v65);
  swift_release();
  v67 = *(_QWORD *)(v33 + 80);
  *(_QWORD *)(v33 + 80) = v66;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v67).n128_u64[0];
  return result;
}

uint64_t sub_1003ED0BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *(_QWORD *)(v1 + 72);
  if (!v2)
  {
    __break(1u);
    JUMPOUT(0x1003ED77CLL);
  }
  v23 = (uint64_t)_swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    v5 = v2 + 32;
    swift_bridgeObjectRetain(v2);
    do
    {
      sub_100010634(v5, (uint64_t)v20);
      v7 = v21;
      v8 = v22;
      sub_10001413C(v20, v21);
      v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
      v10 = sub_100027F10(v20);
      if (v9)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v12 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v11 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v12 >= v11 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
        v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v9);
        specialized Array._endMutation()(v6);
      }
      v5 += 40;
      --v4;
    }
    while (v4);
    v13 = v23;
  }
  else
  {
    swift_bridgeObjectRetain(v2);
    v13 = (uint64_t)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v2);
  if (!((unint64_t)v13 >> 62))
  {
    if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_15;
    goto LABEL_13;
  }
  if (v13 < 0)
    v18 = v13;
  else
    v18 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v13);
  v19 = _CocoaArrayWrapper.endIndex.getter(v18);
  swift_bridgeObjectRelease(v13);
  if (v19)
  {
LABEL_13:
    sub_1003EC198();
    if (v14 != -1)
    {
      sub_1003EA5D0();
      __asm { BR              X10 }
    }
  }
LABEL_15:
  swift_bridgeObjectRelease(v13);
  v16 = type metadata accessor for TTRRemindersListMovingRemindersParams(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 1, 1, v16);
}

uint64_t sub_1003ED798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  _QWORD v34[2];

  v1 = sub_10002A750(&qword_100654860);
  __chkstk_darwin(v1);
  v3 = (char *)v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)v34 - v5;
  v7 = *(_QWORD *)(v0 + 80);
  if (!v7)
    return 0;
  v8 = *(_QWORD *)(v0 + 64);
  v9 = *(_QWORD *)(v8
                 + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_dragAndDropCapability);
  Strong = swift_unknownObjectWeakLoadStrong(v9 + 16);
  if (!Strong)
  {
    v27 = qword_10063D748;
    swift_retain();
    swift_bridgeObjectRetain(v7);
    if (v27 != -1)
      swift_once(&qword_10063D748, sub_1003E9A78);
    v28 = type metadata accessor for Logger(0);
    v29 = sub_100012DC4(v28, (uint64_t)qword_100659C50);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.fault.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v32, 2u);
      swift_slowDealloc(v32, -1, -1);
    }
    swift_release();

    swift_bridgeObjectRelease(v7);
    return 0;
  }
  v12 = Strong;
  v13 = *(_QWORD *)(v9 + 24);
  ObjectType = swift_getObjectType(Strong, v11);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 8))(v9, ObjectType, v13);
  swift_bridgeObjectRetain(v7);
  swift_unknownObjectRelease(v12);
  v16 = v8
      + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_parent;
  v17 = *(_QWORD *)(v8
                  + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_childIndex);
  v18 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v3, 1, 1, v18);
  sub_1000B5F7C(v16, (uint64_t)v3);
  *(_QWORD *)&v3[*(int *)(v1 + 36)] = v17;
  sub_10000F614((uint64_t)v3, (uint64_t)v6, &qword_100654860);
  v34[1] = v7;
  v19 = sub_10002A750(&qword_100649DF0);
  v20 = sub_10002A750(&qword_1006445E0);
  v21 = sub_100023FEC((unint64_t *)&qword_100649EE0, &qword_100649DF0, (uint64_t)&protocol conformance descriptor for [A]);
  v22 = Sequence.completeCompactMap<A>(_:)(sub_1000B5FC4, v15, v19, v20, v21);
  if (v22)
  {
    v23 = v22;
    sub_10002A750(&qword_1006445E8);
    v24 = sub_100023FEC(&qword_1006445F0, &qword_100654860, (uint64_t)&protocol conformance descriptor for TTRDerivedTreeLocation<A>);
    v25 = sub_100023FEC(&qword_1006445F8, &qword_100654860, (uint64_t)&protocol conformance descriptor for TTRDerivedTreeLocation<A>);
    v26 = static TTRMutableTreeStorage.steps<A>(forMoving:to:)(v23, v6, v1, v24, v25);
    swift_bridgeObjectRelease(v7);
    swift_release();
    swift_bridgeObjectRelease(v23);
  }
  else
  {
    swift_bridgeObjectRelease(v7);
    swift_release();
    v26 = 0;
  }
  sub_1000073A0((uint64_t)v6, &qword_100654860);
  return v26;
}

uint64_t sub_1003EDAD0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  char v7;
  _BYTE v8[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  result = swift_weakLoadStrong(v5);
  if (result)
  {
    swift_retain();
    v7 = sub_1003EB8D8(a1, a3);
    swift_release();
    swift_release();
    if ((v7 & 1) != 0)
      return 0;
    else
      return 2;
  }
  return result;
}

uint64_t sub_1003EDB64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability();
  sub_1003E98E4(a1, (uint64_t)v6);
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
    type metadata accessor for TTRSmartListDragAndDropPresenterCapability();
    return sub_100126458(a1, a2);
  }
  else
  {
    sub_10001F580((uint64_t)v6, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
  }
}

void *sub_1003EDC70()
{
  return sub_1003EC198();
}

uint64_t sub_1003EDC90()
{
  return sub_1003ED798();
}

uint64_t sub_1003EDCB0@<X0>(uint64_t a1@<X8>)
{
  return sub_1003ED0BC(a1);
}

uint64_t type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability()
{
  return objc_opt_self(_TtC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapability);
}

uint64_t sub_1003EDCF0()
{
  return type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability.RemindersInsertionRequest(0);
}

uint64_t type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability.RemindersInsertionRequest(uint64_t a1)
{
  return sub_100007328(a1, qword_100659D68, (uint64_t)&nominal type descriptor for TTRShowRemindersInListDragAndDropPresenterCapability.RemindersInsertionRequest);
}

void sub_1003EDD0C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[7];

  sub_1000B5C9C(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v6[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    v6[3] = &unk_1005338A0;
    v6[4] = &unk_1005338B8;
    sub_10012AA70(319);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      v6[6] = &unk_1005338D0;
      swift_updateClassMetadata2(a1, 256, 7, v6, a1 + 80);
    }
  }
}

uint64_t type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability.RemindersInsertionPlan()
{
  return objc_opt_self(_TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C22RemindersInsertionPlan);
}

uint64_t type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability.MoveReminderSubjectForItem(uint64_t a1)
{
  return sub_100007328(a1, qword_100659F58, (uint64_t)&nominal type descriptor for TTRShowRemindersInListDragAndDropPresenterCapability.MoveReminderSubjectForItem);
}

uint64_t sub_1003EDE00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = _swiftEmptyArrayStorage;
  *(_BYTE *)(v4 + 24) = 1;
  *(_QWORD *)(v4 + 32) = 0;
  *(_BYTE *)(v4 + 40) = -2;
  *(_QWORD *)(v4 + 72) = 0;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 56) = a4;
  *(_QWORD *)(v4 + 64) = a1;
  *(_QWORD *)(v4 + 48) = a3;
  swift_retain();
  sub_100053DE4(a3, a4);
  sub_1003EC998(a2);
  return v4;
}

uint64_t sub_1003EDE74()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003EDE98@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_10012A604(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1003EDEA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release();
  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1003EE260(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8) + 80);
  return sub_1003EDAD0(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_1003EE2A0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1003EE2C4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_1003EC83C(a1, v2, a2);
}

uint64_t sub_1003EE2CC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003EE2F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        break;
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        break;
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:
  swift_release();
  return swift_deallocObject(v0, ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

uint64_t sub_1003EE6C0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1003E9E4C(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1003EE710()
{
  return sub_1003E9B08();
}

char *sub_1003EE718(char *a1, char **a2, int *a3)
{
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void **v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(void **, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void **v32;
  void **v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(void **, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void **v41;
  void **v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(void **, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  void **v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  void **v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  void **v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t, __n128);
  __n128 v86;
  uint64_t v87;
  char *v88;
  _QWORD *v89;
  uint64_t v90;
  void *v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  int *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  int *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  id v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  id v167;
  void *v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void *v174;
  id v175;
  void *v176;
  id v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  id v184;
  void *v185;
  id v186;
  uint64_t v187;
  uint64_t v188;
  void *v189;
  uint64_t v190;
  void *v191;
  id v192;
  id v193;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  unsigned __int8 v200;
  char v201;
  unsigned __int8 v202;
  char v203;
  int *v204;
  int *v205;
  uint64_t v206;
  uint64_t v207;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v14[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v7))
    {
      case 0u:
        v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v204 = v6;
        v206 = v7;
        switch(swift_getEnumCaseMultiPayload(a2, v8))
        {
          case 1u:
            v9 = *a2;
            *(_QWORD *)a1 = *a2;
            v10 = v9;
            v11 = a1;
            v12 = v8;
            v13 = 1;
            goto LABEL_43;
          case 2u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(a1, a2, v95);
            v11 = a1;
            v12 = v8;
            v13 = 2;
            goto LABEL_43;
          case 3u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
            v11 = a1;
            v12 = v8;
            v13 = 3;
            goto LABEL_43;
          case 4u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
            v11 = a1;
            v12 = v8;
            v13 = 4;
            goto LABEL_43;
          case 5u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, a2, v98);
            v11 = a1;
            v12 = v8;
            v13 = 5;
            goto LABEL_43;
          case 6u:
            v99 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(a1, a2, v99);
            v11 = a1;
            v12 = v8;
            v13 = 6;
            goto LABEL_43;
          case 8u:
            v100 = *a2;
            *(_QWORD *)a1 = *a2;
            v101 = v100;
            v11 = a1;
            v12 = v8;
            v13 = 8;
            goto LABEL_43;
          case 9u:
            v102 = *a2;
            *(_QWORD *)a1 = *a2;
            v103 = v102;
            v11 = a1;
            v12 = v8;
            v13 = 9;
LABEL_43:
            swift_storeEnumTagMultiPayload(v11, v12, v13);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
            break;
        }
        v104 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v105 = v104[5];
        v106 = &a1[v105];
        v107 = (char *)a2 + v105;
        v108 = *(uint64_t *)((char *)a2 + v105 + 8);
        if (v108)
        {
          *(_QWORD *)v106 = *(_QWORD *)v107;
          *((_QWORD *)v106 + 1) = v108;
          v109 = (void *)*((_QWORD *)v107 + 2);
          v110 = *((_QWORD *)v107 + 3);
          v111 = *((_QWORD *)v107 + 4);
          v112 = *((_QWORD *)v107 + 5);
          v113 = *((_QWORD *)v107 + 6);
          v195 = *((_QWORD *)v107 + 7);
          v200 = v107[64];
          swift_bridgeObjectRetain(v108);
          sub_10003E1F0(v109, v110, v111, v112, v113, v195, v200);
          *((_QWORD *)v106 + 2) = v109;
          *((_QWORD *)v106 + 3) = v110;
          *((_QWORD *)v106 + 4) = v111;
          *((_QWORD *)v106 + 5) = v112;
          *((_QWORD *)v106 + 6) = v113;
          *((_QWORD *)v106 + 7) = v195;
          v106[64] = v200;
          *(_DWORD *)(v106 + 65) = *(_DWORD *)(v107 + 65);
          v114 = v107[120];
          if (v114 == 255)
          {
            v115 = *(_OWORD *)(v107 + 88);
            *(_OWORD *)(v106 + 72) = *(_OWORD *)(v107 + 72);
            *(_OWORD *)(v106 + 88) = v115;
            *(_OWORD *)(v106 + 104) = *(_OWORD *)(v107 + 104);
            v106[120] = v107[120];
          }
          else
          {
            v201 = v114 & 1;
            v121 = (void *)*((_QWORD *)v107 + 9);
            v120 = *((_QWORD *)v107 + 10);
            v122 = *((_QWORD *)v107 + 11);
            v123 = *((_QWORD *)v107 + 12);
            v124 = *((_QWORD *)v107 + 13);
            v196 = *((_QWORD *)v107 + 14);
            sub_10002B764(v121, v120, v122, v123, v124, v196, v114 & 1);
            *((_QWORD *)v106 + 9) = v121;
            *((_QWORD *)v106 + 10) = v120;
            *((_QWORD *)v106 + 11) = v122;
            *((_QWORD *)v106 + 12) = v123;
            *((_QWORD *)v106 + 13) = v124;
            *((_QWORD *)v106 + 14) = v196;
            v106[120] = v201;
          }
          v6 = v204;
          v119 = v206;
          v106[121] = v107[121];
        }
        else
        {
          v116 = *((_OWORD *)v107 + 5);
          *((_OWORD *)v106 + 4) = *((_OWORD *)v107 + 4);
          *((_OWORD *)v106 + 5) = v116;
          *((_OWORD *)v106 + 6) = *((_OWORD *)v107 + 6);
          *(_OWORD *)(v106 + 106) = *(_OWORD *)(v107 + 106);
          v117 = *((_OWORD *)v107 + 1);
          *(_OWORD *)v106 = *(_OWORD *)v107;
          *((_OWORD *)v106 + 1) = v117;
          v118 = *((_OWORD *)v107 + 3);
          *((_OWORD *)v106 + 2) = *((_OWORD *)v107 + 2);
          *((_OWORD *)v106 + 3) = v118;
          v119 = v7;
        }
        a1[v104[6]] = *((_BYTE *)a2 + v104[6]);
        a1[v104[7]] = *((_BYTE *)a2 + v104[7]);
        a1[v104[8]] = *((_BYTE *)a2 + v104[8]);
        a1[v104[9]] = *((_BYTE *)a2 + v104[9]);
        a1[v104[10]] = *((_BYTE *)a2 + v104[10]);
        v125 = v104[11];
        v126 = *(char **)((char *)a2 + v125);
        *(_QWORD *)&a1[v125] = v126;
        v127 = v126;
        v50 = a1;
        v51 = v119;
        v52 = 0;
        goto LABEL_100;
      case 1u:
        v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v205 = v6;
        v207 = v7;
        switch(swift_getEnumCaseMultiPayload(a2, v15))
        {
          case 1u:
            v16 = *a2;
            *(_QWORD *)a1 = *a2;
            v17 = v16;
            v18 = a1;
            v19 = v15;
            v20 = 1;
            goto LABEL_59;
          case 2u:
            v128 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(a1, a2, v128);
            v18 = a1;
            v19 = v15;
            v20 = 2;
            goto LABEL_59;
          case 3u:
            v129 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(a1, a2, v129);
            v18 = a1;
            v19 = v15;
            v20 = 3;
            goto LABEL_59;
          case 4u:
            v130 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(a1, a2, v130);
            v18 = a1;
            v19 = v15;
            v20 = 4;
            goto LABEL_59;
          case 5u:
            v131 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(a1, a2, v131);
            v18 = a1;
            v19 = v15;
            v20 = 5;
            goto LABEL_59;
          case 6u:
            v132 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(a1, a2, v132);
            v18 = a1;
            v19 = v15;
            v20 = 6;
            goto LABEL_59;
          case 8u:
            v133 = *a2;
            *(_QWORD *)a1 = *a2;
            v134 = v133;
            v18 = a1;
            v19 = v15;
            v20 = 8;
            goto LABEL_59;
          case 9u:
            v135 = *a2;
            *(_QWORD *)a1 = *a2;
            v136 = v135;
            v18 = a1;
            v19 = v15;
            v20 = 9;
LABEL_59:
            swift_storeEnumTagMultiPayload(v18, v19, v20);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
            break;
        }
        v137 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v138 = v137[5];
        v139 = &a1[v138];
        v140 = (char *)a2 + v138;
        v141 = *(uint64_t *)((char *)a2 + v138 + 8);
        if (v141)
        {
          *(_QWORD *)v139 = *(_QWORD *)v140;
          *((_QWORD *)v139 + 1) = v141;
          v142 = (void *)*((_QWORD *)v140 + 2);
          v143 = *((_QWORD *)v140 + 3);
          v144 = *((_QWORD *)v140 + 4);
          v145 = *((_QWORD *)v140 + 5);
          v146 = *((_QWORD *)v140 + 6);
          v197 = *((_QWORD *)v140 + 7);
          v202 = v140[64];
          swift_bridgeObjectRetain(v141);
          sub_10003E1F0(v142, v143, v144, v145, v146, v197, v202);
          *((_QWORD *)v139 + 2) = v142;
          *((_QWORD *)v139 + 3) = v143;
          *((_QWORD *)v139 + 4) = v144;
          *((_QWORD *)v139 + 5) = v145;
          *((_QWORD *)v139 + 6) = v146;
          *((_QWORD *)v139 + 7) = v197;
          v139[64] = v202;
          *(_DWORD *)(v139 + 65) = *(_DWORD *)(v140 + 65);
          v147 = v140[120];
          if (v147 == 255)
          {
            v148 = *(_OWORD *)(v140 + 88);
            *(_OWORD *)(v139 + 72) = *(_OWORD *)(v140 + 72);
            *(_OWORD *)(v139 + 88) = v148;
            *(_OWORD *)(v139 + 104) = *(_OWORD *)(v140 + 104);
            v139[120] = v140[120];
          }
          else
          {
            v203 = v147 & 1;
            v154 = (void *)*((_QWORD *)v140 + 9);
            v153 = *((_QWORD *)v140 + 10);
            v155 = *((_QWORD *)v140 + 11);
            v156 = *((_QWORD *)v140 + 12);
            v157 = *((_QWORD *)v140 + 13);
            v198 = *((_QWORD *)v140 + 14);
            sub_10002B764(v154, v153, v155, v156, v157, v198, v147 & 1);
            *((_QWORD *)v139 + 9) = v154;
            *((_QWORD *)v139 + 10) = v153;
            *((_QWORD *)v139 + 11) = v155;
            *((_QWORD *)v139 + 12) = v156;
            *((_QWORD *)v139 + 13) = v157;
            *((_QWORD *)v139 + 14) = v198;
            v139[120] = v203;
          }
          v6 = v205;
          v152 = v207;
          v139[121] = v140[121];
        }
        else
        {
          v149 = *((_OWORD *)v140 + 5);
          *((_OWORD *)v139 + 4) = *((_OWORD *)v140 + 4);
          *((_OWORD *)v139 + 5) = v149;
          *((_OWORD *)v139 + 6) = *((_OWORD *)v140 + 6);
          *(_OWORD *)(v139 + 106) = *(_OWORD *)(v140 + 106);
          v150 = *((_OWORD *)v140 + 1);
          *(_OWORD *)v139 = *(_OWORD *)v140;
          *((_OWORD *)v139 + 1) = v150;
          v151 = *((_OWORD *)v140 + 3);
          *((_OWORD *)v139 + 2) = *((_OWORD *)v140 + 2);
          *((_OWORD *)v139 + 3) = v151;
          v152 = v7;
        }
        a1[v137[6]] = *((_BYTE *)a2 + v137[6]);
        a1[v137[7]] = *((_BYTE *)a2 + v137[7]);
        a1[v137[8]] = *((_BYTE *)a2 + v137[8]);
        a1[v137[9]] = *((_BYTE *)a2 + v137[9]);
        a1[v137[10]] = *((_BYTE *)a2 + v137[10]);
        v158 = v137[11];
        v159 = *(char **)((char *)a2 + v158);
        *(_QWORD *)&a1[v158] = v159;
        v160 = v159;
        v50 = a1;
        v51 = v152;
        v52 = 1;
        goto LABEL_100;
      case 2u:
        v21 = *a2;
        *(_QWORD *)a1 = *a2;
        v22 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v23 = (void **)&a1[v22];
        v24 = (void **)((char *)a2 + v22);
        v25 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v26 = *(_QWORD *)(v25 - 8);
        v27 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v26 + 48);
        v28 = v21;
        if (v27(v24, 1, v25))
        {
          v29 = sub_10002A750(&qword_100644980);
          memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v24, v25))
          {
            case 1u:
              v65 = *v24;
              *v23 = *v24;
              v66 = v65;
              v67 = v23;
              v68 = v25;
              v69 = 1;
              goto LABEL_75;
            case 2u:
              v161 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v161 - 8) + 16))(v23, v24, v161);
              v67 = v23;
              v68 = v25;
              v69 = 2;
              goto LABEL_75;
            case 3u:
              v162 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v162 - 8) + 16))(v23, v24, v162);
              v67 = v23;
              v68 = v25;
              v69 = 3;
              goto LABEL_75;
            case 4u:
              v163 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v163 - 8) + 16))(v23, v24, v163);
              v67 = v23;
              v68 = v25;
              v69 = 4;
              goto LABEL_75;
            case 5u:
              v164 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v164 - 8) + 16))(v23, v24, v164);
              v67 = v23;
              v68 = v25;
              v69 = 5;
              goto LABEL_75;
            case 6u:
              v165 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(v23, v24, v165);
              v67 = v23;
              v68 = v25;
              v69 = 6;
              goto LABEL_75;
            case 8u:
              v166 = *v24;
              *v23 = *v24;
              v167 = v166;
              v67 = v23;
              v68 = v25;
              v69 = 8;
              goto LABEL_75;
            case 9u:
              v168 = *v24;
              *v23 = *v24;
              v169 = v168;
              v67 = v23;
              v68 = v25;
              v69 = 9;
LABEL_75:
              swift_storeEnumTagMultiPayload(v67, v68, v69);
              break;
            default:
              memcpy(v23, v24, *(_QWORD *)(v26 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
        }
        v50 = a1;
        v51 = v7;
        v52 = 2;
        goto LABEL_100;
      case 3u:
        v30 = *a2;
        *(_QWORD *)a1 = *a2;
        v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v32 = (void **)&a1[v31];
        v33 = (void **)((char *)a2 + v31);
        v34 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v35 = *(_QWORD *)(v34 - 8);
        v36 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v35 + 48);
        v37 = v30;
        if (v36(v33, 1, v34))
        {
          v38 = sub_10002A750(&qword_100644980);
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v33, v34))
          {
            case 1u:
              v70 = *v33;
              *v32 = *v33;
              v71 = v70;
              v72 = v32;
              v73 = v34;
              v74 = 1;
              goto LABEL_97;
            case 2u:
              v170 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v170 - 8) + 16))(v32, v33, v170);
              v72 = v32;
              v73 = v34;
              v74 = 2;
              goto LABEL_97;
            case 3u:
              v171 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(v32, v33, v171);
              v72 = v32;
              v73 = v34;
              v74 = 3;
              goto LABEL_97;
            case 4u:
              v172 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v32, v33, v172);
              v72 = v32;
              v73 = v34;
              v74 = 4;
              goto LABEL_97;
            case 5u:
              v187 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v32, v33, v187);
              v72 = v32;
              v73 = v34;
              v74 = 5;
              goto LABEL_97;
            case 6u:
              v173 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v32, v33, v173);
              v72 = v32;
              v73 = v34;
              v74 = 6;
              goto LABEL_97;
            case 8u:
              v174 = *v33;
              *v32 = *v33;
              v175 = v174;
              v72 = v32;
              v73 = v34;
              v74 = 8;
              goto LABEL_97;
            case 9u:
              v176 = *v33;
              *v32 = *v33;
              v177 = v176;
              v72 = v32;
              v73 = v34;
              v74 = 9;
LABEL_97:
              swift_storeEnumTagMultiPayload(v72, v73, v74);
              break;
            default:
              memcpy(v32, v33, *(_QWORD *)(v35 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
        }
        v50 = a1;
        v51 = v7;
        v52 = 3;
        goto LABEL_100;
      case 4u:
        v39 = *a2;
        *(_QWORD *)a1 = *a2;
        v40 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v41 = (void **)&a1[v40];
        v42 = (void **)((char *)a2 + v40);
        v43 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v44 = *(_QWORD *)(v43 - 8);
        v45 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v44 + 48);
        v46 = v39;
        if (v45(v42, 1, v43))
        {
          v47 = sub_10002A750(&qword_100644980);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v42, v43))
          {
            case 1u:
              v75 = *v42;
              *v41 = *v42;
              v76 = v75;
              v77 = v41;
              v78 = v43;
              v79 = 1;
              goto LABEL_93;
            case 2u:
              v178 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v178 - 8) + 16))(v41, v42, v178);
              v77 = v41;
              v78 = v43;
              v79 = 2;
              goto LABEL_93;
            case 3u:
              v179 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v41, v42, v179);
              v77 = v41;
              v78 = v43;
              v79 = 3;
              goto LABEL_93;
            case 4u:
              v180 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v41, v42, v180);
              v77 = v41;
              v78 = v43;
              v79 = 4;
              goto LABEL_93;
            case 5u:
              v181 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v41, v42, v181);
              v77 = v41;
              v78 = v43;
              v79 = 5;
              goto LABEL_93;
            case 6u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v41, v42, v182);
              v77 = v41;
              v78 = v43;
              v79 = 6;
              goto LABEL_93;
            case 8u:
              v183 = *v42;
              *v41 = *v42;
              v184 = v183;
              v77 = v41;
              v78 = v43;
              v79 = 8;
              goto LABEL_93;
            case 9u:
              v185 = *v42;
              *v41 = *v42;
              v186 = v185;
              v77 = v41;
              v78 = v43;
              v79 = 9;
LABEL_93:
              swift_storeEnumTagMultiPayload(v77, v78, v79);
              break;
            default:
              memcpy(v41, v42, *(_QWORD *)(v44 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
        }
        v50 = a1;
        v51 = v7;
        v52 = 4;
        goto LABEL_100;
      case 5u:
        *(_QWORD *)a1 = *a2;
        a1[8] = *((_BYTE *)a2 + 8);
        *(_WORD *)(a1 + 9) = *(_WORD *)((char *)a2 + 9);
        v48 = a2[2];
        *((_QWORD *)a1 + 2) = v48;
        v49 = v48;
        v50 = a1;
        v51 = v7;
        v52 = 5;
        goto LABEL_100;
      case 6u:
        v60 = *a2;
        *(_QWORD *)a1 = *a2;
        v61 = v60;
        v50 = a1;
        v51 = v7;
        v52 = 6;
        goto LABEL_100;
      case 7u:
        v53 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v54 = *(_QWORD *)(v53 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v54 + 48))(a2, 1, v53))
        {
          v55 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
        }
        else
        {
          v80 = *a2;
          *(_QWORD *)a1 = *a2;
          v81 = *(int *)(v53 + 20);
          v199 = &a1[v81];
          v82 = (char *)a2 + v81;
          v83 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v84 = v7;
          v85 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v83 - 8) + 16);
          v86 = swift_bridgeObjectRetain(v80);
          v85(v199, v82, v83, v86);
          v7 = v84;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(a1, 0, 1, v53);
        }
        v87 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v88 = &a1[v87];
        v89 = (char **)((char *)a2 + v87);
        v90 = v89[1];
        if (v90)
        {
          *(_QWORD *)v88 = *v89;
          *((_QWORD *)v88 + 1) = v90;
          v91 = (void *)v89[2];
          *((_QWORD *)v88 + 2) = v91;
          swift_bridgeObjectRetain(v90);
          v92 = v91;
        }
        else
        {
          *(_OWORD *)v88 = *(_OWORD *)v89;
          *((_QWORD *)v88 + 2) = v89[2];
        }
        v50 = a1;
        v51 = v7;
        v52 = 7;
        goto LABEL_100;
      case 8u:
        v62 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v63 = *(_QWORD *)(v62 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v63 + 48))(a2, 1, v62))
        {
          v64 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          v93 = type metadata accessor for Date(0);
          (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(a1, a2, v93);
          a1[*(int *)(v62 + 20)] = *((_BYTE *)a2 + *(int *)(v62 + 20));
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(a1, 0, 1, v62);
        }
        v94 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)&a1[*(int *)(v94 + 20)] = *(char **)((char *)a2 + *(int *)(v94 + 20));
        v50 = a1;
        v51 = v7;
        v52 = 8;
        goto LABEL_100;
      case 9u:
        *a1 = *(_BYTE *)a2;
        v56 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v57 = &a1[v56];
        v58 = (char *)a2 + v56;
        v59 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
        v50 = a1;
        v51 = v7;
        v52 = 9;
LABEL_100:
        swift_storeEnumTagMultiPayload(v50, v51, v52);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
    v188 = v6[6];
    a1[v6[5]] = *((_BYTE *)a2 + v6[5]);
    v189 = *(char **)((char *)a2 + v188);
    *(_QWORD *)&a1[v188] = v189;
    v190 = v6[7];
    v191 = *(char **)((char *)a2 + v190);
    *(_QWORD *)&a1[v190] = v191;
    v192 = v189;
    v193 = v191;
  }
  return a1;
}

void sub_1003EF720(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int v24;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(a1, v4))
  {
    case 0u:
      v5 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a1, v5))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_23;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_24;
      }
      goto LABEL_24;
    case 1u:
      v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a1, v6))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_23:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v7 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
          break;
        default:
          break;
      }
LABEL_24:
      v21 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v22 = (char *)a1 + *(int *)(v21 + 20);
      v23 = *((_QWORD *)v22 + 1);
      if (v23)
      {
        swift_bridgeObjectRelease(v23);
        sub_10003E2EC(*((void **)v22 + 2), *((_QWORD *)v22 + 3), *((_QWORD *)v22 + 4), *((_QWORD *)v22 + 5), *((_QWORD *)v22 + 6), *((_QWORD *)v22 + 7), v22[64]);
        v24 = v22[120];
        if (v24 != 255)
          sub_10002B328(*((void **)v22 + 9), *((_QWORD *)v22 + 10), *((_QWORD *)v22 + 11), *((_QWORD *)v22 + 12), *((_QWORD *)v22 + 13), *((_QWORD *)v22 + 14), v24 & 1);
      }
      v13 = *(id *)((char *)a1 + *(int *)(v21 + 44));
      goto LABEL_28;
    case 2u:

      v8 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload(v8, v9))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_30;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_11;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 3u:

      v8 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v8, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_30;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_11;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 4u:

      v8 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v8, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v8, v11))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_30:
            v13 = *v8;
            goto LABEL_28;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_11:
            v12 = type metadata accessor for Date(0);
            goto LABEL_21;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 5u:
      v13 = (id)a1[2];
      goto LABEL_28;
    case 6u:
      v13 = (id)*a1;
      goto LABEL_28;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(a1, 1, v14))
      {
        swift_bridgeObjectRelease(*a1);
        v15 = (char *)a1 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v17 = (char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v18 = *((_QWORD *)v17 + 1);
      if (!v18)
        goto LABEL_29;
      swift_bridgeObjectRelease(v18);
      v13 = (id)*((_QWORD *)v17 + 2);
LABEL_28:

LABEL_29:
      return;
    case 8u:
      v19 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(a1, 1, v19))
      {
        v20 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(a1, v20);
      }
      goto LABEL_29;
    case 9u:
      v8 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v12 = type metadata accessor for AnyTip(0);
LABEL_21:
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v8, v12);
      goto LABEL_29;
    default:
      goto LABEL_29;
  }
}

void **sub_1003EFAE8(void **a1, void **a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void **v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(void **, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void **v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(void **, uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void **v39;
  void **v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(void **, uint64_t, uint64_t);
  id v44;
  uint64_t v45;
  void *v46;
  id v47;
  void **v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  void **v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  void **v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t, __n128);
  __n128 v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  void *v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  id v99;
  void *v100;
  id v101;
  int *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  id v132;
  void *v133;
  id v134;
  int *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  uint64_t v151;
  uint64_t v152;
  void *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  id v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  id v167;
  void *v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void *v174;
  id v175;
  void *v176;
  id v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  id v184;
  void *v185;
  id v186;
  uint64_t v187;
  uint64_t v188;
  void *v189;
  uint64_t v190;
  void *v191;
  id v192;
  id v193;
  unsigned __int8 v195;
  void *v196;
  unsigned __int8 v197;
  char v198;
  char *v199;
  uint64_t v200;
  char v201;
  void **v202;
  uint64_t v203;
  uint64_t v204;
  int *v205;
  int *v206;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(a2, v6))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v203 = v6;
      v205 = a3;
      switch(swift_getEnumCaseMultiPayload(a2, v7))
      {
        case 1u:
          v8 = *a2;
          *a1 = *a2;
          v9 = v8;
          v10 = a1;
          v11 = v7;
          v12 = 1;
          goto LABEL_41;
        case 2u:
          v93 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(a1, a2, v93);
          v10 = a1;
          v11 = v7;
          v12 = 2;
          goto LABEL_41;
        case 3u:
          v94 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(a1, a2, v94);
          v10 = a1;
          v11 = v7;
          v12 = 3;
          goto LABEL_41;
        case 4u:
          v95 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(a1, a2, v95);
          v10 = a1;
          v11 = v7;
          v12 = 4;
          goto LABEL_41;
        case 5u:
          v96 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
          v10 = a1;
          v11 = v7;
          v12 = 5;
          goto LABEL_41;
        case 6u:
          v97 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
          v10 = a1;
          v11 = v7;
          v12 = 6;
          goto LABEL_41;
        case 8u:
          v98 = *a2;
          *a1 = *a2;
          v99 = v98;
          v10 = a1;
          v11 = v7;
          v12 = 8;
          goto LABEL_41;
        case 9u:
          v100 = *a2;
          *a1 = *a2;
          v101 = v100;
          v10 = a1;
          v11 = v7;
          v12 = 9;
LABEL_41:
          swift_storeEnumTagMultiPayload(v10, v11, v12);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      v102 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v103 = v102[5];
      v104 = (char *)a1 + v103;
      v105 = (char *)a2 + v103;
      v106 = *(uint64_t *)((char *)a2 + v103 + 8);
      if (v106)
      {
        *(_QWORD *)v104 = *(_QWORD *)v105;
        *((_QWORD *)v104 + 1) = v106;
        v107 = (void *)*((_QWORD *)v105 + 2);
        v108 = *((_QWORD *)v105 + 3);
        v109 = *((_QWORD *)v105 + 4);
        v110 = *((_QWORD *)v105 + 5);
        v111 = *((_QWORD *)v105 + 6);
        v200 = *((_QWORD *)v105 + 7);
        v195 = v105[64];
        swift_bridgeObjectRetain(v106);
        sub_10003E1F0(v107, v108, v109, v110, v111, v200, v195);
        *((_QWORD *)v104 + 2) = v107;
        *((_QWORD *)v104 + 3) = v108;
        *((_QWORD *)v104 + 4) = v109;
        *((_QWORD *)v104 + 5) = v110;
        *((_QWORD *)v104 + 6) = v111;
        *((_QWORD *)v104 + 7) = v200;
        v104[64] = v195;
        *(_DWORD *)(v104 + 65) = *(_DWORD *)(v105 + 65);
        v112 = v105[120];
        if (v112 == 255)
        {
          v113 = *(_OWORD *)(v105 + 88);
          *(_OWORD *)(v104 + 72) = *(_OWORD *)(v105 + 72);
          *(_OWORD *)(v104 + 88) = v113;
          *(_OWORD *)(v104 + 104) = *(_OWORD *)(v105 + 104);
          v104[120] = v105[120];
        }
        else
        {
          v201 = v112 & 1;
          v118 = *((_QWORD *)v105 + 10);
          v196 = (void *)*((_QWORD *)v105 + 9);
          v119 = *((_QWORD *)v105 + 11);
          v120 = *((_QWORD *)v105 + 12);
          v121 = *((_QWORD *)v105 + 13);
          v122 = *((_QWORD *)v105 + 14);
          sub_10002B764(v196, v118, v119, v120, v121, v122, v112 & 1);
          *((_QWORD *)v104 + 9) = v196;
          *((_QWORD *)v104 + 10) = v118;
          *((_QWORD *)v104 + 11) = v119;
          *((_QWORD *)v104 + 12) = v120;
          *((_QWORD *)v104 + 13) = v121;
          *((_QWORD *)v104 + 14) = v122;
          v104[120] = v201;
        }
        v117 = v203;
        a3 = v205;
        v104[121] = v105[121];
      }
      else
      {
        v114 = *((_OWORD *)v105 + 5);
        *((_OWORD *)v104 + 4) = *((_OWORD *)v105 + 4);
        *((_OWORD *)v104 + 5) = v114;
        *((_OWORD *)v104 + 6) = *((_OWORD *)v105 + 6);
        *(_OWORD *)(v104 + 106) = *(_OWORD *)(v105 + 106);
        v115 = *((_OWORD *)v105 + 1);
        *(_OWORD *)v104 = *(_OWORD *)v105;
        *((_OWORD *)v104 + 1) = v115;
        v116 = *((_OWORD *)v105 + 3);
        *((_OWORD *)v104 + 2) = *((_OWORD *)v105 + 2);
        *((_OWORD *)v104 + 3) = v116;
        v117 = v6;
      }
      *((_BYTE *)a1 + v102[6]) = *((_BYTE *)a2 + v102[6]);
      *((_BYTE *)a1 + v102[7]) = *((_BYTE *)a2 + v102[7]);
      *((_BYTE *)a1 + v102[8]) = *((_BYTE *)a2 + v102[8]);
      *((_BYTE *)a1 + v102[9]) = *((_BYTE *)a2 + v102[9]);
      *((_BYTE *)a1 + v102[10]) = *((_BYTE *)a2 + v102[10]);
      v123 = v102[11];
      v124 = *(void **)((char *)a2 + v123);
      *(void **)((char *)a1 + v123) = v124;
      v125 = v124;
      v48 = a1;
      v49 = v117;
      v50 = 0;
      goto LABEL_98;
    case 1u:
      v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v204 = v6;
      v206 = a3;
      switch(swift_getEnumCaseMultiPayload(a2, v13))
      {
        case 1u:
          v14 = *a2;
          *a1 = *a2;
          v15 = v14;
          v16 = a1;
          v17 = v13;
          v18 = 1;
          goto LABEL_57;
        case 2u:
          v126 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v126 - 8) + 16))(a1, a2, v126);
          v16 = a1;
          v17 = v13;
          v18 = 2;
          goto LABEL_57;
        case 3u:
          v127 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v127 - 8) + 16))(a1, a2, v127);
          v16 = a1;
          v17 = v13;
          v18 = 3;
          goto LABEL_57;
        case 4u:
          v128 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(a1, a2, v128);
          v16 = a1;
          v17 = v13;
          v18 = 4;
          goto LABEL_57;
        case 5u:
          v129 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(a1, a2, v129);
          v16 = a1;
          v17 = v13;
          v18 = 5;
          goto LABEL_57;
        case 6u:
          v130 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(a1, a2, v130);
          v16 = a1;
          v17 = v13;
          v18 = 6;
          goto LABEL_57;
        case 8u:
          v131 = *a2;
          *a1 = *a2;
          v132 = v131;
          v16 = a1;
          v17 = v13;
          v18 = 8;
          goto LABEL_57;
        case 9u:
          v133 = *a2;
          *a1 = *a2;
          v134 = v133;
          v16 = a1;
          v17 = v13;
          v18 = 9;
LABEL_57:
          swift_storeEnumTagMultiPayload(v16, v17, v18);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          break;
      }
      v135 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v136 = v135[5];
      v137 = (char *)a1 + v136;
      v138 = (char *)a2 + v136;
      v139 = *(uint64_t *)((char *)a2 + v136 + 8);
      if (v139)
      {
        v202 = a2;
        *(_QWORD *)v137 = *(_QWORD *)v138;
        *((_QWORD *)v137 + 1) = v139;
        v140 = (void *)*((_QWORD *)v138 + 2);
        v141 = *((_QWORD *)v138 + 3);
        v142 = *((_QWORD *)v138 + 4);
        v143 = *((_QWORD *)v138 + 5);
        v145 = *((_QWORD *)v138 + 6);
        v144 = *((_QWORD *)v138 + 7);
        v197 = v138[64];
        swift_bridgeObjectRetain(v139);
        sub_10003E1F0(v140, v141, v142, v143, v145, v144, v197);
        *((_QWORD *)v137 + 2) = v140;
        *((_QWORD *)v137 + 3) = v141;
        *((_QWORD *)v137 + 4) = v142;
        *((_QWORD *)v137 + 5) = v143;
        *((_QWORD *)v137 + 6) = v145;
        *((_QWORD *)v137 + 7) = v144;
        v137[64] = v197;
        *(_DWORD *)(v137 + 65) = *(_DWORD *)(v138 + 65);
        v146 = v138[120];
        if (v146 == 255)
        {
          v147 = *(_OWORD *)(v138 + 88);
          *(_OWORD *)(v137 + 72) = *(_OWORD *)(v138 + 72);
          *(_OWORD *)(v137 + 88) = v147;
          *(_OWORD *)(v137 + 104) = *(_OWORD *)(v138 + 104);
          v137[120] = v138[120];
        }
        else
        {
          v198 = v146 & 1;
          v153 = (void *)*((_QWORD *)v138 + 9);
          v152 = *((_QWORD *)v138 + 10);
          v154 = *((_QWORD *)v138 + 11);
          v155 = *((_QWORD *)v138 + 12);
          v156 = *((_QWORD *)v138 + 13);
          v157 = *((_QWORD *)v138 + 14);
          sub_10002B764(v153, v152, v154, v155, v156, v157, v146 & 1);
          *((_QWORD *)v137 + 9) = v153;
          *((_QWORD *)v137 + 10) = v152;
          *((_QWORD *)v137 + 11) = v154;
          *((_QWORD *)v137 + 12) = v155;
          *((_QWORD *)v137 + 13) = v156;
          *((_QWORD *)v137 + 14) = v157;
          v137[120] = v198;
        }
        v151 = v204;
        a3 = v206;
        v137[121] = v138[121];
        a2 = v202;
      }
      else
      {
        v148 = *((_OWORD *)v138 + 5);
        *((_OWORD *)v137 + 4) = *((_OWORD *)v138 + 4);
        *((_OWORD *)v137 + 5) = v148;
        *((_OWORD *)v137 + 6) = *((_OWORD *)v138 + 6);
        *(_OWORD *)(v137 + 106) = *(_OWORD *)(v138 + 106);
        v149 = *((_OWORD *)v138 + 1);
        *(_OWORD *)v137 = *(_OWORD *)v138;
        *((_OWORD *)v137 + 1) = v149;
        v150 = *((_OWORD *)v138 + 3);
        *((_OWORD *)v137 + 2) = *((_OWORD *)v138 + 2);
        *((_OWORD *)v137 + 3) = v150;
        v151 = v6;
      }
      *((_BYTE *)a1 + v135[6]) = *((_BYTE *)a2 + v135[6]);
      *((_BYTE *)a1 + v135[7]) = *((_BYTE *)a2 + v135[7]);
      *((_BYTE *)a1 + v135[8]) = *((_BYTE *)a2 + v135[8]);
      *((_BYTE *)a1 + v135[9]) = *((_BYTE *)a2 + v135[9]);
      *((_BYTE *)a1 + v135[10]) = *((_BYTE *)a2 + v135[10]);
      v158 = v135[11];
      v159 = *(void **)((char *)a2 + v158);
      *(void **)((char *)a1 + v158) = v159;
      v160 = v159;
      v48 = a1;
      v49 = v151;
      v50 = 1;
      goto LABEL_98;
    case 2u:
      v19 = *a2;
      *a1 = *a2;
      v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v21 = (void **)((char *)a1 + v20);
      v22 = (void **)((char *)a2 + v20);
      v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v24 = *(_QWORD *)(v23 - 8);
      v25 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v24 + 48);
      v26 = v19;
      if (v25(v22, 1, v23))
      {
        v27 = sub_10002A750(&qword_100644980);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v22, v23))
        {
          case 1u:
            v63 = *v22;
            *v21 = *v22;
            v64 = v63;
            v65 = v21;
            v66 = v23;
            v67 = 1;
            goto LABEL_73;
          case 2u:
            v161 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v161 - 8) + 16))(v21, v22, v161);
            v65 = v21;
            v66 = v23;
            v67 = 2;
            goto LABEL_73;
          case 3u:
            v162 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v162 - 8) + 16))(v21, v22, v162);
            v65 = v21;
            v66 = v23;
            v67 = 3;
            goto LABEL_73;
          case 4u:
            v163 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v163 - 8) + 16))(v21, v22, v163);
            v65 = v21;
            v66 = v23;
            v67 = 4;
            goto LABEL_73;
          case 5u:
            v164 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v164 - 8) + 16))(v21, v22, v164);
            v65 = v21;
            v66 = v23;
            v67 = 5;
            goto LABEL_73;
          case 6u:
            v165 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(v21, v22, v165);
            v65 = v21;
            v66 = v23;
            v67 = 6;
            goto LABEL_73;
          case 8u:
            v166 = *v22;
            *v21 = *v22;
            v167 = v166;
            v65 = v21;
            v66 = v23;
            v67 = 8;
            goto LABEL_73;
          case 9u:
            v168 = *v22;
            *v21 = *v22;
            v169 = v168;
            v65 = v21;
            v66 = v23;
            v67 = 9;
LABEL_73:
            swift_storeEnumTagMultiPayload(v65, v66, v67);
            break;
          default:
            memcpy(v21, v22, *(_QWORD *)(v24 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      v48 = a1;
      v49 = v6;
      v50 = 2;
      goto LABEL_98;
    case 3u:
      v28 = *a2;
      *a1 = *a2;
      v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v30 = (void **)((char *)a1 + v29);
      v31 = (void **)((char *)a2 + v29);
      v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v33 + 48);
      v35 = v28;
      if (v34(v31, 1, v32))
      {
        v36 = sub_10002A750(&qword_100644980);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v31, v32))
        {
          case 1u:
            v68 = *v31;
            *v30 = *v31;
            v69 = v68;
            v70 = v30;
            v71 = v32;
            v72 = 1;
            goto LABEL_95;
          case 2u:
            v170 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v170 - 8) + 16))(v30, v31, v170);
            v70 = v30;
            v71 = v32;
            v72 = 2;
            goto LABEL_95;
          case 3u:
            v171 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(v30, v31, v171);
            v70 = v30;
            v71 = v32;
            v72 = 3;
            goto LABEL_95;
          case 4u:
            v172 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v30, v31, v172);
            v70 = v30;
            v71 = v32;
            v72 = 4;
            goto LABEL_95;
          case 5u:
            v187 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v30, v31, v187);
            v70 = v30;
            v71 = v32;
            v72 = 5;
            goto LABEL_95;
          case 6u:
            v173 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v30, v31, v173);
            v70 = v30;
            v71 = v32;
            v72 = 6;
            goto LABEL_95;
          case 8u:
            v174 = *v31;
            *v30 = *v31;
            v175 = v174;
            v70 = v30;
            v71 = v32;
            v72 = 8;
            goto LABEL_95;
          case 9u:
            v176 = *v31;
            *v30 = *v31;
            v177 = v176;
            v70 = v30;
            v71 = v32;
            v72 = 9;
LABEL_95:
            swift_storeEnumTagMultiPayload(v70, v71, v72);
            break;
          default:
            memcpy(v30, v31, *(_QWORD *)(v33 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v48 = a1;
      v49 = v6;
      v50 = 3;
      goto LABEL_98;
    case 4u:
      v37 = *a2;
      *a1 = *a2;
      v38 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v39 = (void **)((char *)a1 + v38);
      v40 = (void **)((char *)a2 + v38);
      v41 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v42 = *(_QWORD *)(v41 - 8);
      v43 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v42 + 48);
      v44 = v37;
      if (v43(v40, 1, v41))
      {
        v45 = sub_10002A750(&qword_100644980);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v40, v41))
        {
          case 1u:
            v73 = *v40;
            *v39 = *v40;
            v74 = v73;
            v75 = v39;
            v76 = v41;
            v77 = 1;
            goto LABEL_91;
          case 2u:
            v178 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v178 - 8) + 16))(v39, v40, v178);
            v75 = v39;
            v76 = v41;
            v77 = 2;
            goto LABEL_91;
          case 3u:
            v179 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v39, v40, v179);
            v75 = v39;
            v76 = v41;
            v77 = 3;
            goto LABEL_91;
          case 4u:
            v180 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v39, v40, v180);
            v75 = v39;
            v76 = v41;
            v77 = 4;
            goto LABEL_91;
          case 5u:
            v181 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v39, v40, v181);
            v75 = v39;
            v76 = v41;
            v77 = 5;
            goto LABEL_91;
          case 6u:
            v182 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v39, v40, v182);
            v75 = v39;
            v76 = v41;
            v77 = 6;
            goto LABEL_91;
          case 8u:
            v183 = *v40;
            *v39 = *v40;
            v184 = v183;
            v75 = v39;
            v76 = v41;
            v77 = 8;
            goto LABEL_91;
          case 9u:
            v185 = *v40;
            *v39 = *v40;
            v186 = v185;
            v75 = v39;
            v76 = v41;
            v77 = 9;
LABEL_91:
            swift_storeEnumTagMultiPayload(v75, v76, v77);
            break;
          default:
            memcpy(v39, v40, *(_QWORD *)(v42 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      v48 = a1;
      v49 = v6;
      v50 = 4;
      goto LABEL_98;
    case 5u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
      v46 = a2[2];
      a1[2] = v46;
      v47 = v46;
      v48 = a1;
      v49 = v6;
      v50 = 5;
      goto LABEL_98;
    case 6u:
      v58 = *a2;
      *a1 = *a2;
      v59 = v58;
      v48 = a1;
      v49 = v6;
      v50 = 6;
      goto LABEL_98;
    case 7u:
      v51 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v52 = *(_QWORD *)(v51 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v52 + 48))(a2, 1, v51))
      {
        v53 = sub_10002A750(&qword_100644600);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        v78 = *a2;
        *a1 = *a2;
        v79 = *(int *)(v51 + 20);
        v199 = (char *)a1 + v79;
        v80 = (char *)a2 + v79;
        v81 = type metadata accessor for REMHashtagLabelSpecifier(0);
        v82 = v6;
        v83 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v81 - 8) + 16);
        v84 = swift_bridgeObjectRetain(v78);
        v83(v199, v80, v81, v84);
        v6 = v82;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v52 + 56))(a1, 0, 1, v51);
      }
      v85 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v86 = (void **)((char *)a1 + v85);
      v87 = (void **)((char *)a2 + v85);
      v88 = v87[1];
      if (v88)
      {
        *v86 = *v87;
        v86[1] = v88;
        v89 = (void *)v87[2];
        v86[2] = v89;
        swift_bridgeObjectRetain(v88);
        v90 = v89;
      }
      else
      {
        *(_OWORD *)v86 = *(_OWORD *)v87;
        v86[2] = v87[2];
      }
      v48 = a1;
      v49 = v6;
      v50 = 7;
      goto LABEL_98;
    case 8u:
      v60 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v61 = *(_QWORD *)(v60 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v61 + 48))(a2, 1, v60))
      {
        v62 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        v91 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(a1, a2, v91);
        *((_BYTE *)a1 + *(int *)(v60 + 20)) = *((_BYTE *)a2 + *(int *)(v60 + 20));
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v61 + 56))(a1, 0, 1, v60);
      }
      v92 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(void **)((char *)a1 + *(int *)(v92 + 20)) = *(void **)((char *)a2 + *(int *)(v92 + 20));
      v48 = a1;
      v49 = v6;
      v50 = 8;
      goto LABEL_98;
    case 9u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v54 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v55 = (char *)a1 + v54;
      v56 = (char *)a2 + v54;
      v57 = type metadata accessor for AnyTip(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
      v48 = a1;
      v49 = v6;
      v50 = 9;
LABEL_98:
      swift_storeEnumTagMultiPayload(v48, v49, v50);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v188 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v189 = *(void **)((char *)a2 + v188);
  *(void **)((char *)a1 + v188) = v189;
  v190 = a3[7];
  v191 = *(void **)((char *)a2 + v190);
  *(void **)((char *)a1 + v190) = v191;
  v192 = v189;
  v193 = v191;
  return a1;
}

void **sub_1003F0AC8(void **a1, void **a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void **v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(void **, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void **v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(void **, uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void **v39;
  void **v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(void **, uint64_t, uint64_t);
  id v44;
  uint64_t v45;
  void *v46;
  id v47;
  void **v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  void **v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  void **v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t, __n128);
  __n128 v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  void *v89;
  id v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  id v100;
  void *v101;
  id v102;
  int *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  id v138;
  void *v139;
  id v140;
  int *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  void *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unsigned __int8 v151;
  int v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  id v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  id v178;
  void *v179;
  id v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void *v186;
  id v187;
  void *v188;
  id v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  void *v195;
  id v196;
  void *v197;
  id v198;
  uint64_t v199;
  void *v200;
  void *v201;
  id v202;
  uint64_t v203;
  void *v204;
  void *v205;
  id v206;
  unsigned __int8 v208;
  void *v209;
  uint64_t v210;
  char v211;
  char *v212;
  uint64_t v213;
  char v214;
  int *v215;
  uint64_t v216;
  uint64_t v217;
  int *v218;
  int *v219;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v216 = v6;
        v218 = a3;
        switch(swift_getEnumCaseMultiPayload(a2, v7))
        {
          case 1u:
            v8 = *a2;
            *a1 = *a2;
            v9 = v8;
            v10 = a1;
            v11 = v7;
            v12 = 1;
            goto LABEL_42;
          case 2u:
            v94 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(a1, a2, v94);
            v10 = a1;
            v11 = v7;
            v12 = 2;
            goto LABEL_42;
          case 3u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(a1, a2, v95);
            v10 = a1;
            v11 = v7;
            v12 = 3;
            goto LABEL_42;
          case 4u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
            v10 = a1;
            v11 = v7;
            v12 = 4;
            goto LABEL_42;
          case 5u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
            v10 = a1;
            v11 = v7;
            v12 = 5;
            goto LABEL_42;
          case 6u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, a2, v98);
            v10 = a1;
            v11 = v7;
            v12 = 6;
            goto LABEL_42;
          case 8u:
            v99 = *a2;
            *a1 = *a2;
            v100 = v99;
            v10 = a1;
            v11 = v7;
            v12 = 8;
            goto LABEL_42;
          case 9u:
            v101 = *a2;
            *a1 = *a2;
            v102 = v101;
            v10 = a1;
            v11 = v7;
            v12 = 9;
LABEL_42:
            swift_storeEnumTagMultiPayload(v10, v11, v12);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
            break;
        }
        v103 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v104 = v103[5];
        v105 = (char *)a1 + v104;
        v106 = (char *)a2 + v104;
        if (*(void **)((char *)a2 + v104 + 8))
        {
          *(_QWORD *)v105 = *(_QWORD *)v106;
          v107 = *((_QWORD *)v106 + 1);
          *((_QWORD *)v105 + 1) = v107;
          v108 = (void *)*((_QWORD *)v106 + 2);
          v109 = *((_QWORD *)v106 + 3);
          v110 = *((_QWORD *)v106 + 4);
          v111 = *((_QWORD *)v106 + 5);
          v112 = *((_QWORD *)v106 + 6);
          v213 = *((_QWORD *)v106 + 7);
          v208 = v106[64];
          swift_bridgeObjectRetain(v107);
          sub_10003E1F0(v108, v109, v110, v111, v112, v213, v208);
          *((_QWORD *)v105 + 2) = v108;
          *((_QWORD *)v105 + 3) = v109;
          *((_QWORD *)v105 + 4) = v110;
          *((_QWORD *)v105 + 5) = v111;
          *((_QWORD *)v105 + 6) = v112;
          *((_QWORD *)v105 + 7) = v213;
          v105[64] = v208;
          v105[65] = v106[65];
          v105[66] = v106[66];
          v105[67] = v106[67];
          v105[68] = v106[68];
          v113 = v106[120];
          if (v113 == 255)
          {
            v114 = *(_OWORD *)(v106 + 72);
            v115 = *(_OWORD *)(v106 + 88);
            v116 = *(_OWORD *)(v106 + 104);
            v105[120] = v106[120];
            *(_OWORD *)(v105 + 88) = v115;
            *(_OWORD *)(v105 + 104) = v116;
            *(_OWORD *)(v105 + 72) = v114;
          }
          else
          {
            v214 = v113 & 1;
            v124 = *((_QWORD *)v106 + 10);
            v209 = (void *)*((_QWORD *)v106 + 9);
            v125 = *((_QWORD *)v106 + 11);
            v126 = *((_QWORD *)v106 + 12);
            v127 = *((_QWORD *)v106 + 13);
            v128 = *((_QWORD *)v106 + 14);
            sub_10002B764(v209, v124, v125, v126, v127, v128, v113 & 1);
            *((_QWORD *)v105 + 9) = v209;
            *((_QWORD *)v105 + 10) = v124;
            *((_QWORD *)v105 + 11) = v125;
            *((_QWORD *)v105 + 12) = v126;
            *((_QWORD *)v105 + 13) = v127;
            *((_QWORD *)v105 + 14) = v128;
            v105[120] = v214;
          }
          v123 = v216;
          a3 = v218;
          v105[121] = v106[121];
        }
        else
        {
          v117 = *(_OWORD *)v106;
          v118 = *((_OWORD *)v106 + 1);
          v119 = *((_OWORD *)v106 + 3);
          *((_OWORD *)v105 + 2) = *((_OWORD *)v106 + 2);
          *((_OWORD *)v105 + 3) = v119;
          *(_OWORD *)v105 = v117;
          *((_OWORD *)v105 + 1) = v118;
          v120 = *((_OWORD *)v106 + 4);
          v121 = *((_OWORD *)v106 + 5);
          v122 = *((_OWORD *)v106 + 6);
          *(_OWORD *)(v105 + 106) = *(_OWORD *)(v106 + 106);
          *((_OWORD *)v105 + 5) = v121;
          *((_OWORD *)v105 + 6) = v122;
          *((_OWORD *)v105 + 4) = v120;
          v123 = v6;
        }
        *((_BYTE *)a1 + v103[6]) = *((_BYTE *)a2 + v103[6]);
        *((_BYTE *)a1 + v103[7]) = *((_BYTE *)a2 + v103[7]);
        *((_BYTE *)a1 + v103[8]) = *((_BYTE *)a2 + v103[8]);
        *((_BYTE *)a1 + v103[9]) = *((_BYTE *)a2 + v103[9]);
        *((_BYTE *)a1 + v103[10]) = *((_BYTE *)a2 + v103[10]);
        v129 = v103[11];
        v130 = *(void **)((char *)a2 + v129);
        *(void **)((char *)a1 + v129) = v130;
        v131 = v130;
        v48 = a1;
        v49 = v123;
        v50 = 0;
        goto LABEL_99;
      case 1u:
        v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v217 = v6;
        v219 = a3;
        switch(swift_getEnumCaseMultiPayload(a2, v13))
        {
          case 1u:
            v14 = *a2;
            *a1 = *a2;
            v15 = v14;
            v16 = a1;
            v17 = v13;
            v18 = 1;
            goto LABEL_58;
          case 2u:
            v132 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(a1, a2, v132);
            v16 = a1;
            v17 = v13;
            v18 = 2;
            goto LABEL_58;
          case 3u:
            v133 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v133 - 8) + 16))(a1, a2, v133);
            v16 = a1;
            v17 = v13;
            v18 = 3;
            goto LABEL_58;
          case 4u:
            v134 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(a1, a2, v134);
            v16 = a1;
            v17 = v13;
            v18 = 4;
            goto LABEL_58;
          case 5u:
            v135 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(a1, a2, v135);
            v16 = a1;
            v17 = v13;
            v18 = 5;
            goto LABEL_58;
          case 6u:
            v136 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v136 - 8) + 16))(a1, a2, v136);
            v16 = a1;
            v17 = v13;
            v18 = 6;
            goto LABEL_58;
          case 8u:
            v137 = *a2;
            *a1 = *a2;
            v138 = v137;
            v16 = a1;
            v17 = v13;
            v18 = 8;
            goto LABEL_58;
          case 9u:
            v139 = *a2;
            *a1 = *a2;
            v140 = v139;
            v16 = a1;
            v17 = v13;
            v18 = 9;
LABEL_58:
            swift_storeEnumTagMultiPayload(v16, v17, v18);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
            break;
        }
        v141 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v142 = v141[5];
        v143 = (char *)a1 + v142;
        v144 = (char *)a2 + v142;
        if (*(void **)((char *)a2 + v142 + 8))
        {
          v215 = v141;
          *(_QWORD *)v143 = *(_QWORD *)v144;
          v145 = *((_QWORD *)v144 + 1);
          *((_QWORD *)v143 + 1) = v145;
          v146 = (void *)*((_QWORD *)v144 + 2);
          v147 = *((_QWORD *)v144 + 3);
          v148 = *((_QWORD *)v144 + 4);
          v149 = *((_QWORD *)v144 + 5);
          v150 = *((_QWORD *)v144 + 6);
          v210 = *((_QWORD *)v144 + 7);
          v151 = v144[64];
          swift_bridgeObjectRetain(v145);
          sub_10003E1F0(v146, v147, v148, v149, v150, v210, v151);
          *((_QWORD *)v143 + 2) = v146;
          *((_QWORD *)v143 + 3) = v147;
          *((_QWORD *)v143 + 4) = v148;
          *((_QWORD *)v143 + 5) = v149;
          *((_QWORD *)v143 + 6) = v150;
          *((_QWORD *)v143 + 7) = v210;
          v143[64] = v151;
          v143[65] = v144[65];
          v143[66] = v144[66];
          v143[67] = v144[67];
          v143[68] = v144[68];
          v152 = v144[120];
          if (v152 == 255)
          {
            v153 = *(_OWORD *)(v144 + 72);
            v154 = *(_OWORD *)(v144 + 88);
            v155 = *(_OWORD *)(v144 + 104);
            v143[120] = v144[120];
            *(_OWORD *)(v143 + 88) = v154;
            *(_OWORD *)(v143 + 104) = v155;
            *(_OWORD *)(v143 + 72) = v153;
          }
          else
          {
            v211 = v152 & 1;
            v164 = (void *)*((_QWORD *)v144 + 9);
            v163 = *((_QWORD *)v144 + 10);
            v165 = *((_QWORD *)v144 + 11);
            v166 = *((_QWORD *)v144 + 12);
            v167 = *((_QWORD *)v144 + 13);
            v168 = *((_QWORD *)v144 + 14);
            sub_10002B764(v164, v163, v165, v166, v167, v168, v152 & 1);
            *((_QWORD *)v143 + 9) = v164;
            *((_QWORD *)v143 + 10) = v163;
            *((_QWORD *)v143 + 11) = v165;
            *((_QWORD *)v143 + 12) = v166;
            *((_QWORD *)v143 + 13) = v167;
            *((_QWORD *)v143 + 14) = v168;
            v143[120] = v211;
          }
          v162 = v217;
          a3 = v219;
          v143[121] = v144[121];
          v141 = v215;
        }
        else
        {
          v156 = *(_OWORD *)v144;
          v157 = *((_OWORD *)v144 + 1);
          v158 = *((_OWORD *)v144 + 3);
          *((_OWORD *)v143 + 2) = *((_OWORD *)v144 + 2);
          *((_OWORD *)v143 + 3) = v158;
          *(_OWORD *)v143 = v156;
          *((_OWORD *)v143 + 1) = v157;
          v159 = *((_OWORD *)v144 + 4);
          v160 = *((_OWORD *)v144 + 5);
          v161 = *((_OWORD *)v144 + 6);
          *(_OWORD *)(v143 + 106) = *(_OWORD *)(v144 + 106);
          *((_OWORD *)v143 + 5) = v160;
          *((_OWORD *)v143 + 6) = v161;
          *((_OWORD *)v143 + 4) = v159;
          v162 = v6;
        }
        *((_BYTE *)a1 + v141[6]) = *((_BYTE *)a2 + v141[6]);
        *((_BYTE *)a1 + v141[7]) = *((_BYTE *)a2 + v141[7]);
        *((_BYTE *)a1 + v141[8]) = *((_BYTE *)a2 + v141[8]);
        *((_BYTE *)a1 + v141[9]) = *((_BYTE *)a2 + v141[9]);
        *((_BYTE *)a1 + v141[10]) = *((_BYTE *)a2 + v141[10]);
        v169 = v141[11];
        v170 = *(void **)((char *)a2 + v169);
        *(void **)((char *)a1 + v169) = v170;
        v171 = v170;
        v48 = a1;
        v49 = v162;
        v50 = 1;
        goto LABEL_99;
      case 2u:
        v19 = *a2;
        *a1 = *a2;
        v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v21 = (void **)((char *)a1 + v20);
        v22 = (void **)((char *)a2 + v20);
        v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v24 = *(_QWORD *)(v23 - 8);
        v25 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v24 + 48);
        v26 = v19;
        if (v25(v22, 1, v23))
        {
          v27 = sub_10002A750(&qword_100644980);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v22, v23))
          {
            case 1u:
              v63 = *v22;
              *v21 = *v22;
              v64 = v63;
              v65 = v21;
              v66 = v23;
              v67 = 1;
              goto LABEL_74;
            case 2u:
              v172 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v21, v22, v172);
              v65 = v21;
              v66 = v23;
              v67 = 2;
              goto LABEL_74;
            case 3u:
              v173 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v21, v22, v173);
              v65 = v21;
              v66 = v23;
              v67 = 3;
              goto LABEL_74;
            case 4u:
              v174 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v21, v22, v174);
              v65 = v21;
              v66 = v23;
              v67 = 4;
              goto LABEL_74;
            case 5u:
              v175 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v21, v22, v175);
              v65 = v21;
              v66 = v23;
              v67 = 5;
              goto LABEL_74;
            case 6u:
              v176 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v21, v22, v176);
              v65 = v21;
              v66 = v23;
              v67 = 6;
              goto LABEL_74;
            case 8u:
              v177 = *v22;
              *v21 = *v22;
              v178 = v177;
              v65 = v21;
              v66 = v23;
              v67 = 8;
              goto LABEL_74;
            case 9u:
              v179 = *v22;
              *v21 = *v22;
              v180 = v179;
              v65 = v21;
              v66 = v23;
              v67 = 9;
LABEL_74:
              swift_storeEnumTagMultiPayload(v65, v66, v67);
              break;
            default:
              memcpy(v21, v22, *(_QWORD *)(v24 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        }
        v48 = a1;
        v49 = v6;
        v50 = 2;
        goto LABEL_99;
      case 3u:
        v28 = *a2;
        *a1 = *a2;
        v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v30 = (void **)((char *)a1 + v29);
        v31 = (void **)((char *)a2 + v29);
        v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v33 = *(_QWORD *)(v32 - 8);
        v34 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v33 + 48);
        v35 = v28;
        if (v34(v31, 1, v32))
        {
          v36 = sub_10002A750(&qword_100644980);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v31, v32))
          {
            case 1u:
              v68 = *v31;
              *v30 = *v31;
              v69 = v68;
              v70 = v30;
              v71 = v32;
              v72 = 1;
              goto LABEL_85;
            case 2u:
              v181 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v30, v31, v181);
              v70 = v30;
              v71 = v32;
              v72 = 2;
              goto LABEL_85;
            case 3u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v30, v31, v182);
              v70 = v30;
              v71 = v32;
              v72 = 3;
              goto LABEL_85;
            case 4u:
              v183 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v30, v31, v183);
              v70 = v30;
              v71 = v32;
              v72 = 4;
              goto LABEL_85;
            case 5u:
              v184 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v30, v31, v184);
              v70 = v30;
              v71 = v32;
              v72 = 5;
              goto LABEL_85;
            case 6u:
              v185 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v30, v31, v185);
              v70 = v30;
              v71 = v32;
              v72 = 6;
              goto LABEL_85;
            case 8u:
              v186 = *v31;
              *v30 = *v31;
              v187 = v186;
              v70 = v30;
              v71 = v32;
              v72 = 8;
              goto LABEL_85;
            case 9u:
              v188 = *v31;
              *v30 = *v31;
              v189 = v188;
              v70 = v30;
              v71 = v32;
              v72 = 9;
LABEL_85:
              swift_storeEnumTagMultiPayload(v70, v71, v72);
              break;
            default:
              memcpy(v30, v31, *(_QWORD *)(v33 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        v48 = a1;
        v49 = v6;
        v50 = 3;
        goto LABEL_99;
      case 4u:
        v37 = *a2;
        *a1 = *a2;
        v38 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v39 = (void **)((char *)a1 + v38);
        v40 = (void **)((char *)a2 + v38);
        v41 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v42 = *(_QWORD *)(v41 - 8);
        v43 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v42 + 48);
        v44 = v37;
        if (v43(v40, 1, v41))
        {
          v45 = sub_10002A750(&qword_100644980);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v40, v41))
          {
            case 1u:
              v73 = *v40;
              *v39 = *v40;
              v74 = v73;
              v75 = v39;
              v76 = v41;
              v77 = 1;
              goto LABEL_96;
            case 2u:
              v190 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v39, v40, v190);
              v75 = v39;
              v76 = v41;
              v77 = 2;
              goto LABEL_96;
            case 3u:
              v191 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v39, v40, v191);
              v75 = v39;
              v76 = v41;
              v77 = 3;
              goto LABEL_96;
            case 4u:
              v192 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v192 - 8) + 16))(v39, v40, v192);
              v75 = v39;
              v76 = v41;
              v77 = 4;
              goto LABEL_96;
            case 5u:
              v193 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v193 - 8) + 16))(v39, v40, v193);
              v75 = v39;
              v76 = v41;
              v77 = 5;
              goto LABEL_96;
            case 6u:
              v194 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v194 - 8) + 16))(v39, v40, v194);
              v75 = v39;
              v76 = v41;
              v77 = 6;
              goto LABEL_96;
            case 8u:
              v195 = *v40;
              *v39 = *v40;
              v196 = v195;
              v75 = v39;
              v76 = v41;
              v77 = 8;
              goto LABEL_96;
            case 9u:
              v197 = *v40;
              *v39 = *v40;
              v198 = v197;
              v75 = v39;
              v76 = v41;
              v77 = 9;
LABEL_96:
              swift_storeEnumTagMultiPayload(v75, v76, v77);
              break;
            default:
              memcpy(v39, v40, *(_QWORD *)(v42 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
        }
        v48 = a1;
        v49 = v6;
        v50 = 4;
        goto LABEL_99;
      case 5u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
        *((_BYTE *)a1 + 10) = *((_BYTE *)a2 + 10);
        v46 = a2[2];
        a1[2] = v46;
        v47 = v46;
        v48 = a1;
        v49 = v6;
        v50 = 5;
        goto LABEL_99;
      case 6u:
        v58 = *a2;
        *a1 = *a2;
        v59 = v58;
        v48 = a1;
        v49 = v6;
        v50 = 6;
        goto LABEL_99;
      case 7u:
        v51 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v52 = *(_QWORD *)(v51 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v52 + 48))(a2, 1, v51))
        {
          v53 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          v78 = *a2;
          *a1 = *a2;
          v79 = *(int *)(v51 + 20);
          v212 = (char *)a1 + v79;
          v80 = (char *)a2 + v79;
          v81 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v82 = v6;
          v83 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v81 - 8) + 16);
          v84 = swift_bridgeObjectRetain(v78);
          v83(v212, v80, v81, v84);
          v6 = v82;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v52 + 56))(a1, 0, 1, v51);
        }
        v85 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v86 = (void **)((char *)a1 + v85);
        v87 = (void **)((char *)a2 + v85);
        if (v87[1])
        {
          *v86 = *v87;
          v88 = v87[1];
          v86[1] = v88;
          v89 = (void *)v87[2];
          v86[2] = v89;
          swift_bridgeObjectRetain(v88);
          v90 = v89;
        }
        else
        {
          v91 = *(_OWORD *)v87;
          v86[2] = v87[2];
          *(_OWORD *)v86 = v91;
        }
        v48 = a1;
        v49 = v6;
        v50 = 7;
        goto LABEL_99;
      case 8u:
        v60 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v61 = *(_QWORD *)(v60 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v61 + 48))(a2, 1, v60))
        {
          v62 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          v92 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(a1, a2, v92);
          *((_BYTE *)a1 + *(int *)(v60 + 20)) = *((_BYTE *)a2 + *(int *)(v60 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v61 + 56))(a1, 0, 1, v60);
        }
        v93 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)a1 + *(int *)(v93 + 20)) = *(void **)((char *)a2 + *(int *)(v93 + 20));
        v48 = a1;
        v49 = v6;
        v50 = 8;
        goto LABEL_99;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v54 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v55 = (char *)a1 + v54;
        v56 = (char *)a2 + v54;
        v57 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
        v48 = a1;
        v49 = v6;
        v50 = 9;
LABEL_99:
        swift_storeEnumTagMultiPayload(v48, v49, v50);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v199 = a3[6];
  v200 = *(void **)((char *)a1 + v199);
  v201 = *(void **)((char *)a2 + v199);
  *(void **)((char *)a1 + v199) = v201;
  v202 = v201;

  v203 = a3[7];
  v204 = *(void **)((char *)a1 + v203);
  v205 = *(void **)((char *)a2 + v203);
  *(void **)((char *)a1 + v203) = v205;
  v206 = v205;

  return a1;
}

_QWORD *sub_1003F1B1C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  _OWORD *v75;
  _OWORD *v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  _OWORD *v87;
  _OWORD *v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(a2, v6))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v7))
      {
        case 2u:
          v8 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
          v9 = a1;
          v10 = v7;
          v11 = 2;
          goto LABEL_33;
        case 3u:
          v69 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(a1, a2, v69);
          v9 = a1;
          v10 = v7;
          v11 = 3;
          goto LABEL_33;
        case 4u:
          v70 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(a1, a2, v70);
          v9 = a1;
          v10 = v7;
          v11 = 4;
          goto LABEL_33;
        case 5u:
          v71 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(a1, a2, v71);
          v9 = a1;
          v10 = v7;
          v11 = 5;
          goto LABEL_33;
        case 6u:
          v72 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(a1, a2, v72);
          v9 = a1;
          v10 = v7;
          v11 = 6;
LABEL_33:
          swift_storeEnumTagMultiPayload(v9, v10, v11);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      v73 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v74 = v73[5];
      v75 = (_OWORD *)((char *)a1 + v74);
      v76 = (_OWORD *)((char *)a2 + v74);
      v77 = v76[3];
      v75[2] = v76[2];
      v75[3] = v77;
      v78 = v76[1];
      *v75 = *v76;
      v75[1] = v78;
      *(_OWORD *)((char *)v75 + 106) = *(_OWORD *)((char *)v76 + 106);
      v79 = v76[6];
      v80 = v76[4];
      v75[5] = v76[5];
      v75[6] = v79;
      v75[4] = v80;
      *((_BYTE *)a1 + v73[6]) = *((_BYTE *)a2 + v73[6]);
      *((_BYTE *)a1 + v73[7]) = *((_BYTE *)a2 + v73[7]);
      *((_BYTE *)a1 + v73[8]) = *((_BYTE *)a2 + v73[8]);
      *((_BYTE *)a1 + v73[9]) = *((_BYTE *)a2 + v73[9]);
      *((_BYTE *)a1 + v73[10]) = *((_BYTE *)a2 + v73[10]);
      *(_QWORD *)((char *)a1 + v73[11]) = *(_QWORD *)((char *)a2 + v73[11]);
      v45 = a1;
      v46 = v6;
      v47 = 0;
      goto LABEL_66;
    case 1u:
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v12))
      {
        case 2u:
          v13 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
          v14 = a1;
          v15 = v12;
          v16 = 2;
          goto LABEL_40;
        case 3u:
          v81 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(a1, a2, v81);
          v14 = a1;
          v15 = v12;
          v16 = 3;
          goto LABEL_40;
        case 4u:
          v82 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(a1, a2, v82);
          v14 = a1;
          v15 = v12;
          v16 = 4;
          goto LABEL_40;
        case 5u:
          v83 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(a1, a2, v83);
          v14 = a1;
          v15 = v12;
          v16 = 5;
          goto LABEL_40;
        case 6u:
          v84 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(a1, a2, v84);
          v14 = a1;
          v15 = v12;
          v16 = 6;
LABEL_40:
          swift_storeEnumTagMultiPayload(v14, v15, v16);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          break;
      }
      v85 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v86 = v85[5];
      v87 = (_OWORD *)((char *)a1 + v86);
      v88 = (_OWORD *)((char *)a2 + v86);
      v89 = v88[3];
      v87[2] = v88[2];
      v87[3] = v89;
      v90 = v88[1];
      *v87 = *v88;
      v87[1] = v90;
      *(_OWORD *)((char *)v87 + 106) = *(_OWORD *)((char *)v88 + 106);
      v91 = v88[6];
      v92 = v88[4];
      v87[5] = v88[5];
      v87[6] = v91;
      v87[4] = v92;
      *((_BYTE *)a1 + v85[6]) = *((_BYTE *)a2 + v85[6]);
      *((_BYTE *)a1 + v85[7]) = *((_BYTE *)a2 + v85[7]);
      *((_BYTE *)a1 + v85[8]) = *((_BYTE *)a2 + v85[8]);
      *((_BYTE *)a1 + v85[9]) = *((_BYTE *)a2 + v85[9]);
      *((_BYTE *)a1 + v85[10]) = *((_BYTE *)a2 + v85[10]);
      *(_QWORD *)((char *)a1 + v85[11]) = *(_QWORD *)((char *)a2 + v85[11]);
      v45 = a1;
      v46 = v6;
      v47 = 1;
      goto LABEL_66;
    case 2u:
      *a1 = *a2;
      v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        v22 = sub_10002A750(&qword_100644980);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v19, v20))
        {
          case 2u:
            v48 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v18, v19, v48);
            v49 = v18;
            v50 = v20;
            v51 = 2;
            goto LABEL_47;
          case 3u:
            v93 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v18, v19, v93);
            v49 = v18;
            v50 = v20;
            v51 = 3;
            goto LABEL_47;
          case 4u:
            v94 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v18, v19, v94);
            v49 = v18;
            v50 = v20;
            v51 = 4;
            goto LABEL_47;
          case 5u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v18, v19, v95);
            v49 = v18;
            v50 = v20;
            v51 = 5;
            goto LABEL_47;
          case 6u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v18, v19, v96);
            v49 = v18;
            v50 = v20;
            v51 = 6;
LABEL_47:
            swift_storeEnumTagMultiPayload(v49, v50, v51);
            break;
          default:
            memcpy(v18, v19, *(_QWORD *)(v21 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      v45 = a1;
      v46 = v6;
      v47 = 2;
      goto LABEL_66;
    case 3u:
      *a1 = *a2;
      v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        v28 = sub_10002A750(&qword_100644980);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v25, v26))
        {
          case 2u:
            v52 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v24, v25, v52);
            v53 = v24;
            v54 = v26;
            v55 = 2;
            goto LABEL_55;
          case 3u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v24, v25, v97);
            v53 = v24;
            v54 = v26;
            v55 = 3;
            goto LABEL_55;
          case 4u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v24, v25, v98);
            v53 = v24;
            v54 = v26;
            v55 = 4;
            goto LABEL_55;
          case 5u:
            v99 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v24, v25, v99);
            v53 = v24;
            v54 = v26;
            v55 = 5;
            goto LABEL_55;
          case 6u:
            v100 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v24, v25, v100);
            v53 = v24;
            v54 = v26;
            v55 = 6;
LABEL_55:
            swift_storeEnumTagMultiPayload(v53, v54, v55);
            break;
          default:
            memcpy(v24, v25, *(_QWORD *)(v27 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      v45 = a1;
      v46 = v6;
      v47 = 3;
      goto LABEL_66;
    case 4u:
      *a1 = *a2;
      v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        v34 = sub_10002A750(&qword_100644980);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v31, v32))
        {
          case 2u:
            v56 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v30, v31, v56);
            v57 = v30;
            v58 = v32;
            v59 = 2;
            goto LABEL_63;
          case 3u:
            v101 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v30, v31, v101);
            v57 = v30;
            v58 = v32;
            v59 = 3;
            goto LABEL_63;
          case 4u:
            v102 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v30, v31, v102);
            v57 = v30;
            v58 = v32;
            v59 = 4;
            goto LABEL_63;
          case 5u:
            v103 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v30, v31, v103);
            v57 = v30;
            v58 = v32;
            v59 = 5;
            goto LABEL_63;
          case 6u:
            v104 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v30, v31, v104);
            v57 = v30;
            v58 = v32;
            v59 = 6;
LABEL_63:
            swift_storeEnumTagMultiPayload(v57, v58, v59);
            break;
          default:
            memcpy(v30, v31, *(_QWORD *)(v33 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v45 = a1;
      v46 = v6;
      v47 = 4;
      goto LABEL_66;
    case 7u:
      v35 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(a2, 1, v35))
      {
        v37 = sub_10002A750(&qword_100644600);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v60 = *(int *)(v35 + 20);
        v61 = (char *)a1 + v60;
        v62 = (char *)a2 + v60;
        v63 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(a1, 0, 1, v35);
      }
      v64 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v65 = (char *)a1 + v64;
      v66 = (char *)a2 + v64;
      *(_OWORD *)v65 = *(_OWORD *)v66;
      *((_QWORD *)v65 + 2) = *((_QWORD *)v66 + 2);
      v45 = a1;
      v46 = v6;
      v47 = 7;
      goto LABEL_66;
    case 8u:
      v38 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(a2, 1, v38))
      {
        v40 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        v67 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(a1, a2, v67);
        *((_BYTE *)a1 + *(int *)(v38 + 20)) = *((_BYTE *)a2 + *(int *)(v38 + 20));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(a1, 0, 1, v38);
      }
      v68 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(_QWORD *)((char *)a1 + *(int *)(v68 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v68 + 20));
      v45 = a1;
      v46 = v6;
      v47 = 8;
      goto LABEL_66;
    case 9u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v41 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v42 = (char *)a1 + v41;
      v43 = (char *)a2 + v41;
      v44 = type metadata accessor for AnyTip(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
      v45 = a1;
      v46 = v6;
      v47 = 9;
LABEL_66:
      swift_storeEnumTagMultiPayload(v45, v46, v47);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v105 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  *(_QWORD *)((char *)a1 + v105) = *(_QWORD *)((char *)a2 + v105);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  return a1;
}

_QWORD *sub_1003F2694(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  _OWORD *v75;
  _OWORD *v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  _OWORD *v87;
  _OWORD *v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  void *v108;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v7))
        {
          case 2u:
            v8 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
            v9 = a1;
            v10 = v7;
            v11 = 2;
            goto LABEL_34;
          case 3u:
            v69 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(a1, a2, v69);
            v9 = a1;
            v10 = v7;
            v11 = 3;
            goto LABEL_34;
          case 4u:
            v70 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(a1, a2, v70);
            v9 = a1;
            v10 = v7;
            v11 = 4;
            goto LABEL_34;
          case 5u:
            v71 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(a1, a2, v71);
            v9 = a1;
            v10 = v7;
            v11 = 5;
            goto LABEL_34;
          case 6u:
            v72 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(a1, a2, v72);
            v9 = a1;
            v10 = v7;
            v11 = 6;
LABEL_34:
            swift_storeEnumTagMultiPayload(v9, v10, v11);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
            break;
        }
        v73 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v74 = v73[5];
        v75 = (_OWORD *)((char *)a1 + v74);
        v76 = (_OWORD *)((char *)a2 + v74);
        v77 = v76[3];
        v75[2] = v76[2];
        v75[3] = v77;
        v78 = v76[1];
        *v75 = *v76;
        v75[1] = v78;
        *(_OWORD *)((char *)v75 + 106) = *(_OWORD *)((char *)v76 + 106);
        v79 = v76[6];
        v80 = v76[4];
        v75[5] = v76[5];
        v75[6] = v79;
        v75[4] = v80;
        *((_BYTE *)a1 + v73[6]) = *((_BYTE *)a2 + v73[6]);
        *((_BYTE *)a1 + v73[7]) = *((_BYTE *)a2 + v73[7]);
        *((_BYTE *)a1 + v73[8]) = *((_BYTE *)a2 + v73[8]);
        *((_BYTE *)a1 + v73[9]) = *((_BYTE *)a2 + v73[9]);
        *((_BYTE *)a1 + v73[10]) = *((_BYTE *)a2 + v73[10]);
        *(_QWORD *)((char *)a1 + v73[11]) = *(_QWORD *)((char *)a2 + v73[11]);
        v45 = a1;
        v46 = v6;
        v47 = 0;
        goto LABEL_67;
      case 1u:
        v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v12))
        {
          case 2u:
            v13 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
            v14 = a1;
            v15 = v12;
            v16 = 2;
            goto LABEL_41;
          case 3u:
            v81 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(a1, a2, v81);
            v14 = a1;
            v15 = v12;
            v16 = 3;
            goto LABEL_41;
          case 4u:
            v82 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(a1, a2, v82);
            v14 = a1;
            v15 = v12;
            v16 = 4;
            goto LABEL_41;
          case 5u:
            v83 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(a1, a2, v83);
            v14 = a1;
            v15 = v12;
            v16 = 5;
            goto LABEL_41;
          case 6u:
            v84 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(a1, a2, v84);
            v14 = a1;
            v15 = v12;
            v16 = 6;
LABEL_41:
            swift_storeEnumTagMultiPayload(v14, v15, v16);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
            break;
        }
        v85 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v86 = v85[5];
        v87 = (_OWORD *)((char *)a1 + v86);
        v88 = (_OWORD *)((char *)a2 + v86);
        v89 = v88[3];
        v87[2] = v88[2];
        v87[3] = v89;
        v90 = v88[1];
        *v87 = *v88;
        v87[1] = v90;
        *(_OWORD *)((char *)v87 + 106) = *(_OWORD *)((char *)v88 + 106);
        v91 = v88[6];
        v92 = v88[4];
        v87[5] = v88[5];
        v87[6] = v91;
        v87[4] = v92;
        *((_BYTE *)a1 + v85[6]) = *((_BYTE *)a2 + v85[6]);
        *((_BYTE *)a1 + v85[7]) = *((_BYTE *)a2 + v85[7]);
        *((_BYTE *)a1 + v85[8]) = *((_BYTE *)a2 + v85[8]);
        *((_BYTE *)a1 + v85[9]) = *((_BYTE *)a2 + v85[9]);
        *((_BYTE *)a1 + v85[10]) = *((_BYTE *)a2 + v85[10]);
        *(_QWORD *)((char *)a1 + v85[11]) = *(_QWORD *)((char *)a2 + v85[11]);
        v45 = a1;
        v46 = v6;
        v47 = 1;
        goto LABEL_67;
      case 2u:
        *a1 = *a2;
        v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v21 = *(_QWORD *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        {
          v22 = sub_10002A750(&qword_100644980);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v19, v20))
          {
            case 2u:
              v48 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v18, v19, v48);
              v49 = v18;
              v50 = v20;
              v51 = 2;
              goto LABEL_48;
            case 3u:
              v93 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v18, v19, v93);
              v49 = v18;
              v50 = v20;
              v51 = 3;
              goto LABEL_48;
            case 4u:
              v94 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v18, v19, v94);
              v49 = v18;
              v50 = v20;
              v51 = 4;
              goto LABEL_48;
            case 5u:
              v95 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v18, v19, v95);
              v49 = v18;
              v50 = v20;
              v51 = 5;
              goto LABEL_48;
            case 6u:
              v96 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v18, v19, v96);
              v49 = v18;
              v50 = v20;
              v51 = 6;
LABEL_48:
              swift_storeEnumTagMultiPayload(v49, v50, v51);
              break;
            default:
              memcpy(v18, v19, *(_QWORD *)(v21 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        }
        v45 = a1;
        v46 = v6;
        v47 = 2;
        goto LABEL_67;
      case 3u:
        *a1 = *a2;
        v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          v28 = sub_10002A750(&qword_100644980);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v25, v26))
          {
            case 2u:
              v52 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v24, v25, v52);
              v53 = v24;
              v54 = v26;
              v55 = 2;
              goto LABEL_56;
            case 3u:
              v97 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v24, v25, v97);
              v53 = v24;
              v54 = v26;
              v55 = 3;
              goto LABEL_56;
            case 4u:
              v98 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v24, v25, v98);
              v53 = v24;
              v54 = v26;
              v55 = 4;
              goto LABEL_56;
            case 5u:
              v99 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v24, v25, v99);
              v53 = v24;
              v54 = v26;
              v55 = 5;
              goto LABEL_56;
            case 6u:
              v100 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v24, v25, v100);
              v53 = v24;
              v54 = v26;
              v55 = 6;
LABEL_56:
              swift_storeEnumTagMultiPayload(v53, v54, v55);
              break;
            default:
              memcpy(v24, v25, *(_QWORD *)(v27 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        v45 = a1;
        v46 = v6;
        v47 = 3;
        goto LABEL_67;
      case 4u:
        *a1 = *a2;
        v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v30 = (char *)a1 + v29;
        v31 = (char *)a2 + v29;
        v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v33 = *(_QWORD *)(v32 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
        {
          v34 = sub_10002A750(&qword_100644980);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v31, v32))
          {
            case 2u:
              v56 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v30, v31, v56);
              v57 = v30;
              v58 = v32;
              v59 = 2;
              goto LABEL_64;
            case 3u:
              v101 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v30, v31, v101);
              v57 = v30;
              v58 = v32;
              v59 = 3;
              goto LABEL_64;
            case 4u:
              v102 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v30, v31, v102);
              v57 = v30;
              v58 = v32;
              v59 = 4;
              goto LABEL_64;
            case 5u:
              v103 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v30, v31, v103);
              v57 = v30;
              v58 = v32;
              v59 = 5;
              goto LABEL_64;
            case 6u:
              v104 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v30, v31, v104);
              v57 = v30;
              v58 = v32;
              v59 = 6;
LABEL_64:
              swift_storeEnumTagMultiPayload(v57, v58, v59);
              break;
            default:
              memcpy(v30, v31, *(_QWORD *)(v33 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        v45 = a1;
        v46 = v6;
        v47 = 4;
        goto LABEL_67;
      case 7u:
        v35 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v36 = *(_QWORD *)(v35 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(a2, 1, v35))
        {
          v37 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v60 = *(int *)(v35 + 20);
          v61 = (char *)a1 + v60;
          v62 = (char *)a2 + v60;
          v63 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(a1, 0, 1, v35);
        }
        v64 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v65 = (char *)a1 + v64;
        v66 = (char *)a2 + v64;
        *(_OWORD *)v65 = *(_OWORD *)v66;
        *((_QWORD *)v65 + 2) = *((_QWORD *)v66 + 2);
        v45 = a1;
        v46 = v6;
        v47 = 7;
        goto LABEL_67;
      case 8u:
        v38 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v39 = *(_QWORD *)(v38 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(a2, 1, v38))
        {
          v40 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          v67 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(a1, a2, v67);
          *((_BYTE *)a1 + *(int *)(v38 + 20)) = *((_BYTE *)a2 + *(int *)(v38 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(a1, 0, 1, v38);
        }
        v68 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)a1 + *(int *)(v68 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v68 + 20));
        v45 = a1;
        v46 = v6;
        v47 = 8;
        goto LABEL_67;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v41 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v42 = (char *)a1 + v41;
        v43 = (char *)a2 + v41;
        v44 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
        v45 = a1;
        v46 = v6;
        v47 = 9;
LABEL_67:
        swift_storeEnumTagMultiPayload(v45, v46, v47);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  v105 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v106 = *(void **)((char *)a1 + v105);
  *(_QWORD *)((char *)a1 + v105) = *(_QWORD *)((char *)a2 + v105);

  v107 = a3[7];
  v108 = *(void **)((char *)a1 + v107);
  *(_QWORD *)((char *)a1 + v107) = *(_QWORD *)((char *)a2 + v107);

  return a1;
}

uint64_t sub_1003F3234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003F3240);
}

uint64_t sub_1003F3240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1003F32C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003F32D4);
}

uint64_t sub_1003F32D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

uint64_t sub_1003F334C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for TTRRemindersListViewModel.Item(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100533980;
    v4[2] = &unk_100533998;
    v4[3] = &unk_100533998;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1003F33D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100659F98);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100659F98);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1003F3468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain(v1);
    v4 = v2 - 1;
    v5 = (uint64_t *)(v1 + 40);
    do
    {
      v6 = v4;
      v8 = *(v5 - 1);
      v7 = *v5;
      ObjectType = swift_getObjectType(v8, v3);
      v10 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 40);
      swift_unknownObjectRetain(v8);
      LOBYTE(v2) = v10(ObjectType, v7);
      swift_unknownObjectRelease(v8);
      if ((v2 & 1) != 0)
        break;
      v4 = v6 - 1;
      v5 += 2;
    }
    while (v6);
    swift_bridgeObjectRelease(v1);
  }
  return v2 & 1;
}

void sub_1003F350C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t, uint64_t, __n128);
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  void *Strong;
  void *v14;
  id v15;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 88));
    v5 = (uint64_t *)(v2 + 40);
    do
    {
      v6 = *(v5 - 1);
      v7 = *v5;
      ObjectType = swift_getObjectType(v6, v4);
      v9 = *(void (**)(uint64_t, uint64_t, __n128))(v7 + 48);
      v10 = swift_unknownObjectRetain(v6);
      v9(ObjectType, v7, v10);
      swift_unknownObjectRelease(v6);
      v5 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease(v2);
  }
  v11 = *sub_10001413C((_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 72));
  if (qword_10063D2D0 != -1)
    swift_once(&qword_10063D2D0, sub_10005751C);
  v12 = type metadata accessor for Logger(0);
  sub_100012DC4(v12, (uint64_t)qword_10063F9B0);
  sub_1002EB4BC(0xD000000000000015, 0x80000001005624B0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v11 + 16);
  if (Strong)
  {
    v14 = Strong;
    v15 = objc_msgSend(Strong, "presentingViewController");

    if (v15)
    {
      objc_msgSend(v15, "dismissViewControllerAnimated:completion:", 1, 0);

    }
  }
}

uint64_t sub_1003F367C()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);
  sub_1000381C8(v0 + 32);
  sub_100027F10((_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  return swift_deallocClassInstance(v0, 96, 7);
}

uint64_t type metadata accessor for TTRIListDetailContainerPresenter()
{
  return objc_opt_self(_TtC9Reminders32TTRIListDetailContainerPresenter);
}

void sub_1003F36D8()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  void *v7;
  void *v8;
  id v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  void (*v26)(_QWORD *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v27;
  _QWORD *v28;
  void *v29;
  void *v30;
  _QWORD v31[8];
  _OWORD v32[2];
  _BYTE v33[25];
  __int128 aBlock;
  __int128 v35;
  _OWORD v36[2];

  v1 = v0;
  if ((sub_1003F3468() & 1) != 0)
  {
    v2 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, 0, 0);
    static TTRLocalizableStrings.Common.alertDiscardChangesButton.getter();
    v4 = v3;
    v5 = swift_allocObject(&unk_1006056E8, 24, 7);
    swift_weakInit(v5 + 16, v1);
    swift_retain();
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v4);
    *(_QWORD *)&v36[0] = sub_1003F3ADC;
    *((_QWORD *)&v36[0] + 1) = v5;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v35 = sub_1000D4884;
    *((_QWORD *)&v35 + 1) = &unk_100605700;
    v7 = _Block_copy(&aBlock);
    swift_release();
    v8 = (void *)objc_opt_self(UIAlertAction);
    v9 = objc_msgSend(v8, "actionWithTitle:style:handler:", v6, 2, v7);
    _Block_release(v7);
    swift_release();

    static TTRLocalizableStrings.Common.alertCancelButton.getter(v10);
    v12 = v11;
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
    v14 = objc_msgSend(v8, "actionWithTitle:style:handler:", v13, 1, 0);

    objc_msgSend(v2, "addAction:", v9);
    objc_msgSend(v2, "addAction:", v14);
    Strong = swift_unknownObjectWeakLoadStrong(v1 + 2);
    if (!Strong)
      goto LABEL_7;
    v16 = Strong;
    v17 = sub_1002F5AA4();
    v19 = v18;
    swift_unknownObjectRelease(v16);
    if ((v19 & 1) != 0)
      goto LABEL_7;
    if (v17 < 0)
      goto LABEL_7;
    v21 = v1[11];
    if (v17 >= *(_QWORD *)(v21 + 16))
      goto LABEL_7;
    v22 = v21 + 16 * v17;
    v23 = *(_QWORD *)(v22 + 32);
    v24 = *(_QWORD *)(v22 + 40);
    ObjectType = swift_getObjectType(v23, v20);
    v26 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, __n128))(v24 + 32);
    v27 = swift_unknownObjectRetain(v23);
    v26(v31, ObjectType, v24, v27);
    swift_unknownObjectRelease(v23);
    sub_1000A25CC((uint64_t)v31, (uint64_t)v32);
    if ((~v33[8] & 0xFE) != 0)
    {
      aBlock = v32[0];
      v35 = v32[1];
      v36[0] = *(_OWORD *)v33;
      *(_OWORD *)((char *)v36 + 9) = *(_OWORD *)&v33[9];
      UIViewController.setupForAdaptivePopoverPresentation(anchoredAt:)(&aBlock);
      sub_1000A2668((uint64_t)v31);
    }
    else
    {
LABEL_7:
      objc_msgSend(v2, "setPreferredStyle:", 1);
    }
    v28 = sub_10001413C(v1 + 6, v1[9]);
    v29 = (void *)swift_unknownObjectWeakLoadStrong(*v28 + 16);
    if (v29)
    {
      v30 = v29;
      objc_msgSend(v29, "presentViewController:animated:completion:", v2, 1, 0);

    }
    else
    {

    }
  }
  else
  {
    sub_1003F350C();
  }
}

uint64_t sub_1003F39EC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1003F3A10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  double result;
  _BYTE v6[24];

  v2 = a2 + 16;
  if (qword_10063D750 != -1)
    swift_once(&qword_10063D750, sub_1003F33D8);
  v3 = type metadata accessor for Logger(0);
  sub_100012DC4(v3, (uint64_t)qword_100659F98);
  v4 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"List Detail Container Discard Changes", 37, 2, v4);
  swift_bridgeObjectRelease(v4);
  swift_beginAccess(v2, v6, 0, 0);
  if (swift_weakLoadStrong(v2))
  {
    sub_1003F350C();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_1003F3ADC(uint64_t a1)
{
  uint64_t v1;

  return sub_1003F3A10(a1, v1);
}

uint64_t sub_1003F3AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10065A068);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10065A068);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

_QWORD *sub_1003F3B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unsigned __int8 *v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unsigned __int8 *v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 56);
  sub_10043261C();
  v3 = v2;
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    v32 = v1;
    sub_1003D8210(0, v4, 0);
    v31 = v3;
    v5 = (unsigned __int8 *)(v3 + 40);
    do
    {
      v6 = (void *)*((_QWORD *)v5 - 1);
      v7 = *v5;
      v8 = v6;
      v9 = TTRListOrCustomSmartListChangeItem.displayName.getter(v6, v7);
      v11 = v10;
      v13 = _swiftEmptyArrayStorage[2];
      v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1)
        sub_1003D8210(v12 > 1, v13 + 1, 1);
      _swiftEmptyArrayStorage[2] = v13 + 1;
      v14 = &_swiftEmptyArrayStorage[5 * v13];
      v14[4] = v9;
      v14[5] = v11;
      *((_BYTE *)v14 + 48) = 1;
      v14[7] = v6;
      *((_BYTE *)v14 + 64) = v7;
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(v31);
    v1 = v32;
  }
  else
  {
    swift_bridgeObjectRelease(v2);
  }
  v15 = *(_QWORD *)(v1 + 56);
  swift_unknownObjectRetain(v1);
  swift_bridgeObjectRetain(v15);
  sub_1003F486C(v16, v1);
  v18 = v17;
  swift_bridgeObjectRelease(v15);
  swift_unknownObjectRelease(v1);
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    sub_1003D8210(0, v19, 0);
    v33 = v18;
    v20 = (unsigned __int8 *)(v18 + 40);
    do
    {
      v21 = (void *)*((_QWORD *)v20 - 1);
      v22 = *v20;
      v23 = v21;
      v24 = TTRListOrCustomSmartListChangeItem.displayName.getter(v21, v22);
      v26 = v25;
      v28 = _swiftEmptyArrayStorage[2];
      v27 = _swiftEmptyArrayStorage[3];
      if (v28 >= v27 >> 1)
        sub_1003D8210(v27 > 1, v28 + 1, 1);
      _swiftEmptyArrayStorage[2] = v28 + 1;
      v29 = &_swiftEmptyArrayStorage[5 * v28];
      v29[4] = v24;
      v29[5] = v26;
      *((_BYTE *)v29 + 48) = 0;
      v29[7] = v21;
      *((_BYTE *)v29 + 64) = v22;
      v20 += 16;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease(v33);
  }
  else
  {
    swift_bridgeObjectRelease(v18);
  }
  return _swiftEmptyArrayStorage;
}

void sub_1003F3DB0(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  NSString v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  char isEscapingClosureAtFileLocation;
  __int128 v31;
  _QWORD aBlock[5];
  uint64_t v33;
  char v34[80];
  __int128 v35;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&aBlock[-2] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D758 != -1)
    swift_once(&qword_10063D758, sub_1003F3AE4);
  v8 = sub_100012DC4(v4, (uint64_t)qword_10065A068);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v9, v34);
  v31 = xmmword_100520250;
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x44497463656A626FLL;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v11 = (void *)*((_QWORD *)a1 + 3);
  v12 = TTRListOrCustomSmartListChangeItem.objectID.getter(v11, *((unsigned __int8 *)a1 + 32));
  *(_QWORD *)(inited + 72) = sub_100017648();
  *(_QWORD *)(inited + 48) = v12;
  v13 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Add list to group {list.objectID: %@}", 37, 2, v13);
  swift_bridgeObjectRelease(v13);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v15 = static TTRLocalizableStrings.UndoAction.addListWithNameFormat.getter(v14);
  v17 = v16;
  v18 = sub_10002A750((uint64_t *)&unk_100640FD0);
  v19 = swift_allocObject(v18, 72, 7);
  *(_OWORD *)(v19 + 16) = v31;
  v35 = *a1;
  *(_QWORD *)(v19 + 56) = &type metadata for String;
  *(_QWORD *)(v19 + 64) = sub_1000770A4();
  *(_OWORD *)(v19 + 32) = *a1;
  swift_bridgeObjectRetain(*((_QWORD *)&v35 + 1));
  static String.localizedStringWithFormat(_:_:)(v15, v17, v19);
  v21 = v20;
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v19);
  v22 = (void *)objc_opt_self(TTRUndoManager);
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21);
  v24 = swift_allocObject(&unk_100605800, 57, 7);
  *(_QWORD *)(v24 + 16) = v2;
  v25 = a1[1];
  *(_OWORD *)(v24 + 24) = *a1;
  *(_OWORD *)(v24 + 40) = v25;
  *(_BYTE *)(v24 + 56) = *((_BYTE *)a1 + 32);
  v26 = swift_allocObject(&unk_100605828, 32, 7);
  *(_QWORD *)(v26 + 16) = sub_1003F4AC0;
  *(_QWORD *)(v26 + 24) = v24;
  aBlock[4] = sub_1000381EC;
  v33 = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_100605840;
  v27 = _Block_copy(aBlock);
  v28 = v33;
  sub_1001EF324((uint64_t)&v35);
  v29 = v11;
  swift_retain(v26);
  swift_retain(v2);
  objc_msgSend(v22, "withActionName:block:", v23, v27, swift_release(v28).n128_f64[0]);

  _Block_release(v27);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v26, "", 130, 71, 51, 1);
  swift_release(v24);
  swift_release(v26);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_1003F40E0(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  NSString v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  char isEscapingClosureAtFileLocation;
  __int128 v31;
  _QWORD aBlock[5];
  uint64_t v33;
  char v34[80];
  __int128 v35;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&aBlock[-2] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D758 != -1)
    swift_once(&qword_10063D758, sub_1003F3AE4);
  v8 = sub_100012DC4(v4, (uint64_t)qword_10065A068);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v9, v34);
  v31 = xmmword_100520250;
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x44497463656A626FLL;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v11 = (void *)*((_QWORD *)a1 + 3);
  v12 = TTRListOrCustomSmartListChangeItem.objectID.getter(v11, *((unsigned __int8 *)a1 + 32));
  *(_QWORD *)(inited + 72) = sub_100017648();
  *(_QWORD *)(inited + 48) = v12;
  v13 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Add list to group {list.objectID: %@}", 37, 2, v13);
  swift_bridgeObjectRelease(v13);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v15 = static TTRLocalizableStrings.UndoAction.removeListWithNameFormat.getter(v14);
  v17 = v16;
  v18 = sub_10002A750((uint64_t *)&unk_100640FD0);
  v19 = swift_allocObject(v18, 72, 7);
  *(_OWORD *)(v19 + 16) = v31;
  v35 = *a1;
  *(_QWORD *)(v19 + 56) = &type metadata for String;
  *(_QWORD *)(v19 + 64) = sub_1000770A4();
  *(_OWORD *)(v19 + 32) = *a1;
  swift_bridgeObjectRetain(*((_QWORD *)&v35 + 1));
  static String.localizedStringWithFormat(_:_:)(v15, v17, v19);
  v21 = v20;
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v19);
  v22 = (void *)objc_opt_self(TTRUndoManager);
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21);
  v24 = swift_allocObject(&unk_100605788, 57, 7);
  *(_QWORD *)(v24 + 16) = v2;
  v25 = a1[1];
  *(_OWORD *)(v24 + 24) = *a1;
  *(_OWORD *)(v24 + 40) = v25;
  *(_BYTE *)(v24 + 56) = *((_BYTE *)a1 + 32);
  v26 = swift_allocObject(&unk_1006057B0, 32, 7);
  *(_QWORD *)(v26 + 16) = sub_1003F4A9C;
  *(_QWORD *)(v26 + 24) = v24;
  aBlock[4] = sub_10001B278;
  v33 = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_1006057C8;
  v27 = _Block_copy(aBlock);
  v28 = v33;
  sub_1001EF324((uint64_t)&v35);
  v29 = v11;
  swift_retain(v26);
  swift_retain(v2);
  objc_msgSend(v22, "withActionName:block:", v23, v27, swift_release(v28).n128_f64[0]);

  _Block_release(v27);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v26, "", 130, 79, 51, 1);
  swift_release(v24);
  swift_release(v26);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

uint64_t sub_1003F4410(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = TTRListOrCustomSmartListChangeItem.mergeableOrderingNode.getter(*(_QWORD *)(a2 + 24), *(unsigned __int8 *)(a2 + 32));
  TTRAccountEditor.move(list:topLevelPosition:)(v3, 1, 2);
  swift_unknownObjectRelease(v3);
  result = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (result)
  {
    v5 = result;
    Strong = swift_unknownObjectWeakLoadStrong(result + 16);
    if (Strong)
    {
      v7 = Strong;
      sub_10005422C();
      swift_unknownObjectRelease(v5);
      v5 = v7;
    }
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

void sub_1003F44A0(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  NSString v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v35;
  char v36[128];
  __int128 v37;

  v3 = v2;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D758 != -1)
    swift_once(&qword_10063D758, sub_1003F3AE4);
  v10 = sub_100012DC4(v6, (uint64_t)qword_10065A068);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  v11 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v11, v36);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 0x44497463656A626FLL;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v13 = (void *)*((_QWORD *)a1 + 3);
  v14 = TTRListOrCustomSmartListChangeItem.objectID.getter(v13, *((unsigned __int8 *)a1 + 32));
  v15 = sub_100017648();
  *(_QWORD *)(inited + 48) = v14;
  *(_QWORD *)(inited + 72) = v15;
  *(_QWORD *)(inited + 80) = 0x7865646E69;
  *(_QWORD *)(inited + 120) = &type metadata for Int;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  *(_QWORD *)(inited + 96) = a2;
  v16 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Move list in group {list.objectID: %@, index: %d}", 49, 2, v16);
  swift_bridgeObjectRelease(v16);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v18 = static TTRLocalizableStrings.UndoAction.moveListWithNameFormat.getter(v17);
  v20 = v19;
  v21 = sub_10002A750((uint64_t *)&unk_100640FD0);
  v22 = swift_allocObject(v21, 72, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100520250;
  v37 = *a1;
  *(_QWORD *)(v22 + 56) = &type metadata for String;
  *(_QWORD *)(v22 + 64) = sub_1000770A4();
  *(_OWORD *)(v22 + 32) = *a1;
  swift_bridgeObjectRetain(*((_QWORD *)&v37 + 1));
  static String.localizedStringWithFormat(_:_:)(v18, v20, v22);
  v24 = v23;
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v22);
  v25 = (void *)objc_opt_self(TTRUndoManager);
  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v24);
  v27 = swift_allocObject(&unk_100605878, 72, 7);
  *(_QWORD *)(v27 + 16) = v3;
  v28 = a1[1];
  *(_OWORD *)(v27 + 24) = *a1;
  *(_OWORD *)(v27 + 40) = v28;
  *(_BYTE *)(v27 + 56) = *((_BYTE *)a1 + 32);
  *(_QWORD *)(v27 + 64) = a2;
  v29 = swift_allocObject(&unk_1006058A0, 32, 7);
  *(_QWORD *)(v29 + 16) = sub_1003F4B08;
  *(_QWORD *)(v29 + 24) = v27;
  aBlock[4] = sub_1000381EC;
  v35 = v29;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_1006058B8;
  v30 = _Block_copy(aBlock);
  v31 = v35;
  sub_1001EF324((uint64_t)&v37);
  v32 = v13;
  swift_retain(v29);
  swift_retain(v3);
  objc_msgSend(v25, "withActionName:block:", v26, v30, swift_release(v31).n128_f64[0]);

  _Block_release(v30);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v29, "", 130, 87, 51, 1);
  swift_release(v27);
  swift_release(v29);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

uint64_t sub_1003F4808()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);
  sub_1000381C8(v0 + 32);

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 56));
  sub_100027F10((_QWORD *)(v0 + 72));
  return swift_deallocClassInstance(v0, 112, 7);
}

uint64_t type metadata accessor for TTRIGroupMembershipPresenter()
{
  return objc_opt_self(_TtC9Reminders28TTRIGroupMembershipPresenter);
}

void sub_1003F486C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char **v8;
  unint64_t v9;
  unsigned __int8 *i;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  id v27;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return;
  v4 = 0;
  v5 = a1 + 40;
  v6 = -(uint64_t)v2;
  v7 = _swiftEmptyArrayStorage;
  v8 = &selRef_supportsAttachments;
  v22 = *(_QWORD *)(a1 + 16);
  v24 = -(uint64_t)v2;
  do
  {
    v23 = v7;
    if (v4 <= v2)
      v9 = v2;
    else
      v9 = v4;
    v25 = -(uint64_t)v9;
    for (i = (unsigned __int8 *)(v5 + 16 * v4++); ; i += 16)
    {
      if (v25 + v4 == 1)
      {
        __break(1u);
        return;
      }
      v12 = (void *)*((_QWORD *)i - 1);
      v13 = *i;
      v27 = v12;
      v26 = v13;
      v14 = (void *)TTRListOrCustomSmartListChangeItem.parentListID.getter(v12, v13);
      v15 = objc_msgSend(*(id *)(a2 + 32), v8[41]);
      v11 = v15;
      if (!v14)
      {
        if (!v15)
          goto LABEL_10;
        goto LABEL_8;
      }
      if (!v15)
      {
        v11 = v14;
LABEL_8:

        goto LABEL_9;
      }
      sub_100017648();
      v16 = v14;
      v17 = static NSObject.== infix(_:_:)(v16, v11);

      v6 = v24;
      if ((v17 & 1) != 0)
        goto LABEL_10;
LABEL_9:
      if ((TTRListOrCustomSmartListChangeItem.canBeIncludedInGroup.getter(v12, v26) & 1) != 0)
        break;
LABEL_10:

      ++v4;
      if (v6 + v4 == 1)
        return;
    }
    v7 = v23;
    v18 = v6;
    if ((swift_isUniquelyReferenced_nonNull_native(v23) & 1) == 0)
    {
      sub_1003D81E4(0, v23[2] + 1, 1);
      v7 = v23;
    }
    v2 = v22;
    v20 = v7[2];
    v19 = v7[3];
    if (v20 >= v19 >> 1)
    {
      sub_1003D81E4(v19 > 1, v20 + 1, 1);
      v7 = v23;
    }
    v7[2] = v20 + 1;
    v21 = &v7[2 * v20];
    v21[4] = v12;
    *((_BYTE *)v21 + 40) = v26;
    v6 = v18;
    v8 = &selRef_supportsAttachments;
  }
  while (v18 + v4);
}

uint64_t sub_1003F4A94()
{
  return sub_100006CC8(57);
}

uint64_t sub_1003F4A9C()
{
  uint64_t v0;

  return sub_1003F4410(*(_QWORD *)(v0 + 16), v0 + 24);
}

uint64_t sub_1003F4AA8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003F4AB8()
{
  return sub_100006CC8(57);
}

uint64_t sub_1003F4AC0()
{
  uint64_t v0;

  return sub_100432950(*(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
}

uint64_t sub_1003F4AF0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003F4B00()
{
  return sub_100006CC8(72);
}

void sub_1003F4B08()
{
  uint64_t v0;

  sub_1004329E0(*(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_1003F4B3C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003F4B5C(void *a1)
{
  return sub_1003F4B94(a1, "TTRIRemindersBoardDragAndDropActivityTracker: dragSessionWillBegin {session: %s}", (uint64_t)&selRef_addObject_, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1003F5188);
}

uint64_t sub_1003F4B78(void *a1)
{
  return sub_1003F4B94(a1, "TTRIRemindersBoardDragAndDropActivityTracker: dragSessionDidEnd {session: %s}", (uint64_t)&selRef_removeObject_, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1003F5188);
}

uint64_t sub_1003F4B94(void *a1, char *a2, uint64_t a3, void (*a4)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *format;
  uint64_t v23;
  void (*v24)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v25;
  uint64_t v26;

  v8 = v4;
  if (qword_10063D760 != -1)
    swift_once(&qword_10063D760, sub_1003F4DE8);
  v10 = type metadata accessor for Logger(0);
  sub_100012DC4(v10, (uint64_t)qword_10065A140);
  v11 = swift_unknownObjectRetain_n(a1, 2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v24 = a4;
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v23 = swift_slowAlloc(32, -1);
    v26 = v23;
    *(_DWORD *)v14 = 136315138;
    v15 = objc_msgSend(a1, "description");
    format = a2;
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v18 = v17;

    v25 = sub_100027E40(v16, v18, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v14 + 4, v14 + 12);
    swift_unknownObjectRelease_n(a1, 2);
    v19 = v18;
    a4 = v24;
    swift_bridgeObjectRelease(v19);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, format, v14, 0xCu);
    swift_arrayDestroy(v23, 1, &type metadata for Any[8]);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n(a1, 2);
  }
  swift_unknownObjectRetain(a1);
  v20 = swift_retain();
  a4(v20, v8, a1, a3);
  swift_release();
  return swift_unknownObjectRelease(a1);
}

uint64_t sub_1003F4DB0(void *a1)
{
  return sub_1003F4B94(a1, "TTRIRemindersBoardDragAndDropActivityTracker: dropSessionDidEnter {session: %s}", (uint64_t)&selRef_addObject_, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1003F53D8);
}

uint64_t sub_1003F4DCC(void *a1)
{
  return sub_1003F4B94(a1, "TTRIRemindersBoardDragAndDropActivityTracker: dropSessionDidEnd {session: %s}", (uint64_t)&selRef_removeObject_, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1003F53D8);
}

uint64_t sub_1003F4DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10065A140);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10065A140);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1003F4E78(char a1)
{
  uint64_t v2;
  uint64_t v3;
  int32x2_t v4;
  int64x2_t v5;
  int32x2_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  Swift::String v15;
  Swift::String v16;

  v2 = sub_10002A750((uint64_t *)&unk_10065A230);
  v3 = swift_allocObject(v2, 64, 7);
  v4 = vdup_n_s32((a1 & 1) == 0);
  v5.i64[0] = v4.u32[0];
  v5.i64[1] = v4.u32[1];
  *(_OWORD *)(v3 + 16) = xmmword_1005201E0;
  *(int8x16_t *)(v3 + 32) = vandq_s8((int8x16_t)vcgezq_s64(vshlq_n_s64(v5, 0x3FuLL)), (int8x16_t)xmmword_100533B60);
  v6 = vdup_n_s32((a1 & 2) == 0);
  v5.i64[0] = v6.u32[0];
  v5.i64[1] = v6.u32[1];
  *(int8x16_t *)(v3 + 48) = vandq_s8((int8x16_t)vcgezq_s64(vshlq_n_s64(v5, 0x3FuLL)), (int8x16_t)xmmword_100533B70);
  v7 = sub_10002A750((uint64_t *)&unk_1006582D0);
  v8 = sub_100023FEC(&qword_10065A240, (uint64_t *)&unk_1006582D0, (uint64_t)&protocol conformance descriptor for [A]);
  v9 = Sequence.removingNils<A>()(v7, &type metadata for String, v8);
  swift_bridgeObjectRelease(v3);
  v10 = sub_10002A750(&qword_1006466D0);
  v11 = sub_100023FEC((unint64_t *)&qword_10064C980, &qword_1006466D0, (uint64_t)&protocol conformance descriptor for [A]);
  v12 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v10, v11);
  v14 = v13;
  swift_bridgeObjectRelease(v9);
  v15._countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v14);
  v16._countAndFlagsBits = 93;
  v16._object = (void *)0xE100000000000000;
  String.append(_:)(v16);
  return 91;
}

uint64_t sub_1003F4FFC()
{
  _QWORD *v0;

  return sub_1003F4E78(*v0);
}

uint64_t sub_1003F5004()
{
  uint64_t v0;

  sub_1000381B8(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));

  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for TTRIRemindersBoardDragAndDropActivityTracker()
{
  return objc_opt_self(_TtC9Reminders44TTRIRemindersBoardDragAndDropActivityTracker);
}

ValueMetadata *type metadata accessor for TTRIRemindersBoardDragAndDropActivityTracker.ActiveStates()
{
  return &type metadata for TTRIRemindersBoardDragAndDropActivityTracker.ActiveStates;
}

unint64_t sub_1003F506C()
{
  unint64_t result;

  result = qword_10065A210;
  if (!qword_10065A210)
  {
    result = swift_getWitnessTable(&unk_100533C20, &type metadata for TTRIRemindersBoardDragAndDropActivityTracker.ActiveStates);
    atomic_store(result, (unint64_t *)&qword_10065A210);
  }
  return result;
}

unint64_t sub_1003F50B4()
{
  unint64_t result;

  result = qword_10065A218;
  if (!qword_10065A218)
  {
    result = swift_getWitnessTable(&unk_100533BF0, &type metadata for TTRIRemindersBoardDragAndDropActivityTracker.ActiveStates);
    atomic_store(result, (unint64_t *)&qword_10065A218);
  }
  return result;
}

unint64_t sub_1003F50FC()
{
  unint64_t result;

  result = qword_10065A220;
  if (!qword_10065A220)
  {
    result = swift_getWitnessTable(&unk_100533C48, &type metadata for TTRIRemindersBoardDragAndDropActivityTracker.ActiveStates);
    atomic_store(result, (unint64_t *)&qword_10065A220);
  }
  return result;
}

unint64_t sub_1003F5144()
{
  unint64_t result;

  result = qword_10065A228;
  if (!qword_10065A228)
  {
    result = swift_getWitnessTable(&unk_100533C80, &type metadata for TTRIRemindersBoardDragAndDropActivityTracker.ActiveStates);
    atomic_store(result, (unint64_t *)&qword_10065A228);
  }
  return result;
}

void sub_1003F5188(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_QWORD *)(a1 + 16);
  objc_msgSend(*(id *)(a2 + 40), *a4);
  v6 = (uint64_t)objc_msgSend(*(id *)(a1 + 40), "count") > 0;
  v7 = (uint64_t)objc_msgSend(*(id *)(a1 + 48), "count");
  v8 = v6 | 2;
  if (v7 < 1)
    v8 = v6;
  *(_QWORD *)(a1 + 16) = v8;
  if (v8 != v5)
  {
    if (qword_10063D760 != -1)
      swift_once(&qword_10063D760, sub_1003F4DE8);
    v9 = type metadata accessor for Logger(0);
    sub_100012DC4(v9, (uint64_t)qword_10065A140);
    v10 = swift_retain_n(a1, 2);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc(22, -1);
      v14 = swift_slowAlloc(64, -1);
      v25 = v14;
      *(_DWORD *)v13 = 136315394;
      v15 = sub_1003F4E78(v5);
      v17 = v16;
      v24 = sub_100027E40(v15, v16, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v13 + 4, v13 + 12);
      swift_bridgeObjectRelease(v17);
      *(_WORD *)(v13 + 12) = 2080;
      v18 = sub_1003F4E78(*(_QWORD *)(a1 + 16));
      v20 = v19;
      v24 = sub_100027E40(v18, v19, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v13 + 14, v13 + 22);
      swift_release_n(a1, 2);
      swift_bridgeObjectRelease(v20);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "TTRIRemindersBoardDragAndDropActivityTracker: state change {from: %s, to: %s}", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy(v14, 2, &type metadata for Any[8]);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);

      v21 = *(void (**)(uint64_t))(a1 + 24);
      if (!v21)
        return;
    }
    else
    {

      swift_release_n(a1, 2);
      v21 = *(void (**)(uint64_t))(a1 + 24);
      if (!v21)
        return;
    }
    v22 = *(_QWORD *)(a1 + 32);
    v23 = swift_retain();
    v21(v23);
    sub_1000381B8((uint64_t)v21, v22);
  }
}

void sub_1003F53D8(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_QWORD *)(a1 + 16);
  objc_msgSend(*(id *)(a2 + 48), *a4);
  v6 = (uint64_t)objc_msgSend(*(id *)(a1 + 40), "count") > 0;
  v7 = (uint64_t)objc_msgSend(*(id *)(a1 + 48), "count");
  v8 = v6 | 2;
  if (v7 < 1)
    v8 = v6;
  *(_QWORD *)(a1 + 16) = v8;
  if (v8 != v5)
  {
    if (qword_10063D760 != -1)
      swift_once(&qword_10063D760, sub_1003F4DE8);
    v9 = type metadata accessor for Logger(0);
    sub_100012DC4(v9, (uint64_t)qword_10065A140);
    v10 = swift_retain_n(a1, 2);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc(22, -1);
      v14 = swift_slowAlloc(64, -1);
      v25 = v14;
      *(_DWORD *)v13 = 136315394;
      v15 = sub_1003F4E78(v5);
      v17 = v16;
      v24 = sub_100027E40(v15, v16, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v13 + 4, v13 + 12);
      swift_bridgeObjectRelease(v17);
      *(_WORD *)(v13 + 12) = 2080;
      v18 = sub_1003F4E78(*(_QWORD *)(a1 + 16));
      v20 = v19;
      v24 = sub_100027E40(v18, v19, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v13 + 14, v13 + 22);
      swift_release_n(a1, 2);
      swift_bridgeObjectRelease(v20);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "TTRIRemindersBoardDragAndDropActivityTracker: state change {from: %s, to: %s}", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy(v14, 2, &type metadata for Any[8]);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);

      v21 = *(void (**)(uint64_t))(a1 + 24);
      if (!v21)
        return;
    }
    else
    {

      swift_release_n(a1, 2);
      v21 = *(void (**)(uint64_t))(a1 + 24);
      if (!v21)
        return;
    }
    v22 = *(_QWORD *)(a1 + 32);
    v23 = swift_retain();
    v21(v23);
    sub_1000381B8((uint64_t)v21, v22);
  }
}

uint64_t sub_1003F5628(double a1, double a2, double a3)
{
  unint64_t v4;
  char v5;
  double v6;
  double v7;
  double v9;
  double v10;

  v9 = a2;
  v10 = a1;
  if ((~*(_QWORD *)&a3 & 0x7FF0000000000000) == 0 || (~*(_QWORD *)&a1 & 0x7FF0000000000000) == 0)
  {
    v4 = sub_10007EA8C();
    v5 = FloatingPoint.rescaledAlmostEqual(to:tolerance:)(&v10, &v9, &type metadata for CGFloat, v4);
  }
  else
  {
    v6 = fabs(a3);
    v7 = fabs(a1);
    if (v6 <= v7)
      v6 = v7;
    if (v6 <= 2.22507386e-308)
      v6 = 2.22507386e-308;
    v5 = vabdd_f64(a3, a1) < v6 * a2;
  }
  return v5 & 1;
}

void sub_1003F56C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  char v20;
  char v21;
  char v22;
  char v23;

  v1 = v0;
  if (UIAccessibilityIsVoiceOverRunning() || UIAccessibilityIsSwitchControlRunning())
  {
    v2 = sub_10002A750(&qword_10065A4B0);
    v3 = swift_allocObject(v2, 192, 7);
    *(_OWORD *)(v3 + 16) = xmmword_100524260;
    v4 = v3 + 32;
    goto LABEL_4;
  }
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator))
  {
    v23 = 0;
    swift_retain();
    v5 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)(&v23);
    swift_release();
    v11 = sub_10002A750(&qword_10065A4B0);
    v3 = swift_allocObject(v11, 192, 7);
    *(_OWORD *)(v3 + 16) = xmmword_100524260;
    v4 = v3 + 32;
    if (v5)
    {
      *(_QWORD *)(v3 + 56) = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
      *(_QWORD *)(v3 + 32) = v5;
LABEL_5:
      v6 = OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator;
      if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator))
      {
        __break(1u);
        goto LABEL_23;
      }
      v22 = 2;
      swift_retain();
      v7 = v5;
      v8 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)(&v22);
      swift_release();
      if (v8)
      {
        v10 = type metadata accessor for TTRIReminderTitleTextView(0);
        v9 = swift_dynamicCastClass(v8, v10);
        if (v9)
        {
          *(_QWORD *)(v4 + 56) = v10;
          *(_QWORD *)(v4 + 32) = v9;
          goto LABEL_14;
        }

      }
      *(_OWORD *)(v4 + 32) = 0u;
      *(_OWORD *)(v4 + 48) = 0u;
LABEL_14:
      if (*(_QWORD *)(v1 + v6))
      {
        v21 = 4;
        __chkstk_darwin(v9);
        v19[2] = v1;
        swift_retain();
        v12 = TTRGridViewPredefinedContentPopulator.makeViewHiddenOnRemoval(for:createIfNeeded:)(&v21, sub_1001F8550, v19);
        swift_release();
        *(_QWORD *)(v4 + 88) = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
        *(_QWORD *)(v4 + 64) = v12;
        if (*(_QWORD *)(v1 + v6))
        {
          v20 = 8;
          swift_retain();
          v13 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)(&v20);
          swift_release();
          if (v13)
          {
            v14 = type metadata accessor for TTRIWhitespaceSelectionAvoidingTextView(0);
            v15 = swift_dynamicCastClass(v13, v14);
            if (v15)
            {
              *(_QWORD *)(v4 + 120) = v14;
              *(_QWORD *)(v4 + 96) = v15;
LABEL_21:
              v16 = sub_1003F7AC4();
              *(_QWORD *)(v4 + 152) = type metadata accessor for TTRIRemindersListCellAutoCompleteSuggestionsStackView(0);
              *(_QWORD *)(v4 + 128) = v16;
              v19[4] = v3;
              v17 = sub_10002A750(&qword_10065A4B8);
              v18 = sub_100023FEC(&qword_10065A4C0, &qword_10065A4B8, (uint64_t)&protocol conformance descriptor for [A]);
              Sequence.removingNils<A>()(v17, &type metadata for Any[8], v18);
              swift_bridgeObjectRelease(v3);

              return;
            }

          }
          *(_OWORD *)(v4 + 96) = 0u;
          *(_OWORD *)(v4 + 112) = 0u;
          goto LABEL_21;
        }
        goto LABEL_24;
      }
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
LABEL_4:
    v5 = 0;
    *(_OWORD *)v4 = 0u;
    *(_OWORD *)(v4 + 16) = 0u;
    goto LABEL_5;
  }
LABEL_25:
  __break(1u);
}

void sub_1003F59C4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  char v7;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator);
  if (v1)
  {
    v7 = 2;
    swift_retain(v1);
    v2 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)(&v7);
    swift_release(v1);
    if (v2)
    {
      v3 = type metadata accessor for TTRIReminderTitleTextView(0);
      v4 = (void *)swift_dynamicCastClass(v2, v3);
      v5 = v4;
      if (v4)
      {
        if (objc_msgSend(v4, "canBecomeFirstResponder"))
        {
          v6 = objc_msgSend(v5, "window");
          objc_msgSend(v6, "makeKeyWindow");

          objc_msgSend(v5, "becomeFirstResponder");
        }
      }

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1003F5AB0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(unsigned __int8 *, uint64_t, uint64_t);
  int v18;
  __int128 v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  void *v27;
  _BYTE v28[7];
  char v29;
  char v30[24];
  _OWORD v31[3];

  v1 = v0;
  v2 = sub_10002A750(&qword_10064CB10);
  __chkstk_darwin(v2);
  v4 = &v28[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v7 = &v28[-v6];
  __chkstk_darwin(v8);
  v10 = &v28[-v9];
  __chkstk_darwin(v11);
  v13 = &v28[-v12];
  v14 = (uint64_t)&v1[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration];
  swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration], v30, 1, 0);
  sub_10000735C(v14, (uint64_t)v13, &qword_10064CB10);
  v15 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v13, 1, v15) == 1)
  {
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v18 = v13[*(int *)(v15 + 72)];
  sub_10001F544((uint64_t)v13, type metadata accessor for TTRIBoardReminderCellContentConfiguration);
  if (v18 == 1)
  {
    if (v17((unsigned __int8 *)v14, 1, v15) == 1)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    *(_BYTE *)(v14 + *(int *)(v15 + 72)) = 0;
    sub_10000735C(v14, (uint64_t)v10, &qword_10064CB10);
    if (v17(v10, 1, v15) == 1)
    {
LABEL_21:
      __break(1u);
      return;
    }
    sub_10000735C(v14, (uint64_t)v7, &qword_10064CB10);
    sub_10002B1E8((uint64_t)v10, (uint64_t)v4, type metadata accessor for TTRIBoardReminderCellContentConfiguration);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v4, 0, 1, v15);
    swift_beginAccess(v14, v31, 33, 0);
    sub_1003FDD34((uint64_t)v4, v14);
    swift_endAccess(v31);
    sub_1003F8630((uint64_t)v10, (uint64_t)v7);
    sub_1003F88D0((uint64_t)v10);
    objc_msgSend(v1, "setUserInteractionEnabled:", *v10);
    v19 = *((_OWORD *)v10 + 7);
    v31[0] = *((_OWORD *)v10 + 6);
    v31[1] = v19;
    v31[2] = *((_OWORD *)v10 + 8);
    sub_1003F918C((uint64_t)v31);
    sub_1000073A0((uint64_t)v7, &qword_10064CB10);
    sub_10001F544((uint64_t)v10, type metadata accessor for TTRIBoardReminderCellContentConfiguration);
  }
  v20 = OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator])
    goto LABEL_18;
  v29 = 8;
  swift_retain();
  v21 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)(&v29);
  swift_release();
  if (v21)
  {
    v22 = type metadata accessor for TTRIWhitespaceSelectionAvoidingTextView(0);
    v23 = (void *)swift_dynamicCastClass(v21, v22);
    if (v23)
    {
      v24 = objc_msgSend(v23, "window");

      objc_msgSend(v24, "makeKeyWindow");
      v21 = v24;
    }

  }
  if (!*(_QWORD *)&v1[v20])
    goto LABEL_19;
  v29 = 8;
  swift_retain();
  v25 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)(&v29);
  swift_release();
  if (v25)
  {
    v26 = type metadata accessor for TTRIWhitespaceSelectionAvoidingTextView(0);
    v27 = (void *)swift_dynamicCastClass(v25, v26);
    if (v27)
      objc_msgSend(v27, "becomeFirstResponder");

  }
}

void sub_1003F5E28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = sub_10002A750(&qword_10065A498);
  v3 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1005201E0;
  v4 = OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v5 = (_QWORD *)v3;
  LOBYTE(v27) = 2;
  swift_retain();
  v6 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)(&v27);
  swift_release();
  if (v6)
  {
    v7 = type metadata accessor for TTRIReminderTitleTextView(0);
    v8 = swift_dynamicCastClass(v6, v7);
    if (v8)
      goto LABEL_6;

  }
  v8 = 0;
LABEL_6:
  v5[4] = v8;
  if (*(_QWORD *)(v1 + v4))
  {
    LOBYTE(v27) = 8;
    swift_retain();
    v9 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)(&v27);
    swift_release();
    v10 = 0;
    if (v9)
    {
      v11 = type metadata accessor for TTRIWhitespaceSelectionAvoidingTextView(0);
      v10 = swift_dynamicCastClass(v9, v11);
      if (!v10)
      {

        v10 = 0;
      }
    }
    v5[5] = v10;
    v27 = (uint64_t)v5;
    specialized Array._endMutation()(v10);
    v12 = v27;
    v13 = sub_10002A750(&qword_10065A4A0);
    v14 = type metadata accessor for TTRIReminderTitleTextView(0);
    v15 = sub_100023FEC(&qword_10065A4A8, &qword_10065A4A0, (uint64_t)&protocol conformance descriptor for [A]);
    v16 = Sequence.removingNils<A>()(v13, v14, v15);
    swift_bridgeObjectRelease(v12);
    v27 = (uint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v16 >> 62)
    {
      if (v16 < 0)
        v26 = v16;
      else
        v26 = v16 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v16);
      v17 = _CocoaArrayWrapper.endIndex.getter(v26);
      if (v17)
        goto LABEL_12;
    }
    else
    {
      v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v16);
      if (v17)
      {
LABEL_12:
        if (v17 >= 1)
        {
          for (i = 0; i != v17; ++i)
          {
            if ((v16 & 0xC000000000000001) != 0)
              v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v16);
            else
              v23 = *(id *)(v16 + 8 * i + 32);
            v22 = v23;
            v24 = objc_msgSend(v23, "_accessibilityInternalTextLinks");
            if (v24)
            {
              v19 = v24;
              v20 = sub_100005ED8(0, &qword_10064CB20, UIAccessibilityLinkSubelement_ptr);
              v21 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

              v22 = v19;
            }
            else
            {
              v21 = _swiftEmptyArrayStorage;
            }

            sub_100450F14((uint64_t)v21);
          }
          swift_bridgeObjectRelease_n(v16, 2);
          v25 = v27;
          if (v27 < 0)
            goto LABEL_29;
          goto LABEL_28;
        }
        __break(1u);
        goto LABEL_31;
      }
    }
    swift_bridgeObjectRelease_n(v16, 2);
    v25 = (uint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
    {
LABEL_29:
      sub_1002AC5A4(v25);
      swift_bridgeObjectRelease(v25);
      return;
    }
LABEL_28:
    if ((v25 & 0x4000000000000000) == 0)
      return;
    goto LABEL_29;
  }
LABEL_32:
  __break(1u);
}

void sub_1003F6118()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  char v6;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator);
  if (!v1)
  {
    __break(1u);
    return;
  }
  v6 = 2;
  swift_retain(v1);
  v2 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)(&v6);
  swift_release(v1);
  if (v2)
  {
    v3 = type metadata accessor for TTRIReminderTitleTextView(0);
    v4 = (void *)swift_dynamicCastClass(v2, v3);
    if (v4)
    {
      v5 = objc_msgSend(v4, "attributedText");

      if (v5)
        return;
    }
    else
    {

    }
  }
  objc_msgSend(objc_allocWithZone((Class)NSAttributedString), "init");
}

void sub_1003F61D4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  ObjectType = swift_getObjectType(v2, a2);
  if (qword_10063D768 != -1)
    swift_once(&qword_10063D768, sub_1003F6864);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100012DC4(v6, (uint64_t)qword_10065A248);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(64, -1);
    v31 = v11;
    *(_DWORD *)v10 = 136315394;
    v12 = _typeName(_:qualified:)(ObjectType, 0);
    v14 = v13;
    v30 = sub_100027E40(v12, v13, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v14);
    *(_WORD *)(v10 + 12) = 2080;
    v30 = sub_100027E40(0xD00000000000001DLL, 0x8000000100578390, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v10 + 14, v10 + 22);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s: %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 2, &type metadata for Any[8]);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }

  if (!*(_QWORD *)(v3 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator))
  {
    __break(1u);
    return;
  }
  LOBYTE(v31) = 2;
  swift_retain();
  v15 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)(&v31);
  swift_release();
  if (v15)
  {
    v17 = type metadata accessor for TTRIReminderTitleTextView(0);
    v18 = (void *)swift_dynamicCastClass(v15, v17);
    if (v18)
    {
      v19 = v18;
      if ((a1 & 1) != 0)
        objc_msgSend(v18, "set_textInputSource:", 3);
      UITextInput<>.ttrBeginEditing()(v17);
      v20 = objc_msgSend(v19, "selectedTextRange");

      if (v20)
      {

      }
      else
      {
        v28 = v15;
        v29 = (void *)UITextInput<>.textRangeForEndOfDocument.getter(v17);
        objc_msgSend(v19, "setSelectedTextRange:", v29);

      }
      return;
    }

  }
  v21 = Logger.logObject.getter(v16);
  v22 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc(22, -1);
    v24 = swift_slowAlloc(64, -1);
    v31 = v24;
    *(_DWORD *)v23 = 136315394;
    v25 = _typeName(_:qualified:)(ObjectType, 0);
    v27 = v26;
    v30 = sub_100027E40(v25, v26, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v23 + 4, v23 + 12);
    swift_bridgeObjectRelease(v27);
    *(_WORD *)(v23 + 12) = 2080;
    v30 = sub_100027E40(0xD00000000000001DLL, 0x8000000100578390, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v23 + 14, v23 + 22);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s: %s - Unable to get titleTextView", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy(v24, 2, &type metadata for Any[8]);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);
  }

}

void sub_1003F65E0()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  char v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator];
  if (v2)
  {
    v15 = 2;
    swift_retain(v2);
    v3 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)(&v15);
    swift_release(v2);
    if (v3)
    {
      v4 = type metadata accessor for TTRIReminderTitleTextView(0);
      v5 = (void *)swift_dynamicCastClass(v3, v4);
      if (v5)
      {
        v6 = v5;
        objc_msgSend(v5, "bounds");
        objc_msgSend(v1, "convertRect:fromCoordinateSpace:", v6);
        v17 = CGRectInset(v16, 0.0, -12.0);
        x = v17.origin.x;
        y = v17.origin.y;
        width = v17.size.width;
        height = v17.size.height;
        objc_msgSend(v1, "bounds");
        v19.origin.x = v11;
        v19.origin.y = v12;
        v19.size.width = v13;
        v19.size.height = v14;
        v18.origin.x = x;
        v18.origin.y = y;
        v18.size.width = width;
        v18.size.height = height;
        CGRectIntersection(v18, v19);

      }
      else
      {

      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1003F671C(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  CGFloat v6;
  uint64_t v7;
  void *v8;
  void *v9;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  char v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;

  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator];
  if (v3)
  {
    v4 = v1;
    v21 = 8;
    swift_retain(v3);
    v5 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)(&v21);
    swift_release(v3);
    v6 = 0.0;
    if (v5)
    {
      v7 = type metadata accessor for TTRIWhitespaceSelectionAvoidingTextView(0);
      v8 = (void *)swift_dynamicCastClass(v5, v7);
      if (v8)
      {
        v9 = v8;
        objc_msgSend(v8, "bounds");
        objc_msgSend(v4, "convertRect:fromCoordinateSpace:", v9);
        v23 = CGRectInset(v22, 0.0, -12.0);
        x = v23.origin.x;
        y = v23.origin.y;
        width = v23.size.width;
        height = v23.size.height;
        objc_msgSend(v4, "bounds");
        v26.origin.x = v14;
        v26.origin.y = v15;
        v26.size.width = v16;
        v26.size.height = v17;
        v24.origin.x = x;
        v24.origin.y = y;
        v24.size.width = width;
        v24.size.height = height;
        v25 = CGRectIntersection(v24, v26);
        v6 = v25.origin.x;
        v18 = v25.origin.y;
        v19 = v25.size.width;
        v20 = v25.size.height;

LABEL_7:
        *(CGFloat *)a1 = v6;
        *(CGFloat *)(a1 + 8) = v18;
        *(CGFloat *)(a1 + 16) = v19;
        *(CGFloat *)(a1 + 24) = v20;
        *(_BYTE *)(a1 + 32) = 0;
        return;
      }

    }
    v18 = 0.0;
    v19 = 0.0;
    v20 = 0.0;
    goto LABEL_7;
  }
  __break(1u);
}

uint64_t sub_1003F6864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10065A248);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10065A248);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_1003F68F4(unsigned __int8 *a1)
{
  objc_class *v1;
  objc_class *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  v2 = v1;
  v4 = objc_msgSend(objc_allocWithZone(v1), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v4, "setInvalidatingIntrinsicContentSizeAlsoInvalidatesSuperview:", 1);
  sub_1003F6D70();
  if (qword_10063D3E0 != -1)
    swift_once(&qword_10063D3E0, sub_100123164);
  objc_msgSend(v4, "setDirectionalLayoutMargins:", xmmword_100646FC0, *(double *)&qword_100646FD0, *(double *)&qword_100646FD8);
  sub_1003F93F4();
  sub_1003F6A34(a1);
  v5 = sub_10002A750(&qword_1006415F0);
  v6 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100520250;
  *(_QWORD *)(v6 + 32) = type metadata accessor for UITraitDisplayScale(0);
  *(_QWORD *)(v6 + 40) = &protocol witness table for UITraitDisplayScale;
  v7 = v4;
  v8 = UIView.registerForTraitChanges<A>(_:handler:)(v6, sub_1003FDED4, 0, v2);
  swift_unknownObjectRelease(v8);
  swift_bridgeObjectRelease(v6);

  sub_10001F544((uint64_t)a1, type metadata accessor for TTRIBoardReminderCellContentConfiguration);
  return v7;
}

uint64_t sub_1003F6A34(unsigned __int8 *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  _BYTE v14[24];
  _OWORD v15[3];

  v3 = sub_10002A750(&qword_10064CB10);
  __chkstk_darwin(v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v8 = &v14[-v7 - 8];
  v9 = (uint64_t)&v1[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration];
  swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration], v14, 0, 0);
  sub_10000735C(v9, (uint64_t)v8, &qword_10064CB10);
  sub_10002B1E8((uint64_t)a1, (uint64_t)v5, type metadata accessor for TTRIBoardReminderCellContentConfiguration);
  v10 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v15, 33, 0);
  sub_1003FDD34((uint64_t)v5, v9);
  swift_endAccess(v15);
  sub_1003F8630((uint64_t)a1, (uint64_t)v8);
  sub_1003F88D0((uint64_t)a1);
  objc_msgSend(v1, "setUserInteractionEnabled:", *a1);
  v11 = *((_OWORD *)a1 + 7);
  v15[0] = *((_OWORD *)a1 + 6);
  v15[1] = v11;
  v15[2] = *((_OWORD *)a1 + 8);
  sub_1003F918C((uint64_t)v15);
  return sub_1000073A0((uint64_t)v8, &qword_10064CB10);
}

void sub_1003F6BA0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD v7[6];

  v1 = (void *)objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_100605C00, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject(&unk_100605C28, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100400EB4;
  *(_QWORD *)(v3 + 24) = v2;
  v7[4] = sub_1000381EC;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10001B258;
  v7[3] = &unk_100605C40;
  v4 = _Block_copy(v7);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutAnimation:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 144, 81, 40, 1);
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

unint64_t sub_1003F6D08@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1003FDFA0(*a1);
  *a2 = result;
  return result;
}

void sub_1003F6D30(_QWORD *a1@<X8>)
{
  *a1 = &off_1005EB048;
}

BOOL sub_1003F6D44(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  if (*a1)
    v2 = *a2 == 0;
  else
    v2 = 1;
  if (v2)
    return (*a1 | *a2) == 0;
  else
    return *a1 == *a2;
}

void sub_1003F6D70()
{
  char *v0;
  double *v1;
  id v2;
  double v3;
  double v4;

  v1 = (double *)&v0[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___layoutMetrics];
  if ((v0[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___layoutMetrics + 8] & 1) != 0)
  {
    v2 = objc_msgSend(v0, "traitCollection");
    objc_msgSend(v2, "displayScale");
    v4 = v3;

    *v1 = fmax(v4, 1.0);
    *((_BYTE *)v1 + 8) = 0;
  }
}

void sub_1003F6DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = Strong + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration;
    swift_beginAccess(Strong + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration, &v10, 0, 0);
    v6 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6) == 1)
    {
      __break(1u);
    }
    else
    {
      v7 = *(void (**)(uint64_t))(v5 + 64);
      if (v7)
      {
        v8 = *(_QWORD *)(v5 + 72);
        v9 = swift_retain();
        v7(v9);
        sub_1000381B8((uint64_t)v7, v8);
      }

    }
  }
}

id sub_1003F6EB8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  double v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  Swift::String v11;
  Swift::String v12;
  void *object;
  NSString v14;
  uint64_t v15;

  v1 = v0;
  v2 = objc_allocWithZone((Class)type metadata accessor for TTRIReminderTitleTextView(0));
  v3 = (void *)TTRIReminderTitleTextView.init(isForUseInNUIContainerView:lineIndexWhereClippingBegins:hashtagTokenEditingBehavior:)(1, 0, 1, 0);
  sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v4 = v3;
  v5 = (void *)static UIFont.roundedBodyFont.getter(v4);
  objc_msgSend(v4, "setFont:", v5);

  objc_msgSend(v4, "setAdjustsFontForContentSizeCategory:", 1);
  LODWORD(v6) = 1132068864;
  objc_msgSend(v4, "setLayoutSize:withContentPriority:", NUIContainerViewSizeUnbounded[0], NUIContainerViewSizeUnbounded[1], v6);
  v7 = (void *)objc_opt_self(UIColor);
  v8 = v4;
  v9 = objc_msgSend(v7, "labelColor");
  objc_msgSend(v8, "setTextColor:", v9);

  objc_msgSend(v8, "setBackgroundColor:", 0);
  v10 = v8;
  v11._object = (void *)0x80000001005783B0;
  v12._countAndFlagsBits = 0x656C746954;
  v12._object = (void *)0xE500000000000000;
  v11._countAndFlagsBits = 0xD00000000000003FLL;
  object = TTRLocalizedString(_:comment:)(v12, v11)._object;
  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setAccessibilityLabel:", v14, swift_bridgeObjectRelease(object).n128_f64[0]);

  v15 = sub_100005ED8(0, (unint64_t *)&unk_1006406C0, UITextView_ptr);
  UITextDraggable<>.disableDragInteraction_rdar93793341()(v15);
  objc_msgSend(v10, "setTextDropDelegate:", *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_unsupportedTextDropHandler));
  return v10;
}

void sub_1003F708C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = Strong + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration;
    swift_beginAccess(Strong + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration, &v10, 0, 0);
    v6 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6) == 1)
    {
      __break(1u);
    }
    else
    {
      v7 = *(void (**)(uint64_t))(v5 + 240);
      if (v7)
      {
        v8 = *(_QWORD *)(v5 + 248);
        v9 = swift_retain();
        v7(v9);
        sub_1000381B8((uint64_t)v7, v8);
      }

    }
  }
}

void sub_1003F7150(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = Strong + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration;
    swift_beginAccess(Strong + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration, &v10, 0, 0);
    v6 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6) == 1)
    {
      __break(1u);
    }
    else
    {
      v7 = *(void (**)(uint64_t))(v5 + 168);
      if (v7)
      {
        v8 = *(_QWORD *)(v5 + 176);
        v9 = swift_retain();
        v7(v9);
        sub_1000381B8((uint64_t)v7, v8);
      }

    }
  }
}

id sub_1003F7214()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  _BOOL8 IsBoldTextEnabled;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  NSString *v22;
  id v23;
  uint64_t v24;
  NSString *v25;
  id v26;
  unint64_t v27;
  id v28;
  NSString v29;
  Class isa;
  id v31;
  uint64_t v32;
  uint64_t v34;

  v1 = v0;
  v2 = objc_allocWithZone((Class)type metadata accessor for TTRIWhitespaceSelectionAvoidingTextView(0));
  v3 = (void *)TTRIReminderTitleTextView.init(isForUseInNUIContainerView:lineIndexWhereClippingBegins:hashtagTokenEditingBehavior:)(1, 8, 0, 0);
  objc_msgSend(v3, "setTextContainerInset:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  v4 = objc_msgSend(v3, "textContainer");
  objc_msgSend(v4, "setLineFragmentPadding:", 0.0);

  v5 = objc_msgSend(v3, "layoutManager");
  objc_msgSend(v5, "setUsesFontLeading:", 0);

  v6 = (void *)objc_opt_self(UIColor);
  v7 = v3;
  v8 = objc_msgSend(v6, "clearColor");
  objc_msgSend(v7, "setBackgroundColor:", v8);

  objc_msgSend(v7, "setAdjustsFontForContentSizeCategory:", 1);
  v9 = v7;
  v10 = objc_msgSend(v6, "secondaryLabelColor");
  objc_msgSend(v9, "setTextColor:", v10);

  v11 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v12 = v9;
  v13 = (void *)static UIFont.roundedSubheadlineFont.getter(v12);
  objc_msgSend(v12, "setFont:", v13);

  v14 = objc_msgSend(v12, "textContainer");
  objc_msgSend(v14, "setLineBreakMode:", 4);

  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  if (IsBoldTextEnabled)
    v16 = static UIFont.roundedHeadlineFont.getter(IsBoldTextEnabled);
  else
    v16 = static UIFont.roundedSubheadlineFont.getter(IsBoldTextEnabled);
  v17 = (void *)v16;
  static TTRLocalizableStrings.RemindersList.addNotePlaceholderText.getter();
  v19 = v18;
  v20 = sub_10002A750(&qword_10064BB40);
  inited = swift_initStackObject(v20, &v34);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v22 = NSForegroundColorAttributeName;
  v23 = objc_msgSend(v6, "placeholderTextColor");
  v24 = sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
  *(_QWORD *)(inited + 40) = v23;
  *(_QWORD *)(inited + 64) = v24;
  *(_QWORD *)(inited + 72) = NSFontAttributeName;
  *(_QWORD *)(inited + 104) = v11;
  *(_QWORD *)(inited + 80) = v17;
  v25 = NSFontAttributeName;
  v26 = v17;
  v27 = sub_100350498(inited);
  v28 = objc_allocWithZone((Class)NSAttributedString);
  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  type metadata accessor for Key(0);
  sub_1000175C8((unint64_t *)&qword_10064BB50, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10051FF08);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v31 = objc_msgSend(v28, "initWithString:attributes:", v29, isa, swift_bridgeObjectRelease(v27).n128_f64[0]);

  objc_msgSend(v12, "setAttributedPlaceholder:", v31);
  v32 = sub_100005ED8(0, (unint64_t *)&unk_1006406C0, UITextView_ptr);
  UITextDraggable<>.disableDragInteraction_rdar93793341()(v32);
  objc_msgSend(v12, "setTextDropDelegate:", *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_unsupportedTextDropHandler));

  return v12;
}

void sub_1003F75C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = Strong + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration;
    swift_beginAccess(Strong + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration, &v10, 0, 0);
    v6 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6) == 1)
    {
      __break(1u);
    }
    else
    {
      v7 = *(void (**)(uint64_t))(v5 + 200);
      if (v7)
      {
        v8 = *(_QWORD *)(v5 + 208);
        v9 = swift_retain();
        v7(v9);
        sub_1000381B8((uint64_t)v7, v8);
      }

    }
  }
}

id sub_1003F768C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  id v4;
  __n128 v5;
  unint64_t v6;
  unint64_t v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  int v15;
  _DWORD v16[2];

  v2 = type metadata accessor for TTRNoAnimationContainerStackView(0, a2);
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  objc_msgSend(v3, "setAxis:", 0);
  objc_msgSend(v3, "setDistribution:", 8);
  v4 = v3;
  sub_1003F6D70();
  v7 = v6;
  if (qword_10063D3E0 != -1)
    swift_once(&qword_10063D3E0, sub_100123164);
  v5.n128_u64[0] = v7;
  objc_msgSend(v4, "setSpacing:", ceil(_:toScale:)(*(double *)&qword_100646FD8 * 0.5, v5));

  objc_msgSend(v4, "setAlignment:", 3);
  objc_msgSend(v4, "setDebugBoundingBoxesEnabled:", 0);
  v8 = NUIContainerViewSizeUseDefault[0];
  v9 = NUIContainerViewSizeUseDefault[1];
  type metadata accessor for UILayoutPriority(0);
  v11 = v10;
  v15 = 1082130432;
  v16[0] = 1148846080;
  v12 = sub_1000175C8((unint64_t *)&qword_10065BE10, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&protocol conformance descriptor for UILayoutPriority);
  static _UIKitNumericRawRepresentable.- infix(_:_:)(v16, &v15, v11, v12);
  LODWORD(v13) = v16[1];
  objc_msgSend(v4, "setLayoutSize:withContentPriority:", v8, v9, v13);
  return v4;
}

objc_class *sub_1003F77FC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  double v7;
  void *v8;
  id v9;
  UIAction_optional v11;

  v1 = OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___appLinkIndicator;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___appLinkIndicator);
  if (v2)
  {
    v3 = *(objc_class **)(v0
                        + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___appLinkIndicator);
  }
  else
  {
    v4 = v0;
    type metadata accessor for TTRIExpandedHitTestButton(0);
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v5 = swift_allocObject(&unk_100605AF8, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16, v0);
    v11.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1003FF1D8, v5);
    isa = UIButton.init(type:primaryAction:)(UIButtonTypeCustom, v11).super.super.super.super.isa;
    sub_1003F6D70();
    LODWORD(v7) = 1148846080;
    -[objc_class setLayoutSize:withContentPriority:](isa, "setLayoutSize:withContentPriority:", 24.0, 24.0, v7);
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = isa;
    v3 = isa;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

void sub_1003F7928(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = Strong + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration;
    swift_beginAccess(Strong + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration, &v11, 0, 0);
    v6 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6) == 1)
    {
      __break(1u);
    }
    else
    {
      v7 = v5 + *(int *)(v6 + 108);
      v8 = *(void (**)(uint64_t))(v7 + 24);
      if (v8)
      {
        v9 = *(_QWORD *)(v7 + 32);
        v10 = swift_retain();
        v8(v10);
        sub_1000381B8((uint64_t)v8, v9);
      }

    }
  }
}

id sub_1003F79F8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___assigneeIndicator;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___assigneeIndicator);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___assigneeIndicator);
  }
  else
  {
    v4 = type metadata accessor for TTRIRemindersListCellAssigneeView(0);
    v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
    v6 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "didPressAssigneeIndicator:");
    objc_msgSend(v6, "setNumberOfTouchesRequired:", 1);
    objc_msgSend(v5, "addGestureRecognizer:", v6);

    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_1003F7AC4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  void *v13;
  id v14;
  int v16;
  _DWORD v17[2];

  v1 = OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___autoCompleteView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___autoCompleteView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___autoCompleteView);
  }
  else
  {
    v4 = v0;
    v5 = objc_allocWithZone((Class)type metadata accessor for TTRIRemindersListCellAutoCompleteSuggestionsStackView(0));
    v6 = (void *)TTRIRemindersListCellAutoCompleteSuggestionsStackView.init(listLayout:)(1);
    v7 = NUIContainerViewSizeUseDefault[0];
    v8 = NUIContainerViewSizeUseDefault[1];
    type metadata accessor for UILayoutPriority(0);
    v10 = v9;
    v16 = 1084227584;
    v17[0] = 1148846080;
    v11 = sub_1000175C8((unint64_t *)&qword_10065BE10, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&protocol conformance descriptor for UILayoutPriority);
    static _UIKitNumericRawRepresentable.- infix(_:_:)(v17, &v16, v10, v11);
    LODWORD(v12) = v17[1];
    objc_msgSend(v6, "setLayoutSize:withContentPriority:", v7, v8, v12);
    v13 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v14 = v2;
  return v3;
}

id sub_1003F7BC0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksSeparator;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksSeparator);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksSeparator);
  }
  else
  {
    v4 = v0;
    v5 = objc_allocWithZone((Class)type metadata accessor for TTRISeparator(0));
    v6 = (void *)TTRISeparator.init(axis:)(0);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_1003F7C34()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksButton);
  }
  else
  {
    v4 = sub_1003F7C94(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void *sub_1003F7C94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v23[2];

  v2 = sub_10002A750(&qword_100646D68);
  __chkstk_darwin(v2);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UIButton.Configuration(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v23 - v10;
  sub_10008CF70();
  UIButton.Configuration.title.setter(0, 0xE000000000000000);
  UIConfigurationTextAttributesTransformer.init(_:)(sub_1003F8054, 0);
  v12 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 0, 1, v12);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v4);
  sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v13 = (void *)static UIFont.roundedBodyEmphasizedFont.getter();
  v14 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v13, 1);

  UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v14);
  sub_1003F6D70();
  if (qword_10063D3E0 != -1)
    swift_once(&qword_10063D3E0, sub_100123164);
  UIButton.Configuration.contentInsets.setter(*(double *)&xmmword_100646FC0, *((double *)&xmmword_100646FC0 + 1), *(double *)&qword_100646FD0, *(double *)&qword_100646FD8);
  type metadata accessor for TTRIOutlineDisclosureButton();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
  v15 = swift_allocObject(&unk_100605AF8, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, a1);
  v16 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1003FDD7C, v15);
  v17 = (void *)UIButton.init(configuration:primaryAction:)(v8, v16);
  objc_msgSend(v17, "setChangesSelectionAsPrimaryAction:", 1);
  objc_msgSend(v17, "setContentHorizontalAlignment:", 3);
  objc_msgSend(v17, "setMinimumLayoutSize:", NUIContainerViewLengthUseDefault, 44.0);
  v18 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  memset(v23, 0, sizeof(v23));
  v19 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
  v20 = swift_allocObject(&unk_100605AF8, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16, a1);
  swift_retain();
  v21 = NSNotificationCenter.ttr_addObserver(forName:object:queue:using:)(UIAccessibilityButtonShapesEnabledStatusDidChangeNotification, v23, v19, sub_1003FDD84, v20);

  swift_release();
  sub_1000073A0((uint64_t)v23, &qword_100640E50);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  swift_release();
  *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_buttonShapesSubscription) = v21;
  swift_release();
  return v17;
}

uint64_t sub_1003F8054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v4 = type metadata accessor for AttributeContainer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  swift_getKeyPath(&unk_100534140);
  KeyPath = swift_getKeyPath(&unk_100534170);
  v6 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v9 = static UIFont.roundedSubheadlineFont.getter(v6);
  v7 = sub_100019EC8();
  return AttributeContainer.subscript.setter(&v9, KeyPath, v7);
}

void sub_1003F8104(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = Strong + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration;
    swift_beginAccess(Strong + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration, &v10, 0, 0);
    v6 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6) == 1)
    {
      __break(1u);
    }
    else
    {
      v7 = *(void (**)(uint64_t))(v5 + 128);
      if (v7)
      {
        v8 = *(_QWORD *)(v5 + 136);
        v9 = swift_retain();
        v7(v9);
        sub_1000381B8((uint64_t)v7, v8);
      }

    }
  }
}

void sub_1003F81C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_1003F8218();

  }
}

void sub_1003F8218()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  NSString v10;
  id v11;
  uint64_t v12;

  v0 = sub_10002A750(&qword_100646D60);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v12 - v5;
  v7 = (void *)sub_1003F7C34(v4);
  UIButton.configuration.getter(v7);
  v8 = type metadata accessor for UIButton.Configuration(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8))
  {
    sub_10000735C((uint64_t)v6, (uint64_t)v2, &qword_100646D60);
    UIButton.configuration.setter(v2);

    sub_1000073A0((uint64_t)v6, &qword_100646D60);
  }
  else
  {
    if (UIAccessibilityButtonShapesEnabled())
      v9 = 0x8000000100562390;
    else
      v9 = 0xEF64726177726F66;
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
    v11 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v10);

    UIButton.Configuration.image.setter(v11);
    UIButton.configuration.setter(v6);

  }
}

id sub_1003F83AC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  NSString v6;
  id v7;
  id v8;
  uint64_t v9;
  NSString v10;
  double v11;
  double Width;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  CGRect v19;

  v2 = type metadata accessor for InfoButton();
  sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
  v3 = swift_allocObject(&unk_100605AF8, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, a1);
  v4 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1003FDD2C, v3);
  v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "initWithFrame:primaryAction:", v4, 0.0, 0.0, 0.0, 0.0);

  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v6);

  objc_msgSend(v5, "setImage:forState:", v7, 0);
  v8 = v5;
  v9 = *(_QWORD *)(TTRAccesibility.RemindersList.Label.EditDetails.unsafeMutableAddressor() + 8);
  swift_bridgeObjectRetain(v9);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  objc_msgSend(v8, "setAccessibilityLabel:", v10);

  LODWORD(v11) = 1148846080;
  objc_msgSend(v8, "setLayoutSize:withContentPriority:", NUIContainerViewSizeUseDefault[0], NUIContainerViewSizeUseDefault[1], v11);
  objc_msgSend(v8, "setCustomAlignmentRectInsets:", 6.0, 0.0, 6.0, 0.0);
  objc_msgSend(v8, "sizeToFit");
  objc_msgSend(a1, "bounds");
  Width = CGRectGetWidth(v19);
  objc_msgSend(v8, "frame");
  v14 = v13;
  v16 = v15;
  v17 = v8;
  CGRect.flippedForRTLIfNeeded(for:inContainerWithWidth:)(objc_msgSend(a1, "effectiveUserInterfaceLayoutDirection"), Width, Width + -10.0, 10.0, v14, v16);
  objc_msgSend(v17, "setFrame:");

  return v17;
}

void sub_1003F8630(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v3 = v2;
  v26 = a2;
  v5 = sub_10002A750(&qword_10064CB10);
  v27 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v27 + 64);
  __chkstk_darwin(v5);
  v7 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v12 = swift_allocObject(v11, 64, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100520050;
  v13 = *(void **)&v2[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentView];
  if (v13)
  {
    v14 = (_QWORD *)v12;
    *(_QWORD *)(v12 + 32) = v13;
    v15 = v13;
    v14[5] = sub_1003F7BC0();
    v14[6] = sub_1003F7AC4();
    v16 = sub_1003F7C34();
    v14[7] = v16;
    aBlock[0] = v14;
    specialized Array._endMutation()(v16);
    v17 = aBlock[0];
    sub_10002B1E8(a1, (uint64_t)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TTRIBoardReminderCellContentConfiguration);
    sub_10000735C(v26, (uint64_t)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10064CB10);
    v18 = *(unsigned __int8 *)(v8 + 80);
    v19 = (v18 + 40) & ~v18;
    v20 = *(unsigned __int8 *)(v27 + 80);
    v21 = (v9 + v20 + v19) & ~v20;
    v22 = (_QWORD *)swift_allocObject(&unk_100605B88, v21 + v6, v18 | v20 | 7);
    v22[2] = v3;
    v22[3] = v17;
    v22[4] = v3;
    sub_10001F580((uint64_t)v10, (uint64_t)v22 + v19, type metadata accessor for TTRIBoardReminderCellContentConfiguration);
    sub_10000F614((uint64_t)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v22 + v21, &qword_10064CB10);
    v23 = swift_allocObject(&unk_100605BB0, 32, 7);
    *(_QWORD *)(v23 + 16) = sub_100400E14;
    *(_QWORD *)(v23 + 24) = v22;
    aBlock[4] = sub_10001B278;
    aBlock[5] = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001B258;
    aBlock[3] = &unk_100605BC8;
    v24 = _Block_copy(aBlock);
    v25 = v3;
    swift_retain();
    objc_msgSend(v25, "performBatchUpdates:", v24, swift_release().n128_f64[0]);
    _Block_release(v24);
    LOBYTE(v25) = swift_isEscapingClosureAtFileLocation(v23, "", 144, 497, 43, 1);
    swift_release();
    swift_release();
    if ((v25 & 1) == 0)
      return;
    __break(1u);
  }
  __break(1u);
}

void sub_1003F88D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  _BOOL4 v16;
  char v17;
  char v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  double v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  char v44;
  char v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  void (*v55)(char *, uint64_t);
  char v56;
  uint64_t v57;
  BOOL v58;
  char v59;
  char v60;
  char v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  unint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  unint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  _BOOL4 v87;
  _BOOL4 v88;
  int v89;
  int v90;
  uint64_t (*v91)(char *);
  int v92;
  int v93;
  int v94;
  unsigned int v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  int v99;
  unint64_t v100;
  int v101;
  int v102;
  _QWORD v103[4];

  v86 = type metadata accessor for REMFeatureFlags(0);
  v84 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v85 = (char *)&v84 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v84 - v8;
  LODWORD(v100) = TTRBoardReminderCellContentConfigurationType.priorityIndicatorIsHidden.getter(v7);
  v102 = *(unsigned __int8 *)(a1 + *(int *)(v3 + 84));
  v101 = TTRBoardReminderCellContentConfigurationType.infoButtonVisibility.getter(v3, &off_1006615B8);
  v10 = TTRBoardReminderCellContentConfigurationType.listNameIsHidden.getter(v3, &off_1006615B8);
  v95 = TTRBoardReminderCellContentConfigurationType.subtaskCountIsHidden.getter(v3, &off_1006615B8);
  v11 = TTRBoardReminderCellContentConfigurationType.descriptionLabelIsHidden.getter(v3, &off_1006615B8);
  v12 = *(unsigned __int8 *)(a1 + *(int *)(v3 + 72));
  v13 = TTRBoardReminderCellContentConfigurationType.locationLabelIsHidden.getter(v3, &off_1006615B8);
  v14 = TTRBoardReminderCellContentConfigurationType.hashtagsLabelIsHidden.getter(v3, &off_1006615B8);
  if (!*(_QWORD *)(a1 + 192) || (*(_BYTE *)(a1 + 216) & 1) != 0)
  {
    v87 = 0;
    v15 = *(_QWORD *)(a1 + 256);
    if (!v15)
      goto LABEL_4;
  }
  else
  {
    v87 = (*(_BYTE *)(a1 + 217) & 1) == 0;
    v15 = *(_QWORD *)(a1 + 256);
    if (!v15)
    {
LABEL_4:
      v16 = 1;
      goto LABEL_7;
    }
  }
  v16 = *(_QWORD *)(v15 + 16) == 0;
LABEL_7:
  v88 = v16;
  v99 = v100 ^ 1;
  LODWORD(v91) = v10 ^ 1;
  v17 = TTRBoardReminderCellContentConfigurationType.assigneeIsHidden.getter(v3, &off_1006615B8);
  sub_10002B1E8(a1, (uint64_t)v9, type metadata accessor for TTRIBoardReminderCellContentConfiguration);
  if ((v17 & 1) != 0)
  {
    v18 = TTRBoardReminderCellContentConfigurationType.appLinkIsHidden.getter(v3, &off_1006615B8);
    sub_10001F544((uint64_t)v9, type metadata accessor for TTRIBoardReminderCellContentConfiguration);
    sub_10002B1E8(a1, (uint64_t)v5, type metadata accessor for TTRIBoardReminderCellContentConfiguration);
    if ((v18 & 1) != 0)
    {
      v89 = TTRBoardReminderCellContentConfigurationType.urlIsHidden.getter(v3, &off_1006615B8);
      goto LABEL_12;
    }
  }
  else
  {
    sub_10001F544((uint64_t)v9, type metadata accessor for TTRIBoardReminderCellContentConfiguration);
    sub_10002B1E8(a1, (uint64_t)v5, type metadata accessor for TTRIBoardReminderCellContentConfiguration);
  }
  v89 = 0;
LABEL_12:
  v90 = v11 ^ 1;
  v94 = v13 ^ 1;
  v92 = v12 ^ 1;
  v93 = v14 ^ 1;
  v19 = v101;
  sub_10001F544((uint64_t)v5, type metadata accessor for TTRIBoardReminderCellContentConfiguration);
  v20 = sub_10002A750(&qword_10065A388);
  v21 = swift_allocObject(v20, 56, 7);
  *(_OWORD *)(v21 + 16) = xmmword_100520250;
  v22 = sub_10002A750(&qword_10065A390);
  v23 = swift_allocObject(v22, 37, 7);
  v24 = v23;
  if ((v100 & 1) != 0)
    v25 = 15;
  else
    v25 = 1;
  *(_OWORD *)(v23 + 16) = xmmword_100524260;
  *(_BYTE *)(v23 + 32) = 0;
  *(_BYTE *)(v23 + 33) = v25;
  *(_BYTE *)(v23 + 34) = 2;
  if (v19 == 2)
    v26 = 15;
  else
    v26 = 4;
  *(_BYTE *)(v23 + 35) = v26;
  v27 = v102 & 1;
  if ((v102 & 1) != 0)
    v28 = 3;
  else
    v28 = 15;
  v29 = swift_allocObject(&unk_100605B40, 24, 7);
  *(_BYTE *)(v24 + 36) = v28;
  v103[0] = v24;
  v30 = sub_10002A750(&qword_10065A398);
  v31 = sub_100023FEC(&qword_10065A3A0, &qword_10065A398, (uint64_t)&protocol conformance descriptor for [A]);
  v32 = Sequence.removingNils<A>()(v30, &type metadata for TTRIBoardReminderCellContentView.ContentGridSubview, v31);
  v33 = swift_bridgeObjectRelease(v24);
  v34 = *(double *)CGFloat.nuiUseDefault.unsafeMutableAddressor(v33);
  v35 = sub_1003FDDF0();
  v36 = sub_1003FDE34();
  v37 = sub_1003FDE78();
  v100 = v35;
  v96 = v37;
  v97 = v36;
  v38 = TTRGridViewPredefinedContentPopulator.GridRow.init(_:alignment:beforeSpacing:)(v32, -1, &type metadata for TTRIBoardReminderCellContentView.ContentGridSubview, v35, v36, v37, v34);
  *(_QWORD *)(v29 + 16) = v21;
  v39 = (_QWORD *)(v29 + 16);
  *(_QWORD *)(v21 + 32) = v38;
  *(_QWORD *)(v21 + 40) = v40;
  *(_QWORD *)(v21 + 48) = v41;
  v42 = v99;
  v43 = v99 & 1;
  sub_1003F9FE4(5, v91 & 1, v29, v99 & 1, v19 != 2, v27);
  if ((v95 & 1) != 0)
  {
    v44 = v102;
    sub_1003F9FE4(7, v90 & 1, v29, v42 & 1, v19 != 2, v102 & 1);
    sub_1003F9FE4(8, v92 & 1, v29, v42 & 1, v19 != 2, v44 & 1);
    sub_1003F9FE4(9, v93 & 1, v29, v42 & 1, v19 != 2, v44 & 1);
    sub_1003F9FE4(10, v94 & 1, v29, v42 & 1, v19 != 2, v44 & 1);
    v45 = 0;
    v46 = v98;
    v47 = v44;
  }
  else
  {
    v48 = v19 != 2;
    v49 = v102 & 1;
    v95 = enum case for REMFeatureFlags.subtasksInSmartLists(_:);
    v51 = v84;
    v50 = v85;
    v91 = *(uint64_t (**)(char *))(v84 + 104);
    v52 = v86;
    v53 = v91(v85);
    v54 = REMFeatureFlags.isEnabled.getter(v53);
    v55 = *(void (**)(char *, uint64_t))(v51 + 8);
    v55(v50, v52);
    v56 = (v54 & 1) == 0;
    v42 = v99;
    sub_1003F9FE4(6, v56, v29, v43, v48, v49);
    sub_1003F9FE4(7, v90 & 1, v29, v43, v48, v49);
    sub_1003F9FE4(8, v92 & 1, v29, v43, v48, v49);
    sub_1003F9FE4(9, v93 & 1, v29, v43, v48, v49);
    sub_1003F9FE4(10, v94 & 1, v29, v43, v48, v49);
    v57 = ((uint64_t (*)(char *, _QWORD, uint64_t))v91)(v50, v95, v52);
    v45 = REMFeatureFlags.isEnabled.getter(v57);
    v55(v50, v52);
    v46 = v98;
    v47 = v102;
  }
  v58 = v88;
  v59 = v101 != 2;
  v60 = v47 & 1;
  v61 = v42 & 1;
  sub_1003F9FE4(11, v45 & 1, v29, v61, v59, v47 & 1);
  sub_1003F9FE4(12, v87, v29, v61, v59, v60);
  sub_1003F6D70();
  if (qword_10063D3E0 != -1)
    swift_once(&qword_10063D3E0, sub_100123164);
  v62 = *(double *)&qword_100646FD0;
  if (!v58)
  {
    v63 = TTRGridViewPredefinedContentPopulator.GridRow.init(_:alignment:beforeSpacing:)(&off_1005EA3F0, -1, &type metadata for TTRIBoardReminderCellContentView.ContentGridSubview, v100, v97, v96, *(double *)&qword_100646FD0);
    v65 = v64;
    v67 = v66;
    swift_beginAccess(v29 + 16, v103, 33, 0);
    v68 = (_QWORD *)*v39;
    if ((swift_isUniquelyReferenced_nonNull_native(*v39) & 1) == 0)
      v68 = sub_10045594C(0, v68[2] + 1, 1, v68);
    v70 = v68[2];
    v69 = v68[3];
    if (v70 >= v69 >> 1)
      v68 = sub_10045594C((_QWORD *)(v69 > 1), v70 + 1, 1, v68);
    v68[2] = v70 + 1;
    v71 = &v68[3 * v70];
    v71[4] = v63;
    v71[5] = v65;
    v71[6] = v67;
    *v39 = v68;
    swift_endAccess(v103);
  }
  if ((v89 & 1) == 0)
  {
    v72 = TTRGridViewPredefinedContentPopulator.GridRow.init(_:alignment:beforeSpacing:)(&off_1005EA418, -1, &type metadata for TTRIBoardReminderCellContentView.ContentGridSubview, v100, v97, v96, v62);
    v74 = v73;
    v76 = v75;
    swift_beginAccess(v29 + 16, v103, 33, 0);
    v77 = (_QWORD *)*v39;
    if ((swift_isUniquelyReferenced_nonNull_native(*v39) & 1) == 0)
      v77 = sub_10045594C(0, v77[2] + 1, 1, v77);
    v79 = v77[2];
    v78 = v77[3];
    if (v79 >= v78 >> 1)
      v77 = sub_10045594C((_QWORD *)(v78 > 1), v79 + 1, 1, v77);
    v77[2] = v79 + 1;
    v80 = &v77[3 * v79];
    v80[4] = v72;
    v80[5] = v74;
    v80[6] = v76;
    *v39 = v77;
    swift_endAccess(v103);
  }
  if (*(_QWORD *)(v46 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator))
  {
    swift_beginAccess(v29 + 16, v103, 0, 0);
    v81 = *(_QWORD *)(v29 + 16);
    __chkstk_darwin(v82);
    *(&v84 - 2) = v46;
    *(&v84 - 1) = a1;
    swift_retain();
    v83 = swift_bridgeObjectRetain(v81);
    TTRGridViewPredefinedContentPopulator.performUpdates(newGridSpecification:subviewUpdateHandler:)(v83);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease(v81);
  }
  else
  {
    __break(1u);
  }
}

void sub_1003F918C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  objc_class *v13;
  unsigned int v14;
  char v15;
  id v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  objc_super v24;
  objc_super v25;
  objc_super v26;
  objc_super v27;

  v2 = sub_10002A750(&qword_100646D60);
  __chkstk_darwin(v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v24 - v9;
  if ((*(_BYTE *)(a1 + 16) & 1) == 0 && *(_QWORD *)(a1 + 8))
  {
    v11 = sub_1003F7C34();
    v12 = *(_BYTE *)a1 & 1;
    v13 = (objc_class *)type metadata accessor for TTRIOutlineDisclosureButton();
    v27.receiver = v11;
    v27.super_class = v13;
    v14 = objc_msgSendSuper2(&v27, "isSelected");
    v26.receiver = v11;
    v26.super_class = v13;
    objc_msgSendSuper2(&v26, "setSelected:", v12);
    v25.receiver = v11;
    v25.super_class = v13;
    if (v14 != objc_msgSendSuper2(&v25, "isSelected"))
    {
      v24.receiver = v11;
      v24.super_class = v13;
      v15 = objc_msgSendSuper2(&v24, "isSelected");
      sub_10008CCB0(v15);
    }

    v16 = sub_1003F7C34();
    UIButton.configuration.getter(v16);
    v17 = type metadata accessor for UIButton.Configuration(0);
    v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48);
    if (v18(v10, 1, v17))
    {
      sub_10000735C((uint64_t)v10, (uint64_t)v4, &qword_100646D60);
      UIButton.configuration.setter(v4);

      sub_1000073A0((uint64_t)v10, &qword_100646D60);
    }
    else
    {
      v19 = TTRBoardReminderCellShowSubtasksConfiguration.showSubtasksButtonTitle.getter();
      UIButton.Configuration.title.setter(v19, v20);
      UIButton.configuration.setter(v10);

    }
    v21 = sub_1003F7C34();
    UIButton.configuration.getter(v21);
    if (v18(v7, 1, v17))
    {
      sub_10000735C((uint64_t)v7, (uint64_t)v4, &qword_100646D60);
      UIButton.configuration.setter(v4);

      sub_1000073A0((uint64_t)v7, &qword_100646D60);
    }
    else
    {
      v22 = *(void **)(a1 + 24);
      v23 = v22;
      UIButton.Configuration.baseForegroundColor.setter(v22);
      UIButton.configuration.setter(v7);

    }
  }
}

void sub_1003F93F4()
{
  void *v0;
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  __n128 v11;
  unint64_t v12;
  unint64_t v13;
  __n128 v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;

  v1 = v0;
  objc_msgSend(v1, "setAxis:", 1);
  objc_msgSend(v1, "setDistribution:", 0);
  objc_msgSend(v1, "setAlignment:", 0);
  objc_msgSend(v1, "setLayoutMarginsRelativeArrangement:", 0);
  objc_msgSend(v1, "setPreservesSuperviewLayoutMargins:", 1);
  objc_msgSend(v1, "setDebugBoundingBoxesEnabled:", 0);
  TTRIMarginTransferringContainerStackView.marginTransferActionForArrangedSubview.setter(sub_1003F9644, 0);
  v2 = type metadata accessor for TTRNoAnimationContainerGridView(0);
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  v4 = OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentView;
  v5 = *(void **)&v1[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentView] = v3;

  v6 = *(void **)&v1[v4];
  if (!v6)
  {
    __break(1u);
    goto LABEL_12;
  }
  objc_msgSend(v6, "setLayoutMarginsRelativeArrangement:", 1);
  v7 = *(void **)&v1[v4];
  if (!v7)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  objc_msgSend(v7, "setHorizontalAlignment:", 0);
  v8 = *(void **)&v1[v4];
  if (!v8)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  objc_msgSend(v8, "setVerticalAlignment:", 2);
  v9 = *(void **)&v1[v4];
  if (!v9)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v10 = v9;
  sub_1003F6D70();
  v13 = v12;
  if (qword_10063D3E0 != -1)
    swift_once(&qword_10063D3E0, sub_100123164);
  v11.n128_u64[0] = v13;
  objc_msgSend(v10, "setRowSpacing:", ceil(_:toScale:)(*(double *)&qword_100646FD0 * 0.25, v11));

  v15 = *(void **)&v1[v4];
  if (!v15)
    goto LABEL_15;
  v14.n128_u64[0] = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___layoutMetrics];
  objc_msgSend(v15, "setColumnSpacing:", ceil(_:toScale:)(*(double *)&qword_100646FD8 * 0.5, v14));
  v16 = *(void **)&v1[v4];
  if (!v16)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  objc_msgSend(v16, "setDebugBoundingBoxesEnabled:", 0);
  v17 = *(void **)&v1[v4];
  if (v17)
  {
    v18 = sub_10002A750(&qword_10065A478);
    swift_allocObject(v18, 48, 7);
    v19 = TTRGridViewPredefinedContentPopulator.init(gridView:)(v17);

    *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator] = v19;
    swift_release();
    return;
  }
LABEL_17:
  __break(1u);
}

uint64_t sub_1003F9644(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = type metadata accessor for TTRIOutlineDisclosureButton();
  v3 = swift_dynamicCastClass(a1, v2);
  v4 = 0;
  if (!v3)
  {
    v5 = type metadata accessor for TTRIRemindersListCellAutoCompleteSuggestionsStackView(0);
    if (swift_dynamicCastClass(a1, v5))
      v4 = 0;
    else
      v4 = 15;
  }
  return TTRIMarginTransferAction.init(edgesToReceiveMargins:redirectedTarget:)(v4, 0);
}

void sub_1003F96A4(void *a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Class isa;
  int v25;
  uint64_t v26;
  char v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a5;
  v9 = sub_10002A750(&qword_10064CB10);
  __chkstk_darwin(v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750(&qword_10065A448);
  __chkstk_darwin(v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_10002A750(&qword_10064CB58);
  v15 = *(_QWORD *)(v35 - 8);
  v16 = __chkstk_darwin(v35);
  v18 = (uint64_t *)((char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = objc_msgSend(a1, "arrangedSubviews", v16);
  if (!v19)
    goto LABEL_3;
  v20 = v19;
  v21 = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(v22);
  LOBYTE(v20) = sub_100096708(v23, a2);
  swift_bridgeObjectRelease_n(v22, 2);
  swift_bridgeObjectRelease(a2);
  if ((v20 & 1) == 0)
  {
LABEL_3:
    sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(a1, "setArrangedSubviews:", isa, v34);

  }
  sub_1003F6D70();
  v25 = *(unsigned __int8 *)(a4 + 2);
  v26 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
  v27 = TTRBoardReminderCellContentConfigurationType.showSubtasksButtonIsHidden.getter(v26, &off_1006615B8);
  if (qword_10063D3E0 != -1)
    swift_once(&qword_10063D3E0, sub_100123164);
  v29 = *((double *)&xmmword_100646FC0 + 1);
  v28 = *(double *)&xmmword_100646FC0;
  v30 = *(double *)&qword_100646FD0;
  if (v25)
  {
    v30 = *(double *)&qword_100646FD0 + 1.0;
    v29 = *((double *)&xmmword_100646FC0 + 1) + *((double *)&xmmword_100646FC0 + 1) + -10.0;
    v28 = *(double *)&xmmword_100646FC0 + 1.0;
  }
  if ((v27 & 1) == 0)
    v30 = 0.0;
  objc_msgSend(a3, "setDirectionalLayoutMargins:", v28, v29, v30, *(double *)&qword_100646FD8, v34);
  sub_10000735C(a4 + *(int *)(v26 + 112), (uint64_t)v18, &qword_10064CB58);
  sub_10000735C(v34, (uint64_t)v11, &qword_10064CB10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v11, 1, v26) == 1)
  {
    sub_1000073A0((uint64_t)v11, &qword_10064CB10);
    v31 = 1;
  }
  else
  {
    sub_10000735C((uint64_t)&v11[*(int *)(v26 + 112)], (uint64_t)v14, &qword_10064CB58);
    sub_10001F544((uint64_t)v11, type metadata accessor for TTRIBoardReminderCellContentConfiguration);
    v31 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v14, v31, 1, v35);
  sub_1003F9A48(v18);
  sub_1000073A0((uint64_t)v14, &qword_10065A448);
  sub_1000073A0((uint64_t)v18, &qword_10064CB58);
  v32 = sub_1003F7BC0();
  objc_msgSend(v32, "setHidden:", TTRBoardReminderCellContentConfigurationType.showSubtasksButtonIsHidden.getter(v26, &off_1006615B8) & 1);

  v33 = sub_1003F7C34();
  objc_msgSend(v33, "setHidden:", TTRBoardReminderCellContentConfigurationType.showSubtasksButtonIsHidden.getter(v26, &off_1006615B8) & 1);

}

void sub_1003F9A48(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD *, uint64_t);
  char v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  id v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t Strong;
  uint64_t v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD v63[2];
  _BYTE v64[24];

  v2 = v1;
  v4 = sub_10002A750(&qword_10065A450);
  __chkstk_darwin(v4);
  v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRIReminderCellAutoCompleteViewModel(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750(&qword_10065A458);
  __chkstk_darwin(v11);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750(&qword_10065A460);
  __chkstk_darwin(v14);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10002A750(&qword_100645E90);
  __chkstk_darwin(v17);
  __chkstk_darwin(v18);
  v61 = (char *)&v56 - v19;
  __chkstk_darwin(v20);
  v62 = (uint64_t)&v56 - v22;
  v23 = *a1;
  if (*a1)
  {
    v56 = v21;
    v57 = v10;
    v59 = v8;
    v60 = v7;
    v24 = a1[1];
    v58 = v2;
    v25 = v2 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_autoCompleteModuleState;
    swift_beginAccess(v2 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_autoCompleteModuleState, v64, 33, 0);
    v26 = *(uint64_t (**)(_QWORD *, uint64_t))v25;
    v63[0] = v23;
    v63[1] = v24;
    swift_unknownObjectRetain_n(v23, 2);
    v27 = v26(v63, v25 + 16);
    swift_unknownObjectRelease(v23);
    if ((v27 & 1) == 0)
    {
      swift_unknownObjectRelease(*(_QWORD *)(v25 + 48));
      *(_QWORD *)(v25 + 48) = v23;
      *(_QWORD *)(v25 + 56) = v24;
      *(_QWORD *)(v25 + 32) = 0;
      *(_BYTE *)(v25 + 40) = 1;
      swift_unknownObjectRetain(v23);
    }
    v28 = (char *)a1 + *(int *)(sub_10002A750(&qword_10064CB58) + 28);
    v29 = sub_10002A750(&qword_10065A468);
    TTRBoardReminderInCellModuleState.receive(_:)(v28, v29);
    TTRBoardReminderInCellModuleState.consume()(v29);
    swift_endAccess(v64);
    v30 = sub_10002A750(&qword_10065A470);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v13, 1, v30) == 1)
    {
      sub_1000073A0((uint64_t)v13, &qword_10065A458);
      swift_unknownObjectRelease(v23);
    }
    else
    {
      v39 = v13[16];
      v40 = (uint64_t)&v13[*(int *)(v30 + 64)];
      v41 = (uint64_t)&v16[*(int *)(v14 + 64)];
      *(_OWORD *)v16 = *(_OWORD *)v13;
      v16[16] = v39;
      sub_10000F614(v40, v41, &qword_100645E90);
      v42 = *(_QWORD *)v16;
      v43 = v16[16];
      v44 = v62;
      sub_10000F614((uint64_t)&v16[*(int *)(v14 + 64)], v62, &qword_100645E90);
      v46 = v59;
      v45 = v60;
      v47 = (uint64_t)v61;
      if (v43 == 1)
      {
        v48 = sub_1003F7AC4();
        Strong = swift_unknownObjectWeakLoadStrong(v42 + 16);
        if (Strong)
        {
          v50 = Strong;
          v51 = *(void **)(Strong
                         + OBJC_IVAR____TtC9Reminders42TTRIReminderCellAutoCompleteViewController_autoCompleteStack);
          *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders42TTRIReminderCellAutoCompleteViewController_autoCompleteStack) = v48;

          type metadata accessor for TTRIReminderCellAutoCompleteViewController();
          v52 = v48;
          TTRAccessibilityReminderAutoCompleteAnnouncing.ttrAccessibilitySetUpAccessibilityStatusChangeObservationForAutoCompleteAnnouncements()();

          swift_unknownObjectRelease(v50);
        }
        else
        {

        }
      }
      sub_10000735C(v44, v47, &qword_100645E90);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v47, 1, v45) == 1)
      {
        sub_1000073A0(v44, &qword_100645E90);
        swift_unknownObjectRelease(v42);
        swift_unknownObjectRelease(v23);
        v53 = v47;
      }
      else
      {
        v54 = (uint64_t)v57;
        sub_10001F580(v47, (uint64_t)v57, type metadata accessor for TTRIReminderCellAutoCompleteViewModel);
        v55 = v56;
        sub_10002B1E8(v54, v56, type metadata accessor for TTRIReminderCellAutoCompleteViewModel);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v55, 0, 1, v45);
        sub_100239658(v55);
        swift_unknownObjectRelease(v42);
        swift_unknownObjectRelease(v23);
        sub_10001F544(v54, type metadata accessor for TTRIReminderCellAutoCompleteViewModel);
        v53 = v44;
      }
      sub_1000073A0(v53, &qword_100645E90);
    }
  }
  else
  {
    v31 = sub_10002A750(&qword_10064CB58);
    sub_10000735C((uint64_t)a1 + *(int *)(v31 + 28), (uint64_t)v6, &qword_10065A450);
    v32 = sub_10002A750(&qword_10064CB70);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v6, 1, v32) != 1)
    {
      if (qword_10063D768 != -1)
        swift_once(&qword_10063D768, sub_1003F6864);
      v33 = type metadata accessor for Logger(0);
      v34 = sub_100012DC4(v33, (uint64_t)qword_10065A248);
      v35 = Logger.logObject.getter(v34);
      v36 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v37 = 0;
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "TTRIBoardReminderCellContentView: missing autoComplete module", v37, 2u);
        swift_slowDealloc(v37, -1, -1);
      }

      sub_10001F544((uint64_t)v6, type metadata accessor for TTRIReminderCellAutoCompleteViewModel);
    }
    v38 = sub_1003F7AC4();
    objc_msgSend(v38, "setHidden:", 1);

  }
}

uint64_t sub_1003F9FE4(uint64_t result, char a2, uint64_t a3, char a4, char a5, char a6)
{
  char v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  double v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  _QWORD v35[3];

  if ((a2 & 1) != 0)
  {
    v9 = result;
    v10 = (_QWORD *)(a3 + 16);
    v11 = sub_10002A750(&qword_10065A390);
    v12 = swift_allocObject(v11, 37, 7);
    v13 = v12;
    *(_OWORD *)(v12 + 16) = xmmword_100524260;
    *(_BYTE *)(v12 + 32) = 0;
    if ((a4 & 1) != 0)
      v14 = v9;
    else
      v14 = 15;
    *(_BYTE *)(v12 + 33) = v14;
    *(_BYTE *)(v12 + 34) = v9;
    if ((a5 & 1) != 0)
      v15 = 4;
    else
      v15 = 15;
    *(_BYTE *)(v12 + 35) = v15;
    if ((a6 & 1) != 0)
      v16 = 3;
    else
      v16 = 15;
    *(_BYTE *)(v12 + 36) = v16;
    v35[0] = v12;
    v17 = sub_10002A750(&qword_10065A398);
    v18 = sub_100023FEC(&qword_10065A3A0, &qword_10065A398, (uint64_t)&protocol conformance descriptor for [A]);
    v19 = Sequence.removingNils<A>()(v17, &type metadata for TTRIBoardReminderCellContentView.ContentGridSubview, v18);
    v20 = swift_bridgeObjectRelease(v13);
    v21 = *(double *)CGFloat.nuiUseDefault.unsafeMutableAddressor(v20);
    v22 = sub_1003FDDF0();
    v23 = sub_1003FDE34();
    v24 = sub_1003FDE78();
    v25 = TTRGridViewPredefinedContentPopulator.GridRow.init(_:alignment:beforeSpacing:)(v19, -1, &type metadata for TTRIBoardReminderCellContentView.ContentGridSubview, v22, v23, v24, v21);
    v27 = v26;
    v29 = v28;
    swift_beginAccess(v10, v35, 33, 0);
    v30 = (_QWORD *)*v10;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v10);
    *v10 = v30;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v30 = sub_10045594C(0, v30[2] + 1, 1, v30);
      *v10 = v30;
    }
    v33 = v30[2];
    v32 = v30[3];
    if (v33 >= v32 >> 1)
    {
      v30 = sub_10045594C((_QWORD *)(v32 > 1), v33 + 1, 1, v30);
      *v10 = v30;
    }
    v30[2] = v33 + 1;
    v34 = &v30[3 * v33];
    v34[4] = v25;
    v34[5] = v27;
    v34[6] = v29;
    return swift_endAccess(v35);
  }
  return result;
}

void sub_1003FA1D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for UIButton.Configuration.TitleAlignment(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for UIButton.Configuration(0);
  v4 = __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  __asm { BR              X10 }
}

uint64_t sub_1003FA2AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  double v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v2 = ((uint64_t (*)(_QWORD))type metadata accessor for TTRIReminderCompletionButton)(0);
  v3 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))TTRGridViewPredefinedContentPopulator.SubviewUpdateContext.cachedView<A>(ofType:for:))(v2, v0, v2);
  if (v3)
  {
    v4 = (id)v3;
  }
  else
  {
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v5 = swift_allocObject(&unk_100605AF8, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16, *(_QWORD *)(v1 - 184));
    v6 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1003FF0B0, v5);
    v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "initWithFrame:primaryAction:", v6, 0.0, 0.0, 0.0, 0.0);

    TTRIReminderCompletionButton.icon.setter(0, 0);
    objc_msgSend(v4, "setCustomAlignmentRectInsets:", 5.0, 0.0, 5.0, 0.0);
    LODWORD(v7) = 1148846080;
    objc_msgSend(v4, "setLayoutSize:withContentPriority:", NUIContainerViewSizeUseDefault[0], NUIContainerViewSizeUseDefault[1], v7);
  }
  sub_1003FE648(v4, *(_BYTE *)(*(_QWORD *)(v1 - 176) + 32), *(void **)(*(_QWORD *)(v1 - 176) + 40), *(_BYTE *)(*(_QWORD *)(v1 - 176) + 48), *(void **)(*(_QWORD *)(v1 - 176) + 56));
  v8 = sub_1003FDDF0();
  v9 = sub_1003FDE34();
  v10 = sub_1003FDE78();
  *(_OWORD *)(v1 - 128) = 0u;
  *(_OWORD *)(v1 - 112) = 0u;
  return ((uint64_t (*)(id, uint64_t, uint64_t, uint64_t, ValueMetadata *, unint64_t, unint64_t, unint64_t))TTRGridViewPredefinedContentPopulator.SubviewUpdateResult.init(view:userInfo:horizontalAlignment:verticalAlignment:))(v4, v1 - 128, -1, -1, &type metadata for TTRIBoardReminderCellContentView.ContentGridSubview, v8, v9, v10);
}

void sub_1003FB098(void *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD *, uint64_t);
  char v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  NSString v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t ObjectType;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[2];
  _BYTE v66[24];

  v5 = sub_10002A750(&qword_10064CBB0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRReminderCellTitleViewModel(0, v6);
  v64 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750(&qword_10065A3D0);
  __chkstk_darwin(v12);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750(&qword_10065A3D8);
  __chkstk_darwin(v15);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10002A750(&qword_10065A3E0);
  __chkstk_darwin(v18);
  __chkstk_darwin(v19);
  v62 = (uint64_t)&v58 - v20;
  __chkstk_darwin(v21);
  v63 = (uint64_t)&v58 - v23;
  v24 = *a2;
  if (*a2)
  {
    v58 = v22;
    v59 = a1;
    v60 = v9;
    v61 = v11;
    v25 = a2[1];
    v26 = v2 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_titleModuleState;
    swift_beginAccess(v2 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_titleModuleState, v66, 33, 0);
    v27 = *(uint64_t (**)(_QWORD *, uint64_t))v26;
    v65[0] = v24;
    v65[1] = v25;
    swift_unknownObjectRetain_n(v24, 2);
    v28 = v27(v65, v26 + 16);
    swift_unknownObjectRelease(v24);
    if ((v28 & 1) == 0)
    {
      swift_unknownObjectRelease(*(_QWORD *)(v26 + 48));
      *(_QWORD *)(v26 + 48) = v24;
      *(_QWORD *)(v26 + 56) = v25;
      *(_QWORD *)(v26 + 32) = 0;
      *(_BYTE *)(v26 + 40) = 1;
      swift_unknownObjectRetain(v24);
    }
    v29 = (char *)a2 + *(int *)(sub_10002A750(&qword_10064CB68) + 28);
    v30 = sub_10002A750(&qword_10065A3E8);
    TTRBoardReminderInCellModuleState.receive(_:)(v29, v30);
    TTRBoardReminderInCellModuleState.consume()(v30);
    swift_endAccess(v66);
    v31 = sub_10002A750(&qword_10065A3F0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v14, 1, v31) == 1)
    {
      sub_1000073A0((uint64_t)v14, &qword_10065A3D0);
      swift_unknownObjectRelease(v24);
    }
    else
    {
      v40 = v14[16];
      v41 = (uint64_t)&v14[*(int *)(v31 + 64)];
      v42 = (uint64_t)&v17[*(int *)(v15 + 64)];
      *(_OWORD *)v17 = *(_OWORD *)v14;
      v17[16] = v40;
      sub_10000F614(v41, v42, &qword_10065A3E0);
      v44 = *(_QWORD *)v17;
      v43 = *((_QWORD *)v17 + 1);
      v45 = v17[16];
      v46 = v63;
      sub_10000F614((uint64_t)&v17[*(int *)(v15 + 64)], v63, &qword_10065A3E0);
      if (v45 == 1)
      {
        ObjectType = swift_getObjectType(v44, v47);
        (*(void (**)(void *, uint64_t, uint64_t))(v43 + 48))(v59, ObjectType, v43);
      }
      v49 = v62;
      sub_10000735C(v46, v62, &qword_10065A3E0);
      v50 = v64;
      v51 = v60;
      v52 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v49, 1, v60);
      v53 = (uint64_t)v61;
      if (v52 == 1)
      {
        sub_1000073A0(v46, &qword_10065A3E0);
        swift_unknownObjectRelease(v44);
        swift_unknownObjectRelease(v24);
        v54 = v49;
      }
      else
      {
        sub_10001F580(v49, (uint64_t)v61, (uint64_t (*)(_QWORD))&type metadata accessor for TTRReminderCellTitleViewModel);
        v56 = swift_getObjectType(v44, v55);
        v57 = v58;
        sub_10002B1E8(v53, v58, (uint64_t (*)(_QWORD))&type metadata accessor for TTRReminderCellTitleViewModel);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56))(v57, 0, 1, v51);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 + 8) + 16))(v57, v56);
        swift_unknownObjectRelease(v44);
        swift_unknownObjectRelease(v24);
        sub_10001F544(v53, (uint64_t (*)(_QWORD))&type metadata accessor for TTRReminderCellTitleViewModel);
        v54 = v46;
      }
      sub_1000073A0(v54, &qword_10065A3E0);
    }
  }
  else
  {
    v32 = sub_10002A750(&qword_10064CB68);
    sub_10000735C((uint64_t)a2 + *(int *)(v32 + 28), (uint64_t)v8, &qword_10064CBB0);
    v33 = sub_10002A750(&qword_10064CBB8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v8, 1, v33) != 1)
    {
      if (qword_10063D768 != -1)
        swift_once(&qword_10063D768, sub_1003F6864);
      v34 = type metadata accessor for Logger(0);
      v35 = sub_100012DC4(v34, (uint64_t)qword_10065A248);
      v36 = Logger.logObject.getter(v35);
      v37 = static os_log_type_t.error.getter(v36);
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v38 = 0;
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "TTRIBoardReminderCellContentView: missing title editing module", v38, 2u);
        swift_slowDealloc(v38, -1, -1);
      }

      sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRReminderCellTitleViewModel);
    }
    v39 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "setText:", v39);

  }
}

void sub_1003FB608(void *a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD *, uint64_t);
  char v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t ObjectType;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  _QWORD v65[2];
  _BYTE v66[24];

  v6 = type metadata accessor for TTRIReminderCellNotesViewModel(0, a3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_10065A3F8);
  __chkstk_darwin(v10);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750(&qword_10065A400);
  __chkstk_darwin(v13);
  v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10002A750(&qword_10065A408);
  __chkstk_darwin(v16);
  __chkstk_darwin(v17);
  __chkstk_darwin(v18);
  if (*(_BYTE *)a2 == 1)
  {
    v22 = a2 + *(int *)(sub_10002A750(&qword_10064CB60) + 40);
    swift_beginAccess(v3 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_notesModuleState, v66, 33, 0);
    v23 = sub_10002A750(&qword_10065A410);
    TTRBoardReminderInCellModuleState.receive(_:)(v22, v23);
    swift_endAccess(v66);
  }
  else
  {
    v24 = *(void **)(a2 + 8);
    if (v24)
    {
      v60 = v21;
      v61 = v7;
      v57 = v20;
      v58 = v9;
      v62 = (uint64_t)&v56 - v19;
      v63 = v6;
      v59 = a1;
      v25 = *(_QWORD *)(a2 + 16);
      v26 = v3 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_notesModuleState;
      swift_beginAccess(v3 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_notesModuleState, v66, 33, 0);
      v27 = *(uint64_t (**)(_QWORD *, uint64_t))v26;
      v65[0] = v24;
      v65[1] = v25;
      swift_unknownObjectRetain_n(v24, 2);
      v28 = v27(v65, v26 + 16);
      v64 = v24;
      swift_unknownObjectRelease(v24);
      if ((v28 & 1) == 0)
      {
        swift_unknownObjectRelease(*(_QWORD *)(v26 + 48));
        v29 = v64;
        *(_QWORD *)(v26 + 48) = v64;
        *(_QWORD *)(v26 + 56) = v25;
        *(_QWORD *)(v26 + 32) = 0;
        *(_BYTE *)(v26 + 40) = 1;
        swift_unknownObjectRetain(v29);
      }
      v30 = a2 + *(int *)(sub_10002A750(&qword_10064CB60) + 40);
      v31 = sub_10002A750(&qword_10065A410);
      TTRBoardReminderInCellModuleState.receive(_:)(v30, v31);
      TTRBoardReminderInCellModuleState.consume()(v31);
      swift_endAccess(v66);
      v32 = sub_10002A750(&qword_10065A418);
      v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v12, 1, v32);
      v34 = v63;
      if (v33 == 1)
      {
        sub_1000073A0((uint64_t)v12, &qword_10065A3F8);
        swift_unknownObjectRelease(v64);
      }
      else
      {
        v40 = v12[16];
        v41 = (uint64_t)&v12[*(int *)(v32 + 64)];
        v42 = (uint64_t)&v15[*(int *)(v13 + 64)];
        *(_OWORD *)v15 = *(_OWORD *)v12;
        v15[16] = v40;
        sub_10000F614(v41, v42, &qword_10065A408);
        v44 = *(_QWORD *)v15;
        v43 = *((_QWORD *)v15 + 1);
        v45 = v15[16];
        sub_10000F614((uint64_t)&v15[*(int *)(v13 + 64)], v62, &qword_10065A408);
        if (v45 == 1)
        {
          ObjectType = swift_getObjectType(v44, v46);
          (*(void (**)(void *, uint64_t, uint64_t))(v43 + 64))(v59, ObjectType, v43);
        }
        v48 = v62;
        v49 = v60;
        sub_10000735C(v62, v60, &qword_10065A408);
        v50 = v61;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v49, 1, v34) == 1)
        {
          sub_1000073A0(v48, &qword_10065A408);
          swift_unknownObjectRelease(v44);
          swift_unknownObjectRelease(v64);
          v51 = v49;
        }
        else
        {
          v52 = (uint64_t)v58;
          sub_10001F580(v49, (uint64_t)v58, (uint64_t (*)(_QWORD))&type metadata accessor for TTRIReminderCellNotesViewModel);
          v54 = swift_getObjectType(v44, v53);
          v55 = v57;
          sub_10002B1E8(v52, v57, (uint64_t (*)(_QWORD))&type metadata accessor for TTRIReminderCellNotesViewModel);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56))(v55, 0, 1, v34);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v55, v54, v43);
          swift_unknownObjectRelease(v44);
          swift_unknownObjectRelease(v64);
          sub_10001F544(v52, (uint64_t (*)(_QWORD))&type metadata accessor for TTRIReminderCellNotesViewModel);
          v51 = v48;
        }
        sub_1000073A0(v51, &qword_10065A408);
      }
    }
    else
    {
      if (qword_10063D768 != -1)
        swift_once(&qword_10063D768, sub_1003F6864);
      v35 = type metadata accessor for Logger(0);
      v36 = sub_100012DC4(v35, (uint64_t)qword_10065A248);
      v37 = Logger.logObject.getter(v36);
      v38 = static os_log_type_t.error.getter(v37);
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v39 = 0;
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "TTRIBoardReminderCellContentView: missing notes editing module", v39, 2u);
        swift_slowDealloc(v39, -1, -1);
      }

      v64 = String._bridgeToObjectiveC()();
      objc_msgSend(a1, "setText:", v64);

    }
  }
}

void sub_1003FBB60(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  Class isa;
  __n128 v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  objc_class *v28;
  objc_class *v29;
  char v30;
  id v31;
  id v32;
  void *v33;
  id v34;

  v3 = v2;
  v6 = sub_1003FCCDC(a2, v2);
  v7 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_visibleLinkView);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_visibleLinkView) = v6;
  v8 = v6;

  v9 = sub_10002A750((uint64_t *)&unk_10064BB30);
  v10 = swift_allocObject(v9, 56, 7);
  *(_OWORD *)(v10 + 16) = xmmword_1005275C0;
  *(_QWORD *)(v10 + 32) = v6;
  v11 = v8;
  *(_QWORD *)(v10 + 40) = sub_1003F79F8();
  v12 = sub_1003F77FC();
  *(_QWORD *)(v10 + 48) = v12;
  specialized Array._endMutation()(v12);
  v13 = v10;
  v14 = sub_10002A750((uint64_t *)&unk_100653A60);
  v15 = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  v16 = sub_100023FEC(&qword_100653A70, (uint64_t *)&unk_100653A60, (uint64_t)&protocol conformance descriptor for [A]);
  v17 = Sequence.removingNils<A>()(v14, v15, v16);
  v18 = objc_msgSend(a1, "arrangedSubviews", swift_bridgeObjectRelease(v13).n128_f64[0]);
  if (!v18)
    goto LABEL_4;
  v19 = v18;
  v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v15);

  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v20);
  LOBYTE(v19) = sub_100096708(v21, v17);
  swift_bridgeObjectRelease_n(v20, 2);
  swift_bridgeObjectRelease(v17);
  if ((v19 & 1) != 0)
  {
    swift_bridgeObjectRelease(v17);
  }
  else
  {
LABEL_4:
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(a1, "setArrangedSubviews:", isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

  }
  sub_1003F6D70();
  v25 = v24;
  if (qword_10063D3E0 != -1)
    swift_once(&qword_10063D3E0, sub_100123164);
  v23.n128_u64[0] = v25;
  objc_msgSend(a1, "setSpacing:", ceil(_:toScale:)(*(double *)&qword_100646FD8 * 0.5, v23));
  v26 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
  v27 = TTRBoardReminderCellContentConfigurationType.appLinkIsHidden.getter(v26, &off_1006615B8);
  v28 = sub_1003F77FC();
  v29 = v28;
  if ((v27 & 1) != 0)
  {
    -[objc_class setHidden:](v28, "setHidden:", 1);
  }
  else
  {
    -[objc_class setHidden:](v28, "setHidden:", 0);

    v29 = sub_1003F77FC();
    -[objc_class setBackgroundImage:forState:](v29, "setBackgroundImage:forState:", *(_QWORD *)(a2 + *(int *)(v26 + 108)), 0);
  }

  v30 = TTRBoardReminderCellContentConfigurationType.assigneeIsHidden.getter(v26, &off_1006615B8);
  v31 = sub_1003F79F8();
  v32 = v31;
  if ((v30 & 1) != 0)
  {
    objc_msgSend(v31, "setHidden:", 1);
  }
  else
  {
    objc_msgSend(v31, "setHidden:", 0);

    v32 = sub_1003F79F8();
    v33 = *(void **)(a2 + *(int *)(v26 + 104));
    v34 = v33;
    TTRIRemindersListCellAssigneeView.contact.setter(v33);
  }

}

id sub_1003FBF8C(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v7;
  objc_class *ObjectType;
  uint64_t v13;
  id v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  objc_super v29;

  v7 = v6;
  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator] = 0;
  v13 = OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_unsupportedTextDropHandler;
  v14 = objc_allocWithZone((Class)type metadata accessor for TTRIUnsupportedTextDropHandler(0));
  v15 = v6;
  *(_QWORD *)&v7[v13] = objc_msgSend(v14, "init");
  v16 = &v15[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_titleModuleState];
  *((_OWORD *)v16 + 1) = 0u;
  *((_QWORD *)v16 + 4) = 0;
  v16[40] = 1;
  *((_OWORD *)v16 + 3) = 0u;
  v17 = &v16[*(int *)(sub_10002A750(&qword_10065A3E8) + 48)];
  v18 = sub_10002A750(&qword_10065A480);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  *(_QWORD *)v16 = sub_1003F6D40;
  *((_QWORD *)v16 + 1) = 0;
  v19 = &v15[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_notesModuleState];
  *((_QWORD *)v19 + 4) = 0;
  *((_OWORD *)v19 + 1) = 0u;
  v19[40] = 1;
  *((_OWORD *)v19 + 3) = 0u;
  v20 = &v19[*(int *)(sub_10002A750(&qword_10065A410) + 48)];
  v21 = sub_10002A750(&qword_10065A488);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  *(_QWORD *)v19 = sub_1003F6D40;
  *((_QWORD *)v19 + 1) = 0;
  v22 = &v15[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_autoCompleteModuleState];
  *((_QWORD *)v22 + 4) = 0;
  *((_OWORD *)v22 + 1) = 0u;
  v22[40] = 1;
  *((_OWORD *)v22 + 3) = 0u;
  v23 = &v22[*(int *)(sub_10002A750(&qword_10065A468) + 48)];
  v24 = sub_10002A750(&qword_10065A490);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  *(_QWORD *)v22 = sub_1003F6D40;
  *((_QWORD *)v22 + 1) = 0;
  v25 = &v15[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___layoutMetrics];
  *(_QWORD *)v25 = 0;
  v25[8] = 1;
  *(_QWORD *)&v15[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_buttonShapesSubscription] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_visibleLinkView] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___appLinkIndicator] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___assigneeIndicator] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___autoCompleteView] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksSeparator] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksButton] = 0;
  v26 = &v15[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration];
  v27 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);

  v29.receiver = v15;
  v29.super_class = ObjectType;
  return objc_msgSendSuper2(&v29, "initWithFrame:", a1, a2, a3, a4);
}

id sub_1003FC254(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v6;
  id v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  double v21;
  NSArray v22;
  id v23;
  objc_super v25;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator] = 0;
  v6 = OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_unsupportedTextDropHandler;
  v7 = objc_allocWithZone((Class)type metadata accessor for TTRIUnsupportedTextDropHandler(0));
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");
  v9 = &v8[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_titleModuleState];
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v9[40] = 1;
  *((_OWORD *)v9 + 3) = 0u;
  v10 = &v9[*(int *)(sub_10002A750(&qword_10065A3E8) + 48)];
  v11 = sub_10002A750(&qword_10065A480);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *(_QWORD *)v9 = sub_1003F6D40;
  *((_QWORD *)v9 + 1) = 0;
  v12 = &v8[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_notesModuleState];
  *((_QWORD *)v12 + 4) = 0;
  *((_OWORD *)v12 + 1) = 0u;
  v12[40] = 1;
  *((_OWORD *)v12 + 3) = 0u;
  v13 = &v12[*(int *)(sub_10002A750(&qword_10065A410) + 48)];
  v14 = sub_10002A750(&qword_10065A488);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(_QWORD *)v12 = sub_1003F6D40;
  *((_QWORD *)v12 + 1) = 0;
  v15 = &v8[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_autoCompleteModuleState];
  *((_QWORD *)v15 + 4) = 0;
  *((_OWORD *)v15 + 1) = 0u;
  v15[40] = 1;
  *((_OWORD *)v15 + 3) = 0u;
  v16 = &v15[*(int *)(sub_10002A750(&qword_10065A468) + 48)];
  v17 = sub_10002A750(&qword_10065A490);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(_QWORD *)v15 = sub_1003F6D40;
  *((_QWORD *)v15 + 1) = 0;
  v18 = &v8[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___layoutMetrics];
  *(_QWORD *)v18 = 0;
  v18[8] = 1;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_buttonShapesSubscription] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_visibleLinkView] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___appLinkIndicator] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___assigneeIndicator] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___autoCompleteView] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksSeparator] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksButton] = 0;
  v19 = &v8[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration];
  v20 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);

  if (a1)
  {
    sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
    v22.super.isa = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v21 = swift_bridgeObjectRelease(a1).n128_u64[0];
  }
  else
  {
    v22.super.isa = 0;
  }
  v25.receiver = v8;
  v25.super_class = ObjectType;
  v23 = objc_msgSendSuper2(&v25, "initWithArrangedSubviews:", v22.super.isa, v21);

  return v23;
}

id sub_1003FC570(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v6;
  id v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  id v21;
  objc_super v23;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator] = 0;
  v6 = OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_unsupportedTextDropHandler;
  v7 = objc_allocWithZone((Class)type metadata accessor for TTRIUnsupportedTextDropHandler(0));
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");
  v9 = &v8[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_titleModuleState];
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v9[40] = 1;
  *((_OWORD *)v9 + 3) = 0u;
  v10 = &v9[*(int *)(sub_10002A750(&qword_10065A3E8) + 48)];
  v11 = sub_10002A750(&qword_10065A480);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *(_QWORD *)v9 = sub_1003F6D40;
  *((_QWORD *)v9 + 1) = 0;
  v12 = &v8[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_notesModuleState];
  *((_QWORD *)v12 + 4) = 0;
  *((_OWORD *)v12 + 1) = 0u;
  v12[40] = 1;
  *((_OWORD *)v12 + 3) = 0u;
  v13 = &v12[*(int *)(sub_10002A750(&qword_10065A410) + 48)];
  v14 = sub_10002A750(&qword_10065A488);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(_QWORD *)v12 = sub_1003F6D40;
  *((_QWORD *)v12 + 1) = 0;
  v15 = &v8[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_autoCompleteModuleState];
  *((_QWORD *)v15 + 4) = 0;
  *((_OWORD *)v15 + 1) = 0u;
  v15[40] = 1;
  *((_OWORD *)v15 + 3) = 0u;
  v16 = &v15[*(int *)(sub_10002A750(&qword_10065A468) + 48)];
  v17 = sub_10002A750(&qword_10065A490);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(_QWORD *)v15 = sub_1003F6D40;
  *((_QWORD *)v15 + 1) = 0;
  v18 = &v8[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___layoutMetrics];
  *(_QWORD *)v18 = 0;
  v18[8] = 1;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_buttonShapesSubscription] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_visibleLinkView] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___appLinkIndicator] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___assigneeIndicator] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___autoCompleteView] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksSeparator] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksButton] = 0;
  v19 = &v8[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration];
  v20 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);

  v23.receiver = v8;
  v23.super_class = ObjectType;
  v21 = objc_msgSendSuper2(&v23, "initWithCoder:", a1);

  return v21;
}

uint64_t sub_1003FC820()
{
  uint64_t v0;

  swift_release();
  sub_1000073A0(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_titleModuleState, &qword_10065A3E8);
  sub_1000073A0(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_notesModuleState, &qword_10065A410);
  sub_1000073A0(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_autoCompleteModuleState, &qword_10065A468);
  swift_release();

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___appLinkIndicator));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___assigneeIndicator));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___autoCompleteView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksSeparator));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksButton));
  return sub_1000073A0(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration, &qword_10064CB10);
}

uint64_t sub_1003FCA4C()
{
  return type metadata accessor for TTRIBoardReminderCellContentView(0);
}

uint64_t type metadata accessor for TTRIBoardReminderCellContentView(uint64_t a1)
{
  uint64_t result;

  result = qword_10065A300;
  if (!qword_10065A300)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIBoardReminderCellContentView);
  return result;
}

void sub_1003FCA90(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[15];

  v10[0] = "\b";
  v10[1] = "\b";
  v10[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_1003FCBC8(319, &qword_10065A310, &qword_10065A318, (uint64_t (*)(uint64_t))&type metadata accessor for TTRReminderCellTitleViewModel);
  if (v3 <= 0x3F)
  {
    v10[3] = *(_QWORD *)(v2 - 8) + 64;
    sub_1003FCBC8(319, &qword_10065A320, &qword_10065A328, (uint64_t (*)(uint64_t))&type metadata accessor for TTRIReminderCellNotesViewModel);
    if (v5 <= 0x3F)
    {
      v10[4] = *(_QWORD *)(v4 - 8) + 64;
      sub_1003FCBC8(319, &qword_10065A330, &qword_10065A338, type metadata accessor for TTRIReminderCellAutoCompleteViewModel);
      if (v7 <= 0x3F)
      {
        v10[5] = *(_QWORD *)(v6 - 8) + 64;
        v10[6] = &unk_100533FC0;
        v10[7] = "\b";
        v10[8] = "\b";
        v10[9] = "\b";
        v10[10] = "\b";
        v10[11] = "\b";
        v10[12] = "\b";
        v10[13] = "\b";
        sub_1003FCC30(319);
        if (v9 <= 0x3F)
        {
          v10[14] = *(_QWORD *)(v8 - 8) + 64;
          swift_updateClassMetadata2(a1, 256, 15, v10, a1 + 136);
        }
      }
    }
  }
}

void sub_1003FCBC8(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v7 = sub_10002CA5C(a3);
    v8 = a4(255);
    v9 = type metadata accessor for TTRBoardReminderInCellModuleState(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1003FCC30(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10065A340)
  {
    v2 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10065A340);
  }
}

uint64_t sub_1003FCC84(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *a2;
  v5 = *a1;
  v6 = v2;
  v3 = sub_10002A750(&qword_10065A430);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v6, &v5, v3, &protocol witness table for AnyKeyPath) & 1;
}

_QWORD *sub_1003FCCDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  void *v41;
  id v42;
  id v43;
  char v44;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  void *v52;
  void (*v53)(void);
  id v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  int v62;
  _DWORD v63[2];

  v59 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v60 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750(&qword_10065A438);
  __chkstk_darwin(v6);
  v58 = (uint64_t)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750((uint64_t *)&unk_100640EE0);
  __chkstk_darwin(v8);
  v57 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v56 - v11;
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v56 - v15;
  v61 = type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment(0, v14);
  v17 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
  v21 = 0;
  if ((TTRBoardReminderCellContentConfigurationType.urlIsHidden.getter(v20, &off_1006615B8) & 1) != 0)
    return v21;
  v22 = *(_QWORD *)(a1 + *(int *)(v20 + 100));
  if (!*(_QWORD *)(v22 + 16))
    return 0;
  v23 = v22 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  v24 = (uint64_t)v19;
  sub_10002B1E8(v23, (uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment);
  v25 = *(void **)(a2 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_visibleLinkView);
  v56 = a2;
  if (!v25)
  {
    v32 = v60;
    v31 = v61;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v60, v19, v59);
LABEL_18:
    v45 = *(void **)(v24 + *(int *)(v31 + 20));
    v46 = objc_allocWithZone((Class)type metadata accessor for TTRIRemindersListReminderCellLinkView(0));
    v21 = (id)TTRIRemindersListReminderCellLinkView.init(url:attachmentID:)(v32, v45);
    objc_msgSend(v21, "_setDisableAnimations:", 1);
    objc_msgSend(v21, "_setPreferredSizeClass:", 2);
    v47 = objc_msgSend(objc_allocWithZone((Class)LPLinkRendererSizeClassParameters), "init");
    objc_msgSend(v47, "setOnlyShowIcon:", 1);
    objc_msgSend(v21, "_setSizeClassParameters:", v47);
    sub_1003F6D70();
    type metadata accessor for UILayoutPriority(0);
    v49 = v48;
    v62 = 0x40000000;
    v63[0] = 1148846080;
    v50 = sub_1000175C8((unint64_t *)&qword_10065BE10, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&protocol conformance descriptor for UILayoutPriority);
    static _UIKitNumericRawRepresentable.- infix(_:_:)(v63, &v62, v49, v50);
    LODWORD(v51) = v63[1];
    objc_msgSend(v21, "setLayoutSize:withContentPriority:", 24.0, 24.0, v51);

    goto LABEL_19;
  }
  v21 = v25;
  v26 = objc_msgSend(v21, "URL", v56);
  if (v26)
  {
    v27 = v26;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v26);

    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v29 = v16;
    v30 = 0;
  }
  else
  {
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v29 = v16;
    v30 = 1;
  }
  v33 = v59;
  v28(v29, v30, 1, v59);
  v32 = v60;
  v60 = *(char **)(v4 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v60)(v12, v24, v33);
  v28(v12, 0, 1, v33);
  v34 = v58;
  v35 = v58 + *(int *)(v6 + 48);
  sub_10000735C((uint64_t)v16, v58, (uint64_t *)&unk_100640EE0);
  v36 = v34;
  sub_10000735C((uint64_t)v12, v35, (uint64_t *)&unk_100640EE0);
  v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v37(v36, 1, v33) == 1)
  {
    sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_100640EE0);
    v36 = v58;
    sub_1000073A0((uint64_t)v16, (uint64_t *)&unk_100640EE0);
    if (v37(v35, 1, v33) == 1)
    {
      sub_1000073A0(v36, (uint64_t *)&unk_100640EE0);
      v31 = v61;
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  sub_10000735C(v36, v57, (uint64_t *)&unk_100640EE0);
  if (v37(v35, 1, v33) == 1)
  {
    sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_100640EE0);
    sub_1000073A0((uint64_t)v16, (uint64_t *)&unk_100640EE0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v57, v33);
LABEL_14:
    sub_1000073A0(v36, &qword_10065A438);
    v31 = v61;
LABEL_17:

    ((void (*)(char *, uint64_t, uint64_t))v60)(v32, v24, v33);
    goto LABEL_18;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v32, v35, v33);
  v38 = sub_1000175C8(&qword_10065A440, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  v39 = v57;
  LODWORD(v59) = dispatch thunk of static Equatable.== infix(_:_:)(v57, v32, v33, v38);
  v40 = *(void (**)(char *, uint64_t))(v4 + 8);
  v40(v32, v33);
  sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_100640EE0);
  sub_1000073A0((uint64_t)v16, (uint64_t *)&unk_100640EE0);
  v40((char *)v39, v33);
  sub_1000073A0(v36, (uint64_t *)&unk_100640EE0);
  v31 = v61;
  if ((v59 & 1) == 0)
    goto LABEL_17;
LABEL_16:
  sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
  v41 = *(void **)(v24 + *(int *)(v31 + 20));
  v42 = *(id *)((char *)v21 + direct field offset for TTRIRemindersListReminderCellLinkView.attachmentID);
  v43 = v41;
  v44 = static NSObject.== infix(_:_:)(v42, v43);

  if ((v44 & 1) == 0)
    goto LABEL_17;
LABEL_19:
  v52 = *(void **)(v24 + *(int *)(v31 + 24));
  if (v52)
  {
    v53 = *(void (**)(void))((swift_isaMask & *v21) + 0x68);
    v54 = v52;
    v53();

  }
  sub_10001F544(v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment);
  return v21;
}

uint64_t sub_1003FD2EC(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  int v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  __int128 v20;
  _BYTE v23[24];
  _OWORD v24[3];

  v3 = sub_10002A750(&qword_10064CB10);
  __chkstk_darwin(v3);
  v5 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v8 = &v23[-v7 - 8];
  __chkstk_darwin(v9);
  v11 = &v23[-v10 - 8];
  v12 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v23[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100010634((uint64_t)a1, (uint64_t)v24);
  v16 = sub_10002A750(&qword_10064CB18);
  v17 = swift_dynamicCast(v11, v24, v16, v12, 6);
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (v17)
  {
    v18(v11, 0, 1, v12);
    sub_10001F580((uint64_t)v11, (uint64_t)v15, type metadata accessor for TTRIBoardReminderCellContentConfiguration);
    v19 = (uint64_t)&v1[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration];
    swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration], v23, 0, 0);
    sub_10000735C(v19, (uint64_t)v8, &qword_10064CB10);
    sub_10002B1E8((uint64_t)v15, (uint64_t)v5, type metadata accessor for TTRIBoardReminderCellContentConfiguration);
    v18(v5, 0, 1, v12);
    swift_beginAccess(v19, v24, 33, 0);
    sub_1003FDD34((uint64_t)v5, v19);
    swift_endAccess(v24);
    sub_1003F8630((uint64_t)v15, (uint64_t)v8);
    sub_1003F88D0((uint64_t)v15);
    objc_msgSend(v1, "setUserInteractionEnabled:", *v15);
    v20 = *((_OWORD *)v15 + 7);
    v24[0] = *((_OWORD *)v15 + 6);
    v24[1] = v20;
    v24[2] = *((_OWORD *)v15 + 8);
    sub_1003F918C((uint64_t)v24);
    sub_1000073A0((uint64_t)v8, &qword_10064CB10);
    sub_100027F10(a1);
    return sub_10001F544((uint64_t)v15, type metadata accessor for TTRIBoardReminderCellContentConfiguration);
  }
  else
  {
    v18(v11, 1, 1, v12);
    sub_100027F10(a1);
    return sub_1000073A0((uint64_t)v11, &qword_10064CB10);
  }
}

void (*sub_1003FD554(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void (*result)(uint64_t *, char);
  _QWORD *v9;

  v3 = malloc(0x78uLL);
  *a1 = v3;
  v3[13] = v1;
  v4 = sub_10002A750(&qword_10064CB10);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[14] = v5;
  v6 = v1 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration;
  swift_beginAccess(v6, v3 + 10, 0, 0);
  sub_10000735C(v6, (uint64_t)v5, &qword_10064CB10);
  v7 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
  result = (void (*)(uint64_t *, char))(*(uint64_t (**)(void *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v3[3] = v7;
    v3[4] = sub_1000175C8(&qword_10064CB30, type metadata accessor for TTRIBoardReminderCellContentConfiguration, (uint64_t)&unk_1005388C8);
    v9 = sub_100028D70(v3);
    sub_10001F580((uint64_t)v5, (uint64_t)v9, type metadata accessor for TTRIBoardReminderCellContentConfiguration);
    return sub_1003FD668;
  }
  return result;
}

void sub_1003FD668(uint64_t *a1, char a2)
{
  _QWORD *v2;
  void *v3;

  v2 = (_QWORD *)*a1;
  v3 = *(void **)(*a1 + 112);
  if ((a2 & 1) != 0)
  {
    sub_100010634(*a1, (uint64_t)(v2 + 5));
    sub_1003FD2EC(v2 + 5);
    sub_100027F10(v2);
  }
  else
  {
    sub_1003FD2EC((_QWORD *)*a1);
  }
  free(v3);
  free(v2);
}

uint64_t sub_1003FD6D0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD *v9;
  _BYTE v11[24];

  v3 = sub_10002A750(&qword_10064CB10);
  __chkstk_darwin(v3);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = v1 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration;
  swift_beginAccess(v6, v11, 0, 0);
  sub_10000735C(v6, (uint64_t)v5, &qword_10064CB10);
  v7 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    a1[3] = v7;
    a1[4] = sub_1000175C8(&qword_10064CB30, type metadata accessor for TTRIBoardReminderCellContentConfiguration, (uint64_t)&unk_1005388C8);
    v9 = sub_100028D70(a1);
    return sub_10001F580((uint64_t)v5, (uint64_t)v9, type metadata accessor for TTRIBoardReminderCellContentConfiguration);
  }
  return result;
}

void (*sub_1003FD7DC(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1003FD554(v2);
  return sub_1002AA338;
}

uint64_t sub_1003FD820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v3, a2);
  return UIContentView.supports(_:)(a1, ObjectType, a3);
}

uint64_t sub_1003FD85C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t, void *);
  uint64_t v9;
  _BYTE v10[24];

  v5 = v2 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration;
  swift_beginAccess(v2 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration, v10, 0, 0);
  v6 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v8 = *(void (**)(uint64_t, uint64_t, void *))(v5 + 264);
    if (v8)
    {
      v9 = *(_QWORD *)(v5 + 272);
      swift_retain();
      v8(a2, a1, &protocol witness table for TTRIRemindersListLargeImageAttachmentsView);
      return sub_1000381B8((uint64_t)v8, v9);
    }
  }
  return result;
}

void sub_1003FD914(void *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  id v6;
  void *v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;

  v3 = v2;
  v6 = objc_msgSend(a1, "selectedTextRange");
  v7 = v6;
  if (v6)
  {
    v8 = objc_msgSend(v6, "end");
    objc_msgSend(a1, "caretRectForPosition:", v8);
    v10 = v9;
    v12 = v11;
    v14 = v13;
    v16 = v15;

    objc_msgSend(v3, "convertRect:fromCoordinateSpace:", a1, v10, v12, v14, v16);
    v30 = CGRectInset(v29, 0.0, -12.0);
    x = v30.origin.x;
    y = v30.origin.y;
    width = v30.size.width;
    height = v30.size.height;
    objc_msgSend(v3, "bounds");
    v33.origin.x = v21;
    v33.origin.y = v22;
    v33.size.width = v23;
    v33.size.height = v24;
    v31.origin.x = x;
    v31.origin.y = y;
    v31.size.width = width;
    v31.size.height = height;
    v32 = CGRectIntersection(v31, v33);
    v25 = v32.origin.x;
    v26 = v32.origin.y;
    v27 = v32.size.width;
    v28 = v32.size.height;

  }
  else
  {
    v25 = 0.0;
    v26 = 0.0;
    v27 = 0.0;
    v28 = 0.0;
  }
  *(CGFloat *)a2 = v25;
  *(CGFloat *)(a2 + 8) = v26;
  *(CGFloat *)(a2 + 16) = v27;
  *(CGFloat *)(a2 + 24) = v28;
  *(_BYTE *)(a2 + 32) = v7 == 0;
}

uint64_t type metadata accessor for InfoButton()
{
  return objc_opt_self(_TtC9RemindersP33_4CC2836FEE4D6F0D4831C4F79D4DF9D710InfoButton);
}

uint64_t getEnumTagSinglePayload for TTRIBoardReminderCellContentView.ContentGridSubview(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF2)
    goto LABEL_17;
  if (a2 + 14 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 14) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 14;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 14;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 14;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v8 = v6 - 15;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIBoardReminderCellContentView.ContentGridSubview(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1003FDC14 + 4 * byte_100533DB5[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1003FDC48 + 4 * byte_100533DB0[v4]))();
}

uint64_t sub_1003FDC48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003FDC50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003FDC58);
  return result;
}

uint64_t sub_1003FDC64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003FDC6CLL);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1003FDC70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003FDC78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIBoardReminderCellContentView.ContentGridSubview()
{
  return &type metadata for TTRIBoardReminderCellContentView.ContentGridSubview;
}

uint64_t sub_1003FDC94()
{
  return sub_100023FEC(&qword_10065A370, &qword_10065A378, (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t sub_1003FDCC4()
{
  unint64_t result;

  result = qword_10065A380;
  if (!qword_10065A380)
  {
    result = swift_getWitnessTable(&unk_1005340B4, &type metadata for TTRIBoardReminderCellContentView.ContentGridSubview);
    atomic_store(result, (unint64_t *)&qword_10065A380);
  }
  return result;
}

uint64_t sub_1003FDD08()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003FDD2C(uint64_t a1)
{
  uint64_t v1;

  sub_1003F708C(a1, v1);
}

uint64_t sub_1003FDD34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_10064CB10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1003FDD7C(uint64_t a1)
{
  uint64_t v1;

  sub_1003F8104(a1, v1);
}

void sub_1003FDD84(uint64_t a1)
{
  uint64_t v1;

  sub_1003F81C8(a1, v1);
}

uint64_t sub_1003FDD98()
{
  return 8;
}

uint64_t sub_1003FDDA4(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1003FDDAC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_1003FDDC0(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1003FDDCC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_1003FDDF0()
{
  unint64_t result;

  result = qword_10065A3A8;
  if (!qword_10065A3A8)
  {
    result = swift_getWitnessTable(&unk_100534004, &type metadata for TTRIBoardReminderCellContentView.ContentGridSubview);
    atomic_store(result, (unint64_t *)&qword_10065A3A8);
  }
  return result;
}

unint64_t sub_1003FDE34()
{
  unint64_t result;

  result = qword_10065A3B0;
  if (!qword_10065A3B0)
  {
    result = swift_getWitnessTable(&unk_100534074, &type metadata for TTRIBoardReminderCellContentView.ContentGridSubview);
    atomic_store(result, (unint64_t *)&qword_10065A3B0);
  }
  return result;
}

unint64_t sub_1003FDE78()
{
  unint64_t result;

  result = qword_10065A3B8;
  if (!qword_10065A3B8)
  {
    result = swift_getWitnessTable(&unk_10053403C, &type metadata for TTRIBoardReminderCellContentView.ContentGridSubview);
    atomic_store(result, (unint64_t *)&qword_10065A3B8);
  }
  return result;
}

void sub_1003FDEBC(uint64_t a1)
{
  sub_1003FA1D0(a1);
}

void sub_1003FDED4(char *a1, id a2)
{
  double v3;
  double v4;
  id v5;
  double v6;
  double v7;
  id v8;
  double v9;
  double v10;
  double *v11;

  objc_msgSend(a2, "displayScale");
  v4 = v3;
  v5 = objc_msgSend(a1, "traitCollection");
  objc_msgSend(v5, "displayScale");
  v7 = v6;

  if ((sub_1003F5628(v7, 0.0000000149011612, v4) & 1) == 0)
  {
    v8 = objc_msgSend(a1, "traitCollection");
    objc_msgSend(v8, "displayScale");
    v10 = v9;

    v11 = (double *)&a1[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___layoutMetrics];
    *v11 = fmax(v10, 1.0);
    *((_BYTE *)v11 + 8) = 0;
  }
}

unint64_t sub_1003FDFA0(unint64_t result)
{
  if (result >= 0xF)
    return 15;
  return result;
}

id sub_1003FDFB0()
{
  id v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  int v14;
  _DWORD v15[2];

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v2 = (void *)static UIFont.roundedBodyFont.getter(v1);
  objc_msgSend(v0, "setFont:", v2);

  objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
  v3 = (void *)objc_opt_self(UIColor);
  v4 = objc_msgSend(v3, "tintColor");
  objc_msgSend(v0, "setTextColor:", v4);

  v5 = v0;
  v6 = objc_msgSend(v3, "tintColor");
  objc_msgSend(v5, "setTintColor:", v6);

  v7 = NUIContainerViewSizeUseDefault[0];
  v8 = NUIContainerViewSizeUseDefault[1];
  type metadata accessor for UILayoutPriority(0);
  v10 = v9;
  v14 = 0x40000000;
  v15[0] = 1148846080;
  v11 = sub_1000175C8((unint64_t *)&qword_10065BE10, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&protocol conformance descriptor for UILayoutPriority);
  static _UIKitNumericRawRepresentable.- infix(_:_:)(v15, &v14, v10, v11);
  LODWORD(v12) = v15[1];
  objc_msgSend(v5, "setLayoutSize:withContentPriority:", v7, v8, v12);
  return v5;
}

id sub_1003FE140()
{
  NSString v0;
  id v1;
  id v2;
  id v3;
  id v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  int v12;
  _DWORD v13[2];

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v0);

  v2 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v1);
  v3 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:scale:", UIFontTextStyleBody, 1);
  objc_msgSend(v2, "setPreferredSymbolConfiguration:", v3);

  v4 = objc_msgSend((id)objc_opt_self(UIColor), "ttr_systemOrangeColor");
  objc_msgSend(v2, "setTintColor:", v4);

  v5 = NUIContainerViewSizeUseDefault[0];
  v6 = NUIContainerViewSizeUseDefault[1];
  type metadata accessor for UILayoutPriority(0);
  v8 = v7;
  v12 = 1065353216;
  v13[0] = 1148846080;
  v9 = sub_1000175C8((unint64_t *)&qword_10065BE10, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&protocol conformance descriptor for UILayoutPriority);
  static _UIKitNumericRawRepresentable.- infix(_:_:)(v13, &v12, v8, v9);
  LODWORD(v10) = v13[1];
  objc_msgSend(v2, "setLayoutSize:withContentPriority:", v5, v6, v10);

  return v2;
}

id sub_1003FE2E4(float a1)
{
  id v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  void *v10;
  id v11;
  float v13;
  _DWORD v14[2];

  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v3 = NUIContainerViewSizeUnbounded[0];
  v4 = NUIContainerViewSizeUnbounded[1];
  type metadata accessor for UILayoutPriority(0);
  v6 = v5;
  v14[0] = 1144750080;
  v13 = a1;
  v7 = sub_1000175C8((unint64_t *)&qword_10065BE10, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&protocol conformance descriptor for UILayoutPriority);
  static _UIKitNumericRawRepresentable.- infix(_:_:)(v14, &v13, v6, v7);
  LODWORD(v8) = v14[1];
  objc_msgSend(v2, "setLayoutSize:withContentPriority:", v3, v4, v8);
  objc_msgSend(v2, "setTextAlignment:", 4);
  objc_msgSend(v2, "setNumberOfLines:", 0);
  v9 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v10 = (void *)static UIFont.roundedSubheadlineFont.getter(v9);
  objc_msgSend(v2, "setFont:", v10);

  objc_msgSend(v2, "setAdjustsFontForContentSizeCategory:", 1);
  v11 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v2, "setTextColor:", v11);

  return v2;
}

id sub_1003FE464()
{
  id v0;
  uint64_t v1;
  void *v2;
  id v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v0, "setTextAlignment:", 4);
  v1 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v2 = (void *)static UIFont.roundedSubheadlineFont.getter(v1);
  objc_msgSend(v0, "setFont:", v2);

  objc_msgSend(v0, "setNumberOfLines:", 0);
  objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v0, "setTextColor:", v3);

  return v0;
}

id sub_1003FE54C()
{
  id v0;
  uint64_t v1;
  void *v2;
  Class isa;
  double v4;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v0, "setTextAlignment:", 4);
  v1 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v2 = (void *)static UIFont.roundedSubheadlineFont.getter(v1);
  isa = UIFont.withBoldTrait()().super.isa;

  objc_msgSend(v0, "setFont:", isa);
  objc_msgSend(v0, "setTextColor:", *(_QWORD *)TTRCommonAsset.Color.hashtagTokenTextColor.unsafeMutableAddressor());
  objc_msgSend(v0, "setNumberOfLines:", 0);
  objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
  LODWORD(v4) = 1132068864;
  objc_msgSend(v0, "setLayoutSize:withContentPriority:", NUIContainerViewSizeUseDefault[0], NUIContainerViewSizeUseDefault[1], v4);
  return v0;
}

void sub_1003FE648(void *a1, char a2, void *a3, char a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;

  if (a4 == 2)
  {
    v8 = 0;
    v9 = 0;
    v12 = 0;
    v10 = 1;
  }
  else if (a4 == 3)
  {
    v8 = 0;
    v9 = 0;
    v12 = 0;
    v10 = 3;
  }
  else
  {
    if (a4 == 4)
      v8 = 0;
    else
      v8 = a4 & 1;
    v9 = a2 & 1;
    v10 = (uint64_t)a3;
    if (!a3)
      v10 = (uint64_t)objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
    v11 = a3;
    v12 = v9;
  }
  sub_1003FF0B8(v12, (char *)v10);
  TTRIReminderCompletionButton.icon.setter(v12, v10);
  v13 = a5;
  TTRIReminderCompletionButton.preferredSymbolConfiguration.setter(a5);
  objc_msgSend(a1, "setSelected:", v9);
  TTRIReminderCompletionButton.prefersFadedAppearance.setter(v8);
  sub_1003FF0DC(v12, (char *)v10);
}

void sub_1003FE748(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v5 = OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_icon;
  v6 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_icon);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_icon) = a2;
  v7 = a2;

  v8 = sub_1004D81A4();
  objc_msgSend(v8, "setHidden:", *(_QWORD *)(a1 + v5) == 0);

  v9 = sub_1004D81A4();
  v10 = *(id *)(a1 + v5);
  objc_msgSend(v9, "setImage:", v10);

  v11 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_attributedLocationText);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_attributedLocationText) = a3;
  v12 = a3;

  sub_1004D823C();
}

uint64_t sub_1003FE828(void *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t result;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  __n128 v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;

  v4 = sub_10002A750(&qword_10065A420);
  __chkstk_darwin(v4);
  v47 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750(&qword_100646D60);
  __chkstk_darwin(v6);
  v48 = (uint64_t)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v45 - v10;
  v12 = type metadata accessor for AttributedString(0, v9);
  v49 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for AttributeContainer(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v45 - v20;
  v22 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
  result = TTRBoardReminderCellContentConfigurationType.subtaskCountIsHidden.getter(v22, &off_1006615B8);
  if ((result & 1) == 0)
  {
    v45 = v12;
    v46 = a1;
    AttributeContainer.init()();
    KeyPath = swift_getKeyPath(&unk_100534140);
    __chkstk_darwin(KeyPath);
    *(&v45 - 2) = v25;
    v26 = swift_getKeyPath(&unk_100534170);
    v50 = (id)a2[2];
    v27 = v50;
    v28 = sub_100019EC8();
    v29 = v27;
    AttributeContainer.subscript.setter(&v50, v26, v28);
    v30 = swift_getKeyPath(&unk_1005341B0);
    __chkstk_darwin(v30);
    *(&v45 - 2) = v31;
    v32 = swift_getKeyPath(&unk_1005341E0);
    v50 = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
    v33 = sub_1003FF11C();
    AttributeContainer.subscript.setter(&v50, v32, v33);
    v34 = a2[19];
    if (v34)
    {
      v35 = a2[18];
      v36 = a2[19];
    }
    else
    {
      v35 = 0;
      v36 = 0xE000000000000000;
    }
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v21, v15);
    v37 = swift_bridgeObjectRetain(v34);
    v38 = AttributedString.init(_:attributes:)(v35, v36, v18, v37);
    v39 = v46;
    UIButton.configuration.getter(v38);
    v40 = type metadata accessor for UIButton.Configuration(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v11, 1, v40))
    {
      v41 = v48;
      sub_10000735C((uint64_t)v11, v48, &qword_100646D60);
      UIButton.configuration.setter(v41);
      sub_1000073A0((uint64_t)v11, &qword_100646D60);
      v42 = v45;
      v43 = v49;
    }
    else
    {
      v43 = v49;
      v44 = v47;
      v42 = v45;
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v47, v14, v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v44, 0, 1, v42);
      UIButton.Configuration.attributedTitle.setter(v44);
      UIButton.configuration.setter(v11);
    }
    objc_msgSend(v39, "setTintColor:", a2[20]);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v42);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  }
  return result;
}

void sub_1003FEBEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  id v19;
  NSString *v20;
  unint64_t v21;
  uint64_t v22;
  NSString *v23;
  UIFont v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  double v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[72];
  _BYTE v39[80];

  v3 = sub_10002A750(&qword_10065A420);
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750(&qword_100646D60);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - v10;
  v12 = *(void **)(a2 + 8);
  if (v12)
  {
    v13 = *(_QWORD *)(a2 + 192);
    if (v13)
    {
      if (((*(_BYTE *)(a2 + 216) | *(_BYTE *)(a2 + 217)) & 1) == 0)
      {
        v37 = *(_QWORD *)(a2 + 184);
        v36 = sub_100005ED8(0, &qword_1006452E0, NSAttributedString_ptr);
        v14 = v12;
        v35 = static TTRLocalizableStrings.RemindersList.moveToSectionFormat()();
        v34 = v15;
        v16 = sub_10002A750(&qword_10064BB40);
        inited = swift_initStackObject(v16, v39);
        v33 = xmmword_100520250;
        *(_OWORD *)(inited + 16) = xmmword_100520250;
        *(_QWORD *)(inited + 32) = NSFontAttributeName;
        v18 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
        *(_QWORD *)(inited + 64) = v18;
        *(_QWORD *)(inited + 40) = v14;
        v19 = v14;
        v20 = NSFontAttributeName;
        v21 = sub_100350498(inited);
        v22 = swift_initStackObject(v16, v38);
        *(_OWORD *)(v22 + 16) = v33;
        *(_QWORD *)(v22 + 32) = v20;
        v23 = v20;
        v24.super.isa = UIFont.withBoldTrait()().super.isa;
        *(_QWORD *)(v22 + 64) = v18;
        *(UIFont *)(v22 + 40) = v24;
        v25 = sub_100350498(v22);
        v26 = v34;
        v27 = (void *)static NSAttributedString.formattedString(format:formatAttributes:content:contentAttributes:)(v35, v34, v21, v37, v13, v25);
        swift_bridgeObjectRelease(v26);
        swift_bridgeObjectRelease(v21);
        swift_bridgeObjectRelease(v25);
        UIButton.configuration.getter(v28);
        v29 = type metadata accessor for UIButton.Configuration(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v11, 1, v29))
        {
          sub_10000735C((uint64_t)v11, (uint64_t)v8, &qword_100646D60);
          UIButton.configuration.setter(v8);

          sub_1000073A0((uint64_t)v11, &qword_100646D60);
        }
        else
        {
          v30 = v27;
          v31 = AttributedString.init(_:)();
          v32 = type metadata accessor for AttributedString(0, v31);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v5, 0, 1, v32);
          UIButton.Configuration.attributedTitle.setter(v5);
          UIButton.configuration.setter(v11);

        }
      }
    }
  }
}

uint64_t sub_1003FEEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _QWORD *v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  _QWORD v24[2];
  uint64_t v25;
  _QWORD *v26;

  v25 = type metadata accessor for TTRRemindersListViewModel.ImageAttachment(0);
  v4 = *(_QWORD *)(v25 - 8);
  v5.n128_f64[0] = __chkstk_darwin(v25);
  v7 = (_QWORD *)((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
  {
    v8 = *(_QWORD *)(a2 + 16);
    v9 = _swiftEmptyArrayStorage;
    if (v8)
    {
      v24[1] = a1;
      v26 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(a2);
      sub_1003D8620(0, v8, 0);
      v10 = *(unsigned __int8 *)(v4 + 80);
      v24[0] = a2;
      v11 = a2 + ((v10 + 32) & ~v10);
      v12 = *(_QWORD *)(v4 + 72);
      v9 = v26;
      do
      {
        sub_10002B1E8(v11, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ImageAttachment);
        v13 = *(void **)((char *)v7 + *(int *)(v25 + 24));
        v14 = (void *)*v7;
        v15 = TTRIRemindersListLargeImageAttachmentsView.ViewModel.init(image:attachmentID:)(v13, *v7);
        v17 = v16;
        v18 = v13;
        v19 = v14;
        sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ImageAttachment);
        if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
        {
          sub_1003D8620(0, v9[2] + 1, 1);
          v9 = v26;
        }
        v21 = v9[2];
        v20 = v9[3];
        if (v21 >= v20 >> 1)
        {
          sub_1003D8620(v20 > 1, v21 + 1, 1);
          v9 = v26;
        }
        v9[2] = v21 + 1;
        v22 = &v9[2 * v21];
        v22[4] = v15;
        v22[5] = v17;
        v11 += v12;
        --v8;
      }
      while (v8);
      v5 = swift_bridgeObjectRelease(v24[0]);
    }
  }
  else
  {
    v9 = _swiftEmptyArrayStorage;
  }
  return TTRIRemindersListLargeImageAttachmentsView.viewModels.setter(v9, v5);
}

void sub_1003FF0A0(uint64_t a1)
{
  uint64_t v1;

  sub_1003F75C8(a1, v1);
}

void sub_1003FF0A8(uint64_t a1)
{
  uint64_t v1;

  sub_1003F7150(a1, v1);
}

void sub_1003FF0B0(uint64_t a1)
{
  uint64_t v1;

  sub_1003F6DF4(a1, v1);
}

uint64_t sub_1003FF0B8(uint64_t a1, char *a2)
{
  if (a2 != (char *)3)
    return (uint64_t)sub_1003FF0C8(a1, a2);
  return a1;
}

char *sub_1003FF0C8(uint64_t a1, char *a2)
{
  char *result;

  if ((unint64_t)(a2 - 1) >= 2)
    return a2;
  return result;
}

void sub_1003FF0DC(uint64_t a1, char *a2)
{
  if (a2 != (char *)3)
    sub_1003FF0EC(a1, a2);
}

void sub_1003FF0EC(uint64_t a1, char *a2)
{
  if ((unint64_t)(a2 - 1) >= 2)

}

void sub_1003FF100()
{
  AttributeScopes.UIKitAttributes.foregroundColor.getter();
  __break(1u);
}

unint64_t sub_1003FF11C()
{
  unint64_t result;

  result = qword_10065A428;
  if (!qword_10065A428)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.UIKitAttributes.ForegroundColorAttribute, &type metadata for AttributeScopes.UIKitAttributes.ForegroundColorAttribute);
    atomic_store(result, (unint64_t *)&qword_10065A428);
  }
  return result;
}

void sub_1003FF160(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_1003FF11C();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_1003FF184()
{
  return 8;
}

uint64_t sub_1003FF194()
{
  uint64_t v0;

  v0 = sub_10002A750(&qword_10065A430);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

void sub_1003FF1D8(uint64_t a1)
{
  uint64_t v1;

  sub_1003F7928(a1, v1);
}

uint64_t sub_1003FF1E0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  int v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  int v65;
  int *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  double v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  int v124;
  int *v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  double v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  id *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  int v150;
  int *v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  id *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  id v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  int v177;
  uint64_t v178;
  unsigned int (*v180)(_QWORD *, uint64_t, uint64_t);
  unsigned int (*v181)(_QWORD *, uint64_t, uint64_t);
  unsigned int (*v182)(_QWORD *, uint64_t);
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;

  v1 = (int *)type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
  v2 = *((_QWORD *)v1 - 1);
  v190 = *(unsigned __int8 *)(v2 + 80);
  v3 = (v190 + 40) & ~v190;
  v185 = v2;
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(sub_10002A750(&qword_10064CB10) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v189 = *(_QWORD *)(v5 + 64);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  v191 = v0;
  v7 = v0 + v3;

  if (*(_QWORD *)(v0 + v3 + 64))
    swift_release();

  if (*(_QWORD *)(v7 + 128))
    swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + 152));

  if (*(_QWORD *)(v7 + 168))
    swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + 192));
  if (*(_QWORD *)(v7 + 200))
    swift_release();

  if (*(_QWORD *)(v7 + 240))
    swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + 256));
  if (*(_QWORD *)(v7 + 264))
    swift_release();
  v8 = (_QWORD *)(v7 + v1[17]);
  swift_unknownObjectRelease(*v8);
  v184 = sub_10002A750(&qword_10064CB68);
  v9 = (_QWORD *)((char *)v8 + *(int *)(v184 + 28));
  v10 = sub_10002A750(&qword_10064CBB8);
  v182 = *(unsigned int (**)(_QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  v183 = v10;
  if (!v182(v9, 1))
  {
    v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v9, v11))
    {
      case 0u:
        v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v9, v13))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_35;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_17;
          default:
            goto LABEL_36;
        }
        goto LABEL_36;
      case 1u:
        v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v9, v14))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_35:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_17:
            v15 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v9, v15);
            break;
          default:
            break;
        }
LABEL_36:
        v31 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v32 = (char *)v9 + *(int *)(v31 + 20);
        v33 = *((_QWORD *)v32 + 1);
        if (v33)
        {
          swift_bridgeObjectRelease(v33);
          sub_10003E2EC(*((void **)v32 + 2), *((_QWORD *)v32 + 3), *((_QWORD *)v32 + 4), *((_QWORD *)v32 + 5), *((_QWORD *)v32 + 6), *((_QWORD *)v32 + 7), v32[64]);
          v34 = v32[120];
          if (v34 != 255)
            sub_10002B328(*((void **)v32 + 9), *((_QWORD *)v32 + 10), *((_QWORD *)v32 + 11), *((_QWORD *)v32 + 12), *((_QWORD *)v32 + 13), *((_QWORD *)v32 + 14), v34 & 1);
        }
        v21 = *(id *)((char *)v9 + *(int *)(v31 + 44));
        goto LABEL_40;
      case 2u:

        v16 = (id *)((char *)v9 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v17 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
        {
          switch(swift_getEnumCaseMultiPayload(v16, v17))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_120;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_24;
            default:
              goto LABEL_41;
          }
        }
        goto LABEL_41;
      case 3u:

        v16 = (id *)((char *)v9 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v16, 1, v18))
        {
          switch(swift_getEnumCaseMultiPayload(v16, v18))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_120;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_24;
            default:
              goto LABEL_41;
          }
        }
        goto LABEL_41;
      case 4u:

        v16 = (id *)((char *)v9 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v19 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v16, 1, v19))
        {
          switch(swift_getEnumCaseMultiPayload(v16, v19))
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_120:
              v21 = *v16;
              goto LABEL_40;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_24:
              v20 = type metadata accessor for Date(0);
              (*(void (**)(id *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v16, v20);
              break;
            default:
              goto LABEL_41;
          }
        }
        goto LABEL_41;
      case 5u:
        v21 = (id)v9[2];
        goto LABEL_40;
      case 6u:
        v21 = (id)*v9;
        goto LABEL_40;
      case 7u:
        v22 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v9, 1, v22))
        {
          swift_bridgeObjectRelease(*v9);
          v23 = (char *)v9 + *(int *)(v22 + 20);
          v24 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
        }
        v25 = (char *)v9 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v26 = *((_QWORD *)v25 + 1);
        if (!v26)
          goto LABEL_41;
        swift_bridgeObjectRelease(v26);
        v21 = (id)*((_QWORD *)v25 + 2);
LABEL_40:

LABEL_41:
        v35 = (int *)type metadata accessor for TTRReminderCellTitleViewModel(0, v12);

        swift_bridgeObjectRelease(*(_QWORD *)((char *)v9 + v35[10]));
        break;
      case 8u:
        v27 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v9, 1, v27))
        {
          v28 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v9, v28);
        }
        goto LABEL_41;
      case 9u:
        v29 = (char *)v9 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v30 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
        goto LABEL_41;
      default:
        goto LABEL_41;
    }
  }
  v36 = v7 + v1[18];
  swift_unknownObjectRelease(*(_QWORD *)(v36 + 8));
  v37 = sub_10002A750(&qword_10064CB60);
  v38 = (_QWORD *)(v36 + *(int *)(v37 + 40));
  v39 = sub_10002A750(&qword_10064CBA0);
  v181 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48);
  if (!v181(v38, 1, v39))
  {
    v187 = v37;
    v40 = v4;
    v41 = v6;
    v42 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v38, v42))
    {
      case 0u:
        v44 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v38, v44))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_64;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_46;
          default:
            goto LABEL_65;
        }
        goto LABEL_65;
      case 1u:
        v45 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v38, v45))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_64:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_46:
            v46 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v38, v46);
            break;
          default:
            break;
        }
LABEL_65:
        v62 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v63 = (char *)v38 + *(int *)(v62 + 20);
        v64 = *((_QWORD *)v63 + 1);
        if (v64)
        {
          swift_bridgeObjectRelease(v64);
          sub_10003E2EC(*((void **)v63 + 2), *((_QWORD *)v63 + 3), *((_QWORD *)v63 + 4), *((_QWORD *)v63 + 5), *((_QWORD *)v63 + 6), *((_QWORD *)v63 + 7), v63[64]);
          v65 = v63[120];
          if (v65 != 255)
            sub_10002B328(*((void **)v63 + 9), *((_QWORD *)v63 + 10), *((_QWORD *)v63 + 11), *((_QWORD *)v63 + 12), *((_QWORD *)v63 + 13), *((_QWORD *)v63 + 14), v65 & 1);
        }
        v52 = *(id *)((char *)v38 + *(int *)(v62 + 44));
        goto LABEL_69;
      case 2u:

        v47 = (id *)((char *)v38 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v48 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v47, 1, v48))
        {
          switch(swift_getEnumCaseMultiPayload(v47, v48))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_121;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_53;
            default:
              goto LABEL_70;
          }
        }
        goto LABEL_70;
      case 3u:

        v47 = (id *)((char *)v38 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v49 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48))(v47, 1, v49))
        {
          switch(swift_getEnumCaseMultiPayload(v47, v49))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_121;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_53;
            default:
              goto LABEL_70;
          }
        }
        goto LABEL_70;
      case 4u:

        v47 = (id *)((char *)v38 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v50 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v47, 1, v50))
        {
          switch(swift_getEnumCaseMultiPayload(v47, v50))
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_121:
              v52 = *v47;
              goto LABEL_69;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_53:
              v51 = type metadata accessor for Date(0);
              (*(void (**)(id *, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v47, v51);
              break;
            default:
              goto LABEL_70;
          }
        }
        goto LABEL_70;
      case 5u:
        v52 = (id)v38[2];
        goto LABEL_69;
      case 6u:
        v52 = (id)*v38;
        goto LABEL_69;
      case 7u:
        v53 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v38, 1, v53))
        {
          swift_bridgeObjectRelease(*v38);
          v54 = (char *)v38 + *(int *)(v53 + 20);
          v55 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v54, v55);
        }
        v56 = (char *)v38 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v57 = *((_QWORD *)v56 + 1);
        if (!v57)
          goto LABEL_70;
        swift_bridgeObjectRelease(v57);
        v52 = (id)*((_QWORD *)v56 + 2);
LABEL_69:

LABEL_70:
        v66 = (int *)type metadata accessor for TTRIReminderCellNotesViewModel(0, v43);

        swift_bridgeObjectRelease(*(_QWORD *)((char *)v38 + v66[7]));
        swift_bridgeObjectRelease(*(_QWORD *)((char *)v38 + v66[8]));
        v6 = v41;
        v4 = v40;
        v37 = v187;
        break;
      case 8u:
        v58 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 48))(v38, 1, v58))
        {
          v59 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v38, v59);
        }
        goto LABEL_70;
      case 9u:
        v60 = (char *)v38 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v61 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v60, v61);
        goto LABEL_70;
      default:
        goto LABEL_70;
    }
  }

  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v1[20] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v1[22] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v1[23] + 8));

  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v1[25]));
  v67 = v7 + v1[26];

  swift_bridgeObjectRelease(*(_QWORD *)(v67 + 16));
  if (*(_QWORD *)(v67 + 24))
    swift_release();
  v68 = v7 + v1[27];

  swift_bridgeObjectRelease(*(_QWORD *)(v68 + 16));
  if (*(_QWORD *)(v68 + 24))
    swift_release();
  v188 = v6;
  v69 = (v3 + v4 + v6) & ~v6;
  v70 = (_QWORD *)(v7 + v1[28]);
  swift_unknownObjectRelease(*v70);
  v71 = sub_10002A750(&qword_10064CB58);
  v72 = (_QWORD *)((char *)v70 + *(int *)(v71 + 28));
  v73 = sub_10002A750(&qword_10064CB70);
  v180 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 48);
  if (!v180(v72, 1, v73))
  {
    v75 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v72, v75))
    {
      case 0u:
        v76 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v72, v76))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_97;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_79;
          default:
            goto LABEL_98;
        }
        goto LABEL_98;
      case 1u:
        v77 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v72, v77))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_97:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_79:
            v78 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v78 - 8) + 8))(v72, v78);
            break;
          default:
            break;
        }
LABEL_98:
        v94 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v95 = (char *)v72 + *(int *)(v94 + 20);
        v96 = *((_QWORD *)v95 + 1);
        if (v96)
        {
          swift_bridgeObjectRelease(v96);
          sub_10003E2EC(*((void **)v95 + 2), *((_QWORD *)v95 + 3), *((_QWORD *)v95 + 4), *((_QWORD *)v95 + 5), *((_QWORD *)v95 + 6), *((_QWORD *)v95 + 7), v95[64]);
          v97 = v95[120];
          if (v97 != 255)
            sub_10002B328(*((void **)v95 + 9), *((_QWORD *)v95 + 10), *((_QWORD *)v95 + 11), *((_QWORD *)v95 + 12), *((_QWORD *)v95 + 13), *((_QWORD *)v95 + 14), v97 & 1);
        }
        v84 = *(id *)((char *)v72 + *(int *)(v94 + 44));
        goto LABEL_102;
      case 2u:

        v79 = (id *)((char *)v72 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v80 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 48))(v79, 1, v80))
        {
          switch(swift_getEnumCaseMultiPayload(v79, v80))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_122;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_86;
            default:
              goto LABEL_103;
          }
        }
        goto LABEL_103;
      case 3u:

        v79 = (id *)((char *)v72 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v81 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 48))(v79, 1, v81))
        {
          switch(swift_getEnumCaseMultiPayload(v79, v81))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_122;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_86;
            default:
              goto LABEL_103;
          }
        }
        goto LABEL_103;
      case 4u:

        v79 = (id *)((char *)v72 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v82 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 48))(v79, 1, v82))
        {
          switch(swift_getEnumCaseMultiPayload(v79, v82))
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_122:
              v84 = *v79;
              goto LABEL_102;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_86:
              v83 = type metadata accessor for Date(0);
              (*(void (**)(id *, uint64_t))(*(_QWORD *)(v83 - 8) + 8))(v79, v83);
              break;
            default:
              goto LABEL_103;
          }
        }
        goto LABEL_103;
      case 5u:
        v84 = (id)v72[2];
        goto LABEL_102;
      case 6u:
        v84 = (id)*v72;
        goto LABEL_102;
      case 7u:
        v85 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 48))(v72, 1, v85))
        {
          swift_bridgeObjectRelease(*v72);
          v86 = (char *)v72 + *(int *)(v85 + 20);
          v87 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v87 - 8) + 8))(v86, v87);
        }
        v88 = (char *)v72 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v89 = *((_QWORD *)v88 + 1);
        if (!v89)
          goto LABEL_103;
        swift_bridgeObjectRelease(v89);
        v84 = (id)*((_QWORD *)v88 + 2);
LABEL_102:

LABEL_103:
        v98 = type metadata accessor for TTRIReminderCellAutoCompleteViewModel(0);
        swift_bridgeObjectRelease(*(_QWORD *)((char *)v72 + *(int *)(v98 + 24) + 8));
        v74 = swift_bridgeObjectRelease(*(_QWORD *)((char *)v72 + *(int *)(v98 + 28)));
        break;
      case 8u:
        v90 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 48))(v72, 1, v90))
        {
          v91 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v91 - 8) + 8))(v72, v91);
        }
        goto LABEL_103;
      case 9u:
        v92 = (char *)v72 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v93 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v93 - 8) + 8))(v92, v93);
        goto LABEL_103;
      default:
        goto LABEL_103;
    }
  }
  v99 = v191;
  v100 = v191 + v69;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *, __n128))(v185 + 48))(v191 + v69, 1, v1, v74))
  {

    if (*(_QWORD *)(v100 + 64))
      swift_release();

    if (*(_QWORD *)(v100 + 128))
      swift_release();
    swift_bridgeObjectRelease(*(_QWORD *)(v100 + 152));

    if (*(_QWORD *)(v100 + 168))
      swift_release();
    swift_bridgeObjectRelease(*(_QWORD *)(v100 + 192));
    if (*(_QWORD *)(v100 + 200))
      swift_release();

    if (*(_QWORD *)(v100 + 240))
      swift_release();
    swift_bridgeObjectRelease(*(_QWORD *)(v100 + 256));
    if (*(_QWORD *)(v100 + 264))
      swift_release();
    v101 = (_QWORD *)(v100 + v1[17]);
    swift_unknownObjectRelease(*v101);
    v102 = (_QWORD *)((char *)v101 + *(int *)(v184 + 28));
    if (!((unsigned int (*)(_QWORD *, uint64_t, uint64_t))v182)(v102, 1, v183))
    {
      v186 = v69;
      v103 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(v102, v103))
      {
        case 0u:
          v105 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v102, v105))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_143;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_124;
            default:
              goto LABEL_144;
          }
          goto LABEL_144;
        case 1u:
          v106 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v102, v106))
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_143:

              break;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_124:
              v107 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v107 - 8) + 8))(v102, v107);
              break;
            default:
              break;
          }
LABEL_144:
          v121 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v122 = (char *)v102 + *(int *)(v121 + 20);
          v123 = *((_QWORD *)v122 + 1);
          if (v123)
          {
            swift_bridgeObjectRelease(v123);
            sub_10003E2EC(*((void **)v122 + 2), *((_QWORD *)v122 + 3), *((_QWORD *)v122 + 4), *((_QWORD *)v122 + 5), *((_QWORD *)v122 + 6), *((_QWORD *)v122 + 7), v122[64]);
            v124 = v122[120];
            if (v124 != 255)
              sub_10002B328(*((void **)v122 + 9), *((_QWORD *)v122 + 10), *((_QWORD *)v122 + 11), *((_QWORD *)v122 + 12), *((_QWORD *)v122 + 13), *((_QWORD *)v122 + 14), v124 & 1);
          }
          v113 = *(id *)((char *)v102 + *(int *)(v121 + 44));
          goto LABEL_148;
        case 2u:

          v108 = (id *)((char *)v102
                      + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v109 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 48))(v108, 1, v109))
          {
            switch(swift_getEnumCaseMultiPayload(v108, v109))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_215;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_131;
              default:
                goto LABEL_149;
            }
          }
          goto LABEL_149;
        case 3u:

          v108 = (id *)((char *)v102
                      + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v110 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 48))(v108, 1, v110))
          {
            switch(swift_getEnumCaseMultiPayload(v108, v110))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_215;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_131;
              default:
                goto LABEL_149;
            }
          }
          goto LABEL_149;
        case 4u:

          v108 = (id *)((char *)v102
                      + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v111 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 48))(v108, 1, v111))
          {
            switch(swift_getEnumCaseMultiPayload(v108, v111))
            {
              case 1u:
              case 8u:
              case 9u:
LABEL_215:
                v113 = *v108;
                goto LABEL_148;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
LABEL_131:
                v112 = type metadata accessor for Date(0);
                goto LABEL_141;
              default:
                goto LABEL_149;
            }
          }
          goto LABEL_149;
        case 5u:
          v113 = (id)v102[2];
          goto LABEL_148;
        case 6u:
          v113 = (id)*v102;
          goto LABEL_148;
        case 7u:
          v114 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 48))(v102, 1, v114))
          {
            swift_bridgeObjectRelease(*v102);
            v115 = (char *)v102 + *(int *)(v114 + 20);
            v116 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v116 - 8) + 8))(v115, v116);
          }
          v117 = (char *)v102 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v118 = *((_QWORD *)v117 + 1);
          if (!v118)
            goto LABEL_149;
          swift_bridgeObjectRelease(v118);
          v113 = (id)*((_QWORD *)v117 + 2);
LABEL_148:

LABEL_149:
          v125 = (int *)type metadata accessor for TTRReminderCellTitleViewModel(0, v104);

          swift_bridgeObjectRelease(*(_QWORD *)((char *)v102 + v125[10]));
          v99 = v191;
          v69 = v186;
          break;
        case 8u:
          v119 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 48))(v102, 1, v119))
          {
            v120 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v120 - 8) + 8))(v102, v120);
          }
          goto LABEL_149;
        case 9u:
          v108 = (id *)((char *)v102 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
          v112 = type metadata accessor for AnyTip(0);
LABEL_141:
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v112 - 8) + 8))(v108, v112);
          goto LABEL_149;
        default:
          goto LABEL_149;
      }
    }
    v126 = v100 + v1[18];
    swift_unknownObjectRelease(*(_QWORD *)(v126 + 8));
    v127 = (_QWORD *)(v126 + *(int *)(v37 + 40));
    if (!v181(v127, 1, v39))
    {
      v128 = v69;
      v129 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(v127, v129))
      {
        case 0u:
          v131 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v127, v131))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_173;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_154;
            default:
              goto LABEL_174;
          }
          goto LABEL_174;
        case 1u:
          v132 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v127, v132))
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_173:

              break;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_154:
              v133 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v133 - 8) + 8))(v127, v133);
              break;
            default:
              break;
          }
LABEL_174:
          v147 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v148 = (char *)v127 + *(int *)(v147 + 20);
          v149 = *((_QWORD *)v148 + 1);
          if (v149)
          {
            swift_bridgeObjectRelease(v149);
            sub_10003E2EC(*((void **)v148 + 2), *((_QWORD *)v148 + 3), *((_QWORD *)v148 + 4), *((_QWORD *)v148 + 5), *((_QWORD *)v148 + 6), *((_QWORD *)v148 + 7), v148[64]);
            v150 = v148[120];
            if (v150 != 255)
              sub_10002B328(*((void **)v148 + 9), *((_QWORD *)v148 + 10), *((_QWORD *)v148 + 11), *((_QWORD *)v148 + 12), *((_QWORD *)v148 + 13), *((_QWORD *)v148 + 14), v150 & 1);
          }
          v139 = *(id *)((char *)v127 + *(int *)(v147 + 44));
          goto LABEL_178;
        case 2u:

          v134 = (id *)((char *)v127
                      + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v135 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 48))(v134, 1, v135))
          {
            switch(swift_getEnumCaseMultiPayload(v134, v135))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_216;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_161;
              default:
                goto LABEL_179;
            }
          }
          goto LABEL_179;
        case 3u:

          v134 = (id *)((char *)v127
                      + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v136 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 48))(v134, 1, v136))
          {
            switch(swift_getEnumCaseMultiPayload(v134, v136))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_216;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_161;
              default:
                goto LABEL_179;
            }
          }
          goto LABEL_179;
        case 4u:

          v134 = (id *)((char *)v127
                      + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v137 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 48))(v134, 1, v137))
          {
            switch(swift_getEnumCaseMultiPayload(v134, v137))
            {
              case 1u:
              case 8u:
              case 9u:
LABEL_216:
                v139 = *v134;
                goto LABEL_178;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
LABEL_161:
                v138 = type metadata accessor for Date(0);
                goto LABEL_171;
              default:
                goto LABEL_179;
            }
          }
          goto LABEL_179;
        case 5u:
          v139 = (id)v127[2];
          goto LABEL_178;
        case 6u:
          v139 = (id)*v127;
          goto LABEL_178;
        case 7u:
          v140 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v140 - 8) + 48))(v127, 1, v140))
          {
            swift_bridgeObjectRelease(*v127);
            v141 = (char *)v127 + *(int *)(v140 + 20);
            v142 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v142 - 8) + 8))(v141, v142);
          }
          v143 = (char *)v127 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v144 = *((_QWORD *)v143 + 1);
          if (!v144)
            goto LABEL_179;
          swift_bridgeObjectRelease(v144);
          v139 = (id)*((_QWORD *)v143 + 2);
LABEL_178:

LABEL_179:
          v151 = (int *)type metadata accessor for TTRIReminderCellNotesViewModel(0, v130);

          swift_bridgeObjectRelease(*(_QWORD *)((char *)v127 + v151[7]));
          swift_bridgeObjectRelease(*(_QWORD *)((char *)v127 + v151[8]));
          v69 = v128;
          break;
        case 8u:
          v145 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 48))(v127, 1, v145))
          {
            v146 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v146 - 8) + 8))(v127, v146);
          }
          goto LABEL_179;
        case 9u:
          v134 = (id *)((char *)v127 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
          v138 = type metadata accessor for AnyTip(0);
LABEL_171:
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v138 - 8) + 8))(v134, v138);
          goto LABEL_179;
        default:
          goto LABEL_179;
      }
    }

    swift_bridgeObjectRelease(*(_QWORD *)(v100 + v1[20] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v100 + v1[22] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v100 + v1[23] + 8));

    swift_bridgeObjectRelease(*(_QWORD *)(v100 + v1[25]));
    v152 = v100 + v1[26];

    swift_bridgeObjectRelease(*(_QWORD *)(v152 + 16));
    if (*(_QWORD *)(v152 + 24))
      swift_release();
    v153 = v100 + v1[27];

    swift_bridgeObjectRelease(*(_QWORD *)(v153 + 16));
    if (*(_QWORD *)(v153 + 24))
      swift_release();
    v154 = (_QWORD *)(v100 + v1[28]);
    swift_unknownObjectRelease(*v154);
    v155 = (_QWORD *)((char *)v154 + *(int *)(v71 + 28));
    if (!v180(v155, 1, v73))
    {
      v156 = v69;
      v157 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(v155, v157))
      {
        case 0u:
          v158 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v155, v158))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_207;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_188;
            default:
              goto LABEL_208;
          }
          goto LABEL_208;
        case 1u:
          v159 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v155, v159))
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_207:

              break;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_188:
              v160 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v160 - 8) + 8))(v155, v160);
              break;
            default:
              break;
          }
LABEL_208:
          v174 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v175 = (char *)v155 + *(int *)(v174 + 20);
          v176 = *((_QWORD *)v175 + 1);
          if (v176)
          {
            swift_bridgeObjectRelease(v176);
            sub_10003E2EC(*((void **)v175 + 2), *((_QWORD *)v175 + 3), *((_QWORD *)v175 + 4), *((_QWORD *)v175 + 5), *((_QWORD *)v175 + 6), *((_QWORD *)v175 + 7), v175[64]);
            v177 = v175[120];
            if (v177 != 255)
              sub_10002B328(*((void **)v175 + 9), *((_QWORD *)v175 + 10), *((_QWORD *)v175 + 11), *((_QWORD *)v175 + 12), *((_QWORD *)v175 + 13), *((_QWORD *)v175 + 14), v177 & 1);
          }
          v166 = *(id *)((char *)v155 + *(int *)(v174 + 44));
          goto LABEL_212;
        case 2u:

          v161 = (id *)((char *)v155
                      + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v162 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v162 - 8) + 48))(v161, 1, v162))
          {
            switch(swift_getEnumCaseMultiPayload(v161, v162))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_217;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_195;
              default:
                goto LABEL_213;
            }
          }
          goto LABEL_213;
        case 3u:

          v161 = (id *)((char *)v155
                      + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v163 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v163 - 8) + 48))(v161, 1, v163))
          {
            switch(swift_getEnumCaseMultiPayload(v161, v163))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_217;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_195;
              default:
                goto LABEL_213;
            }
          }
          goto LABEL_213;
        case 4u:

          v161 = (id *)((char *)v155
                      + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v164 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v164 - 8) + 48))(v161, 1, v164))
          {
            switch(swift_getEnumCaseMultiPayload(v161, v164))
            {
              case 1u:
              case 8u:
              case 9u:
LABEL_217:
                v166 = *v161;
                goto LABEL_212;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
LABEL_195:
                v165 = type metadata accessor for Date(0);
                goto LABEL_205;
              default:
                goto LABEL_213;
            }
          }
          goto LABEL_213;
        case 5u:
          v166 = (id)v155[2];
          goto LABEL_212;
        case 6u:
          v166 = (id)*v155;
          goto LABEL_212;
        case 7u:
          v167 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v167 - 8) + 48))(v155, 1, v167))
          {
            swift_bridgeObjectRelease(*v155);
            v168 = (char *)v155 + *(int *)(v167 + 20);
            v169 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v169 - 8) + 8))(v168, v169);
          }
          v170 = (char *)v155 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v171 = *((_QWORD *)v170 + 1);
          if (!v171)
            goto LABEL_213;
          swift_bridgeObjectRelease(v171);
          v166 = (id)*((_QWORD *)v170 + 2);
LABEL_212:

LABEL_213:
          v178 = type metadata accessor for TTRIReminderCellAutoCompleteViewModel(0);
          swift_bridgeObjectRelease(*(_QWORD *)((char *)v155 + *(int *)(v178 + 24) + 8));
          swift_bridgeObjectRelease(*(_QWORD *)((char *)v155 + *(int *)(v178 + 28)));
          v69 = v156;
          break;
        case 8u:
          v172 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v172 - 8) + 48))(v155, 1, v172))
          {
            v173 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v173 - 8) + 8))(v155, v173);
          }
          goto LABEL_213;
        case 9u:
          v161 = (id *)((char *)v155 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
          v165 = type metadata accessor for AnyTip(0);
LABEL_205:
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v165 - 8) + 8))(v161, v165);
          goto LABEL_213;
        default:
          goto LABEL_213;
      }
    }
  }
  return swift_deallocObject(v99, v69 + v189, v190 | v188 | 7);
}

void sub_100400E14()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for TTRIBoardReminderCellContentConfiguration(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_10002A750(&qword_10064CB10) - 8) + 80);
  sub_1003F96A4(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), v0 + v2, v0 + ((v3 + v4) & ~v4));
}

uint64_t sub_100400E80()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100400E90()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100400EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  objc_super v5;

  v3 = *(void **)(v2 + 16);
  v5.receiver = v3;
  v5.super_class = (Class)swift_getObjectType(v3, a2);
  return objc_msgSendSuper2(&v5, "layoutSubviews");
}

uint64_t sub_100400EF4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100400F14@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  void *v10;
  Class isa;
  id v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = sub_10002A750(&qword_100650718);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init(uuidString:)(0xD000000000000024, 0x80000001005783F0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v10 = (void *)objc_opt_self(REMAccount);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    v12 = objc_msgSend(v10, "objectIDWithUUID:", isa);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = (char *)a1 + *(int *)(sub_10002A750(&qword_10064BBB8) + 48);
    *a1 = v12;
    v14 = enum case for REMNavigationSpecifier.AccountPathSpecifier.showInAccountsList(_:);
    v15 = type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
    v16 = enum case for REMNavigationSpecifier.account(_:);
    v17 = type metadata accessor for REMNavigationSpecifier(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(a1, v16, v17);
  }
  return result;
}

uint64_t sub_1004010C4(_QWORD *a1, uint64_t a2)
{
  return sub_100401118(a1, a2, &qword_100653150);
}

uint64_t sub_1004010E0(_QWORD *a1, uint64_t a2)
{
  return sub_100401118(a1, a2, &qword_100653170);
}

uint64_t sub_1004010FC(_QWORD *a1, uint64_t a2)
{
  return sub_100401118(a1, a2, &qword_100653180);
}

uint64_t sub_100401118(_QWORD *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v6 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = a1[4];
  v12 = sub_10001413C(a1, v10);
  static REMNavigationSpecifier.ReminderPathSpecifier.showInList.getter(v12);
  v13 = sub_10002A750(a3);
  v14 = (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 + 8) + 40))(a2, v9, v13, v13, v10);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v14;
}

uint64_t sub_100401200(uint64_t (*a1)(_QWORD, _QWORD))
{
  return a1(0, 0);
}

uint64_t sub_10040122C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void *v8;
  Class isa;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = sub_10002A750(&qword_100650718);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init(uuidString:)(0xD000000000000024, 0x80000001005784E0);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v8 = (void *)objc_opt_self(REMList);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    v10 = objc_msgSend(v8, "objectIDWithUUID:", isa);

    v11 = (char *)a1 + *(int *)(sub_10002A750((uint64_t *)&unk_100665610) + 48);
    *a1 = v10;
    v12 = enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:);
    v13 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
    v14 = enum case for REMNavigationSpecifier.list(_:);
    v15 = type metadata accessor for REMNavigationSpecifier(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(a1, v14, v15);
  }
  return result;
}

id sub_1004013A0(void *a1)
{
  return sub_1004014A8(a1, 0x8000000100578420);
}

id sub_1004013F8(void *a1)
{
  return sub_1004014A8(a1, 0x8000000100578450);
}

id sub_100401450(void *a1)
{
  return sub_1004014A8(a1, 0x8000000100578480);
}

id sub_1004014A8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  Class isa;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v18;

  v4 = sub_10002A750(&qword_100650718);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init(uuidString:)(0xD000000000000024, a2);
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    __break(1u);
  v9 = (void *)objc_opt_self(REMReminder);
  isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  v11 = objc_msgSend(v9, "objectIDWithUUID:", isa);

  v18 = 0;
  v12 = objc_msgSend(a1, "fetchReminderWithObjectID:error:", v11, &v18);
  v13 = v18;
  if (v12)
  {
    v14 = v18;
  }
  else
  {
    v15 = v18;
    _convertNSErrorToError(_:)(v13);

    swift_willThrow(v16);
  }

  return v12;
}

id sub_100401644(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  Class isa;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v16;

  v2 = sub_10002A750(&qword_100650718);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init(uuidString:)(0xD000000000000024, 0x80000001005784B0);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    __break(1u);
  v7 = (void *)objc_opt_self(REMReminder);
  isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  v9 = objc_msgSend(v7, "objectIDWithUUID:", isa);

  v16 = 0;
  v10 = objc_msgSend(a1, "fetchReminderWithObjectID:error:", v9, &v16);
  v11 = v16;
  if (v10)
  {
    v12 = v16;
  }
  else
  {
    v13 = v16;
    _convertNSErrorToError(_:)(v11);

    swift_willThrow(v14);
  }

  return v10;
}

uint64_t sub_1004017E8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  void *v12;
  Class isa;
  void (*v14)(char *, uint64_t);
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  id v24;
  NSObject *v25;
  unsigned int v26;
  id v27;
  id v28;
  uint64_t result;
  Class v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  os_log_type_t v38;
  uint8_t *v39;
  id v40;
  uint64_t v41;
  _QWORD v42[2];
  id v43;
  unint64_t v44;
  id v45;

  v3 = sub_10002A750(&qword_100650718);
  __chkstk_darwin(v3);
  v5 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)v42 - v7;
  v44 = (unint64_t)"EF-91CB-A8A3484D56AE";
  UUID.init(uuidString:)(0xD000000000000024, 0x80000001005784B0);
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9) == 1)
    __break(1u);
  v12 = (void *)objc_opt_self(REMReminder);
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v14 = *(void (**)(char *, uint64_t))(v10 + 8);
  v14(v8, v9);
  v15 = objc_msgSend(v12, "objectIDWithUUID:", isa);

  v45 = 0;
  v16 = objc_msgSend(a1, "fetchReminderWithObjectID:error:", v15, &v45);

  v17 = v45;
  if (!v16)
  {
    v34 = v17;
    _convertNSErrorToError(_:)(v17);

    swift_willThrow(v35);
    return (uint64_t)v16;
  }
  if (!objc_msgSend(v16, "isCompleted"))
  {
    if (qword_10063D770 != -1)
      swift_once(&qword_10063D770, sub_100012C34);
    v36 = type metadata accessor for Logger(0);
    v37 = sub_100012DC4(v36, (uint64_t)qword_10065A4C8);
    v25 = Logger.logObject.getter(v37);
    v38 = static os_log_type_t.default.getter(v25);
    if (os_log_type_enabled(v25, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v39 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v38, "Reminder.isCompleted == false, no need to update it.", v39, 2u);
      swift_slowDealloc(v39, -1, -1);
    }
    goto LABEL_17;
  }
  v42[1] = v1;
  v43 = a1;
  if (qword_10063D770 != -1)
    swift_once(&qword_10063D770, sub_100012C34);
  v18 = type metadata accessor for Logger(0);
  v19 = sub_100012DC4(v18, (uint64_t)qword_10065A4C8);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Reminder isCompleted. Marking as not-completed", v22, 2u);
    swift_slowDealloc(v22, -1, -1);
  }

  v23 = objc_allocWithZone((Class)REMSaveRequest);
  v24 = objc_msgSend(v23, "initWithStore:", v43);
  v25 = objc_msgSend(v24, "updateReminder:", v16);
  -[NSObject setCompleted:](v25, "setCompleted:", 0);
  v45 = 0;
  v26 = objc_msgSend(v24, "saveSynchronouslyWithError:", &v45);
  v27 = v45;
  if (!v26)
  {
    v40 = v45;
    v33 = v27;
    goto LABEL_20;
  }
  v28 = v45;
  UUID.init(uuidString:)(0xD000000000000024, v44 | 0x8000000000000000);
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v11)(v5, 1, v9);
  if ((_DWORD)result != 1)
  {
    v30 = UUID._bridgeToObjectiveC()().super.isa;
    v14(v5, v9);
    v31 = objc_msgSend(v12, "objectIDWithUUID:", v30);

    v45 = 0;
    v32 = objc_msgSend(v43, "fetchReminderWithObjectID:error:", v31, &v45);

    v33 = v45;
    if (v32)
    {

      v16 = v32;
LABEL_17:

      return (uint64_t)v16;
    }
    v40 = v33;
LABEL_20:
    _convertNSErrorToError(_:)(v33);

    swift_willThrow(v41);
    return (uint64_t)v16;
  }
  __break(1u);
  return result;
}

uint64_t sub_100401C7C(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = (char *)&value witness table for () + 64;
  v2[1] = (char *)&value witness table for () + 64;
  v2[2] = (char *)&value witness table for () + 64;
  return swift_initClassMetadata2(a1, 0, 3, v2, a1 + 96);
}

uint64_t sub_100401CC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10065AB60);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10065AB60);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

_QWORD *sub_100401D54()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  return v0;
}

uint64_t sub_100401D80()
{
  uint64_t v0;

  sub_100401D54();
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for TTRIAnyTreeViewAccessibilityDelegate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIAnyTreeViewAccessibilityDelegate);
}

uint64_t OpenAnyListAppIntent.$target.getter()
{
  return IntentParameter.projectedValue.getter();
}

void *OpenAnyListAppIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static OpenAnyListAppIntent.openAppWhenRun;
}

void *OpenAnyListAppIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static OpenAnyListAppIntent.persistentIdentifier;
}

unint64_t static OpenAnyListAppIntent.persistentIdentifier.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_100401E04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_100012DDC(v10, static OpenAnyListAppIntent.title);
  sub_100012DC4(v10, (uint64_t)static OpenAnyListAppIntent.title);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x73694C206E65704FLL, 0xE900000000000074);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Name of Open List AppIntent", 27, 2);
}

uint64_t OpenAnyListAppIntent.title.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_10063D780 != -1)
    swift_once(&qword_10063D780, sub_100401E04);
  v0 = type metadata accessor for LocalizedStringResource(0);
  return sub_100012DC4(v0, (uint64_t)static OpenAnyListAppIntent.title);
}

uint64_t static OpenAnyListAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10063D780 != -1)
    swift_once(&qword_10063D780, sub_100401E04);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_100012DC4(v2, (uint64_t)static OpenAnyListAppIntent.title);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static OpenAnyListAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_10002A750(&qword_10063D8E8);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000100578570);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "TTROpenAnyListAppIntent Reminders App Intent title description", 62, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t OpenAnyListAppIntent.target.getter()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t OpenAnyListAppIntent.target.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = type metadata accessor for AnyListEntity(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100402BF0(a1, (uint64_t)v4);
  IntentParameter.wrappedValue.setter(v4);
  return sub_100402C34(a1);
}

uint64_t (*OpenAnyListAppIntent.target.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_10040232C;
}

uint64_t OpenAnyListAppIntent.perform()(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;

  v2[3] = a1;
  v2[4] = a2;
  v3 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v2[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[6] = v4;
  v2[7] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
  v2[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[9] = v6;
  v2[10] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for REMNavigationSpecifier(0);
  v2[11] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[12] = v8;
  v2[13] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AnyListEntity(0);
  v2[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v2[15] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v2[16] = v11;
  v2[17] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for RemindersAppIntentCategory(0);
  v2[18] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v2[19] = v13;
  v2[20] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MainActor(0);
  v2[21] = static MainActor.shared.getter(v14);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v14, &protocol witness table for MainActor, v15);
  return swift_task_switch(sub_100402484, v16, v17);
}

uint64_t sub_100402484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v19 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 112);
  v22 = *(_QWORD *)(v0 + 128);
  v23 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 80);
  v20 = *(_QWORD *)(v0 + 96);
  v21 = *(_QWORD *)(v0 + 88);
  v15 = *(_QWORD *)(v0 + 72);
  v16 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 48);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 40);
  v9 = swift_release();
  *(_QWORD *)(v0 + 16) = v8;
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v2 + 104))(v1, enum case for RemindersAppIntentCategory.publicAppIntent(_:), v3, v9);
  v10 = sub_1001F0340();
  AppIntent.postAnalytics(category:)(v1, &type metadata for OpenAnyListAppIntent, v10);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  IntentParameter.wrappedValue.getter(v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 104))(v5, enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:), v16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v17, enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:), v7);
  sub_1001DDB50(v5, v17, v18);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v17, v7);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v5, v16);
  REMNavigationSpecifier.url.getter(v12);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v21);
  sub_100402C34(v4);
  URL.open()();
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v19, v23);
  static IntentResult.result<>()(v13);
  swift_task_dealloc(v1);
  swift_task_dealloc(v19);
  swift_task_dealloc(v4);
  swift_task_dealloc(v18);
  swift_task_dealloc(v5);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10040266C()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_10040268C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = type metadata accessor for AnyListEntity(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100402BF0(a1, (uint64_t)v4);
  IntentParameter.wrappedValue.setter(v4);
  return sub_100402C34(a1);
}

uint64_t (*sub_100402708(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_10040232C;
}

void sub_100402750(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

uint64_t sub_100402790(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_10065AC24);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10004A08C;
  return OpenAnyListAppIntent.perform()(a1, v4);
}

uint64_t sub_1004027E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = _s9Reminders20OpenAnyListAppIntentVACycfC_0();
  *a1 = result;
  return result;
}

uint64_t _s9Reminders20OpenAnyListAppIntentVACycfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v43 = *(_QWORD *)(v0 - 8);
  v44 = v0;
  __chkstk_darwin(v0);
  v42 = (char *)&v38 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10002A750(&qword_10063D8D8);
  __chkstk_darwin(v2);
  v41 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v40 = (char *)&v38 - v5;
  v6 = sub_10002A750(&qword_10063D8E0);
  __chkstk_darwin(v6);
  v39 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_10063D8E8);
  __chkstk_darwin(v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Locale(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for LocalizedStringResource(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v38 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_10002A750(&qword_10063D8F0);
  v25 = String.LocalizationValue.init(stringLiteral:)(0x7473694C20796E41, 0xE800000000000000);
  static Locale.current.getter(v25);
  v26 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
  v27(v14, enum case for LocalizedStringResource.BundleDescription.main(_:), v11);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Open Any List AppIntent list name parameter title", 49, 2);
  v28 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x800000010055F070);
  static Locale.current.getter(v28);
  v27(v14, v26, v11);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Open Any List AppIntent list name parameter description", 55, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v10, 0, 1, v21);
  v29 = type metadata accessor for AnyListEntity(0);
  v30 = v39;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v39, 1, 1, v29);
  v31 = type metadata accessor for IntentDialog(0);
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v33 = v40;
  v32(v40, 1, 1, v31);
  v34 = v41;
  v32(v41, 1, 1, v31);
  v35 = v42;
  (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v42, enum case for InputConnectionBehavior.default(_:), v44);
  v36 = sub_100402E20(&qword_10063D8F8, (uint64_t)&protocol conformance descriptor for AnyListEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v24, v10, v30, v33, v34, v35, v36);
}

uint64_t sub_100402BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AnyListEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100402C34(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AnyListEntity(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100402C74()
{
  unint64_t result;

  result = qword_10065AC28;
  if (!qword_10065AC28)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenAnyListAppIntent, &type metadata for OpenAnyListAppIntent);
    atomic_store(result, (unint64_t *)&qword_10065AC28);
  }
  return result;
}

uint64_t sub_100402CB8()
{
  return sub_100402E20(&qword_100656E00, (uint64_t)&protocol conformance descriptor for AnyListEntity);
}

unint64_t sub_100402CE4()
{
  unint64_t result;

  result = qword_10065AC30;
  if (!qword_10065AC30)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenAnyListAppIntent, &type metadata for OpenAnyListAppIntent);
    atomic_store(result, (unint64_t *)&qword_10065AC30);
  }
  return result;
}

unint64_t sub_100402D2C()
{
  unint64_t result;

  result = qword_10065AC38;
  if (!qword_10065AC38)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenAnyListAppIntent, &type metadata for OpenAnyListAppIntent);
    atomic_store(result, (unint64_t *)&qword_10065AC38);
  }
  return result;
}

uint64_t sub_100402D70(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of OpenAnyListAppIntent.perform()>>, 1);
}

uint64_t sub_100402D80(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_1001F0340();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

ValueMetadata *type metadata accessor for OpenAnyListAppIntent()
{
  return &type metadata for OpenAnyListAppIntent;
}

unint64_t sub_100402DD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10065AC48;
  if (!qword_10065AC48)
  {
    v1 = sub_10002CA5C(&qword_10065AC50);
    result = swift_getWitnessTable(&protocol conformance descriptor for IntentResultContainer<A, B, C, D>, v1);
    atomic_store(result, (unint64_t *)&qword_10065AC48);
  }
  return result;
}

uint64_t sub_100402E20(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for AnyListEntity(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100402E60(unint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  Swift::String v11;
  void *object;
  Swift::String v13;
  uint64_t v14;
  uint64_t ObjectType;
  Swift::String v16;
  void *v17;

  v4 = sub_100017648();
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v8 = a2;
    else
      v8 = a2 & 0xFFFFFFFFFFFFFF8;
    a1 = _CocoaArrayWrapper.subscript.getter(a1, v8);
    v9 = objc_opt_self(REMObjectID);
    if (swift_dynamicCastObjCClass(a1, v9))
      return a1;
LABEL_13:
    _StringGuts.grow(_:)(85);
    v7 = 0xD000000000000046;
    v6 = 0x8000000100578660;
    goto LABEL_14;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  a1 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
  swift_unknownObjectRetain(a1);
  v5 = objc_opt_self(REMObjectID);
  if (swift_dynamicCastObjCClass(a1, v5))
    return a1;
  _StringGuts.grow(_:)(82);
  v6 = 0x8000000100578610;
  v7 = 0xD000000000000043;
LABEL_14:
  String.append(_:)(*(Swift::String *)&v7);
  v11._countAndFlagsBits = _typeName(_:qualified:)(v4, 0);
  object = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(object);
  v13._countAndFlagsBits = 0x756F662074756220;
  v13._object = (void *)0xEB0000000020646ELL;
  String.append(_:)(v13);
  ObjectType = swift_getObjectType(a1, v14);
  swift_unknownObjectRelease(a1);
  v16._countAndFlagsBits = _typeName(_:qualified:)(ObjectType, 0);
  v17 = v16._object;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(v17);
  result = _assertionFailure(_:_:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, 0);
  __break(1u);
  return result;
}

id sub_100403038(char a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  objc_class *ObjectType;
  _OWORD *v9;
  _QWORD *v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType(a4, a2);
  *(_QWORD *)&a4[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource] = 0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_collectionView] = 0;
  v9 = &a4[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_lastConsumedViewModel];
  *v9 = 0u;
  v9[1] = 0u;
  *(_QWORD *)&a4[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController____lazy_storage___cancelButton] = 0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController____lazy_storage___doneButton] = 0;
  a4[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_style] = a1 & 1;
  v10 = &a4[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_presenter];
  *v10 = a2;
  v10[1] = &off_1005F61D0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_localUndoManager] = a3;
  v12.receiver = a4;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, "initWithNibName:bundle:", 0, 0);
}

uint64_t sub_10040310C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __n128 v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v53;
  id v54;
  _BYTE v55[24];
  _QWORD v56[5];
  _QWORD v57[5];

  v8 = type metadata accessor for TTRTemplatesListViewModel.OptimisticApply(0);
  __chkstk_darwin(v8);
  v10 = &v55[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = sub_10002A750(&qword_10064A538);
  __chkstk_darwin(v11);
  v13 = &v55[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v57[3] = type metadata accessor for TTRITemplatesListRouter();
  v57[4] = &off_10060CEB0;
  v57[0] = a2;
  *(_QWORD *)(a4 + 24) = 0;
  swift_unknownObjectWeakInit(a4 + 16, 0);
  *(_QWORD *)(a4 + 40) = 0;
  swift_unknownObjectWeakInit(a4 + 32, 0);
  *(_QWORD *)(a4 + 56) = 0;
  v14 = swift_unknownObjectWeakInit(a4 + 48, 0);
  *(_QWORD *)(a4 + 64) = TTRTemplatesListViewModel.init(isPlaceholder:)(1, v14);
  *(_BYTE *)(a4 + 72) = v15 & 1;
  *(_QWORD *)(a4 + 80) = v16;
  *(_QWORD *)(a4 + 88) = v17;
  *(_BYTE *)(a4 + 176) = 0;
  v18 = sub_10002A750(&qword_10064A540);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v13, 1, 1, v18);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_1004034AC((uint64_t)_swiftEmptyArrayStorage);
    v19 = v53;
  }
  else
  {
    v19 = &_swiftEmptySetSingleton;
  }
  TTRTemplatesListViewModel.OptimisticApply.init(templateOrdering:deletedTemplateIDs:)(v13, v19);
  v20 = OBJC_IVAR____TtC9Reminders26TTRITemplatesListPresenter_editorUndoManager;
  v21 = objc_allocWithZone((Class)TTRUndoManager);
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend(v21, "initWithDebugIdentifier:", v22);

  *(_QWORD *)(a4 + v20) = v23;
  *(_QWORD *)(a4 + 96) = a1;
  *(_QWORD *)(a4 + 104) = protocol witness table for TTRTemplatesListInteractor;
  sub_100010634((uint64_t)v57, a4 + 112);
  *(_QWORD *)(a4 + 160) = a3;
  ObjectType = swift_getObjectType(a1, v24);
  v26 = protocol witness table for TTRTemplatesListInteractor[1];
  v56[3] = ObjectType;
  v56[4] = v26;
  v56[0] = a1;
  v27 = type metadata accessor for TTRRemoveTemplatePresenterCapability(0);
  swift_allocObject(v27, 56, 7);
  *(_QWORD *)(a4 + 152) = TTRRemoveTemplatePresenterCapability.init(interactor:)(v56);
  v28 = type metadata accessor for TTRMainActorDeferredAction(0);
  swift_allocObject(v28, 48, 7);
  swift_retain_n(a1, 2);
  v54 = a3;
  v29 = TTRMainActorDeferredAction.init()();
  *(_QWORD *)(a4 + 168) = v29;
  swift_beginAccess(v29 + 16, v56, 1, 0);
  *(_QWORD *)(v29 + 24) = &off_1005F6168;
  swift_unknownObjectWeakAssign(v29 + 16, a4);
  v30 = *(_QWORD *)(a4 + 104);
  v32 = swift_getObjectType(*(_QWORD *)(a4 + 96), v31);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v30 + 24))(v32, v30))
    v34 = TTRTemplatesListViewModel.init(templates:)();
  else
    v34 = TTRTemplatesListViewModel.init(isPlaceholder:)(1, v33);
  v38 = v34;
  v39 = v35;
  v40 = v36;
  v41 = v37;
  v42 = a4 + OBJC_IVAR____TtC9Reminders26TTRITemplatesListPresenter_optimisticApply;
  swift_beginAccess(a4 + OBJC_IVAR____TtC9Reminders26TTRITemplatesListPresenter_optimisticApply, v55, 0, 0);
  sub_100403AA4(v42, (uint64_t)v10);
  v43 = TTRTemplatesListViewModel.applying(_:)(v10, v38, v39 & 1, v40, v41);
  LOBYTE(v42) = v44;
  v46 = v45;
  v48 = v47;
  swift_bridgeObjectRelease(v41);
  swift_bridgeObjectRelease(v40);
  swift_bridgeObjectRelease(v38);
  sub_100403AE8((uint64_t)v10);
  swift_release(a1);

  sub_100027F10(v57);
  v49 = *(_QWORD *)(a4 + 64);
  v51 = *(_QWORD *)(a4 + 80);
  v50 = *(_QWORD *)(a4 + 88);
  *(_QWORD *)(a4 + 64) = v43;
  *(_BYTE *)(a4 + 72) = v42 & 1;
  *(_QWORD *)(a4 + 80) = v46;
  *(_QWORD *)(a4 + 88) = v48;
  swift_bridgeObjectRelease(v50);
  swift_bridgeObjectRelease(v51);
  swift_bridgeObjectRelease(v49);
  return a4;
}

void sub_1004034AC(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  id v28;
  Swift::Int v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  id v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(a1);
    if (v3)
    {
LABEL_3:
      sub_10002A750(&qword_1006576D0);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (a1 < 0)
        v7 = a1;
      else
        v7 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(a1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return;
LABEL_15:
  v8 = (char *)(v4 + 7);
  v44 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v9 = 0;
    while (1)
    {
      v10 = sub_100402E60(v9, a1);
      v11 = __OFADD__(v9++, 1);
      if (v11)
      {
        __break(1u);
        goto LABEL_43;
      }
      v12 = v10;
      v13 = NSObject._rawHashValue(seed:)(v4[5]);
      v14 = -1 << *((_BYTE *)v4 + 32);
      v15 = v13 & ~v14;
      v16 = v15 >> 6;
      v17 = *(_QWORD *)&v8[8 * (v15 >> 6)];
      v18 = 1 << v15;
      if (((1 << v15) & v17) != 0)
      {
        sub_100017648();
        v19 = *(id *)(v4[6] + 8 * v15);
        v20 = static NSObject.== infix(_:_:)(v19, v12);

        if ((v20 & 1) != 0)
        {
LABEL_17:
          swift_unknownObjectRelease(v12);
          goto LABEL_18;
        }
        v21 = ~v14;
        while (1)
        {
          v15 = (v15 + 1) & v21;
          v16 = v15 >> 6;
          v17 = *(_QWORD *)&v8[8 * (v15 >> 6)];
          v18 = 1 << v15;
          if ((v17 & (1 << v15)) == 0)
            break;
          v22 = *(id *)(v4[6] + 8 * v15);
          v23 = static NSObject.== infix(_:_:)(v22, v12);

          if ((v23 & 1) != 0)
            goto LABEL_17;
        }
      }
      *(_QWORD *)&v8[8 * v16] = v18 | v17;
      *(_QWORD *)(v4[6] + 8 * v15) = v12;
      v24 = v4[2];
      v11 = __OFADD__(v24, 1);
      v25 = v24 + 1;
      if (v11)
        goto LABEL_44;
      v4[2] = v25;
LABEL_18:
      if (v9 == v44)
        return;
    }
  }
  v26 = 0;
  v42 = a1 + 32;
  v43 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v26 != v43)
  {
    v27 = v4[5];
    v28 = *(id *)(v42 + 8 * v26);
    v29 = NSObject._rawHashValue(seed:)(v27);
    v30 = -1 << *((_BYTE *)v4 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
    v34 = 1 << v31;
    if (((1 << v31) & v33) != 0)
    {
      sub_100017648();
      v35 = *(id *)(v4[6] + 8 * v31);
      v36 = static NSObject.== infix(_:_:)(v35, v28);

      if ((v36 & 1) != 0)
      {
LABEL_29:

        v5 = v44;
        goto LABEL_30;
      }
      v37 = ~v30;
      while (1)
      {
        v31 = (v31 + 1) & v37;
        v32 = v31 >> 6;
        v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
        v34 = 1 << v31;
        if ((v33 & (1 << v31)) == 0)
          break;
        v38 = *(id *)(v4[6] + 8 * v31);
        v39 = static NSObject.== infix(_:_:)(v38, v28);

        if ((v39 & 1) != 0)
          goto LABEL_29;
      }
      v5 = v44;
    }
    *(_QWORD *)&v8[8 * v32] = v34 | v33;
    *(_QWORD *)(v4[6] + 8 * v31) = v28;
    v40 = v4[2];
    v11 = __OFADD__(v40, 1);
    v41 = v40 + 1;
    if (v11)
      goto LABEL_45;
    v4[2] = v41;
LABEL_30:
    if (++v26 == v5)
      return;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
}

id sub_1004037E4(char a1, void *a2, uint64_t a3, uint64_t a4)
{
  char v6;
  id v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  _BYTE *v26;
  id v27;
  id v28;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  _UNKNOWN **v33;

  v30 = a3;
  v6 = a1 & 1;
  v7 = objc_allocWithZone((Class)TTRUndoManager);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v7, "initWithDebugIdentifier:", v8);

  v32 = type metadata accessor for TTRInteractorAsyncEditsCommitter(0);
  v33 = (_UNKNOWN **)&protocol witness table for TTRInteractorAsyncEditsCommitter;
  v31[0] = swift_allocObject(v32, 16, 7);
  v10 = type metadata accessor for TTRTemplatesListInteractor(0);
  swift_allocObject(v10, 112, 7);
  v11 = TTRTemplatesListInteractor.init(account:undoManager:committer:)(a2, v9, v31);
  v12 = type metadata accessor for TTRITemplatesListRouter();
  v13 = swift_allocObject(v12, 40, 7);
  swift_unknownObjectWeakInit(v13 + 16, 0);
  swift_unknownObjectWeakInit(v13 + 24, 0);
  v14 = type metadata accessor for TTRIActivityAlertRouterCapability();
  v15 = swift_allocObject(v14, 24, 7);
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v13 + 32) = v15;
  v32 = v12;
  v33 = &off_10060CEB0;
  v31[0] = v13;
  v16 = type metadata accessor for TTRITemplatesListPresenter(0);
  v17 = swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  v18 = sub_100028D48((uint64_t)v31, v12);
  __chkstk_darwin(v18);
  v20 = (_QWORD *)((char *)&v31[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v21 + 16))(v20);
  v22 = *v20;
  v23 = v9;
  v24 = a2;
  swift_retain(v11);
  swift_retain(v13);
  v25 = sub_10040310C(v11, v22, v23, v17);
  sub_100027F10(v31);
  v26 = objc_allocWithZone((Class)type metadata accessor for TTRITemplatesListViewController());
  v27 = v23;
  swift_retain(v25);
  v28 = sub_100403038(v6, v25, (uint64_t)v27, v26);
  swift_beginAccess(v11 + 16, v31, 1, 0);
  *(_QWORD *)(v11 + 24) = &off_1005F61C0;
  swift_unknownObjectWeakAssign(v11 + 16, v25);
  *(_QWORD *)(v25 + 24) = &off_1005F9C78;
  swift_unknownObjectWeakAssign(v25 + 16, v28);
  *(_QWORD *)(v25 + 40) = a4;
  swift_unknownObjectWeakAssign(v25 + 32, v30);
  swift_unknownObjectWeakAssign(v13 + 16, v28);
  TTRTemplatesListInteractor.start()();
  swift_release(v11);
  swift_release(v13);

  return v28;
}

uint64_t sub_100403AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRTemplatesListViewModel.OptimisticApply(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100403AE8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRTemplatesListViewModel.OptimisticApply(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100403B24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  int v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t result;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[46];
  char v36;

  v3 = v2;
  v6 = sub_10002A750(&qword_10065ACA8);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UICellConfigurationState(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v3;
  v14 = v3[1];
  v15 = *((_BYTE *)v3 + 16);
  v31 = *((unsigned __int8 *)v3 + 17);
  v36 = *((_BYTE *)v3 + 18);
  v30 = v3[3];
  v16 = v3[4];
  v33 = v3[5];
  v34 = v16;
  v32 = v3[6];
  sub_100010634(a1, (uint64_t)v35);
  sub_100405BC8(v3);
  v17 = sub_10002A750(&qword_10065ACB0);
  v18 = swift_dynamicCast(v8, v35, v17, v9, 6);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  if (!v18)
  {
    v19(v8, 1, 1, v9);
    v21 = v31;
    v22 = v30;
    goto LABEL_5;
  }
  v19(v8, 0, 1, v9);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  v21 = v31;
  v22 = v30;
  if (v20 == 1)
  {
LABEL_5:
    result = sub_1000073A0((uint64_t)v8, &qword_10065ACA8);
    v26 = v36;
    goto LABEL_6;
  }
  v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  v24 = UICellConfigurationState.isEditing.getter(v23);
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v26 = v24 ^ 1;
LABEL_6:
  *(_QWORD *)a2 = v13;
  *(_QWORD *)(a2 + 8) = v14;
  *(_BYTE *)(a2 + 16) = v15;
  *(_BYTE *)(a2 + 17) = v21;
  *(_BYTE *)(a2 + 18) = v26 & 1;
  v27 = v34;
  *(_QWORD *)(a2 + 24) = v22;
  *(_QWORD *)(a2 + 32) = v27;
  v28 = v32;
  *(_QWORD *)(a2 + 40) = v33;
  *(_QWORD *)(a2 + 48) = v28;
  return result;
}

uint64_t sub_100403D1C()
{
  uint64_t v0;
  __int128 v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD v7[3];
  uint64_t v8;

  v1 = *(_OWORD *)(v0 + 16);
  v7[0] = *(_OWORD *)v0;
  v7[1] = v1;
  v7[2] = *(_OWORD *)(v0 + 32);
  v8 = *(_QWORD *)(v0 + 48);
  v2 = objc_allocWithZone((Class)type metadata accessor for CompletedCellContentView());
  sub_100405BC8(v7);
  sub_100403E04((uint64_t)v7, v3);
  v5 = v4;
  sub_1000175C8((unint64_t *)&qword_10065ACB8, (uint64_t (*)(uint64_t))type metadata accessor for CompletedCellContentView, (uint64_t)"u\x1B\r");
  return v5;
}

double sub_100403DA0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  __int128 v4;
  __int128 v5;
  double result;
  _OWORD v7[2];
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v4 = v2[1];
  v10 = *v2;
  v11 = v4;
  v12 = v2[2];
  v13 = *((_QWORD *)v2 + 6);
  sub_100403B24(a1, (uint64_t)v7);
  v5 = v7[1];
  *(_OWORD *)a2 = v7[0];
  *(_OWORD *)(a2 + 16) = v5;
  result = *(double *)&v8;
  *(_OWORD *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 48) = v9;
  return result;
}

void sub_100403E04(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  NSString v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  id v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t inited;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  void **v79;
  id v80;
  objc_class *v81;
  char *v82;
  char *v83;
  Class isa;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  char *v95;
  char *v96;
  id v97;
  char *v98;
  char *v99;
  objc_class *ObjectType;
  _QWORD *v101;
  id v102;
  void **aBlock;
  uint64_t v104;
  void *v105;
  void *v106;
  void *v107;
  uint64_t v108;
  int v109;
  objc_super v110;
  int v111;
  char v112[104];

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v4 = sub_10002A750(&qword_100646D60);
  v5 = __chkstk_darwin(v4);
  v98 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v96 = (char *)&v96 - v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v96 - v9;
  v11 = &v2[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration];
  v12 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v11 = *(_OWORD *)a1;
  *((_OWORD *)v11 + 1) = v12;
  *((_OWORD *)v11 + 2) = *(_OWORD *)(a1 + 32);
  *((_QWORD *)v11 + 6) = *(_QWORD *)(a1 + 48);
  v13 = objc_allocWithZone((Class)UILabel);
  v99 = v2;
  v101 = (_QWORD *)a1;
  sub_100405BC8((_QWORD *)a1);
  v14 = objc_msgSend(v13, "init");
  v15 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  static TTRLocalizableStrings.Common.dotSeparator.getter();
  v17 = v16;
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  objc_msgSend(v15, "setText:", v18);

  v19 = (void *)sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v20 = (void *)objc_opt_self(UIColor);
  v21 = v14;
  v22 = v15;
  v23 = (void *)static UIFont.roundedBodyFont.getter(v22);
  objc_msgSend(v21, "setFont:", v23);

  v24 = objc_msgSend(v20, "secondaryLabelColor");
  objc_msgSend(v21, "setTextColor:", v24);

  objc_msgSend(v21, "setAdjustsFontForContentSizeCategory:", 1);
  v25 = v22;
  v102 = v19;
  v26 = v21;
  v27 = (uint64_t)v96;
  v28 = (void *)static UIFont.roundedBodyFont.getter(v25);
  v29 = v25;
  objc_msgSend(v25, "setFont:", v28);

  v30 = objc_msgSend(v20, "secondaryLabelColor");
  objc_msgSend(v25, "setTextColor:", v30);

  objc_msgSend(v25, "setAdjustsFontForContentSizeCategory:", 1);
  v97 = v26;

  v31 = (void *)objc_opt_self(UIButton);
  v32 = (char *)objc_msgSend(v31, "buttonWithType:", 1);
  static TTRLocalizableStrings.RemindersList.clearCompletedButtonTitle.getter();
  v34 = v33;
  v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v34);
  objc_msgSend(v32, "setTitle:forStates:", v35, 0);

  static UIButton.Configuration.plain()(v36);
  v37 = type metadata accessor for UIButton.Configuration(0);
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56);
  v39(v10, 0, 1, v37);
  v40 = UIButton.configuration.setter(v10);
  UIButton.configuration.getter(v40);
  v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
  if (v41(v27, 1, v37))
  {
    sub_100405C20(v27, (uint64_t)v10);
    UIButton.configuration.setter(v10);
    sub_1000073A0(v27, &qword_100646D60);
  }
  else
  {
    UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
    UIButton.configuration.setter(v27);
  }
  v42 = objc_msgSend(v32, "titleLabel");
  if (v42)
  {
    v43 = v42;
    v44 = (void *)static UIFont.roundedBodyFont.getter(v42);
    objc_msgSend(v43, "setFont:", v44);

  }
  v45 = objc_msgSend(v32, "titleLabel");
  objc_msgSend(v45, "setAdjustsFontSizeToFitWidth:", 1);

  objc_msgSend(v32, "setShowsMenuAsPrimaryAction:", 1);
  v46 = objc_msgSend(v31, "buttonWithType:", 1);
  static UIButton.Configuration.plain()(v46);
  v39(v10, 0, 1, v37);
  v47 = UIButton.configuration.setter(v10);
  v48 = (uint64_t)v98;
  UIButton.configuration.getter(v47);
  if (v41(v48, 1, v37))
  {
    sub_100405C20(v48, (uint64_t)v10);
    UIButton.configuration.setter(v10);
    sub_1000073A0(v48, &qword_100646D60);
  }
  else
  {
    UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
    UIButton.configuration.setter(v48);
  }
  v98 = v32;
  v49 = objc_msgSend(v46, "titleLabel");
  if (v49)
  {
    v50 = v49;
    v51 = (void *)static UIFont.roundedBodyFont.getter(v49);
    objc_msgSend(v50, "setFont:", v51);

  }
  v52 = objc_msgSend(v46, "titleLabel");
  objc_msgSend(v52, "setAdjustsFontSizeToFitWidth:", 1);

  sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  v53 = sub_10002A750((uint64_t *)&unk_10065BE00);
  inited = swift_initStackObject(v53, v112);
  *(_OWORD *)(inited + 16) = xmmword_1005275D0;
  v55 = v97;
  *(_QWORD *)(inited + 32) = v97;
  v56 = inited + 32;
  *(_DWORD *)(inited + 40) = 1132068864;
  *(_QWORD *)(inited + 48) = v29;
  type metadata accessor for UILayoutPriority(0);
  v58 = v57;
  LODWORD(aBlock) = 1144750080;
  v111 = 1065353216;
  v59 = (void *)sub_1000175C8((unint64_t *)&qword_10065BE10, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&protocol conformance descriptor for UILayoutPriority);
  v102 = v59;
  v60 = v55;
  v61 = v29;
  static _UIKitNumericRawRepresentable.+ infix(_:_:)(&aBlock, &v111, v58, v59);
  v62 = v98;
  *(_QWORD *)(inited + 64) = v98;
  *(_DWORD *)(inited + 72) = 1144750080;
  *(_QWORD *)(inited + 80) = v46;
  *(_DWORD *)(inited + 88) = 1144750080;
  v63 = v62;
  v64 = v46;
  static UIView.setContentPriorities(_:for:)(inited, &off_1005EA440);
  swift_setDeallocating(inited);
  v65 = *(_QWORD *)(inited + 16);
  v66 = sub_10002A750((uint64_t *)&unk_1006466B0);
  swift_arrayDestroy(v56, v65, v66);
  v67 = v99;
  *(_QWORD *)&v99[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_completedCountLabel] = v60;
  *(_QWORD *)&v67[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_separatorLabel] = v61;
  *(_QWORD *)&v67[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_clearButton] = v63;
  *(_QWORD *)&v67[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_showHideButton] = v64;
  v68 = v60;
  v69 = v61;
  v70 = v63;
  v71 = v64;

  v110.receiver = v67;
  v110.super_class = ObjectType;
  v72 = objc_msgSendSuper2(&v110, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v73 = objc_allocWithZone((Class)UIView);
  v74 = v72;
  v75 = objc_msgSend(v73, "init");
  v111 = 1132068864;
  v109 = 1065353216;
  v76 = static _UIKitNumericRawRepresentable.- infix(_:_:)(&v111, &v109, v58, v102);
  v76.n128_u32[0] = aBlock;
  objc_msgSend(v75, "setContentHuggingPriority:forAxis:", 0, v76.n128_f64[0]);
  v77 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v78 = swift_allocObject(v77, 72, 7);
  *(_OWORD *)(v78 + 16) = xmmword_100525680;
  *(_QWORD *)(v78 + 32) = v68;
  *(_QWORD *)(v78 + 40) = v69;
  *(_QWORD *)(v78 + 48) = v70;
  *(_QWORD *)(v78 + 56) = v75;
  *(_QWORD *)(v78 + 64) = v71;
  aBlock = (void **)v78;
  specialized Array._endMutation()(v78);
  v79 = aBlock;
  v80 = v74;
  v98 = (char *)v68;
  v97 = v69;
  v81 = (objc_class *)v70;
  ObjectType = v81;
  v82 = (char *)v71;
  v99 = v82;
  v83 = (char *)v80;
  v102 = v75;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v79);
  objc_msgSend(v83, "setArrangedSubviews:", isa);

  objc_msgSend(v83, "setAxis:", 0);
  objc_msgSend(v83, "setSpacing:", 5.0);
  objc_msgSend(v83, "setAlignment:", 2);
  objc_msgSend(v83, "setDistribution:", 0);
  objc_msgSend(v83, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v83, "setPreservesSuperviewLayoutMargins:", 1);
  objc_msgSend(v83, "setDebugBoundingBoxesEnabled:", 0);
  v85 = swift_allocObject(&unk_1006060D0, 24, 7);
  swift_unknownObjectWeakInit(v85 + 16, v83);
  v107 = sub_100405C8C;
  v108 = v85;
  aBlock = _NSConcreteStackBlock;
  v104 = 1107296256;
  v105 = sub_100081A10;
  v106 = &unk_1006060E8;
  v86 = _Block_copy(&aBlock);
  -[objc_class _setMenuProvider:](v81, "_setMenuProvider:", v86, swift_release().n128_f64[0]);
  _Block_release(v86);
  objc_msgSend(v82, "addTarget:action:forControlEvents:", v83, "showHideAction:", 0x2000);
  v87 = *(_QWORD *)&v83[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                      + 8];
  v88 = *(_QWORD *)&v83[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                      + 24];
  v89 = *(_QWORD *)&v83[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                      + 32];
  v90 = *(_QWORD *)&v83[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                      + 40];
  v91 = *(_QWORD *)&v83[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                      + 48];
  v92 = swift_allocObject(&unk_100606120, 24, 7);
  *(_QWORD *)(v92 + 16) = v83;
  v93 = swift_allocObject(&unk_100606148, 32, 7);
  *(_QWORD *)(v93 + 16) = sub_100405C94;
  *(_QWORD *)(v93 + 24) = v92;
  v107 = sub_10001B278;
  v108 = v93;
  aBlock = _NSConcreteStackBlock;
  v104 = 1107296256;
  v105 = sub_10001B258;
  v106 = &unk_100606160;
  v94 = _Block_copy(&aBlock);
  v95 = v83;
  swift_bridgeObjectRetain(v87);
  sub_100053DE4(v88, v89);
  sub_100053DE4(v90, v91);
  swift_retain();
  objc_msgSend(v95, "performBatchUpdates:", v94, swift_release().n128_f64[0]);
  _Block_release(v94);
  LOBYTE(v94) = swift_isEscapingClosureAtFileLocation(v93, "", 148, 209, 29, 1);
  swift_release();
  swift_release();
  sub_100405CAC(v101);
  swift_bridgeObjectRelease(v87);

  sub_1000381B8(v88, v89);
  sub_1000381B8(v90, v91);

  if ((v94 & 1) != 0)
  {
    __break(1u);
  }
  else
  {

  }
}

void *sub_10040499C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char *Strong;
  void *v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  _BYTE v9[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v9, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  v5 = Strong;
  if (Strong)
  {
    v6 = *(uint64_t (**)(void))&Strong[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                                    + 40];
    if (v6)
    {
      v7 = *(_QWORD *)&Strong[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                            + 48];
      sub_100053DE4(*(_QWORD *)&Strong[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration+ 40], v7);

      v5 = (void *)v6();
      sub_1000381B8((uint64_t)v6, v7);
    }
    else
    {

      return 0;
    }
  }
  return v5;
}

_QWORD *sub_100404AEC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  __int128 v14;
  uint64_t v15;

  v1 = sub_10002A750((uint64_t *)&unk_10064B8C0);
  v2 = (_QWORD *)swift_allocObject(v1, 64, 7);
  *((_OWORD *)v2 + 1) = xmmword_100520250;
  v3 = *(void **)(v0
                + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_completedCountLabel);
  v2[7] = sub_100005ED8(0, &qword_10063F908, UILabel_ptr);
  v2[4] = v3;
  v4 = v0
     + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration;
  if (*(_BYTE *)(v0
                + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                + 16))
  {
    v5 = *(void **)(v0
                  + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_clearButton);
    v15 = sub_100005ED8(0, &qword_10064C990, UIButton_ptr);
    *(_QWORD *)&v14 = v5;
    v6 = v3;
    v7 = v5;
    v2 = sub_100456BA8((_QWORD *)1, 2, 1, v2);
    v2[2] = 2;
    sub_100028D38(&v14, (_OWORD *)v2 + 4);
    if (!*(_BYTE *)(v4 + 17))
      return v2;
  }
  else
  {
    v8 = v3;
    if (!*(_BYTE *)(v4 + 17))
      return v2;
  }
  v9 = *(void **)(v0
                + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_showHideButton);
  v15 = sub_100005ED8(0, &qword_10064C990, UIButton_ptr);
  *(_QWORD *)&v14 = v9;
  v10 = v2[2];
  v11 = v2[3];
  v12 = v9;
  if (v10 >= v11 >> 1)
    v2 = sub_100456BA8((_QWORD *)(v11 > 1), v10 + 1, 1, v2);
  v2[2] = v10 + 1;
  sub_100028D38(&v14, &v2[4 * v10 + 4]);
  return v2;
}

uint64_t sub_100404C78(uint64_t a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  _QWORD v21[6];

  v3 = &v1[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration];
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration];
  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                    + 8];
  v6 = v1[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                         + 16];
  v7 = v1[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                         + 17];
  v8 = v1[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                         + 18];
  result = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = result == v4 && v10 == v5;
  if (!v11
    && (result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v10, v4, *(_QWORD *)&v1[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration+ 8], 0), (result & 1) == 0)|| (*(unsigned __int8 *)(a1 + 16) == v6 ? (v12 = *(unsigned __int8 *)(a1 + 17) == v7) : (v12 = 0), !v12 || v8 != (*(_BYTE *)(a1 + 18) & 1)))
  {
    v13 = *((_QWORD *)v3 + 3);
    v14 = *((_QWORD *)v3 + 4);
    v16 = *((_QWORD *)v3 + 5);
    v15 = *((_QWORD *)v3 + 6);
    v17 = swift_allocObject(&unk_1006061C0, 24, 7);
    *(_QWORD *)(v17 + 16) = v1;
    v18 = swift_allocObject(&unk_1006061E8, 32, 7);
    *(_QWORD *)(v18 + 16) = sub_100405EFC;
    *(_QWORD *)(v18 + 24) = v17;
    v21[4] = sub_1000381EC;
    v21[5] = v18;
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 1107296256;
    v21[2] = sub_10001B258;
    v21[3] = &unk_100606200;
    v19 = _Block_copy(v21);
    swift_bridgeObjectRetain(v5);
    sub_100053DE4(v13, v14);
    sub_100053DE4(v16, v15);
    v20 = v1;
    swift_retain();
    objc_msgSend(v20, "performBatchUpdates:", v19, swift_release().n128_f64[0]);
    _Block_release(v19);
    LOBYTE(v20) = swift_isEscapingClosureAtFileLocation(v18, "", 148, 209, 29, 1);
    swift_bridgeObjectRelease(v5);
    swift_release();
    swift_release();
    sub_1000381B8(v13, v14);
    result = sub_1000381B8(v16, v15);
    if ((v20 & 1) != 0)
      __break(1u);
  }
  return result;
}

id sub_100404E60(uint64_t a1)
{
  void *v2;
  _BYTE *v3;
  uint64_t v4;
  NSString v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;

  v2 = *(void **)(a1
                + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_completedCountLabel);
  v3 = (_BYTE *)(a1
               + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration);
  v4 = *(_QWORD *)(a1
                 + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                 + 8);
  swift_bridgeObjectRetain(v4);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  objc_msgSend(v2, "setText:", v5);

  if (!v3[16])
  {
    v6 = 1;
    goto LABEL_5;
  }
  if (v3[16] == 1)
  {
    v6 = 0;
LABEL_5:
    v7 = v3[18];
    goto LABEL_7;
  }
  v7 = 0;
  v6 = 0;
LABEL_7:
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_separatorLabel), "setHidden:", v6);
  v8 = *(void **)(a1
                + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_clearButton);
  v9 = objc_msgSend(v8, "setHidden:", v6);
  if ((v6 & 1) == 0)
    v9 = objc_msgSend(v8, "setEnabled:", v7);
  if (v3[17])
  {
    v10 = *(void **)(a1
                   + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_showHideButton);
    if (v3[17] == 1)
      static TTRLocalizableStrings.showButtonTitle.getter(v9);
    else
      static TTRLocalizableStrings.hideButtonTitle.getter(v9);
    v14 = v11;
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v14);
    objc_msgSend(v10, "setTitle:forState:", v15, 0);

    v12 = v10;
    v13 = 0;
  }
  else
  {
    v12 = *(void **)(a1
                   + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_showHideButton);
    v13 = 1;
  }
  return objc_msgSend(v12, "setHidden:", v13);
}

uint64_t type metadata accessor for CompletedCellContentView()
{
  return objc_opt_self(_TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView);
}

uint64_t destroy for TTRIRemindersListCompletedCellContentConfiguration(_QWORD *a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease(a1[1]);
  if (a1[3])
    result = swift_release(a1[4]);
  if (a1[5])
    return swift_release(a1[6]);
  return result;
}

uint64_t initializeWithCopy for TTRIRemindersListCompletedCellContentConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  v6 = (_OWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain(v4);
  if (v5)
  {
    v7 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = v7;
    swift_retain(v7);
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *v6;
  }
  v8 = *(_QWORD *)(a2 + 40);
  if (v8)
  {
    v9 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = v9;
    swift_retain(v9);
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  }
  return a1;
}

uint64_t assignWithCopy for TTRIRemindersListCompletedCellContentConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a1 + 24);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  v7 = *(_QWORD *)(a2 + 24);
  if (v6)
  {
    if (v7)
    {
      v8 = *(_QWORD *)(a2 + 32);
      v9 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = v8;
      swift_retain(v8);
      swift_release(v9);
      goto LABEL_8;
    }
    swift_release(*(_QWORD *)(a1 + 32));
  }
  else if (v7)
  {
    v10 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v10;
    swift_retain(v10);
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
LABEL_8:
  v11 = *(_QWORD *)(a2 + 40);
  if (!*(_QWORD *)(a1 + 40))
  {
    if (v11)
    {
      v14 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v11;
      *(_QWORD *)(a1 + 48) = v14;
      swift_retain(v14);
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v11)
  {
    swift_release(*(_QWORD *)(a1 + 48));
    goto LABEL_14;
  }
  v12 = *(_QWORD *)(a2 + 48);
  v13 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v12;
  swift_retain(v12);
  swift_release(v13);
  return a1;
}

uint64_t assignWithTake for TTRIRemindersListCompletedCellContentConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  if (v7)
  {
    if (v6)
    {
      v8 = *(_QWORD *)(a2 + 32);
      v9 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = v8;
      swift_release(v9);
      goto LABEL_8;
    }
    swift_release(*(_QWORD *)(a1 + 32));
  }
  else if (v6)
  {
    v10 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v10;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
LABEL_8:
  v11 = *(_QWORD *)(a2 + 40);
  if (!*(_QWORD *)(a1 + 40))
  {
    if (v11)
    {
      v14 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v11;
      *(_QWORD *)(a1 + 48) = v14;
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v11)
  {
    swift_release(*(_QWORD *)(a1 + 48));
    goto LABEL_14;
  }
  v12 = *(_QWORD *)(a2 + 48);
  v13 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v12;
  swift_release(v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListCompletedCellContentConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListCompletedCellContentConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListCompletedCellContentConfiguration()
{
  return &type metadata for TTRIRemindersListCompletedCellContentConfiguration;
}

uint64_t sub_100405500(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int16 v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _BYTE v19[40];
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  sub_100010634((uint64_t)a1, (uint64_t)v19);
  v3 = sub_10002A750(&qword_10064CB18);
  if (swift_dynamicCast(&v20, v19, v3, &type metadata for TTRIRemindersListCompletedCellContentConfiguration, 6))
  {
    v4 = v20;
    v5 = v21;
    v6 = BYTE2(v21);
    v7 = *((_QWORD *)&v21 + 1);
    v9 = v22;
    v8 = v23;
    v10 = v1
        + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration;
    v11 = *(_OWORD *)(v1
                    + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                    + 16);
    v20 = *(_OWORD *)(v1
                    + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration);
    v21 = v11;
    v22 = *(_OWORD *)(v1
                    + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                    + 32);
    v12 = *(_QWORD *)(v1
                    + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                    + 40);
    v23 = *(_QWORD *)(v1
                    + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                    + 48);
    v13 = v23;
    v14 = *(_QWORD *)(v1
                    + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                    + 8);
    v18 = v12;
    v16 = *(_QWORD *)(v1
                    + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                    + 24);
    v15 = *(_QWORD *)(v1
                    + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                    + 32);
    *(_OWORD *)v10 = v4;
    *(_WORD *)(v10 + 16) = v5;
    *(_BYTE *)(v10 + 18) = v6;
    *(_QWORD *)(v10 + 24) = v7;
    *(_OWORD *)(v10 + 32) = v9;
    *(_QWORD *)(v10 + 48) = v8;
    sub_100405BC8(&v20);
    swift_bridgeObjectRetain(*((_QWORD *)&v4 + 1));
    sub_100053DE4(v7, v9);
    sub_100053DE4(*((uint64_t *)&v9 + 1), v8);
    swift_bridgeObjectRelease(v14);
    sub_1000381B8(v16, v15);
    sub_1000381B8(v18, v13);
    sub_100404C78((uint64_t)&v20);
    swift_bridgeObjectRelease(*((_QWORD *)&v4 + 1));
    sub_1000381B8(v7, v9);
    sub_1000381B8(*((uint64_t *)&v9 + 1), v8);
    sub_100405CAC(&v20);
  }
  return sub_100027F10(a1);
}

void (*sub_100405654(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = malloc(0x130uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration;
  v3[36] = v1;
  v3[37] = v4;
  v5 = (uint64_t *)(v1 + v4);
  v7 = *v5;
  v6 = v5[1];
  v8 = *((_WORD *)v5 + 8);
  v9 = *((_BYTE *)v5 + 18);
  v10 = v5[3];
  v11 = v5[4];
  v12 = v5[5];
  v13 = v5[6];
  v3[29] = &type metadata for TTRIRemindersListCompletedCellContentConfiguration;
  v3[30] = sub_1002DCEAC();
  v14 = swift_allocObject(&unk_100606198, 72, 7);
  v3[26] = v14;
  *(_QWORD *)(v14 + 16) = v7;
  *(_QWORD *)(v14 + 24) = v6;
  *(_WORD *)(v14 + 32) = v8;
  *(_BYTE *)(v14 + 34) = v9;
  *(_QWORD *)(v14 + 40) = v10;
  *(_QWORD *)(v14 + 48) = v11;
  *(_QWORD *)(v14 + 56) = v12;
  *(_QWORD *)(v14 + 64) = v13;
  swift_bridgeObjectRetain(v6);
  sub_100053DE4(v10, v11);
  sub_100053DE4(v12, v13);
  return sub_100405730;
}

void sub_100405730(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  uint64_t v23;
  uint64_t v24;
  __int16 v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v3 = *a1;
  v4 = *a1 + 112;
  v5 = (_QWORD *)(*a1 + 168);
  v6 = (_QWORD *)(*a1 + 208);
  sub_100010634((uint64_t)v6, (uint64_t)v5);
  if ((a2 & 1) != 0)
  {
    sub_100010634((uint64_t)v5, v3 + 248);
    v7 = sub_10002A750(&qword_10064CB18);
    if (swift_dynamicCast(v4, v3 + 248, v7, &type metadata for TTRIRemindersListCompletedCellContentConfiguration, 6))
    {
      v8 = (__int128 *)(*(_QWORD *)(v3 + 288) + *(_QWORD *)(v3 + 296));
      v9 = *(_QWORD *)(v3 + 112);
      v10 = *(_QWORD *)(v3 + 120);
      v11 = *(_WORD *)(v3 + 128);
      v12 = *(_BYTE *)(v3 + 130);
      v13 = *(_QWORD *)(v3 + 136);
      v14 = *(_QWORD *)(v3 + 144);
      v15 = *(_QWORD *)(v3 + 152);
      v16 = *(_QWORD *)(v3 + 160);
      v18 = v8[1];
      v17 = v8[2];
      v19 = *v8;
      *(_QWORD *)(v3 + 48) = *((_QWORD *)v8 + 6);
      *(_OWORD *)(v3 + 16) = v18;
      *(_OWORD *)(v3 + 32) = v17;
      *(_OWORD *)v3 = v19;
      v20 = *((_QWORD *)v8 + 1);
      v35 = *((_QWORD *)v8 + 4);
      v37 = *((_QWORD *)v8 + 3);
      v39 = *((_QWORD *)v8 + 6);
      v41 = *((_QWORD *)v8 + 5);
      *(_QWORD *)v8 = v9;
      *((_QWORD *)v8 + 1) = v10;
      *((_WORD *)v8 + 8) = v11;
      *((_BYTE *)v8 + 18) = v12;
      *((_QWORD *)v8 + 3) = v13;
      *((_QWORD *)v8 + 4) = v14;
      *((_QWORD *)v8 + 5) = v15;
      *((_QWORD *)v8 + 6) = v16;
      sub_100405BC8((_QWORD *)v3);
      swift_bridgeObjectRetain(v10);
      sub_100053DE4(v13, v14);
      sub_100053DE4(v15, v16);
      swift_bridgeObjectRelease(v20);
      sub_1000381B8(v37, v35);
      sub_1000381B8(v41, v39);
      sub_100404C78(v3);
      swift_bridgeObjectRelease(v10);
      sub_1000381B8(v13, v14);
      sub_1000381B8(v15, v16);
      sub_100405CAC((_QWORD *)v3);
    }
    sub_100027F10(v5);
  }
  else
  {
    v21 = sub_10002A750(&qword_10064CB18);
    if (swift_dynamicCast(v4, v5, v21, &type metadata for TTRIRemindersListCompletedCellContentConfiguration, 6))
    {
      v22 = (__int128 *)(*(_QWORD *)(v3 + 288) + *(_QWORD *)(v3 + 296));
      v23 = *(_QWORD *)(v3 + 112);
      v24 = *(_QWORD *)(v3 + 120);
      v25 = *(_WORD *)(v3 + 128);
      v26 = *(_BYTE *)(v3 + 130);
      v27 = *(_QWORD *)(v3 + 136);
      v28 = *(_QWORD *)(v3 + 144);
      v29 = *(_QWORD *)(v3 + 152);
      v30 = *(_QWORD *)(v3 + 160);
      v32 = v22[1];
      v31 = v22[2];
      v33 = *v22;
      *(_QWORD *)(v3 + 104) = *((_QWORD *)v22 + 6);
      *(_OWORD *)(v3 + 72) = v32;
      *(_OWORD *)(v3 + 88) = v31;
      *(_OWORD *)(v3 + 56) = v33;
      v34 = *((_QWORD *)v22 + 1);
      v36 = *((_QWORD *)v22 + 4);
      v38 = *((_QWORD *)v22 + 3);
      v40 = *((_QWORD *)v22 + 6);
      v42 = *((_QWORD *)v22 + 5);
      *(_QWORD *)v22 = v23;
      *((_QWORD *)v22 + 1) = v24;
      *((_WORD *)v22 + 8) = v25;
      *((_BYTE *)v22 + 18) = v26;
      *((_QWORD *)v22 + 3) = v27;
      *((_QWORD *)v22 + 4) = v28;
      *((_QWORD *)v22 + 5) = v29;
      *((_QWORD *)v22 + 6) = v30;
      sub_100405BC8((_QWORD *)(v3 + 56));
      swift_bridgeObjectRetain(v24);
      sub_100053DE4(v27, v28);
      sub_100053DE4(v29, v30);
      swift_bridgeObjectRelease(v34);
      sub_1000381B8(v38, v36);
      sub_1000381B8(v42, v40);
      sub_100404C78(v3 + 56);
      swift_bridgeObjectRelease(v24);
      sub_1000381B8(v27, v28);
      sub_1000381B8(v29, v30);
      sub_100405CAC((_QWORD *)(v3 + 56));
    }
  }
  sub_100027F10(v6);
  free((void *)v3);
}

uint64_t sub_1004059C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = v1
     + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration;
  v5 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration);
  v4 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                 + 8);
  v6 = *(_WORD *)(v3 + 16);
  v7 = *(_BYTE *)(v3 + 18);
  v8 = *(_QWORD *)(v3 + 24);
  v9 = *(_QWORD *)(v3 + 32);
  v10 = *(_QWORD *)(v3 + 40);
  v11 = *(_QWORD *)(v3 + 48);
  a1[3] = (uint64_t)&type metadata for TTRIRemindersListCompletedCellContentConfiguration;
  a1[4] = sub_1002DCEAC();
  v12 = swift_allocObject(&unk_100606198, 72, 7);
  *a1 = v12;
  *(_QWORD *)(v12 + 16) = v5;
  *(_QWORD *)(v12 + 24) = v4;
  *(_WORD *)(v12 + 32) = v6;
  *(_BYTE *)(v12 + 34) = v7;
  *(_QWORD *)(v12 + 40) = v8;
  *(_QWORD *)(v12 + 48) = v9;
  *(_QWORD *)(v12 + 56) = v10;
  *(_QWORD *)(v12 + 64) = v11;
  swift_bridgeObjectRetain(v4);
  sub_100053DE4(v8, v9);
  return sub_100053DE4(v10, v11);
}

void (*sub_100405A7C(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_100405654(v2);
  return sub_1002AA338;
}

uint64_t sub_100405AC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[7];
  _BYTE v9[40];

  sub_100010634(a1, (uint64_t)v9);
  v1 = sub_10002A750(&qword_10064CB18);
  v2 = swift_dynamicCast(v8, v9, v1, &type metadata for TTRIRemindersListCompletedCellContentConfiguration, 6);
  if ((_DWORD)v2)
  {
    v3 = v8[3];
    v4 = v8[4];
    v5 = v8[5];
    v6 = v8[6];
    swift_bridgeObjectRelease(v8[1]);
    sub_1000381B8(v3, v4);
    sub_1000381B8(v5, v6);
  }
  return v2;
}

double sub_100405B54@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  double result;

  if (a1 > 0)
    v4 = 1;
  else
    v4 = 2;
  v5 = v4 & (a2 << 15 >> 31);
  if ((a2 & 1) != 0)
    v6 = 2;
  else
    v6 = 1;
  v7 = v6 & (a2 << 23 >> 31);
  *(_QWORD *)a3 = TTRRemindersListViewModel.CompletedRemindersState.countText.getter();
  *(_QWORD *)(a3 + 8) = v8;
  *(_BYTE *)(a3 + 16) = v5;
  *(_BYTE *)(a3 + 17) = v7;
  *(_BYTE *)(a3 + 18) = 1;
  result = 0.0;
  *(_OWORD *)(a3 + 24) = 0u;
  *(_OWORD *)(a3 + 40) = 0u;
  return result;
}

_QWORD *sub_100405BC8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[3];
  v3 = a1[4];
  v4 = a1[5];
  v5 = a1[6];
  swift_bridgeObjectRetain(a1[1]);
  sub_100053DE4(v2, v3);
  sub_100053DE4(v4, v5);
  return a1;
}

uint64_t sub_100405C20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100646D60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100405C68()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void *sub_100405C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10040499C(a1, a2, v2);
}

id sub_100405C94()
{
  uint64_t v0;

  return sub_100404E60(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100405C9C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_100405CAC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[3];
  v3 = a1[4];
  v4 = a1[5];
  v5 = a1[6];
  swift_bridgeObjectRelease(a1[1]);
  sub_1000381B8(v2, v3);
  sub_1000381B8(v4, v5);
  return a1;
}

uint64_t sub_100405D04()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  if (v0[5])
    swift_release(v0[6]);
  if (v0[7])
    swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100405D48()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100405D6C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for TTRIRemindersListCompletedCellContentConfiguration.ShowHideButtonState()
{
  return &type metadata for TTRIRemindersListCompletedCellContentConfiguration.ShowHideButtonState;
}

uint64_t _s9Reminders50TTRIRemindersListCompletedCellContentConfigurationV16ClearButtonStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100405DDC + 4 * byte_100534775[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100405E10 + 4 * asc_100534770[v4]))();
}

uint64_t sub_100405E10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100405E18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100405E20);
  return result;
}

uint64_t sub_100405E2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100405E34);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100405E38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100405E40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListCompletedCellContentConfiguration.ClearButtonState()
{
  return &type metadata for TTRIRemindersListCompletedCellContentConfiguration.ClearButtonState;
}

unint64_t sub_100405E60()
{
  unint64_t result;

  result = qword_10065ACC0;
  if (!qword_10065ACC0)
  {
    result = swift_getWitnessTable(&unk_100534884, &type metadata for TTRIRemindersListCompletedCellContentConfiguration.ClearButtonState);
    atomic_store(result, (unint64_t *)&qword_10065ACC0);
  }
  return result;
}

unint64_t sub_100405EA8()
{
  unint64_t result;

  result = qword_10065ACC8;
  if (!qword_10065ACC8)
  {
    result = swift_getWitnessTable(&unk_1005348EC, &type metadata for TTRIRemindersListCompletedCellContentConfiguration.ShowHideButtonState);
    atomic_store(result, (unint64_t *)&qword_10065ACC8);
  }
  return result;
}

id sub_100405F04(uint64_t *a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void **v30;
  void **v31;
  void (*v32)(char *, char *, uint64_t);
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  void *v36;
  void (*v37)(char *, char *, _QWORD *);
  uint64_t v38;
  uint64_t v39;
  void *v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  id v88;
  void **v89;
  void *v90;
  void (*v91)(void *, _UNKNOWN **, uint64_t, uint64_t);
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, _UNKNOWN **);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, _UNKNOWN **, uint64_t, _QWORD, __n128);
  __n128 v105;
  uint64_t v106;
  id v107;
  id v108;
  id v109;
  id v110;
  void *v111;
  uint64_t Strong;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v119;
  void **v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  _BYTE *v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(char *, _QWORD *);
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  _QWORD *v132;
  uint64_t *v133;
  void **v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD v138[3];
  unint64_t ObjectType;
  __int128 v140;
  __int128 v141;
  _QWORD v142[16];
  uint64_t v143;
  __int128 v144;
  __int128 v145;
  uint64_t v146;
  __int128 v147;

  v123 = a4;
  v132 = a3;
  v133 = a1;
  v120 = (void **)a2;
  v4 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  __chkstk_darwin(v4);
  v122 = (uint64_t)&v119 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v121 = (uint64_t *)((char *)&v119 - v7);
  v126 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v126);
  v135 = (uint64_t)&v119 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v125);
  v124 = (char *)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v131 = (char *)*(v10 - 1);
  __chkstk_darwin(v10);
  v12 = (char *)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v119 - v14;
  v16 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v16);
  v134 = (void **)((char *)&v119 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v119 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v119 - v23;
  v25 = sub_10002A750(&qword_100641270);
  v26 = swift_allocObject(v25, ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(_QWORD *)(v19 + 72), *(unsigned __int8 *)(v19 + 80) | 7);
  *(_OWORD *)(v26 + 16) = xmmword_100520250;
  static REMSuggestedAttributesElector.ExcludedAttributes.lists.getter(v26);
  v142[0] = v26;
  v27 = sub_100080C90();
  v28 = sub_10002A750(&qword_100641278);
  v29 = sub_100080CD8();
  dispatch thunk of SetAlgebra.init<A>(_:)(v142, v28, v29, v18, v27);
  v30 = v120;
  v31 = v134;
  sub_10002B1E8((uint64_t)v120, (uint64_t)v134, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  v128 = v24;
  v129 = v19;
  v32 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v130 = v18;
  v32(v21, v24, v18);
  sub_100041F70(v31, (uint64_t)v21, 0, (uint64_t)v142);
  ObjectType = sub_100406984();
  *(_QWORD *)&v140 = &protocol witness table for REMTemplate;
  v138[0] = v132;
  v33 = v132;
  static REMRemindersListDataView.SortingStyle.fallbackForTemplate.getter();
  static REMRemindersListDataView.SortingStyle.sortingStyle(for:fallback:)(v138, v12);
  v34 = v131;
  v127 = (void (*)(char *, _QWORD *))*((_QWORD *)v131 + 1);
  v127(v12, v10);
  sub_1004069C0((uint64_t)v138);
  v35 = (uint64_t)v30;
  v36 = *v30;
  v37 = (void (*)(char *, char *, _QWORD *))*((_QWORD *)v34 + 2);
  v131 = v15;
  v132 = v10;
  v37(v12, v15, v10);
  v38 = type metadata accessor for TTRShowTemplateWithSectionsDataModelSource(0);
  swift_allocObject(v38, *(unsigned int *)(v38 + 48), *(unsigned __int16 *)(v38 + 52));
  v39 = TTRShowTemplateWithSectionsDataModelSource.init(store:template:listRepresentation:countCompleted:sortingStyle:canChangeSortingStyle:)(v36, v33, 0, 1, v12, 1);
  v40 = (void *)v142[0];
  v41 = v124;
  v42 = v125;
  *v124 = 1;
  v43 = (uint64_t)v41;
  swift_storeEnumTagMultiPayload(v41, v42, 1);
  v44 = type metadata accessor for TTRShowTemplateViewModelSource(0);
  v45 = swift_allocObject(v44, *(unsigned int *)(v44 + 48), *(unsigned __int16 *)(v44 + 52));
  swift_retain();
  v46 = sub_100406A00(v39, (uint64_t)v40, v43, v45);
  v47 = (uint64_t)v134;
  sub_10002B1E8(v35, (uint64_t)v134, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  sub_100043000((uint64_t)v142, (uint64_t)v138);
  swift_retain();
  sub_100042A94(v47, (uint64_t)v138, v46, (uint64_t)&off_100609110, v135);
  v48 = v121;
  sub_100042C0C((uint64_t)v121);
  v49 = type metadata accessor for TTRIShowTemplatePresenter(0);
  v50 = *(unsigned int *)(v49 + 48);
  v51 = *(unsigned __int16 *)(v49 + 52);
  v124 = (_BYTE *)v49;
  v52 = swift_allocObject(v49, v50, v51);
  *(_BYTE *)(v52 + OBJC_IVAR____TtC9Reminders25TTRIShowTemplatePresenter_isConfirmingUpdate) = 0;
  v53 = (uint64_t *)(v52 + OBJC_IVAR____TtC9Reminders25TTRIShowTemplatePresenter_dataModelSource);
  *v53 = v39;
  v53[1] = (uint64_t)&protocol witness table for TTRShowTemplateWithSectionsDataModelSource;
  v55 = *v48;
  v54 = v48[1];
  ObjectType = swift_getObjectType(*v48, v56);
  *(_QWORD *)&v140 = *(_QWORD *)(v54 + 16);
  v138[0] = v55;
  v57 = type metadata accessor for TTRRemoveTemplatePresenterCapability(0);
  swift_allocObject(v57, 56, 7);
  *(_QWORD *)(v52 + OBJC_IVAR____TtC9Reminders25TTRIShowTemplatePresenter_removeTemplateCapability) = TTRRemoveTemplatePresenterCapability.init(interactor:)(v138);
  v58 = v122;
  sub_10002B1E8((uint64_t)v48, v122, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  swift_retain();
  v59 = v123;
  swift_unknownObjectRetain(v123);
  swift_unknownObjectRetain(v55);
  v60 = sub_1002A7834(v58, v59, v52);
  sub_10001F544((uint64_t)v48, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  v61 = *(_QWORD *)(v60 + 144);
  v63 = swift_getObjectType(*(_QWORD *)(v60 + 136), v62);
  v64 = *(uint64_t (**)(uint64_t, uint64_t))(v61 + 104);
  swift_retain();
  v65 = v64(v63, v61);
  v125 = v46;
  if (v65)
  {
    v67 = v65;
    v68 = v66;
    v69 = swift_getObjectType(v65, v66);
    LOBYTE(v68) = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 16))(v69, v68);
    swift_release();
    swift_unknownObjectRelease(v67);
    v70 = v68 & 1;
  }
  else
  {
    swift_release();
    v70 = 0;
  }
  v71 = sub_100172EB4(v70, v60);
  v73 = v72;
  v75 = v74;
  v77 = v76;
  v122 = swift_getObjectType(v74, v72);
  v123 = v75;
  *(_QWORD *)(v60 + 24) = *(_QWORD *)(v77 + 8);
  v121 = (_QWORD *)(v60 + 16);
  swift_unknownObjectWeakAssign(v60 + 16, v75);
  v78 = *(_QWORD *)(v60 + 144);
  v80 = swift_getObjectType(*(_QWORD *)(v60 + 136), v79);
  v81 = *(uint64_t (**)(uint64_t, uint64_t))(v78 + 104);
  swift_retain_n(v60, 2);
  v134 = v71;
  v82 = v81(v80, v78);
  v84 = v82;
  if (v82)
  {
    v85 = v83;
    v86 = swift_getObjectType(v82, v83);
    v87 = (*(uint64_t (**)(uint64_t, uint64_t))(v85 + 16))(v86, v85);
    swift_release();
    swift_unknownObjectRelease(v84);
    v84 = v87 & 1;
  }
  else
  {
    swift_release();
  }
  v88 = objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController(0));
  v89 = v134;
  v90 = (void *)sub_1002A8974(v60, v134, v73, v84, 0, 0, 0, v88);
  swift_release();

  v91 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v77 + 32);
  v92 = v90;
  v93 = v123;
  v91(v90, &off_1005FCD60, v122, v77);
  v94 = v142[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess(v142[0] + direct field offset for TTRRemindersListInteractor.delegate, &v137, 1, 0);
  *(_QWORD *)(v94 + 8) = &off_1005F3190;
  swift_unknownObjectWeakAssign(v94, v60);
  v95 = v142[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate;
  swift_beginAccess(v142[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate, &v136, 1, 0);
  *(_QWORD *)(v95 + 8) = &protocol witness table for TTRShowTemplateWithSectionsDataModelSource;
  swift_unknownObjectWeakAssign(v95, v39);
  swift_unknownObjectWeakAssign(v142[3] + 16, v92);
  v96 = *(void (**)(uint64_t, _UNKNOWN **))(*(_QWORD *)v39 + 384);
  v97 = swift_retain();
  v96(v97, &off_100607B80);
  swift_retain();
  v98 = swift_retain();
  sub_10048D4EC(v98, (uint64_t)&off_1005F30C0);
  swift_release();
  swift_release();
  v99 = *(_QWORD *)(v135 + *(int *)(v126 + 28));
  *(_QWORD *)(v99 + 24) = &off_1005F3260;
  swift_unknownObjectWeakAssign(v99 + 16, v60);
  sub_100028CFC((uint64_t)&v143, (uint64_t)v138);
  v140 = v144;
  v141 = v145;
  v100 = v144 + 32;
  *(_QWORD *)(v144 + 40) = &off_1005F3040;
  swift_unknownObjectWeakAssign(v100, v60);
  sub_100027F10(v138);
  sub_100028CFC((uint64_t)&v146, (uint64_t)v138);
  v101 = v147;
  v140 = v147;
  v103 = swift_getObjectType(v147, v102);
  v104 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, _QWORD, __n128))(*((_QWORD *)&v101 + 1) + 48);
  swift_retain();
  v105 = swift_unknownObjectRetain(v101);
  v104(v60, &off_1005F2FF0, v103, *((_QWORD *)&v101 + 1), v105);
  swift_unknownObjectRelease(v101);
  v106 = sub_100027F10(v138);
  (*(void (**)(uint64_t))(*(_QWORD *)v39 + 456))(v106);
  v107 = objc_allocWithZone((Class)UINavigationController);
  swift_retain_n(v60, 2);
  v108 = objc_msgSend(v107, "initWithRootViewController:", v92);
  v109 = objc_msgSend(v108, "navigationBar");
  objc_msgSend(v109, "setPrefersLargeTitles:", 1);

  v110 = objc_msgSend(v108, "presentationController");
  if (v110)
  {
    v111 = v110;
    Strong = swift_unknownObjectWeakLoadStrong(v121);
    if (Strong)
    {
      v114 = Strong;
      v115 = *(_QWORD *)(v60 + 24);
      v116 = swift_getObjectType(Strong, v113);
      (*(void (**)(void *, uint64_t, uint64_t))(v115 + 96))(v111, v116, v115);
      swift_unknownObjectRelease(v114);
    }
    *(_BYTE *)(v60 + 504) = 1;
    swift_release_n(v60, 2);

  }
  else
  {
    swift_release_n(v60, 2);
  }
  v117 = v133;
  v133[3] = (uint64_t)v124;
  v117[4] = (uint64_t)&off_1005F2AF0;
  *v117 = v60;
  swift_release();
  swift_release();

  swift_unknownObjectRelease(v93);
  sub_10001F544(v135, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  v127(v131, v132);
  sub_100043844((uint64_t)v142);
  (*(void (**)(char *, uint64_t))(v129 + 8))(v128, v130);
  return v108;
}

id TTRIShowTemplateAssembly.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowTemplateAssembly();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for TTRIShowTemplateAssembly()
{
  return objc_opt_self(_TtC9Reminders24TTRIShowTemplateAssembly);
}

id TTRIShowTemplateAssembly.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowTemplateAssembly();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_100406984()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006454A8;
  if (!qword_1006454A8)
  {
    v1 = objc_opt_self(REMTemplate);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1006454A8);
  }
  return result;
}

uint64_t sub_1004069C0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750(&qword_100649C80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100406A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v8 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(a4 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_template) = 0;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation) = 0;
  v11 = a4 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_remindersCount;
  *(_QWORD *)v11 = 0;
  *(_QWORD *)(v11 + 8) = 0;
  *(_BYTE *)(v11 + 16) = 1;
  *(_BYTE *)(a4 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_showLargeAttachmentsValue) = 1;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_sectionsContextInstance) = 0;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource____lazy_storage___dragAndDropCapability) = 0;
  sub_10002B1E8(a3, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  v12 = sub_1002A8704(a1, a2, (uint64_t)v10, a4);
  sub_10001F544(a3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  return v12;
}

char *sub_100406B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  double v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  Class isa;
  id v19;
  id v20;
  double v21;
  NSString v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  Class v50;
  char *v51;
  char *v52;
  uint64_t *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v60;
  objc_class *ObjectType;
  id v64;
  id v65;
  uint64_t v66[3];
  objc_super v67;

  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  v5 = objc_allocWithZone((Class)UILabel);
  v6 = v3;
  v7 = objc_msgSend(v5, "init");
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v8 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(UIFontTextStyleBody, *(_QWORD *)&UIFontWeightSemibold, 0, 0);
  objc_msgSend(v7, "setFont:", v8);

  objc_msgSend(v7, "setUserInteractionEnabled:", 0);
  objc_msgSend(v7, "setAdjustsFontForContentSizeCategory:", 1);
  v9 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v7, "setTextColor:", v9);

  LODWORD(v10) = 1132068864;
  objc_msgSend(v7, "setContentCompressionResistancePriority:forAxis:", 0, v10);
  objc_msgSend(v7, "setAdjustsFontSizeToFitWidth:", 1);
  objc_msgSend(v7, "setBaselineAdjustment:", 1);
  objc_msgSend(v7, "setMinimumScaleFactor:", 0.5);
  v11 = type metadata accessor for TTRIStackedAvatarsView();
  v12 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v11)), "init");
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v13 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v14 = swift_allocObject(v13, 48, 7);
  *(_OWORD *)(v14 + 16) = xmmword_10051FF90;
  *(_QWORD *)(v14 + 32) = v12;
  *(_QWORD *)(v14 + 40) = v7;
  v66[0] = v14;
  specialized Array._endMutation()(v14);
  v15 = objc_allocWithZone((Class)UIStackView);
  sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  v16 = v12;
  v17 = v7;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v19 = objc_msgSend(v15, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v66[0]).n128_f64[0]);

  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v19, "setAxis:", 0);
  objc_msgSend(v19, "setDistribution:", 0);
  objc_msgSend(v19, "setAlignment:", 3);
  objc_msgSend(v19, "setSpacing:", 12.0);
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders47TTRIRemindersListSharingStatusCellTableViewCell_statusLabel] = v17;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders47TTRIRemindersListSharingStatusCellTableViewCell_stackedAvatarsView] = v16;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders47TTRIRemindersListSharingStatusCellTableViewCell_stackView] = v19;
  v65 = v16;
  v64 = v17;
  v20 = v19;

  if (a3)
  {
    v22 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v21 = swift_bridgeObjectRelease(a3).n128_u64[0];
  }
  else
  {
    v22 = 0;
  }
  v67.receiver = v6;
  v67.super_class = ObjectType;
  v23 = objc_msgSendSuper2(&v67, "initWithStyle:reuseIdentifier:", a1, v22, v21, a2);

  v24 = v23;
  v25 = objc_msgSend(v24, "contentView");
  objc_msgSend(v25, "addSubview:", v20);

  v26 = (void *)objc_opt_self(NSLayoutConstraint);
  v27 = swift_allocObject(v13, 64, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100520050;
  v28 = objc_msgSend(v24, "contentView");
  v29 = objc_msgSend(v28, "layoutMarginsGuide");

  v30 = objc_msgSend(v29, "leadingAnchor");
  v31 = objc_msgSend(v20, "leadingAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

  *(_QWORD *)(v27 + 32) = v32;
  v33 = objc_msgSend(v24, "contentView");
  v34 = objc_msgSend(v33, "layoutMarginsGuide");

  v35 = objc_msgSend(v34, "trailingAnchor");
  v36 = objc_msgSend(v20, "trailingAnchor");
  v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

  *(_QWORD *)(v27 + 40) = v37;
  v38 = objc_msgSend(v24, "contentView");
  v39 = objc_msgSend(v38, "layoutMarginsGuide");

  v40 = objc_msgSend(v39, "topAnchor");
  v41 = objc_msgSend(v20, "topAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

  *(_QWORD *)(v27 + 48) = v42;
  v43 = objc_msgSend(v24, "contentView");
  v44 = objc_msgSend(v43, "layoutMarginsGuide");

  v45 = objc_msgSend(v44, "bottomAnchor");
  v46 = objc_msgSend(v20, "bottomAnchor");
  v47 = objc_msgSend(v45, "constraintEqualToAnchor:", v46);

  *(_QWORD *)(v27 + 56) = v47;
  v66[0] = v27;
  specialized Array._endMutation()(v48);
  v49 = v27;
  sub_100005ED8(0, (unint64_t *)&qword_10064BB60, NSLayoutConstraint_ptr);
  v50 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v26, "activateConstraints:", v50, swift_bridgeObjectRelease(v49).n128_f64[0]);

  objc_msgSend(v24, "setSeparatorInset:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  v51 = (char *)v24;
  UITableViewCell.ttr_registerForRemindersListCellBackgroundConfiguration()();

  v52 = *(char **)&v51[OBJC_IVAR____TtC9Reminders47TTRIRemindersListSharingStatusCellTableViewCell_stackedAvatarsView];
  v53 = (uint64_t *)&v52[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_contacts];
  v54 = swift_beginAccess(&v52[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_contacts], v66, 0, 0).n128_u64[0];
  v55 = *v53;
  if ((unint64_t)v55 >> 62)
  {
    if (v55 < 0)
      v60 = v55;
    else
      v60 = v55 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v55);
    v56 = _CocoaArrayWrapper.endIndex.getter(v60);
    v54 = swift_bridgeObjectRelease(v55).n128_u64[0];
  }
  else
  {
    v56 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v57 = objc_msgSend(v52, "setHidden:", v56 == 0, *(double *)&v54);
  sub_10040724C((uint64_t)v57, v58);

  return v51;
}

double sub_10040724C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  ObjectType = swift_getObjectType(v2, a2);
  sub_100407390();
  v4 = sub_10002A750(&qword_1006415F0);
  v5 = swift_allocObject(v4, 48, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100520250;
  *(_QWORD *)(v5 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v5 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v6 = UIView.registerForTraitChanges<A>(_:handler:)(v5, sub_1004074C0, 0, ObjectType);
  swift_unknownObjectRelease(v6);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

id sub_100407390()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  LOBYTE(v1) = UIContentSizeCategory.isAccessibilityCategory.getter(v2);
  v3 = *(void **)&v0[OBJC_IVAR____TtC9Reminders47TTRIRemindersListSharingStatusCellTableViewCell_stackView];
  v4 = v1 & 1;
  v5 = (v1 & 1) == 0;
  if ((v1 & 1) != 0)
    v6 = 1;
  else
    v6 = 3;
  if (v5)
    v7 = 1;
  else
    v7 = 2;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC9Reminders47TTRIRemindersListSharingStatusCellTableViewCell_stackView], "setAxis:", v4);
  objc_msgSend(v3, "setAlignment:", v6);
  return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC9Reminders47TTRIRemindersListSharingStatusCellTableViewCell_statusLabel], "setNumberOfLines:", v7);
}

uint64_t type metadata accessor for TTRIRemindersListSharingStatusCellTableViewCell()
{
  return objc_opt_self(_TtC9Reminders47TTRIRemindersListSharingStatusCellTableViewCell);
}

void sub_1004074C0(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;

  v3 = objc_msgSend(a1, "traitCollection");
  v4 = objc_msgSend(v3, "preferredContentSizeCategory");

  LODWORD(v3) = UIContentSizeCategory.isAccessibilityCategory.getter(v4) & 1;
  v5 = objc_msgSend(a2, "preferredContentSizeCategory");
  LODWORD(v4) = UIContentSizeCategory.isAccessibilityCategory.getter(v5) & 1;

  if ((_DWORD)v3 != (_DWORD)v4)
    sub_100407390();
}

uint64_t sub_100407564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10065AD38);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10065AD38);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1004075F4()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0
                                + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_sectionsContextInstance));
}

uint64_t sub_100407630()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_showLargeAttachmentsValue);
}

void sub_100407640(char a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  double v4;
  id v5;
  id v6;

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_showLargeAttachmentsValue) != (a1 & 1))
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_showLargeAttachmentsValue) = a1 & 1;
    v2 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
    if (v2)
    {
      v5 = v2;
      v3 = objc_msgSend(v5, "appearanceContext");

      if (v3)
      {
        type metadata accessor for TTRListEditor(0);
        v6 = v5;
        v4 = __chkstk_darwin(v5);
        static TTROneshotEditing.oneshotEdit(_:undoManager:editBlock:)(&v6, 0, sub_10040D1C0, v4);

      }
      else
      {

      }
    }
  }
}

_UNKNOWN **sub_100407738()
{
  return &off_1005EA8F0;
}

uint64_t sub_100407744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  _BYTE v15[24];

  v1 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v1);
  v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
  swift_beginAccess(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo, v15, 0, 0);
  sub_10000735C(v8, (uint64_t)v3, &qword_100649CA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1000073A0((uint64_t)v3, &qword_100649CA0);
    return 128;
  }
  else
  {
    sub_10001F580((uint64_t)v3, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    v10 = *(unsigned __int8 *)(v0
                             + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_hasIncompleteOrCompletedReminders);
    if (v10 == 2)
    {
      sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      result = 64;
      if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_remindersCount + 16) & 1) == 0)
      {
        if (*(uint64_t *)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_remindersCount) <= 0)
          return 64;
        else
          return 65;
      }
    }
    else
    {
      v11 = v7[*(int *)(v4 + 112)];
      sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      if ((v10 & 1) != 0)
      {
        v12 = 65;
        v13 = 67;
      }
      else
      {
        v12 = 64;
        v13 = 66;
      }
      if (v11)
        return v13;
      else
        return v12;
    }
  }
  return result;
}

uint64_t sub_1004078EC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  if (v3)
  {
    *a1 = objc_msgSend(v3, "objectID");
    v4 = type metadata accessor for TTRAutoCompleteReminderListScope(0);
    swift_storeEnumTagMultiPayload(a1, v4, 0);
    v5 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
    v6 = a1;
    v7 = 0;
    v8 = v4;
  }
  else
  {
    v8 = type metadata accessor for TTRAutoCompleteReminderListScope(0);
    v5 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
    v6 = a1;
    v7 = 1;
  }
  return v5(v6, v7, 1, v8);
}

uint64_t sub_100407984(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  v4 = (uint64_t)v3;
  if (!v3)
    v4 = sub_10046D9C4(a1, a2);
  v5 = v3;
  return v4;
}

void *sub_1004079C8()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  v2 = v1;
  return v1;
}

uint64_t sub_1004079FC(uint64_t a1)
{
  uint64_t v1;
  char v3;
  char v4;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_sectionsContextInstance))
  {
    swift_retain();
    sub_10021F89C(a1);
    v4 = v3;
    swift_release();
  }
  else
  {
    v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_100407AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v9;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a3, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  swift_storeEnumTagMultiPayload(v6, v4, 1);
  sub_10037EDF4((uint64_t)v6);
  LOBYTE(a3) = v7;
  sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  return a3 & 1;
}

void *sub_100407B58()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  v2 = v1;
  return v1;
}

id sub_100407B90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  if (v3)
  {
    v4 = swift_allocObject(&unk_1006065A8, 24, 7);
    *(_QWORD *)(v4 + 16) = v3;
    v5 = sub_10040D1AC;
    v6 = 1;
    v7 = 2;
  }
  else
  {
    v7 = 0;
    v6 = 0;
    v4 = 0;
    v5 = sub_10047904C;
  }
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  return v3;
}

uint64_t sub_100407C0C@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  *a2 = objc_msgSend(a1, "objectID");
  v3 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  swift_storeEnumTagMultiPayload(a2, v3, 8);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 0, 1, v3);
}

void sub_100407C74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t inited;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t (*v31)(_QWORD);
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  _BYTE v36[40];

  v5 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v5);
  v7 = (void **)((char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  if (v14)
  {
    v15 = v14;
    swift_retain();
    swift_retain();
    TTRMutableTreeStorage.parent(of:)(a1);
    swift_release();
    swift_release();
    v16 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v10, 1, v16) == 1)
    {

      sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100640EB0);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload(v10, v16) == 1)
      {
        sub_10001F580((uint64_t)v10, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        sub_10002B1E8((uint64_t)v13, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        if (swift_getEnumCaseMultiPayload(v7, v5) == 1)
        {
          v17 = *v7;
          v18 = sub_10002A750((uint64_t *)&unk_1006415A0);
          inited = swift_initStackObject(v18, v36);
          *(_OWORD *)(inited + 16) = xmmword_100521140;
          v20 = *(void **)(a2 + 16);
          v21 = objc_msgSend(v20, "objectID");
          *(_QWORD *)(inited + 32) = v21;
          v35 = inited;
          specialized Array._endMutation()(v21);
          v22 = v35;
          v23 = sub_100017684(v35);
          swift_bridgeObjectRelease(v22);
          v24 = type metadata accessor for TTRListEditor(0);
          v34 = v15;
          v25 = v15;
          v26 = objc_msgSend(v20, "saveRequest");
          v35 = a2;
          v27 = type metadata accessor for TTRReminderEditor(0);
          v28 = sub_1000AE644();
          v29 = TTRUndoableEditing.undoManager.getter(v27, v28);
          TTROneshotEditing.init(item:saveRequest:undoManager:)(&v35, &v34, v26, v29, v24, &protocol witness table for TTRListEditor);
          v30 = v17;
          TTRListEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:)(v23, v17, 0);

          swift_bridgeObjectRelease(v23);
          swift_release();

          v31 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader;
          v32 = (uint64_t)v13;
        }
        else
        {
          sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);

          v31 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID;
          v32 = (uint64_t)v7;
        }
      }
      else
      {

        v31 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item;
        v32 = (uint64_t)v10;
      }
      sub_10001F544(v32, v31);
    }
  }
}

uint64_t sub_100407FB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  __n128 v15;
  char *v16;
  _BYTE v18[32];

  v2 = v1;
  v4 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v4);
  v5 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v5);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v18[-v13];
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.parent(of:)(a1);
  swift_release();
  v15 = swift_release();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v9 + 48))(v7, 1, v8, v15) == 1)
  {
    sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100640EB0);
  }
  else
  {
    sub_10001F580((uint64_t)v7, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list))
    {
      sub_10002B1E8((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v16 = (char *)&loc_100408170 + 4 * byte_1005349F0[swift_getEnumCaseMultiPayload(v11, v8)];
      __asm { BR              X10 }
    }
    sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return 0;
}

void sub_1004081EC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  v3 = v0;
  sub_10001F544(v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10001F544(v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  JUMPOUT(0x1004081C4);
}

void sub_100408220()
{
  void **v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t *v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;

  sub_10001F580(v3, (uint64_t)v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  v6 = *v0;
  v7 = (uint64_t *)(v4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID);
  swift_beginAccess(v4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID, v5 - 104, 0, 0);
  v8 = *v7;
  v9 = v1;
  v10 = v6;
  swift_bridgeObjectRetain(v8);
  v11 = sub_1004781F8(v10, v8);

  swift_bridgeObjectRelease(v8);
  sub_10001F544(v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10001F544((uint64_t)v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  if (!v11)
  {

    JUMPOUT(0x1004081BCLL);
  }
  JUMPOUT(0x1004081C4);
}

double sub_1004082F8(uint64_t a1)
{
  return sub_100408864(a1, (void (*)(uint64_t))sub_1003E8E6C);
}

uint64_t sub_100408304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource____lazy_storage___dragAndDropCapability;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource____lazy_storage___dragAndDropCapability))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource____lazy_storage___dragAndDropCapability);
  }
  else
  {
    v3 = type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability();
    v2 = swift_allocObject(v3, 32, 7);
    *(_QWORD *)(v2 + 24) = 0;
    swift_unknownObjectWeakInit(v2 + 16, 0);
    *(_QWORD *)(v2 + 24) = &off_100606408;
    swift_unknownObjectWeakAssign(v4, v0);
    *(_QWORD *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_100408398(void *a1)
{
  sub_100408304();
  LOBYTE(a1) = sub_1003E92E4(a1);
  swift_release();
  return a1 & 1;
}

uint64_t sub_1004083D4(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(__int128 *__return_ptr, uint64_t, uint64_t);
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _BYTE v41[40];
  _QWORD v42[5];
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;

  v3 = v2;
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), a2);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5);
  if (v7)
  {
    v9 = v7;
    v10 = v8;
    v11 = swift_getObjectType(v7, v8);
    LOBYTE(v10) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 56))(a1, v11, v10);
    swift_unknownObjectRelease(v9);
    if ((v10 & 1) == 0)
    {
LABEL_19:
      v22 = 0;
      return v22 & 1;
    }
  }
  v12 = OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list;
  v13 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  if (!v13)
  {
LABEL_7:
    if (qword_10063D788 != -1)
      swift_once(&qword_10063D788, sub_100407564);
    v23 = type metadata accessor for Logger(0);
    sub_100012DC4(v23, (uint64_t)qword_10065AD38);
    sub_100010634((uint64_t)a1, (uint64_t)v48);
    v24 = swift_retain_n(v3, 2);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.error.getter(v25);
    if (os_log_type_enabled(v25, v26))
    {
      v27 = 7104878;
      v28 = swift_slowAlloc(22, -1);
      v29 = swift_slowAlloc(64, -1);
      v47 = v29;
      *(_DWORD *)v28 = 136315394;
      v30 = *(void **)(v3 + v12);
      if (v30)
      {
        v31 = objc_msgSend(v30, "description");
        v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
        v34 = v33;

      }
      else
      {
        v34 = 0xE300000000000000;
        v32 = 7104878;
      }
      *(_QWORD *)&v45 = sub_100027E40(v32, v34, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, (char *)&v45 + 8, v28 + 4, v28 + 12);
      swift_release_n(v3, 2);
      swift_bridgeObjectRelease(v34);
      *(_WORD *)(v28 + 12) = 2080;
      v35 = v49;
      v36 = v50;
      sub_10001413C(v48, v49);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v36 + 176))(&v45, v35, v36);
      sub_10000735C((uint64_t)&v45, (uint64_t)&v43, &qword_100649C80);
      if (v44)
      {
        sub_10002E37C(&v43, (uint64_t)v42);
        sub_100010634((uint64_t)v42, (uint64_t)v41);
        v37 = sub_10002A750((uint64_t *)&unk_10065B450);
        v27 = String.init<A>(describing:)(v41, v37);
        v39 = v38;
        sub_100027F10(v42);
        sub_1000073A0((uint64_t)&v45, &qword_100649C80);
      }
      else
      {
        sub_1000073A0((uint64_t)&v45, &qword_100649C80);
        v39 = 0xE300000000000000;
      }
      *(_QWORD *)&v45 = sub_100027E40(v27, v39, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, (char *)&v45 + 8, v28 + 14, v28 + 22);
      swift_bridgeObjectRelease(v39);
      sub_100027F10(v48);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "matchesListPredicate returns false because one of the lists is nil {viewModelSourceList: %s, reminderList: %s}", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy(v29, 2, &type metadata for Any[8]);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v28, -1, -1);
    }
    else
    {
      swift_release_n(v3, 2);
      sub_100027F10(v48);
    }

    goto LABEL_19;
  }
  v14 = a1[3];
  v15 = a1[4];
  sub_10001413C(a1, v14);
  v16 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v15 + 176);
  v17 = v13;
  v16(&v45, v14, v15);
  if (!v46)
  {

    sub_1000073A0((uint64_t)&v45, &qword_100649C80);
    goto LABEL_7;
  }
  sub_10002E37C(&v45, (uint64_t)v48);
  sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
  v18 = objc_msgSend(v17, "objectID");
  v19 = v49;
  v20 = v50;
  sub_10001413C(v48, v49);
  v21 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
  v22 = static NSObject.== infix(_:_:)(v18, v21);

  sub_100027F10(v48);
  return v22 & 1;
}

double sub_100408810@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  double result;

  sub_100408304();
  sub_1003E94EC(a1, a2, a3);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_100408858(uint64_t a1)
{
  return sub_100408864(a1, (void (*)(uint64_t))sub_1003E9680);
}

double sub_100408864(uint64_t a1, void (*a2)(uint64_t))
{
  double result;

  sub_100408304();
  a2(a1);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1004088A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t Strong;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;

  v2 = v1;
  v4 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  v97 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (id *)((char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v9 = (id *)((char *)&v88 - v8);
  v102 = sub_10002A750(&qword_10064A838);
  v10 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v94 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v100 = (uint64_t)&v88 - v13;
  v14 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100408304();
  Strong = swift_unknownObjectWeakLoadStrong(v18 + 16);
  if (Strong)
  {
    v21 = Strong;
    v90 = v10;
    v22 = *(_QWORD *)(v18 + 24);
    ObjectType = swift_getObjectType(Strong, v20);
    v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 8))(v18, ObjectType, v22);
    swift_unknownObjectRelease(v21);
    swift_retain();
    v25 = sub_100395390(a1, 1, v24, v18);
    v91 = v26;
    v28 = v27;
    swift_release();
    swift_release_n(v18, 2);
    if (v25)
    {
      v88 = v28;
      v89 = v25;
      v29 = _swiftEmptyArrayStorage;
      v104 = (unint64_t)_swiftEmptyArrayStorage;
      v30 = *(_QWORD *)(a1 + 16);
      if (v30)
      {
        v31 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
        v103 = *(_QWORD *)(v15 + 72);
        v101 = a1;
        swift_bridgeObjectRetain(a1);
        do
        {
          v33 = sub_10002B1E8(v31, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v34 = TTRRemindersListViewModel.Item.reminderObjectID.getter(v33);
          v35 = sub_10001F544((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          if (v34)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
            v37 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v36 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v37 >= v36 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v37 + 1, 1);
            v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v34);
            specialized Array._endMutation()(v32);
          }
          v31 += v103;
          --v30;
        }
        while (v30);
        swift_bridgeObjectRelease(v101);
        v29 = (_QWORD *)v104;
      }
      v44 = sub_100017684((uint64_t)v29);
      swift_bridgeObjectRelease(v29);
      v45 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
      v47 = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v46);
      v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 8))(v47, v45);
      if (v48
        && (v50 = v48,
            v51 = v49,
            v52 = swift_getObjectType(v48, v49),
            LOBYTE(v51) = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 8))(v52, v51),
            swift_unknownObjectRelease(v50),
            (v51 & 1) != 0))
      {
        v103 = (unint64_t)_swiftEmptyArrayStorage;
        v53 = v91;
      }
      else
      {
        v53 = v91;
        v96 = *(_QWORD *)(v91 + 16);
        if (v96)
        {
          v95 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
          v93 = v91 + v95;
          v54 = *(_QWORD *)(v90 + 72);
          swift_bridgeObjectRetain(v91);
          v55 = 0;
          v103 = (unint64_t)_swiftEmptyArrayStorage;
          v92 = v54;
          do
          {
            v56 = v93 + v54 * v55;
            v57 = *(int *)(v102 + 48);
            v98 = v56;
            v99 = v55;
            v58 = *(_QWORD *)(v56 + v57);
            v104 = v58;
            v59 = *(_QWORD *)(v58 + 16);
            if (v59)
            {
              v60 = v97;
              v61 = v58;
              v62 = v58 + ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80));
              v101 = v61;
              swift_bridgeObjectRetain_n(v61, 2);
              v63 = *(_QWORD *)(v60 + 72);
              do
              {
                sub_10002B1E8(v62, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
                sub_1004090AC(v9, v44, v2, &v104, (const char **)&selRef_fetchObjectIDsOfCompletedSubtasksWithError_);
                sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
                v62 += v63;
                --v59;
              }
              while (v59);
              swift_bridgeObjectRelease(v101);
              v58 = v104;
              v57 = *(int *)(v102 + 48);
            }
            else
            {
              swift_bridgeObjectRetain(v58);
            }
            v64 = v100;
            sub_10002B1E8(v98, v100, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
            *(_QWORD *)(v64 + v57) = v58;
            swift_bridgeObjectRetain(v58);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v103);
            v101 = v58;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              v103 = sub_100456164(0, *(_QWORD *)(v103 + 16) + 1, 1, v103);
            v54 = v92;
            v67 = *(_QWORD *)(v103 + 16);
            v66 = *(_QWORD *)(v103 + 24);
            if (v67 >= v66 >> 1)
              v103 = sub_100456164(v66 > 1, v67 + 1, 1, v103);
            v68 = v100;
            v69 = v99 + 1;
            v70 = v103;
            *(_QWORD *)(v103 + 16) = v67 + 1;
            v71 = v70 + v95 + v67 * v54;
            v55 = v69;
            sub_10000F614(v68, v71, &qword_10064A838);
            swift_bridgeObjectRelease(v101);
          }
          while (v55 != v96);
          v53 = v91;
          swift_bridgeObjectRelease(v91);
        }
        else
        {
          v103 = (unint64_t)_swiftEmptyArrayStorage;
        }
      }
      v72 = (uint64_t)v94;
      v99 = *(_QWORD *)(v53 + 16);
      if (v99)
      {
        v98 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
        v96 = v53 + v98;
        v73 = *(_QWORD *)(v90 + 72);
        swift_bridgeObjectRetain(v53);
        v74 = 0;
        v95 = v73;
        do
        {
          v101 = v74;
          v75 = v96 + v73 * v74;
          v76 = *(int *)(v102 + 48);
          v100 = v75;
          v77 = *(_QWORD *)(v75 + v76);
          v104 = v77;
          v78 = *(_QWORD *)(v77 + 16);
          if (v78)
          {
            v79 = v97;
            v80 = v77 + ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80));
            swift_bridgeObjectRetain_n(v77, 2);
            v81 = *(_QWORD *)(v79 + 72);
            do
            {
              sub_10002B1E8(v80, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
              sub_1004090AC(v6, v44, v2, &v104, (const char **)&selRef_fetchObjectIDsOfUnsupportedSubtasksWithError_);
              sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
              v80 += v81;
              --v78;
            }
            while (v78);
            swift_bridgeObjectRelease(v77);
            v77 = v104;
            v76 = *(int *)(v102 + 48);
            v72 = (uint64_t)v94;
          }
          else
          {
            swift_bridgeObjectRetain(v77);
          }
          sub_10002B1E8(v100, v72, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
          *(_QWORD *)(v72 + v76) = v77;
          swift_bridgeObjectRetain(v77);
          if ((swift_isUniquelyReferenced_nonNull_native(v103) & 1) == 0)
            v103 = sub_100456164(0, *(_QWORD *)(v103 + 16) + 1, 1, v103);
          v83 = *(_QWORD *)(v103 + 16);
          v82 = *(_QWORD *)(v103 + 24);
          if (v83 >= v82 >> 1)
            v103 = sub_100456164(v82 > 1, v83 + 1, 1, v103);
          v84 = v101 + 1;
          v85 = v103;
          *(_QWORD *)(v103 + 16) = v83 + 1;
          v73 = v95;
          v86 = v85 + v98 + v83 * v95;
          v74 = v84;
          sub_10000F614(v72, v86, &qword_10064A838);
          swift_bridgeObjectRelease(v77);
        }
        while (v74 != v99);
        swift_bridgeObjectRelease(v44);
        v44 = v91;
        v87 = v91;
      }
      else
      {
        v87 = v53;
      }
      swift_bridgeObjectRelease(v87);
      swift_bridgeObjectRelease(v44);
      return v89;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    if (qword_10063D748 != -1)
      swift_once(&qword_10063D748, sub_1003E9A78);
    v38 = type metadata accessor for Logger(0);
    v39 = sub_100012DC4(v38, (uint64_t)qword_100659C50);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.fault.getter(v40);
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v42, 2u);
      swift_slowDealloc(v42, -1, -1);
    }
    swift_release();

    return 0;
  }
}

void sub_1004090AC(id *a1, uint64_t a2, uint64_t a3, unint64_t *a4, const char **a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  const char **v17;
  uint64_t *v18;
  uint64_t v19;
  id v20;
  void *v21;
  double v22;
  id v23;
  const char *v24;
  uint64_t v25;
  id v26;
  unint64_t *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  unint64_t *v36;
  unint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v39;
  unint64_t v40;
  unint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t *v55;
  uint64_t v56;
  id v57;
  id v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t *v61;
  _QWORD v62[3];
  char v63[8];
  uint64_t v64;
  unint64_t *v65;
  char v66[24];

  v61 = a4;
  v9 = sub_10002A750(&qword_100644980);
  __chkstk_darwin(v9);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  LOBYTE(a2) = sub_10037B2EC(v16, a2);

  if ((a2 & 1) != 0)
  {
    v17 = a5;
    v18 = (uint64_t *)(a3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID);
    swift_beginAccess(v18, v66, 0, 0);
    v19 = *v18;
    v20 = v16;
    swift_bridgeObjectRetain(v19);
    v21 = sub_1004781F8(v20, v19);

    *(_QWORD *)&v22 = swift_bridgeObjectRelease(v19).n128_u64[0];
    if (v21)
    {
      v23 = objc_msgSend(v21, "subtaskContext", v22);
      if (!v23)
      {

        return;
      }
      v58 = v21;
      v65 = 0;
      v24 = *v17;
      v25 = (uint64_t)v23;
      v26 = objc_msgSend(v23, v24, &v65);
      v27 = v65;
      if (!v26)
      {
        v41 = v65;
        v30 = _convertNSErrorToError(_:)(v27);

        swift_willThrow(v42);
        if (qword_10063D788 == -1)
          goto LABEL_20;
        goto LABEL_30;
      }
      v28 = v26;
      v29 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
      v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, v29);
      v31 = v27;

      v57 = (id)v25;
      if ((unint64_t)v30 >> 62)
      {
        if (v30 < 0)
          v56 = v30;
        else
          v56 = v30 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v30);
        v25 = _CocoaArrayWrapper.endIndex.getter(v56);
        if (v25)
          goto LABEL_7;
      }
      else
      {
        v25 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v30);
        if (v25)
        {
LABEL_7:
          if (v25 >= 1)
          {
            v32 = 0;
            v60 = (uint64_t)a1 + *(int *)(v12 + 20);
            v59 = v30 & 0xC000000000000001;
            v33 = v30;
            do
            {
              if (v59)
                v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v32, v30);
              else
                v34 = *(id *)(v30 + 8 * v32 + 32);
              v35 = v34;
              sub_10000735C(v60, (uint64_t)v11, &qword_100644980);
              TTRRemindersListViewModel.ReminderID.init(objectID:groupID:)(v35, v11);
              v36 = v61;
              v37 = *v61;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v61);
              *v36 = v37;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                v37 = sub_100456178(0, *(_QWORD *)(v37 + 16) + 1, 1, v37);
                *v61 = v37;
              }
              v40 = *(_QWORD *)(v37 + 16);
              v39 = *(_QWORD *)(v37 + 24);
              if (v40 >= v39 >> 1)
              {
                v37 = sub_100456178(v39 > 1, v40 + 1, 1, v37);
                *v61 = v37;
              }
              ++v32;
              *(_QWORD *)(v37 + 16) = v40 + 1;
              sub_10001F580((uint64_t)v15, v37+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
              v30 = v33;
            }
            while (v25 != v32);
            goto LABEL_27;
          }
          __break(1u);
LABEL_30:
          swift_once(&qword_10063D788, sub_100407564);
LABEL_20:
          v43 = type metadata accessor for Logger(0);
          sub_100012DC4(v43, (uint64_t)qword_10065AD38);
          swift_errorRetain(v30);
          swift_errorRetain(v30);
          v44 = v58;
          v45 = Logger.logObject.getter(v44);
          v46 = static os_log_type_t.error.getter(v45);
          if (os_log_type_enabled(v45, v46))
          {
            v47 = swift_slowAlloc(22, -1);
            v48 = swift_slowAlloc(8, -1);
            v57 = (id)v25;
            v49 = (_QWORD *)v48;
            v61 = (unint64_t *)swift_slowAlloc(32, -1);
            v65 = v61;
            *(_DWORD *)v47 = 138412546;
            v50 = objc_msgSend(v44, "objectID");
            v64 = (uint64_t)v50;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v47 + 4, v47 + 12);
            *v49 = v50;

            *(_WORD *)(v47 + 12) = 2080;
            swift_getErrorValue(v30, v63, v62);
            v51 = Error.rem_errorDescription.getter(v62[1], v62[2]);
            v53 = v52;
            v64 = sub_100027E40(v51, v52, (uint64_t *)&v65);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v47 + 14, v47 + 22);
            swift_bridgeObjectRelease(v53);
            swift_errorRelease(v30);
            swift_errorRelease(v30);
            _os_log_impl((void *)&_mh_execute_header, v45, v46, "Failed to fetch objectIDs of completed subtasks of reminder {reminder.objectID: %@, error: %s}", (uint8_t *)v47, 0x16u);
            v54 = sub_10002A750(&qword_100642D60);
            swift_arrayDestroy(v49, 1, v54);
            swift_slowDealloc(v49, -1, -1);
            v55 = v61;
            swift_arrayDestroy(v61, 1, &type metadata for Any[8]);
            swift_slowDealloc(v55, -1, -1);
            swift_slowDealloc(v47, -1, -1);

            swift_errorRelease(v30);
          }
          else
          {

            swift_errorRelease(v30);
            swift_errorRelease(v30);
            swift_errorRelease(v30);

          }
          return;
        }
      }
LABEL_27:

      swift_bridgeObjectRelease_n(v30, 2);
    }
  }
}

_QWORD *sub_100409690(uint64_t a1)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;

  v2 = sub_100408304();
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(_QWORD *)(v2 + 24);
    ObjectType = swift_getObjectType(Strong, v4);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(v2, ObjectType, v6);
    swift_unknownObjectRelease(v5);
    swift_retain();
    v9 = sub_100397FDC(a1, 1, v8, v2);
    swift_release();
    swift_release_n(v2, 2);
  }
  else
  {
    if (qword_10063D748 != -1)
      swift_once(&qword_10063D748, sub_1003E9A78);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_100012DC4(v10, (uint64_t)qword_100659C50);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.fault.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }
    swift_release();

    return 0;
  }
  return v9;
}

void *sub_100409808()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  if (v1)
  {
    sub_100005ED8(0, (unint64_t *)&qword_100649BD0, NSUserActivity_ptr);
    v2 = v1;
    v1 = (void *)static NSUserActivity.forStoringListPayload(for:)();

  }
  return v1;
}

uint64_t sub_10040986C()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  id v4;
  uint64_t result;
  _QWORD v6[5];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  if (v1)
  {
    v6[3] = type metadata accessor for TTRUserActivityListPayload(0);
    v6[4] = &protocol witness table for TTRUserActivityListPayload;
    v2 = sub_100028D70(v6);
    *v2 = v1;
    v3 = type metadata accessor for TTRUserActivityListPayload.State(0);
    swift_storeEnumTagMultiPayload(v2, v3, 0);
    v4 = v1;
    NSUserActivity.setPayload(_:)(v6);

    return sub_100027F10(v6);
  }
  return result;
}

void *sub_100409908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD v27[5];

  v1 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload(0);
  __chkstk_darwin(v1);
  v3 = (_QWORD *)((char *)&v27[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v27[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v7);
  v9 = (char *)&v27[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  if (v10)
  {
    sub_100005ED8(0, (unint64_t *)&qword_100649BD0, NSUserActivity_ptr);
    v11 = v10;
    v10 = (void *)static NSUserActivity.forStoringWindowSceneRestorationPayload()();
    v12 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
    if (Strong)
    {
      v15 = Strong;
      v16 = *(_QWORD *)(v12 + 8);
      ObjectType = swift_getObjectType(Strong, v14);
      sub_10046B304(ObjectType, v16);
      swift_unknownObjectRelease(v15);
      v18 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v6, 1, v18);
      if ((_DWORD)v19 != 1)
      {
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v19);
        sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v21 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v9, 0, 1, v21);
        goto LABEL_7;
      }
      sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
    }
    v20 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v9, 1, 1, v20);
LABEL_7:
    v22 = (uint64_t)v3 + *(int *)(sub_10002A750(&qword_100643700) + 48);
    *v3 = objc_msgSend(v11, "objectID");
    sub_10000735C((uint64_t)v9, v22, (uint64_t *)&unk_1006463C0);
    v23 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State(0);
    swift_storeEnumTagMultiPayload(v3, v23, 0);
    v27[3] = v1;
    v27[4] = &protocol witness table for TTRUserActivityWindowSceneRestorationPayload;
    v24 = sub_100028D70(v27);
    sub_10002B1E8((uint64_t)v3, (uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
    NSUserActivity.setPayload(_:)(v27);

    sub_10001F544((uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
    sub_1000073A0((uint64_t)v9, (uint64_t *)&unk_1006463C0);
    sub_100027F10(v27);
  }
  return v10;
}

void *sub_100409BBC()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  if (v1)
  {
    v2 = v1;
    v3 = (void *)REMList.accountCapabilities.getter();
    objc_msgSend(v3, "supportsSections");

  }
  return v1;
}

uint64_t sub_100409C34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Helper;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  void (*v9)(char *, _QWORD *, uint64_t, double);
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v19[5];

  v1 = OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource____lazy_storage___shouldSuggestGroceryTipFetchHelper;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource____lazy_storage___shouldSuggestGroceryTipFetchHelper))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource____lazy_storage___shouldSuggestGroceryTipFetchHelper);
  }
  else
  {
    Helper = type metadata accessor for ShouldSuggestGroceryTipFetchHelper();
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_userDefaults + 24);
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_userDefaults + 32);
    v6 = sub_10001413C((_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_userDefaults), v4);
    v19[3] = v4;
    v7 = *(_QWORD *)(v5 + 8);
    v19[4] = v7;
    v8 = sub_100028D70(v19);
    v9 = *(void (**)(char *, _QWORD *, uint64_t, double))(*(_QWORD *)(v4 - 8) + 16);
    v10 = ((uint64_t (*)(_QWORD *, _QWORD *, uint64_t))v9)(v8, v6, v4);
    v11 = __chkstk_darwin(v10);
    v13 = (char *)&v19[-1] - v12;
    v9((char *)&v19[-1] - v12, v8, v4, v11);
    v2 = sub_10040CB34((uint64_t)v13, Helper, v4, v7);
    sub_100027F10(v19);
    v14 = swift_allocObject(&unk_100606558, 24, 7);
    swift_weakInit(v14 + 16, v0);
    v15 = *(_QWORD *)(v2 + 24);
    v16 = *(_QWORD *)(v2 + 32);
    *(_QWORD *)(v2 + 24) = sub_10040CC4C;
    *(_QWORD *)(v2 + 32) = v14;
    sub_1000381B8(v15, v16);
    *(_QWORD *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

double sub_100409D94(uint64_t a1)
{
  uint64_t v1;
  double result;
  _BYTE v3[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v3, 0, 0);
  if (swift_weakLoadStrong(v1))
  {
    sub_100409DE8();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_100409DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  int v23;
  double v24;
  uint64_t v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v31;
  uint64_t v32;
  double result;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;

  v1 = v0;
  v2 = type metadata accessor for TTRRemindersListTip(0);
  __chkstk_darwin(v2);
  v44 = (uint64_t)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TTRRemindersListTips(0);
  __chkstk_darwin(v4);
  v43 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750(&qword_10065B448);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v43 - v10;
  v12 = type metadata accessor for AnyTip(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v43 - v17;
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v43 - v21;
  v23 = *(unsigned __int8 *)(sub_100409C34(v20) + 17);
  *(_QWORD *)&v24 = swift_release().n128_u64[0];
  if (v23 == 1)
  {
    v25 = v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
    if (Strong)
    {
      v28 = Strong;
      v29 = *(_QWORD *)(v25 + 8);
      ObjectType = swift_getObjectType(Strong, v27);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 144))(1, ObjectType, v29);
      swift_unknownObjectRelease(v28);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v22, v11, v12);
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v22, v12);
        v31 = (uint64_t)v43;
        TTRRemindersListTips.init(tipID:tip:)(1, v18);
        v32 = v44;
        sub_10002B1E8(v31, v44, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListTips);
        swift_retain();
        TTRRemindersListCurrentTipCapability.requestShowTip(_:)(v32);
        swift_release();
        sub_10001F544(v32, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListTip);
        sub_10001F544(v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListTips);
        (*(void (**)(char *, uint64_t))(v13 + 8))(v22, v12);
        return result;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    }
    sub_1000073A0((uint64_t)v11, &qword_10065B448);
  }
  v34 = *(unsigned __int8 *)(sub_100409C34(v24) + 16);
  swift_release();
  if (v34 != 1)
    goto LABEL_14;
  v35 = v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  v36 = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
  if (!v36)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v8, 1, 1, v12);
    goto LABEL_13;
  }
  v38 = v36;
  v39 = *(_QWORD *)(v35 + 8);
  v40 = swift_getObjectType(v36, v37);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v39 + 144))(0, v40, v39);
  swift_unknownObjectRelease(v38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1)
  {
LABEL_13:
    sub_1000073A0((uint64_t)v8, &qword_10065B448);
LABEL_14:
    swift_retain();
    TTRRemindersListCurrentTipCapability.requestDismissTip()();
    *(_QWORD *)&result = swift_release().n128_u64[0];
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v8, v12);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v15, v12);
  v41 = (uint64_t)v43;
  TTRRemindersListTips.init(tipID:tip:)(0, v18);
  v42 = v44;
  sub_10002B1E8(v41, v44, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListTips);
  swift_retain();
  TTRRemindersListCurrentTipCapability.requestShowTip(_:)(v42);
  swift_release();
  sub_10001F544(v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListTip);
  sub_10001F544(v41, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListTips);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return result;
}

uint64_t sub_10040A214@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void (*v17)(_QWORD *, _QWORD, uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  char v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 v55;
  id v56;
  void *v57;
  unsigned __int8 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE v64[12];
  int v65;
  uint64_t v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int v76;
  _QWORD *v77;
  uint64_t v78;
  _BYTE *v79;
  _BYTE *v80;
  _QWORD v81[3];
  uint64_t v82;
  void *v83;
  _QWORD v84[8];

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_100653A00);
  __chkstk_darwin(v4);
  v80 = &v64[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_10002A750((uint64_t *)&unk_100665210);
  __chkstk_darwin(v6);
  v79 = &v64[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_10002A750((uint64_t *)&unk_100665590);
  __chkstk_darwin(v8);
  v10 = &v64[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list;
  v12 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  if (v12)
  {
    v78 = a1;
    type metadata accessor for TTRListColors(0);
    v82 = sub_100005ED8(0, (unint64_t *)&qword_100640498, REMList_ptr);
    v83 = &protocol witness table for REMList;
    v81[0] = v12;
    v13 = v12;
    static TTRListColors.color(for:)(v84, v81);
    v14 = sub_1000073A0((uint64_t)v81, &qword_100649C80);
    v15 = (void *)REMList.accountCapabilities.getter(v14);
    v76 = objc_msgSend(v15, "supportsSections");

    *v10 = objc_msgSend(v13, "objectID");
    v16 = type metadata accessor for TTRListType(0);
    swift_storeEnumTagMultiPayload(v10, v16, 0);
    v17 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
    v77 = v10;
    v17(v10, 0, 1, v16);
    v18 = objc_msgSend(v13, "displayName");
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v74 = v20;
    v75 = v19;

    v73 = TTRListColors.Color.nativeColor.getter(v21);
    v22 = 0;
    v23 = (uint64_t *)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_remindersCount);
    v71 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_remindersCount + 16);
    if ((v71 & 1) == 0)
      v22 = v23[1];
    v72 = v22;
    type metadata accessor for TTRRemindersListViewModel(0);
    v69 = static TTRRemindersListViewModel.makeListSharingInfo(_:)(v13);
    v70 = v24;
    v25 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v24);
    v27 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8);
    v28 = v27(ObjectType, v25);
    v29 = v28;
    if (v28)
      swift_unknownObjectRelease(v28);
    v68 = v29;
    v30 = *(void **)(v2 + v11);
    if (v30)
    {
      v31 = v30;
      v32 = (void *)REMList.accountCapabilities.getter(v31);
      v67 = objc_msgSend(v32, "supportsSections");

    }
    else
    {
      v67 = 0;
    }
    v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 24))(ObjectType, v25);
    v36 = v35;
    if (v35)
      swift_unknownObjectRelease(v35);
    v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 64))(ObjectType, v25);
    v38 = v37;
    if (v37)
      swift_unknownObjectRelease(v37);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v25 + 56))(v81, ObjectType, v25);
    v39 = v82;
    sub_1000073A0((uint64_t)v81, &qword_100649FC0);
    v40 = v27(ObjectType, v25);
    if (v40)
    {
      v42 = v40;
      v43 = v41;
      v44 = swift_getObjectType(v40, v41);
      v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8))(v44, v43);
      swift_unknownObjectRelease(v42);
    }
    else
    {
      v45 = 0;
    }
    v46 = *((_BYTE *)v23 + 16);
    v66 = v39;
    v65 = v45;
    if ((v46 & 1) != 0)
      v47 = 0;
    else
      v47 = *v23;
    v48 = objc_msgSend(v13, "objectID");
    v49 = objc_msgSend(v48, "stringRepresentation");

    v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
    v52 = v51;

    v53 = type metadata accessor for TTRRemindersListViewModel.HashtagsState(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v79, 1, 1, v53);
    v54 = type metadata accessor for TTRTemplatePublicLinkData(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v80, 1, 1, v54);
    v55 = objc_msgSend(v13, "isOriginOfExistingTemplate");
    v56 = objc_msgSend(v13, "groceryContext");
    if (v56)
    {
      v57 = v56;
      v58 = objc_msgSend(v56, "shouldCategorizeGroceryItems");

    }
    else
    {
      v58 = 0;
    }
    BYTE6(v63) = 1;
    WORD2(v63) = 257;
    BYTE3(v63) = 0;
    BYTE2(v63) = v58;
    LOWORD(v63) = v55;
    v62 = v50;
    HIBYTE(v61) = v65 & 1;
    BYTE5(v61) = v76;
    BYTE2(v61) = v67;
    LOBYTE(v61) = 1;
    BYTE6(v61) = v66 != 0;
    BYTE4(v61) = v38 != 0;
    BYTE3(v61) = v36 != 0;
    BYTE1(v61) = v68 != 0;
    v59 = v78;
    TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)(v77, v75, v74, v73, v72, v71, v69 & 0x101, v70, v61, 1, v47, 1, v62, v52, 0, v79, v80, v63);

    sub_1000AD9D0((uint64_t)v84, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B328);
    v60 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v59, 0, 1, v60);
  }
  else
  {
    v33 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(a1, 1, 1, v33);
  }
}

double sub_10040A808()
{
  uint64_t v0;
  double result;

  swift_release();

  swift_release();
  sub_100027F10((_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_userDefaults));
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10040A864()
{
  uint64_t v0;

  v0 = sub_10046B320();
  swift_release();

  swift_release();
  sub_100027F10((_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_userDefaults));
  swift_release();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10040A8E4()
{
  return type metadata accessor for TTRShowRemindersInListViewModelSource(0);
}

uint64_t type metadata accessor for TTRShowRemindersInListViewModelSource(uint64_t a1)
{
  uint64_t result;

  result = qword_10065ADB8;
  if (!qword_10065ADB8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRShowRemindersInListViewModelSource);
  return result;
}

uint64_t sub_10040A928(uint64_t a1)
{
  _QWORD v2[8];

  v2[0] = "\b";
  v2[1] = "\b";
  v2[2] = &unk_100534AA0;
  v2[3] = &unk_100534AB8;
  v2[4] = &unk_100534AD0;
  v2[5] = "\b";
  v2[6] = &unk_100534AE8;
  v2[7] = "\b";
  return swift_updateClassMetadata2(a1, 256, 8, v2, a1 + 1336);
}

uint64_t sub_10040A994(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  char v19;
  id v20;
  void *v21;
  unsigned __int8 v22;
  void *v23;
  id v24;
  char *v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  id v31;
  id v32;
  void *v33;
  unsigned __int8 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  char *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v2 = v1;
  v63 = *v1;
  v4 = type metadata accessor for REMAnalyticsEvent(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_100649CA0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(a1, "objectID", v9);
  v13 = OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list;
  v14 = *(void **)((char *)v2 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  v64 = v4;
  if (v14)
  {
    v15 = objc_msgSend(v14, "objectID");
    v16 = v15;
    if (v12)
    {
      if (v15)
      {
        sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
        v17 = v12;
        v62 = v5;
        v18 = v17;
        v19 = static NSObject.== infix(_:_:)(v17, v16);

        v5 = v62;
LABEL_9:
        v12 = v16;
        goto LABEL_10;
      }
LABEL_6:
      v19 = 0;
LABEL_10:

      goto LABEL_12;
    }
    if (v15)
    {
      v19 = 0;
      goto LABEL_9;
    }
  }
  else if (v12)
  {
    goto LABEL_6;
  }
  v19 = 1;
LABEL_12:
  v20 = objc_msgSend(a1, "appearanceContext");
  if (v20)
  {
    v21 = v20;
    v22 = objc_msgSend(v20, "showingLargeAttachments");

    *((_BYTE *)v2 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_showLargeAttachmentsValue) = v22;
  }
  v23 = *(void **)((char *)v2 + v13);
  *(_QWORD *)((char *)v2 + v13) = a1;

  v24 = a1;
  sub_10040A214((uint64_t)v11);
  sub_10046ADD4((uint64_t)v11);
  if ((v19 & 1) == 0)
  {
    sub_100409C34();
    sub_10040ADA0(v24);
    swift_release();
    v25 = (char *)v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    Strong = swift_unknownObjectWeakLoadStrong((char *)v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
    if (Strong)
    {
      v28 = Strong;
      v29 = *((_QWORD *)v25 + 1);
      ObjectType = swift_getObjectType(Strong, v27);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 88))(1, ObjectType, v29);
      Strong = swift_unknownObjectRelease(v28);
    }
    v31 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(Strong);
    v32 = objc_msgSend(v24, "groceryContext");
    v60 = v11;
    v61 = a1;
    v62 = v5;
    if (v32)
    {
      v33 = v32;
      v34 = objc_msgSend(v32, "shouldCategorizeGroceryItems");

    }
    else
    {
      v34 = 0;
    }
    type metadata accessor for REMAnalyticsManager(0);
    static REMAnalyticsManager.shared.getter();
    v35 = sub_10002A750(&qword_100645348);
    v36 = &v7[*(int *)(v35 + 48)];
    v37 = &v7[*(int *)(v35 + 80)];
    v38 = objc_msgSend(v24, "isShared");
    *v7 = v34;
    v7[1] = v38;
    v39 = enum case for REMRemindersOpenUserOperation.list(_:);
    v40 = type metadata accessor for REMRemindersOpenUserOperation(0);
    v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 104))(v7, v39, v40);
    *(_QWORD *)v36 = TTRUserDefaults.activitySessionId.getter(v41);
    *((_QWORD *)v36 + 1) = v42;
    TTRUserDefaults.activitySessionBeginTime.getter();
    *(_QWORD *)v37 = _typeName(_:qualified:)(v63, 0);
    *((_QWORD *)v37 + 1) = v43;
    v44 = v62;
    v45 = v64;
    (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v7, enum case for REMAnalyticsEvent.openListUserOperation(_:), v64);
    REMAnalyticsManager.post(event:)(v7);

    v46 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v44 + 8))(v7, v45, v46);
    v11 = v60;
    a1 = v61;
  }
  v47 = (char *)v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  v48 = swift_unknownObjectWeakLoadStrong(v47);
  if (v48)
  {
    v50 = v48;
    v51 = *((_QWORD *)v47 + 1);
    v52 = swift_getObjectType(v48, v49);
    (*(void (**)(uint64_t, uint64_t))(v51 + 120))(v52, v51);
    swift_unknownObjectRelease(v50);
  }
  v53 = swift_unknownObjectWeakLoadStrong(v47);
  if (v53)
  {
    v55 = v53;
    v56 = *((_QWORD *)v47 + 1);
    v57 = swift_getObjectType(v53, v54);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 96))(a1, 0, v57, v56);
    swift_unknownObjectRelease(v55);
  }
  return sub_1000073A0((uint64_t)v11, &qword_100649CA0);
}

double sub_10040ADA0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  double result;
  uint64_t v13;

  v2 = v1;
  v4 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v2 + 96))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  *(_QWORD *)(v2 + 96) = 0;
  swift_release();
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = swift_allocObject(&unk_1006064E0, 24, 7);
  swift_weakInit(v8 + 16, v2);
  type metadata accessor for MainActor(0);
  swift_retain();
  v9 = a1;
  v10 = static MainActor.shared.getter(v9);
  v11 = (_QWORD *)swift_allocObject(&unk_100606508, 48, 7);
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = v8;
  v11[5] = v9;
  swift_release();
  *(_QWORD *)(v2 + 96) = sub_100148368((uint64_t)v6, (uint64_t)&unk_10065B430, (uint64_t)v11);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_10040AF1C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  id v32;
  char **v33;
  id v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t Strong;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t ObjectType;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  id v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  int v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  __int128 v112[2];
  _QWORD v113[5];
  _OWORD v114[8];
  _BYTE v115[136];

  v4 = v3;
  v104 = a3;
  v7 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v7);
  v9 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  v11 = *(_QWORD *)(v10 - 8);
  v99 = v10;
  v100 = v11;
  __chkstk_darwin(v10);
  v103 = (uint64_t)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v97);
  v98 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v14);
  v102 = (char *)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v16);
  v101 = (uint64_t)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v95 = *(_QWORD *)(v18 - 8);
  v96 = v18;
  __chkstk_darwin(v18);
  v94 = (char *)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for REMRemindersListDataView.CountByCompleted(0);
  v21 = *(_QWORD *)(v20 - 8);
  v109 = v20;
  v110 = v21;
  __chkstk_darwin(v20);
  v23 = (char *)&v94 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_10002A750(&qword_10063F008);
  __chkstk_darwin(v24);
  v26 = (char *)&v94 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v27);
  v30 = (char *)&v94 - v29;
  v31 = OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list;
  v32 = *(id *)(v4 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  v33 = &selRef_supportsAttachments;
  v105 = v9;
  v111 = a1;
  if (!v32)
  {
    if (!a1)
    {
      v107 = 1;
      v108 = 1;
      v35 = v109;
      goto LABEL_25;
    }
    v106 = a2;
    v34 = 0;
LABEL_7:
    v36 = objc_msgSend(a1, v33[326]);
    v37 = v36;
    if (v34)
    {
      if (v36)
      {
        v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
        v40 = v39;
        v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
        if (v38 == v42 && v40 == v41)
        {
          v108 = 1;
          v43 = v41;
        }
        else
        {
          v44 = v38;
          v43 = v41;
          v108 = _stringCompareWithSmolCheck(_:_:expecting:)(v44, v40, v42, v41, 0);
        }

        swift_bridgeObjectRelease(v40);
        swift_bridgeObjectRelease(v43);
        goto LABEL_21;
      }

    }
    else
    {
      if (!v36)
      {
        v108 = 1;
        goto LABEL_21;
      }

    }
    v108 = 0;
LABEL_21:
    v45 = *(void **)(v4 + v31);
    v46 = v111;
    *(_QWORD *)(v4 + v31) = v111;
    v34 = v46;

    v47 = v4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
    if (Strong)
    {
      v50 = Strong;
      v51 = *(_QWORD *)(v47 + 8);
      ObjectType = swift_getObjectType(Strong, v49);
      (*(void (**)(uint64_t, uint64_t))(v51 + 120))(ObjectType, v51);
      swift_unknownObjectRelease(v50);
    }
    v107 = 0;
    v35 = v109;
    goto LABEL_24;
  }
  v106 = a2;
  v32 = objc_msgSend(v32, "sortingStyle", v28);
  v33 = &selRef_supportsAttachments;
  v34 = v32;
  if (a1)
    goto LABEL_7;
  v107 = 1;
  v35 = v109;
  if (!v32)
  {
    v108 = 1;
    goto LABEL_25;
  }
  v108 = 0;
LABEL_24:

LABEL_25:
  REMRemindersListDataView.FlatModel.remindersCount.getter(v32);
  sub_10000735C((uint64_t)v30, (uint64_t)v26, &qword_10063F008);
  v53 = v110;
  v54 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v110 + 48))(v26, 1, v35);
  if (v54 == 1)
  {
    v55 = 0;
    v56 = 0;
  }
  else
  {
    v57 = (*(uint64_t (**)(char *, char *, uint64_t))(v53 + 32))(v23, v26, v35);
    v58 = v4;
    v59 = v53;
    v60 = v35;
    v55 = REMRemindersListDataView.CountByCompleted.completed.getter(v57);
    v56 = REMRemindersListDataView.CountByCompleted.incomplete.getter();
    v61 = *(void (**)(char *, uint64_t))(v59 + 8);
    v4 = v58;
    v61(v23, v60);
  }
  v63 = v107;
  v62 = v108;
  v64 = sub_1000073A0((uint64_t)v30, &qword_10063F008);
  v65 = v4 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_remindersCount;
  *(_QWORD *)v65 = v55;
  *(_QWORD *)(v65 + 8) = v56;
  *(_BYTE *)(v65 + 16) = v54 == 1;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_hasIncompleteOrCompletedReminders) = REMRemindersListDataView.FlatModel.hasIncompleteOrCompletedReminders.getter(v64);
  v66 = *(_QWORD *)(v4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  v68 = swift_getObjectType(*(_QWORD *)(v4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v67);
  v69 = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 32))(v68, v66);
  if (v69)
  {
    v71 = v69;
    v72 = v70;
    v73 = swift_getObjectType(v69, v70);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v72 + 16))(0, v73, v72);
    swift_unknownObjectRelease(v71);
  }
  if (((v63 | v62) & 1) != 0)
  {
    v74 = v101;
    sub_10040A214(v101);
    v75 = v97;
    v76 = v98;
    *v98 = 2;
    swift_storeEnumTagMultiPayload(v76, v75, 0);
    sub_1000D2B94(v114);
    sub_10000F614((uint64_t)v114, (uint64_t)v115, &qword_100649B60);
    v77 = (uint64_t)v102;
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v76, v115, 0, 0, 0, 0, 0, 0);
    v78 = v103;
    v79 = sub_10002B1E8(v77, v103, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v80 = REMRemindersListDataView.FlatModel.reminders.getter(v79);
    v81 = v99;
    *(_QWORD *)(v78 + *(int *)(v99 + 20)) = v80;
    *(_BYTE *)(v78 + *(int *)(v81 + 24)) = 0;
    v82 = sub_10002A750(&qword_1006452D8);
    v83 = *(unsigned __int8 *)(v100 + 80);
    v84 = (v83 + 32) & ~v83;
    v85 = swift_allocObject(v82, v84 + *(_QWORD *)(v100 + 72), v83 | 7);
    *(_OWORD *)(v85 + 16) = xmmword_100520250;
    sub_10002B1E8(v78, v85 + v84, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    v86 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
    v87 = swift_allocObject(v86, 16, 7);
    v88 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v89 = (uint64_t)v105;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v105, 1, 1, v88);
    v113[3] = v86;
    v113[4] = &off_100604210;
    v113[0] = v87;
    sub_100010634((uint64_t)v113, (uint64_t)v112);
    v90 = swift_allocObject(&unk_1006064B8, 72, 7);
    *(_QWORD *)(v90 + 16) = v85;
    sub_10002E37C(v112, v90 + 24);
    *(_QWORD *)(v90 + 64) = v4;
    swift_retain();
    swift_bridgeObjectRetain(v85);
    swift_retain();
    sub_10047C8F8(1, v74, (uint64_t (*)(uint64_t))sub_10003E360, v90, v104, 0, v89);
    swift_release();
    sub_100027F10(v113);
    swift_bridgeObjectRelease(v85);
    sub_1000073A0(v89, (uint64_t *)&unk_100640EB0);
    sub_10001F544(v78, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    sub_10001F544(v77, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    sub_1000073A0(v74, &qword_100649CA0);
    swift_release();
  }
  else
  {
    v91 = v111;
    v92 = objc_msgSend(v91, "sortingStyle");
    v93 = (uint64_t)v94;
    REMSortingStyle.dataViewSortingStyle.getter();

    sub_100474118(v93, 1);
    (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v93, v96);
  }
}

double sub_10040B6C0(id a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  char v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t Strong;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t ObjectType;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  void *v62;
  id v63;
  void *v64;
  unsigned int v65;
  id v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  char v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  int v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109[24];
  __int128 v110[2];
  _QWORD v111[5];

  v101 = a3;
  v108 = a2;
  v5 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v5);
  v7 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v8);
  v97 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v106 = (uint64_t)&v95 - v11;
  v100 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v99 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v98 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = 0;
  v13 = type metadata accessor for REMRemindersListDataView.CountByCompleted(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10002A750(&qword_10063F008);
  __chkstk_darwin(v17);
  v19 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21.n128_f64[0] = __chkstk_darwin(v20);
  v23 = (char *)&v95 - v22;
  v24 = OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list;
  v107 = v3;
  v25 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  v105 = a1;
  v102 = v7;
  if (!v25)
  {
    if (!a1)
    {
      v28 = 1;
      goto LABEL_17;
    }
    v27 = 0;
LABEL_7:
    v30 = objc_msgSend(a1, "sortingStyle");
    v31 = v30;
    if (v27)
    {
      if (v30)
      {
        v96 = v13;
        v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
        v34 = v33;
        v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
        v37 = v35;
        if (v32 == v36 && v34 == v35)
          v104 = 1;
        else
          v104 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v34, v36, v35, 0);
        a1 = v105;

        swift_bridgeObjectRelease(v34);
        swift_bridgeObjectRelease(v37);
        v13 = v96;
LABEL_21:
        v38 = v107;
        v39 = *(void **)(v107 + v24);
        *(_QWORD *)(v107 + v24) = a1;
        v29 = v38;
        v27 = a1;

        v40 = v29 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
        Strong = swift_unknownObjectWeakLoadStrong(v29 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
        if (Strong)
        {
          v43 = Strong;
          v44 = *(_QWORD *)(v40 + 8);
          ObjectType = swift_getObjectType(Strong, v42);
          (*(void (**)(uint64_t, uint64_t))(v44 + 120))(ObjectType, v44);
          swift_unknownObjectRelease(v43);
        }
        v28 = 0;
        goto LABEL_24;
      }

    }
    else
    {
      if (!v30)
      {
        v104 = 1;
        goto LABEL_21;
      }

    }
    v104 = 0;
    goto LABEL_21;
  }
  v26 = objc_msgSend(v25, "sortingStyle", v21.n128_f64[0]);
  v27 = v26;
  if (a1)
    goto LABEL_7;
  v28 = 1;
  if (!v26)
  {
LABEL_17:
    v104 = 1;
    v29 = v107;
    goto LABEL_25;
  }
  v104 = 0;
  v29 = v107;
LABEL_24:

LABEL_25:
  REMRemindersListDataView.SectionsModel.remindersCount.getter(v21);
  sub_10000735C((uint64_t)v23, (uint64_t)v19, &qword_10063F008);
  v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v19, 1, v13);
  if (v46 == 1)
  {
    v47 = 0;
    v48 = 0;
  }
  else
  {
    v49 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v16, v19, v13);
    v47 = REMRemindersListDataView.CountByCompleted.completed.getter(v49);
    v48 = REMRemindersListDataView.CountByCompleted.incomplete.getter();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  v50 = sub_1000073A0((uint64_t)v23, &qword_10063F008);
  v51 = v29 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_remindersCount;
  *(_QWORD *)v51 = v47;
  *(_QWORD *)(v51 + 8) = v48;
  *(_BYTE *)(v51 + 16) = v46 == 1;
  *(_BYTE *)(v29 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_hasIncompleteOrCompletedReminders) = REMRemindersListDataView.SectionsModel.hasIncompleteOrCompletedReminders.getter(v50);
  v52 = *(_QWORD *)(v29 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  v54 = swift_getObjectType(*(_QWORD *)(v29 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v53);
  v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 32))(v54, v52);
  if (v55)
  {
    v58 = v55;
    v59 = v56;
    v60 = swift_getObjectType(v55, v56);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v59 + 16))(0, v60, v59);
    swift_unknownObjectRelease(v58);
  }
  if ((v28 & 1) == 0)
  {
    v61 = v105;
    v62 = v61;
    if ((v104 & 1) == 0)
    {
      v73 = objc_msgSend(v61, "sortingStyle");
      v74 = (uint64_t)v98;
      REMSortingStyle.dataViewSortingStyle.getter();

      sub_100474118(v74, 1);
      (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v74, v100);
      return result;
    }
    sub_10040A214(v106);
    v63 = objc_msgSend(v62, "groceryContext");
    if (v63
      && (v64 = v63, v65 = objc_msgSend(v63, "shouldCategorizeGroceryItems"), v64, v65))
    {
      sub_10001413C((_QWORD *)(v29 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_userDefaults), *(_QWORD *)(v29 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_userDefaults + 24));
      v66 = objc_msgSend(v62, "objectID");
      v67 = TTRUserDefaults.shouldHideEmptySectionsInGroceryList(with:)();

      if ((v67 & 1) != 0)
      {
        v68 = REMRemindersListDataView.SectionsModel.sections.getter(v63);
        swift_retain();
        v69 = v103;
        v70 = sub_10040CD10(v68, v29);
        v103 = v69;
        swift_bridgeObjectRelease(v68);
        swift_release();
        v71 = 1;
        v72 = (uint64_t)v97;
        goto LABEL_39;
      }
      v71 = 1;
    }
    else
    {
      v71 = 0;
    }
    v72 = (uint64_t)v97;
    v70 = (_QWORD *)REMRemindersListDataView.SectionsModel.sections.getter(v63);
LABEL_39:
    sub_10000735C(v106, v72, &qword_100649CA0);
    v75 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 48))(v72, 1, v75) == 1)
    {
      sub_1000073A0(v72, &qword_100649CA0);
LABEL_45:
      *(_QWORD *)(v29 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_sectionsContextInstance) = 0;
LABEL_50:
      swift_release();
      __chkstk_darwin(v86);
      *(&v95 - 4) = (uint64_t)v62;
      *(&v95 - 3) = (uint64_t)v70;
      *((_BYTE *)&v95 - 16) = v71;
      swift_bridgeObjectRetain(v70);
      v88 = sub_1000ADFE4(v87, (void (*)(_QWORD, char *))sub_10040CC54, (uint64_t)(&v95 - 6));
      swift_bridgeObjectRelease_n(v70, 2);
      v89 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
      v90 = swift_allocObject(v89, 16, 7);
      v91 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      v92 = (uint64_t)v102;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v102, 1, 1, v91);
      v111[3] = v89;
      v111[4] = &off_100604210;
      v111[0] = v90;
      sub_100010634((uint64_t)v111, (uint64_t)v110);
      v93 = swift_allocObject(&unk_100606580, 72, 7);
      *(_QWORD *)(v93 + 16) = v88;
      sub_10002E37C(v110, v93 + 24);
      *(_QWORD *)(v93 + 64) = v29;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain(v88);
      v94 = v106;
      sub_10047C8F8(1, v106, (uint64_t (*)(uint64_t))sub_1001D5A68, v93, v101, 0, v92);
      swift_release();
      sub_100027F10(v111);
      swift_bridgeObjectRelease(v88);

      sub_1000073A0(v92, (uint64_t *)&unk_100640EB0);
      sub_1000073A0(v94, &qword_100649CA0);
      *(_QWORD *)&result = swift_release().n128_u64[0];
      return result;
    }
    v76 = *(unsigned __int8 *)(v72 + *(int *)(v75 + 64));
    v77 = sub_10001F544(v72, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    if (v76 != 1)
      goto LABEL_45;
    v78 = OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_sectionsContextInstance;
    v79 = *(_QWORD *)(v29 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_sectionsContextInstance);
    if (v79)
    {
      swift_beginAccess(v79 + 40, v109, 0, 0);
      v80 = *(void **)(v79 + 40);
      swift_bridgeObjectRetain(v80);
      v82 = REMRemindersListDataView.SectionsModel.sections.getter(v81);
      if (v80)
      {
LABEL_49:
        v83 = sub_100005ED8(0, &qword_1006436D8, REMListSection_ptr);
        v84 = type metadata accessor for TTRRemindersListViewModelSourceSectionsContext();
        v85 = swift_allocObject(v84, 160, 7);
        swift_retain();
        swift_bridgeObjectRetain(v70);
        *(_QWORD *)(v29 + v78) = sub_1000ADA0C(v29, v82, v83, v70, 1, v80, v85);
        goto LABEL_50;
      }
    }
    else
    {
      v82 = REMRemindersListDataView.SectionsModel.sections.getter(v77);
    }
    v80 = &_swiftEmptySetSingleton;
    goto LABEL_49;
  }
  return result;
}

uint64_t sub_10040BF70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  unint64_t v26;
  char v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  id v38;
  _BOOL8 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int16 v61;
  char v62;
  uint64_t v63;
  unint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  int v68;
  char v69;
  __int16 v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int16 v78;
  _QWORD v79[6];
  unsigned __int8 v80;
  _QWORD v81[17];

  v50 = a5;
  v48 = a4;
  v49 = a1;
  v60 = a6;
  v55 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v55);
  v57 = (uint64_t *)((char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for REMRemindersListDataView.SectionLite.SectionType(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (uint64_t *)((char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v13);
  v58 = (uint64_t)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v56 = (char *)&v46 - v16;
  type metadata accessor for TTRListColors(0);
  v81[3] = sub_100005ED8(0, (unint64_t *)&qword_100640498, REMList_ptr);
  v81[4] = &protocol witness table for REMList;
  v81[0] = a3;
  v51 = a3;
  static TTRListColors.color(for:)(v79, v81);
  v18 = v79[0];
  v17 = v79[1];
  v19 = v79[2];
  v52 = v79[3];
  v53 = v79[4];
  v54 = v79[5];
  v20 = v80;
  v21 = sub_1000073A0((uint64_t)v81, &qword_100649C80);
  v59 = a2;
  REMRemindersListDataView.SectionLite.type.getter(v21);
  v22 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 88))(v12, v9);
  if (v22 == enum case for REMRemindersListDataView.SectionLite.SectionType.sectioned(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v12, v9);
    v23 = *v12;
    v24 = v12[1];
    v25 = v20;
    v26 = v12[2];
    swift_bridgeObjectRelease(v12[4]);
    if (v49)
      v27 = 3;
    else
      v27 = 2;
    v28 = v57;
    *v57 = v23;
    swift_storeEnumTagMultiPayload(v28, v55, 1);
    v63 = v24;
    v64 = v26;
    v65 = 0u;
    v66 = 0u;
    v67 = 0u;
    v68 = 192;
    v69 = v27;
    v70 = v61;
    v71 = v62;
    v72 = v18;
    v73 = v17;
    v74 = v19;
    v75 = v52;
    v76 = v53;
    v77 = v54;
    v78 = v25;
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v63);
    sub_10000F614((uint64_t)&v63, (uint64_t)v81, &qword_100649B60);
    sub_1000AD9D0((uint64_t)v79, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B764);
    v29 = objc_msgSend(v51, "objectID");
    v30 = (uint64_t)v56;
    v31 = v28;
    v32 = 1;
    v33 = 1;
    v34 = 1;
    goto LABEL_8;
  }
  v35 = v17;
  v47 = v19;
  LODWORD(v49) = v20;
  v36 = v57;
  v37 = v55;
  v38 = v51;
  if (v22 == enum case for REMRemindersListDataView.SectionLite.SectionType.sectionless(_:))
  {
    v39 = *(_QWORD *)(v48 + 16) > 1uLL;
    sub_1000AD9D0((uint64_t)v79, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B764);
    *v36 = objc_msgSend(v38, "objectID");
    swift_storeEnumTagMultiPayload(v36, v37, 8);
    v63 = 0;
    v64 = 0xE000000000000000;
    v65 = 0u;
    v66 = 0u;
    v67 = 0u;
    v68 = 192;
    v69 = 3;
    v70 = v61;
    v71 = v62;
    v72 = v18;
    v73 = v35;
    v74 = v47;
    v75 = v52;
    v76 = v53;
    v77 = v54;
    v78 = v49;
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v63);
    sub_10000F614((uint64_t)&v63, (uint64_t)v81, &qword_100649B60);
    v29 = objc_msgSend(v38, "objectID");
    v33 = (v50 & 1) == 0;
    v30 = (uint64_t)v56;
    v31 = v36;
    v32 = v39;
    v34 = v39;
LABEL_8:
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v31, v81, v32, 0, v33, v34, 0, v29);
    v40 = v58;
    v41 = sub_10002B1E8(v30, v58, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v42 = REMRemindersListDataView.SectionLite.reminders.getter(v41);
    sub_1000AD9D0((uint64_t)v79, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B328);
    sub_10001F544(v30, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v43 = v40;
    v44 = v60;
    sub_10001F580(v43, v60, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    result = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
    *(_QWORD *)(v44 + *(int *)(result + 20)) = v42;
    *(_BYTE *)(v44 + *(int *)(result + 24)) = 0;
    return result;
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v9, v9);
  __break(1u);
  return result;
}

void sub_10040C400()
{
  sub_10040D018();
}

id sub_10040C408@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  if (v2)
  {
    *(_QWORD *)(a1 + 24) = &type metadata for TTRShowRemindersInListDragAndDropREMListTarget;
    *(_QWORD *)(a1 + 32) = &off_1005EC910;
    *(_QWORD *)a1 = v2;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return v2;
}

uint64_t sub_10040C444(uint64_t a1, void *a2)
{
  return sub_10040CC60(a2);
}

uint64_t sub_10040C44C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_sectionsContextInstance);
  if (!v3)
    return 0;
  swift_retain();
  v5 = (_QWORD *)sub_1003504B4((uint64_t)_swiftEmptyArrayStorage);
  swift_retain();
  v6 = sub_1001BB050(v5, a2);
  swift_release_n(v3, 2);
  return v6;
}

uint64_t sub_10040C4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v5[25] = a4;
  v5[26] = a5;
  v6 = sub_10002A750(&qword_100649BA0);
  v5[27] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v5[28] = v7;
  v5[29] = static MainActor.shared.getter(v7);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor, v8);
  return swift_task_switch(sub_10040C56C, v9, v10);
}

uint64_t sub_10040C56C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  unsigned __int8 v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 200);
  swift_release();
  v1 += 16;
  swift_beginAccess(v1, v0 + 176, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (!Strong)
    goto LABEL_20;
  v3 = Strong;
  v4 = (_QWORD *)(Strong + 56);
  sub_10001413C((_QWORD *)(Strong + 56), *(_QWORD *)(Strong + 80));
  if ((TTRUserDefaults.hasCreatedGroceryList.getter() & 1) == 0)
  {
    sub_10001413C(v4, *(_QWORD *)(v3 + 80));
    v10 = TTRUserDefaults.groceryTipDismissed.getter();
    if ((v10 & 1) != 0)
      goto LABEL_16;
    REMList.ttrGroceryContext.getter((_QWORD *)(v0 + 56));
    if (*(_QWORD *)(v0 + 80))
    {
      sub_10002E37C((__int128 *)(v0 + 56), v0 + 16);
      v12 = *(_QWORD *)(v0 + 40);
      v13 = *(_QWORD *)(v0 + 48);
      sub_10001413C((_QWORD *)(v0 + 16), v12);
      v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
      v10 = sub_100027F10((_QWORD *)(v0 + 16));
      if ((v14 & 1) != 0)
      {
        v11 = 0;
        goto LABEL_17;
      }
      goto LABEL_16;
    }
    v15 = v0 + 56;
LABEL_15:
    v10 = sub_1000073A0(v15, &qword_100661E80);
    goto LABEL_16;
  }
  REMList.ttrGroceryContext.getter((_QWORD *)(v0 + 136));
  if (!*(_QWORD *)(v0 + 160))
  {
    v15 = v0 + 136;
    goto LABEL_15;
  }
  sub_10002E37C((__int128 *)(v0 + 136), v0 + 96);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 128);
  sub_10001413C((_QWORD *)(v0 + 96), v5);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6) & 1) == 0
    || (v7 = objc_msgSend(*(id *)(v0 + 208), "sectionContext")) == 0)
  {
    v10 = sub_100027F10((_QWORD *)(v0 + 96));
    goto LABEL_16;
  }
  v8 = v7;
  v9 = objc_msgSend(v7, "hasSections");

  v10 = sub_100027F10((_QWORD *)(v0 + 96));
  if ((v9 & 1) == 0)
  {
LABEL_16:
    v11 = 2;
    goto LABEL_17;
  }
  v11 = 1;
LABEL_17:
  if ((static Task<>.isCancelled.getter(v10) & 1) == 0)
  {
    v16 = *(_QWORD *)(v0 + 216);
    v17 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
    v18 = swift_allocObject(&unk_1006064E0, 24, 7);
    swift_weakInit(v18 + 16, v3);
    v19 = swift_retain();
    v20 = static MainActor.shared.getter(v19);
    v21 = swift_allocObject(&unk_100606530, 41, 7);
    *(_QWORD *)(v21 + 16) = v20;
    *(_QWORD *)(v21 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v21 + 32) = v18;
    *(_BYTE *)(v21 + 40) = v11;
    swift_release();
    sub_1001484F4(v16, (uint64_t)&unk_10065B440, v21);
    swift_release();
  }
  swift_release();
LABEL_20:
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10040C7FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v5 + 64) = a5;
  *(_QWORD *)(v5 + 40) = a1;
  *(_QWORD *)(v5 + 48) = a4;
  v6 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 56) = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  return swift_task_switch(sub_10040C86C, v8, v9);
}

uint64_t sub_10040C86C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  __n128 v3;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release();
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    sub_10040C8E8(*(unsigned __int8 *)(v0 + 64));
    v3 = swift_release();
  }
  **(_BYTE **)(v0 + 40) = Strong == 0;
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

uint64_t sub_10040C8E8(uint64_t result)
{
  uint64_t v1;
  __int16 v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;

  if (!(_BYTE)result)
  {
    if ((*(_BYTE *)(v1 + 16) & 1) != 0)
      return result;
    v2 = 1;
LABEL_7:
    *(_WORD *)(v1 + 16) = v2;
    v3 = *(void (**)(uint64_t))(v1 + 24);
    if (!v3)
      return result;
LABEL_12:
    v4 = *(_QWORD *)(v1 + 32);
    v5 = swift_retain();
    v3(v5);
    return sub_1000381B8((uint64_t)v3, v4);
  }
  if (result == 1)
  {
    if ((*(_BYTE *)(v1 + 17) & 1) != 0)
      return result;
    v2 = 256;
    goto LABEL_7;
  }
  if ((*(_BYTE *)(v1 + 16) & 1) != 0 || *(_BYTE *)(v1 + 17) == 1)
  {
    *(_WORD *)(v1 + 16) = 0;
    v3 = *(void (**)(uint64_t))(v1 + 24);
    if (v3)
      goto LABEL_12;
  }
  return result;
}

uint64_t sub_10040C980()
{
  uint64_t *v0;

  sub_1000381B8(v0[3], v0[4]);
  sub_1000381B8(v0[5], v0[6]);
  sub_100027F10(v0 + 7);
  swift_release();
  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t type metadata accessor for ShouldSuggestGroceryTipFetchHelper()
{
  return objc_opt_self(_TtC9RemindersP33_F14C938D45AD8662F002A74824ECE31434ShouldSuggestGroceryTipFetchHelper);
}

uint64_t sub_10040C9E0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10040CA14(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_10065B42C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10004A08C;
  return sub_10040C4D8(a1, v4, v5, v7, v6);
}

uint64_t sub_10040CA8C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_10040CAB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc(dword_10065B43C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006083C;
  return sub_10040C7FC(a1, v4, v5, v6, v7);
}

uint64_t sub_10040CB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v18 = a3;
  v19 = a4;
  v7 = sub_100028D70(v17);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v7, a1, a3);
  v8 = swift_allocObject(a2, 104, 7);
  v9 = sub_100028D48((uint64_t)v17, v18);
  v10 = __chkstk_darwin(v9);
  v12 = (_QWORD *)((char *)&v17[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v13 + 16))(v12, v10);
  v14 = *v12;
  *(_QWORD *)(v8 + 80) = type metadata accessor for TTRUserDefaults(0);
  *(_QWORD *)(v8 + 88) = &off_1006063F0;
  *(_QWORD *)(v8 + 56) = v14;
  *(_WORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 96) = 0;
  *(_OWORD *)(v8 + 24) = 0u;
  *(_OWORD *)(v8 + 40) = 0u;
  sub_100027F10(v17);
  return v8;
}

uint64_t sub_10040CC28()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_10040CC4C()
{
  uint64_t v0;

  return sub_100409D94(v0);
}

uint64_t sub_10040CC54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_10040BF70(a1, a2, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24), *(unsigned __int8 *)(v3 + 32), a3);
}

uint64_t sub_10040CC60(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_sectionsContextInstance);
  if (!v2)
    return 0;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 56);
  v6 = Strong;
  if (Strong)
  {
    v7 = *(_QWORD *)(v2 + 64);
    ObjectType = swift_getObjectType(Strong, v5);
    v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 16);
    swift_retain(v2);
    v10 = v9(ObjectType, v7);
    swift_unknownObjectRelease(v6);
    v6 = TTRSection.init(with:store:)(a1, v10);
    swift_release(v2);
  }
  return v6;
}

_QWORD *sub_10040CD10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  _QWORD *result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t i;
  __n128 v19;
  uint64_t v20;
  int v21;
  __n128 v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t, __n128);
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  int v41;
  uint64_t (*v42)(char *, unint64_t, uint64_t, __n128);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char v47[24];
  _QWORD *v48;

  v36 = a2;
  v4 = type metadata accessor for REMRemindersListDataView.SectionLite.SectionType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for REMRemindersListDataView.SectionLite(0);
  __chkstk_darwin(v46);
  v45 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11.n128_f64[0] = __chkstk_darwin(v9);
  v13 = (char *)&v34 - v12;
  result = _swiftEmptyArrayStorage;
  v48 = _swiftEmptyArrayStorage;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v34 = v2;
    v35 = OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_sectionsContextInstance;
    v16 = *(_QWORD *)(v10 + 72);
    v38 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v17 = a1 + v38;
    v44 = v10;
    v42 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v10 + 16);
    v41 = enum case for REMRemindersListDataView.SectionLite.SectionType.sectioned(_:);
    v37 = enum case for REMRemindersListDataView.SectionLite.SectionType.sectionless(_:);
    v39 = v7;
    v40 = v4;
    v43 = v16;
    for (i = v42(v13, a1 + v38, v46, v11); ; i = v42(v13, v17, v46, v19))
    {
      REMRemindersListDataView.SectionLite.type.getter(i);
      v21 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
      if (v21 == v41)
      {
        (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
        v23 = *(void **)v7;
        v24 = *((_QWORD *)v7 + 4);
        swift_bridgeObjectRelease(*((_QWORD *)v7 + 2));
        swift_bridgeObjectRelease(v24);
        if ((REMRemindersListDataView.SectionLite.isEmpty.getter(v25) & 1) != 0)
        {
          v26 = *(_QWORD *)(v36 + v35);
          if (!v26)
          {

LABEL_4:
            (*(void (**)(char *, uint64_t))(v44 + 8))(v13, v46);
            v20 = v43;
            goto LABEL_5;
          }
          swift_beginAccess(v26 + 40, v47, 0, 0);
          v27 = *(_QWORD *)(v26 + 40);
          swift_bridgeObjectRetain(v27);
          v28 = sub_10037B2EC(v23, v27);

          v22 = swift_bridgeObjectRelease(v27);
          if ((v28 & 1) == 0)
            goto LABEL_4;
        }
        else
        {

        }
      }
      else if (v21 != v37)
      {
        result = (_QWORD *)_diagnoseUnexpectedEnumCase<A>(type:)(v4, v4);
        __break(1u);
        return result;
      }
      v29 = v5;
      v30 = *(void (**)(char *, char *, uint64_t, __n128))(v44 + 32);
      v30(v45, v13, v46, v22);
      v31 = v48;
      if ((swift_isUniquelyReferenced_nonNull_native(v48) & 1) == 0)
      {
        sub_1003D7ED8(0, v31[2] + 1, 1);
        v31 = v48;
      }
      v33 = v31[2];
      v32 = v31[3];
      if (v33 >= v32 >> 1)
      {
        sub_1003D7ED8(v32 > 1, v33 + 1, 1);
        v31 = v48;
      }
      v31[2] = v33 + 1;
      v20 = v43;
      ((void (*)(char *, char *, uint64_t))v30)((char *)v31 + v38 + v33 * v43, v45, v46);
      v48 = v31;
      v5 = v29;
      v7 = v39;
      v4 = v40;
LABEL_5:
      v17 += v20;
      if (!--v15)
        return v48;
    }
  }
  return result;
}

void sub_10040D018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v0 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v0);
  v1 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v4);
  v5 = (char *)sub_10040D0D8 + 4 * byte_1005349FC[swift_getEnumCaseMultiPayload(v3, v1)];
  __asm { BR              X10 }
}

uint64_t sub_10040D0D8()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
  return 0;
}

uint64_t sub_10040D188()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10040D1AC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_100407C0C(*(void **)(v1 + 16), a1);
}

uint64_t sub_10040D1B4()
{
  uint64_t *v0;

  return sub_100407AA4(v0[2], v0[3], v0[4]);
}

void sub_10040D1C0()
{
  uint64_t v0;

  TTRListEditor.edit(showingLargeAttachments:)(*(_BYTE *)(v0 + 16));
}

id sub_10040D1F0(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_class *ObjectType;
  Class isa;
  id result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  uint64_t v13;
  objc_super v14;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  sub_10040D444();
  sub_10040D480();
  isa = Set._bridgeToObjectiveC()().super.isa;
  v14.receiver = v2;
  v14.super_class = ObjectType;
  objc_msgSendSuper2(&v14, "pressesEnded:withEvent:", isa, a2);

  result = objc_msgSend(v2, "delegate");
  if (result)
  {
    v9 = (uint64_t)result;
    v10 = swift_getObjectType(result, v8);
    if (swift_conformsToProtocol2(v10, &protocol descriptor for TTRIBoardColumnCollectionViewDelegate))
      v11 = (char *)v9;
    else
      v11 = 0;
    if (v11)
    {
      Strong = swift_unknownObjectWeakLoadStrong(&v11[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate]);
      if (Strong)
      {
        v13 = Strong;
        sub_1003700CC(a1);
        swift_unknownObjectRelease(v9);
        v9 = v13;
      }
    }
    return (id)swift_unknownObjectRelease(v9);
  }
  return result;
}

uint64_t type metadata accessor for TTRIBoardColumnCollectionView()
{
  return objc_opt_self(_TtC9Reminders29TTRIBoardColumnCollectionView);
}

unint64_t sub_10040D444()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10065B488;
  if (!qword_10065B488)
  {
    v1 = objc_opt_self(UIPress);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10065B488);
  }
  return result;
}

unint64_t sub_10040D480()
{
  unint64_t result;
  unint64_t v1;

  result = qword_10065B490;
  if (!qword_10065B490)
  {
    v1 = sub_10040D444();
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_10065B490);
  }
  return result;
}

uint64_t *sub_10040D4C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v17 = sub_10002A750((uint64_t *)&unk_100654F50);
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
      {
        v19 = type metadata accessor for TTRICollectionViewEmptySpaceType(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        v31 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
        v32 = *(_QWORD *)(v31 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v32 + 48))(a2, 1, v31))
        {
          v33 = sub_10002A750(&qword_10063F190);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          v35 = swift_getEnumCaseMultiPayload(a2, v31);
          v36 = type metadata accessor for IndexPath(0);
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(a1, a2, v36);
          swift_storeEnumTagMultiPayload(a1, v31, v35);
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v32 + 56))(a1, 0, 1, v31);
        }
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
      }
      v28 = a1;
      v29 = a3;
      v30 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for IndexPath(0);
      v9 = *(_QWORD *)(v8 - 8);
      v10 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16);
      v10(a1, a2, v8);
      v11 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
      v10((uint64_t *)((char *)a1 + *(int *)(v11 + 20)), (uint64_t *)((char *)a2 + *(int *)(v11 + 20)), v8);
      v12 = *(int *)(v11 + 24);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8))
      {
        v15 = sub_10002A750(&qword_100646950);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        v10((uint64_t *)v13, (uint64_t *)v14, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v13, 0, 1, v8);
      }
      v28 = a1;
      v29 = a3;
      v30 = 1;
    }
    else
    {
      v20 = type metadata accessor for IndexPath(0);
      v21 = *(_QWORD *)(v20 - 8);
      v22 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v21 + 16);
      v22(a1, a2, v20);
      v23 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
      v22((uint64_t *)((char *)a1 + *(int *)(v23 + 20)), (uint64_t *)((char *)a2 + *(int *)(v23 + 20)), v20);
      v24 = *(int *)(v23 + 24);
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))((char *)a2 + v24, 1, v20))
      {
        v27 = sub_10002A750(&qword_100646950);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        v22((uint64_t *)v25, (uint64_t *)v26, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v25, 0, 1, v20);
      }
      v34 = type metadata accessor for TTRICollectionViewItemHit(0);
      *((_BYTE *)a1 + *(int *)(v34 + 20)) = *((_BYTE *)a2 + *(int *)(v34 + 20));
      *((_BYTE *)a1 + *(int *)(v34 + 24)) = *((_BYTE *)a2 + *(int *)(v34 + 24));
      v28 = a1;
      v29 = a3;
      v30 = 0;
    }
    swift_storeEnumTagMultiPayload(v28, v29, v30);
  }
  return a1;
}

uint64_t type metadata accessor for TTRICollectionViewHitIndexPaths(uint64_t a1)
{
  return sub_100007328(a1, qword_10065B6C0, (uint64_t)&nominal type descriptor for TTRICollectionViewHitIndexPaths);
}

uint64_t type metadata accessor for TTRICollectionViewItemHit(uint64_t a1)
{
  return sub_100007328(a1, qword_10065B628, (uint64_t)&nominal type descriptor for TTRICollectionViewItemHit);
}

uint64_t type metadata accessor for TTRICollectionViewEmptySpaceType(uint64_t a1)
{
  return sub_100007328(a1, (uint64_t *)&unk_10065B5B8, (uint64_t)&nominal type descriptor for TTRICollectionViewEmptySpaceType);
}

uint64_t sub_10040D84C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 2)
  {
    v11 = sub_10002A750((uint64_t *)&unk_100654F50);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1, 1, v11);
    if (!(_DWORD)result)
    {
      v12 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(a1, 1, v12);
      if (!(_DWORD)result)
      {
        result = swift_getEnumCaseMultiPayload(a1, v12);
        if (result <= 2)
        {
          v9 = type metadata accessor for IndexPath(0);
          v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
          v8 = a1;
          return v10(v8, v9);
        }
      }
    }
  }
  else if (result <= 1)
  {
    v4 = type metadata accessor for IndexPath(0);
    v5 = *(_QWORD *)(v4 - 8);
    v13 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v13(a1, v4);
    v6 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
    v13(a1 + *(int *)(v6 + 20), v4);
    v7 = a1 + *(int *)(v6 + 24);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4);
    if (!(_DWORD)result)
    {
      v8 = v7;
      v9 = v4;
      v10 = (uint64_t (*)(uint64_t, uint64_t))v13;
      return v10(v8, v9);
    }
  }
  return result;
}

char *sub_10040D9A4(char *a1, char *a2, uint64_t a3)
{
  char *v4;
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  size_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = a2;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = EnumCaseMultiPayload;
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    v16 = sub_10002A750((uint64_t *)&unk_100654F50);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v4, 1, v16))
    {
      v14 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for TTRICollectionViewEmptySpaceType(0) - 8) + 64);
      v15 = a1;
LABEL_7:
      memcpy(v15, v4, v14);
      goto LABEL_17;
    }
    v26 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v4, 1, v26))
    {
      v28 = sub_10002A750(&qword_10063F190);
      memcpy(a1, v4, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v30 = swift_getEnumCaseMultiPayload(v4, v26);
      v31 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(a1, v4, v31);
      swift_storeEnumTagMultiPayload(a1, v26, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(a1, 0, 1, v26);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
  }
  else
  {
    if ((_DWORD)EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for IndexPath(0);
      v9 = *(_QWORD *)(v8 - 8);
      v10 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
      v10(a1, v4, v8);
      v11 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
      v10(&a1[*(int *)(v11 + 20)], &v4[*(int *)(v11 + 20)], v8);
      v12 = *(int *)(v11 + 24);
      v13 = &a1[v12];
      v4 += v12;
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8))
      {
        v10(v13, v4, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v13, 0, 1, v8);
        goto LABEL_17;
      }
      v14 = *(_QWORD *)(*(_QWORD *)(sub_10002A750(&qword_100646950) - 8) + 64);
      v15 = v13;
      goto LABEL_7;
    }
    v18 = type metadata accessor for IndexPath(0);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
    v20(a1, v4, v18);
    v21 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
    v20(&a1[*(int *)(v21 + 20)], &v4[*(int *)(v21 + 20)], v18);
    v22 = *(int *)(v21 + 24);
    v23 = &a1[v22];
    v24 = &v4[v22];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(&v4[v22], 1, v18))
    {
      v25 = sub_10002A750(&qword_100646950);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v20(v23, v24, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v23, 0, 1, v18);
    }
    v29 = type metadata accessor for TTRICollectionViewItemHit(0);
    a1[*(int *)(v29 + 20)] = v4[*(int *)(v29 + 20)];
    a1[*(int *)(v29 + 24)] = v4[*(int *)(v29 + 24)];
  }
LABEL_17:
  swift_storeEnumTagMultiPayload(a1, a3, v7);
  return a1;
}

char *sub_10040DC9C(char *a1, char *a2, uint64_t a3)
{
  char *v5;
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  size_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (a1 != a2)
  {
    v5 = a2;
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRICollectionViewHitTestResult);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, a3);
    v7 = EnumCaseMultiPayload;
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v16 = sub_10002A750((uint64_t *)&unk_100654F50);
      v17 = *(_QWORD *)(v16 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v5, 1, v16))
      {
        v26 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v5, 1, v26))
        {
          v28 = sub_10002A750(&qword_10063F190);
          memcpy(a1, v5, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          v30 = swift_getEnumCaseMultiPayload(v5, v26);
          v31 = type metadata accessor for IndexPath(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(a1, v5, v31);
          swift_storeEnumTagMultiPayload(a1, v26, v30);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(a1, 0, 1, v26);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
        goto LABEL_18;
      }
      v14 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for TTRICollectionViewEmptySpaceType(0) - 8) + 64);
      v15 = a1;
    }
    else
    {
      if ((_DWORD)EnumCaseMultiPayload != 1)
      {
        v18 = type metadata accessor for IndexPath(0);
        v19 = *(_QWORD *)(v18 - 8);
        v20 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
        v20(a1, v5, v18);
        v21 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
        v20(&a1[*(int *)(v21 + 20)], &v5[*(int *)(v21 + 20)], v18);
        v22 = *(int *)(v21 + 24);
        v23 = &a1[v22];
        v24 = &v5[v22];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(&v5[v22], 1, v18))
        {
          v25 = sub_10002A750(&qword_100646950);
          memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          v20(v23, v24, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v23, 0, 1, v18);
        }
        v29 = type metadata accessor for TTRICollectionViewItemHit(0);
        a1[*(int *)(v29 + 20)] = v5[*(int *)(v29 + 20)];
        a1[*(int *)(v29 + 24)] = v5[*(int *)(v29 + 24)];
        goto LABEL_18;
      }
      v8 = type metadata accessor for IndexPath(0);
      v9 = *(_QWORD *)(v8 - 8);
      v10 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
      v10(a1, v5, v8);
      v11 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
      v10(&a1[*(int *)(v11 + 20)], &v5[*(int *)(v11 + 20)], v8);
      v12 = *(int *)(v11 + 24);
      v13 = &a1[v12];
      v5 += v12;
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8))
      {
        v10(v13, v5, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v13, 0, 1, v8);
        goto LABEL_18;
      }
      v14 = *(_QWORD *)(*(_QWORD *)(sub_10002A750(&qword_100646950) - 8) + 64);
      v15 = v13;
    }
    memcpy(v15, v5, v14);
LABEL_18:
    swift_storeEnumTagMultiPayload(a1, a3, v7);
  }
  return a1;
}

uint64_t type metadata accessor for TTRICollectionViewHitTestResult(uint64_t a1)
{
  return sub_100007328(a1, qword_10065B510, (uint64_t)&nominal type descriptor for TTRICollectionViewHitTestResult);
}

char *sub_10040DFC0(char *a1, char *a2, uint64_t a3)
{
  char *v4;
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  size_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = a2;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = EnumCaseMultiPayload;
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    v16 = sub_10002A750((uint64_t *)&unk_100654F50);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v4, 1, v16))
    {
      v14 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for TTRICollectionViewEmptySpaceType(0) - 8) + 64);
      v15 = a1;
LABEL_7:
      memcpy(v15, v4, v14);
      goto LABEL_17;
    }
    v26 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v4, 1, v26))
    {
      v28 = sub_10002A750(&qword_10063F190);
      memcpy(a1, v4, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v30 = swift_getEnumCaseMultiPayload(v4, v26);
      v31 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(a1, v4, v31);
      swift_storeEnumTagMultiPayload(a1, v26, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(a1, 0, 1, v26);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
  }
  else
  {
    if ((_DWORD)EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for IndexPath(0);
      v9 = *(_QWORD *)(v8 - 8);
      v10 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v10(a1, v4, v8);
      v11 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
      v10(&a1[*(int *)(v11 + 20)], &v4[*(int *)(v11 + 20)], v8);
      v12 = *(int *)(v11 + 24);
      v13 = &a1[v12];
      v4 += v12;
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8))
      {
        v10(v13, v4, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v13, 0, 1, v8);
        goto LABEL_17;
      }
      v14 = *(_QWORD *)(*(_QWORD *)(sub_10002A750(&qword_100646950) - 8) + 64);
      v15 = v13;
      goto LABEL_7;
    }
    v18 = type metadata accessor for IndexPath(0);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v20(a1, v4, v18);
    v21 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
    v20(&a1[*(int *)(v21 + 20)], &v4[*(int *)(v21 + 20)], v18);
    v22 = *(int *)(v21 + 24);
    v23 = &a1[v22];
    v24 = &v4[v22];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(&v4[v22], 1, v18))
    {
      v25 = sub_10002A750(&qword_100646950);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v20(v23, v24, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v23, 0, 1, v18);
    }
    v29 = type metadata accessor for TTRICollectionViewItemHit(0);
    a1[*(int *)(v29 + 20)] = v4[*(int *)(v29 + 20)];
    a1[*(int *)(v29 + 24)] = v4[*(int *)(v29 + 24)];
  }
LABEL_17:
  swift_storeEnumTagMultiPayload(a1, a3, v7);
  return a1;
}

char *sub_10040E2B8(char *a1, char *a2, uint64_t a3)
{
  char *v5;
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  size_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (a1 != a2)
  {
    v5 = a2;
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRICollectionViewHitTestResult);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, a3);
    v7 = EnumCaseMultiPayload;
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v16 = sub_10002A750((uint64_t *)&unk_100654F50);
      v17 = *(_QWORD *)(v16 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v5, 1, v16))
      {
        v26 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v5, 1, v26))
        {
          v28 = sub_10002A750(&qword_10063F190);
          memcpy(a1, v5, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          v30 = swift_getEnumCaseMultiPayload(v5, v26);
          v31 = type metadata accessor for IndexPath(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(a1, v5, v31);
          swift_storeEnumTagMultiPayload(a1, v26, v30);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(a1, 0, 1, v26);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
        goto LABEL_18;
      }
      v14 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for TTRICollectionViewEmptySpaceType(0) - 8) + 64);
      v15 = a1;
    }
    else
    {
      if ((_DWORD)EnumCaseMultiPayload != 1)
      {
        v18 = type metadata accessor for IndexPath(0);
        v19 = *(_QWORD *)(v18 - 8);
        v20 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
        v20(a1, v5, v18);
        v21 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
        v20(&a1[*(int *)(v21 + 20)], &v5[*(int *)(v21 + 20)], v18);
        v22 = *(int *)(v21 + 24);
        v23 = &a1[v22];
        v24 = &v5[v22];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(&v5[v22], 1, v18))
        {
          v25 = sub_10002A750(&qword_100646950);
          memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          v20(v23, v24, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v23, 0, 1, v18);
        }
        v29 = type metadata accessor for TTRICollectionViewItemHit(0);
        a1[*(int *)(v29 + 20)] = v5[*(int *)(v29 + 20)];
        a1[*(int *)(v29 + 24)] = v5[*(int *)(v29 + 24)];
        goto LABEL_18;
      }
      v8 = type metadata accessor for IndexPath(0);
      v9 = *(_QWORD *)(v8 - 8);
      v10 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v10(a1, v5, v8);
      v11 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
      v10(&a1[*(int *)(v11 + 20)], &v5[*(int *)(v11 + 20)], v8);
      v12 = *(int *)(v11 + 24);
      v13 = &a1[v12];
      v5 += v12;
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8))
      {
        v10(v13, v5, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v13, 0, 1, v8);
        goto LABEL_18;
      }
      v14 = *(_QWORD *)(*(_QWORD *)(sub_10002A750(&qword_100646950) - 8) + 64);
      v15 = v13;
    }
    memcpy(v15, v5, v14);
LABEL_18:
    swift_storeEnumTagMultiPayload(a1, a3, v7);
  }
  return a1;
}

uint64_t sub_10040E5C8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  result = type metadata accessor for TTRICollectionViewItemHit(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for TTRICollectionViewHitIndexPaths(319);
    if (v4 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(result - 8) + 64;
      result = type metadata accessor for TTRICollectionViewEmptySpaceType(319);
      if (v5 <= 0x3F)
      {
        v6[2] = *(_QWORD *)(result - 8) + 64;
        swift_initEnumMetadataMultiPayload(a1, 256, 3, v6);
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_10040E664(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t EnumCaseMultiPayload;
  uint64_t v14;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_10002A750((uint64_t *)&unk_100654F50);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        v12 = sub_10002A750(&qword_10063F190);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v10);
        v14 = type metadata accessor for IndexPath(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        swift_storeEnumTagMultiPayload(a1, v10, EnumCaseMultiPayload);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_10040E7C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_10002A750((uint64_t *)&unk_100654F50);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4);
    if (!(_DWORD)result)
    {
      result = swift_getEnumCaseMultiPayload(a1, v4);
      if (result <= 2)
      {
        v5 = type metadata accessor for IndexPath(0);
        return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
      }
    }
  }
  return result;
}

void *sub_10040E86C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t EnumCaseMultiPayload;
  uint64_t v12;

  v6 = sub_10002A750((uint64_t *)&unk_100654F50);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      v10 = sub_10002A750(&qword_10063F190);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v8);
      v12 = type metadata accessor for IndexPath(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      swift_storeEnumTagMultiPayload(a1, v8, EnumCaseMultiPayload);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_10040E9AC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t EnumCaseMultiPayload;
  uint64_t v23;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_10002A750((uint64_t *)&unk_100654F50);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v11 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        v13 = sub_10002A750(&qword_10063F190);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v11);
        v23 = type metadata accessor for IndexPath(0);
        (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, a2, v23);
        swift_storeEnumTagMultiPayload(a1, v11, EnumCaseMultiPayload);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      return a1;
    }
    goto LABEL_7;
  }
  if (v10)
  {
    sub_1000073A0((uint64_t)a1, (uint64_t *)&unk_100654F50);
LABEL_7:
    v14 = *(_QWORD *)(a3 - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v14 + 64));
    return a1;
  }
  v15 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(a1, 1, v15);
  v19 = v17(a2, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      v20 = swift_getEnumCaseMultiPayload(a2, v15);
      v21 = type metadata accessor for IndexPath(0);
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
      swift_storeEnumTagMultiPayload(a1, v15, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
      return a1;
    }
    goto LABEL_17;
  }
  if (v19)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
LABEL_17:
    v14 = *(_QWORD *)(sub_10002A750(&qword_10063F190) - 8);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
    v25 = swift_getEnumCaseMultiPayload(a2, v15);
    if (v25 == 2)
    {
      v27 = type metadata accessor for IndexPath(0);
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(a1, a2, v27);
      swift_storeEnumTagMultiPayload(a1, v15, 2);
    }
    else if (v25 == 1)
    {
      v26 = type metadata accessor for IndexPath(0);
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(a1, a2, v26);
      swift_storeEnumTagMultiPayload(a1, v15, 1);
    }
    else
    {
      v28 = type metadata accessor for IndexPath(0);
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(a1, a2, v28);
      swift_storeEnumTagMultiPayload(a1, v15, 0);
    }
  }
  return a1;
}

void *sub_10040EC98(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t EnumCaseMultiPayload;
  uint64_t v12;

  v6 = sub_10002A750((uint64_t *)&unk_100654F50);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      v10 = sub_10002A750(&qword_10063F190);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v8);
      v12 = type metadata accessor for IndexPath(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      swift_storeEnumTagMultiPayload(a1, v8, EnumCaseMultiPayload);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_10040EDD8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t EnumCaseMultiPayload;
  uint64_t v23;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_10002A750((uint64_t *)&unk_100654F50);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v11 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        v13 = sub_10002A750(&qword_10063F190);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v11);
        v23 = type metadata accessor for IndexPath(0);
        (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
        swift_storeEnumTagMultiPayload(a1, v11, EnumCaseMultiPayload);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      return a1;
    }
    goto LABEL_7;
  }
  if (v10)
  {
    sub_1000073A0((uint64_t)a1, (uint64_t *)&unk_100654F50);
LABEL_7:
    v14 = *(_QWORD *)(a3 - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v14 + 64));
    return a1;
  }
  v15 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(a1, 1, v15);
  v19 = v17(a2, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      v20 = swift_getEnumCaseMultiPayload(a2, v15);
      v21 = type metadata accessor for IndexPath(0);
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
      swift_storeEnumTagMultiPayload(a1, v15, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
      return a1;
    }
    goto LABEL_17;
  }
  if (v19)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
LABEL_17:
    v14 = *(_QWORD *)(sub_10002A750(&qword_10063F190) - 8);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
    v25 = swift_getEnumCaseMultiPayload(a2, v15);
    if (v25 == 2)
    {
      v27 = type metadata accessor for IndexPath(0);
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(a1, a2, v27);
      swift_storeEnumTagMultiPayload(a1, v15, 2);
    }
    else if (v25 == 1)
    {
      v26 = type metadata accessor for IndexPath(0);
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(a1, a2, v26);
      swift_storeEnumTagMultiPayload(a1, v15, 1);
    }
    else
    {
      v28 = type metadata accessor for IndexPath(0);
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(a1, a2, v28);
      swift_storeEnumTagMultiPayload(a1, v15, 0);
    }
  }
  return a1;
}

uint64_t sub_10040F0C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10040F0D0);
}

uint64_t sub_10040F0D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_10002A750((uint64_t *)&unk_100654F50);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_10040F120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10040F12C);
}

uint64_t sub_10040F12C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_10002A750((uint64_t *)&unk_100654F50);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_10040F180(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750((uint64_t *)&unk_100654F50);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_10040F1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_100654F50);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

void sub_10040F200(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  sub_100005494(319, &qword_10065B5C8, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
  if (v3 <= 0x3F)
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(v2 - 8) + 64, 1);
}

char *sub_10040F264(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for IndexPath(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
    v9(&a1[*(int *)(v10 + 20)], &a2[*(int *)(v10 + 20)], v7);
    v11 = *(int *)(v10 + 24);
    v12 = &a1[v11];
    v13 = &a2[v11];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v11], 1, v7))
    {
      v14 = sub_10002A750(&qword_100646950);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v9(v12, v13, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
    }
    v16 = *(int *)(a3 + 24);
    a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
    a1[v16] = a2[v16];
  }
  return a1;
}

char *sub_10040F39C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  v8(&a1[*(int *)(v9 + 20)], &a2[*(int *)(v9 + 20)], v6);
  v10 = *(int *)(v9 + 24);
  v11 = &a1[v10];
  v12 = &a2[v10];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v10], 1, v6))
  {
    v13 = sub_10002A750(&qword_100646950);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v8(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  a1[v14] = a2[v14];
  return a1;
}

char *sub_10040F4A4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t (*v13)(const void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  v8(&a1[*(int *)(v9 + 20)], &a2[*(int *)(v9 + 20)], v6);
  v10 = *(int *)(v9 + 24);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v14 = v13(&a1[v10], 1, v6);
  v15 = v13(v12, 1, v6);
  if (!v14)
  {
    if (!v15)
    {
      v8(v11, v12, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = sub_10002A750(&qword_100646950);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
LABEL_7:
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_10040F5FC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  v8(&a1[*(int *)(v9 + 20)], &a2[*(int *)(v9 + 20)], v6);
  v10 = *(int *)(v9 + 24);
  v11 = &a1[v10];
  v12 = &a2[v10];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v10], 1, v6))
  {
    v13 = sub_10002A750(&qword_100646950);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v8(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  a1[v14] = a2[v14];
  return a1;
}

char *sub_10040F704(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t (*v13)(const void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  v8(&a1[*(int *)(v9 + 20)], &a2[*(int *)(v9 + 20)], v6);
  v10 = *(int *)(v9 + 24);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v14 = v13(&a1[v10], 1, v6);
  v15 = v13(v12, 1, v6);
  if (!v14)
  {
    if (!v15)
    {
      v8(v11, v12, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = sub_10002A750(&qword_100646950);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
LABEL_7:
  v17 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  a1[v17] = a2[v17];
  return a1;
}

uint64_t sub_10040F858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10040F864);
}

uint64_t sub_10040F864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return v9 - 1;
  else
    return 0;
}

uint64_t sub_10040F8DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10040F8E8);
}

uint64_t sub_10040F8E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_10040F960(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for TTRICollectionViewHitIndexPaths(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100534CA0;
    v4[2] = &unk_100534CA0;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_10040F9D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for IndexPath(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v9((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v10 = *(int *)(a3 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
    {
      v13 = sub_10002A750(&qword_100646950);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v11, (uint64_t *)v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_10040FAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t);

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  v8(a1 + *(int *)(a2 + 20), v4);
  v6 = a1 + *(int *)(a2 + 24);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  return result;
}

char *sub_10040FB8C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    v12 = sub_10002A750(&qword_100646950);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *sub_10040FC6C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_10002A750(&qword_100646950);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

char *sub_10040FD98(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    v12 = sub_10002A750(&qword_100646950);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *sub_10040FE78(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_10002A750(&qword_100646950);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

uint64_t sub_10040FFA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10040FFB0);
}

uint64_t sub_10040FFB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_10002A750(&qword_100646950);
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100410028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100410034);
}

uint64_t sub_100410034(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_10002A750(&qword_100646950);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1004100B4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v2 = type metadata accessor for IndexPath(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = v6[0];
    sub_100005494(319, qword_100646840, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

uint64_t sub_100410148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(_QWORD);
  int EnumCaseMultiPayload;
  Swift::String v22;
  void *object;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  Swift::String v28;
  void *v29;
  Swift::String v30;
  unint64_t v32;
  unint64_t v33;

  v1 = v0;
  v2 = sub_10002A750(&qword_10063F190);
  __chkstk_darwin(v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRICollectionViewEmptySpaceType(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - v9;
  v11 = type metadata accessor for TTRICollectionViewGapHit(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TTRICollectionViewItemHit(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TTRICollectionViewHitTestResult(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(v1, (uint64_t)v19, v20);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19, v17);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10001F580((uint64_t)v19, (uint64_t)v13, type metadata accessor for TTRICollectionViewGapHit);
      v32 = 0x203A706147;
      v33 = 0xE500000000000000;
      v22._countAndFlagsBits = sub_100410AC8();
      object = v22._object;
      String.append(_:)(v22);
      swift_bridgeObjectRelease(object);
      v24 = v32;
      v25 = (uint64_t)v13;
      v26 = type metadata accessor for TTRICollectionViewGapHit;
    }
    else
    {
      sub_10001F580((uint64_t)v19, (uint64_t)v10, type metadata accessor for TTRICollectionViewEmptySpaceType);
      sub_10002B1E8((uint64_t)v10, (uint64_t)v7, type metadata accessor for TTRICollectionViewEmptySpaceType);
      v27 = sub_10002A750((uint64_t *)&unk_100654F50);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v7, 1, v27) == 1)
      {
        v24 = 0x6170537974706D65;
      }
      else
      {
        sub_1004116F0((uint64_t)v7, (uint64_t)v4);
        v32 = 0;
        v33 = 0xE000000000000000;
        _StringGuts.grow(_:)(22);
        swift_bridgeObjectRelease(v33);
        v32 = 0xD000000000000013;
        v33 = 0x8000000100578AD0;
        v28._countAndFlagsBits = Optional.descriptionOrNil.getter(v2);
        v29 = v28._object;
        String.append(_:)(v28);
        swift_bridgeObjectRelease(v29);
        v30._countAndFlagsBits = 41;
        v30._object = (void *)0xE100000000000000;
        String.append(_:)(v30);
        v24 = v32;
        sub_1000073A0((uint64_t)v4, &qword_10063F190);
      }
      v26 = type metadata accessor for TTRICollectionViewEmptySpaceType;
      v25 = (uint64_t)v10;
    }
  }
  else
  {
    sub_10001F580((uint64_t)v19, (uint64_t)v16, type metadata accessor for TTRICollectionViewItemHit);
    v24 = sub_10041047C();
    v25 = (uint64_t)v16;
    v26 = type metadata accessor for TTRICollectionViewItemHit;
  }
  sub_10001F544(v25, v26);
  return v24;
}

uint64_t sub_10041047C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  Swift::String v3;
  void *object;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  v1 = sub_10002A750((uint64_t *)&unk_100654F80);
  v2 = (_QWORD *)swift_allocObject(v1, 48, 7);
  *((_OWORD *)v2 + 1) = xmmword_100520250;
  v3._countAndFlagsBits = sub_100410AC8();
  object = v3._object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(object);
  v2[4] = 0x203A746948;
  v2[5] = 0xE500000000000000;
  v5 = sub_10002A750((uint64_t *)&unk_10065A230);
  v6 = swift_allocObject(v5, 64, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1005201E0;
  v7 = type metadata accessor for TTRICollectionViewItemHit(0);
  v8 = 7368564;
  if (*(_BYTE *)(v0 + *(int *)(v7 + 20)))
    v8 = 0x6D6F74746F62;
  v9 = 0xE300000000000000;
  if (*(_BYTE *)(v0 + *(int *)(v7 + 20)))
    v9 = 0xE600000000000000;
  *(_QWORD *)(v6 + 32) = v8;
  *(_QWORD *)(v6 + 40) = v9;
  v10 = 0x656C6464696DLL;
  if (*(_BYTE *)(v0 + *(int *)(v7 + 24)))
  {
    v11 = 0xE600000000000000;
  }
  else
  {
    v10 = 0;
    v11 = 0;
  }
  *(_QWORD *)(v6 + 48) = v10;
  *(_QWORD *)(v6 + 56) = v11;
  v12 = sub_10002A750((uint64_t *)&unk_1006582D0);
  v13 = sub_100023FEC(&qword_10065A240, (uint64_t *)&unk_1006582D0, (uint64_t)&protocol conformance descriptor for [A]);
  v14 = Sequence.removingNils<A>()(v12, &type metadata for String, v13);
  swift_bridgeObjectRelease(v6);
  v15 = sub_10002A750(&qword_1006466D0);
  v16 = sub_100023FEC((unint64_t *)&qword_10064C980, &qword_1006466D0, (uint64_t)&protocol conformance descriptor for [A]);
  v17 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v15, v16);
  v19 = v18;
  swift_bridgeObjectRelease(v14);
  v20._countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v19);
  v22 = v2[2];
  v21 = v2[3];
  if (v22 >= v21 >> 1)
    v2 = sub_10001D840((_QWORD *)(v21 > 1), v22 + 1, 1, v2);
  v2[2] = v22 + 1;
  v23 = &v2[2 * v22];
  v23[4] = 0x2020202020;
  v23[5] = 0xE500000000000000;
  v24 = BidirectionalCollection<>.joined(separator:)(10, 0xE100000000000000, v15, v16);
  swift_bridgeObjectRelease(v2);
  return v24;
}

uint64_t sub_1004106E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  unint64_t v10;
  Swift::String v11;
  void *object;
  Swift::String v13;
  unint64_t v15;
  unint64_t v16;

  v1 = v0;
  v2 = sub_10002A750(&qword_10063F190);
  __chkstk_darwin(v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRICollectionViewEmptySpaceType(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(v1, (uint64_t)v7, v8);
  v9 = sub_10002A750((uint64_t *)&unk_100654F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9) == 1)
    return 0x6170537974706D65;
  sub_1004116F0((uint64_t)v7, (uint64_t)v4);
  v15 = 0;
  v16 = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(v16);
  v15 = 0xD000000000000013;
  v16 = 0x8000000100578AD0;
  v11._countAndFlagsBits = Optional.descriptionOrNil.getter(v2);
  object = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(object);
  v13._countAndFlagsBits = 41;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  v10 = v15;
  sub_1000073A0((uint64_t)v4, &qword_10063F190);
  return v10;
}

uint64_t sub_10041086C()
{
  _BYTE *v0;

  if (*v0)
    return 0x6D6F74746F62;
  else
    return 7368564;
}

uint64_t sub_10041089C()
{
  uint64_t v0;
  Swift::String v1;
  void *object;
  Swift::String v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  _StringGuts.grow(_:)(46);
  swift_bridgeObjectRelease(0xE000000000000000);
  v1._countAndFlagsBits = sub_100410AC8();
  object = v1._object;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(object);
  v3._countAndFlagsBits = 0x6F6974726F70202CLL;
  v3._object = (void *)0xEB00000000203A6ELL;
  String.append(_:)(v3);
  v4 = type metadata accessor for TTRICollectionViewItemHit(0);
  if (*(_BYTE *)(v0 + *(int *)(v4 + 20)))
    v5 = 0x6D6F74746F62;
  else
    v5 = 7368564;
  if (*(_BYTE *)(v0 + *(int *)(v4 + 20)))
    v6 = 0xE600000000000000;
  else
    v6 = 0xE300000000000000;
  v7 = v6;
  String.append(_:)(*(Swift::String *)&v5);
  swift_bridgeObjectRelease(v6);
  v8._object = (void *)0x8000000100578AF0;
  v8._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v8);
  if (*(_BYTE *)(v0 + *(int *)(v4 + 24)))
    v9 = 1702195828;
  else
    v9 = 0x65736C6166;
  if (*(_BYTE *)(v0 + *(int *)(v4 + 24)))
    v10 = 0xE400000000000000;
  else
    v10 = 0xE500000000000000;
  v11 = v10;
  String.append(_:)(*(Swift::String *)&v9);
  swift_bridgeObjectRelease(v10);
  return 0x746968206D657449;
}

uint64_t sub_1004109F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;

  if ((sub_100410A6C() & 1) != 0
    && *(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(a3 + 20)))
  {
    v6 = *(_BYTE *)(a1 + *(int *)(a3 + 24)) ^ *(_BYTE *)(a2 + *(int *)(a3 + 24)) ^ 1;
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_100410A70()
{
  Swift::String v0;
  void *object;

  v0._countAndFlagsBits = sub_100410AC8();
  object = v0._object;
  String.append(_:)(v0);
  swift_bridgeObjectRelease(object);
  return 0x203A706147;
}

uint64_t sub_100410AC8()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  Swift::String v5;
  void *v6;
  Swift::String v7;
  uint64_t v8;
  Swift::String v9;
  void *v10;

  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(0xE000000000000000);
  v0 = type metadata accessor for IndexPath(0);
  v1 = sub_100117768((unint64_t *)&qword_100644910, (uint64_t)&protocol conformance descriptor for IndexPath);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v0, v1);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 1030758444;
  v4._object = (void *)0xE400000000000000;
  String.append(_:)(v4);
  type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v0, v1);
  v6 = v5._object;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(v6);
  v7._countAndFlagsBits = 1029972012;
  v7._object = (void *)0xE400000000000000;
  String.append(_:)(v7);
  v8 = sub_10002A750(&qword_100646950);
  v9._countAndFlagsBits = Optional.descriptionOrNil.getter(v8);
  v10 = v9._object;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v10);
  return 4025961;
}

uint64_t sub_100410C08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v34 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
  v4 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v32 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750(&qword_10065B708);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_10063F190);
  __chkstk_darwin(v9);
  v33 = (uint64_t)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - v12;
  v14 = type metadata accessor for TTRICollectionViewEmptySpaceType(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10002A750(&qword_10065B710);
  __chkstk_darwin(v17);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (uint64_t)&v19[*(int *)(v20 + 48)];
  sub_10002B1E8(a1, (uint64_t)v19, type metadata accessor for TTRICollectionViewEmptySpaceType);
  sub_10002B1E8(a2, v21, type metadata accessor for TTRICollectionViewEmptySpaceType);
  v22 = sub_10002A750((uint64_t *)&unk_100654F50);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48);
  if (v23((uint64_t)v19, 1, v22) == 1)
  {
    if (v23(v21, 1, v22) == 1)
      goto LABEL_14;
    goto LABEL_6;
  }
  sub_10002B1E8((uint64_t)v19, (uint64_t)v16, type metadata accessor for TTRICollectionViewEmptySpaceType);
  if (v23(v21, 1, v22) != 1)
  {
    sub_1004116F0(v21, (uint64_t)v13);
    v24 = (uint64_t)&v8[*(int *)(v6 + 48)];
    sub_1004116F0((uint64_t)v16, (uint64_t)v8);
    sub_10000735C((uint64_t)v13, v24, &qword_10063F190);
    v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    v26 = v34;
    if (v25((uint64_t)v8, 1, v34) == 1)
    {
      sub_1000073A0((uint64_t)v13, &qword_10063F190);
      if (v25(v24, 1, v26) == 1)
      {
        sub_1000073A0((uint64_t)v8, &qword_10063F190);
LABEL_14:
        sub_10001F544((uint64_t)v19, type metadata accessor for TTRICollectionViewEmptySpaceType);
        return 1;
      }
    }
    else
    {
      v27 = v33;
      sub_10000735C((uint64_t)v8, v33, &qword_10063F190);
      if (v25(v24, 1, v26) != 1)
      {
        v28 = v32;
        sub_10001F580(v24, v32, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
        v29 = sub_1004AE9D0(v27, v28);
        sub_10001F544(v28, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
        sub_1000073A0((uint64_t)v13, &qword_10063F190);
        sub_10001F544(v27, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
        sub_1000073A0((uint64_t)v8, &qword_10063F190);
        if ((v29 & 1) != 0)
          goto LABEL_14;
LABEL_15:
        sub_10001F544((uint64_t)v19, type metadata accessor for TTRICollectionViewEmptySpaceType);
        return 0;
      }
      sub_1000073A0((uint64_t)v13, &qword_10063F190);
      sub_10001F544(v27, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
    }
    sub_1000073A0((uint64_t)v8, &qword_10065B708);
    goto LABEL_15;
  }
  sub_1000073A0((uint64_t)v16, &qword_10063F190);
LABEL_6:
  sub_1000073A0((uint64_t)v19, &qword_10065B710);
  return 0;
}

uint64_t sub_100410FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  uint64_t (*v25)(uint64_t);
  char v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a1;
  v35 = a2;
  v2 = type metadata accessor for TTRICollectionViewEmptySpaceType(0);
  __chkstk_darwin(v2);
  v33 = (uint64_t)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TTRICollectionViewGapHit(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRICollectionViewItemHit(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRICollectionViewHitTestResult(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v32 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v32 - v17;
  v19 = sub_10002A750(&qword_10065B700);
  __chkstk_darwin(v19);
  v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (uint64_t)&v21[*(int *)(v22 + 48)];
  sub_10002B1E8(v34, (uint64_t)v21, type metadata accessor for TTRICollectionViewHitTestResult);
  sub_10002B1E8(v35, v23, type metadata accessor for TTRICollectionViewHitTestResult);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v21, v10);
  if (!EnumCaseMultiPayload)
  {
    sub_10002B1E8((uint64_t)v21, (uint64_t)v18, type metadata accessor for TTRICollectionViewHitTestResult);
    if (!swift_getEnumCaseMultiPayload(v23, v10))
    {
      sub_10001F580(v23, (uint64_t)v9, type metadata accessor for TTRICollectionViewItemHit);
      if (sub_1004113C4((uint64_t)v18, (uint64_t)v9)
        && v18[*(int *)(v7 + 20)] == v9[*(int *)(v7 + 20)]
        && v18[*(int *)(v7 + 24)] == v9[*(int *)(v7 + 24)])
      {
        sub_10001F544((uint64_t)v9, type metadata accessor for TTRICollectionViewItemHit);
        sub_10001F544((uint64_t)v18, type metadata accessor for TTRICollectionViewItemHit);
        sub_10001F544((uint64_t)v21, type metadata accessor for TTRICollectionViewHitTestResult);
        v26 = 1;
        return v26 & 1;
      }
      sub_10001F544((uint64_t)v9, type metadata accessor for TTRICollectionViewItemHit);
      sub_10001F544((uint64_t)v18, type metadata accessor for TTRICollectionViewItemHit);
      sub_10001F544((uint64_t)v21, type metadata accessor for TTRICollectionViewHitTestResult);
      goto LABEL_13;
    }
    v28 = type metadata accessor for TTRICollectionViewItemHit;
    v29 = (uint64_t)v18;
LABEL_12:
    sub_10001F544(v29, v28);
    sub_1000073A0((uint64_t)v21, &qword_10065B700);
LABEL_13:
    v26 = 0;
    return v26 & 1;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_10002B1E8((uint64_t)v21, (uint64_t)v12, type metadata accessor for TTRICollectionViewHitTestResult);
    if (swift_getEnumCaseMultiPayload(v23, v10) == 2)
    {
      v25 = type metadata accessor for TTRICollectionViewEmptySpaceType;
      v30 = v33;
      sub_10001F580(v23, v33, type metadata accessor for TTRICollectionViewEmptySpaceType);
      v26 = sub_100410C08((uint64_t)v12, v30);
      sub_10001F544(v30, type metadata accessor for TTRICollectionViewEmptySpaceType);
      v27 = (uint64_t)v12;
      goto LABEL_9;
    }
    v28 = type metadata accessor for TTRICollectionViewEmptySpaceType;
    v29 = (uint64_t)v12;
    goto LABEL_12;
  }
  sub_10002B1E8((uint64_t)v21, (uint64_t)v15, type metadata accessor for TTRICollectionViewHitTestResult);
  if (swift_getEnumCaseMultiPayload(v23, v10) != 1)
  {
    v28 = type metadata accessor for TTRICollectionViewGapHit;
    v29 = (uint64_t)v15;
    goto LABEL_12;
  }
  v25 = type metadata accessor for TTRICollectionViewGapHit;
  sub_10001F580(v23, (uint64_t)v6, type metadata accessor for TTRICollectionViewGapHit);
  v26 = sub_1004113C4((uint64_t)v15, (uint64_t)v6);
  sub_10001F544((uint64_t)v6, type metadata accessor for TTRICollectionViewGapHit);
  v27 = (uint64_t)v15;
LABEL_9:
  sub_10001F544(v27, v25);
  sub_10001F544((uint64_t)v21, type metadata accessor for TTRICollectionViewHitTestResult);
  return v26 & 1;
}

uint64_t type metadata accessor for TTRICollectionViewGapHit(uint64_t a1)
{
  return sub_100007328(a1, qword_10065B770, (uint64_t)&nominal type descriptor for TTRICollectionViewGapHit);
}

BOOL sub_1004113C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_100646948);
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v28 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v28 - v18;
  if ((static IndexPath.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v29 = v7;
  v20 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  if ((static IndexPath.== infix(_:_:)(a1 + *(int *)(v20 + 20), a2 + *(int *)(v20 + 20)) & 1) == 0)
    return 0;
  sub_10000735C(a1 + *(int *)(v20 + 24), (uint64_t)v19, &qword_100646950);
  sub_10000735C(a2 + *(int *)(v20 + 24), (uint64_t)v16, &qword_100646950);
  v21 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_10000735C((uint64_t)v19, (uint64_t)v10, &qword_100646950);
  sub_10000735C((uint64_t)v16, v21, &qword_100646950);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22((uint64_t)v10, 1, v4) == 1)
  {
    sub_1000073A0((uint64_t)v16, &qword_100646950);
    sub_1000073A0((uint64_t)v19, &qword_100646950);
    if (v22(v21, 1, v4) == 1)
    {
      sub_1000073A0((uint64_t)v10, &qword_100646950);
      return 1;
    }
    goto LABEL_8;
  }
  sub_10000735C((uint64_t)v10, (uint64_t)v13, &qword_100646950);
  if (v22(v21, 1, v4) == 1)
  {
    sub_1000073A0((uint64_t)v16, &qword_100646950);
    sub_1000073A0((uint64_t)v19, &qword_100646950);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
LABEL_8:
    sub_1000073A0((uint64_t)v10, &qword_100646948);
    return 0;
  }
  v23 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v29, v21, v4);
  v24 = sub_100117768((unint64_t *)&qword_10063F648, (uint64_t)&protocol conformance descriptor for IndexPath);
  v25 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v23, v4, v24);
  v26 = *(void (**)(char *, uint64_t))(v5 + 8);
  v26(v23, v4);
  sub_1000073A0((uint64_t)v16, &qword_100646950);
  sub_1000073A0((uint64_t)v19, &qword_100646950);
  v26(v13, v4);
  sub_1000073A0((uint64_t)v10, &qword_100646950);
  return (v25 & 1) != 0;
}

uint64_t sub_1004116F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_10063F190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_100411738(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v4 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = v4;
    v7 = type metadata accessor for IndexPath(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v9((uint64_t *)((char *)a1 + *(int *)(v6 + 20)), (uint64_t *)((char *)a2 + *(int *)(v6 + 20)), v7);
    v10 = *(int *)(v6 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
    {
      v13 = sub_10002A750(&qword_100646950);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v11, (uint64_t *)v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_10041184C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  void (*v7)(uint64_t, uint64_t);

  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v7(a1, v2);
  v4 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  v7(a1 + *(int *)(v4 + 20), v2);
  v5 = a1 + *(int *)(v4 + 24);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v5, 1, v2);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v7)(v5, v2);
  return result;
}

char *sub_100411900(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(void *, const void *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(void *, const void *, uint64_t))(v5 + 16);
  v6(a1, a2, v4);
  v7 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  v6(&a1[*(int *)(v7 + 20)], &a2[*(int *)(v7 + 20)], v4);
  v8 = *(int *)(v7 + 24);
  v9 = &a1[v8];
  v10 = &a2[v8];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4))
  {
    v11 = sub_10002A750(&qword_100646950);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v6(v9, v10, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v9, 0, 1, v4);
  }
  return a1;
}

char *sub_1004119E8(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(void *, const void *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t (*v11)(const void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(void *, const void *, uint64_t))(v5 + 24);
  v6(a1, a2, v4);
  v7 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  v6(&a1[*(int *)(v7 + 20)], &a2[*(int *)(v7 + 20)], v4);
  v8 = *(int *)(v7 + 24);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v5 + 48);
  v12 = v11(&a1[v8], 1, v4);
  v13 = v11(v10, 1, v4);
  if (!v12)
  {
    if (!v13)
    {
      v6(v9, v10, v4);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_10002A750(&qword_100646950);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v9, v10, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v9, 0, 1, v4);
  return a1;
}

char *sub_100411B1C(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(void *, const void *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(void *, const void *, uint64_t))(v5 + 32);
  v6(a1, a2, v4);
  v7 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  v6(&a1[*(int *)(v7 + 20)], &a2[*(int *)(v7 + 20)], v4);
  v8 = *(int *)(v7 + 24);
  v9 = &a1[v8];
  v10 = &a2[v8];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4))
  {
    v11 = sub_10002A750(&qword_100646950);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v6(v9, v10, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v9, 0, 1, v4);
  }
  return a1;
}

char *sub_100411C04(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(void *, const void *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t (*v11)(const void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(void *, const void *, uint64_t))(v5 + 40);
  v6(a1, a2, v4);
  v7 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  v6(&a1[*(int *)(v7 + 20)], &a2[*(int *)(v7 + 20)], v4);
  v8 = *(int *)(v7 + 24);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v5 + 48);
  v12 = v11(&a1[v8], 1, v4);
  v13 = v11(v10, 1, v4);
  if (!v12)
  {
    if (!v13)
    {
      v6(v9, v10, v4);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_10002A750(&qword_100646950);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v9, v10, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v9, 0, 1, v4);
  return a1;
}

uint64_t sub_100411D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100411D44);
}

uint64_t sub_100411D44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100411D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100411D8C);
}

uint64_t sub_100411D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_100411DCC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for TTRICollectionViewHitIndexPaths(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TTRICollectionViewItemHit.Portion(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100411E80 + 4 * byte_100534C25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100411EB4 + 4 * asc_100534C20[v4]))();
}

uint64_t sub_100411EB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100411EBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100411EC4);
  return result;
}

uint64_t sub_100411ED0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100411ED8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100411EDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100411EE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRICollectionViewItemHit.Portion()
{
  return &type metadata for TTRICollectionViewItemHit.Portion;
}

unint64_t sub_100411F04()
{
  unint64_t result;

  result = qword_10065B7A8;
  if (!qword_10065B7A8)
  {
    result = swift_getWitnessTable(&unk_100534E8C, &type metadata for TTRICollectionViewItemHit.Portion);
    atomic_store(result, (unint64_t *)&qword_10065B7A8);
  }
  return result;
}

uint64_t sub_100411F48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10065B7B0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10065B7B0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

_QWORD *sub_100411FD8(void *a1, void *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  _QWORD *result;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t (*v36)(void *, void *, char *);
  void *v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t AssociatedConformanceWitness;
  uint64_t v53;
  char *v54;
  void *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void *v61;
  uint64_t *v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t *v82;
  _QWORD aBlock[7];

  v80 = a1;
  v6 = *(_QWORD *)((swift_isaMask & *v3) + 0x50);
  v75 = *(_QWORD *)((swift_isaMask & *v3) + 0x58);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v75, v6, &unk_1005987EC, &unk_1005987FC);
  v73 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v74 = AssociatedTypeWitness;
  __chkstk_darwin(AssociatedTypeWitness);
  v71 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v72 = (char *)&v66 - v10;
  v11 = type metadata accessor for IndexPath(0);
  v78 = *(_QWORD *)(v11 - 8);
  v79 = v11;
  __chkstk_darwin(v11);
  v77 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v76 = (uint64_t)&v66 - v14;
  v15 = type metadata accessor for Optional(0, v6);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v66 - v17;
  v19 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v20);
  v69 = v21;
  v70 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v66 - v23;
  v82 = v3;
  v25 = (char *)v3 + qword_10065B7C8;
  result = (_QWORD *)swift_unknownObjectWeakLoadStrong((char *)v3 + qword_10065B7C8);
  if (!result)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v29 = result;
  v81 = a3;
  sub_1000F1E70(a3, v27, v28, (uint64_t)v18);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    return _swiftEmptyArrayStorage;
  }
  v68 = v19;
  v67 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v67(v24, v18, v6);
  result = (_QWORD *)swift_unknownObjectWeakLoadStrong(v25);
  if (!result)
    goto LABEL_21;
  v32 = result;
  swift_getObjectType(a2, v31);
  v33 = (uint64_t *)sub_1000E32B0();

  v34 = sub_1002A16D0(v33);
  v35 = v82;
  if (!v34)
    v34 = sub_1004125C8(v82, a2);
  objc_msgSend(a2, "setLocalContext:", v34);
  v36 = *(uint64_t (**)(void *, void *, char *))((char *)v35 + qword_10065B7D0);
  result = (_QWORD *)swift_unknownObjectWeakLoadStrong(v25);
  if (result)
  {
    v37 = result;
    v38 = (void *)sub_1000E32B0();

    v39 = v24;
    v30 = v36(v38, a2, v24);

    if ((unint64_t)v30 >> 62)
    {
      if (v30 < 0)
        v64 = v30;
      else
        v64 = v30 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v30);
      v65 = _CocoaArrayWrapper.endIndex.getter(v64);
      swift_bridgeObjectRelease(v30);
      v40 = v81;
      v41 = v82;
      if (v65)
        goto LABEL_10;
    }
    else
    {
      v40 = v81;
      v41 = v82;
      if (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_10:
        v81 = v30;
        v42 = v77;
        v43 = v78;
        v44 = v79;
        (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v77, v40, v79);
        swift_beginAccess(v34 + qword_1006738F8, aBlock, 33, 0);
        v45 = v34;
        v46 = (uint64_t)v39;
        v47 = v41;
        v48 = v76;
        sub_100481DC4(v76, v42);
        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v48, v44);
        swift_endAccess(aBlock);
        sub_100412D90();
        if ((sub_1004126A8(v46, v40, v80) & 1) != 0)
        {
          v49 = v75;
          v50 = v71;
          (*(void (**)(uint64_t, uint64_t))(v75 + 24))(v6, v75);
          swift_beginAccess(v45 + qword_100673900, aBlock, 33, 0);
          v51 = v74;
          AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v49, v6, v74, &unk_1005987EC, &unk_1005987F4);
          v53 = type metadata accessor for Set(0, v51, AssociatedConformanceWitness);
          v54 = v72;
          Set.insert(_:)(v72, v50, v53);
          swift_endAccess(aBlock);
          (*(void (**)(char *, uint64_t))(v73 + 8))(v54, v51);
          v55 = (void *)objc_opt_self(UIView);
          v56 = v68;
          v57 = v70;
          (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v70, v46, v6);
          v58 = *(unsigned __int8 *)(v56 + 80);
          v59 = (v58 + 40) & ~v58;
          v60 = (char *)swift_allocObject(&unk_100606940, v59 + v69, v58 | 7);
          *((_QWORD *)v60 + 2) = v6;
          *((_QWORD *)v60 + 3) = v49;
          *((_QWORD *)v60 + 4) = v47;
          v67(&v60[v59], v57, v6);
          aBlock[4] = sub_100413890;
          aBlock[5] = v60;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100006378;
          aBlock[3] = &unk_100606958;
          v61 = _Block_copy(aBlock);
          v62 = v47;
          swift_release();
          objc_msgSend(v55, "animateWithDuration:animations:", v61, 0.2);
          _Block_release(v61);
          v63 = swift_release();
          (*(void (**)(uint64_t, uint64_t, __n128))(v56 + 8))(v46, v6, v63);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v46, v6);
          swift_release();
        }
        return (_QWORD *)v81;
      }
    }
    (*(void (**)(char *, uint64_t))(v68 + 8))(v24, v6);
    swift_release();
    return (_QWORD *)v30;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1004125C8(uint64_t *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = swift_isaMask;
  result = swift_unknownObjectWeakLoadStrong((char *)a1 + qword_10065B7C8);
  if (result)
  {
    v7 = (void *)result;
    v8 = type metadata accessor for TTRIAnyTreeViewDragSessionContext(0, *(_QWORD *)((v4 & v3) + 0x50), *(_QWORD *)((v4 & v3) + 0x58), v6);
    v9 = sub_1000E32B0();

    v10 = swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
    sub_100412F98(v9);
    objc_msgSend(a2, "setLocalContext:", v10);
    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10041266C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  sub_100412F98(a1);
  return v3;
}

uint64_t sub_1004126A8(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  BOOL v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  id v24;
  void *v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  _BYTE v29[16];

  v7 = *(_QWORD *)((swift_isaMask & *v3) + 0x50);
  v8 = type metadata accessor for Optional(0, v7);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v29[-v10];
  v12 = (char *)v3 + qword_10065B7C8;
  result = swift_unknownObjectWeakLoadStrong((char *)v3 + qword_10065B7C8);
  if (!result)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    return result;
  }
  v17 = (void *)result;
  v18 = sub_1000E44A0(a1, v14, v15, v16);

  if (!v18)
    return 0;
  result = swift_unknownObjectWeakLoadStrong(v12);
  if (!result)
    goto LABEL_16;
  v19 = (void *)result;
  v20 = *(_QWORD *)(v7 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v20 + 16))(v11, a1, v7);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v11, 0, 1, v7);
  v21 = sub_1000E8E10((uint64_t)v11);
  v23 = v22;

  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
  result = 0;
  if ((v23 & 1) == 0 && v21 >= 1)
  {
    v24 = objc_msgSend(a3, "indexPathsForSelectedRows");
    if (v24)
    {
      v25 = v24;
      v26 = type metadata accessor for IndexPath(0);
      v27 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v26);

    }
    else
    {
      v27 = _swiftEmptyArrayStorage;
    }
    __chkstk_darwin(v24);
    *(_QWORD *)&v29[-16] = a2;
    if (sub_10031B70C((uint64_t (*)(char *))sub_1004138B0, (_BOOL8)&v29[-32], (uint64_t)v27))
    {
      v28 = v27[2];
      swift_bridgeObjectRelease(v27);
      if (v28 > 1)
        return 0;
    }
    else
    {
      swift_bridgeObjectRelease(v27);
    }
    return 1;
  }
  return result;
}

void sub_1004128A0(uint64_t a1, uint64_t a2)
{
  uint64_t Strong;
  id v4;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + qword_10065B7C8);
  if (Strong)
  {
    v4 = (id)Strong;
    sub_1001000A4(a2, 100);

  }
  else
  {
    __break(1u);
  }
}

Class sub_1004128F8(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  _QWORD *v15;
  Class isa;
  uint64_t v18;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v13 = a3;
  swift_unknownObjectRetain(a4);
  v14 = a1;
  v15 = sub_100411FD8(v13, a4, (uint64_t)v12);

  swift_unknownObjectRelease(a4);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_100041E10();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v15);
  return isa;
}

Class sub_1004129F0(void *a1, double a2, double a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  _QWORD *v19;
  Class isa;
  uint64_t v22;

  v13 = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a7);
  v17 = a5;
  swift_unknownObjectRetain(a6);
  v18 = a1;
  v19 = sub_100413108(a6, (uint64_t)v16, a2, a3);

  swift_unknownObjectRelease(a6);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_100041E10();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v19);
  return isa;
}

id sub_100412AFC(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v15;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v11 = a3;
  v12 = a1;
  v13 = (void *)sub_10041347C((uint64_t)v10);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v13;
}

void sub_100412BB0(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_1002A2390(a1, a2, a3, a4, sub_100413610);
}

void sub_100412BBC(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_1002A2390(a1, a2, a3, a4, sub_1004136A4);
}

uint64_t sub_100412BC8(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6;
  id v7;
  char v8;

  v6 = a3;
  swift_unknownObjectRetain(a4);
  v7 = a1;
  v8 = sub_100413730(a4);

  swift_unknownObjectRelease(a4);
  return v8 & 1;
}

void sub_100412C28()
{
  sub_1004137B0();
}

uint64_t sub_100412C44(uint64_t a1)
{
  swift_unknownObjectWeakDestroy(a1 + qword_10065B7C8);
  swift_release(*(_QWORD *)(a1 + qword_10065B7D0 + 8));
  swift_release(*(_QWORD *)(a1 + qword_10065B7D8 + 8));
  swift_release(*(_QWORD *)(a1 + qword_10065B7E0 + 8));
  swift_release(*(_QWORD *)(a1 + qword_10065B7E8 + 8));
  swift_release(*(_QWORD *)(a1 + qword_10065B7F0 + 8));
  swift_release(*(_QWORD *)(a1 + qword_10065B7F8 + 8));
  swift_release(*(_QWORD *)(a1 + qword_10065B800 + 8));
  return swift_unknownObjectRelease(*(_QWORD *)(a1 + qword_10065B808));
}

uint64_t sub_100412D08(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    result = swift_initClassMetadata2(a1, 0, 4, v4, a1 + 96);
    if (!result)
      return 0;
  }
  return result;
}

double sub_100412D90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  double result;
  uint64_t v15;
  _BYTE v16[24];
  uint64_t v17;

  v1 = v0;
  if (qword_10063D790 != -1)
    swift_once(&qword_10063D790, sub_100411F48);
  v2 = type metadata accessor for Logger(0);
  sub_100012DC4(v2, (uint64_t)qword_10065B7B0);
  v3 = swift_retain();
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    *(_DWORD *)v6 = 136315138;
    v17 = v7;
    v8 = (uint64_t *)(v1 + qword_1006738F8);
    swift_beginAccess(v1 + qword_1006738F8, v16, 0, 0);
    v9 = *v8;
    type metadata accessor for IndexPath(0);
    sub_1004137DC();
    v10 = swift_bridgeObjectRetain(v9);
    v11 = Set.description.getter(v10);
    v13 = v12;
    swift_bridgeObjectRelease(v9);
    v15 = sub_100027E40(v11, v13, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, v16, v6 + 4, v6 + 12);
    swift_release();
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "TTRIAnyTreeViewDragSessionContext: draggedIndexPaths updated: %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, &type metadata for Any[8]);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t *sub_100412F98(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  v3 = *v1;
  UUID.init()();
  *(uint64_t *)((char *)v1 + qword_1006738F8) = (uint64_t)&_swiftEmptySetSingleton;
  v4 = qword_100673900;
  v7 = v3 + 80;
  v6 = *(_QWORD *)(v3 + 80);
  v5 = *(_QWORD *)(v7 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v5, v6, &unk_1005987EC, &unk_1005987FC);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v5, v6, AssociatedTypeWitness, &unk_1005987EC, &unk_1005987F4);
  *(uint64_t *)((char *)v1 + v4) = Set.init()(AssociatedTypeWitness, AssociatedConformanceWitness);
  *(uint64_t *)((char *)v1 + qword_1006738F0) = a1;
  return v1;
}

uint64_t sub_100413064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_1006738E8;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_1006738F8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_100673900));
  return v0;
}

uint64_t sub_1004130D8()
{
  uint64_t v0;

  sub_100413064();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for TTRIAnyTreeViewDragSessionContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIAnyTreeViewDragSessionContext);
}

_QWORD *sub_100413108(uint64_t a1, uint64_t a2, double a3, double a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  _QWORD *result;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char v32;
  uint64_t v33;
  void *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t (*v37)(void *, uint64_t, char *, double, double);
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE v56[24];

  v5 = v4;
  v55 = a1;
  v9 = swift_isaMask & *v4;
  v10 = type metadata accessor for IndexPath(0);
  v52 = *(_QWORD *)(v10 - 8);
  v53 = v10;
  __chkstk_darwin(v10);
  v51 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v50 = (uint64_t)&v49 - v13;
  v14 = *(_QWORD *)(v9 + 80);
  v15 = type metadata accessor for Optional(0, v14);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v49 - v17;
  v19 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v20);
  v22 = (char *)&v49 - v21;
  v23 = (char *)v4 + qword_10065B7C8;
  result = (_QWORD *)swift_unknownObjectWeakLoadStrong((char *)v4 + qword_10065B7C8);
  if (!result)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v27 = result;
  v54 = a2;
  sub_1000F1E70(a2, v25, v26, (uint64_t)v18);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v14) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    return _swiftEmptyArrayStorage;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v18, v14);
  result = (_QWORD *)swift_unknownObjectWeakLoadStrong(v23);
  if (!result)
    goto LABEL_21;
  v31 = result;
  v32 = sub_1000F1FB0((uint64_t)v22, v28, v29, v30);

  if ((v32 & 1) != 0)
  {
LABEL_12:
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v14);
    return _swiftEmptyArrayStorage;
  }
  result = (_QWORD *)swift_unknownObjectWeakLoadStrong(v23);
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v34 = result;
  swift_getObjectType(v55, v33);
  v35 = (uint64_t *)sub_1000E32B0();

  v36 = sub_1002A16D0(v35);
  if (!v36)
    goto LABEL_12;
  v37 = *(uint64_t (**)(void *, uint64_t, char *, double, double))((char *)v5 + qword_10065B7D8);
  result = (_QWORD *)swift_unknownObjectWeakLoadStrong(v23);
  if (result)
  {
    v38 = result;
    v39 = (void *)sub_1000E32B0();

    v40 = v37(v39, v55, v22, a3, a4);
    if ((unint64_t)v40 >> 62)
    {
      if (v40 < 0)
        v47 = v40;
      else
        v47 = v40 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v40);
      v48 = _CocoaArrayWrapper.endIndex.getter(v47);
      swift_bridgeObjectRelease(v40);
      v41 = v54;
      if (v48)
        goto LABEL_11;
    }
    else
    {
      v41 = v54;
      if (*(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_11:
        v43 = v51;
        v42 = v52;
        v44 = v53;
        (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v51, v41, v53);
        swift_beginAccess(v36 + qword_1006738F8, v56, 33, 0);
        v45 = v50;
        sub_100481DC4(v50, v43);
        (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v45, v44);
        swift_endAccess(v56);
        sub_100412D90();
        v46 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v19 + 8))(v22, v14, v46);
        return (_QWORD *)v40;
      }
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v14);
    swift_release();
    return (_QWORD *)v40;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_10041347C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t (*v19)(void *, char *);
  void *v20;
  void *v21;
  uint64_t v22;

  v2 = v1;
  v4 = *(_QWORD *)((swift_isaMask & *v2) + 0x50);
  v5 = type metadata accessor for Optional(0, v4);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - v7;
  v9 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - v11;
  v13 = (char *)v2 + qword_10065B7C8;
  result = swift_unknownObjectWeakLoadStrong((char *)v2 + qword_10065B7C8);
  if (result)
  {
    v17 = (void *)result;
    sub_1000F1E70(a1, v15, v16, (uint64_t)v8);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v4) == 1)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return 0;
    }
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v8, v4);
    v19 = *(uint64_t (**)(void *, char *))((char *)v2 + qword_10065B7E0);
    result = swift_unknownObjectWeakLoadStrong(v13);
    if (result)
    {
      v20 = (void *)result;
      v21 = (void *)sub_1000E32B0();

      v18 = v19(v21, v12);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v4);
      return v18;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100413610(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void (*v4)(id, uint64_t);
  uint64_t Strong;
  void *v6;
  id v7;

  v3 = *(_QWORD *)(v1 + qword_10065B808);
  *(_QWORD *)(v1 + qword_10065B808) = a1;
  swift_unknownObjectRelease(v3);
  v4 = *(void (**)(id, uint64_t))(v1 + qword_10065B7E8);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + qword_10065B7C8);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = (id)sub_1000E32B0();
    swift_unknownObjectRetain(a1);

    v4(v7, a1);
  }
  else
  {
    __break(1u);
  }
}

void sub_1004136A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void (*v4)(id, uint64_t);
  uint64_t Strong;
  void *v6;
  id v7;

  v3 = *(_QWORD *)(v1 + qword_10065B808);
  *(_QWORD *)(v1 + qword_10065B808) = 0;
  swift_unknownObjectRelease(v3);
  v4 = *(void (**)(id, uint64_t))(v1 + qword_10065B7F0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + qword_10065B7C8);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = (id)sub_1000E32B0();

    v4(v7, a1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100413730(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(void *, uint64_t);
  uint64_t result;
  void *v5;
  void *v6;
  char v7;

  v3 = *(uint64_t (**)(void *, uint64_t))(v1 + qword_10065B7F8);
  result = swift_unknownObjectWeakLoadStrong(v1 + qword_10065B7C8);
  if (result)
  {
    v5 = (void *)result;
    v6 = (void *)sub_1000E32B0();

    v7 = v3(v6, a1);
    return v7 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1004137B0()
{
  _swift_stdlib_reportUnimplementedInitializer("Reminders.TTRIAnyTreeViewDragDelegate", 37, "init()", 6, 0);
  __break(1u);
}

unint64_t sub_1004137DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006463A0;
  if (!qword_1006463A0)
  {
    v1 = type metadata accessor for IndexPath(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for IndexPath, v1);
    atomic_store(result, (unint64_t *)&qword_1006463A0);
  }
  return result;
}

uint64_t sub_100413824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100413890()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80);
  sub_1004128A0(*(_QWORD *)(v0 + 32), v0 + ((v1 + 40) & ~v1));
}

uint64_t sub_1004138B0(uint64_t a1)
{
  uint64_t v1;

  return sub_10031F990(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1004138CC(uint64_t a1, uint64_t a2, __int16 a3)
{
  return sub_1004143AC(a1, a2, a3 & 0x1FF);
}

uint64_t sub_1004138D4(uint64_t a1, uint64_t a2, __int16 a3)
{
  return sub_1004147B0(a1, a2, a3 & 0x1FF);
}

uint64_t type metadata accessor for TTRDerivedUntouchedPresentationTreeMaker()
{
  return objc_opt_self(_TtC9Reminders40TTRDerivedUntouchedPresentationTreeMaker);
}

uint64_t sub_1004138FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10002A750(&qword_100641CD0);
  v3 = swift_allocObject(v2, 24, 7);
  *(_QWORD *)(v3 + 16) = a1;
  sub_100023FEC(&qword_1006588E0, &qword_100641CD0, (uint64_t)&protocol conformance descriptor for TTRTreeStorageDerivedUntouchedTree<A>);
  swift_retain();
  return v3;
}

_QWORD *sub_100413970(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  int64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v89;
  uint64_t v90;
  _BYTE *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _OWORD v111[8];
  _QWORD *v112;
  _BYTE v113[136];

  LODWORD(v105) = a2;
  v106 = a1;
  v110 = sub_10002A750(&qword_100658908);
  v107 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v109 = (uint64_t)&v89 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v90);
  v91 = (char *)&v89 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750((uint64_t *)&unk_100653A00);
  __chkstk_darwin(v4);
  v100 = (uint64_t)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRTemplatePublicLinkData(0);
  v98 = *(_QWORD *)(v6 - 8);
  v99 = v6;
  __chkstk_darwin(v6);
  v102 = (uint64_t)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750((uint64_t *)&unk_100665210);
  __chkstk_darwin(v8);
  v95 = (uint64_t)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRemindersListViewModel.HashtagsState(0);
  v92 = *(_QWORD *)(v10 - 8);
  v93 = v10;
  __chkstk_darwin(v10);
  v96 = (uint64_t)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v104 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v108 = (uint64_t)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v89 = (uint64_t *)((char *)&v89 - v15);
  __chkstk_darwin(v16);
  v103 = (uint64_t)&v89 - v17;
  __chkstk_darwin(v18);
  v101 = (uint64_t)&v89 - v19;
  __chkstk_darwin(v20);
  v97 = (uint64_t)&v89 - v21;
  __chkstk_darwin(v22);
  v94 = (uint64_t)&v89 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v89 - v25;
  v27 = sub_10002A750((uint64_t *)&unk_100657360);
  __chkstk_darwin(v27);
  v29 = (char *)&v89 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for TTRRemindersListTip(0);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v33 = (char *)&v89 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100454EEC(0, 5, 0, (unint64_t)_swiftEmptyArrayStorage);
  v35 = (int *)type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  sub_10000735C(v106 + v35[10], (uint64_t)v29, (uint64_t *)&unk_100657360);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) == 1)
  {
    sub_1000073A0((uint64_t)v29, (uint64_t *)&unk_100657360);
    v36 = v12;
    v37 = v104;
    v38 = v34;
  }
  else
  {
    sub_10001F580((uint64_t)v29, (uint64_t)v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListTip);
    sub_10002B1E8((uint64_t)v33, (uint64_t)v26, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListTip);
    swift_storeEnumTagMultiPayload(v26, v12, 9);
    v40 = *(_QWORD *)(v34 + 16);
    v39 = *(_QWORD *)(v34 + 24);
    v36 = v12;
    v38 = v34;
    if (v40 >= v39 >> 1)
      v38 = sub_100454EEC(v39 > 1, v40 + 1, 1, v34);
    v37 = v104;
    *(_QWORD *)(v38 + 16) = v40 + 1;
    sub_10001F580((uint64_t)v26, v38+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F544((uint64_t)v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListTip);
  }
  v41 = v106;
  v42 = v95;
  sub_10000735C(v106 + v35[24], v95, (uint64_t *)&unk_100665210);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v42, 1, v93) == 1)
  {
    sub_1000073A0(v42, (uint64_t *)&unk_100665210);
  }
  else
  {
    v43 = v42;
    v44 = v96;
    sub_10001F580(v43, v96, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.HashtagsState);
    v45 = v44;
    v46 = v94;
    sub_10002B1E8(v45, v94, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.HashtagsState);
    swift_storeEnumTagMultiPayload(v46, v36, 7);
    v48 = *(_QWORD *)(v38 + 16);
    v47 = *(_QWORD *)(v38 + 24);
    if (v48 >= v47 >> 1)
      v38 = sub_100454EEC(v47 > 1, v48 + 1, 1, v38);
    *(_QWORD *)(v38 + 16) = v48 + 1;
    sub_10001F580(v94, v38+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v48, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F544(v96, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.HashtagsState);
  }
  v49 = v100;
  sub_10000735C(v41 + v35[25], v100, (uint64_t *)&unk_100653A00);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v49, 1, v99) == 1)
  {
    sub_1000073A0(v49, (uint64_t *)&unk_100653A00);
  }
  else
  {
    v50 = v49;
    v51 = v102;
    sub_10001F580(v50, v102, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
    v52 = v51;
    v53 = v97;
    sub_10002B1E8(v52, v97, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
    swift_storeEnumTagMultiPayload(v53, v36, 8);
    v55 = *(_QWORD *)(v38 + 16);
    v54 = *(_QWORD *)(v38 + 24);
    if (v55 >= v54 >> 1)
      v38 = sub_100454EEC(v54 > 1, v55 + 1, 1, v38);
    *(_QWORD *)(v38 + 16) = v55 + 1;
    sub_10001F580(v97, v38+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v55, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F544(v102, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
  }
  if (*(_BYTE *)(v41 + v35[27]) == 1)
  {
    swift_storeEnumTagMultiPayload(v101, v36, 10);
    v57 = *(_QWORD *)(v38 + 16);
    v56 = *(_QWORD *)(v38 + 24);
    if (v57 >= v56 >> 1)
      v38 = sub_100454EEC(v56 > 1, v57 + 1, 1, v38);
    *(_QWORD *)(v38 + 16) = v57 + 1;
    sub_10001F580(v101, v38+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v57, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  if (*(_BYTE *)(v41 + v35[29]) == 1)
  {
    swift_storeEnumTagMultiPayload(v103, v36, 11);
    v59 = *(_QWORD *)(v38 + 16);
    v58 = *(_QWORD *)(v38 + 24);
    if (v59 >= v58 >> 1)
      v38 = sub_100454EEC(v58 > 1, v59 + 1, 1, v38);
    *(_QWORD *)(v38 + 16) = v59 + 1;
    sub_10001F580(v103, v38+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v59, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  v60 = sub_10032256C(v41, v105 & 0x1FF);
  if (v62)
  {
    v63 = (uint64_t)v89;
    *v89 = v60;
    *(_BYTE *)(v63 + 8) = v61 & 1;
    *(_BYTE *)(v63 + 9) = BYTE1(v61) & 1;
    *(_BYTE *)(v63 + 10) = BYTE2(v61) & 1;
    *(_QWORD *)(v63 + 16) = v62;
    swift_storeEnumTagMultiPayload(v63, v36, 5);
    v65 = *(_QWORD *)(v38 + 16);
    v64 = *(_QWORD *)(v38 + 24);
    if (v65 >= v64 >> 1)
      v38 = sub_100454EEC(v64 > 1, v65 + 1, 1, v38);
    *(_QWORD *)(v38 + 16) = v65 + 1;
    sub_10001F580(v63, v38+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v65, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  v66 = *(_QWORD *)(v38 + 16);
  if (v66)
  {
    v106 = v36;
    v112 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v38);
    sub_1003D7E2C(0, v66, 0);
    v67 = *(unsigned __int8 *)(v37 + 80);
    v105 = v38;
    v68 = v38 + ((v67 + 32) & ~v67);
    v69 = *(_QWORD *)(v37 + 72);
    v70 = v109;
    do
    {
      v71 = v108;
      sub_10002B1E8(v68, v108, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10002B1E8(v71, v70, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v72 = v110;
      v73 = v70 + *(int *)(v110 + 52);
      *(_QWORD *)v73 = 0;
      *(_QWORD *)(v73 + 8) = 0;
      *(_BYTE *)(v73 + 16) = 1;
      *(_QWORD *)(v70 + *(int *)(v72 + 56)) = _swiftEmptyArrayStorage;
      sub_10001F544(v71, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v74 = v112;
      if ((swift_isUniquelyReferenced_nonNull_native(v112) & 1) == 0)
      {
        sub_1003D7E2C(0, v74[2] + 1, 1);
        v74 = v112;
      }
      v76 = v74[2];
      v75 = v74[3];
      if (v76 >= v75 >> 1)
      {
        sub_1003D7E2C(v75 > 1, v76 + 1, 1);
        v74 = v112;
      }
      v74[2] = v76 + 1;
      v77 = *(unsigned __int8 *)(v107 + 80);
      v78 = (v77 + 32) & ~v77;
      v79 = *(_QWORD *)(v107 + 72);
      v80 = (uint64_t)v74 + v78 + v79 * v76;
      v70 = v109;
      sub_10000F614(v109, v80, &qword_100658908);
      v68 += v69;
      --v66;
    }
    while (v66);
    swift_bridgeObjectRelease_n(v105, 2);
    v81 = v90;
    v82 = v91;
    *v91 = 13;
    swift_storeEnumTagMultiPayload(v82, v81, 0);
    sub_1000D2B94(v111);
    sub_10000F614((uint64_t)v111, (uint64_t)v113, &qword_100649B60);
    v83 = v108;
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v82, v113, 0, 0, 0, 0, 0, 0);
    swift_storeEnumTagMultiPayload(v83, v106, 1);
    v84 = sub_10002A750(&qword_1006592F0);
    v85 = swift_allocObject(v84, v78 + v79, v77 | 7);
    *(_OWORD *)(v85 + 16) = xmmword_100520250;
    sub_10002B1E8(v83, v85 + v78, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v86 = v110;
    v87 = v85 + v78 + *(int *)(v110 + 52);
    *(_QWORD *)v87 = 0;
    *(_QWORD *)(v87 + 8) = 0;
    *(_BYTE *)(v87 + 16) = 1;
    *(_QWORD *)(v85 + v78 + *(int *)(v86 + 56)) = v74;
    sub_10001F544(v83, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  else
  {
    swift_bridgeObjectRelease(v38);
    return _swiftEmptyArrayStorage;
  }
  return (_QWORD *)v85;
}

uint64_t sub_1004143AC(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  void *v13;
  uint64_t *v14;
  uint64_t v16;

  v6 = sub_10002A750(&qword_100641CD0);
  v7 = swift_allocObject(v6, 24, 7);
  *(_QWORD *)(v7 + 16) = a1;
  swift_retain();
  swift_retain();
  v8 = sub_100413970(a2, a3 & 0x1FF);
  v9 = v8;
  if (v8[2])
  {
    sub_10002A750(&qword_1006445E8);
    v10 = TTRMutableTreeStorage.__allocating_init(topLevelNodeValues:)(v9);
    swift_release();
    v16 = v10;
    v11 = sub_10002A750(&qword_10065BA08);
    swift_allocObject(v11, 32, 7);
    v7 = TTRTreeStorageDerivedTreeWithDesignatedInitialItems.init(upstreamTree:designatedItemTree:)(v7, &v16);
    v12 = (unint64_t *)&unk_10065BA10;
    v13 = &protocol conformance descriptor for TTRTreeStorageDerivedTreeWithDesignatedInitialItems<A, B>;
    v14 = &qword_10065BA08;
  }
  else
  {
    swift_bridgeObjectRelease(v8);
    swift_release();
    v12 = &qword_1006588E0;
    v14 = &qword_100641CD0;
    v13 = &protocol conformance descriptor for TTRTreeStorageDerivedUntouchedTree<A>;
  }
  sub_100023FEC(v12, v14, (uint64_t)v13);
  return v7;
}

uint64_t sub_1004144D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  _OWORD v25[8];
  _BYTE v26[136];

  v4 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a2, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  LODWORD(a2) = v12[*(int *)(v10 + 112)];
  sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  if ((_DWORD)a2 == 1)
  {
    *v6 = 2;
    swift_storeEnumTagMultiPayload(v6, v4, 0);
    sub_1000D2B94(v25);
    sub_10000F614((uint64_t)v25, (uint64_t)v26, &qword_100649B60);
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v6, v26, 0, 0, 0, 0, 0, 0);
    swift_storeEnumTagMultiPayload(v9, v7, 1);
    v13 = &qword_10065BA48;
    v14 = sub_10002A750(&qword_10065BA48);
    swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
    v15 = TTRTreeStorageDerivedRerootedTree.init(upstreamTree:rootItem:)(a1, v9);
    v16 = (unint64_t *)&unk_10065BA50;
  }
  else
  {
    v17 = sub_10002A750(&qword_10065BA30);
    v18 = swift_allocObject(v17, 24, 7);
    *(_QWORD *)(v18 + 16) = a1;
    *v6 = 2;
    swift_storeEnumTagMultiPayload(v6, v4, 0);
    sub_1000D2B94(v25);
    sub_10000F614((uint64_t)v25, (uint64_t)v26, &qword_100649B60);
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v6, v26, 0, 0, 0, 0, 0, 0);
    swift_storeEnumTagMultiPayload(v9, v7, 1);
    v13 = &qword_10065BA38;
    v19 = sub_10002A750(&qword_10065BA38);
    swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
    v15 = TTRTreeStorageDerivedRerootedTree.init(upstreamTree:rootItem:)(v18, v9);
    v16 = (unint64_t *)&unk_10065BA40;
  }
  v20 = sub_100023FEC(v16, v13, (uint64_t)&protocol conformance descriptor for TTRTreeStorageDerivedRerootedTree<A>);
  v21 = sub_10002A750(&qword_100641C88);
  v22 = swift_allocObject(v21, 32, 7);
  *(_QWORD *)(v22 + 16) = v15;
  *(_QWORD *)(v22 + 24) = v20;
  swift_retain();
  return v22;
}

uint64_t sub_1004147B0(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  void *v14;
  uint64_t *v15;
  uint64_t v17;

  v6 = sub_10002A750(&qword_100641CD0);
  v7 = swift_allocObject(v6, 24, 7);
  *(_QWORD *)(v7 + 16) = a1;
  swift_retain();
  v8 = sub_1004144D4(v7, a2);
  v9 = sub_100413970(a2, a3 & 0x1FF);
  v10 = v9;
  if (v9[2])
  {
    sub_10002A750(&qword_1006445E8);
    v11 = TTRMutableTreeStorage.__allocating_init(topLevelNodeValues:)(v10);
    swift_release();
    v17 = v11;
    v12 = sub_10002A750(&qword_10065BA18);
    swift_allocObject(v12, 32, 7);
    v8 = TTRTreeStorageDerivedTreeWithDesignatedInitialItems.init(upstreamTree:designatedItemTree:)(v8, &v17);
    v13 = (unint64_t *)&unk_10065BA20;
    v14 = &protocol conformance descriptor for TTRTreeStorageDerivedTreeWithDesignatedInitialItems<A, B>;
    v15 = &qword_10065BA18;
  }
  else
  {
    swift_bridgeObjectRelease(v9);
    swift_release();
    v13 = (unint64_t *)&unk_10065BA28;
    v15 = &qword_100641C88;
    v14 = &protocol conformance descriptor for TTRAnyTreeStorageChainedTreeDeriving<A>;
  }
  sub_100023FEC(v13, v15, (uint64_t)v14);
  return v8;
}

id sub_10041495C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIDebugController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TTRIDebugController()
{
  return objc_opt_self(_TtC9Reminders19TTRIDebugController);
}

uint64_t sub_1004149BC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  char v5;
  char *v6;
  id v7;
  unsigned int v8;
  char *v9;
  void *v10;
  char *v11;
  id v12;

  v2 = OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_customAccessoryView;
  v3 = *(char **)(v1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_customAccessoryView);
  v4 = *(void **)&v3[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_gridView];
  if (!v4)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v5 = result;
  v6 = v3;
  v7 = objc_msgSend(v4, "columnAtIndex:", 1);
  v8 = objc_msgSend(v7, "isHidden");

  result = swift_unknownObjectRelease(v7);
  if (v8 != (v5 & 1))
  {
    v9 = *(char **)(v1 + v2);
    v10 = *(void **)&v9[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_gridView];
    if (v10)
    {
      v11 = v9;
      v12 = objc_msgSend(v10, "columnAtIndex:", 1);
      objc_msgSend(v12, "setHidden:", v5 & 1);

      return swift_unknownObjectRelease(v12);
    }
    goto LABEL_7;
  }
  return result;
}

id sub_100414AC8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell____lazy_storage___fillerView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell____lazy_storage___fillerView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell____lazy_storage___fillerView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_100414B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  _QWORD v7[7];
  _BYTE v8[24];
  _BYTE v9[40];
  uint64_t v10;

  v1 = v0 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_treeCellViewModel;
  swift_beginAccess(v0 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_treeCellViewModel, v8, 0, 0);
  sub_1000922C0(v1, (uint64_t)v9);
  if (!v10)
  {
    v3 = sub_100092308((uint64_t)v9);
LABEL_6:
    v4 = (uint64_t *)TTRAccesibility.AccountsList.Format.Name_ItemCount.unsafeMutableAddressor(v3);
    goto LABEL_7;
  }
  sub_100102FD4((uint64_t)v9, (uint64_t)v7);
  sub_100092308((uint64_t)v9);
  v2 = v7[0];
  v3 = sub_100092348((uint64_t)v7);
  if (v2 <= 0
    || !*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityGroupName + 8))
  {
    goto LABEL_6;
  }
  v4 = (uint64_t *)TTRAccesibility.AccountsList.Format.GroupMemberName_ItemCount.unsafeMutableAddressor(v3);
LABEL_7:
  v5 = *v4;
  swift_bridgeObjectRetain(v4[1]);
  return v5;
}

void sub_100414C24(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  objc_super v9;

  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for TTRIAccountsListsBaseCell();
  v5 = objc_msgSendSuper2(&v9, "didUpdateFocusInContext:withAnimationCoordinator:", a1, a2);
  if ((static UIAccessibility.ttriIsFullKeyboardAccessRunning.getter(v5) & 1) == 0)
  {
    if (objc_msgSend(v2, "isFocused"))
      v6 = 2;
    else
      v6 = 0;
    v7 = objc_msgSend(v2, "contentView");
    objc_msgSend(v7, "setOverrideUserInterfaceStyle:", v6);

    v8 = objc_msgSend(v2, "accessoryView");
    objc_msgSend(v8, "setOverrideUserInterfaceStyle:", v6);

  }
}

uint64_t sub_100414E6C()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  double v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD v52[7];
  char v53[24];
  _QWORD v54[7];
  _QWORD *v55;

  v1 = v0;
  v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)((char *)v0
                                                             + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_titleLabel), "text"));
  if (v2)
  {
    v3 = v2;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

  }
  else
  {
    v7 = (uint64_t *)TTRAccesibility.General.Label.Untitled.unsafeMutableAddressor();
    v4 = *v7;
    v6 = v7[1];
    swift_bridgeObjectRetain(v6);
  }
  v8 = sub_10002A750((uint64_t *)&unk_100654F80);
  v9 = (_QWORD *)swift_allocObject(v8, 48, 7);
  *((_OWORD *)v9 + 1) = xmmword_100520250;
  v9[4] = v4;
  v9[5] = v6;
  v55 = v9;
  v10 = *(void **)((char *)v1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_subtitleLabel);
  v11 = objc_msgSend(v10, "text");
  if (v11)
  {
    v12 = v11;
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v15 = v14;

    *(_QWORD *)&v16 = swift_bridgeObjectRelease(v15).n128_u64[0];
    v17 = HIBYTE(v15) & 0xF;
    if ((v15 & 0x2000000000000000) == 0)
      v17 = v13 & 0xFFFFFFFFFFFFLL;
    if (v17)
    {
      v18 = objc_msgSend(v10, "text", v16);
      if (v18)
      {
        v19 = v18;
        v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
        v22 = v21;

        v24 = v9[2];
        v23 = v9[3];
        if (v24 >= v23 >> 1)
          v9 = sub_10001D840((_QWORD *)(v23 > 1), v24 + 1, 1, v9);
        v9[2] = v24 + 1;
        v25 = &v9[2 * v24];
        v25[4] = v20;
        v25[5] = v22;
        v55 = v9;
      }
    }
  }
  v26 = *(_QWORD *)((char *)v1
                  + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityAdditionalLabelAttributes);
  if (v26)
  {
    swift_bridgeObjectRetain(v26);
    v26 = sub_1004507EC(v27);
    v9 = v55;
  }
  v54[0] = v9;
  v28 = (uint64_t *)TTRAccesibility.General.Label.Separator.unsafeMutableAddressor(v26);
  v29 = *v28;
  v30 = v28[1];
  swift_bridgeObjectRetain(v30);
  v31 = sub_10002A750(&qword_1006466D0);
  v32 = sub_100023FEC((unint64_t *)&qword_10064C980, &qword_1006466D0, (uint64_t)&protocol conformance descriptor for [A]);
  v33 = BidirectionalCollection<>.joined(separator:)(v29, v30, v31, v32);
  v35 = v34;
  swift_bridgeObjectRelease(v9);
  v36 = swift_bridgeObjectRelease(v30);
  v37 = (*(uint64_t (**)(__n128))((swift_isaMask & *v1) + 0x1E0))(v36);
  v39 = v38;
  if (*((_BYTE *)v1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityCount + 8))
    v40 = 0;
  else
    v40 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityCount);
  v41 = (uint64_t)v1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_treeCellViewModel;
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_treeCellViewModel, v53, 0, 0);
  sub_1000922C0(v41, (uint64_t)v54);
  if (!v54[5])
  {
    sub_100092308((uint64_t)v54);
LABEL_22:
    v48 = sub_10002A750((uint64_t *)&unk_100640FD0);
    v46 = swift_allocObject(v48, 112, 7);
    *(_OWORD *)(v46 + 16) = xmmword_1005201E0;
    *(_QWORD *)(v46 + 56) = &type metadata for String;
    v49 = sub_1000770A4();
    *(_QWORD *)(v46 + 32) = v33;
    *(_QWORD *)(v46 + 40) = v35;
    *(_QWORD *)(v46 + 96) = &type metadata for Int;
    *(_QWORD *)(v46 + 104) = &protocol witness table for Int;
    *(_QWORD *)(v46 + 64) = v49;
    *(_QWORD *)(v46 + 72) = v40;
    goto LABEL_23;
  }
  sub_100102FD4((uint64_t)v54, (uint64_t)v52);
  sub_100092308((uint64_t)v54);
  v42 = v52[0];
  sub_100092348((uint64_t)v52);
  if (v42 <= 0)
    goto LABEL_22;
  v43 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityGroupName + 8);
  if (!v43)
    goto LABEL_22;
  v44 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityGroupName);
  v45 = sub_10002A750((uint64_t *)&unk_100640FD0);
  v46 = swift_allocObject(v45, 152, 7);
  *(_OWORD *)(v46 + 16) = xmmword_1005275C0;
  *(_QWORD *)(v46 + 56) = &type metadata for String;
  v47 = sub_1000770A4();
  *(_QWORD *)(v46 + 32) = v33;
  *(_QWORD *)(v46 + 40) = v35;
  *(_QWORD *)(v46 + 96) = &type metadata for Int;
  *(_QWORD *)(v46 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v46 + 64) = v47;
  *(_QWORD *)(v46 + 72) = v40;
  *(_QWORD *)(v46 + 136) = &type metadata for String;
  *(_QWORD *)(v46 + 144) = v47;
  *(_QWORD *)(v46 + 112) = v44;
  *(_QWORD *)(v46 + 120) = v43;
  swift_bridgeObjectRetain(v43);
LABEL_23:
  v50 = String.init(format:_:)(v37, v39, v46);
  swift_bridgeObjectRelease(v39);
  return v50;
}

id sub_100415430()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIAccountsListsBaseCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10041552C(uint64_t a1, _QWORD *a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  int v7;
  int v8;
  _BYTE *v9;
  int v10;
  _BYTE *v11;
  int v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(id (*)(), uint64_t, uint64_t, uint64_t);
  char *v20;
  _OWORD v22[2];
  __int128 v23;
  uint64_t v24;
  _OWORD v25[3];
  uint64_t v26;
  char v27[24];
  _BYTE v28[56];

  v3 = v2;
  v6 = (uint64_t)&v3[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_treeCellViewModel];
  swift_beginAccess(&v3[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_treeCellViewModel], v27, 0, 0);
  sub_1000922C0(v6, (uint64_t)v28);
  sub_1000922C0(a1, (uint64_t)v25);
  swift_beginAccess(v6, v22, 33, 0);
  sub_100260374((uint64_t)v25, v6);
  swift_endAccess(v22);
  sub_1000922C0(a1, (uint64_t)v22);
  if (*((_QWORD *)&v23 + 1))
  {
    v25[0] = v22[0];
    v25[1] = v22[1];
    v25[2] = v23;
    v26 = v24;
    sub_1000922C0((uint64_t)v28, (uint64_t)v22);
    if (*((_QWORD *)&v23 + 1))
    {
      v7 = BYTE8(v22[0]);
      sub_100092348((uint64_t)v22);
      v8 = BYTE8(v25[0]);
      if (v7 == BYTE8(v25[0]))
      {
        sub_100028720();
LABEL_11:
        sub_100092348((uint64_t)v25);
        v9 = v28;
        return sub_100092308((uint64_t)v9);
      }
    }
    else
    {
      sub_100092308((uint64_t)v22);
      v8 = BYTE8(v25[0]);
    }
    v10 = v8 == 2;
    v11 = *(_BYTE **)&v3[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_customAccessoryView];
    v12 = v11[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_isExpanded];
    v11[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_isExpanded] = v10;
    if (v10 != v12)
    {
      v13 = v11;
      sub_100028358();

    }
    sub_100028720();
    objc_msgSend(v3, "setNeedsLayout");
    v14 = a2[3];
    v15 = a2[4];
    sub_10001413C(a2, v14);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15) & 1) != 0)
    {
      v16 = a2[3];
      v17 = a2[4];
      sub_10001413C(a2, v16);
      v18 = swift_allocObject(&unk_1006069F0, 24, 7);
      *(_QWORD *)(v18 + 16) = v3;
      v19 = *(void (**)(id (*)(), uint64_t, uint64_t, uint64_t))(v17 + 16);
      v20 = v3;
      v19(sub_1000D56F0, v18, v16, v17);
      swift_release();
    }
    goto LABEL_11;
  }
  sub_100092308((uint64_t)v28);
  v9 = v22;
  return sub_100092308((uint64_t)v9);
}

uint64_t sub_10041573C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = *v1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_treeCellViewModel;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000922C0(v3, a1);
}

uint64_t sub_100415790()
{
  _QWORD *v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *v0 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_treeCellViewDelegate;
  swift_beginAccess(v1, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t sub_1004157E0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  _BYTE v7[24];

  v5 = *v2 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_treeCellViewDelegate;
  swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1);
  return swift_unknownObjectRelease(a1);
}

void (*sub_10041584C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = *v1;
  v5 = OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_treeCellViewDelegate;
  v3[5] = *v1;
  v3[6] = v5;
  v6 = v4 + v5;
  swift_beginAccess(v4 + v5, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  v8 = *(_QWORD *)(v6 + 8);
  v3[3] = Strong;
  v3[4] = v8;
  return sub_1000DAAC0;
}

uint64_t sub_1004158C4(uint64_t a1, _QWORD *a2)
{
  return sub_10041552C(a1, a2);
}

uint64_t sub_1004158E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100415908(void *a1, void *a2)
{
  id v4;
  id v5;
  id v6;

  v4 = objc_msgSend(a1, "traitCollection");
  v5 = objc_msgSend(v4, "preferredContentSizeCategory");

  LODWORD(v4) = UIContentSizeCategory.isAccessibilityCategory.getter(v5) & 1;
  v6 = objc_msgSend(a2, "preferredContentSizeCategory");
  LODWORD(v5) = UIContentSizeCategory.isAccessibilityCategory.getter(v6) & 1;

  if ((_DWORD)v4 != (_DWORD)v5)
  {
    *((_BYTE *)a1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_needsUpdateGridSubviewRows) = 1;
    objc_msgSend(a1, "setNeedsLayout");
  }
}

void sub_1004159D8()
{
  _BYTE *v0;
  char *v1;
  _QWORD *v2;
  char *v3;
  char *v4;
  char *v5;
  char *v6;

  v1 = &v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityCount];
  *(_QWORD *)v1 = 0;
  v1[8] = 1;
  v2 = &v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityGroupName];
  *v2 = 0;
  v2[1] = 0;
  v3 = &v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_treeCellViewModel];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  *((_QWORD *)v3 + 6) = 0;
  v4 = &v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_treeCellViewDelegate];
  *((_QWORD *)v4 + 1) = 0;
  swift_unknownObjectWeakInit(v4, 0);
  v5 = &v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_delegate];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5, 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_leadingControl] = 0;
  v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_unitTest_forceLargeTextLayout] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityAdditionalLabelAttributes] = 0;
  v6 = &v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_totalIndentation];
  *(_QWORD *)v6 = 0;
  v6[8] = 1;
  v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_needsUpdateGridSubviewRows] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell____lazy_storage___fillerView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002FLL, 0x800000010056F5E0, "Reminders/TTRIAccountsListsBaseCell.swift", 41, 2, 190, 0);
  __break(1u);
}

uint64_t sub_100415AFC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100415B20()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100415B30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[24];
  _BYTE v25[24];

  v1 = v0;
  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v3 = __chkstk_darwin(v2);
  v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  v7 = &v24[-v6];
  v8 = sub_10002A750((uint64_t *)&unk_100654970);
  __chkstk_darwin(v8);
  v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    v13 = Strong;
    v14 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType(Strong, v12);
    v16 = v1 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
    swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel, v25, 0, 0);
    sub_1001CE5DC(v16, (uint64_t)v10);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v14 + 8) + 16))(v10, ObjectType);
    swift_unknownObjectRelease(v13);
    sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100654970);
  }
  v17 = v1 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel, v24, 0, 0);
  v18 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18);
  if (!(_DWORD)result)
  {
    sub_10002B1E8(v17, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1000894B8((uint64_t)v5, (uint64_t)v7);
    v21 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_editingPresenter);
    v20 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_editingPresenter + 8);
    v23 = swift_getObjectType(v21, v22);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v20 + 80))(v7, v23, v20);
    return sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return result;
}

uint64_t sub_100415D0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v12)(uint64_t, uint64_t);
  id v13;
  char v14;
  _BYTE v17[24];

  v1 = sub_10002A750((uint64_t *)&unk_100654970);
  __chkstk_darwin(v1);
  v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = v0 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
  swift_beginAccess(v0 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel, v17, 0, 0);
  sub_1001CE5DC(v4, (uint64_t)v3);
  v5 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
  LODWORD(v4) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5);
  sub_1000073A0((uint64_t)v3, (uint64_t *)&unk_100654970);
  if ((_DWORD)v4 == 1 || (Strong = swift_unknownObjectWeakLoadStrong(v0 + 48)) == 0)
  {
    v14 = 0;
  }
  else
  {
    v8 = Strong;
    v9 = *(void **)(Strong + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
    v10 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
    ObjectType = swift_getObjectType(v9, v7);
    v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 88);
    v13 = v9;
    v14 = v12(ObjectType, v10);
    swift_unknownObjectRelease(v8);

  }
  return v14 & 1;
}

uint64_t sub_100415E40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  _BYTE v23[24];

  v1 = type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem(0);
  __chkstk_darwin(v1);
  v3 = &v23[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v4);
  v6 = &v23[-v5 - 8];
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v7);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = sub_10002A750(&qword_100644980);
  __chkstk_darwin(v10);
  v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = v0 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
  swift_beginAccess(v13, v23, 0, 0);
  v14 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
  {
    v15 = sub_10002B1E8(v13, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.sectionCasesOnly.getter(v15);
    sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10002B1E8((uint64_t)v6, (uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem);
    v16 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v3, 1, v16) == 1)
    {
      v17 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v12, 1, 1, v17);
    }
    else
    {
      sub_10002B1E8((uint64_t)v3, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      sub_10001F544((uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v17 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v12, 0, 1, v17);
    }
    sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem);
    type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v12, 1, v17);
    if ((_DWORD)v18 != 1)
    {
      TTRRemindersListViewModel.SectionID.editableSectionCasesOnly.getter(v18);
      v20 = v19;
      sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      __asm { BR              X10 }
    }
    sub_1000073A0((uint64_t)v12, &qword_100644980);
  }
  return 0;
}

void sub_1004160DC()
{
  void *v0;

  JUMPOUT(0x1004160C4);
}

uint64_t sub_1004160E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v3 = v2;
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_editingPresenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2+ OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_editingPresenter), a2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 64))(ObjectType, v4);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (Strong)
  {
    v7 = Strong;
    if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_layoutStyle) & 1) != 0)
      v8 = 3;
    else
      v8 = 0;
    sub_1001CDCDC(v8, (*(_BYTE *)(v3 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_layoutStyle) & 1) == 0, *(_BYTE *)(v3 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_layoutStyle) & 1);
    swift_unknownObjectRelease(v7);
  }
  v9 = swift_unknownObjectWeakLoadStrong(v3 + 32);
  if (v9)
  {
    v11 = v9;
    v12 = *(_QWORD *)(v3 + 40);
    v13 = swift_getObjectType(v9, v10);
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v12 + 16))(v3, &off_100606AB8, 1, v13, v12);
    swift_unknownObjectRelease(v11);
  }
  result = swift_unknownObjectWeakLoadStrong(v3 + 48);
  if (result)
  {
    v15 = result;
    sub_10041680C(v3, 1, result);
    return swift_unknownObjectRelease(v15);
  }
  return result;
}

uint64_t sub_1004161DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v8;

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 32);
  if (Strong)
  {
    v4 = Strong;
    v5 = *(_QWORD *)(v1 + 40);
    ObjectType = swift_getObjectType(Strong, v3);
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, &off_100606AB8, 2, ObjectType, v5);
    swift_unknownObjectRelease(v4);
  }
  result = swift_unknownObjectWeakLoadStrong(v1 + 48);
  if (result)
  {
    v8 = result;
    sub_10041680C(v1, 2, result);
    return swift_unknownObjectRelease(v8);
  }
  return result;
}

uint64_t sub_100416274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_editingPresenter);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_editingPresenter + 8);
  v4 = v0 + 16;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (!Strong
    || (v7 = Strong,
        v8 = *(_QWORD *)(v0 + 24),
        ObjectType = swift_getObjectType(Strong, v6),
        v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v8 + 8) + 8))(ObjectType),
        v12 = v11,
        swift_unknownObjectRelease(v7),
        !v12))
  {
    swift_bridgeObjectRelease(0);
    v10 = 0;
    v12 = 0xE000000000000000;
  }
  v14 = swift_getObjectType(v2, v13);
  (*(void (**)(uint64_t, unint64_t, _QWORD, uint64_t, uint64_t))(v3 + 72))(v10, v12, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_listLayout), v14, v3);
  swift_bridgeObjectRelease(v12);
  v15 = swift_unknownObjectWeakLoadStrong(v4);
  if (v15)
  {
    v16 = v15;
    sub_1001CDCDC(*(_QWORD *)(v15+ OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_previousLineIndexWhereClippingBegins), *(_BYTE *)(v15+ OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_previousLineIndexWhereClippingBegins+ 8), 0);
    swift_unknownObjectRelease(v16);
  }
  v17 = swift_unknownObjectWeakLoadStrong(v1 + 32);
  if (v17)
  {
    v19 = v17;
    v20 = *(_QWORD *)(v1 + 40);
    v21 = swift_getObjectType(v17, v18);
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v20 + 16))(v1, &off_100606AB8, 3, v21, v20);
    swift_unknownObjectRelease(v19);
  }
  result = swift_unknownObjectWeakLoadStrong(v1 + 48);
  if (result)
  {
    v23 = result;
    sub_10041680C(v1, 3, result);
    return swift_unknownObjectRelease(v23);
  }
  return result;
}

uint64_t sub_1004163F0()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);
  sub_1000381C8(v0 + 32);
  sub_1000381C8(v0 + 48);
  sub_1000073A0(v0 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel, (uint64_t *)&unk_100654970);

  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_interactor));
  sub_100027F10((_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_router));
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_editingPresenter));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100416480()
{
  return type metadata accessor for TTRIRemindersListEditableSectionNamePresenter(0);
}

uint64_t type metadata accessor for TTRIRemindersListEditableSectionNamePresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_10065BE78;
  if (!qword_10065BE78)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIRemindersListEditableSectionNamePresenter);
  return result;
}

void sub_1004164C4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[10];

  v4[0] = &unk_100535270;
  v4[1] = &unk_100535270;
  v4[2] = &unk_100535270;
  sub_1003D13D0(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = &unk_100535288;
    v4[5] = &unk_1005352A0;
    v4[6] = &unk_1005352B8;
    v4[7] = &unk_1005352A0;
    v4[8] = &unk_1005352D0;
    v4[9] = &unk_1005352E8;
    swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 80);
  }
}

uint64_t sub_100416574@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1001CE5DC(v3, a1);
}

uint64_t sub_1004165CC()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  result = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)(v0 + 24);
    ObjectType = swift_getObjectType(result, v2);
    (*(void (**)(uint64_t))(*(_QWORD *)(v4 + 8) + 32))(ObjectType);
    return swift_unknownObjectRelease(v3);
  }
  return result;
}

uint64_t sub_100416620(char *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t result;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;

  v3 = v2;
  v5 = a2 & 1;
  v6 = v2 + 16;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (Strong)
  {
    v8 = Strong;
    sub_1001CD784(a1);
    swift_unknownObjectRelease(v8);
  }
  v9 = OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_layoutStyle;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_layoutStyle) = v5;
  v10 = objc_msgSend(a1, "isEditing");
  result = swift_unknownObjectWeakLoadStrong(v6);
  if (result)
  {
    v12 = result;
    v13 = *(_BYTE *)(v3 + v9) & 1;
    v14 = v13 == 0;
    if (v13)
      v15 = 3;
    else
      v15 = 0;
    if ((v10 & 1) == 0)
    {
      v13 = 0;
      v15 = *(_QWORD *)(v12
                      + OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_previousLineIndexWhereClippingBegins);
      v14 = *(_BYTE *)(v12
                     + OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_previousLineIndexWhereClippingBegins
                     + 8);
    }
    sub_1001CDCDC(v15, v14, v13 & 1);
    return swift_unknownObjectRelease(v12);
  }
  return result;
}

uint64_t sub_1004166F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;

  result = swift_unknownObjectWeakLoadStrong(v4 + 16);
  if (result)
  {
    v9 = result;
    v10 = *(_QWORD *)(v4 + 24);
    ObjectType = swift_getObjectType(result, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8) + 24))(a3, a4, ObjectType);
    return swift_unknownObjectRelease(v9);
  }
  return result;
}

uint64_t sub_100416768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v8;

  result = swift_unknownObjectWeakLoadStrong(v4 + 48);
  if (result)
  {
    v8 = result;
    sub_100416968(v4, a3, a4, result);
    return swift_unknownObjectRelease(v8);
  }
  return result;
}

uint64_t sub_1004167C8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = swift_unknownObjectWeakLoadStrong(v0 + 48);
  if (result)
  {
    v2 = result;
    sub_100416B6C(v0, result);
    return swift_unknownObjectRelease(v2);
  }
  return result;
}

uint64_t sub_10041680C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _BYTE v16[24];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[40];

  result = swift_unknownObjectWeakLoadStrong(a1 + 32);
  if (result)
  {
    v8 = result;
    v9 = *(_QWORD *)(a1 + 40);
    ObjectType = swift_getObjectType(result, v7);
    v11 = (*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v9 + 8))(a1, &off_100606AB8, ObjectType, v9);
    v13 = v12;
    result = swift_unknownObjectRelease(v8);
    if (v11)
    {
      v18 = swift_getObjectType(v11, v14);
      v19 = *(_QWORD *)(v13 + 8);
      *(_QWORD *)&v17 = v11;
      sub_10002E37C(&v17, (uint64_t)v20);
      v15 = (char *)(a3 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates);
      swift_beginAccess(a3 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates, v16, 0, 0);
      sub_10029A0D0(v15, (uint64_t)&v17);
      LOBYTE(v17) = 1;
      sub_10028E39C((uint64_t)&v17);
      __asm { BR              X10 }
    }
  }
  return result;
}

uint64_t sub_100416968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  _BYTE v27[24];

  v8 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = sub_10002A750((uint64_t *)&unk_100654970);
  __chkstk_darwin(v12);
  v14 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v15 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v15);
  v17 = &v27[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v18);
  v20 = &v27[-v19 - 8];
  v21 = a1 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
  swift_beginAccess(v21, v27, 0, 0);
  sub_1001CE5DC(v21, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8))
    return sub_1000073A0((uint64_t)v14, (uint64_t *)&unk_100654970);
  sub_10002B1E8((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
  sub_1000073A0((uint64_t)v14, (uint64_t *)&unk_100654970);
  sub_10002B1E8((uint64_t)v11, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
  sub_1000894B8((uint64_t)v17, (uint64_t)v20);
  v23 = *(_QWORD *)(a4 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(a4 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter), v24);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 864))(v20, a2, a3, ObjectType, v23);
  return sub_10001F544((uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_100416B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  _BYTE v24[24];

  v4 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_10002A750((uint64_t *)&unk_100654970);
  __chkstk_darwin(v8);
  v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v11);
  v13 = &v24[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v14);
  v16 = &v24[-v15 - 8];
  v17 = a1 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
  swift_beginAccess(v17, v24, 0, 0);
  sub_1001CE5DC(v17, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4))
    return sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100654970);
  sub_10002B1E8((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
  sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100654970);
  sub_10002B1E8((uint64_t)v7, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
  sub_1000894B8((uint64_t)v13, (uint64_t)v16);
  v20 = *(_QWORD *)(a2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter);
  v19 = *(_QWORD *)(a2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  ObjectType = swift_getObjectType(v20, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 872))(v16, ObjectType, v19);
  return sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_100416D54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10065BF48);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10065BF48);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100416DE4()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);
  sub_1000381C8(v0 + 32);
  sub_1000B0308(*(void **)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 104));
  sub_100027F10((_QWORD *)(v0 + 120));
  return swift_deallocClassInstance(v0, 160, 7);
}

uint64_t type metadata accessor for TTRIAboutYourDevicesPresenter()
{
  return objc_opt_self(_TtC9Reminders29TTRIAboutYourDevicesPresenter);
}

uint64_t storeEnumTagSinglePayload for TTRISmartListFilterEditorModuleAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100416EA0 + 4 * byte_100535425[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100416ED4 + 4 * byte_100535420[v4]))();
}

uint64_t sub_100416ED4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100416EDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100416EE4);
  return result;
}

uint64_t sub_100416EF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100416EF8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100416EFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100416F04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRISmartListFilterEditorModuleAction()
{
  return &type metadata for TTRISmartListFilterEditorModuleAction;
}

unint64_t sub_100416F24()
{
  unint64_t result;

  result = qword_10065C020;
  if (!qword_10065C020)
  {
    result = swift_getWitnessTable(&unk_1005354F8, &type metadata for TTRISmartListFilterEditorModuleAction);
    atomic_store(result, (unint64_t *)&qword_10065C020);
  }
  return result;
}

uint64_t sub_100416F68(void *a1, void *a2)
{
  uint64_t ObjectType;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  _QWORD v18[3];
  uint64_t v19;
  void *v20;
  _QWORD v21[3];
  uint64_t v22;
  void *v23;

  ObjectType = swift_getObjectType(a2, a2);
  type metadata accessor for RDIDispatchQueue(0);
  v5 = (void *)static RDIDispatchQueue.storeQueue.getter();
  v6 = sub_10002CDD8();
  v7 = static OS_dispatch_queue.main.getter(v6);
  v8 = type metadata accessor for REMContactsProvider(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v9 = v5;
  v22 = v8;
  v23 = &protocol witness table for REMContactsProvider;
  v21[0] = REMContactsProvider.init(contactStoreCreator:queue:backgroundQueue:)(sub_100042A70, 0, v7, v9);
  v19 = ObjectType;
  v20 = &protocol witness table for TTRGeoLocationService;
  v18[0] = a2;
  v10 = type metadata accessor for TTRReminderLocationOptionsProvider(0);
  swift_allocObject(v10, 128, 7);
  v11 = a1;
  swift_retain();
  v12 = a2;
  v13 = TTRReminderLocationOptionsProvider.init(store:meCardProvider:geoService:)(v11, v21, v18);
  v22 = ObjectType;
  v23 = &protocol witness table for TTRGeoLocationService;
  v21[0] = v12;
  v19 = v10;
  v20 = &protocol witness table for TTRReminderLocationOptionsProvider;
  v18[0] = v13;
  v14 = type metadata accessor for TTRLocationQuickPicksInteractor(0);
  swift_allocObject(v14, 136, 7);
  v15 = v12;
  swift_retain();
  v16 = TTRLocationQuickPicksInteractor.init(geoService:locationOptionsProvider:)(v21, v18);
  swift_release();
  swift_release();

  return v16;
}

uint64_t sub_1004170FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10065C028);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10065C028);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10041718C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return swift_task_switch(sub_1004171F4, 0, 0);
}

uint64_t sub_1004171F4()
{
  uint64_t v0;
  id *v1;
  unint64_t v2;
  void *v3;
  id v4;
  id v5;
  Class isa;
  id v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  unint64_t v15;

  v1 = (id *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(void **)(v0 + 24);
  v4 = objc_msgSend(v3, "store");
  v5 = objc_msgSend(v3, "objectID");
  if (v2 >> 60 == 15)
    isa = 0;
  else
    isa = Data._bridgeToObjectiveC()().super.isa;
  *v1 = 0;
  v7 = objc_msgSend(v4, "createShareForListWithID:appIconData:error:", v5, isa, v0 + 16);

  if (*v1)
  {
    *v1;

LABEL_6:
    swift_willThrow(v8);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (!v7)
  {
    if (qword_10063D7C0 != -1)
      swift_once(&qword_10063D7C0, sub_1004170FC);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_100012DC4(v10, (uint64_t)qword_10065C028);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.error.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Failed to create share for list", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }

    v15 = sub_1004187D0();
    v8 = swift_allocError(&type metadata for TTRListSharingUtilities.CKErrorTypes, v15, 0, 0);
    goto LABEL_6;
  }
  return (*(uint64_t (**)(id))(v0 + 8))(v7);
}

void sub_100417420(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  NSObject *oslog;
  _QWORD v15[3];
  _BYTE v16[8];
  uint64_t v17;
  uint64_t v18;

  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_10063D7C0 != -1)
      swift_once(&qword_10063D7C0, sub_1004170FC);
    v6 = type metadata accessor for Logger(0);
    sub_100012DC4(v6, (uint64_t)qword_10065C028);
    swift_errorRetain(a1);
    swift_bridgeObjectRetain(a3);
    swift_errorRetain(a1);
    swift_bridgeObjectRetain(a3);
    oslog = Logger.logObject.getter(v7);
    v8 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v8))
    {
      v9 = swift_slowAlloc(22, -1);
      v10 = swift_slowAlloc(64, -1);
      v18 = v10;
      *(_DWORD *)v9 = 136315394;
      swift_bridgeObjectRetain(a3);
      v17 = sub_100027E40(a2, a3, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v9 + 4, v9 + 12);
      swift_bridgeObjectRelease_n(a3, 3);
      *(_WORD *)(v9 + 12) = 2080;
      swift_getErrorValue(a1, v16, v15);
      v11 = Error.localizedDescription.getter(v15[1], v15[2]);
      v13 = v12;
      v17 = sub_100027E40(v11, v12, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v9 + 14, v9 + 22);
      swift_bridgeObjectRelease(v13);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, "Could not add share observer for {accountID: %s, error: %s}", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy(v10, 2, &type metadata for Any[8]);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_bridgeObjectRelease_n(a3, 2);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
}

void sub_100417678(uint64_t a1, void *a2)
{
  uint64_t v4;
  id v5;
  uint64_t v6;
  os_log_type_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  NSObject *oslog;
  _QWORD v24[3];
  char v25[8];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_10063D7C0 != -1)
      swift_once(&qword_10063D7C0, sub_1004170FC);
    v4 = type metadata accessor for Logger(0);
    sub_100012DC4(v4, (uint64_t)qword_10065C028);
    swift_errorRetain(a1);
    v5 = a2;
    v6 = swift_errorRetain(a1);
    oslog = Logger.logObject.getter(v6);
    v7 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = swift_slowAlloc(22, -1);
      v9 = (_QWORD *)swift_slowAlloc(8, -1);
      v10 = swift_slowAlloc(32, -1);
      v27 = v10;
      *(_DWORD *)v8 = 138412546;
      v11 = objc_msgSend(v5, "objectID");
      v26 = (uint64_t)v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v8 + 4, v8 + 12);
      *v9 = v11;

      *(_WORD *)(v8 + 12) = 2080;
      swift_getErrorValue(a1, v25, v24);
      v12 = Error.rem_errorDescription.getter(v24[1], v24[2]);
      v14 = v13;
      v26 = sub_100027E40(v12, v13, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v8 + 14, v8 + 22);
      swift_bridgeObjectRelease(v14);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v7, "Failed to stop share {list.objectID: %@, error: %s}", (uint8_t *)v8, 0x16u);
      v15 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v9, 1, v15);
      swift_slowDealloc(v9, -1, -1);
      swift_arrayDestroy(v10, 1, &type metadata for Any[8]);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v8, -1, -1);

      swift_errorRelease(a1);
      return;
    }
    swift_errorRelease(a1);

    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }
  else
  {
    if (qword_10063D7C0 != -1)
      swift_once(&qword_10063D7C0, sub_1004170FC);
    v16 = type metadata accessor for Logger(0);
    sub_100012DC4(v16, (uint64_t)qword_10065C028);
    oslog = a2;
    v17 = Logger.logObject.getter(oslog);
    v18 = static os_log_type_t.default.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(12, -1);
      v20 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v19 = 138543362;
      v21 = -[NSObject objectID](oslog, "objectID");
      v27 = (uint64_t)v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v19 + 4, v19 + 12);
      *v20 = v21;

      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Cleaning up canceled share. Successfully stopped share. {list.objectID: %{public}@}", v19, 0xCu);
      v22 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v20, 1, v22);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);

      return;
    }

  }
}

void _s9Reminders23TTRListSharingUtilitiesC26addCKShareObserverIfNeeded3forySo7REMListC_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSString v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  _QWORD aBlock[6];

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, "account", v4);
  v8 = objc_msgSend(v7, "accountTypeHost");

  LODWORD(v7) = objc_msgSend(v8, "isCloudKit");
  if ((_DWORD)v7)
  {
    v9 = objc_msgSend(a1, "account");
    v10 = objc_msgSend(v9, "remObjectID");

    v11 = objc_msgSend(v10, "uuid");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v11);

    v13 = UUID.uuidString.getter(v12);
    v15 = v14;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v16 = objc_msgSend(a1, "store");
    v17 = String._bridgeToObjectiveC()();
    v18 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
    v19 = (void *)static OS_dispatch_queue.main.getter(v18);
    v20 = swift_allocObject(&unk_100606D18, 32, 7);
    *(_QWORD *)(v20 + 16) = v13;
    *(_QWORD *)(v20 + 24) = v15;
    aBlock[4] = sub_100418864;
    aBlock[5] = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100009944;
    aBlock[3] = &unk_100606D30;
    v21 = _Block_copy(aBlock);
    objc_msgSend(v16, "addCKShareObserverIfNeededForAccountID:queue:completion:", v17, v19, v21, swift_release().n128_f64[0]);
    _Block_release(v21);

  }
}

id _s9Reminders23TTRListSharingUtilitiesC17shareItemProvider3forSo06NSItemG0CSo7REMListC_tFZ_0(void *a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  UIImage *v8;
  NSData *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v25;
  __int128 v26;
  void *v27;

  v2 = (void *)objc_opt_self(REMCloudContainer);
  v3 = objc_msgSend(a1, "account");
  v4 = objc_msgSend(v2, "newCloudContainerForAccount:", v3);

  v5 = objc_msgSend((id)objc_opt_self(CKAllowedSharingOptions), "rem_remindersAllowedSharingOptions");
  v6 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
  type metadata accessor for RemindersUICoreBundleLookupObject(0);
  v7 = (void *)static RemindersUICoreBundleLookupObject.bundle.getter();
  v8 = (UIImage *)static UIImage.ttr_image(named:in:)(0xD000000000000017, 0x8000000100564310, v7);

  if (v8 && (v9 = UIImagePNGRepresentation(v8), v8, v9))
  {
    v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

  }
  else
  {
    v10 = 0;
    v12 = 0xF000000000000000;
  }
  v13 = objc_msgSend(a1, "store");
  v14 = objc_msgSend(a1, "objectID");
  *(_QWORD *)&v25 = 0;
  v15 = objc_msgSend(v13, "fetchShareForListWithID:error:", v14, &v25);

  if ((_QWORD)v25)
  {
    v16 = (id)v25;

    swift_willThrow(v17);
LABEL_7:
    v18 = (_QWORD *)swift_allocObject(&unk_100606CA0, 40, 7);
    v18[2] = a1;
    v18[3] = v10;
    v18[4] = v12;
    sub_1004187A8(v10, v12);
    v19 = a1;
    NSItemProvider.registerCKShare(container:allowedSharingOptions:preparationHandler:)(v4, v5, &unk_10065C0E0, v18);
    sub_1004187BC(v10, v12);
    swift_release();
    goto LABEL_13;
  }
  if (!v15)
    goto LABEL_7;
  v20 = static CKShare.SystemFieldKey.thumbnailImageData.getter();
  v22 = v21;
  if (v12 >> 60 == 15)
  {
    v27 = 0;
    v25 = 0u;
    v26 = 0u;
  }
  else
  {
    *((_QWORD *)&v26 + 1) = &type metadata for Data;
    v27 = &protocol witness table for Data;
    *(_QWORD *)&v25 = v10;
    *((_QWORD *)&v25 + 1) = v12;
  }
  sub_1004187A8(v10, v12);
  v23 = sub_100005ED8(0, &qword_100661E90, CKShare_ptr);
  CKRecordKeyValueSetting.subscript.setter(&v25, v20, v22, v23);
  NSItemProvider.registerCKShare(_:container:allowedSharingOptions:)((CKShare)v15, (CKContainer)v4, (CKAllowedSharingOptions)v5);
  sub_1004187BC(v10, v12);

LABEL_13:
  return v6;
}

void _s9Reminders23TTRListSharingUtilitiesC11cancelShare3forySo7REMListC_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  os_log_type_t v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  NSString v39;
  uint64_t v40;
  void *v41;
  _QWORD *v42;
  void *v43;
  id v44;
  uint64_t v45;
  _QWORD v47[3];
  _BYTE v48[8];
  uint64_t v49;
  uint64_t v50;
  id aBlock[6];

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v47[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, "account", v4);
  v8 = objc_msgSend(v7, "accountTypeHost");

  LODWORD(v7) = objc_msgSend(v8, "isCloudKit");
  if ((_DWORD)v7)
  {
    v9 = objc_msgSend(a1, "store");
    v10 = objc_msgSend(a1, "objectID");
    aBlock[0] = 0;
    v11 = objc_msgSend(v9, "fetchShareForListWithID:error:", v10, aBlock);

    if (aBlock[0])
    {
      v12 = aBlock[0];

      swift_willThrow(v13);
      if (qword_10063D7C0 != -1)
        swift_once(&qword_10063D7C0, sub_1004170FC);
      v14 = type metadata accessor for Logger(0);
      sub_100012DC4(v14, (uint64_t)qword_10065C028);
      v15 = v12;
      v16 = a1;
      v17 = v15;
      v11 = Logger.logObject.getter(v17);
      v18 = static os_log_type_t.error.getter(v11);
      if (os_log_type_enabled(v11, v18))
      {
        v19 = swift_slowAlloc(22, -1);
        v20 = (_QWORD *)swift_slowAlloc(8, -1);
        v21 = (void *)swift_slowAlloc(32, -1);
        aBlock[0] = v21;
        *(_DWORD *)v19 = 138412546;
        v22 = objc_msgSend(v16, "objectID");
        v49 = (uint64_t)v22;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v19 + 4, v19 + 12);
        *v20 = v22;

        *(_WORD *)(v19 + 12) = 2080;
        swift_getErrorValue(v17, v48, v47);
        v23 = Error.rem_errorDescription.getter(v47[1], v47[2]);
        v25 = v24;
        v49 = sub_100027E40(v23, v24, (uint64_t *)aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v19 + 14, v19 + 22);

        swift_bridgeObjectRelease(v25);
        _os_log_impl((void *)&_mh_execute_header, v11, v18, "Failed to fetch share for list. {list.objectID: %@, error: %s}", (uint8_t *)v19, 0x16u);
        v26 = sub_10002A750(&qword_100642D60);
        swift_arrayDestroy(v20, 1, v26);
        swift_slowDealloc(v20, -1, -1);
        swift_arrayDestroy(v21, 1, &type metadata for Any[8]);
        swift_slowDealloc(v21, -1, -1);
        swift_slowDealloc(v19, -1, -1);

LABEL_12:
        return;
      }

    }
    else if (v11)
    {
      v27 = -[NSObject participants](v11, "participants");
      v28 = sub_100005ED8(0, &qword_10065C0F0, CKShareParticipant_ptr);
      v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v27, v28);

      if ((unint64_t)v29 >> 62)
      {
        if (v29 < 0)
          v45 = v29;
        else
          v45 = v29 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v29);
        v30 = _CocoaArrayWrapper.endIndex.getter(v45);
        swift_bridgeObjectRelease(v29);
      }
      else
      {
        v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      *(_QWORD *)&v31 = swift_bridgeObjectRelease(v29).n128_u64[0];
      if (v30 == 1)
      {
        v32 = objc_msgSend(a1, "account", v31);
        v33 = objc_msgSend(v32, "remObjectID");

        v34 = objc_msgSend(v33, "uuid");
        static UUID._unconditionallyBridgeFromObjectiveC(_:)(v34);

        UUID.uuidString.getter(v35);
        v37 = v36;
        (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
        v38 = objc_msgSend(a1, "store");
        v39 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v37);
        v40 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
        v41 = (void *)static OS_dispatch_queue.main.getter(v40);
        v42 = (_QWORD *)swift_allocObject(&unk_100606CC8, 24, 7);
        v42[2] = a1;
        aBlock[4] = sub_100418838;
        aBlock[5] = v42;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = (id)1107296256;
        aBlock[2] = sub_100009944;
        aBlock[3] = &unk_100606CE0;
        v43 = _Block_copy(aBlock);
        v44 = a1;
        objc_msgSend(v38, "stopShare:accountID:queue:completion:", v11, v39, v41, v43, swift_release().n128_f64[0]);
        _Block_release(v43);

        return;
      }
      goto LABEL_12;
    }
  }
}

id _s9Reminders23TTRListSharingUtilitiesC17remindersAppImageSo7IFImageCSgvgZ_0()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  NSString v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = objc_msgSend(v0, "bundleIdentifier");

  if (!v1)
    return 0;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v3 = v2;

  v4 = objc_allocWithZone((Class)ISIcon);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  v6 = objc_msgSend(v4, "initWithBundleIdentifier:", v5);

  v7 = objc_msgSend((id)objc_opt_self(ISImageDescriptor), "imageDescriptorNamed:", kISImageDescriptorHomeScreen);
  v8 = objc_msgSend(v6, "imageForDescriptor:", v7);
  v9 = v8;
  if (v8)
  {
    if (objc_msgSend(v8, "placeholder"))
    {
      v10 = objc_msgSend(v6, "prepareImageForDescriptor:", v7);

      v7 = v9;
      if (!v10)
        return v9;
    }
    else
    {

      v10 = v9;
    }

    return v10;
  }
  else
  {

  }
  return v9;
}

uint64_t type metadata accessor for TTRListSharingUtilities()
{
  return objc_opt_self(_TtC9Reminders23TTRListSharingUtilities);
}

uint64_t sub_1004186FC()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  if (v1 >> 60 != 15)
    sub_1000A2B58(*(_QWORD *)(v0 + 24), v1);
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100418738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *(_OWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc(dword_10065C0DC);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_10031F940;
  *(_QWORD *)(v3 + 40) = v2;
  *(_OWORD *)(v3 + 24) = v5;
  return swift_task_switch(sub_1004171F4, 0, 0);
}

uint64_t sub_1004187A8(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1001804A4(result, a2);
  return result;
}

uint64_t sub_1004187BC(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1000A2B58(result, a2);
  return result;
}

unint64_t sub_1004187D0()
{
  unint64_t result;

  result = qword_10065C0E8;
  if (!qword_10065C0E8)
  {
    result = swift_getWitnessTable(&unk_1005355C0, &type metadata for TTRListSharingUtilities.CKErrorTypes);
    atomic_store(result, (unint64_t *)&qword_10065C0E8);
  }
  return result;
}

uint64_t sub_100418814()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100418838(uint64_t a1)
{
  uint64_t v1;

  sub_100417678(a1, *(void **)(v1 + 16));
}

uint64_t sub_100418840()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100418864(uint64_t a1)
{
  uint64_t v1;

  sub_100417420(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t storeEnumTagSinglePayload for TTRListSharingUtilities.CKErrorTypes(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1004188AC + 4 * byte_100535520[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1004188CC + 4 * byte_100535525[v4]))();
}

_BYTE *sub_1004188AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1004188CC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1004188D4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1004188DC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1004188E4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1004188EC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TTRListSharingUtilities.CKErrorTypes()
{
  return &type metadata for TTRListSharingUtilities.CKErrorTypes;
}

unint64_t sub_10041890C()
{
  unint64_t result;

  result = qword_10065C0F8;
  if (!qword_10065C0F8)
  {
    result = swift_getWitnessTable(&unk_100535598, &type metadata for TTRListSharingUtilities.CKErrorTypes);
    atomic_store(result, (unint64_t *)&qword_10065C0F8);
  }
  return result;
}

id TTRIAboutYourDevicesAssembly.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIAboutYourDevicesAssembly();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for TTRIAboutYourDevicesAssembly()
{
  return objc_opt_self(_TtC9Reminders28TTRIAboutYourDevicesAssembly);
}

id TTRIAboutYourDevicesAssembly.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIAboutYourDevicesAssembly();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_100418A14(uint64_t a1, char *a2)
{
  objc_class *ObjectType;
  char *v5;
  char *v6;
  char *v7;
  NSString v8;
  id v9;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType(a2, a2);
  v5 = &a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_upgradeInfo];
  *(_QWORD *)v5 = 1;
  *(_OWORD *)(v5 + 40) = 0u;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 8) = 0u;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_pageStackView] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_titleLabel] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_deviceSubtitle] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_deviceExplanation] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_deviceLearnMore] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_deviceList] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_unsupportedSubtitle] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_unsupportedDeviceList] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_sharedListSubtitle] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_sharedListExplanation] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_sharedListLearnMore] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_sharedListRecipients] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_macOSUnavailableLabel] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_macOSUnavailableLearnMore] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_accountBeingUpgradedHint] = 0;
  v6 = &a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_viewModel];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((_OWORD *)v6 + 2) = 0u;
  *((_QWORD *)v6 + 6) = 0;
  v7 = &a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_presenter];
  *(_QWORD *)v7 = a1;
  *((_QWORD *)v7 + 1) = &off_100606B98;
  swift_unknownObjectRetain(a1);
  v8 = String._bridgeToObjectiveC()();
  v11.receiver = a2;
  v11.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v11, "initWithTitle:detailText:icon:contentLayout:", v8, 0, 0, 2);

  swift_release(a1);
  return v9;
}

id sub_100418BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  char *v18;
  uint64_t v19;
  id v20;
  uint64_t v22;
  _QWORD v23[5];

  v22 = a1;
  v5 = type metadata accessor for TTRAboutYourDevicesInteractor();
  v6 = swift_allocObject(v5, 32, 7);
  *(_QWORD *)(v6 + 24) = 0;
  swift_unknownObjectWeakInit(v6 + 16, 0);
  v7 = type metadata accessor for TTRIAboutYourDevicesRouter();
  v8 = swift_allocObject(v7, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, 0);
  v23[3] = v7;
  v23[4] = &off_100609DE0;
  v23[0] = v8;
  v9 = type metadata accessor for TTRIAboutYourDevicesPresenter();
  v10 = swift_allocObject(v9, 160, 7);
  v11 = sub_100028D48((uint64_t)v23, v7);
  v12 = __chkstk_darwin(v11);
  v14 = (_QWORD *)((char *)&v23[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v15 + 16))(v14, v12);
  v16 = *v14;
  *(_QWORD *)(v10 + 144) = v7;
  *(_QWORD *)(v10 + 152) = &off_100609DE0;
  *(_QWORD *)(v10 + 120) = v16;
  *(_QWORD *)(v10 + 24) = 0;
  swift_unknownObjectWeakInit(v10 + 16, 0);
  *(_QWORD *)(v10 + 40) = 0;
  swift_unknownObjectWeakInit(v10 + 32, 0);
  *(_QWORD *)(v10 + 104) = v6;
  *(_QWORD *)(v10 + 112) = &off_1005EDE48;
  v17 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v10 + 48) = *(_OWORD *)a3;
  *(_OWORD *)(v10 + 64) = v17;
  *(_OWORD *)(v10 + 80) = *(_OWORD *)(a3 + 32);
  *(_QWORD *)(v10 + 96) = *(_QWORD *)(a3 + 48);
  swift_retain();
  swift_retain();
  sub_1001EAA40(a3);
  sub_100027F10(v23);
  v18 = (char *)objc_allocWithZone((Class)type metadata accessor for TTRIAboutYourDevicesViewController());
  v19 = swift_retain();
  v20 = sub_100418A14(v19, v18);
  *(_QWORD *)(v6 + 24) = &off_100606B90;
  swift_unknownObjectWeakAssign(v6 + 16, v10);
  swift_release();
  *(_QWORD *)(v10 + 24) = &off_1005F6AE0;
  swift_unknownObjectWeakAssign(v10 + 16, v20);
  *(_QWORD *)(v10 + 40) = a2;
  swift_unknownObjectWeakAssign(v10 + 32, v22);
  swift_unknownObjectWeakAssign(v8 + 16, v20);
  swift_release();
  return v20;
}

void sub_100418DCC(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t i;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  uint64_t v46;

  v45 = a2;
  v3 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v3);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v39 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v38 = (uint64_t)&v37 - v10;
  v11 = type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay(0);
  v43 = *(_QWORD *)(v11 - 8);
  v44 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v37 - v15;
  v17 = *(_QWORD *)(a1 + 64);
  v41 = a1 + 64;
  v18 = 1 << *(_BYTE *)(a1 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v42 = (unint64_t)(v18 + 63) >> 6;
  v46 = a1;
  swift_bridgeObjectRetain(a1);
  v21 = 0;
  v40 = _swiftEmptyArrayStorage;
  if (v20)
    goto LABEL_8;
LABEL_14:
  v31 = v21 + 1;
  if (!__OFADD__(v21, 1))
  {
    if (v31 < v42)
    {
      v32 = *(_QWORD *)(v41 + 8 * v31);
      ++v21;
      if (v32)
        goto LABEL_29;
      v21 = v31 + 1;
      if (v31 + 1 >= v42)
        goto LABEL_32;
      v32 = *(_QWORD *)(v41 + 8 * v21);
      if (v32)
        goto LABEL_29;
      v21 = v31 + 2;
      if (v31 + 2 >= v42)
        goto LABEL_32;
      v32 = *(_QWORD *)(v41 + 8 * v21);
      if (v32)
        goto LABEL_29;
      v21 = v31 + 3;
      if (v31 + 3 >= v42)
        goto LABEL_32;
      v32 = *(_QWORD *)(v41 + 8 * v21);
      if (v32)
      {
LABEL_29:
        v20 = (v32 - 1) & v32;
        for (i = __clz(__rbit64(v32)) + (v21 << 6); ; i = v23 | (v21 << 6))
        {
          sub_10002B1E8(*(_QWORD *)(v46 + 56) + *(_QWORD *)(v43 + 72) * i, (uint64_t)v16, type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay);
          v34 = sub_10001F580((uint64_t)v16, (uint64_t)v13, type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay);
          v35 = *(_QWORD *)&v13[*(int *)(v44 + 20)];
          if ((*(_QWORD *)v45(v34) & ~v35) != 0)
          {
            v22 = 1;
          }
          else
          {
            sub_10002B1E8((uint64_t)v13, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            v22 = 0;
          }
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v22, 1, v6);
          sub_10001F544((uint64_t)v13, type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
          {
            sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_100640EB0);
            if (!v20)
              goto LABEL_14;
          }
          else
          {
            v25 = v38;
            sub_10001F580((uint64_t)v5, v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            sub_10001F580(v25, v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            if ((swift_isUniquelyReferenced_nonNull_native(v40) & 1) == 0)
              v40 = (_QWORD *)sub_100454EEC(0, v40[2] + 1, 1, (unint64_t)v40);
            v27 = v40[2];
            v26 = v40[3];
            v28 = v27 + 1;
            if (v27 >= v26 >> 1)
            {
              v37 = v27 + 1;
              v36 = (_QWORD *)sub_100454EEC(v26 > 1, v27 + 1, 1, (unint64_t)v40);
              v28 = v37;
              v40 = v36;
            }
            v29 = v39;
            v30 = v40;
            v40[2] = v28;
            sub_10001F580(v29, (uint64_t)v30+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            if (!v20)
              goto LABEL_14;
          }
LABEL_8:
          v23 = __clz(__rbit64(v20));
          v20 &= v20 - 1;
        }
      }
      v33 = v31 + 4;
      if (v33 < v42)
      {
        v32 = *(_QWORD *)(v41 + 8 * v33);
        if (v32)
        {
          v21 = v33;
          goto LABEL_29;
        }
        while (1)
        {
          v21 = v33 + 1;
          if (__OFADD__(v33, 1))
            goto LABEL_34;
          if (v21 >= v42)
            break;
          v32 = *(_QWORD *)(v41 + 8 * v21);
          ++v33;
          if (v32)
            goto LABEL_29;
        }
      }
    }
LABEL_32:
    swift_release();
    return;
  }
  __break(1u);
LABEL_34:
  __break(1u);
}

uint64_t sub_1004191EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10065C128);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10065C128);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10041927C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  void (*v16)(uint64_t, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v30[24];

  v1 = v0;
  v2 = sub_10002A750(&qword_10064A800);
  __chkstk_darwin(v2);
  v4 = &v30[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for TTRRemindersListViewModelSourceSectionsContext.ParamsForAddingEditableSection(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_10063D7C8 != -1)
    swift_once(&qword_10063D7C8, sub_1004191EC);
  v9 = type metadata accessor for Logger(0);
  sub_100012DC4(v9, (uint64_t)qword_10065C128);
  v10 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Reminders List create editable section", 38, 2, v10);
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(v0 + 96);
  swift_beginAccess(v11 + 40, v30, 0, 0);
  v13 = *(_QWORD *)(v11 + 40);
  if (v13)
  {
    v14 = *(_QWORD *)(v11 + 48);
    ObjectType = swift_getObjectType(v13, v12);
    v16 = *(void (**)(uint64_t, uint64_t, __n128))(v14 + 24);
    v17 = swift_unknownObjectRetain(v13);
    v16(ObjectType, v14, v17);
    swift_unknownObjectRelease(v13);
  }
  sub_10041C224(v1, 0);
  v18 = *(_QWORD *)(v1 + 32);
  v19 = *(_QWORD *)(v1 + 40);
  v21 = swift_getObjectType(v18, v20);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 96))(v21, v19);
  if (result)
  {
    v23 = result;
    Strong = swift_unknownObjectWeakLoadStrong(result + 56);
    if (Strong)
    {
      v25 = Strong;
      v26 = *(_QWORD *)(v23 + 64);
      sub_10021EF18(0, 0xE000000000000000, v23, (uint64_t)v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {
        swift_unknownObjectRelease(v25);
        sub_1000073A0((uint64_t)v4, &qword_10064A800);
      }
      else
      {
        sub_10001F580((uint64_t)v4, (uint64_t)v8, type metadata accessor for TTRRemindersListViewModelSourceSectionsContext.ParamsForAddingEditableSection);
        v28 = swift_getObjectType(v25, v27);
        (*(void (**)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 48))(v8, &v8[*(int *)(v5 + 24)], 1, 1, v28, v26);
        swift_unknownObjectRelease(v25);
        sub_10001F544((uint64_t)v8, type metadata accessor for TTRRemindersListViewModelSourceSectionsContext.ParamsForAddingEditableSection);
      }
    }
    return swift_unknownObjectRelease(v23);
  }
  return result;
}

void sub_1004194DC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_BYTE *, uint64_t, uint64_t);
  id v29;
  void (*v30)(_BYTE *, _QWORD);
  _BYTE v31[32];
  id v32;

  v12 = a1[7];
  ObjectType = swift_getObjectType(a1[6], a2);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 40))(ObjectType, v12);
  v16 = v15;
  v17 = swift_getObjectType(v14, v15);
  v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8))(a2, a3, a4, a5, a6, v17, v16);
  swift_unknownObjectRelease(v14);
  if (v18)
  {
    v21 = a1[4];
    v20 = a1[5];
    v22 = swift_getObjectType(v21, v19);
    v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 96))(v22, v20);
    if (v23)
    {
      v25 = v23;
      v26 = v24;
      v27 = swift_getObjectType(v23, v24);
      v28 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v26 + 48);
      v29 = v18;
      v30 = (void (*)(_BYTE *, _QWORD))v28(v31, v27, v26);
      sub_1000176A0((Swift::Int *)&v32, v29);
      v30(v31, 0);
      swift_unknownObjectRelease(v25);

    }
    else
    {

    }
  }
}

void sub_10041960C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t inited;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  __n128 v63;
  uint64_t v64;
  void *v65;
  id v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  Swift::String v78;
  uint64_t v79;
  char *v80;
  __n128 v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t ObjectType;
  uint64_t v86;
  uint64_t *v87;
  _QWORD *v88;
  int v89;
  unsigned int v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t, __n128);
  __n128 v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char **v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unsigned int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t (*v130)(uint64_t, uint64_t, uint64_t);
  int v131;
  uint64_t v132;
  char *v133;
  char *v134;
  char v135;
  uint64_t v136;
  void (*v137)(uint64_t, uint64_t, _QWORD, uint64_t (*)(uint64_t), uint64_t, void (*)(void), uint64_t, uint64_t, uint64_t);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _BOOL4 v150;
  uint64_t v151;
  void (*v152)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void (*v159)(void);
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  Swift::String v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char v179;
  void (*v180)(char *, uint64_t);
  id v181;
  uint64_t v182;
  uint64_t *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  void (*v188)(uint64_t, uint64_t, uint64_t, __int128 *, uint64_t, uint64_t);
  id v189;
  uint64_t v190;
  uint64_t *v191;
  id v192;
  uint64_t Strong;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  void (*v198)(uint64_t *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char v208;
  uint64_t v209;
  uint64_t v210;
  _QWORD *v211;
  uint64_t v212;
  uint64_t *v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t (*v238)(uint64_t, uint64_t, uint64_t);
  uint64_t v239;
  void (*v240)(void);
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  id v248;
  uint64_t v249;
  id v250;
  char *v251;
  uint64_t v252;
  _QWORD *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  _QWORD v257[8];
  _OWORD v258[4];
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;

  v231 = a3;
  v240 = (void (*)(void))a2;
  v249 = a4;
  v252 = *v4;
  v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v7 = __chkstk_darwin(v6);
  v225 = (char *)&v214 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v224 = (char *)&v214 - v9;
  v10 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v220 = *(_QWORD *)(v10 - 8);
  v221 = v10;
  v11 = __chkstk_darwin(v10);
  v219 = (char *)&v214 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v218 = (char *)&v214 - v13;
  v14 = sub_10002A750(&qword_10065C440);
  __chkstk_darwin(v14);
  v228 = (char *)&v214 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v217 = sub_10002A750(&qword_10065C448);
  __chkstk_darwin(v217);
  v216 = (uint64_t)&v214 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v247 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v233 = *(_QWORD *)(v247 - 8);
  v17 = __chkstk_darwin(v247);
  v226 = (uint64_t)&v214 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v229 = (uint64_t)&v214 - v20;
  v21 = __chkstk_darwin(v19);
  v222 = (uint64_t)&v214 - v22;
  v23 = __chkstk_darwin(v21);
  v214 = (uint64_t)&v214 - v24;
  __chkstk_darwin(v23);
  v230 = (uint64_t)&v214 - v25;
  v26 = sub_10002A750(&qword_1006589A0);
  __chkstk_darwin(v26);
  v238 = (char *)&v214 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v242 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  v237 = *(_QWORD *)(v242 - 8);
  __chkstk_darwin(v242);
  v227 = (uint64_t)&v214 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_10002A750((uint64_t *)&unk_100640EB0);
  v30 = __chkstk_darwin(v29);
  v232 = (char *)&v214 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v30);
  v215 = (char *)&v214 - v33;
  v34 = __chkstk_darwin(v32);
  v239 = (uint64_t)&v214 - v35;
  v36 = __chkstk_darwin(v34);
  v223 = (uint64_t)&v214 - v37;
  v38 = __chkstk_darwin(v36);
  v243 = (uint64_t)&v214 - v39;
  __chkstk_darwin(v38);
  v241 = (uint64_t)&v214 - v40;
  v236 = type metadata accessor for TTRRemindersListReminderCreationLocation(0);
  __chkstk_darwin(v236);
  v246 = (uint64_t)&v214 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_10002A750(&qword_100649D38);
  __chkstk_darwin(v42);
  v245 = (char *)&v214 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v235 = sub_10002A750(&qword_100649D40);
  __chkstk_darwin(v235);
  v234 = (uint64_t)&v214 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v45);
  v244 = (uint64_t)&v214 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v47);
  v49 = (char *)&v214 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v251 = (char *)type metadata accessor for REMAnalyticsEvent(0);
  v50 = *((_QWORD *)v251 - 1);
  __chkstk_darwin(v251);
  v52 = (char *)&v214 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for Logger(0);
  v54 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v56 = (char *)&v214 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D7C8 != -1)
    swift_once(&qword_10063D7C8, sub_1004191EC);
  v57 = sub_100012DC4(v53, (uint64_t)qword_10065C128);
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v56, v57, v53);
  v58 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v58, &v256);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x736E6F6974706FLL;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  v248 = a1;
  *(_QWORD *)&v259 = a1;
  v60 = String.init<A>(describing:)(&v259, &type metadata for TTRReminderListNewReminderInDefaultSectionOption);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v60;
  *(_QWORD *)(inited + 56) = v61;
  v62 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List Create New Reminder in default section {options: %@}", 67, 2, v62);
  v63 = swift_bridgeObjectRelease(v62);
  v64 = (*(uint64_t (**)(char *, uint64_t, __n128))(v54 + 8))(v56, v53, v63);
  v65 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v64);
  type metadata accessor for REMAnalyticsManager(0);
  v66 = v65;
  static REMAnalyticsManager.shared.getter();
  v67 = sub_10002A750(&qword_100649F98);
  v68 = &v52[*(int *)(v67 + 48)];
  v69 = &v52[*(int *)(v67 + 80)];
  v70 = enum case for REMUserOperation.createReminder(_:);
  v71 = type metadata accessor for REMUserOperation(0);
  v72 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 104))(v52, v70, v71);
  *(_QWORD *)v68 = TTRUserDefaults.activitySessionId.getter(v72);
  *((_QWORD *)v68 + 1) = v73;
  v250 = v66;
  TTRUserDefaults.activitySessionBeginTime.getter();
  *(_QWORD *)&v259 = 0;
  *((_QWORD *)&v259 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  v74 = *((_QWORD *)&v259 + 1);
  v75 = _typeName(_:qualified:)(v252, 0);
  v77 = v76;
  swift_bridgeObjectRelease(v74);
  *(_QWORD *)&v259 = v75;
  *((_QWORD *)&v259 + 1) = v77;
  v78._countAndFlagsBits = 0x746C75616665442DLL;
  v78._object = (void *)0xEF6E6F6974636553;
  String.append(_:)(v78);
  v79 = *((_QWORD *)&v259 + 1);
  *(_QWORD *)v69 = v259;
  *((_QWORD *)v69 + 1) = v79;
  v80 = v251;
  (*(void (**)(char *, _QWORD, char *))(v50 + 104))(v52, enum case for REMAnalyticsEvent.userOperation(_:), v251);
  REMAnalyticsManager.post(event:)(v52);
  v81 = swift_release();
  (*(void (**)(char *, char *, __n128))(v50 + 8))(v52, v80, v81);
  v82 = v253;
  v83 = v253[5];
  ObjectType = swift_getObjectType(v253[4], v84);
  (*(void (**)(uint64_t, uint64_t))(v83 + 136))(ObjectType, v83);
  v86 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 48))(v49, 1, v86) == 1)
  {
    v87 = &qword_100649CA0;
LABEL_5:
    sub_1000073A0((uint64_t)v49, v87);
LABEL_10:

    v92 = sub_10002A750(&qword_100654890);
    v93 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56);
    v94 = v249;
LABEL_11:
    v93(v94, 1, 1, v92);
    return;
  }
  v88 = v82;
  v89 = v49[*(int *)(v86 + 44)];
  sub_10001F544((uint64_t)v49, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  if (v89 != 1)
    goto LABEL_10;
  v90 = v248;
  if ((v248 & 4) != 0)
  {
    v95 = v88[12];
    swift_beginAccess(v95 + 40, &v254, 0, 0);
    v97 = *(_QWORD *)(v95 + 40);
    if (v97)
    {
      v98 = *(_QWORD *)(v95 + 48);
      v99 = swift_getObjectType(v97, v96);
      v100 = *(void (**)(uint64_t, uint64_t, __n128))(v98 + 24);
      v101 = swift_unknownObjectRetain(v97);
      v100(v99, v98, v101);
      swift_unknownObjectRelease(v97);
    }
    else if ((v90 & 1) == 0)
    {
      goto LABEL_8;
    }
    v121 = sub_10002A750(&qword_100654890);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56))(v249, 1, 1, v121);

    return;
  }
LABEL_8:
  v49 = v245;
  sub_10041AA68(v90, (uint64_t)v245);
  v91 = sub_10002A750(&qword_100649D48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 48))(v49, 1, v91) == 1)
  {
    v87 = &qword_100649D38;
    goto LABEL_5;
  }
  v102 = &v49[*(int *)(v91 + 48)];
  v103 = *(_QWORD *)v102;
  v104 = *((_QWORD *)v102 + 1);
  v105 = v102[16];
  v107 = v234;
  v106 = v235;
  v108 = (uint64_t)v49;
  v109 = v234 + *(int *)(v235 + 48);
  sub_10001F580(v108, v234, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  *(_QWORD *)v109 = v103;
  *(_QWORD *)(v109 + 8) = v104;
  *(_BYTE *)(v109 + 16) = v105;
  v110 = (char **)(v107 + *(int *)(v106 + 48));
  v245 = *v110;
  v251 = v110[1];
  LODWORD(v252) = *((unsigned __int8 *)v110 + 16);
  v111 = v244;
  sub_10001F580(v107, v244, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  v112 = v111;
  v113 = v246;
  sub_10002B1E8(v112, v246, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  swift_storeEnumTagMultiPayload(v113, v236, 1);
  v114 = (uint64_t)v238;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 392))(v113, ObjectType, v83);
  v115 = v242;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v237 + 48))(v114, 1, v242) == 1)
  {
    sub_1000073A0(v114, &qword_1006589A0);
    v116 = v233;
    v117 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v233 + 56);
    v118 = v243;
    v119 = v243;
    v120 = v247;
LABEL_21:
    v242 = (uint64_t)v117;
    v117(v119, 1, 1, v120);
    goto LABEL_23;
  }
  v122 = v227;
  sub_10001F580(v114, v227, type metadata accessor for TTRRemindersListUncommittedReminder);
  v123 = *(_QWORD *)(v122 + *(int *)(v115 + 24));
  v118 = v243;
  v120 = v247;
  v116 = v233;
  if (v123 && *(_BYTE *)(v123 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_saveState))
  {
    sub_10001F544(v122, type metadata accessor for TTRRemindersListUncommittedReminder);
    v117 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v116 + 56);
    v119 = v118;
    goto LABEL_21;
  }
  v124 = v223;
  sub_10002B1E8(v122 + *(int *)(v242 + 20), v223, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10001F544(v122, type metadata accessor for TTRRemindersListUncommittedReminder);
  v242 = *(_QWORD *)(v116 + 56);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v242)(v124, 0, 1, v120);
  sub_10000F614(v124, v118, (uint64_t *)&unk_100640EB0);
LABEL_23:
  v125 = (uint64_t)v253;
  v126 = v248;
  v127 = v248 & 0x20;
  v128 = v118;
  v129 = v239;
  sub_10000735C(v128, v239, (uint64_t *)&unk_100640EB0);
  v130 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v116 + 48);
  v131 = v130(v129, 1, v120);
  v238 = (char *)v130;
  if (v131 == 1)
  {
    LODWORD(v237) = v127 != 0;
    sub_1000073A0(v129, (uint64_t *)&unk_100640EB0);
    v132 = swift_allocObject(&unk_100607070, 41, 7);
    v133 = v245;
    *(_QWORD *)(v132 + 16) = v125;
    *(_QWORD *)(v132 + 24) = v133;
    v134 = v251;
    *(_QWORD *)(v132 + 32) = v251;
    v135 = v252;
    *(_BYTE *)(v132 + 40) = v252;
    if ((v126 & 1) != 0)
      v136 = 2;
    else
      v136 = (v126 >> 4) & 1;
    v137 = *(void (**)(uint64_t, uint64_t, _QWORD, uint64_t (*)(uint64_t), uint64_t, void (*)(void), uint64_t, uint64_t, uint64_t))(v83 + 400);
    swift_retain();
    sub_10042B648(v133, v134, v135);
    v138 = (uint64_t)v228;
    v137(v246, v136, v237, sub_10042B638, v132, v240, v231, ObjectType, v83);
    v139 = sub_10002A750(&qword_100659458);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v139 - 8) + 48))(v138, 1, v139) == 1)
    {
      sub_1000073A0(v138, &qword_10065C440);
      v140 = v241;
      v141 = v247;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v242)(v241, 1, 1, v247);
      swift_release();
      v142 = v249;
      v143 = v253;
LABEL_40:
      v158 = (uint64_t)v232;
      v130 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v238;
      goto LABEL_51;
    }
    v240 = (void (*)(void))v132;
    v167 = *(_QWORD *)(v138 + *(int *)(v139 + 48));
    v168 = v217;
    v169 = *(int *)(v217 + 48);
    v170 = v138;
    v171 = v216;
    sub_10001F580(v170, v216, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(_QWORD *)(v171 + v169) = v167;
    v248 = *(id *)(v171 + *(int *)(v168 + 48));
    v172 = v171;
    v173 = v222;
    sub_10001F580(v172, v222, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v174 = v241;
    sub_10002B1E8(v173, v241, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v242)(v174, 0, 1, v247);
    v175 = v218;
    (*(void (**)(uint64_t, uint64_t))(v83 + 600))(ObjectType, v83);
    v176 = v219;
    v177 = v220;
    v178 = v221;
    (*(void (**)(char *, _QWORD, uint64_t))(v220 + 104))(v219, enum case for REMRemindersListDataView.SortingStyle.manual(_:), v221);
    v179 = static REMRemindersListDataView.SortingStyle.== infix(_:_:)(v175, v176);
    v180 = *(void (**)(char *, uint64_t))(v177 + 8);
    v180(v176, v178);
    v180(v175, v178);
    if ((v179 & 1) == 0)
    {
      sub_10001F544(v173, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_release();

      v142 = v249;
      v143 = v253;
      v140 = v241;
      v141 = v247;
      goto LABEL_40;
    }
    v181 = v248;
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v83 + 632))(v257, ObjectType, v83);
    sub_10000F614((uint64_t)v257, (uint64_t)v258, &qword_10064A808);
    v130 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v238;
    if (*(_QWORD *)&v258[0])
    {
      v259 = v258[0];
      v260 = v258[1];
      v261 = v258[2];
      v262 = v258[3];
      v183 = v253;
      v184 = v253[7];
      v242 = swift_getObjectType(v253[6], v182);
      v185 = sub_10002A750((uint64_t *)&unk_1006415A0);
      v186 = swift_allocObject(v185, 40, 7);
      *(_OWORD *)(v186 + 16) = xmmword_100521140;
      *(_QWORD *)(v186 + 32) = v181;
      v255 = v186;
      specialized Array._endMutation()(v186);
      v187 = v255;
      v188 = *(void (**)(uint64_t, uint64_t, uint64_t, __int128 *, uint64_t, uint64_t))(v184 + 440);
      v189 = v181;
      v190 = v173;
      v191 = v183;
      v192 = v189;
      v188(v187, 1, 4, &v259, v242, v184);
      swift_bridgeObjectRelease(v187);
      sub_10017A154((uint64_t)v257);

      v143 = v191;
      sub_10001F544(v190, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_release();
      v142 = v249;
    }
    else
    {
      sub_10001F544(v173, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_release();

      v142 = v249;
      v143 = v253;
    }
    v140 = v241;
    v141 = v247;
    goto LABEL_50;
  }
  v144 = v230;
  sub_10001F580(v129, v230, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v143 = (uint64_t *)v125;
  v145 = sub_10041AE70(v125, v144, v126);
  v140 = v241;
  if ((v145 & 1) != 0)
  {
    v146 = TTRInCellEditingPresenterManagingHelper.activeInCellTitleEditingPresenter(editing:)(v144);
    if (v146)
    {
      v148 = v146;
      v149 = v147;
      v150 = (v248 & 1) == 0;
      v151 = swift_getObjectType(v146, v147);
      v152 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v149 + 40);
      v153 = (uint64_t)v240;
      v154 = v231;
      sub_100053DE4((uint64_t)v240, v231);
      v155 = v150 | (8 * v127);
      v156 = (uint64_t)v215;
      v157 = v151;
      v130 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v238;
      v152(v153, v154, v155, v157, v149);
      swift_unknownObjectRelease(v148);
      sub_1000381B8(v153, v154);
      v141 = v247;
      if (v130(v156, 1, v247) != 1)
      {
        sub_10001F544(v230, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v200 = v214;
        sub_10001F580(v156, v214, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v201 = v200;
        v130 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v238;
        sub_10001F580(v201, v140, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v242)(v140, 0, 1, v141);
        v142 = v249;
        v143 = v253;
LABEL_50:
        v158 = (uint64_t)v232;
        goto LABEL_51;
      }
      sub_1000073A0(v156, (uint64_t *)&unk_100640EB0);
      v143 = v253;
      v144 = v230;
    }
  }
  sub_10002B1E8(v144, v140, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v141 = v247;
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v242)(v140, 0, 1, v247);
  v142 = v249;
  v158 = (uint64_t)v232;
  v159 = v240;
  if (v240)
  {
    v160 = *v143;
    v161 = v231;
    swift_retain();
    *(_QWORD *)&v259 = _typeName(_:qualified:)(v160, 0);
    *((_QWORD *)&v259 + 1) = v162;
    v163._countAndFlagsBits = 0x6C616974696E692DLL;
    v163._object = (void *)0xED000065756C6156;
    String.append(_:)(v163);
    v164 = *((_QWORD *)&v259 + 1);
    v165 = sub_100300AE8(v144, v259, *((unint64_t *)&v259 + 1));
    swift_bridgeObjectRelease(v164);
    if (v165)
    {
      type metadata accessor for TTRReminderEditor(0);
      v166 = *(void **)(v165 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
      *(_QWORD *)&v261 = 0;
      v259 = 0u;
      v260 = 0u;
      swift_retain();
      TTRReminderEditor.__allocating_init(changeItem:undoContext:)(v166, &v259);
      v159();
      swift_release();
      sub_1000381B8((uint64_t)v159, v161);
      swift_release();
      swift_release();
    }
    else
    {
      sub_1000381B8((uint64_t)v159, v161);
    }
    v143 = v253;
    v141 = v247;
    v130 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v238;
  }
  if ((v248 & 1) == 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v143 + 2);
    if (Strong)
    {
      v195 = Strong;
      v196 = v143[3];
      v197 = swift_getObjectType(Strong, v194);
      v198 = *(void (**)(uint64_t *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v196 + 24);
      v199 = v196;
      v141 = v247;
      v198(v143, &off_100606F60, v144, v197, v199);
      swift_unknownObjectRelease(v195);
    }
  }
  sub_10001F544(v144, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_51:
  sub_10000735C(v140, v158, (uint64_t *)&unk_100640EB0);
  if (v130(v158, 1, v141) == 1)
  {

    sub_100089930(v245, v251, v252);
    sub_1000073A0(v243, (uint64_t *)&unk_100640EB0);
    sub_1000073A0(v140, (uint64_t *)&unk_100640EB0);
    sub_10001F544(v246, type metadata accessor for TTRRemindersListReminderCreationLocation);
    sub_10001F544(v244, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_1000073A0(v158, (uint64_t *)&unk_100640EB0);
    v92 = sub_10002A750(&qword_100654890);
    v93 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56);
    v94 = v142;
    goto LABEL_11;
  }
  v202 = v229;
  sub_10001F580(v158, v229, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v203 = v143[11];
  if (!v203)
    goto LABEL_57;
  v204 = swift_retain();
  v205 = (uint64_t)v224;
  v206 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v204);
  v207 = (uint64_t)v225;
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v206);
  v208 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v205, v207);
  sub_10001F544(v207, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  sub_10001F544(v205, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  if ((v208 & 1) == 0)
  {
    swift_release();
LABEL_57:
    v209 = v226;
    sub_10002B1E8(v202, v226, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v210 = type metadata accessor for PencilWritingStateReporter(0);
    v203 = swift_allocObject(v210, *(unsigned int *)(v210 + 48), *(unsigned __int16 *)(v210 + 52));
    swift_weakInit(v203 + OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_editingPresenter, 0);
    *(_QWORD *)(v203
              + OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_cancellable) = 0;
    sub_10001F580(v209, v203 + OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_item, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v211 = v253;
    swift_weakAssign(v203 + OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_editingPresenter, v253);

    sub_100089930(v245, v251, v252);
    sub_1000073A0(v243, (uint64_t *)&unk_100640EB0);
    sub_1000073A0(v140, (uint64_t *)&unk_100640EB0);
    sub_10001F544(v246, type metadata accessor for TTRRemindersListReminderCreationLocation);
    sub_10001F544(v244, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v211[11] = v203;
    swift_retain();
    swift_release();
    goto LABEL_58;
  }

  sub_100089930(v245, v251, v252);
  sub_1000073A0(v243, (uint64_t *)&unk_100640EB0);
  sub_1000073A0(v140, (uint64_t *)&unk_100640EB0);
  sub_10001F544(v246, type metadata accessor for TTRRemindersListReminderCreationLocation);
  sub_10001F544(v244, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
LABEL_58:
  v212 = sub_10002A750(&qword_100654890);
  v213 = (uint64_t *)(v142 + *(int *)(v212 + 48));
  sub_10001F580(v202, v142, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *v213 = v203;
  v213[1] = (uint64_t)&off_100606E60;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v212 - 8) + 56))(v142, 0, 1, v212);
}

uint64_t sub_10041AA68@<X0>(unsigned int a1@<W0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(void **__return_ptr, _QWORD, uint64_t (*)(uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t);
  uint64_t v16;
  void *v17;
  void *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t Strong;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  unsigned __int8 v48;
  void (*v49)(void);

  v3 = v2;
  v45 = a2;
  v5 = sub_10002A750(&qword_100644980);
  __chkstk_darwin(v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v3[5];
  ObjectType = swift_getObjectType(v3[4], v13);
  v15 = *(void (**)(void **__return_ptr, _QWORD, uint64_t (*)(uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t))(v12 + 336);
  swift_retain();
  v15(&v46, (a1 >> 6) & 1, sub_10042B688, v3, ObjectType, v12);
  swift_release();
  v18 = v46;
  v17 = v47;
  v19 = v48;
  if (!v48)
  {
    if (!(_BYTE)v46 || (v25 = v47, v44 = (uint64_t)v46, v46 != 1))
    {
      sub_10004DDA4(v46, v47, 0);
      LOBYTE(v19) = 0;
LABEL_27:
      v41 = v45;
      sub_10004DDA4(v18, v17, v19);
      swift_release();
      v42 = sub_10002A750(&qword_100649D48);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, 1, 1, v42);
    }
LABEL_24:
    Strong = swift_unknownObjectWeakLoadStrong(v3 + 2);
    if (Strong)
    {
      v38 = Strong;
      v39 = v3[3];
      v40 = swift_getObjectType(Strong, v37);
      (*(void (**)(_QWORD *, _UNKNOWN **, uint64_t, uint64_t))(v39 + 40))(v3, &off_100606F60, v40, v39);
      sub_10004DDA4((void *)v44, v25, 0);
      swift_unknownObjectRelease(v38);
    }
    else
    {
      sub_10004DDA4((void *)v44, v25, 0);
    }
    goto LABEL_27;
  }
  if (v48 == 1)
  {
    if (v47 == 3 && !v46)
    {
      v20 = v3[7];
      v21 = swift_getObjectType(v3[6], v16);
      v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 536))(v21, v20);
      v44 = 1;
      if (v22)
      {
        v23 = (void *)v22;
        v24 = 1;
        goto LABEL_13;
      }
      v25 = 0;
      goto LABEL_24;
    }
    v26 = v46;
  }
  else
  {
    sub_10004DD44(v46, v47, v48);
  }
  v23 = v18;
  v24 = (uint64_t)v17;
LABEL_13:
  v49();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
  {
    sub_10001F580((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    if (v19 == 1)
    {
      sub_10004DDA4(v18, v17, 1);
      swift_release();
      v29 = 0;
      v24 = v24;
    }
    else
    {
      if (v19 != 2)
      {
        sub_10004DDA4(v23, (void *)v24, 3);
        sub_10004DDA4(v18, v17, 3);
        swift_release();
        sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        goto LABEL_21;
      }
      v27 = (id)v24;
      v28 = v23;
      sub_10004DDA4(v23, (void *)v24, 2);
      sub_10004DDA4(v18, v17, 2);
      swift_release();
      v29 = 1;
    }
    v30 = sub_10002A750(&qword_100649D48);
    v31 = v45;
    v32 = v45 + *(int *)(v30 + 48);
    sub_10001F580((uint64_t)v11, v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    *(_QWORD *)v32 = v23;
    *(_QWORD *)(v32 + 8) = v24;
    *(_BYTE *)(v32 + 16) = v29;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v31, 0, 1, v30);
  }
  sub_10004DDA4(v18, v17, v19);
  swift_release();
  sub_10004DDA4(v23, (void *)v24, v19);
  sub_1000073A0((uint64_t)v7, &qword_100644980);
LABEL_21:
  v34 = v45;
  v35 = sub_10002A750(&qword_100649D48);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
}

uint64_t sub_10041AE70(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  result = TTRInCellEditingPresenterManagingHelper.activeInCellTitleEditingPresenter(editing:)(a2);
  if (result)
  {
    v6 = result;
    if ((a3 & 8) != 0)
    {
      swift_unknownObjectRelease(result);
      return 1;
    }
    if ((a3 & 0x10) != 0)
    {
      v7 = v5;
      ObjectType = swift_getObjectType(result, v5);
      LOBYTE(v7) = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(ObjectType, v7);
      swift_unknownObjectRelease(v6);
      if ((v7 & 1) != 0)
        return 1;
    }
    else
    {
      swift_unknownObjectRelease(result);
    }
    return 0;
  }
  return result;
}

uint64_t sub_10041AF00(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v10 = a2[7];
  ObjectType = swift_getObjectType(a2[6], a2);
  v12 = a2[5];
  v14 = swift_getObjectType(a2[4], v13);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 432))(v14, v12);
  v16 = TTRRemindersListInteractorType.newReminderChangeItem(objectID:title:targetContainer:position:remindersBeingSaved:)(a1, 0, 0xE000000000000000, a3, a4, a5, 1, 4, v15, ObjectType, v10);
  swift_bridgeObjectRelease(v15);
  return v16;
}

void sub_10041AFC4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unsigned int EnumCaseMultiPayload;
  uint64_t v10;
  unint64_t v11;
  Swift::String v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v5 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v5);
  if (EnumCaseMultiPayload >= 2)
  {
    if (EnumCaseMultiPayload == 2)
    {
      v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a2, 1, 1, v10);
      sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      return;
    }
  }
  else
  {
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
  }
  v20 = _typeName(_:qualified:)(*v2, 0);
  v21 = v11;
  v12._countAndFlagsBits = 0x6C616974696E692DLL;
  v12._object = (void *)0xED000065756C6156;
  String.append(_:)(v12);
  v13 = v21;
  sub_100300AE8(a1, v20, v21);
  swift_bridgeObjectRelease(v13);
  swift_release();
  v14 = v2[5];
  ObjectType = swift_getObjectType(v2[4], v15);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 320))(a1, ObjectType, v14);
  if (v17)
  {
    v18 = (void *)v17;
    sub_10041B17C(a1, v17, 0, 0, 257, a2);

  }
  else
  {
    v19 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a2, 1, 1, v19);
  }
}

void sub_10041B17C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  void (*v33)(uint64_t, uint64_t);
  _QWORD v35[4];
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  int v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v7 = v6;
  v44 = a5;
  v46 = a3;
  v47 = a4;
  v60 = a6;
  v51 = *v6;
  v10 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v39 = *(_QWORD *)(v10 - 8);
  v40 = v10;
  __chkstk_darwin(v10);
  v38 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v37 = (char *)v35 - v13;
  v14 = sub_10002A750(&qword_10065C440);
  __chkstk_darwin(v14);
  v45 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_10002A750(&qword_10065C448);
  __chkstk_darwin(v36);
  v35[3] = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10002A750(&qword_1006589A0);
  __chkstk_darwin(v17);
  v52 = (char *)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v59 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v41 = (char *)v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v42 = (char *)v35 - v21;
  __chkstk_darwin(v22);
  v43 = (char *)v35 - v23;
  v50 = type metadata accessor for TTRRemindersListReminderCreationLocation(0);
  __chkstk_darwin(v50);
  v55 = (char *)v35 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v25);
  v56 = (char *)v35 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for REMAnalyticsEvent(0);
  v48 = *(_QWORD *)(v27 - 8);
  v49 = v27;
  __chkstk_darwin(v27);
  v28 = type metadata accessor for Logger(0);
  __chkstk_darwin(v28);
  v29 = v6[4];
  v54 = v7;
  v30 = v7[5];
  ObjectType = swift_getObjectType(v29, v31);
  v33 = *(void (**)(uint64_t, uint64_t))(v30 + 352);
  v53 = a2;
  v57 = v29;
  v58 = ObjectType;
  v33(a1, a2);
  __asm { BR              X10 }
}

void sub_10041B498(void *a1)
{
  _QWORD *v1;
  char v2;
  void *v3;

  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v1[30] + 56))(v1[31], 1, 1, v1[32]);
  sub_10004DDA4(a1, v3, v2);
}

void sub_10041B4E0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t Strong;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  _OWORD *v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t ObjectType;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  void (*v92)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t);
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  id v98;
  void *v99;
  void *v100;
  uint64_t v101;

  *(_QWORD *)(v1 + 184) = v2;
  *(_DWORD *)(v1 + 20) = 0;
  *(_QWORD *)(v1 + 8) = v6;
  *(_QWORD *)(v1 + 168) = a1;
  *(_QWORD *)(v1 + 176) = v6;
  v11 = qword_10063D7C8;
  v12 = a1;
  if (v11 != -1)
    swift_once(&qword_10063D7C8, sub_1004191EC);
  v13 = sub_100012DC4(v7, (uint64_t)qword_10065C128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v13, v7);
  v14 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v14, v1 + 272);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 1835365481;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v16 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
  v17 = TTRTreeStorageItem.treeItemDescription.getter(*(_QWORD *)(v1 + 256), v16);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v17;
  *(_QWORD *)(inited + 56) = v18;
  v19 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List: Create a new reminder below {item: %@}", 54, 2, v19);
  v20 = swift_bridgeObjectRelease(v19);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v3, v7, v20);
  v22 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v21);
  type metadata accessor for REMAnalyticsManager(0);
  v23 = v22;
  static REMAnalyticsManager.shared.getter();
  v24 = sub_10002A750(&qword_100649F98);
  v25 = (_QWORD *)(v5 + *(int *)(v24 + 48));
  v26 = (_QWORD *)(v5 + *(int *)(v24 + 80));
  v27 = enum case for REMUserOperation.createReminder(_:);
  v28 = type metadata accessor for REMUserOperation(0);
  v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v5, v27, v28);
  *v25 = TTRUserDefaults.activitySessionId.getter(v29);
  v25[1] = v30;
  *(_QWORD *)v1 = v23;
  TTRUserDefaults.activitySessionBeginTime.getter();
  *(_QWORD *)(v10 - 160) = _typeName(_:qualified:)(*(_QWORD *)(v1 + 152), 0);
  *(_QWORD *)(v10 - 152) = v31;
  v32._countAndFlagsBits = 0x69547974706D452DLL;
  v32._object = (void *)0xEB00000000656C74;
  String.append(_:)(v32);
  v33 = *(_QWORD *)(v10 - 152);
  *v26 = *(_QWORD *)(v10 - 160);
  v26[1] = v33;
  v35 = *(_QWORD *)(v1 + 128);
  v34 = *(_QWORD *)(v1 + 136);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v35 + 104))(v5, enum case for REMAnalyticsEvent.userOperation(_:), v34);
  REMAnalyticsManager.post(event:)(v5);
  v36 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v35 + 8))(v5, v34, v36);
  v37 = swift_allocObject(&unk_100607020, 57, 7);
  v38 = *(void **)(v1 + 192);
  v39 = *(_QWORD *)(v1 + 200);
  v40 = *(void **)(v1 + 168);
  *(_QWORD *)(v37 + 16) = v39;
  *(_QWORD *)(v37 + 24) = v40;
  *(_QWORD *)(v37 + 32) = *(_QWORD *)(v1 + 8);
  *(_BYTE *)(v37 + 40) = *(_DWORD *)(v1 + 20);
  *(_QWORD *)(v37 + 48) = v38;
  *(_BYTE *)(v37 + 56) = 3;
  v41 = v8;
  v42 = *(_QWORD *)(v1 + 208);
  sub_10002B1E8(v41, v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_storeEnumTagMultiPayload(v42, *(_QWORD *)(v1 + 144), 2);
  v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 392);
  v44 = v38;
  sub_10004DD44(v40, *(void **)(v1 + 176), *(_QWORD *)(v1 + 184));
  *(_QWORD *)(v1 + 152) = v44;
  swift_retain();
  v45 = *(_QWORD *)(v1 + 160);
  v46 = *(_QWORD *)(v1 + 232);
  v43(v42, v46, v9);
  v47 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48))(v45, 1, v47) == 1)
  {
    v48 = (*(_DWORD *)(v1 + 100) >> 8) & 1;
    sub_1000073A0(v45, &qword_1006589A0);
    v49 = *(_QWORD *)(v1 + 104);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t (*)(uint64_t), uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v9 + 400))(v42, 0, v48, sub_10042B590, v37, *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120), v46, v9);
    v50 = sub_10002A750(&qword_100659458);
    v51 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v49, 1, v50);
    v52 = *(_QWORD *)(v1 + 216);
    if (v51 == 1)
    {
      sub_1000073A0(v49, &qword_10065C440);

      v54 = *(void **)(v1 + 168);
      v53 = *(void **)(v1 + 176);
      v55 = *(_QWORD *)(v1 + 184);
      sub_10004DDA4(v54, v53, v55);
      sub_10004DDA4(v54, v53, v55);
      sub_10001F544(v42, type metadata accessor for TTRRemindersListReminderCreationLocation);
      (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 + 240) + 56))(v52, 1, 1, *(_QWORD *)(v1 + 256));
    }
    else
    {
      v68 = *(_QWORD *)(v49 + *(int *)(v50 + 48));
      v69 = *(_QWORD *)(v1 + 32);
      v70 = *(int *)(v69 + 48);
      v71 = v49;
      v72 = *(_QWORD *)(v1 + 24);
      sub_10001F580(v71, v72, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      *(_QWORD *)(v72 + v70) = v68;
      *(_QWORD *)(v1 + 160) = *(_QWORD *)(v72 + *(int *)(v69 + 48));
      v73 = v72;
      v74 = *(_QWORD *)(v1 + 72);
      sub_10001F580(v73, v74, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10002B1E8(v74, v52, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v1 + 240) + 56))(v52, 0, 1, *(_QWORD *)(v1 + 256));
      v75 = *(_QWORD *)(v1 + 40);
      (*(void (**)(_QWORD, uint64_t))(v9 + 600))(*(_QWORD *)(v1 + 232), v9);
      v76 = *(_QWORD *)(v1 + 48);
      v77 = *(_QWORD *)(v1 + 56);
      v78 = *(_QWORD *)(v1 + 64);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v77 + 104))(v76, enum case for REMRemindersListDataView.SortingStyle.manual(_:), v78);
      v79 = static REMRemindersListDataView.SortingStyle.== infix(_:_:)(v75, v76);
      v80 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
      v80(v76, v78);
      v80(v75, v78);
      if ((v79 & 1) != 0
        && ((*(void (**)(_QWORD, uint64_t))(v9 + 632))(*(_QWORD *)(v1 + 232), v9),
            sub_10000F614(v1 + 352, v10 - 224, &qword_10064A808),
            *(_QWORD *)(v10 - 224)))
      {
        v82 = (_OWORD *)(v10 - 224);
        v83 = *(_OWORD *)(v10 - 208);
        v82[4] = *(_OWORD *)(v10 - 224);
        v82[5] = v83;
        v84 = *(_OWORD *)(v10 - 176);
        v82[6] = *(_OWORD *)(v10 - 192);
        v82[7] = v84;
        v85 = *(_QWORD *)(v1 + 200);
        v86 = *(_QWORD *)(v85 + 56);
        ObjectType = swift_getObjectType(*(_QWORD *)(v85 + 48), v81);
        v88 = sub_10002A750((uint64_t *)&unk_1006415A0);
        v89 = swift_allocObject(v88, 40, 7);
        *(_OWORD *)(v89 + 16) = xmmword_100521140;
        v90 = *(void **)(v1 + 160);
        *(_QWORD *)(v89 + 32) = v90;
        *(_QWORD *)(v1 + 264) = v89;
        specialized Array._endMutation()(v89);
        v91 = *(_QWORD *)(v1 + 264);
        v92 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v86 + 440);
        v93 = v90;
        v94 = v86;
        v95 = *(_QWORD *)(v1 + 72);
        v92(v91, *(_QWORD *)(v1 + 192), 3, v10 - 160, ObjectType, v94);

        v96 = v91;
        v52 = *(_QWORD *)(v1 + 216);
        swift_bridgeObjectRelease(v96);
        sub_10017A154(v1 + 352);
        v97 = *(void **)(v1 + 152);
        v98 = v93;
        v42 = *(_QWORD *)(v1 + 208);
      }
      else
      {

        v98 = *(id *)v1;
        v97 = *(void **)(v1 + 160);
        v95 = *(_QWORD *)(v1 + 72);
      }

      v100 = *(void **)(v1 + 168);
      v99 = *(void **)(v1 + 176);
      v101 = *(_QWORD *)(v1 + 184);
      sub_10004DDA4(v100, v99, v101);
      sub_10004DDA4(v100, v99, v101);
      sub_10001F544(v95, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10001F544(v42, type metadata accessor for TTRRemindersListReminderCreationLocation);
    }
    v61 = *(_QWORD *)(v1 + 248);
  }
  else
  {
    v56 = v45 + *(int *)(v47 + 20);
    v57 = *(_QWORD *)(v1 + 80);
    sub_10002B1E8(v56, v57, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F544(v45, type metadata accessor for TTRRemindersListUncommittedReminder);
    v58 = *(_QWORD *)(v1 + 88);
    sub_10001F580(v57, v58, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v52 = *(_QWORD *)(v1 + 216);
    sub_10002B1E8(v58, v52, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v1 + 240) + 56))(v52, 0, 1, *(_QWORD *)(v1 + 256));
    Strong = swift_unknownObjectWeakLoadStrong(v39 + 16);
    v61 = *(_QWORD *)(v1 + 248);
    if (Strong)
    {
      v62 = Strong;
      v63 = *(_QWORD *)(v39 + 24);
      v64 = swift_getObjectType(Strong, v60);
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v63 + 24))(v39, &off_100606F60, v58, v64, v63);
      swift_unknownObjectRelease(v62);
    }

    v66 = *(void **)(v1 + 168);
    v65 = *(void **)(v1 + 176);
    v67 = *(_QWORD *)(v1 + 184);
    sub_10004DDA4(v66, v65, v67);
    sub_10004DDA4(v66, v65, v67);
    sub_10001F544(v58, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F544(v42, type metadata accessor for TTRRemindersListReminderCreationLocation);
  }
  sub_10000F614(v52, v61, (uint64_t *)&unk_100640EB0);
  swift_release();
}

void sub_10041BC88(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  Swift::String v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *object;
  Swift::Bool isValid;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  NSString v43;
  id v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  Swift::tuple_title_String_isValid_Bool v53;

  v2 = v1;
  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = TTRInCellEditingPresenterManagingHelper.activeInCellTitleEditingPresenter(editing:)(a1);
  if (v7)
  {
    v9 = v7;
    v10 = v8;
    ObjectType = swift_getObjectType(v7, v8);
    (*(void (**)(uint64_t, uint64_t))(v10 + 24))(ObjectType, v10);
    swift_unknownObjectRelease(v9);
    return;
  }
  v47 = 0;
  v48 = 0xE000000000000000;
  _StringGuts.grow(_:)(23);
  v12 = v48;
  v13 = _typeName(_:qualified:)(*v2, 0);
  v15 = v14;
  swift_bridgeObjectRelease(v12);
  v47 = v13;
  v48 = v15;
  v16._object = (void *)0x80000001005791D0;
  v16._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v16);
  v17 = v48;
  v18 = sub_1003003A4(a1, v47, v48);
  v20 = v19;
  swift_bridgeObjectRelease(v17);
  if (v18)
  {
    v22 = swift_getObjectType(v18, v21);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v20 + 32))(&v47, v22, v20);
    v23 = v49;
    v24 = v50;
    sub_10001413C(&v47, v49);
    (*(void (**)(uint64_t, uint64_t))(v24 + 48))(v23, v24);
    if (v25)
    {
      v26 = v25;
      v53 = String.validatedReminderTitle()();
      object = v53.title._object;
      isValid = v53.isValid;
      swift_bridgeObjectRelease(v26);
      sub_100027F10(&v47);
      v29 = swift_bridgeObjectRelease(object);
      if (isValid)
        goto LABEL_13;
    }
    else
    {
      sub_100027F10(&v47);
    }
    TTRRemindersListEditingSession.effectiveParentList.getter(&v47, v22, v20, v29);
    static TTRLocalizableStrings.Common.defaultTitleForBlankReminder(effectiveParentList:)(&v47);
    v41 = v40;
    sub_1000073A0((uint64_t)&v47, &qword_100649C80);
    v42 = objc_allocWithZone((Class)NSAttributedString);
    v43 = String._bridgeToObjectiveC()();
    v44 = objc_msgSend(v42, "initWithString:", v43, swift_bridgeObjectRelease(v41).n128_f64[0]);

    TTRRemindersListEditingSession.setTitleWithOptionalUndo(_:locale:undoRegistration:canMarkHasSetTitle:)(v44, 0, 0, 0, 1, v22, v20);
    v46 = (_QWORD *)TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor(v45);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v20 + 104))(*v46, v22, v20);
LABEL_13:
    (*(void (**)(_QWORD, uint64_t, uint64_t, __n128))(v20 + 112))(0, v22, v20, v29);
    swift_unknownObjectRelease(v18);
    return;
  }
  if (qword_10063D7C8 != -1)
    swift_once(&qword_10063D7C8, sub_1004191EC);
  v30 = type metadata accessor for Logger(0);
  sub_100012DC4(v30, (uint64_t)qword_10065C128);
  v31 = sub_10002B1E8(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.error.getter(v32);
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc(12, -1);
    v35 = swift_slowAlloc(32, -1);
    v47 = v35;
    *(_DWORD *)v34 = 136315138;
    v36 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
    v37 = TTRTreeStorageItem.treeItemDescription.getter(v4, v36);
    v39 = v38;
    v51 = sub_100027E40(v37, v38, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v34 + 4, v34 + 12);
    swift_bridgeObjectRelease(v39);
    sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "populateTitleIfEmpty: failed to acquire editing session {item: %s}", v34, 0xCu);
    swift_arrayDestroy(v35, 1, &type metadata for Any[8]);
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v34, -1, -1);
  }
  else
  {
    sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

}

id sub_10041C0C0@<X0>(id a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = a1;
  *(_BYTE *)(a2 + 8) = 0;
  return a1;
}

uint64_t sub_10041C0CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t ObjectType;
  uint64_t result;
  char v7;

  ObjectType = swift_getObjectType(a1, a2);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 120))(ObjectType, a2);
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = v7 & 1;
  return result;
}

uint64_t sub_10041C114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t ObjectType;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v5 = *(_QWORD *)(a2 + 56);
  ObjectType = swift_getObjectType(*(_QWORD *)(a2 + 48), a2);
  v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 160))(a1, ObjectType, v5);
  v8 = objc_msgSend(v7, "objectID");
  v9 = swift_allocObject(&unk_100607048, 24, 7);
  *(_QWORD *)(v9 + 16) = v8;
  v10 = sub_10002A750(&qword_100649C18);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  result = Future.init(_:)(sub_10042B5CC, v9);
  *(_BYTE *)a3 = 0;
  *(_QWORD *)(a3 + 8) = v7;
  *(_QWORD *)(a3 + 16) = result;
  return result;
}

uint64_t sub_10041C1CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  ObjectType = swift_getObjectType(a1, a2);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 128))(ObjectType, a2);
  *a3 = result & 1;
  a3[1] = v7;
  a3[2] = v8;
  return result;
}

uint64_t sub_10041C214(uint64_t a1)
{
  return sub_10041C224(a1, 0);
}

uint64_t sub_10041C21C(uint64_t a1)
{
  return sub_10041C224(a1, 1);
}

uint64_t sub_10041C224(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t Strong;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  _BYTE v37[24];
  uint64_t v38[5];
  uint64_t v39;
  _BYTE v40[16];
  _BYTE v41[24];

  v4 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v33 - v8;
  v10 = a1 + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state;
  swift_beginAccess(a1 + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state, v41, 0, 0);
  sub_10002B1E8(v10, (uint64_t)v9, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  v9[*(int *)(v4 + 20)] = a2;
  sub_10002B1E8(v10, (uint64_t)v7, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  v11 = sub_10042AB9C((uint64_t)v7, (uint64_t)v9);
  sub_10001F544((uint64_t)v7, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  if ((v11 & 1) != 0)
    goto LABEL_9;
  if (qword_10063D7C8 != -1)
    swift_once(&qword_10063D7C8, sub_1004191EC);
  v12 = type metadata accessor for Logger(0);
  sub_100012DC4(v12, (uint64_t)qword_10065C128);
  v13 = swift_retain_n(a1, 2);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.debug.getter();
  v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    v17 = swift_slowAlloc(22, -1);
    v36 = swift_slowAlloc(64, -1);
    v38[0] = v36;
    *(_DWORD *)v17 = 136315394;
    v34 = v17 + 4;
    sub_10002B1E8(v10, (uint64_t)v7, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    v35 = v16;
    v18 = sub_10041DDD4();
    v20 = v19;
    sub_10001F544((uint64_t)v7, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    v39 = sub_100027E40(v18, v20, v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40, v34, v17 + 12);
    swift_release_n(a1, 2);
    swift_bridgeObjectRelease(v20);
    *(_WORD *)(v17 + 12) = 2080;
    swift_beginAccess(v9, v37, 0, 0);
    v21 = sub_10041DDD4();
    v23 = v22;
    v39 = sub_100027E40(v21, v22, v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40, v17 + 14, v17 + 22);
    swift_bridgeObjectRelease(v23);
    _os_log_impl((void *)&_mh_execute_header, v14, (os_log_type_t)v35, "TTRReminderListEditingPresenter editing state changed {from: '%s', to: '%s'}", (uint8_t *)v17, 0x16u);
    v24 = v36;
    swift_arrayDestroy(v36, 2, &type metadata for Any[8]);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v17, -1, -1);

  }
  else
  {

    swift_release_n(a1, 2);
  }
  swift_beginAccess(v9, &v39, 0, 0);
  sub_10002B1E8((uint64_t)v9, (uint64_t)v7, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  swift_beginAccess(v10, v38, 33, 0);
  sub_10042B4B4((uint64_t)v7, v10);
  swift_endAccess(v38);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (!Strong)
  {
LABEL_9:
    v31 = (uint64_t)v9;
  }
  else
  {
    v27 = Strong;
    v28 = *(_QWORD *)(a1 + 24);
    ObjectType = swift_getObjectType(Strong, v26);
    v38[3] = v4;
    v38[4] = (uint64_t)&off_100606E48;
    v30 = sub_100028D70(v38);
    sub_10002B1E8((uint64_t)v9, (uint64_t)v30, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t *, uint64_t, uint64_t))(v28 + 8))(a1, &off_100606F60, v38, ObjectType, v28);
    swift_unknownObjectRelease(v27);
    sub_100027F10(v38);
    v31 = (uint64_t)v9;
  }
  return sub_10001F544(v31, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
}

uint64_t sub_10041C600(void (*a1)(char *))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t Strong;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  _BYTE v39[24];
  uint64_t v40[5];
  uint64_t v41;
  _BYTE v42[16];
  _BYTE v43[24];

  v2 = v1;
  v4 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - v8;
  v10 = v1 + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state, v43, 0, 0);
  sub_10002B1E8(v10, (uint64_t)v9, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  a1(v9);
  sub_10002B1E8(v10, (uint64_t)v6, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  v11 = sub_10042AB9C((uint64_t)v6, (uint64_t)v9);
  sub_10001F544((uint64_t)v6, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  if ((v11 & 1) != 0)
    goto LABEL_9;
  if (qword_10063D7C8 != -1)
    swift_once(&qword_10063D7C8, sub_1004191EC);
  v12 = type metadata accessor for Logger(0);
  sub_100012DC4(v12, (uint64_t)qword_10065C128);
  v13 = swift_retain_n(v2, 2);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.debug.getter();
  v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    v17 = swift_slowAlloc(22, -1);
    v38 = swift_slowAlloc(64, -1);
    v40[0] = v38;
    *(_DWORD *)v17 = 136315394;
    v36 = v17 + 4;
    sub_10002B1E8(v10, (uint64_t)v6, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    v37 = v16;
    v18 = sub_10041DDD4();
    v19 = v4;
    v21 = v20;
    sub_10001F544((uint64_t)v6, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    v41 = sub_100027E40(v18, v21, v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42, v36, v17 + 12);
    swift_release_n(v2, 2);
    v22 = v21;
    v4 = v19;
    swift_bridgeObjectRelease(v22);
    *(_WORD *)(v17 + 12) = 2080;
    swift_beginAccess(v9, v39, 0, 0);
    v23 = sub_10041DDD4();
    v25 = v24;
    v41 = sub_100027E40(v23, v24, v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42, v17 + 14, v17 + 22);
    swift_bridgeObjectRelease(v25);
    _os_log_impl((void *)&_mh_execute_header, v14, (os_log_type_t)v37, "TTRReminderListEditingPresenter editing state changed {from: '%s', to: '%s'}", (uint8_t *)v17, 0x16u);
    v26 = v38;
    swift_arrayDestroy(v38, 2, &type metadata for Any[8]);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v17, -1, -1);

  }
  else
  {

    swift_release_n(v2, 2);
  }
  swift_beginAccess(v9, &v41, 0, 0);
  sub_10002B1E8((uint64_t)v9, (uint64_t)v6, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  swift_beginAccess(v10, v40, 33, 0);
  sub_10042B4B4((uint64_t)v6, v10);
  swift_endAccess(v40);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (!Strong)
  {
LABEL_9:
    v33 = (uint64_t)v9;
  }
  else
  {
    v29 = Strong;
    v30 = *(_QWORD *)(v2 + 24);
    ObjectType = swift_getObjectType(Strong, v28);
    v40[3] = v4;
    v40[4] = (uint64_t)&off_100606E48;
    v32 = sub_100028D70(v40);
    sub_10002B1E8((uint64_t)v9, (uint64_t)v32, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t *, uint64_t, uint64_t))(v30 + 8))(v2, &off_100606F60, v40, ObjectType, v30);
    swift_unknownObjectRelease(v29);
    sub_100027F10(v40);
    v33 = (uint64_t)v9;
  }
  return sub_10001F544(v33, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
}

void sub_10041C9E8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char isEscapingClosureAtFileLocation;
  uint64_t v36;
  uint64_t v37;
  uint64_t aBlock[6];

  v3 = v2;
  v6 = type metadata accessor for REMFeatureFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v2 + 40);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 32), v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 464))(a1, ObjectType, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 424))(a1, ObjectType, v10);
  if ((a2 & 1) != 0
    && (v14 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for REMFeatureFlags.undoByAttribute(_:), v6), v15 = REMFeatureFlags.isEnabled.getter(v14), (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6), (v15 & 1) != 0))
  {
    if (v13)
    {
      v16 = qword_10063D7C8;
      swift_retain();
      if (v16 != -1)
        swift_once(&qword_10063D7C8, sub_1004191EC);
      v17 = type metadata accessor for Logger(0);
      sub_100012DC4(v17, (uint64_t)qword_10065C128);
      v18 = swift_retain_n(v13, 2);
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc(12, -1);
        v22 = swift_slowAlloc(32, -1);
        *(_DWORD *)v21 = 136315138;
        aBlock[0] = v22;
        v23 = type metadata accessor for TTRRemindersListViewModel.Item(0);
        v24 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
        v25 = TTRTreeStorageItem.treeItemDescription.getter(v23, v24);
        v27 = v26;
        v37 = sub_100027E40(v25, v26, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, aBlock, v21 + 4, v21 + 12);
        swift_release_n(v13, 2);
        swift_bridgeObjectRelease(v27);
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "TTRReminderListEditingPresenter: register undo for discarding uncommitted reminder {item: %s}", v21, 0xCu);
        swift_arrayDestroy(v22, 1, &type metadata for Any[8]);
        swift_slowDealloc(v22, -1, -1);
        swift_slowDealloc(v21, -1, -1);

      }
      else
      {

        swift_release_n(v13, 2);
      }
      v28 = (void *)objc_opt_self(TTRUndoManager);
      static TTRLocalizableStrings.UndoAction.deleteReminder.getter();
      v30 = v29;
      v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v30);
      v32 = swift_allocObject(&unk_1006070C0, 32, 7);
      *(_QWORD *)(v32 + 16) = v3;
      *(_QWORD *)(v32 + 24) = v13;
      v33 = swift_allocObject(&unk_1006070E8, 32, 7);
      *(_QWORD *)(v33 + 16) = sub_10042C624;
      *(_QWORD *)(v33 + 24) = v32;
      aBlock[4] = (uint64_t)sub_10001B278;
      aBlock[5] = v33;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10001B258;
      aBlock[3] = (uint64_t)&unk_100607100;
      v34 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_retain();
      objc_msgSend(v28, "withActionName:block:", v31, v34, swift_release().n128_f64[0]);

      swift_release_n(v13, 2);
      _Block_release(v34);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v33, "", 102, 471, 92, 1);
      swift_release();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) != 0)
        __break(1u);
    }
  }
  else
  {
    swift_release();
  }
}

uint64_t (*sub_10041CE00(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3))(char *, uint64_t, uint64_t)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  __n128 v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  __n128 v25;
  unint64_t v26;
  Swift::String v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  void *v34;
  id v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t *);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t *);
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  uint64_t v94;
  _QWORD *v95;
  char *v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t (*v101)(char *, uint64_t, uint64_t);
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;

  v4 = v3;
  v90 = a3;
  v88 = a2;
  v94 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v6 = *(_QWORD *)(v94 - 8);
  v7 = __chkstk_darwin(v94);
  v8 = __chkstk_darwin(v7);
  v96 = (char *)&v87 - v9;
  __chkstk_darwin(v8);
  v13 = (char *)&v87 - v12;
  v14 = (uint64_t)_swiftEmptyArrayStorage;
  v104 = (unint64_t)_swiftEmptyArrayStorage;
  v15 = *(_QWORD *)(a1 + 16);
  v98 = v4;
  if (v15)
  {
    v92 = v11;
    v16 = v4[4];
    v17 = v4[5];
    ObjectType = swift_getObjectType(v16, v10);
    v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 464);
    v20 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v100 = *(_QWORD *)(v6 + 72);
    v101 = v19;
    v87 = a1;
    v21 = swift_bridgeObjectRetain(a1);
    v22 = _swiftEmptyArrayStorage;
    v21.n128_u64[0] = 136315138;
    v93 = v21;
    v89 = &type metadata for Any[8];
    v97 = v17;
    v99 = ObjectType;
    v91 = v16;
    while (1)
    {
      sub_10002B1E8(v20, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v24 = v101(v13, ObjectType, v17);
      v25 = swift_release();
      if (!v24)
        break;
      v102 = _typeName(_:qualified:)(*v4, 0);
      v103 = v26;
      v27._countAndFlagsBits = 0x746964652DLL;
      v27._object = (void *)0xE500000000000000;
      String.append(_:)(v27);
      v28 = v103;
      v29 = sub_1003003A4((uint64_t)v13, v102, v103);
      v31 = v30;
      swift_bridgeObjectRelease(v28);
      if (v29)
      {
        swift_unknownObjectRetain(v29);
        if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
          v22 = sub_100455CA0(0, v22[2] + 1, 1, v22);
        v33 = v22[2];
        v32 = v22[3];
        if (v33 >= v32 >> 1)
          v22 = sub_100455CA0((_QWORD *)(v32 > 1), v33 + 1, 1, v22);
        v22[2] = v33 + 1;
        v23 = &v22[2 * v33];
        v23[4] = v29;
        v23[5] = v31;
        swift_unknownObjectRelease(v29);
        v4 = v98;
        ObjectType = v99;
LABEL_4:
        sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        goto LABEL_5;
      }
      v39 = (uint64_t)v96;
      if (qword_10063D7C8 != -1)
        swift_once(&qword_10063D7C8, sub_1004191EC);
      v40 = type metadata accessor for Logger(0);
      sub_100012DC4(v40, (uint64_t)qword_10065C128);
      v41 = sub_10002B1E8((uint64_t)v13, v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v42 = Logger.logObject.getter(v41);
      v43 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v42, v43))
      {

        sub_10001F544(v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_27:
        v17 = v97;
        ObjectType = v99;
        goto LABEL_5;
      }
      v44 = v39;
      v45 = swift_slowAlloc(12, -1);
      v46 = swift_slowAlloc(32, -1);
      v102 = v46;
      *(_DWORD *)v45 = v93.n128_u32[0];
      v47 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
      v48 = TTRTreeStorageItem.treeItemDescription.getter(v94, v47);
      v50 = v49;
      *(_QWORD *)(v45 + 4) = sub_100027E40(v48, v49, &v102);
      swift_bridgeObjectRelease(v50);
      sub_10001F544(v44, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Skip edit; failed to create editing session {item: %s}",
        (uint8_t *)v45,
        0xCu);
      swift_arrayDestroy(v46, 1, &type metadata for Any[8]);
      v51 = v46;
      v4 = v98;
      swift_slowDealloc(v51, -1, -1);
      swift_slowDealloc(v45, -1, -1);

      sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v17 = v97;
      ObjectType = v99;
LABEL_5:
      v20 += v100;
      if (!--v15)
      {
        swift_bridgeObjectRelease(v87);
        v14 = v104;
        goto LABEL_30;
      }
    }
    v34 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v17 + 248))(v13, ObjectType, v17, v25);
    if (!v34)
    {
      v95 = v22;
      if (qword_10063D7C8 != -1)
        swift_once(&qword_10063D7C8, sub_1004191EC);
      v52 = type metadata accessor for Logger(0);
      sub_100012DC4(v52, (uint64_t)qword_10065C128);
      v53 = v92;
      v54 = sub_10002B1E8((uint64_t)v13, v92, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v55 = Logger.logObject.getter(v54);
      v56 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v55, v56))
      {
        v57 = swift_slowAlloc(12, -1);
        v58 = swift_slowAlloc(32, -1);
        v102 = v58;
        *(_DWORD *)v57 = v93.n128_u32[0];
        v59 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
        v60 = TTRTreeStorageItem.treeItemDescription.getter(v94, v59);
        v62 = v61;
        *(_QWORD *)(v57 + 4) = sub_100027E40(v60, v61, &v102);
        swift_bridgeObjectRelease(v62);
        sub_10001F544(v53, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "Skip edit; failed to get REMReminder {item: %s}",
          (uint8_t *)v57,
          0xCu);
        swift_arrayDestroy(v58, 1, v89);
        v63 = v58;
        v4 = v98;
        swift_slowDealloc(v63, -1, -1);
        swift_slowDealloc(v57, -1, -1);

      }
      else
      {

        sub_10001F544(v53, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v22 = v95;
      goto LABEL_27;
    }
    v35 = v34;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
    v37 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v36 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v37 >= v36 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v37 + 1, 1);
    v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v35);
    specialized Array._endMutation()(v38);

    v17 = v97;
    goto LABEL_4;
  }
  v22 = _swiftEmptyArrayStorage;
LABEL_30:
  v64 = v22[2];
  v65 = v88;
  if (!((unint64_t)v14 >> 62))
  {
    v66 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    v67 = v64 + v66;
    if (!__OFADD__(v64, v66))
      goto LABEL_32;
LABEL_50:
    __break(1u);
LABEL_51:
    if (v64 < 0)
      v86 = v64;
    else
      v86 = v64 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v64);
    v79 = _CocoaArrayWrapper.endIndex.getter(v86);
    swift_bridgeObjectRelease(v64);
    goto LABEL_40;
  }
  if (v14 < 0)
    v84 = v14;
  else
    v84 = v14 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v14);
  v85 = _CocoaArrayWrapper.endIndex.getter(v84);
  swift_bridgeObjectRelease(v14);
  v67 = v64 + v85;
  if (__OFADD__(v64, v85))
    goto LABEL_50;
LABEL_32:
  if (v67 < 1)
  {
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v14);
    return 0;
  }
  v101 = (uint64_t (*)(char *, uint64_t, uint64_t))v67;
  v68 = v22[2];
  if (v68)
  {
    v69 = v22 + 5;
    do
    {
      v70 = *(v69 - 1);
      v71 = *v69;
      v72 = swift_getObjectType(v70, v10);
      v73 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128))(v71 + 72);
      v74 = swift_unknownObjectRetain(v70);
      v73(&v102, v72, v71, v74);
      v65(&v102);
      v75 = sub_100027F10(&v102);
      v76 = *(_QWORD *)TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor(v75);
      v77 = *(_QWORD *)TTRRemindersListEditingSessionDisplayTargets.reminderEditingComponents.unsafeMutableAddressor();
      if ((v77 & ~v76) == 0)
        v77 = 0;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 104))(v77 | v76, v72, v71);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v71 + 112))(0, v72, v71);
      swift_unknownObjectRelease(v70);
      v69 += 2;
      --v68;
    }
    while (v68);
  }
  swift_bridgeObjectRelease(v22);
  v64 = v104;
  if (v104 >> 62)
    goto LABEL_51;
  v79 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_40:
  if (v79)
  {
    v80 = v98[7];
    v81 = swift_getObjectType(v98[6], v78);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v80 + 48))(&v102, v64, v81, v80);
    v82 = swift_bridgeObjectRelease(v64);
    ((void (*)(uint64_t *, __n128))v65)(&v102, v82);
    sub_100027F10(&v102);
  }
  else
  {
    swift_bridgeObjectRelease(v64);
  }
  return v101;
}

uint64_t sub_10041D610(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)@<X0>(uint64_t@<X8>);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE v67[32];

  v59 = a1;
  v62 = type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay(0);
  v60 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v51 = (uint64_t)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v50 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v65 = (uint64_t)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v61 = (uint64_t)&v47 - v12;
  result = __chkstk_darwin(v11);
  v17 = (char *)&v47 - v16;
  v18 = *(_QWORD *)(a2 + 16);
  if (v18)
  {
    v48 = v5;
    v54 = v2;
    v19 = (_QWORD *)(v2 + 72);
    v20 = *(unsigned __int8 *)(v15 + 80);
    v21 = a2 + ((v20 + 32) & ~v20);
    v52 = *(_QWORD *)(v15 + 72);
    v57 = ((v20 + 16) & ~v20) + v14;
    v58 = (v20 + 16) & ~v20;
    v56 = v20 | 7;
    v49 = a2;
    swift_bridgeObjectRetain(a2);
    v22 = 0;
    v23 = 0;
    v64 = v18 - 1;
    v53 = (void *)0x8000000100579120;
    v55 = v17;
    v24 = v65;
    while (1)
    {
      v63 = v21;
      v25 = sub_10002B1E8(v21, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v25);
      v26 = v61;
      sub_10002B1E8((uint64_t)v17, v61, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v27 = (uint64_t)v10;
      sub_10002B1E8(v26, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v28 = swift_allocObject(&unk_100606FF8, v57, v56);
      sub_10001F580(v26, v28 + v58, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1000381B8((uint64_t)v23, v22);
      swift_beginAccess(v19, v67, 33, 0);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v19);
      v66 = *v19;
      v30 = v66;
      *v19 = 0x8000000000000000;
      v32 = sub_1002AA39C(v24);
      v33 = *(_QWORD *)(v30 + 16);
      v34 = (v31 & 1) == 0;
      v35 = v33 + v34;
      if (__OFADD__(v33, v34))
        break;
      v36 = v31;
      if (*(_QWORD *)(v30 + 24) >= v35)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1002AEAD4();
          v30 = v66;
        }
      }
      else
      {
        sub_1004581E8(v35, isUniquelyReferenced_nonNull_native);
        v30 = v66;
        v37 = sub_1002AA39C(v65);
        if ((v36 & 1) != (v38 & 1))
          goto LABEL_19;
        v32 = v37;
      }
      v10 = (char *)v27;
      v39 = *v19;
      *v19 = v30;
      swift_bridgeObjectRelease(v39);
      v40 = (_QWORD *)*v19;
      if ((v36 & 1) != 0)
      {
        sub_10001F544(v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v41 = *(_QWORD *)(v60 + 72) * v32;
        swift_bridgeObjectRetain(v40);
        v17 = v55;
      }
      else
      {
        v42 = v51;
        sub_10002B1E8(v27, v51, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        *(_QWORD *)(v42 + *(int *)(v62 + 20)) = 0;
        swift_bridgeObjectRetain(v40);
        sub_10001F544(v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v40[(v32 >> 6) + 8] |= 1 << v32;
        sub_10002B1E8(v65, v40[6] + *(_QWORD *)(v50 + 72) * v32, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        v41 = *(_QWORD *)(v60 + 72) * v32;
        sub_10001F580(v42, v40[7] + v41, type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay);
        v43 = v40[2];
        v44 = __OFADD__(v43, 1);
        v45 = v43 + 1;
        v17 = v55;
        if (v44)
          goto LABEL_18;
        v40[2] = v45;
      }
      *(_QWORD *)(v40[7] + v41 + *(int *)(v62 + 20)) |= v59;
      swift_endAccess(v67);
      swift_bridgeObjectRelease(v40);
      sub_10001F544(v65, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v46._object = v53;
      v46._countAndFlagsBits = 0xD000000000000017;
      TTRDeferredAction.scheduleNextRunLoop(reason:)(v46);
      sub_10001F544((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (!v64)
      {
        swift_release(v28);
        return swift_bridgeObjectRelease(v49);
      }
      v21 = v63 + v52;
      --v64;
      v22 = v28;
      v23 = sub_10042B4FC;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    sub_10001F544(v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v48);
    __break(1u);
  }
  return result;
}

